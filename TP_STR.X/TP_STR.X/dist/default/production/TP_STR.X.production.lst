

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 23 15:39:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57                           	dabs	1,0x82,1,_Personne
    58                           	dabs	1,0x603,1,_STKPTR_T6
    59                           	dabs	1,0x503,1,_STKPTR_T5
    60                           	dabs	1,0x403,1,_STKPTR_T4
    61                           	dabs	1,0x303,1,_STKPTR_T3
    62                           	dabs	1,0x203,1,_STKPTR_T2
    63                           	dabs	1,0x103,1,_STKPTR_T1
    64                           	dabs	1,0x60,1,_W_TEMPORAIRE
    65                           	dabs	1,0x100,66,_contexte1
    66                           	dabs	1,0x69,6,_queue
    67                           	dabs	1,0x71,2,_Tick_Count
    68                           	dabs	1,0x83,1,_Valeur
    69                           	dabs	1,0x82,1,_Operator
    70                           	dabs	1,0x81,1,_TEST
    71                           	dabs	1,0x80,1,_RXTX_libre
    72                           	dabs	1,0x7F,1,_n_octet_badge
    73                           	dabs	1,0x74,1,_batterie
    74                           	dabs	1,0x73,1,_vitesse
    75                           	dabs	1,0x70,1,_pointeur_de_tache
    76                           	dabs	1,0x6F,1,_tache_active
    77                           	dabs	1,0x68,1,_TP_y
    78                           	dabs	1,0x67,1,_TP_x
    79                           	dabs	1,0x66,1,_TP_appui
    80                           	dabs	1,0x65,1,_DEMARRAGE
    81                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    82                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    83                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    84                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    85                           	dabs	1,0x75,10,_badge
    86                           	dabs	1,0x200,66,_contexte2
    87                           	dabs	1,0x300,66,_contexte3
    88                           	dabs	1,0x400,66,_contexte4
    89                           	dabs	1,0x500,66,_contexte5
    90                           	dabs	1,0x600,66,_contexte6
    91   000000                     
    92                           ; Generated 06/04/2022 GMT
    93                           ; 
    94                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F87K22 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126   000000                     
   127 ;;Init@sem	offset=-1 (param)
   128 ;;Init@sem	offset=-1 (param)
   129   000000                     _TMR0	set	4054
   130                           
   131                           ; 1 bytes @ 0x23
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 6 in file "main.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called: 8
   157 ;; This function calls:
   158 ;;		_Init
   159 ;;		_initialisation_des_ports
   160 ;;		_initialisation_du_systeme
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167   002366                     __ptext0:
   168                           	callstack 0
   169   000000                     _T0IF	set	32658
   170   000000                     _INTCON2bits	set	4081
   171   000000                     _STATUS	set	4056
   172   000000                     _WREG	set	4072
   173   000000                     _BSR	set	4064
   174   000000                     _FSR0H	set	4074
   175   000000                     _FSR0L	set	4073
   176   000000                     _STKPTR	set	4092
   177   000000                     _FSR1H	set	4066
   178   000000                     _FSR1L	set	4065
   179   000000                     _FSR2H	set	4058
   180   000000                     _FSR2L	set	4057
   181   000000                     _PRODH	set	4084
   182   000000                     _PRODL	set	4083
   183   000000                     _TBLPTRU	set	4088
   184   000000                     _TBLPTRH	set	4087
   185   000000                     _TBLPTRL	set	4086
   186   000000                     _TABLAT	set	4085
   187   000000                     _TOSL	set	4093
   188   000000                     _TOSH	set	4094
   189   000000                     _TOSU	set	4095
   190   002366                     _main:
   191                           	callstack 23
   192                           
   193                           ;main.c: 8: initialisation_des_ports();
   194                           
   195                           ;incstack = 0
   196   002366  ECDA  F010         	call	_initialisation_des_ports	;wreg free
   197                           
   198                           ;main.c: 9: initialisation_du_systeme();
   199   00236A  EC5E  F00A         	call	_initialisation_du_systeme	;wreg free
   200                           
   201                           ;main.c: 10: Init(1);
   202   00236E  0E01               	movlw	1
   203   002370  6EE6               	movwf	postinc1,c
   204   002372  EC70  F011         	call	_Init	;wreg free
   205                           
   206                           ;main.c: 13: T0CONbits.TMR0ON=1;
   207   002376  8ED5               	bsf	213,7,c	;volatile
   208                           
   209                           ;main.c: 14: T0IF=1;
   210   002378  84F2               	bsf	4082,2,c	;volatile
   211                           
   212                           ;main.c: 15: (INTCONbits.GIE = 1);
   213   00237A  8EF2               	bsf	242,7,c	;volatile
   214   00237C                     l5033:
   215                           
   216                           ;main.c: 19: __nop();
   217   00237C  F000               	nop	
   218   00237E  D7FE               	goto	l5033
   219   002380                     __end_of_main:
   220                           	callstack 0
   221                           
   222                           	psect	nvCOMRAM
   223   000030                     __pnvCOMRAM:
   224                           	callstack 0
   225   000030                     _fptr:
   226                           	callstack 0
   227   000030                     	ds	3
   228   000033                     _puc:
   229                           	callstack 0
   230   000033                     	ds	2
   231   000035                     _val_tos:
   232                           	callstack 0
   233   000035                     	ds	2
   234   000000                     _ANCON1bits	set	3876
   235   000000                     _ANCON0bits	set	3877
   236   000000                     _TXSTA1	set	4012
   237   000000                     _LATJ	set	3985
   238   000000                     _T0CON	set	4053
   239   000000                     _ADCON0bits	set	4034
   240   000000                     _INTCONbits	set	4082
   241   000000                     _T0IE	set	32661
   242   000000                     _ANCON2	set	3875
   243   000000                     _ANCON1	set	3876
   244   000000                     _ANCON0	set	3877
   245   000000                     _MEMCON	set	3878
   246   000000                     _T0CONbits	set	4053
   247   000000                     _PADCFG1bits	set	3923
   248   000000                     _LATCbits	set	3979
   249   000000                     _LATDbits	set	3980
   250   000000                     _LATGbits	set	3983
   251   000000                     _LATJbits	set	3985
   252   000000                     _LATH	set	3984
   253   000000                     _TRISCbits	set	3988
   254   000000                     _TRISDbits	set	3989
   255   000000                     _TRISGbits	set	3992
   256   000000                     _TRISJ	set	3994
   257   000000                     _TRISH	set	3993
   258   000000                     _PIR1bits	set	3998
   259   000000                     _TXREG1	set	4013
   260   000000                     _ADCON2	set	4032
   261   000000                     _ADCON1	set	4033
   262   000000                     _BAUDCON1	set	3941
   263   000000                     _PORTBbits	set	3969
   264   000000                     _SPBRGH1	set	4052
   265   000000                     _ADRESH	set	4036
   266   000000                     _ADRESL	set	4035
   267   000000                     _ADCON0	set	4034
   268   000000                     _POSTINC0	set	4078
   269   000000                     _POSTINC1	set	4070
   270   000000                     _PCLATH	set	4090
   271   000000                     _PCLATU	set	4091
   272   000000                     _SPBRG1	set	4015
   273   000000                     _PORTDbits	set	3971
   274   000000                     _PORTEbits	set	3972
   275   000000                     _PORTH	set	3975
   276   000000                     _RCSTA1	set	4011
   277   000000                     _TXSTA1bits	set	4012
   278                           
   279                           	psect	smallconst
   280   001000                     __psmallconst:
   281                           	callstack 0
   282   001000  00                 	db	0
   283   001001                     STR_25:
   284   001001  41                 	db	65	;'A'
   285   001002  54                 	db	84	;'T'
   286   001003  54                 	db	84	;'T'
   287   001004  45                 	db	69	;'E'
   288   001005  4E                 	db	78	;'N'
   289   001006  54                 	db	84	;'T'
   290   001007  49                 	db	73	;'I'
   291   001008  4F                 	db	79	;'O'
   292   001009  4E                 	db	78	;'N'
   293   00100A  20                 	db	32
   294   00100B  76                 	db	118	;'v'
   295   00100C  6F                 	db	111	;'o'
   296   00100D  75                 	db	117	;'u'
   297   00100E  73                 	db	115	;'s'
   298   00100F  20                 	db	32
   299   001010  65                 	db	101	;'e'
   300   001011  74                 	db	116	;'t'
   301   001012  65                 	db	101	;'e'
   302   001013  73                 	db	115	;'s'
   303   001014  20                 	db	32
   304   001015  70                 	db	112	;'p'
   305   001016  6C                 	db	108	;'l'
   306   001017  65                 	db	101	;'e'
   307   001018  69                 	db	105	;'i'
   308   001019  6E                 	db	110	;'n'
   309   00101A  21                 	db	33
   310   00101B  21                 	db	33
   311   00101C  21                 	db	33
   312   00101D  00                 	db	0
   313   00101E                     STR_15:
   314   00101E  20                 	db	32
   315   00101F  41                 	db	65	;'A'
   316   001020  55                 	db	85	;'U'
   317   001021  43                 	db	67	;'C'
   318   001022  55                 	db	85	;'U'
   319   001023  4E                 	db	78	;'N'
   320   001024  20                 	db	32
   321   001025  20                 	db	32
   322   001026  20                 	db	32
   323   001027  20                 	db	32
   324   001028  20                 	db	32
   325   001029  20                 	db	32
   326   00102A  20                 	db	32
   327   00102B  20                 	db	32
   328   00102C  20                 	db	32
   329   00102D  20                 	db	32
   330   00102E  20                 	db	32
   331   00102F  20                 	db	32
   332   001030  20                 	db	32
   333   001031  20                 	db	32
   334   001032  00                 	db	0
   335   001033                     STR_26:
   336   001033  52                 	db	82	;'R'
   337   001034  4F                 	db	79	;'O'
   338   001035  55                 	db	85	;'U'
   339   001036  45                 	db	69	;'E'
   340   001037  53                 	db	83	;'S'
   341   001038  42                 	db	66	;'B'
   342   001039  59                 	db	89	;'Y'
   343   00103A  47                 	db	71	;'G'
   344   00103B  4E                 	db	78	;'N'
   345   00103C  4F                 	db	79	;'O'
   346   00103D  4C                 	db	76	;'L'
   347   00103E  45                 	db	69	;'E'
   348   00103F  53                 	db	83	;'S'
   349   001040  00                 	db	0
   350   001041                     STR_10:
   351   001041  54                 	db	84	;'T'
   352   001042  65                 	db	101	;'e'
   353   001043  6D                 	db	109	;'m'
   354   001044  70                 	db	112	;'p'
   355   001045  2E                 	db	46
   356   001046  20                 	db	32
   357   001047  48                 	db	72	;'H'
   358   001048  75                 	db	117	;'u'
   359   001049  69                 	db	105	;'i'
   360   00104A  6C                 	db	108	;'l'
   361   00104B  65                 	db	101	;'e'
   362   00104C  3A                 	db	58	;':'
   363   00104D  00                 	db	0
   364   00104E                     STR_19:
   365   00104E  58                 	db	88	;'X'
   366   00104F  2D                 	db	45
   367   001050  4A                 	db	74	;'J'
   368   001051  6F                 	db	111	;'o'
   369   001052  79                 	db	121	;'y'
   370   001053  73                 	db	115	;'s'
   371   001054  74                 	db	116	;'t'
   372   001055  69                 	db	105	;'i'
   373   001056  63                 	db	99	;'c'
   374   001057  6B                 	db	107	;'k'
   375   001058  3A                 	db	58	;':'
   376   001059  00                 	db	0
   377   00105A                     STR_20:
   378   00105A  59                 	db	89	;'Y'
   379   00105B  2D                 	db	45
   380   00105C  4A                 	db	74	;'J'
   381   00105D  6F                 	db	111	;'o'
   382   00105E  79                 	db	121	;'y'
   383   00105F  73                 	db	115	;'s'
   384   001060  74                 	db	116	;'t'
   385   001061  69                 	db	105	;'i'
   386   001062  63                 	db	99	;'c'
   387   001063  6B                 	db	107	;'k'
   388   001064  3A                 	db	58	;':'
   389   001065  00                 	db	0
   390   001066                     STR_9:
   391   001066  54                 	db	84	;'T'
   392   001067  65                 	db	101	;'e'
   393   001068  6D                 	db	109	;'m'
   394   001069  70                 	db	112	;'p'
   395   00106A  2E                 	db	46
   396   00106B  20                 	db	32
   397   00106C  45                 	db	69	;'E'
   398   00106D  61                 	db	97	;'a'
   399   00106E  75                 	db	117	;'u'
   400   00106F  3A                 	db	58	;':'
   401   001070  00                 	db	0
   402   001071                     STR_13:
   403   001071  42                 	db	66	;'B'
   404   001072  61                 	db	97	;'a'
   405   001073  74                 	db	116	;'t'
   406   001074  74                 	db	116	;'t'
   407   001075  65                 	db	101	;'e'
   408   001076  72                 	db	114	;'r'
   409   001077  69                 	db	105	;'i'
   410   001078  65                 	db	101	;'e'
   411   001079  3A                 	db	58	;':'
   412   00107A  00                 	db	0
   413   00107B                     STR_5:
   414   00107B  56                 	db	86	;'V'
   415   00107C  69                 	db	105	;'i'
   416   00107D  74                 	db	116	;'t'
   417   00107E  65                 	db	101	;'e'
   418   00107F  73                 	db	115	;'s'
   419   001080  73                 	db	115	;'s'
   420   001081  65                 	db	101	;'e'
   421   001082  3A                 	db	58	;':'
   422   001083  00                 	db	0
   423   001084                     STR_16:
   424   001084  4F                 	db	79	;'O'
   425   001085  70                 	db	112	;'p'
   426   001086  65                 	db	101	;'e'
   427   001087  72                 	db	114	;'r'
   428   001088  61                 	db	97	;'a'
   429   001089  74                 	db	116	;'t'
   430   00108A  6F                 	db	111	;'o'
   431   00108B  72                 	db	114	;'r'
   432   00108C  00                 	db	0
   433   00108D                     STR_1:
   434   00108D  4D                 	db	77	;'M'
   435   00108E  61                 	db	97	;'a'
   436   00108F  72                 	db	114	;'r'
   437   001090  63                 	db	99	;'c'
   438   001091  68                 	db	104	;'h'
   439   001092  65                 	db	101	;'e'
   440   001093  3A                 	db	58	;':'
   441   001094  00                 	db	0
   442   001095                     STR_14:
   443   001095  42                 	db	66	;'B'
   444   001096  61                 	db	97	;'a'
   445   001097  64                 	db	100	;'d'
   446   001098  67                 	db	103	;'g'
   447   001099  65                 	db	101	;'e'
   448   00109A  3A                 	db	58	;':'
   449   00109B  00                 	db	0
   450   00109C                     STR_8:
   451   00109C  53                 	db	83	;'S'
   452   00109D  69                 	db	105	;'i'
   453   00109E  65                 	db	101	;'e'
   454   00109F  67                 	db	103	;'g'
   455   0010A0  65                 	db	101	;'e'
   456   0010A1  3A                 	db	58	;':'
   457   0010A2  00                 	db	0
   458   0010A3                     STR_22:
   459   0010A3  43                 	db	67	;'C'
   460   0010A4  48                 	db	72	;'H'
   461   0010A5  41                 	db	65	;'A'
   462   0010A6  52                 	db	82	;'R'
   463   0010A7  47                 	db	71	;'G'
   464   0010A8  45                 	db	69	;'E'
   465   0010A9  00                 	db	0
   466   0010AA                     STR_17:
   467   0010AA  20                 	db	32
   468   0010AB  41                 	db	65	;'A'
   469   0010AC  44                 	db	68	;'D'
   470   0010AD  4D                 	db	77	;'M'
   471   0010AE  49                 	db	73	;'I'
   472   0010AF  4E                 	db	78	;'N'
   473   0010B0  00                 	db	0
   474   0010B1                     STR_6:
   475   0010B1  28                 	db	40
   476   0010B2  28                 	db	40
   477   0010B3  21                 	db	33
   478   0010B4  29                 	db	41
   479   0010B5  29                 	db	41
   480   0010B6  00                 	db	0
   481   0010B7                     STR_11:
   482   0010B7  43                 	db	67	;'C'
   483   0010B8  68                 	db	104	;'h'
   484   0010B9  6F                 	db	111	;'o'
   485   0010BA  63                 	db	99	;'c'
   486   0010BB  3A                 	db	58	;':'
   487   0010BC  00                 	db	0
   488   0010BD                     STR_18:
   489   0010BD  41                 	db	65	;'A'
   490   0010BE  55                 	db	85	;'U'
   491   0010BF  43                 	db	67	;'C'
   492   0010C0  55                 	db	85	;'U'
   493   0010C1  4E                 	db	78	;'N'
   494   0010C2  00                 	db	0
   495   0010C3                     STR_21:
   496   0010C3  56                 	db	86	;'V'
   497   0010C4  49                 	db	73	;'I'
   498   0010C5  44                 	db	68	;'D'
   499   0010C6  45                 	db	69	;'E'
   500   0010C7  00                 	db	0
   501   0010C8                     STR_24:
   502   0010C8  20                 	db	32
   503   0010C9  79                 	db	121	;'y'
   504   0010CA  3D                 	db	61	;'='
   505   0010CB  00                 	db	0
   506   0010CC                     STR_4:
   507   0010CC  4E                 	db	78	;'N'
   508   0010CD  20                 	db	32
   509   0010CE  00                 	db	0
   510   0010CF                     STR_23:
   511   0010CF  78                 	db	120	;'x'
   512   0010D0  3D                 	db	61	;'='
   513   0010D1  00                 	db	0
   514   0010D2                     STR_3:
   515   0010D2  41                 	db	65	;'A'
   516   0010D3  52                 	db	82	;'R'
   517   0010D4  00                 	db	0
   518   0010D5                     STR_2:
   519   0010D5  41                 	db	65	;'A'
   520   0010D6  56                 	db	86	;'V'
   521   0010D7  00                 	db	0
   522   0010D8  00                 	db	0	; dummy byte at the end
   523   000000                     
   524                           ; #config settings
   525                           
   526                           	psect	cinit
   527   00242E                     __pcinit:
   528                           	callstack 0
   529   00242E                     start_initialization:
   530                           	callstack 0
   531   00242E                     __initialization:
   532                           	callstack 0
   533                           
   534                           ; Clear objects allocated to COMRAM (5 bytes)
   535   00242E  6A3B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   536   002430  6A3A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   537   002432  6A39               	clrf	(__pbssCOMRAM+2)& (0+255),c
   538   002434  6A38               	clrf	(__pbssCOMRAM+1)& (0+255),c
   539   002436  6A37               	clrf	__pbssCOMRAM& (0+255),c
   540   002438                     end_of_initialization:
   541                           	callstack 0
   542   002438                     __end_of__initialization:
   543                           	callstack 0
   544   002438  0100               	movlb	0
   545   00243A  EFB3  F011         	goto	_main	;jump to C main() function
   546                           
   547                           	psect	bssCOMRAM
   548   000037                     __pbssCOMRAM:
   549                           	callstack 0
   550   000037                     _tc:
   551                           	callstack 0
   552   000037                     	ds	3
   553   00003A                     _Val_sem_rxtx:
   554                           	callstack 0
   555   00003A                     	ds	1
   556   00003B                     _Val_sem_cna:
   557                           	callstack 0
   558   00003B                     	ds	1
   559                           
   560                           	psect	cstackCOMRAM
   561   000001                     __pcstackCOMRAM:
   562                           	callstack 0
   563   000001                     ?___awdiv:
   564                           	callstack 0
   565   000001                     ?___awmod:
   566                           	callstack 0
   567   000001                     ?___lwdiv:
   568                           	callstack 0
   569   000001                     lecture_8bit_analogique@ret:
   570                           	callstack 0
   571   000001                     write_d_aff@data:
   572                           	callstack 0
   573   000001                     write_c_aff@command:
   574                           	callstack 0
   575   000001                     check_status_ok@res:
   576                           	callstack 0
   577   000001                     delai_us_char@ucdelai:
   578                           	callstack 0
   579   000001                     tp_delai@itpd:
   580                           	callstack 0
   581   000001                     tache4@a:
   582                           	callstack 0
   583   000001                     tache5@a:
   584                           	callstack 0
   585   000001                     vitesseAdmin@a:
   586                           	callstack 0
   587   000001                     stid_delai_us@isdu:
   588                           	callstack 0
   589   000001                     ___awdiv@dividend:
   590                           	callstack 0
   591   000001                     ___awmod@dividend:
   592                           	callstack 0
   593   000001                     ___lwdiv@dividend:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x0
   597   000001                     	ds	1
   598   000002                     lecture_8bit_analogique@channel:
   599                           	callstack 0
   600   000002                     wait_status_ok@err:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x1
   604   000002                     	ds	1
   605   000003                     ??_vitesseAdmin:
   606   000003                     wait_status_ok@status:
   607                           	callstack 0
   608   000003                     lecture_normale@stid_id:
   609                           	callstack 0
   610   000003                     ___awdiv@divisor:
   611                           	callstack 0
   612   000003                     ___awmod@divisor:
   613                           	callstack 0
   614   000003                     ___lwdiv@divisor:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2
   618   000003                     	ds	1
   619   000004                     wait_status_ok@res:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x3
   623   000004                     	ds	1
   624   000005                     command@cmd:
   625                           	callstack 0
   626   000005                     d1command@cmd:
   627                           	callstack 0
   628   000005                     d2command@d2:
   629                           	callstack 0
   630   000005                     lecture_normale@temps_attente:
   631                           	callstack 0
   632   000005                     ___awdiv@counter:
   633                           	callstack 0
   634   000005                     ___awmod@counter:
   635                           	callstack 0
   636   000005                     ___lwdiv@quotient:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x4
   640   000005                     	ds	1
   641   000006                     d1command@d1:
   642                           	callstack 0
   643   000006                     d2command@cmd:
   644                           	callstack 0
   645   000006                     lecture_normale@n_octet:
   646                           	callstack 0
   647   000006                     ___awdiv@sign:
   648                           	callstack 0
   649   000006                     ___awmod@sign:
   650                           	callstack 0
   651   000006                     vitesseAdmin@b:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x5
   655   000006                     	ds	1
   656   000007                     d1command@res:
   657                           	callstack 0
   658   000007                     d2command@d1:
   659                           	callstack 0
   660   000007                     lecture_normale@n_bit:
   661                           	callstack 0
   662   000007                     ___lwdiv@counter:
   663                           	callstack 0
   664   000007                     ___awdiv@quotient:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x6
   668   000007                     	ds	1
   669   000008                     ??_tache2:
   670   000008                     d2command@res:
   671                           	callstack 0
   672   000008                     draw_char@dccar:
   673                           	callstack 0
   674   000008                     draw_hex8@octet:
   675                           	callstack 0
   676   000008                     lecture_normale@octet:
   677                           	callstack 0
   678   000008                     draw_string@tableau:
   679                           	callstack 0
   680   000008                     vitesseAdmin@c:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x7
   684   000008                     	ds	1
   685   000009                     ??_draw_dec8:
   686   000009                     tache6@n:
   687                           	callstack 0
   688   000009                     initialisation_afficheur@error_count:
   689                           	callstack 0
   690   000009                     draw_hex8@c:
   691                           	callstack 0
   692   000009                     goto_lico@colonne:
   693                           	callstack 0
   694   000009                     plot1@y:
   695                           	callstack 0
   696   000009                     clear_text@add:
   697                           	callstack 0
   698   000009                     clear_graphics@add:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x8
   702   000009                     	ds	1
   703   00000A                     ??_goto_lico:
   704   00000A                     ??_plot1:
   705   00000A                     draw_dec8@unit:
   706                           	callstack 0
   707   00000A                     tache2@ix:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x9
   711   00000A                     	ds	1
   712   00000B                     draw_dec8@octet:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0xA
   716   00000B                     	ds	1
   717   00000C                     draw_dec8@cent:
   718                           	callstack 0
   719   00000C                     goto_lico@ligne:
   720                           	callstack 0
   721   00000C                     tache2@iy:
   722                           	callstack 0
   723   00000C                     plot1@add:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0xB
   727   00000C                     	ds	1
   728   00000D                     draw_dec8@dix:
   729                           	callstack 0
   730   00000D                     goto_lico@adr:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0xC
   734   00000D                     	ds	1
   735   00000E                     tache2@hx:
   736                           	callstack 0
   737   00000E                     draw_dec8@c:
   738                           	callstack 0
   739   00000E                     plot1@x:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0xD
   743   00000E                     	ds	1
   744   00000F                     tache2@lx:
   745                           	callstack 0
   746   00000F                     clear_line@line:
   747                           	callstack 0
   748   00000F                     draw_square@y1:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0xE
   752   00000F                     	ds	1
   753   000010                     tache2@hy:
   754                           	callstack 0
   755   000010                     clear_line@column:
   756                           	callstack 0
   757   000010                     draw_square@x2:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0xF
   761   000010                     	ds	1
   762   000011                     tache2@ly:
   763                           	callstack 0
   764   000011                     draw_square@y2:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x10
   768   000011                     	ds	1
   769   000012                     draw_square@x1:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x11
   773   000012                     	ds	1
   774   000013                     draw_square@x:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x12
   778   000013                     	ds	1
   779   000014                     draw_square@y:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x13
   783   000014                     	ds	1
   784   000015                     ??_tache1:
   785                           
   786                           ; 1 bytes @ 0x14
   787   000015                     	ds	2
   788   000017                     ??_fonction_d_interruption:
   789                           
   790                           ; 1 bytes @ 0x16
   791   000017                     	ds	12
   792   000023                     initialisation_du_systeme@temp:
   793                           	callstack 0
   794                           
   795                           ; 1 bytes @ 0x22
   796   000023                     	ds	1
   797   000024                     
   798 ;; *************** function _initialisation_du_systeme *****************
   799 ;; Defined at:
   800 ;;		line 131 in file "systeme.c"
   801 ;; Parameters:    Size  Location     Type
   802 ;;		None
   803 ;; Auto vars:     Size  Location     Type
   804 ;;  temp            1   34[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;                  1    wreg      void 
   807 ;; Registers used:
   808 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;Total ram usage:        1 bytes
   819 ;; Hardware stack levels used: 1
   820 ;; Hardware stack levels required when called: 7
   821 ;; This function calls:
   822 ;;		Nothing
   823 ;; This function is called by:
   824 ;;		_main
   825 ;; This function uses a non-reentrant model
   826 ;;
   827                           
   828                           	psect	text1
   829   0014BC                     __ptext1:
   830                           	callstack 0
   831   0014BC                     _initialisation_du_systeme:
   832                           	callstack 23
   833                           
   834                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   835                           
   836                           ;incstack = 0
   837   0014BC  0E01               	movlw	1
   838   0014BE  0100               	movlb	0	; () banked
   839   0014C0  6F65               	movwf	101,b
   840                           
   841                           ;systeme.c: 138: queue[0]=1;
   842   0014C2  0E01               	movlw	1
   843   0014C4  6F69               	movwf	105,b
   844                           
   845                           ;systeme.c: 139: queue[1]=2;
   846   0014C6  0E02               	movlw	2
   847   0014C8  6F6A               	movwf	106,b
   848                           
   849                           ;systeme.c: 140: queue[2]=3;
   850   0014CA  0E03               	movlw	3
   851   0014CC  6F6B               	movwf	107,b
   852                           
   853                           ;systeme.c: 141: queue[3]=4;
   854   0014CE  0E04               	movlw	4
   855   0014D0  6F6C               	movwf	108,b
   856                           
   857                           ;systeme.c: 142: queue[4]=5;
   858   0014D2  0E05               	movlw	5
   859   0014D4  6F6D               	movwf	109,b
   860                           
   861                           ;systeme.c: 143: queue[5]=6;
   862   0014D6  0E06               	movlw	6
   863   0014D8  6F6E               	movwf	110,b
   864                           
   865                           ;systeme.c: 145: pointeur_de_tache=6-1;
   866   0014DA  0E05               	movlw	5
   867   0014DC  6F70               	movwf	112,b
   868                           
   869                           ; BSR set to: 0
   870                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   871   0014DE  0E69               	movlw	105
   872   0014E0  2570               	addwf	112,w,b
   873   0014E2  6ED9               	movwf	fsr2l,c
   874   0014E4  6ADA               	clrf	fsr2h,c
   875   0014E6  0E00               	movlw	0
   876   0014E8  22DA               	addwfc	fsr2h,f,c
   877   0014EA  50DF               	movf	indf2,w,c
   878   0014EC  6F6F               	movwf	111,b
   879                           
   880                           ; BSR set to: 0
   881                           ;systeme.c: 151: temp=STKPTR;
   882   0014EE  CFFC F023          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   883                           
   884                           ; BSR set to: 0
   885                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   886   0014F2  0E02               	movlw	2
   887   0014F4  6EFC               	movwf	252,c	;volatile
   888                           
   889                           ; BSR set to: 0
   890   0014F6  0EDA               	movlw	low _tache1
   891   0014F8  6E30               	movwf	_fptr^0,c
   892   0014FA  0E10               	movlw	high _tache1
   893   0014FC  6E31               	movwf	(_fptr+1)^0,c
   894   0014FE  0E00               	movlw	low (_tache1 shr (0+16))
   895   001500  6E32               	movwf	(_fptr+2)^0,c
   896                           
   897                           ; BSR set to: 0
   898   001502  C030  F035         	movff	_fptr,_val_tos
   899   001506  C031  F036         	movff	_fptr+1,_val_tos+1
   900                           
   901                           ; BSR set to: 0
   902   00150A  0E35               	movlw	low _val_tos
   903   00150C  6E33               	movwf	_puc^0,c
   904   00150E  0E00               	movlw	high _val_tos
   905   001510  6E34               	movwf	(_puc+1)^0,c
   906                           
   907                           ; BSR set to: 0
   908   001512  C033  FFD9         	movff	_puc,fsr2l
   909   001516  C034  FFDA         	movff	_puc+1,fsr2h
   910   00151A  50DF               	movf	indf2,w,c
   911   00151C  6EFD               	movwf	253,c	;volatile
   912                           
   913                           ; BSR set to: 0
   914   00151E  4A33               	infsnz	_puc^0,f,c
   915   001520  2A34               	incf	(_puc+1)^0,f,c
   916                           
   917                           ; BSR set to: 0
   918   001522  C033  FFD9         	movff	_puc,fsr2l
   919   001526  C034  FFDA         	movff	_puc+1,fsr2h
   920   00152A  50DF               	movf	indf2,w,c
   921   00152C  6EFE               	movwf	254,c	;volatile
   922                           
   923                           ; BSR set to: 0
   924   00152E  4A33               	infsnz	_puc^0,f,c
   925   001530  2A34               	incf	(_puc+1)^0,f,c
   926                           
   927                           ; BSR set to: 0
   928   001532  C033  FFD9         	movff	_puc,fsr2l
   929   001536  C034  FFDA         	movff	_puc+1,fsr2h
   930   00153A  50DF               	movf	indf2,w,c
   931   00153C  6EFF               	movwf	255,c	;volatile
   932                           
   933                           ; BSR set to: 0
   934                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   935   00153E  0E07               	movlw	7
   936   001540  6EFC               	movwf	252,c	;volatile
   937   001542  0EF4               	movlw	low _tache2
   938   001544  6E30               	movwf	_fptr^0,c
   939   001546  0E16               	movlw	high _tache2
   940   001548  6E31               	movwf	(_fptr+1)^0,c
   941   00154A  0E00               	movlw	low (_tache2 shr (0+16))
   942   00154C  6E32               	movwf	(_fptr+2)^0,c
   943                           
   944                           ; BSR set to: 0
   945   00154E  C030  F035         	movff	_fptr,_val_tos
   946   001552  C031  F036         	movff	_fptr+1,_val_tos+1
   947   001556  0E35               	movlw	low _val_tos
   948   001558  6E33               	movwf	_puc^0,c
   949   00155A  0E00               	movlw	high _val_tos
   950   00155C  6E34               	movwf	(_puc+1)^0,c
   951                           
   952                           ; BSR set to: 0
   953   00155E  C033  FFD9         	movff	_puc,fsr2l
   954   001562  C034  FFDA         	movff	_puc+1,fsr2h
   955   001566  50DF               	movf	indf2,w,c
   956   001568  6EFD               	movwf	253,c	;volatile
   957                           
   958                           ; BSR set to: 0
   959   00156A  4A33               	infsnz	_puc^0,f,c
   960   00156C  2A34               	incf	(_puc+1)^0,f,c
   961                           
   962                           ; BSR set to: 0
   963   00156E  C033  FFD9         	movff	_puc,fsr2l
   964   001572  C034  FFDA         	movff	_puc+1,fsr2h
   965   001576  50DF               	movf	indf2,w,c
   966   001578  6EFE               	movwf	254,c	;volatile
   967                           
   968                           ; BSR set to: 0
   969   00157A  4A33               	infsnz	_puc^0,f,c
   970   00157C  2A34               	incf	(_puc+1)^0,f,c
   971                           
   972                           ; BSR set to: 0
   973   00157E  C033  FFD9         	movff	_puc,fsr2l
   974   001582  C034  FFDA         	movff	_puc+1,fsr2h
   975   001586  50DF               	movf	indf2,w,c
   976   001588  6EFF               	movwf	255,c	;volatile
   977                           
   978                           ; BSR set to: 0
   979                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   980   00158A  0E0C               	movlw	12
   981   00158C  6EFC               	movwf	252,c	;volatile
   982                           
   983                           ; BSR set to: 0
   984   00158E  0ECE               	movlw	low _tache3
   985   001590  6E30               	movwf	_fptr^0,c
   986   001592  0E18               	movlw	high _tache3
   987   001594  6E31               	movwf	(_fptr+1)^0,c
   988   001596  0E00               	movlw	low (_tache3 shr (0+16))
   989   001598  6E32               	movwf	(_fptr+2)^0,c
   990                           
   991                           ; BSR set to: 0
   992   00159A  C030  F035         	movff	_fptr,_val_tos
   993   00159E  C031  F036         	movff	_fptr+1,_val_tos+1
   994                           
   995                           ; BSR set to: 0
   996   0015A2  0E35               	movlw	low _val_tos
   997   0015A4  6E33               	movwf	_puc^0,c
   998   0015A6  0E00               	movlw	high _val_tos
   999   0015A8  6E34               	movwf	(_puc+1)^0,c
  1000                           
  1001                           ; BSR set to: 0
  1002   0015AA  C033  FFD9         	movff	_puc,fsr2l
  1003   0015AE  C034  FFDA         	movff	_puc+1,fsr2h
  1004   0015B2  50DF               	movf	indf2,w,c
  1005   0015B4  6EFD               	movwf	253,c	;volatile
  1006                           
  1007                           ; BSR set to: 0
  1008   0015B6  4A33               	infsnz	_puc^0,f,c
  1009   0015B8  2A34               	incf	(_puc+1)^0,f,c
  1010                           
  1011                           ; BSR set to: 0
  1012   0015BA  C033  FFD9         	movff	_puc,fsr2l
  1013   0015BE  C034  FFDA         	movff	_puc+1,fsr2h
  1014   0015C2  50DF               	movf	indf2,w,c
  1015   0015C4  6EFE               	movwf	254,c	;volatile
  1016                           
  1017                           ; BSR set to: 0
  1018   0015C6  4A33               	infsnz	_puc^0,f,c
  1019   0015C8  2A34               	incf	(_puc+1)^0,f,c
  1020                           
  1021                           ; BSR set to: 0
  1022   0015CA  C033  FFD9         	movff	_puc,fsr2l
  1023   0015CE  C034  FFDA         	movff	_puc+1,fsr2h
  1024   0015D2  50DF               	movf	indf2,w,c
  1025   0015D4  6EFF               	movwf	255,c	;volatile
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1029   0015D6  0E11               	movlw	17
  1030   0015D8  6EFC               	movwf	252,c	;volatile
  1031   0015DA  0EAC               	movlw	low _tache4
  1032   0015DC  6E30               	movwf	_fptr^0,c
  1033   0015DE  0E19               	movlw	high _tache4
  1034   0015E0  6E31               	movwf	(_fptr+1)^0,c
  1035   0015E2  0E00               	movlw	low (_tache4 shr (0+16))
  1036   0015E4  6E32               	movwf	(_fptr+2)^0,c
  1037                           
  1038                           ; BSR set to: 0
  1039   0015E6  C030  F035         	movff	_fptr,_val_tos
  1040   0015EA  C031  F036         	movff	_fptr+1,_val_tos+1
  1041   0015EE  0E35               	movlw	low _val_tos
  1042   0015F0  6E33               	movwf	_puc^0,c
  1043   0015F2  0E00               	movlw	high _val_tos
  1044   0015F4  6E34               	movwf	(_puc+1)^0,c
  1045                           
  1046                           ; BSR set to: 0
  1047   0015F6  C033  FFD9         	movff	_puc,fsr2l
  1048   0015FA  C034  FFDA         	movff	_puc+1,fsr2h
  1049   0015FE  50DF               	movf	indf2,w,c
  1050   001600  6EFD               	movwf	253,c	;volatile
  1051                           
  1052                           ; BSR set to: 0
  1053   001602  4A33               	infsnz	_puc^0,f,c
  1054   001604  2A34               	incf	(_puc+1)^0,f,c
  1055                           
  1056                           ; BSR set to: 0
  1057   001606  C033  FFD9         	movff	_puc,fsr2l
  1058   00160A  C034  FFDA         	movff	_puc+1,fsr2h
  1059   00160E  50DF               	movf	indf2,w,c
  1060   001610  6EFE               	movwf	254,c	;volatile
  1061                           
  1062                           ; BSR set to: 0
  1063   001612  4A33               	infsnz	_puc^0,f,c
  1064   001614  2A34               	incf	(_puc+1)^0,f,c
  1065                           
  1066                           ; BSR set to: 0
  1067   001616  C033  FFD9         	movff	_puc,fsr2l
  1068   00161A  C034  FFDA         	movff	_puc+1,fsr2h
  1069   00161E  50DF               	movf	indf2,w,c
  1070   001620  6EFF               	movwf	255,c	;volatile
  1071                           
  1072                           ; BSR set to: 0
  1073                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1074   001622  0E16               	movlw	22
  1075   001624  6EFC               	movwf	252,c	;volatile
  1076                           
  1077                           ; BSR set to: 0
  1078   001626  0EE8               	movlw	low _tache5
  1079   001628  6E30               	movwf	_fptr^0,c
  1080   00162A  0E17               	movlw	high _tache5
  1081   00162C  6E31               	movwf	(_fptr+1)^0,c
  1082   00162E  0E00               	movlw	low (_tache5 shr (0+16))
  1083   001630  6E32               	movwf	(_fptr+2)^0,c
  1084                           
  1085                           ; BSR set to: 0
  1086   001632  C030  F035         	movff	_fptr,_val_tos
  1087   001636  C031  F036         	movff	_fptr+1,_val_tos+1
  1088                           
  1089                           ; BSR set to: 0
  1090   00163A  0E35               	movlw	low _val_tos
  1091   00163C  6E33               	movwf	_puc^0,c
  1092   00163E  0E00               	movlw	high _val_tos
  1093   001640  6E34               	movwf	(_puc+1)^0,c
  1094                           
  1095                           ; BSR set to: 0
  1096   001642  C033  FFD9         	movff	_puc,fsr2l
  1097   001646  C034  FFDA         	movff	_puc+1,fsr2h
  1098   00164A  50DF               	movf	indf2,w,c
  1099   00164C  6EFD               	movwf	253,c	;volatile
  1100                           
  1101                           ; BSR set to: 0
  1102   00164E  4A33               	infsnz	_puc^0,f,c
  1103   001650  2A34               	incf	(_puc+1)^0,f,c
  1104                           
  1105                           ; BSR set to: 0
  1106   001652  C033  FFD9         	movff	_puc,fsr2l
  1107   001656  C034  FFDA         	movff	_puc+1,fsr2h
  1108   00165A  50DF               	movf	indf2,w,c
  1109   00165C  6EFE               	movwf	254,c	;volatile
  1110                           
  1111                           ; BSR set to: 0
  1112   00165E  4A33               	infsnz	_puc^0,f,c
  1113   001660  2A34               	incf	(_puc+1)^0,f,c
  1114                           
  1115                           ; BSR set to: 0
  1116   001662  C033  FFD9         	movff	_puc,fsr2l
  1117   001666  C034  FFDA         	movff	_puc+1,fsr2h
  1118   00166A  50DF               	movf	indf2,w,c
  1119   00166C  6EFF               	movwf	255,c	;volatile
  1120                           
  1121                           ; BSR set to: 0
  1122                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1123   00166E  0E1B               	movlw	27
  1124   001670  6EFC               	movwf	252,c	;volatile
  1125   001672  0E30               	movlw	low _tache6
  1126   001674  6E30               	movwf	_fptr^0,c
  1127   001676  0E21               	movlw	high _tache6
  1128   001678  6E31               	movwf	(_fptr+1)^0,c
  1129   00167A  0E00               	movlw	low (_tache6 shr (0+16))
  1130   00167C  6E32               	movwf	(_fptr+2)^0,c
  1131                           
  1132                           ; BSR set to: 0
  1133   00167E  C030  F035         	movff	_fptr,_val_tos
  1134   001682  C031  F036         	movff	_fptr+1,_val_tos+1
  1135   001686  0E35               	movlw	low _val_tos
  1136   001688  6E33               	movwf	_puc^0,c
  1137   00168A  0E00               	movlw	high _val_tos
  1138   00168C  6E34               	movwf	(_puc+1)^0,c
  1139                           
  1140                           ; BSR set to: 0
  1141   00168E  C033  FFD9         	movff	_puc,fsr2l
  1142   001692  C034  FFDA         	movff	_puc+1,fsr2h
  1143   001696  50DF               	movf	indf2,w,c
  1144   001698  6EFD               	movwf	253,c	;volatile
  1145                           
  1146                           ; BSR set to: 0
  1147   00169A  4A33               	infsnz	_puc^0,f,c
  1148   00169C  2A34               	incf	(_puc+1)^0,f,c
  1149                           
  1150                           ; BSR set to: 0
  1151   00169E  C033  FFD9         	movff	_puc,fsr2l
  1152   0016A2  C034  FFDA         	movff	_puc+1,fsr2h
  1153   0016A6  50DF               	movf	indf2,w,c
  1154   0016A8  6EFE               	movwf	254,c	;volatile
  1155                           
  1156                           ; BSR set to: 0
  1157   0016AA  4A33               	infsnz	_puc^0,f,c
  1158   0016AC  2A34               	incf	(_puc+1)^0,f,c
  1159                           
  1160                           ; BSR set to: 0
  1161   0016AE  C033  FFD9         	movff	_puc,fsr2l
  1162   0016B2  C034  FFDA         	movff	_puc+1,fsr2h
  1163   0016B6  50DF               	movf	indf2,w,c
  1164   0016B8  6EFF               	movwf	255,c	;volatile
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;systeme.c: 162: STKPTR=temp;
  1168   0016BA  C023  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;systeme.c: 165: STKPTR_T1=2;
  1172   0016BE  0E02               	movlw	2
  1173   0016C0  0101               	movlb	1	; () banked
  1174   0016C2  6F03               	movwf	3,b
  1175                           
  1176                           ; BSR set to: 1
  1177                           ;systeme.c: 166: STKPTR_T2=7;
  1178   0016C4  0E07               	movlw	7
  1179   0016C6  0102               	movlb	2	; () banked
  1180   0016C8  6F03               	movwf	3,b
  1181                           
  1182                           ; BSR set to: 2
  1183                           ;systeme.c: 167: STKPTR_T3=12;
  1184   0016CA  0E0C               	movlw	12
  1185   0016CC  0103               	movlb	3	; () banked
  1186   0016CE  6F03               	movwf	3,b
  1187                           
  1188                           ; BSR set to: 3
  1189                           ;systeme.c: 168: STKPTR_T4=17;
  1190   0016D0  0E11               	movlw	17
  1191   0016D2  0104               	movlb	4	; () banked
  1192   0016D4  6F03               	movwf	3,b
  1193                           
  1194                           ; BSR set to: 4
  1195                           ;systeme.c: 169: STKPTR_T5=22;
  1196   0016D6  0E16               	movlw	22
  1197   0016D8  0105               	movlb	5	; () banked
  1198   0016DA  6F03               	movwf	3,b
  1199                           
  1200                           ; BSR set to: 5
  1201                           ;systeme.c: 170: STKPTR_T6=27;
  1202   0016DC  0E1B               	movlw	27
  1203   0016DE  0106               	movlb	6	; () banked
  1204   0016E0  6F03               	movwf	3,b
  1205                           
  1206                           ; BSR set to: 6
  1207                           ;systeme.c: 173: Tick_Count=0;
  1208   0016E2  0E00               	movlw	0
  1209   0016E4  0100               	movlb	0	; () banked
  1210   0016E6  6F72               	movwf	114,b
  1211   0016E8  0E00               	movlw	0
  1212   0016EA  6F71               	movwf	113,b
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;systeme.c: 175: T0CON=0x01;
  1216   0016EC  0E01               	movlw	1
  1217   0016EE  6ED5               	movwf	213,c	;volatile
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;systeme.c: 176: T0IE=1;
  1221   0016F0  8AF2               	bsf	4082,5,c	;volatile
  1222                           
  1223                           ; BSR set to: 0
  1224   0016F2  0012               	return		;funcret
  1225   0016F4                     __end_of_initialisation_du_systeme:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _initialisation_des_ports *****************
  1229 ;; Defined at:
  1230 ;;		line 23 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 7
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text2
  1259   0021B4                     __ptext2:
  1260                           	callstack 0
  1261   0021B4                     _initialisation_des_ports:
  1262                           	callstack 23
  1263                           
  1264                           ;main.c: 26: MEMCON=0xA0;
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;incstack = 0
  1268   0021B4  0EA0               	movlw	160
  1269   0021B6  010F               	movlb	15	; () banked
  1270   0021B8  6F26               	movwf	38,b	;volatile
  1271                           
  1272                           ;main.c: 29: ANCON0=0x00;
  1273   0021BA  0E00               	movlw	0
  1274   0021BC  6F25               	movwf	37,b	;volatile
  1275                           
  1276                           ;main.c: 30: ANCON1=0x00;
  1277   0021BE  0E00               	movlw	0
  1278   0021C0  6F24               	movwf	36,b	;volatile
  1279                           
  1280                           ;main.c: 31: ANCON2=0x00;
  1281   0021C2  0E00               	movlw	0
  1282   0021C4  6F23               	movwf	35,b	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1286   0021C6  8125               	bsf	37,0,b	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1290   0021C8  8325               	bsf	37,1,b	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1294   0021CA  8525               	bsf	37,2,b	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1298   0021CC  8725               	bsf	37,3,b	;volatile
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1302   0021CE  8524               	bsf	36,2,b	;volatile
  1303                           
  1304                           ; BSR set to: 15
  1305                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1306   0021D0  8724               	bsf	36,3,b	;volatile
  1307                           
  1308                           ; BSR set to: 15
  1309                           ;main.c: 41: LATCbits.LATC2=1;
  1310   0021D2  848B               	bsf	139,2,c	;volatile
  1311                           
  1312                           ; BSR set to: 15
  1313                           ;main.c: 42: LATCbits.LATC1=1;
  1314   0021D4  828B               	bsf	139,1,c	;volatile
  1315                           
  1316                           ; BSR set to: 15
  1317                           ;main.c: 43: LATGbits.LATG0=1;
  1318   0021D6  808F               	bsf	143,0,c	;volatile
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;main.c: 46: TRISCbits.TRISC2=0;
  1322   0021D8  9494               	bcf	148,2,c	;volatile
  1323                           
  1324                           ; BSR set to: 15
  1325                           ;main.c: 47: TRISCbits.TRISC1=0;
  1326   0021DA  9294               	bcf	148,1,c	;volatile
  1327                           
  1328                           ; BSR set to: 15
  1329                           ;main.c: 48: TRISGbits.TRISG0=0;
  1330   0021DC  9098               	bcf	152,0,c	;volatile
  1331                           
  1332                           ; BSR set to: 15
  1333                           ;main.c: 49: TRISGbits.TRISG3=0;
  1334   0021DE  9698               	bcf	152,3,c	;volatile
  1335                           
  1336                           ; BSR set to: 15
  1337                           ;main.c: 50: TRISGbits.TRISG4=0;
  1338   0021E0  9898               	bcf	152,4,c	;volatile
  1339                           
  1340                           ; BSR set to: 15
  1341                           ;main.c: 51: TRISDbits.TRISD2=0;
  1342   0021E2  9495               	bcf	149,2,c	;volatile
  1343                           
  1344                           ; BSR set to: 15
  1345                           ;main.c: 52: TRISDbits.TRISD3=0;
  1346   0021E4  9695               	bcf	149,3,c	;volatile
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;main.c: 55: INTCON2bits.RBPU=0;
  1350   0021E6  9EF1               	bcf	241,7,c	;volatile
  1351                           
  1352                           ; BSR set to: 15
  1353                           ;main.c: 56: PADCFG1bits.REPU=1;
  1354   0021E8  8D53               	bsf	83,6,b	;volatile
  1355                           
  1356                           ; BSR set to: 15
  1357   0021EA  0012               	return		;funcret
  1358   0021EC                     __end_of_initialisation_des_ports:
  1359                           	callstack 0
  1360                           
  1361 ;; *************** function _Init *****************
  1362 ;; Defined at:
  1363 ;;		line 4 in file "semaphore.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  sem             1  [STACK] unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1  [STACK] void 
  1370 ;; Registers used:
  1371 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;Total ram usage:        0 bytes
  1382 ;; Hardware stack levels used: 1
  1383 ;; Hardware stack levels required when called: 7
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;;		_tache1
  1389 ;; This function uses a reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text3
  1393   0022E0                     __ptext3:
  1394                           	callstack 0
  1395   0022E0                     _Init:
  1396                           	callstack 20
  1397                           
  1398                           ;semaphore.c: 6: switch (sem)
  1399                           
  1400                           ; BSR set to: 15
  1401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1402                           ;incstack = 0
  1403   0022E0  D006               	goto	l2801
  1404   0022E2                     l2797:
  1405                           
  1406                           ;semaphore.c: 9: Val_sem_cna=1;
  1407   0022E2  0E01               	movlw	1
  1408   0022E4  6E3B               	movwf	_Val_sem_cna^0,c
  1409                           
  1410                           ;semaphore.c: 10: break;
  1411   0022E6  D00B               	goto	l1547
  1412   0022E8                     l2799:
  1413                           
  1414                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1415   0022E8  0E01               	movlw	1
  1416   0022EA  6E3A               	movwf	_Val_sem_rxtx^0,c
  1417                           
  1418                           ;semaphore.c: 13: break;
  1419   0022EC  D008               	goto	l1547
  1420   0022EE                     l2801:
  1421                           
  1422                           ;stkvar	Init@sem @ sp[(0)+-1]
  1423   0022EE  0EFF               	movlw	-1
  1424   0022F0  50E3               	movf	plusw1,w,c
  1425                           
  1426                           ; Switch size 1, requested type "simple"
  1427                           ; Number of cases is 2, Range of values is 1 to 2
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; simple_byte            7     4 (average)
  1431                           ;	Chosen strategy is simple_byte
  1432   0022F2  0A01               	xorlw	1	; case 1
  1433   0022F4  B4D8               	btfsc	status,2,c
  1434   0022F6  D7F5               	goto	l2797
  1435   0022F8  0A03               	xorlw	3	; case 2
  1436   0022FA  B4D8               	btfsc	status,2,c
  1437   0022FC  D7F5               	goto	l2799
  1438   0022FE                     l1547:
  1439                           
  1440                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1441   0022FE  52E5               	movf	postdec1,f,c
  1442   002300  0012               	return		;funcret
  1443   002302                     __end_of_Init:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _fonction_d_interruption *****************
  1447 ;; Defined at:
  1448 ;;		line 17 in file "systeme.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:       12 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 6
  1469 ;; This function calls:
  1470 ;;		_tache1
  1471 ;;		_tache2
  1472 ;;		_tache3
  1473 ;;		_tache4
  1474 ;;		_tache5
  1475 ;;		_tache6
  1476 ;; This function is called by:
  1477 ;;		Interrupt level 2
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	intcode
  1482   000008                     __pintcode:
  1483                           	callstack 0
  1484   000008                     _fonction_d_interruption:
  1485                           	callstack 23
  1486                           
  1487                           ;incstack = 0
  1488   000008  CFE9 F017          	movff	fsr0l,??_fonction_d_interruption
  1489   00000C  CFEA F018          	movff	fsr0h,??_fonction_d_interruption+1
  1490   000010  CFE1 F019          	movff	fsr1l,??_fonction_d_interruption+2
  1491   000014  CFE2 F01A          	movff	fsr1h,??_fonction_d_interruption+3
  1492   000018  CFD9 F01B          	movff	fsr2l,??_fonction_d_interruption+4
  1493   00001C  CFDA F01C          	movff	fsr2h,??_fonction_d_interruption+5
  1494   000020  CFF3 F01D          	movff	prodl,??_fonction_d_interruption+6
  1495   000024  CFF4 F01E          	movff	prodh,??_fonction_d_interruption+7
  1496   000028  CFF6 F01F          	movff	tblptrl,??_fonction_d_interruption+8
  1497   00002C  CFF7 F020          	movff	tblptrh,??_fonction_d_interruption+9
  1498   000030  CFF8 F021          	movff	tblptru,??_fonction_d_interruption+10
  1499   000034  CFF5 F022          	movff	tablat,??_fonction_d_interruption+11
  1500   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1501                           
  1502                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1503   00003C  CFD8 F061          	movff	status,97	;volatile
  1504   000040  0100               	movlb	0	; () banked
  1505   000042  6F60               	movwf	96,b
  1506                           
  1507                           ; BSR set to: 0
  1508   000044  CFE0 F062          	movff	bsr,98	;volatile
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1512   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1513                           
  1514                           ; BSR set to: 0
  1515   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;systeme.c: 24: if(T0IE && T0IF)
  1519   000050  BAF2               	btfsc	4082,5,c	;volatile
  1520                           
  1521                           ; BSR set to: 0
  1522   000052  A4F2               	btfss	4082,2,c	;volatile
  1523   000054  D143               	goto	i2l5353
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1527   000056  0565               	decf	101,w,b
  1528   000058  A4D8               	btfss	status,2,c
  1529   00005A  D004               	goto	i2l5053
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1533   00005C  0E1B               	movlw	27
  1534   00005E  6EFC               	movwf	252,c	;volatile
  1535                           
  1536                           ;systeme.c: 29: DEMARRAGE=0;
  1537   000060  0E00               	movlw	0
  1538   000062  6F65               	movwf	101,b
  1539   000064                     i2l5053:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1543   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1544                           
  1545                           ;systeme.c: 35: FSR0L=0;
  1546   000068  0E00               	movlw	0
  1547   00006A  6EE9               	movwf	233,c	;volatile
  1548                           
  1549                           ; BSR set to: 0
  1550                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1551   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1552                           
  1553                           ; BSR set to: 0
  1554   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1555                           
  1556                           ; BSR set to: 0
  1557   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1558                           
  1559                           ; BSR set to: 0
  1560   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1564   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1565                           
  1566                           ; BSR set to: 0
  1567   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1568                           
  1569                           ; BSR set to: 0
  1570   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1571                           
  1572                           ; BSR set to: 0
  1573   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1577   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1578                           
  1579                           ; BSR set to: 0
  1580   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1581                           
  1582                           ; BSR set to: 0
  1583   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1584                           
  1585                           ; BSR set to: 0
  1586   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1587                           
  1588                           ; BSR set to: 0
  1589                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1590   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1591                           
  1592                           ; BSR set to: 0
  1593   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1594                           
  1595                           ; BSR set to: 0
  1596   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1597                           
  1598                           ; BSR set to: 0
  1599   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1603   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1607                           
  1608                           ;systeme.c: 44: FSR1H=0;
  1609   0000B4  0E00               	movlw	0
  1610   0000B6  6EE2               	movwf	226,c	;volatile
  1611                           
  1612                           ;systeme.c: 45: FSR1L=0;
  1613   0000B8  0E00               	movlw	0
  1614   0000BA  6EE1               	movwf	225,c	;volatile
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1618   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1619                           
  1620                           ; BSR set to: 0
  1621   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1622                           
  1623                           ; BSR set to: 0
  1624   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1625                           
  1626                           ; BSR set to: 0
  1627   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1631   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1632                           
  1633                           ; BSR set to: 0
  1634   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1635                           
  1636                           ; BSR set to: 0
  1637   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1638                           
  1639                           ; BSR set to: 0
  1640   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1644   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1645                           
  1646                           ; BSR set to: 0
  1647   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1648                           
  1649                           ; BSR set to: 0
  1650   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1651                           
  1652                           ; BSR set to: 0
  1653   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1657   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1658                           
  1659                           ; BSR set to: 0
  1660   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1661                           
  1662                           ; BSR set to: 0
  1663   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1664                           
  1665                           ; BSR set to: 0
  1666   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1670   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1671                           
  1672                           ; BSR set to: 0
  1673   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1674                           
  1675                           ; BSR set to: 0
  1676   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1677                           
  1678                           ; BSR set to: 0
  1679   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1683   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1684                           
  1685                           ; BSR set to: 0
  1686   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1687                           
  1688                           ; BSR set to: 0
  1689   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1690                           
  1691                           ; BSR set to: 0
  1692   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1696   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1697                           
  1698                           ; BSR set to: 0
  1699   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1700                           
  1701                           ; BSR set to: 0
  1702   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1703                           
  1704                           ; BSR set to: 0
  1705   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1706                           
  1707                           ; BSR set to: 0
  1708                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1709   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1710                           
  1711                           ; BSR set to: 0
  1712   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1713                           
  1714                           ; BSR set to: 0
  1715   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1716                           
  1717                           ; BSR set to: 0
  1718   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1722   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1723                           
  1724                           ; BSR set to: 0
  1725   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1726                           
  1727                           ; BSR set to: 0
  1728   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1729                           
  1730                           ; BSR set to: 0
  1731   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1732                           
  1733                           ; BSR set to: 0
  1734                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1735   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1736                           
  1737                           ; BSR set to: 0
  1738   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1739                           
  1740                           ; BSR set to: 0
  1741   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1742                           
  1743                           ; BSR set to: 0
  1744   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1748   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1749                           
  1750                           ; BSR set to: 0
  1751   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1752                           
  1753                           ; BSR set to: 0
  1754   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1755                           
  1756                           ; BSR set to: 0
  1757   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1758                           
  1759                           ; BSR set to: 0
  1760                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1761   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1762                           
  1763                           ; BSR set to: 0
  1764   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1765                           
  1766                           ; BSR set to: 0
  1767   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1768                           
  1769                           ; BSR set to: 0
  1770   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1771                           
  1772                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1773   00017C  0E8A               	movlw	138
  1774   00017E  6ED7               	movwf	215,c	;volatile
  1775   000180  0ECF               	movlw	207
  1776   000182  6ED6               	movwf	214,c	;volatile
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;systeme.c: 63: T0IF=0;
  1780   000184  94F2               	bcf	4082,2,c	;volatile
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;systeme.c: 65: Tick_Count++;
  1784   000186  4B71               	infsnz	113,f,b
  1785   000188  2B72               	incf	114,f,b
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;systeme.c: 67: pointeur_de_tache++;
  1789   00018A  2B70               	incf	112,f,b
  1790                           
  1791                           ; BSR set to: 0
  1792                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1793   00018C  0E06               	movlw	6
  1794   00018E  1970               	xorwf	112,w,b
  1795   000190  A4D8               	btfss	status,2,c
  1796   000192  D002               	goto	i2l5197
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;systeme.c: 69: pointeur_de_tache=0;
  1800   000194  0E00               	movlw	0
  1801   000196  6F70               	movwf	112,b
  1802   000198                     i2l5197:
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1806   000198  0E69               	movlw	105
  1807   00019A  2570               	addwf	112,w,b
  1808   00019C  6ED9               	movwf	fsr2l,c
  1809   00019E  6ADA               	clrf	fsr2h,c
  1810   0001A0  0E00               	movlw	0
  1811   0001A2  22DA               	addwfc	fsr2h,f,c
  1812   0001A4  50DF               	movf	indf2,w,c
  1813   0001A6  6F6F               	movwf	111,b
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;systeme.c: 75: FSR1H=0;
  1817   0001A8  0E00               	movlw	0
  1818   0001AA  6EE2               	movwf	226,c	;volatile
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;systeme.c: 76: FSR1L=0;
  1822   0001AC  0E00               	movlw	0
  1823   0001AE  6EE1               	movwf	225,c	;volatile
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;systeme.c: 77: FSR0H=tache_active;
  1827   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;systeme.c: 78: FSR0L=18;
  1831   0001B4  0E12               	movlw	18
  1832   0001B6  6EE9               	movwf	233,c	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1836   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1837                           
  1838                           ; BSR set to: 0
  1839   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1840                           
  1841                           ; BSR set to: 0
  1842   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1843                           
  1844                           ; BSR set to: 0
  1845   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1849   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1850                           
  1851                           ; BSR set to: 0
  1852   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1853                           
  1854                           ; BSR set to: 0
  1855   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1856                           
  1857                           ; BSR set to: 0
  1858   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1859                           
  1860                           ; BSR set to: 0
  1861                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1862   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1863                           
  1864                           ; BSR set to: 0
  1865   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1866                           
  1867                           ; BSR set to: 0
  1868   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1869                           
  1870                           ; BSR set to: 0
  1871   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1875   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1876                           
  1877                           ; BSR set to: 0
  1878   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1879                           
  1880                           ; BSR set to: 0
  1881   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1882                           
  1883                           ; BSR set to: 0
  1884   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1885                           
  1886                           ; BSR set to: 0
  1887                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1888   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1889                           
  1890                           ; BSR set to: 0
  1891   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1892                           
  1893                           ; BSR set to: 0
  1894   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1895                           
  1896                           ; BSR set to: 0
  1897   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1901   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1902                           
  1903                           ; BSR set to: 0
  1904   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1905                           
  1906                           ; BSR set to: 0
  1907   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1908                           
  1909                           ; BSR set to: 0
  1910   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1914   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1915                           
  1916                           ; BSR set to: 0
  1917   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1918                           
  1919                           ; BSR set to: 0
  1920   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1921                           
  1922                           ; BSR set to: 0
  1923   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1927   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1928                           
  1929                           ; BSR set to: 0
  1930   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1931                           
  1932                           ; BSR set to: 0
  1933   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1934                           
  1935                           ; BSR set to: 0
  1936   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1940   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1941                           
  1942                           ; BSR set to: 0
  1943   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1944                           
  1945                           ; BSR set to: 0
  1946   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1947                           
  1948                           ; BSR set to: 0
  1949   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1950                           
  1951                           ; BSR set to: 0
  1952                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1953   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1954                           
  1955                           ; BSR set to: 0
  1956   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1957                           
  1958                           ; BSR set to: 0
  1959   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1960                           
  1961                           ; BSR set to: 0
  1962   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1966   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1967                           
  1968                           ; BSR set to: 0
  1969   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1970                           
  1971                           ; BSR set to: 0
  1972   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1973                           
  1974                           ; BSR set to: 0
  1975   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1979   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1980                           
  1981                           ; BSR set to: 0
  1982   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1983                           
  1984                           ; BSR set to: 0
  1985   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1986                           
  1987                           ; BSR set to: 0
  1988   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;systeme.c: 96: FSR0H=tache_active;
  1992   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;systeme.c: 97: FSR0L=0;
  1996   00027C  0E00               	movlw	0
  1997   00027E  6EE9               	movwf	233,c	;volatile
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  2001   000280  CFEE F060          	movff	postinc0,96	;volatile
  2002                           
  2003                           ; BSR set to: 0
  2004   000284  CFEE F061          	movff	postinc0,97	;volatile
  2005                           
  2006                           ; BSR set to: 0
  2007   000288  CFEE F062          	movff	postinc0,98	;volatile
  2008                           
  2009                           ; BSR set to: 0
  2010   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2014   000290  CFEE F063          	movff	postinc0,99	;volatile
  2015                           
  2016                           ; BSR set to: 0
  2017   000294  CFEE F064          	movff	postinc0,100	;volatile
  2018                           
  2019                           ; BSR set to: 0
  2020   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2021                           
  2022                           ; BSR set to: 0
  2023   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2027   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2028                           
  2029                           ; BSR set to: 0
  2030   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2031                           
  2032                           ; BSR set to: 0
  2033   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2034                           
  2035                           ; BSR set to: 0
  2036   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2040   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2041                           
  2042                           ; BSR set to: 0
  2043   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2044                           
  2045                           ; BSR set to: 0
  2046   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2047                           
  2048                           ; BSR set to: 0
  2049   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2053   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2054                           
  2055                           ; BSR set to: 0
  2056   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2060   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2061                           
  2062                           ; BSR set to: 0
  2063   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2064                           
  2065                           ; BSR set to: 0
  2066   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2070   0002D4  5160               	movf	96,w,b
  2071                           
  2072                           ; BSR set to: 0
  2073   0002D6  C061 FFD8          	movff	97,status	;volatile
  2074   0002DA  0010               	retfie		;# 
  2075   0002DC                     i2l5353:
  2076                           
  2077                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2078   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2079   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2080   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2081                           
  2082                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2083   0002E8  0100               	movlb	0	; () banked
  2084   0002EA  5160               	movf	96,w,b
  2085                           
  2086                           ; BSR set to: 0
  2087   0002EC  C061 FFD8          	movff	97,status	;volatile
  2088   0002F0  0010               	retfie		;# 
  2089                           
  2090                           ;systeme.c: 123: tache1();
  2091   0002F2  EC6D  F008         	call	_tache1	;wreg free
  2092                           
  2093                           ;systeme.c: 124: tache2();
  2094   0002F6  EC7A  F00B         	call	_tache2	;wreg free
  2095                           
  2096                           ;systeme.c: 125: tache3();
  2097   0002FA  EC67  F00C         	call	_tache3	;wreg free
  2098                           
  2099                           ;systeme.c: 126: tache4();
  2100   0002FE  ECD6  F00C         	call	_tache4	;wreg free
  2101                           
  2102                           ;systeme.c: 127: tache5();
  2103   000302  ECF4  F00B         	call	_tache5	;wreg free
  2104                           
  2105                           ;systeme.c: 128: tache6();
  2106   000306  EC98  F010         	call	_tache6	;wreg free
  2107   00030A  C022  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2108   00030E  C021  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2109   000312  C020  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2110   000316  C01F  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2111   00031A  C01E  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2112   00031E  C01D  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2113   000322  C01C  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2114   000326  C01B  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2115   00032A  C01A  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2116   00032E  C019  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2117   000332  C018  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2118   000336  C017  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2119   00033A  0011               	retfie		f
  2120   00033C                     __end_of_fonction_d_interruption:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _tache6 *****************
  2124 ;; Defined at:
  2125 ;;		line 3 in file "T6.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  n               1    8[COMRAM] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; Hardware stack levels required when called: 2
  2146 ;; This function calls:
  2147 ;;		_lecture_normale
  2148 ;; This function is called by:
  2149 ;;		_fonction_d_interruption
  2150 ;;		_initialisation_du_systeme
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text5
  2155   002130                     __ptext5:
  2156                           	callstack 0
  2157   002130                     _tache6:
  2158                           	callstack 26
  2159                           
  2160                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2161                           
  2162                           ;incstack = 0
  2163                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2164   002130  0E75               	movlw	117
  2165   002132  6E03               	movwf	lecture_normale@stid_id^0,c
  2166   002134  0E00               	movlw	0
  2167   002136  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2168   002138  ECFA  F00D         	call	_lecture_normale	;wreg free
  2169   00213C  6E09               	movwf	tache6@n^0,c
  2170                           
  2171                           ;T6.c: 9: if (n > 0)
  2172   00213E  5009               	movf	tache6@n^0,w,c
  2173   002140  B4D8               	btfsc	status,2,c
  2174   002142  D015               	goto	i2l5019
  2175                           
  2176                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2177   002144  0E04               	movlw	4
  2178   002146  1809               	xorwf	tache6@n^0,w,c
  2179   002148  A4D8               	btfss	status,2,c
  2180   00214A  D004               	goto	i2l5011
  2181                           
  2182                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2183   00214C  C009  F07F         	movff	tache6@n,127
  2184                           
  2185                           ;T6.c: 16: Personne = 2;
  2186   002150  0E02               	movlw	2
  2187   002152  D007               	goto	L1
  2188   002154                     i2l5011:
  2189                           
  2190                           ;T6.c: 18: else if (n == 8)
  2191   002154  0E08               	movlw	8
  2192   002156  1809               	xorwf	tache6@n^0,w,c
  2193   002158  A4D8               	btfss	status,2,c
  2194   00215A  D005               	goto	i2l5017
  2195                           
  2196                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2197   00215C  C009  F07F         	movff	tache6@n,127
  2198                           
  2199                           ;T6.c: 21: Personne = 1;
  2200   002160  0E01               	movlw	1
  2201   002162                     L1:
  2202   002162  0100               	movlb	0	; () banked
  2203   002164  D008               	goto	L2
  2204   002166                     i2l5017:
  2205                           
  2206                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2207   002166  0E00               	movlw	0
  2208   002168  0100               	movlb	0	; () banked
  2209   00216A  6F7F               	movwf	127,b
  2210   00216C  D7E1               	goto	__ptext5
  2211   00216E                     i2l5019:
  2212                           
  2213                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2214   00216E  0E00               	movlw	0
  2215   002170  0100               	movlb	0	; () banked
  2216   002172  6F7F               	movwf	127,b
  2217                           
  2218                           ;T6.c: 33: Personne = 0;
  2219   002174  0E00               	movlw	0
  2220   002176                     L2:
  2221   002176  6F82               	movwf	130,b
  2222   002178  D7DB               	goto	__ptext5
  2223   00217A                     __end_of_tache6:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _lecture_normale *****************
  2227 ;; Defined at:
  2228 ;;		line 5 in file "stid.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2231 ;;		 -> badge(10), 
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;  octet           1    7[COMRAM] unsigned char 
  2234 ;;  n_bit           1    6[COMRAM] unsigned char 
  2235 ;;  n_octet         1    5[COMRAM] unsigned char 
  2236 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      unsigned char 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;Total ram usage:        6 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 1
  2253 ;; This function calls:
  2254 ;;		_stid_delai_us
  2255 ;; This function is called by:
  2256 ;;		_tache6
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           	psect	text6
  2261   001BF4                     __ptext6:
  2262                           	callstack 0
  2263   001BF4                     _lecture_normale:
  2264                           	callstack 26
  2265                           
  2266                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;incstack = 0
  2270   001BF4  8295               	bsf	149,1,c	;volatile
  2271                           
  2272                           ;stid.c: 10: LATDbits.LATD3=0;
  2273   001BF6  968C               	bcf	140,3,c	;volatile
  2274                           
  2275                           ;stid.c: 11: LATDbits.LATD2=0;
  2276   001BF8  948C               	bcf	140,2,c	;volatile
  2277                           
  2278                           ;stid.c: 12: stid_delai_us(100);
  2279   001BFA  0E00               	movlw	0
  2280   001BFC  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2281   001BFE  0E64               	movlw	100
  2282   001C00  6E01               	movwf	stid_delai_us@isdu^0,c
  2283   001C02  ECE7  F011         	call	_stid_delai_us	;wreg free
  2284                           
  2285                           ;stid.c: 13: LATDbits.LATD3=1;
  2286   001C06  868C               	bsf	140,3,c	;volatile
  2287                           
  2288                           ;stid.c: 14: temps_attente=0;
  2289   001C08  0E00               	movlw	0
  2290   001C0A  6E05               	movwf	lecture_normale@temps_attente^0,c
  2291   001C0C                     i2l4527:
  2292                           
  2293                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2294   001C0C  0E03               	movlw	3
  2295   001C0E  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2296   001C10  0EE8               	movlw	232
  2297   001C12  6E01               	movwf	stid_delai_us@isdu^0,c
  2298   001C14  ECE7  F011         	call	_stid_delai_us	;wreg free
  2299                           
  2300                           ;stid.c: 18: temps_attente++;
  2301   001C18  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2302                           
  2303                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2304   001C1A  A083               	btfss	131,0,c	;volatile
  2305   001C1C  D002               	goto	i2l4535
  2306                           
  2307                           ;stid.c: 20: temps_attente=65;
  2308   001C1E  0E41               	movlw	65
  2309   001C20  6E05               	movwf	lecture_normale@temps_attente^0,c
  2310   001C22                     i2l4535:
  2311                           
  2312                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2313   001C22  0E40               	movlw	64
  2314   001C24  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2315   001C26  D7F2               	goto	i2l4527
  2316                           
  2317                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2318   001C28  A083               	btfss	131,0,c	;volatile
  2319   001C2A  D033               	goto	i2l4571
  2320                           
  2321                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2322   001C2C  0E00               	movlw	0
  2323   001C2E  6E06               	movwf	lecture_normale@n_octet^0,c
  2324   001C30                     i2l1664:
  2325                           
  2326                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2327   001C30  0E00               	movlw	0
  2328   001C32  6E08               	movwf	lecture_normale@octet^0,c
  2329                           
  2330                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2331   001C34  0E00               	movlw	0
  2332   001C36  6E07               	movwf	lecture_normale@n_bit^0,c
  2333   001C38                     i2l1665:
  2334                           
  2335                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2336   001C38  A283               	btfss	131,1,c	;volatile
  2337   001C3A  D003               	goto	i2l1667
  2338                           
  2339                           ;stid.c: 34: octet=(octet|0x01);
  2340   001C3C  5008               	movf	lecture_normale@octet^0,w,c
  2341   001C3E  0901               	iorlw	1
  2342   001C40  6E08               	movwf	lecture_normale@octet^0,c
  2343   001C42                     i2l1667:
  2344                           
  2345                           ;stid.c: 35: octet=octet<<1;
  2346   001C42  5008               	movf	lecture_normale@octet^0,w,c
  2347   001C44  2408               	addwf	lecture_normale@octet^0,w,c
  2348   001C46  6E08               	movwf	lecture_normale@octet^0,c
  2349                           
  2350                           ;stid.c: 36: stid_delai_us(100);
  2351   001C48  0E00               	movlw	0
  2352   001C4A  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2353   001C4C  0E64               	movlw	100
  2354   001C4E  6E01               	movwf	stid_delai_us@isdu^0,c
  2355   001C50  ECE7  F011         	call	_stid_delai_us	;wreg free
  2356                           
  2357                           ;stid.c: 37: LATDbits.LATD2=1;
  2358   001C54  848C               	bsf	140,2,c	;volatile
  2359                           
  2360                           ;stid.c: 38: stid_delai_us(500);
  2361   001C56  0E01               	movlw	1
  2362   001C58  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2363   001C5A  0EF4               	movlw	244
  2364   001C5C  6E01               	movwf	stid_delai_us@isdu^0,c
  2365   001C5E  ECE7  F011         	call	_stid_delai_us	;wreg free
  2366                           
  2367                           ;stid.c: 39: LATDbits.LATD2=0;
  2368   001C62  948C               	bcf	140,2,c	;volatile
  2369                           
  2370                           ;stid.c: 40: stid_delai_us(400);
  2371   001C64  0E01               	movlw	1
  2372   001C66  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2373   001C68  0E90               	movlw	144
  2374   001C6A  6E01               	movwf	stid_delai_us@isdu^0,c
  2375   001C6C  ECE7  F011         	call	_stid_delai_us	;wreg free
  2376   001C70  2A07               	incf	lecture_normale@n_bit^0,f,c
  2377   001C72  0E07               	movlw	7
  2378   001C74  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2379   001C76  D7E0               	goto	i2l1665
  2380                           
  2381                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2382   001C78  5006               	movf	lecture_normale@n_octet^0,w,c
  2383   001C7A  2403               	addwf	lecture_normale@stid_id^0,w,c
  2384   001C7C  6ED9               	movwf	fsr2l,c
  2385   001C7E  0E00               	movlw	0
  2386   001C80  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2387   001C82  6EDA               	movwf	fsr2h,c
  2388   001C84  C008  FFDF         	movff	lecture_normale@octet,indf2
  2389                           
  2390                           ;stid.c: 43: n_octet++;
  2391   001C88  2A06               	incf	lecture_normale@n_octet^0,f,c
  2392                           
  2393                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2394   001C8A  B083               	btfsc	131,0,c	;volatile
  2395   001C8C  D7D1               	goto	i2l1664
  2396                           
  2397                           ;stid.c: 47: return n_octet;
  2398   001C8E  5006               	movf	lecture_normale@n_octet^0,w,c
  2399   001C90  0012               	return	
  2400   001C92                     i2l4571:
  2401                           
  2402                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2403   001C92  0E00               	movlw	0
  2404   001C94  0012               	return		;funcret
  2405   001C96                     __end_of_lecture_normale:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _stid_delai_us *****************
  2409 ;; Defined at:
  2410 ;;		line 56 in file "stid.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  isdu            2    0[COMRAM] unsigned int 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2424 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;Total ram usage:        2 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_lecture_normale
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text7
  2438   0023CE                     __ptext7:
  2439                           	callstack 0
  2440   0023CE                     _stid_delai_us:
  2441                           	callstack 26
  2442                           
  2443                           ;stid.c: 58: while(isdu>0)
  2444                           
  2445                           ;incstack = 0
  2446   0023CE  D006               	goto	i2l4345
  2447   0023D0                     i2l1674:
  2448                           
  2449                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2450   0023D0  F000               	nop	
  2451   0023D2  F000               	nop	
  2452   0023D4  F000               	nop	
  2453                           
  2454                           ;stid.c: 61: isdu--;
  2455   0023D6  0601               	decf	stid_delai_us@isdu^0,f,c
  2456   0023D8  A0D8               	btfss	status,0,c
  2457   0023DA  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2458   0023DC                     i2l4345:
  2459   0023DC  5001               	movf	stid_delai_us@isdu^0,w,c
  2460   0023DE  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2461   0023E0  B4D8               	btfsc	status,2,c
  2462   0023E2  0012               	return	
  2463   0023E4  D7F5               	goto	i2l1674
  2464   0023E6                     __end_of_stid_delai_us:
  2465                           	callstack 0
  2466                           
  2467 ;; *************** function _tache5 *****************
  2468 ;; Defined at:
  2469 ;;		line 3 in file "T5.c"
  2470 ;; Parameters:    Size  Location     Type
  2471 ;;		None
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  a               2    0[COMRAM] unsigned int 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  1    wreg      void 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2487 ;;Total ram usage:        2 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_fonction_d_interruption
  2493 ;;		_initialisation_du_systeme
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text8
  2498   0017E8                     __ptext8:
  2499                           	callstack 0
  2500   0017E8                     _tache5:
  2501                           	callstack 28
  2502                           
  2503                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2504                           
  2505                           ;incstack = 0
  2506                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2507   0017E8  A89E               	btfss	158,4,c	;volatile
  2508   0017EA  D7FE               	goto	__ptext8
  2509   0017EC  0E74               	movlw	116
  2510   0017EE  6EAD               	movwf	173,c	;volatile
  2511   0017F0                     i2l965:
  2512   0017F0  A2AC               	btfss	172,1,c	;volatile
  2513   0017F2  D7FE               	goto	i2l965
  2514   0017F4                     i2u165_40:
  2515   0017F4  A89E               	btfss	158,4,c	;volatile
  2516   0017F6  D7FE               	goto	i2u165_40
  2517   0017F8  0E61               	movlw	97
  2518   0017FA  6EAD               	movwf	173,c	;volatile
  2519   0017FC                     i2l971:
  2520   0017FC  A2AC               	btfss	172,1,c	;volatile
  2521   0017FE  D7FE               	goto	i2l971
  2522   001800                     i2u167_40:
  2523   001800  A89E               	btfss	158,4,c	;volatile
  2524   001802  D7FE               	goto	i2u167_40
  2525   001804  0E63               	movlw	99
  2526   001806  6EAD               	movwf	173,c	;volatile
  2527   001808                     i2l977:
  2528   001808  A2AC               	btfss	172,1,c	;volatile
  2529   00180A  D7FE               	goto	i2l977
  2530   00180C                     i2u169_40:
  2531   00180C  A89E               	btfss	158,4,c	;volatile
  2532   00180E  D7FE               	goto	i2u169_40
  2533   001810  0E68               	movlw	104
  2534   001812  6EAD               	movwf	173,c	;volatile
  2535   001814                     i2l983:
  2536   001814  A2AC               	btfss	172,1,c	;volatile
  2537   001816  D7FE               	goto	i2l983
  2538   001818                     i2u171_40:
  2539   001818  A89E               	btfss	158,4,c	;volatile
  2540   00181A  D7FE               	goto	i2u171_40
  2541   00181C  0E65               	movlw	101
  2542   00181E  6EAD               	movwf	173,c	;volatile
  2543   001820                     i2l989:
  2544   001820  A2AC               	btfss	172,1,c	;volatile
  2545   001822  D7FE               	goto	i2l989
  2546   001824                     i2u173_40:
  2547   001824  A89E               	btfss	158,4,c	;volatile
  2548   001826  D7FE               	goto	i2u173_40
  2549   001828  0E35               	movlw	53
  2550   00182A  6EAD               	movwf	173,c	;volatile
  2551   00182C                     i2l995:
  2552   00182C  A2AC               	btfss	172,1,c	;volatile
  2553   00182E  D7FE               	goto	i2l995
  2554   001830                     i2u175_40:
  2555   001830  A89E               	btfss	158,4,c	;volatile
  2556   001832  D7FE               	goto	i2u175_40
  2557   001834  0E5F               	movlw	95
  2558   001836  6EAD               	movwf	173,c	;volatile
  2559   001838                     i2l1001:
  2560   001838  A2AC               	btfss	172,1,c	;volatile
  2561   00183A  D7FE               	goto	i2l1001
  2562   00183C                     i2u177_40:
  2563   00183C  A89E               	btfss	158,4,c	;volatile
  2564   00183E  D7FE               	goto	i2u177_40
  2565   001840  0E65               	movlw	101
  2566   001842  6EAD               	movwf	173,c	;volatile
  2567   001844                     i2l1007:
  2568   001844  A2AC               	btfss	172,1,c	;volatile
  2569   001846  D7FE               	goto	i2l1007
  2570   001848                     i2u179_40:
  2571   001848  A89E               	btfss	158,4,c	;volatile
  2572   00184A  D7FE               	goto	i2u179_40
  2573   00184C  0E6E               	movlw	110
  2574   00184E  6EAD               	movwf	173,c	;volatile
  2575   001850                     i2l1013:
  2576   001850  A2AC               	btfss	172,1,c	;volatile
  2577   001852  D7FE               	goto	i2l1013
  2578   001854                     i2u181_40:
  2579   001854  A89E               	btfss	158,4,c	;volatile
  2580   001856  D7FE               	goto	i2u181_40
  2581   001858  0E5F               	movlw	95
  2582   00185A  6EAD               	movwf	173,c	;volatile
  2583   00185C                     i2l1019:
  2584   00185C  A2AC               	btfss	172,1,c	;volatile
  2585   00185E  D7FE               	goto	i2l1019
  2586   001860                     i2u183_40:
  2587   001860  A89E               	btfss	158,4,c	;volatile
  2588   001862  D7FE               	goto	i2u183_40
  2589   001864  0E63               	movlw	99
  2590   001866  6EAD               	movwf	173,c	;volatile
  2591   001868                     i2l1025:
  2592   001868  A2AC               	btfss	172,1,c	;volatile
  2593   00186A  D7FE               	goto	i2l1025
  2594   00186C                     i2u185_40:
  2595   00186C  A89E               	btfss	158,4,c	;volatile
  2596   00186E  D7FE               	goto	i2u185_40
  2597   001870  0E6F               	movlw	111
  2598   001872  6EAD               	movwf	173,c	;volatile
  2599   001874                     i2l1031:
  2600   001874  A2AC               	btfss	172,1,c	;volatile
  2601   001876  D7FE               	goto	i2l1031
  2602   001878                     i2u187_40:
  2603   001878  A89E               	btfss	158,4,c	;volatile
  2604   00187A  D7FE               	goto	i2u187_40
  2605   00187C  0E75               	movlw	117
  2606   00187E  6EAD               	movwf	173,c	;volatile
  2607   001880                     i2l1037:
  2608   001880  A2AC               	btfss	172,1,c	;volatile
  2609   001882  D7FE               	goto	i2l1037
  2610   001884                     i2u189_40:
  2611   001884  A89E               	btfss	158,4,c	;volatile
  2612   001886  D7FE               	goto	i2u189_40
  2613   001888  0E72               	movlw	114
  2614   00188A  6EAD               	movwf	173,c	;volatile
  2615   00188C                     i2l1043:
  2616   00188C  A2AC               	btfss	172,1,c	;volatile
  2617   00188E  D7FE               	goto	i2l1043
  2618   001890                     i2u191_40:
  2619   001890  A89E               	btfss	158,4,c	;volatile
  2620   001892  D7FE               	goto	i2u191_40
  2621   001894  0E73               	movlw	115
  2622   001896  6EAD               	movwf	173,c	;volatile
  2623   001898                     i2l1049:
  2624   001898  A2AC               	btfss	172,1,c	;volatile
  2625   00189A  D7FE               	goto	i2l1049
  2626                           
  2627                           ;T5.c: 28: for (a=0;a<65000;a++)
  2628   00189C  0E00               	movlw	0
  2629   00189E  6E02               	movwf	(tache5@a+1)^0,c
  2630   0018A0  0E00               	movlw	0
  2631   0018A2  6E01               	movwf	tache5@a^0,c
  2632   0018A4                     i2l3673:
  2633                           
  2634                           ;T5.c: 29: ;
  2635   0018A4  4A01               	infsnz	tache5@a^0,f,c
  2636   0018A6  2A02               	incf	(tache5@a+1)^0,f,c
  2637   0018A8  0EE8               	movlw	232
  2638   0018AA  5C01               	subwf	tache5@a^0,w,c
  2639   0018AC  0EFD               	movlw	253
  2640   0018AE  5802               	subwfb	(tache5@a+1)^0,w,c
  2641   0018B0  A0D8               	btfss	status,0,c
  2642   0018B2  D7F8               	goto	i2l3673
  2643                           
  2644                           ;T5.c: 30: for (a=0;a<65000;a++)
  2645   0018B4  0E00               	movlw	0
  2646   0018B6  6E02               	movwf	(tache5@a+1)^0,c
  2647   0018B8  0E00               	movlw	0
  2648   0018BA  6E01               	movwf	tache5@a^0,c
  2649   0018BC                     i2l3683:
  2650                           
  2651                           ;T5.c: 31: ;
  2652   0018BC  4A01               	infsnz	tache5@a^0,f,c
  2653   0018BE  2A02               	incf	(tache5@a+1)^0,f,c
  2654   0018C0  0EE8               	movlw	232
  2655   0018C2  5C01               	subwf	tache5@a^0,w,c
  2656   0018C4  0EFD               	movlw	253
  2657   0018C6  5802               	subwfb	(tache5@a+1)^0,w,c
  2658   0018C8  B0D8               	btfsc	status,0,c
  2659   0018CA  D78E               	goto	__ptext8
  2660   0018CC  D7F7               	goto	i2l3683
  2661   0018CE                     __end_of_tache5:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _tache4 *****************
  2665 ;; Defined at:
  2666 ;;		line 3 in file "T4.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  a               2    0[COMRAM] unsigned int 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		_fonction_d_interruption
  2690 ;;		_initialisation_du_systeme
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text9
  2695   0019AC                     __ptext9:
  2696                           	callstack 0
  2697   0019AC                     _tache4:
  2698                           	callstack 28
  2699                           
  2700                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2701                           
  2702                           ;incstack = 0
  2703                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2704   0019AC  A89E               	btfss	158,4,c	;volatile
  2705   0019AE  D7FE               	goto	__ptext9
  2706   0019B0  0E54               	movlw	84
  2707   0019B2  6EAD               	movwf	173,c	;volatile
  2708   0019B4                     i2l783:
  2709   0019B4  A2AC               	btfss	172,1,c	;volatile
  2710   0019B6  D7FE               	goto	i2l783
  2711   0019B8                     i2u134_40:
  2712   0019B8  A89E               	btfss	158,4,c	;volatile
  2713   0019BA  D7FE               	goto	i2u134_40
  2714   0019BC  0E41               	movlw	65
  2715   0019BE  6EAD               	movwf	173,c	;volatile
  2716   0019C0                     i2l789:
  2717   0019C0  A2AC               	btfss	172,1,c	;volatile
  2718   0019C2  D7FE               	goto	i2l789
  2719   0019C4                     i2u136_40:
  2720   0019C4  A89E               	btfss	158,4,c	;volatile
  2721   0019C6  D7FE               	goto	i2u136_40
  2722   0019C8  0E43               	movlw	67
  2723   0019CA  6EAD               	movwf	173,c	;volatile
  2724   0019CC                     i2l795:
  2725   0019CC  A2AC               	btfss	172,1,c	;volatile
  2726   0019CE  D7FE               	goto	i2l795
  2727   0019D0                     i2u138_40:
  2728   0019D0  A89E               	btfss	158,4,c	;volatile
  2729   0019D2  D7FE               	goto	i2u138_40
  2730   0019D4  0E48               	movlw	72
  2731   0019D6  6EAD               	movwf	173,c	;volatile
  2732   0019D8                     i2l801:
  2733   0019D8  A2AC               	btfss	172,1,c	;volatile
  2734   0019DA  D7FE               	goto	i2l801
  2735   0019DC                     i2u140_40:
  2736   0019DC  A89E               	btfss	158,4,c	;volatile
  2737   0019DE  D7FE               	goto	i2u140_40
  2738   0019E0  0E45               	movlw	69
  2739   0019E2  6EAD               	movwf	173,c	;volatile
  2740   0019E4                     i2l807:
  2741   0019E4  A2AC               	btfss	172,1,c	;volatile
  2742   0019E6  D7FE               	goto	i2l807
  2743   0019E8                     i2u142_40:
  2744   0019E8  A89E               	btfss	158,4,c	;volatile
  2745   0019EA  D7FE               	goto	i2u142_40
  2746   0019EC  0E34               	movlw	52
  2747   0019EE  6EAD               	movwf	173,c	;volatile
  2748   0019F0                     i2l813:
  2749   0019F0  A2AC               	btfss	172,1,c	;volatile
  2750   0019F2  D7FE               	goto	i2l813
  2751   0019F4                     i2u144_40:
  2752   0019F4  A89E               	btfss	158,4,c	;volatile
  2753   0019F6  D7FE               	goto	i2u144_40
  2754   0019F8  0E5F               	movlw	95
  2755   0019FA  6EAD               	movwf	173,c	;volatile
  2756   0019FC                     i2l819:
  2757   0019FC  A2AC               	btfss	172,1,c	;volatile
  2758   0019FE  D7FE               	goto	i2l819
  2759   001A00                     i2u146_40:
  2760   001A00  A89E               	btfss	158,4,c	;volatile
  2761   001A02  D7FE               	goto	i2u146_40
  2762   001A04  0E45               	movlw	69
  2763   001A06  6EAD               	movwf	173,c	;volatile
  2764   001A08                     i2l825:
  2765   001A08  A2AC               	btfss	172,1,c	;volatile
  2766   001A0A  D7FE               	goto	i2l825
  2767   001A0C                     i2u148_40:
  2768   001A0C  A89E               	btfss	158,4,c	;volatile
  2769   001A0E  D7FE               	goto	i2u148_40
  2770   001A10  0E4E               	movlw	78
  2771   001A12  6EAD               	movwf	173,c	;volatile
  2772   001A14                     i2l831:
  2773   001A14  A2AC               	btfss	172,1,c	;volatile
  2774   001A16  D7FE               	goto	i2l831
  2775   001A18                     i2u150_40:
  2776   001A18  A89E               	btfss	158,4,c	;volatile
  2777   001A1A  D7FE               	goto	i2u150_40
  2778   001A1C  0E5F               	movlw	95
  2779   001A1E  6EAD               	movwf	173,c	;volatile
  2780   001A20                     i2l837:
  2781   001A20  A2AC               	btfss	172,1,c	;volatile
  2782   001A22  D7FE               	goto	i2l837
  2783   001A24                     i2u152_40:
  2784   001A24  A89E               	btfss	158,4,c	;volatile
  2785   001A26  D7FE               	goto	i2u152_40
  2786   001A28  0E43               	movlw	67
  2787   001A2A  6EAD               	movwf	173,c	;volatile
  2788   001A2C                     i2l843:
  2789   001A2C  A2AC               	btfss	172,1,c	;volatile
  2790   001A2E  D7FE               	goto	i2l843
  2791   001A30                     i2u154_40:
  2792   001A30  A89E               	btfss	158,4,c	;volatile
  2793   001A32  D7FE               	goto	i2u154_40
  2794   001A34  0E4F               	movlw	79
  2795   001A36  6EAD               	movwf	173,c	;volatile
  2796   001A38                     i2l849:
  2797   001A38  A2AC               	btfss	172,1,c	;volatile
  2798   001A3A  D7FE               	goto	i2l849
  2799   001A3C                     i2u156_40:
  2800   001A3C  A89E               	btfss	158,4,c	;volatile
  2801   001A3E  D7FE               	goto	i2u156_40
  2802   001A40  0E55               	movlw	85
  2803   001A42  6EAD               	movwf	173,c	;volatile
  2804   001A44                     i2l855:
  2805   001A44  A2AC               	btfss	172,1,c	;volatile
  2806   001A46  D7FE               	goto	i2l855
  2807   001A48                     i2u158_40:
  2808   001A48  A89E               	btfss	158,4,c	;volatile
  2809   001A4A  D7FE               	goto	i2u158_40
  2810   001A4C  0E52               	movlw	82
  2811   001A4E  6EAD               	movwf	173,c	;volatile
  2812   001A50                     i2l861:
  2813   001A50  A2AC               	btfss	172,1,c	;volatile
  2814   001A52  D7FE               	goto	i2l861
  2815   001A54                     i2u160_40:
  2816   001A54  A89E               	btfss	158,4,c	;volatile
  2817   001A56  D7FE               	goto	i2u160_40
  2818   001A58  0E53               	movlw	83
  2819   001A5A  6EAD               	movwf	173,c	;volatile
  2820   001A5C                     i2l867:
  2821   001A5C  A2AC               	btfss	172,1,c	;volatile
  2822   001A5E  D7FE               	goto	i2l867
  2823                           
  2824                           ;T4.c: 28: for (a=0;a<65000;a++)
  2825   001A60  0E00               	movlw	0
  2826   001A62  6E02               	movwf	(tache4@a+1)^0,c
  2827   001A64  0E00               	movlw	0
  2828   001A66  6E01               	movwf	tache4@a^0,c
  2829   001A68                     i2l3633:
  2830                           
  2831                           ;T4.c: 29: ;
  2832   001A68  4A01               	infsnz	tache4@a^0,f,c
  2833   001A6A  2A02               	incf	(tache4@a+1)^0,f,c
  2834   001A6C  0EE8               	movlw	232
  2835   001A6E  5C01               	subwf	tache4@a^0,w,c
  2836   001A70  0EFD               	movlw	253
  2837   001A72  5802               	subwfb	(tache4@a+1)^0,w,c
  2838   001A74  B0D8               	btfsc	status,0,c
  2839   001A76  D79A               	goto	__ptext9
  2840   001A78  D7F7               	goto	i2l3633
  2841   001A7A                     __end_of_tache4:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _tache3 *****************
  2845 ;; Defined at:
  2846 ;;		line 3 in file "T3.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;Total ram usage:        0 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_fonction_d_interruption
  2870 ;;		_initialisation_du_systeme
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text10
  2875   0018CE                     __ptext10:
  2876                           	callstack 0
  2877   0018CE                     _tache3:
  2878                           	callstack 28
  2879                           
  2880                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2881                           
  2882                           ;incstack = 0
  2883                           ;T3.c: 5: while(1)
  2884   0018CE  0100               	movlb	0	; () banked
  2885   0018D0  0566               	decf	102,w,b
  2886   0018D2  A4D8               	btfss	status,2,c
  2887   0018D4  D014               	goto	i2l3533
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2891   0018D6  0ECA               	movlw	202
  2892   0018D8  6567               	cpfsgt	103,b
  2893   0018DA  D011               	goto	i2l3533
  2894                           
  2895                           ; BSR set to: 0
  2896   0018DC  0ED1               	movlw	209
  2897   0018DE  6167               	cpfslt	103,b
  2898   0018E0  D00E               	goto	i2l3533
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2902   0018E2  0E70               	movlw	112
  2903   0018E4  6568               	cpfsgt	104,b
  2904   0018E6  D004               	goto	i2l3527
  2905                           
  2906                           ; BSR set to: 0
  2907   0018E8  0E79               	movlw	121
  2908   0018EA  6168               	cpfslt	104,b
  2909   0018EC  D001               	goto	i2l3527
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2913   0018EE  848B               	bsf	139,2,c	;volatile
  2914   0018F0                     i2l3527:
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2918   0018F0  0E78               	movlw	120
  2919   0018F2  6568               	cpfsgt	104,b
  2920   0018F4  D004               	goto	i2l3533
  2921                           
  2922                           ; BSR set to: 0
  2923   0018F6  0E7F               	movlw	127
  2924   0018F8  6168               	cpfslt	104,b
  2925   0018FA  D001               	goto	i2l3533
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2929   0018FC  948B               	bcf	139,2,c	;volatile
  2930   0018FE                     i2l3533:
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2934   0018FE  0566               	decf	102,w,b
  2935   001900  A4D8               	btfss	status,2,c
  2936   001902  D014               	goto	i2l3551
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2940   001904  0ED6               	movlw	214
  2941   001906  6567               	cpfsgt	103,b
  2942   001908  D011               	goto	i2l3551
  2943                           
  2944                           ; BSR set to: 0
  2945   00190A  0EDD               	movlw	221
  2946   00190C  6167               	cpfslt	103,b
  2947   00190E  D00E               	goto	i2l3551
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2951   001910  0E70               	movlw	112
  2952   001912  6568               	cpfsgt	104,b
  2953   001914  D004               	goto	i2l3545
  2954                           
  2955                           ; BSR set to: 0
  2956   001916  0E79               	movlw	121
  2957   001918  6168               	cpfslt	104,b
  2958   00191A  D001               	goto	i2l3545
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2962   00191C  828B               	bsf	139,1,c	;volatile
  2963   00191E                     i2l3545:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2967   00191E  0E78               	movlw	120
  2968   001920  6568               	cpfsgt	104,b
  2969   001922  D004               	goto	i2l3551
  2970                           
  2971                           ; BSR set to: 0
  2972   001924  0E7F               	movlw	127
  2973   001926  6168               	cpfslt	104,b
  2974   001928  D001               	goto	i2l3551
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2978   00192A  928B               	bcf	139,1,c	;volatile
  2979   00192C                     i2l3551:
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2983   00192C  0566               	decf	102,w,b
  2984   00192E  A4D8               	btfss	status,2,c
  2985   001930  D014               	goto	i2l3569
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2989   001932  0EE2               	movlw	226
  2990   001934  6567               	cpfsgt	103,b
  2991   001936  D011               	goto	i2l3569
  2992                           
  2993                           ; BSR set to: 0
  2994   001938  0EE9               	movlw	233
  2995   00193A  6167               	cpfslt	103,b
  2996   00193C  D00E               	goto	i2l3569
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  3000   00193E  0E70               	movlw	112
  3001   001940  6568               	cpfsgt	104,b
  3002   001942  D004               	goto	i2l3563
  3003                           
  3004                           ; BSR set to: 0
  3005   001944  0E79               	movlw	121
  3006   001946  6168               	cpfslt	104,b
  3007   001948  D001               	goto	i2l3563
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  3011   00194A  808F               	bsf	143,0,c	;volatile
  3012   00194C                     i2l3563:
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  3016   00194C  0E78               	movlw	120
  3017   00194E  6568               	cpfsgt	104,b
  3018   001950  D004               	goto	i2l3569
  3019                           
  3020                           ; BSR set to: 0
  3021   001952  0E7F               	movlw	127
  3022   001954  6168               	cpfslt	104,b
  3023   001956  D001               	goto	i2l3569
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  3027   001958  908F               	bcf	143,0,c	;volatile
  3028   00195A                     i2l3569:
  3029                           
  3030                           ; BSR set to: 0
  3031                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  3032   00195A  0566               	decf	102,w,b
  3033   00195C  A4D8               	btfss	status,2,c
  3034   00195E  D011               	goto	i2l3583
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  3038   001960  0EB3               	movlw	179
  3039   001962  6567               	cpfsgt	103,b
  3040   001964  D00E               	goto	i2l3583
  3041                           
  3042                           ; BSR set to: 0
  3043   001966  0EE6               	movlw	230
  3044   001968  6167               	cpfslt	103,b
  3045   00196A  D00B               	goto	i2l3583
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  3049   00196C  0E13               	movlw	19
  3050   00196E  6568               	cpfsgt	104,b
  3051   001970  D008               	goto	i2l3583
  3052                           
  3053                           ; BSR set to: 0
  3054   001972  0E3C               	movlw	60
  3055   001974  6168               	cpfslt	104,b
  3056   001976  D005               	goto	i2l3583
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3060   001978  948B               	bcf	139,2,c	;volatile
  3061   00197A  828B               	bsf	139,1,c	;volatile
  3062   00197C  808F               	bsf	143,0,c	;volatile
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;T3.c: 62: TEST = 1;
  3066   00197E  0E01               	movlw	1
  3067   001980  6F81               	movwf	129,b
  3068   001982                     i2l3583:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3072   001982  0566               	decf	102,w,b
  3073   001984  A4D8               	btfss	status,2,c
  3074   001986  D7A3               	goto	__ptext10
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3078   001988  0E77               	movlw	119
  3079   00198A  6567               	cpfsgt	103,b
  3080   00198C  D7A0               	goto	__ptext10
  3081                           
  3082                           ; BSR set to: 0
  3083   00198E  0EAA               	movlw	170
  3084   001990  6167               	cpfslt	103,b
  3085   001992  D79D               	goto	__ptext10
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3089   001994  0E13               	movlw	19
  3090   001996  6568               	cpfsgt	104,b
  3091   001998  D79A               	goto	__ptext10
  3092                           
  3093                           ; BSR set to: 0
  3094   00199A  0E3C               	movlw	60
  3095   00199C  6168               	cpfslt	104,b
  3096   00199E  D797               	goto	__ptext10
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3100   0019A0  948B               	bcf	139,2,c	;volatile
  3101   0019A2  928B               	bcf	139,1,c	;volatile
  3102   0019A4  908F               	bcf	143,0,c	;volatile
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;T3.c: 74: TEST = 0;
  3106   0019A6  0E00               	movlw	0
  3107   0019A8  6F81               	movwf	129,b
  3108                           
  3109                           ; BSR set to: 0
  3110   0019AA  D791               	goto	__ptext10
  3111   0019AC                     __end_of_tache3:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _tache2 *****************
  3115 ;; Defined at:
  3116 ;;		line 3 in file "T2.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;		None
  3119 ;; Auto vars:     Size  Location     Type
  3120 ;;  iy              2   11[COMRAM] unsigned int 
  3121 ;;  ix              2    9[COMRAM] unsigned int 
  3122 ;;  ly              1   16[COMRAM] unsigned char 
  3123 ;;  hy              1   15[COMRAM] unsigned char 
  3124 ;;  lx              1   14[COMRAM] unsigned char 
  3125 ;;  hx              1   13[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  1    wreg      void 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;Total ram usage:       10 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 1
  3142 ;; This function calls:
  3143 ;;		___lwdiv
  3144 ;;		_tp_delai
  3145 ;; This function is called by:
  3146 ;;		_fonction_d_interruption
  3147 ;;		_initialisation_du_systeme
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text11
  3152   0016F4                     __ptext11:
  3153                           	callstack 0
  3154   0016F4                     _tache2:
  3155                           	callstack 27
  3156                           
  3157                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;incstack = 0
  3161   0016F4  0E00               	movlw	0
  3162   0016F6  0100               	movlb	0	; () banked
  3163   0016F8  6F66               	movwf	102,b
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3167   0016FA  868F               	bsf	143,3,c	;volatile
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;T2.c: 13: LATGbits.LATG4=0;
  3171   0016FC  988F               	bcf	143,4,c	;volatile
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;T2.c: 14: tp_delai(3000);
  3175   0016FE  0E0B               	movlw	11
  3176   001700  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3177   001702  0EB8               	movlw	184
  3178   001704  6E01               	movwf	tp_delai@itpd^0,c
  3179   001706  ECF3  F011         	call	_tp_delai	;wreg free
  3180                           
  3181                           ;T2.c: 18: ADCON2=0x16;
  3182   00170A  0E16               	movlw	22
  3183   00170C  6EC0               	movwf	192,c	;volatile
  3184                           
  3185                           ;T2.c: 19: ADCON0=0x01;
  3186   00170E  0E01               	movlw	1
  3187   001710  6EC2               	movwf	194,c	;volatile
  3188                           
  3189                           ;T2.c: 20: ADCON0=0x03;
  3190   001712  0E03               	movlw	3
  3191   001714  6EC2               	movwf	194,c	;volatile
  3192   001716                     i2l564:
  3193   001716  B2C2               	btfsc	194,1,c	;volatile
  3194   001718  D7FE               	goto	i2l564
  3195                           
  3196                           ;T2.c: 23: hx=ADRESH;
  3197   00171A  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3198                           
  3199                           ;T2.c: 24: lx=ADRESL;
  3200   00171E  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3201                           
  3202                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3203   001722  C00F  F008         	movff	tache2@lx,??_tache2
  3204   001726  0E0F               	movlw	15
  3205   001728  1608               	andwf	??_tache2^0,f,c
  3206   00172A  B4D8               	btfsc	status,2,c
  3207   00172C  D004               	goto	i2l4969
  3208   00172E  0E00               	movlw	0
  3209   001730  6E0E               	movwf	tache2@hx^0,c
  3210   001732  0E00               	movlw	0
  3211   001734  6E0F               	movwf	tache2@lx^0,c
  3212   001736                     i2l4969:
  3213                           
  3214                           ;T2.c: 31: if (hx>=10)
  3215   001736  0E09               	movlw	9
  3216   001738  640E               	cpfsgt	tache2@hx^0,c
  3217   00173A  D7DC               	goto	__ptext11
  3218                           
  3219                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3220   00173C  968F               	bcf	143,3,c	;volatile
  3221                           
  3222                           ;T2.c: 34: LATGbits.LATG4=1;
  3223   00173E  888F               	bsf	143,4,c	;volatile
  3224                           
  3225                           ;T2.c: 35: tp_delai(3000);
  3226   001740  0E0B               	movlw	11
  3227   001742  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3228   001744  0EB8               	movlw	184
  3229   001746  6E01               	movwf	tp_delai@itpd^0,c
  3230   001748  ECF3  F011         	call	_tp_delai	;wreg free
  3231                           
  3232                           ;T2.c: 39: ADCON2=0x16;
  3233   00174C  0E16               	movlw	22
  3234   00174E  6EC0               	movwf	192,c	;volatile
  3235                           
  3236                           ;T2.c: 40: ADCON0=0x05;
  3237   001750  0E05               	movlw	5
  3238   001752  6EC2               	movwf	194,c	;volatile
  3239                           
  3240                           ;T2.c: 41: ADCON0=0x07;
  3241   001754  0E07               	movlw	7
  3242   001756  6EC2               	movwf	194,c	;volatile
  3243   001758                     i2l569:
  3244   001758  B2C2               	btfsc	194,1,c	;volatile
  3245   00175A  D7FE               	goto	i2l569
  3246                           
  3247                           ;T2.c: 44: hy=ADRESH;
  3248   00175C  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3249                           
  3250                           ;T2.c: 45: ly=ADRESL;
  3251   001760  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3252                           
  3253                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3254   001764  C011  F008         	movff	tache2@ly,??_tache2
  3255   001768  0E0F               	movlw	15
  3256   00176A  1608               	andwf	??_tache2^0,f,c
  3257   00176C  B4D8               	btfsc	status,2,c
  3258   00176E  D004               	goto	i2l4985
  3259   001770  0E00               	movlw	0
  3260   001772  6E10               	movwf	tache2@hy^0,c
  3261   001774  0E00               	movlw	0
  3262   001776  6E11               	movwf	tache2@ly^0,c
  3263   001778                     i2l4985:
  3264                           
  3265                           ;T2.c: 51: if (hy>=20)
  3266   001778  0E13               	movlw	19
  3267   00177A  6410               	cpfsgt	tache2@hy^0,c
  3268   00177C  D7BB               	goto	__ptext11
  3269                           
  3270                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3271   00177E  500E               	movf	tache2@hx^0,w,c
  3272   001780  6E08               	movwf	??_tache2^0,c
  3273   001782  500F               	movf	tache2@lx^0,w,c
  3274   001784  6E0A               	movwf	tache2@ix^0,c
  3275   001786  C008  F00B         	movff	??_tache2,tache2@ix+1
  3276                           
  3277                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3278   00178A  5010               	movf	tache2@hy^0,w,c
  3279   00178C  6E08               	movwf	??_tache2^0,c
  3280   00178E  5011               	movf	tache2@ly^0,w,c
  3281   001790  6E0C               	movwf	tache2@iy^0,c
  3282   001792  C008  F00D         	movff	??_tache2,tache2@iy+1
  3283                           
  3284                           ;T2.c: 55: ix=ix-3150;
  3285   001796  0EB2               	movlw	178
  3286   001798  240A               	addwf	tache2@ix^0,w,c
  3287   00179A  6E0A               	movwf	tache2@ix^0,c
  3288   00179C  0EF3               	movlw	243
  3289   00179E  200B               	addwfc	(tache2@ix+1)^0,w,c
  3290   0017A0  6E0B               	movwf	(tache2@ix+1)^0,c
  3291                           
  3292                           ;T2.c: 56: iy=iy-6500;
  3293   0017A2  0E9C               	movlw	156
  3294   0017A4  240C               	addwf	tache2@iy^0,w,c
  3295   0017A6  6E0C               	movwf	tache2@iy^0,c
  3296   0017A8  0EE6               	movlw	230
  3297   0017AA  200D               	addwfc	(tache2@iy+1)^0,w,c
  3298   0017AC  6E0D               	movwf	(tache2@iy+1)^0,c
  3299                           
  3300                           ;T2.c: 58: TP_x=ix/246;
  3301   0017AE  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3302   0017B2  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3303   0017B6  0E00               	movlw	0
  3304   0017B8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3305   0017BA  0EF6               	movlw	246
  3306   0017BC  6E03               	movwf	___lwdiv@divisor^0,c
  3307   0017BE  ECF8  F00F         	call	___lwdiv	;wreg free
  3308   0017C2  5001               	movf	?___lwdiv^0,w,c
  3309   0017C4  0100               	movlb	0	; () banked
  3310   0017C6  6F67               	movwf	103,b
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;T2.c: 59: TP_y=127-(iy/409);
  3314   0017C8  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3315   0017CC  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3316   0017D0  0E01               	movlw	1
  3317   0017D2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3318   0017D4  0E99               	movlw	153
  3319   0017D6  6E03               	movwf	___lwdiv@divisor^0,c
  3320   0017D8  ECF8  F00F         	call	___lwdiv	;wreg free
  3321   0017DC  5001               	movf	?___lwdiv^0,w,c
  3322   0017DE  087F               	sublw	127
  3323   0017E0  0100               	movlb	0	; () banked
  3324   0017E2  6F68               	movwf	104,b
  3325                           
  3326                           ;T2.c: 68: TP_appui=1;
  3327   0017E4  0E01               	movlw	1
  3328   0017E6  D788               	goto	L3
  3329   0017E8                     __end_of_tache2:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _tp_delai *****************
  3333 ;; Defined at:
  3334 ;;		line 87 in file "T2.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  itpd            2    0[COMRAM] unsigned int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;Total ram usage:        2 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_tache2
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text12
  3362   0023E6                     __ptext12:
  3363                           	callstack 0
  3364   0023E6                     _tp_delai:
  3365                           	callstack 27
  3366                           
  3367                           ;T2.c: 89: while(itpd>0)
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;incstack = 0
  3371   0023E6  D006               	goto	i2l4517
  3372   0023E8                     i2l582:
  3373                           
  3374                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3375   0023E8  F000               	nop	
  3376   0023EA  F000               	nop	
  3377   0023EC  F000               	nop	
  3378                           
  3379                           ;T2.c: 92: itpd--;
  3380   0023EE  0601               	decf	tp_delai@itpd^0,f,c
  3381   0023F0  A0D8               	btfss	status,0,c
  3382   0023F2  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3383   0023F4                     i2l4517:
  3384   0023F4  5001               	movf	tp_delai@itpd^0,w,c
  3385   0023F6  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3386   0023F8  B4D8               	btfsc	status,2,c
  3387   0023FA  0012               	return	
  3388   0023FC  D7F5               	goto	i2l582
  3389   0023FE                     __end_of_tp_delai:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function ___lwdiv *****************
  3393 ;; Defined at:
  3394 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  dividend        2    0[COMRAM] unsigned int 
  3397 ;;  divisor         2    2[COMRAM] unsigned int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  quotient        2    4[COMRAM] unsigned int 
  3400 ;;  counter         1    6[COMRAM] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  2    0[COMRAM] unsigned int 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:        7 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_tache2
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text13
  3424   001FF0                     __ptext13:
  3425                           	callstack 0
  3426   001FF0                     ___lwdiv:
  3427                           	callstack 27
  3428                           
  3429                           ;incstack = 0
  3430   001FF0  0E00               	movlw	0
  3431   001FF2  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3432   001FF4  0E00               	movlw	0
  3433   001FF6  6E05               	movwf	___lwdiv@quotient^0,c
  3434   001FF8  5003               	movf	___lwdiv@divisor^0,w,c
  3435   001FFA  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3436   001FFC  B4D8               	btfsc	status,2,c
  3437   001FFE  D01C               	goto	i2l2251
  3438   002000  0E01               	movlw	1
  3439   002002  6E07               	movwf	___lwdiv@counter^0,c
  3440   002004  D004               	goto	i2l4583
  3441   002006                     i2l4581:
  3442   002006  90D8               	bcf	status,0,c
  3443   002008  3603               	rlcf	___lwdiv@divisor^0,f,c
  3444   00200A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3445   00200C  2A07               	incf	___lwdiv@counter^0,f,c
  3446   00200E                     i2l4583:
  3447   00200E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3448   002010  D7FA               	goto	i2l4581
  3449   002012                     i2u275_40:
  3450   002012  90D8               	bcf	status,0,c
  3451   002014  3605               	rlcf	___lwdiv@quotient^0,f,c
  3452   002016  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3453   002018  5003               	movf	___lwdiv@divisor^0,w,c
  3454   00201A  5C01               	subwf	___lwdiv@dividend^0,w,c
  3455   00201C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3456   00201E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3457   002020  A0D8               	btfss	status,0,c
  3458   002022  D005               	goto	i2l4593
  3459   002024  5003               	movf	___lwdiv@divisor^0,w,c
  3460   002026  5E01               	subwf	___lwdiv@dividend^0,f,c
  3461   002028  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3462   00202A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3463   00202C  8005               	bsf	___lwdiv@quotient^0,0,c
  3464   00202E                     i2l4593:
  3465   00202E  90D8               	bcf	status,0,c
  3466   002030  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3467   002032  3203               	rrcf	___lwdiv@divisor^0,f,c
  3468   002034  2E07               	decfsz	___lwdiv@counter^0,f,c
  3469   002036  D7ED               	goto	i2u275_40
  3470   002038                     i2l2251:
  3471   002038  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3472   00203C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3473   002040  0012               	return		;funcret
  3474   002042                     __end_of___lwdiv:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _tache1 *****************
  3478 ;; Defined at:
  3479 ;;		line 3 in file "T1.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;  i               1    0        unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;Total ram usage:        2 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 5
  3500 ;; This function calls:
  3501 ;;		_Init
  3502 ;;		_charger
  3503 ;;		_clear_graphics
  3504 ;;		_clear_line
  3505 ;;		_clear_text
  3506 ;;		_draw_char
  3507 ;;		_draw_dec8
  3508 ;;		_draw_hex8
  3509 ;;		_draw_square
  3510 ;;		_draw_string
  3511 ;;		_goto_lico
  3512 ;;		_init_rxtx
  3513 ;;		_initialisation_afficheur
  3514 ;;		_lecture_8bit_analogique
  3515 ;;		_plot1
  3516 ;;		_vide
  3517 ;;		_vitesseAdmin
  3518 ;; This function is called by:
  3519 ;;		_fonction_d_interruption
  3520 ;;		_initialisation_du_systeme
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           	psect	text14
  3525   0010DA                     __ptext14:
  3526                           	callstack 0
  3527   0010DA                     _tache1:
  3528                           	callstack 23
  3529                           
  3530                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3531                           
  3532                           ;incstack = 0
  3533   0010DA  9EF2               	bcf	242,7,c	;volatile
  3534                           
  3535                           ;T1.c: 8: initialisation_afficheur();
  3536   0010DC  EC3D  F00D         	call	_initialisation_afficheur	;wreg free
  3537                           
  3538                           ;T1.c: 9: clear_text();
  3539   0010E0  EC2A  F011         	call	_clear_text	;wreg free
  3540                           
  3541                           ;T1.c: 10: clear_graphics();
  3542   0010E4  EC42  F011         	call	_clear_graphics	;wreg free
  3543                           
  3544                           ;T1.c: 11: init_rxtx();
  3545   0010E8  EC81  F011         	call	_init_rxtx	;wreg free
  3546                           
  3547                           ;T1.c: 12: Init(2);
  3548   0010EC  0E02               	movlw	2
  3549   0010EE  6EE6               	movwf	postinc1,c
  3550   0010F0  EC70  F011         	call	_Init	;wreg free
  3551                           
  3552                           ;T1.c: 13: RXTX_libre=1;
  3553   0010F4  0E01               	movlw	1
  3554   0010F6  0100               	movlb	0	; () banked
  3555   0010F8  6F80               	movwf	128,b
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;T1.c: 14: TXREG1='R';
  3559   0010FA  0E52               	movlw	82
  3560   0010FC  6EAD               	movwf	173,c	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3564   0010FE  8EF2               	bsf	242,7,c	;volatile
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3568   001100  948B               	bcf	139,2,c	;volatile
  3569                           
  3570                           ; BSR set to: 0
  3571   001102  928B               	bcf	139,1,c	;volatile
  3572                           
  3573                           ; BSR set to: 0
  3574   001104  908F               	bcf	143,0,c	;volatile
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;T1.c: 19: vitesse=0;
  3578   001106  0E00               	movlw	0
  3579   001108  6F73               	movwf	115,b
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;T1.c: 20: batterie=15;
  3583   00110A  0E0F               	movlw	15
  3584   00110C  6F74               	movwf	116,b
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;T1.c: 21: n_octet_badge=0;
  3588   00110E  0E00               	movlw	0
  3589   001110  6F7F               	movwf	127,b
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;T1.c: 22: TEST=0;
  3593   001112  0E00               	movlw	0
  3594   001114  6F81               	movwf	129,b
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;T1.c: 23: Personne=0;
  3598   001116  0E00               	movlw	0
  3599   001118  6F82               	movwf	130,b
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3603   00111A  0E22               	movlw	34
  3604   00111C  6E09               	movwf	goto_lico@colonne^0,c
  3605   00111E  0E0D               	movlw	13
  3606   001120  ECCC  F00F         	call	_goto_lico
  3607   001124  0E52               	movlw	82
  3608   001126  EC11  F011         	call	_draw_char
  3609   00112A  0E20               	movlw	32
  3610   00112C  EC11  F011         	call	_draw_char
  3611   001130  0E56               	movlw	86
  3612   001132  EC11  F011         	call	_draw_char
  3613   001136  0E20               	movlw	32
  3614   001138  EC11  F011         	call	_draw_char
  3615   00113C  0E42               	movlw	66
  3616   00113E  EC11  F011         	call	_draw_char
  3617                           
  3618                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3619   001142  0E22               	movlw	34
  3620   001144  6E09               	movwf	goto_lico@colonne^0,c
  3621   001146  0E0E               	movlw	14
  3622   001148  ECCC  F00F         	call	_goto_lico
  3623   00114C  0E30               	movlw	48
  3624   00114E  EC11  F011         	call	_draw_char
  3625   001152  0E20               	movlw	32
  3626   001154  EC11  F011         	call	_draw_char
  3627   001158  0E30               	movlw	48
  3628   00115A  EC11  F011         	call	_draw_char
  3629   00115E  0E20               	movlw	32
  3630   001160  EC11  F011         	call	_draw_char
  3631   001164  0E30               	movlw	48
  3632   001166  EC11  F011         	call	_draw_char
  3633                           
  3634                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3635   00116A  0E22               	movlw	34
  3636   00116C  6E09               	movwf	goto_lico@colonne^0,c
  3637   00116E  0E0F               	movlw	15
  3638   001170  ECCC  F00F         	call	_goto_lico
  3639   001174  0E31               	movlw	49
  3640   001176  EC11  F011         	call	_draw_char
  3641   00117A  0E20               	movlw	32
  3642   00117C  EC11  F011         	call	_draw_char
  3643   001180  0E31               	movlw	49
  3644   001182  EC11  F011         	call	_draw_char
  3645   001186  0E20               	movlw	32
  3646   001188  EC11  F011         	call	_draw_char
  3647   00118C  0E31               	movlw	49
  3648   00118E  EC11  F011         	call	_draw_char
  3649                           
  3650                           ;T1.c: 29: TP_appui=0;
  3651   001192  0E00               	movlw	0
  3652   001194  0100               	movlb	0	; () banked
  3653   001196  6F66               	movwf	102,b
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;T1.c: 30: draw_square(180,20,230,60);
  3657   001198  0E14               	movlw	20
  3658   00119A  6E0F               	movwf	draw_square@y1^0,c
  3659   00119C  0EE6               	movlw	230
  3660   00119E  6E10               	movwf	draw_square@x2^0,c
  3661   0011A0  0E3C               	movlw	60
  3662   0011A2  6E11               	movwf	draw_square@y2^0,c
  3663   0011A4  0EB4               	movlw	180
  3664   0011A6  EC72  F010         	call	_draw_square
  3665                           
  3666                           ;T1.c: 31: draw_square(120,20,170,60);
  3667   0011AA  0E14               	movlw	20
  3668   0011AC  6E0F               	movwf	draw_square@y1^0,c
  3669   0011AE  0EAA               	movlw	170
  3670   0011B0  6E10               	movwf	draw_square@x2^0,c
  3671   0011B2  0E3C               	movlw	60
  3672   0011B4  6E11               	movwf	draw_square@y2^0,c
  3673   0011B6  0E78               	movlw	120
  3674   0011B8  EC72  F010         	call	_draw_square
  3675                           
  3676                           ;T1.c: 33: draw_string(2);
  3677   0011BC  0E02               	movlw	2
  3678   0011BE  6E08               	movwf	draw_string@tableau^0,c
  3679   0011C0  0E00               	movlw	0
  3680   0011C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3681   0011C4  EC99  F00E         	call	_draw_string	;wreg free
  3682   0011C8                     i2l4793:
  3683                           
  3684                           ;T1.c: 36: {;T1.c: 38: goto_lico(0,0);
  3685   0011C8  0E00               	movlw	0
  3686   0011CA  6E09               	movwf	goto_lico@colonne^0,c
  3687   0011CC  0E00               	movlw	0
  3688   0011CE  ECCC  F00F         	call	_goto_lico
  3689                           
  3690                           ;T1.c: 39: draw_string("Marche:");
  3691   0011D2  0E8D               	movlw	low STR_1
  3692   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3693   0011D6  0E10               	movlw	high STR_1
  3694   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3695   0011DA  EC99  F00E         	call	_draw_string	;wreg free
  3696                           
  3697                           ;T1.c: 40: if (PORTBbits.RB0==0)
  3698   0011DE  B081               	btfsc	129,0,c	;volatile
  3699   0011E0  D007               	goto	i2l436
  3700                           
  3701                           ;T1.c: 41: draw_string("AV");
  3702   0011E2  0ED5               	movlw	low STR_2
  3703   0011E4  6E08               	movwf	draw_string@tableau^0,c
  3704   0011E6  0E10               	movlw	high STR_2
  3705   0011E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3706   0011EA  EC99  F00E         	call	_draw_string	;wreg free
  3707   0011EE  D030               	goto	i2l4817
  3708   0011F0                     i2l436:
  3709                           
  3710                           ;T1.c: 42: else;T1.c: 43: if (PORTBbits.RB1==0)
  3711   0011F0  B281               	btfsc	129,1,c	;volatile
  3712   0011F2  D007               	goto	i2l4803
  3713                           
  3714                           ;T1.c: 44: draw_string("AR");
  3715   0011F4  0ED2               	movlw	low STR_3
  3716   0011F6  6E08               	movwf	draw_string@tableau^0,c
  3717   0011F8  0E10               	movlw	high STR_3
  3718   0011FA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3719   0011FC  EC99  F00E         	call	_draw_string	;wreg free
  3720   001200  D027               	goto	i2l4817
  3721   001202                     i2l4803:
  3722                           
  3723                           ;T1.c: 45: else{;T1.c: 46: draw_string("N ");
  3724   001202  0ECC               	movlw	low STR_4
  3725   001204  6E08               	movwf	draw_string@tableau^0,c
  3726   001206  0E10               	movlw	high STR_4
  3727   001208  6E09               	movwf	(draw_string@tableau+1)^0,c
  3728   00120A  EC99  F00E         	call	_draw_string	;wreg free
  3729                           
  3730                           ;T1.c: 48: _delay((unsigned long)((100)*(48000000/4000.0)));
  3731   00120E  0E07               	movlw	7
  3732   001210  6E16               	movwf	(??_tache1+1)^0,c
  3733   001212  0E17               	movlw	23
  3734   001214  6E15               	movwf	??_tache1^0,c
  3735   001216  0E6A               	movlw	106
  3736   001218                     i2u314_47:
  3737   001218  2EE8               	decfsz	wreg,f,c
  3738   00121A  D7FE               	bra	i2u314_47
  3739   00121C  2E15               	decfsz	??_tache1^0,f,c
  3740   00121E  D7FC               	bra	i2u314_47
  3741   001220  2E16               	decfsz	(??_tache1+1)^0,f,c
  3742   001222  D7FA               	bra	i2u314_47
  3743   001224  D000               	nop2	
  3744                           
  3745                           ;T1.c: 49: if(vitesse>0){
  3746   001226  0100               	movlb	0	; () banked
  3747   001228  5173               	movf	115,w,b
  3748   00122A  B4D8               	btfsc	status,2,c
  3749   00122C  D011               	goto	i2l4817
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;T1.c: 50: vitesse=vitesse-1;
  3753   00122E  0573               	decf	115,w,b
  3754   001230  6F73               	movwf	115,b
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;T1.c: 52: goto_lico(5,0);
  3758   001232  0E00               	movlw	0
  3759   001234  6E09               	movwf	goto_lico@colonne^0,c
  3760   001236  0E05               	movlw	5
  3761   001238  ECCC  F00F         	call	_goto_lico
  3762                           
  3763                           ;T1.c: 53: draw_string("Vitesse:");
  3764   00123C  0E7B               	movlw	low STR_5
  3765   00123E  6E08               	movwf	draw_string@tableau^0,c
  3766   001240  0E10               	movlw	high STR_5
  3767   001242  6E09               	movwf	(draw_string@tableau+1)^0,c
  3768   001244  EC99  F00E         	call	_draw_string	;wreg free
  3769                           
  3770                           ;T1.c: 54: draw_dec8(vitesse);
  3771   001248  0100               	movlb	0	; () banked
  3772   00124A  5173               	movf	115,w,b
  3773   00124C  EC4B  F00E         	call	_draw_dec8
  3774   001250                     i2l4817:
  3775                           
  3776                           ;T1.c: 55: };T1.c: 56: };T1.c: 58: goto_lico(7,0);
  3777   001250  0E00               	movlw	0
  3778   001252  6E09               	movwf	goto_lico@colonne^0,c
  3779   001254  0E07               	movlw	7
  3780   001256  ECCC  F00F         	call	_goto_lico
  3781                           
  3782                           ;T1.c: 59: if (PORTEbits.RE4==0){
  3783   00125A  B884               	btfsc	132,4,c	;volatile
  3784   00125C  D007               	goto	i2l4823
  3785                           
  3786                           ;T1.c: 60: draw_string("((!))");
  3787   00125E  0EB1               	movlw	low STR_6
  3788   001260  6E08               	movwf	draw_string@tableau^0,c
  3789   001262  0E10               	movlw	high STR_6
  3790   001264  6E09               	movwf	(draw_string@tableau+1)^0,c
  3791   001266  EC99  F00E         	call	_draw_string	;wreg free
  3792                           
  3793                           ;T1.c: 61: }
  3794   00126A  D006               	goto	i2l4825
  3795   00126C                     i2l4823:
  3796                           
  3797                           ;T1.c: 62: else{;T1.c: 63: draw_string("     ");
  3798   00126C  0E2D               	movlw	low (STR_15+15)
  3799   00126E  6E08               	movwf	draw_string@tableau^0,c
  3800   001270  0E10               	movlw	high (STR_15+15)
  3801   001272  6E09               	movwf	(draw_string@tableau+1)^0,c
  3802   001274  EC99  F00E         	call	_draw_string	;wreg free
  3803   001278                     i2l4825:
  3804                           
  3805                           ;T1.c: 64: };T1.c: 66: goto_lico(1,0);
  3806   001278  0E00               	movlw	0
  3807   00127A  6E09               	movwf	goto_lico@colonne^0,c
  3808   00127C  0E01               	movlw	1
  3809   00127E  ECCC  F00F         	call	_goto_lico
  3810                           
  3811                           ;T1.c: 67: draw_string("Siege:");
  3812   001282  0E9C               	movlw	low STR_8
  3813   001284  6E08               	movwf	draw_string@tableau^0,c
  3814   001286  0E10               	movlw	high STR_8
  3815   001288  6E09               	movwf	(draw_string@tableau+1)^0,c
  3816   00128A  EC99  F00E         	call	_draw_string	;wreg free
  3817                           
  3818                           ;T1.c: 68: if (PORTBbits.RB2==0)
  3819   00128E  B481               	btfsc	129,2,c	;volatile
  3820   001290  D004               	goto	i2l4833
  3821                           
  3822                           ;T1.c: 69: {draw_char('1');}
  3823   001292  0E31               	movlw	49
  3824   001294  EC11  F011         	call	_draw_char
  3825   001298  D003               	goto	i2l4835
  3826   00129A                     i2l4833:
  3827                           
  3828                           ;T1.c: 70: else;T1.c: 71: {draw_char('0');}
  3829   00129A  0E30               	movlw	48
  3830   00129C  EC11  F011         	call	_draw_char
  3831   0012A0                     i2l4835:
  3832                           
  3833                           ;T1.c: 73: goto_lico(2,0);
  3834   0012A0  0E00               	movlw	0
  3835   0012A2  6E09               	movwf	goto_lico@colonne^0,c
  3836   0012A4  0E02               	movlw	2
  3837   0012A6  ECCC  F00F         	call	_goto_lico
  3838                           
  3839                           ;T1.c: 74: draw_string("Temp. Eau:");
  3840   0012AA  0E66               	movlw	low STR_9
  3841   0012AC  6E08               	movwf	draw_string@tableau^0,c
  3842   0012AE  0E10               	movlw	high STR_9
  3843   0012B0  6E09               	movwf	(draw_string@tableau+1)^0,c
  3844   0012B2  EC99  F00E         	call	_draw_string	;wreg free
  3845                           
  3846                           ;T1.c: 75: draw_dec8(lecture_8bit_analogique(2));
  3847   0012B6  0E02               	movlw	2
  3848   0012B8  ECF6  F010         	call	_lecture_8bit_analogique
  3849   0012BC  EC4B  F00E         	call	_draw_dec8
  3850                           
  3851                           ;T1.c: 77: goto_lico(3,0);
  3852   0012C0  0E00               	movlw	0
  3853   0012C2  6E09               	movwf	goto_lico@colonne^0,c
  3854   0012C4  0E03               	movlw	3
  3855   0012C6  ECCC  F00F         	call	_goto_lico
  3856                           
  3857                           ;T1.c: 78: draw_string("Temp. Huile:");
  3858   0012CA  0E41               	movlw	low STR_10
  3859   0012CC  6E08               	movwf	draw_string@tableau^0,c
  3860   0012CE  0E10               	movlw	high STR_10
  3861   0012D0  6E09               	movwf	(draw_string@tableau+1)^0,c
  3862   0012D2  EC99  F00E         	call	_draw_string	;wreg free
  3863                           
  3864                           ;T1.c: 79: draw_dec8(lecture_8bit_analogique(3));
  3865   0012D6  0E03               	movlw	3
  3866   0012D8  ECF6  F010         	call	_lecture_8bit_analogique
  3867   0012DC  EC4B  F00E         	call	_draw_dec8
  3868                           
  3869                           ;T1.c: 81: goto_lico(4,0);
  3870   0012E0  0E00               	movlw	0
  3871   0012E2  6E09               	movwf	goto_lico@colonne^0,c
  3872   0012E4  0E04               	movlw	4
  3873   0012E6  ECCC  F00F         	call	_goto_lico
  3874                           
  3875                           ;T1.c: 82: draw_string("Choc:");
  3876   0012EA  0EB7               	movlw	low STR_11
  3877   0012EC  6E08               	movwf	draw_string@tableau^0,c
  3878   0012EE  0E10               	movlw	high STR_11
  3879   0012F0  6E09               	movwf	(draw_string@tableau+1)^0,c
  3880   0012F2  EC99  F00E         	call	_draw_string	;wreg free
  3881                           
  3882                           ;T1.c: 83: if (PORTBbits.RB3==0)
  3883   0012F6  B681               	btfsc	129,3,c	;volatile
  3884   0012F8  D004               	goto	i2l4855
  3885                           
  3886                           ;T1.c: 84: draw_char('1');
  3887   0012FA  0E31               	movlw	49
  3888   0012FC  EC11  F011         	call	_draw_char
  3889   001300  D003               	goto	i2l4857
  3890   001302                     i2l4855:
  3891                           
  3892                           ;T1.c: 85: else;T1.c: 86: draw_char('0');
  3893   001302  0E30               	movlw	48
  3894   001304  EC11  F011         	call	_draw_char
  3895   001308                     i2l4857:
  3896                           
  3897                           ;T1.c: 88: if(Personne == 2) {
  3898   001308  0E02               	movlw	2
  3899   00130A  0100               	movlb	0	; () banked
  3900   00130C  1982               	xorwf	130,w,b
  3901   00130E  A4D8               	btfss	status,2,c
  3902   001310  D006               	goto	i2l4861
  3903   001312                     i2u283_40:
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;T1.c: 89: vitesseAdmin(Personne);
  3907   001312  C082 F001          	movff	130,vitesseAdmin@a
  3908   001316  6A02               	clrf	(vitesseAdmin@a+1)^0,c
  3909   001318  ECDF  F00E         	call	_vitesseAdmin	;wreg free
  3910                           
  3911                           ;T1.c: 91: }
  3912   00131C  D003               	goto	i2l4865
  3913   00131E                     i2l4861:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;T1.c: 92: else if(Personne ==1){
  3917   00131E  0582               	decf	130,w,b
  3918   001320  B4D8               	btfsc	status,2,c
  3919   001322  D7F7               	goto	i2u283_40
  3920   001324                     i2l4865:
  3921                           
  3922                           ;T1.c: 97: };T1.c: 99: goto_lico(5,0);
  3923   001324  0E00               	movlw	0
  3924   001326  6E09               	movwf	goto_lico@colonne^0,c
  3925   001328  0E05               	movlw	5
  3926   00132A  ECCC  F00F         	call	_goto_lico
  3927                           
  3928                           ;T1.c: 100: draw_string("Vitesse:");
  3929   00132E  0E7B               	movlw	low STR_5
  3930   001330  6E08               	movwf	draw_string@tableau^0,c
  3931   001332  0E10               	movlw	high STR_5
  3932   001334  6E09               	movwf	(draw_string@tableau+1)^0,c
  3933   001336  EC99  F00E         	call	_draw_string	;wreg free
  3934                           
  3935                           ;T1.c: 101: draw_dec8(vitesse);
  3936   00133A  0100               	movlb	0	; () banked
  3937   00133C  5173               	movf	115,w,b
  3938   00133E  EC4B  F00E         	call	_draw_dec8
  3939                           
  3940                           ;T1.c: 103: goto_lico(6,0);
  3941   001342  0E00               	movlw	0
  3942   001344  6E09               	movwf	goto_lico@colonne^0,c
  3943   001346  0E06               	movlw	6
  3944   001348  ECCC  F00F         	call	_goto_lico
  3945                           
  3946                           ;T1.c: 104: draw_string("Batterie:");
  3947   00134C  0E71               	movlw	low STR_13
  3948   00134E  6E08               	movwf	draw_string@tableau^0,c
  3949   001350  0E10               	movlw	high STR_13
  3950   001352  6E09               	movwf	(draw_string@tableau+1)^0,c
  3951   001354  EC99  F00E         	call	_draw_string	;wreg free
  3952                           
  3953                           ;T1.c: 105: if (PORTEbits.RE2==0 && batterie < 100)
  3954   001358  B484               	btfsc	132,2,c	;volatile
  3955   00135A  D005               	goto	i2l4881
  3956   00135C  0E64               	movlw	100
  3957   00135E  0100               	movlb	0	; () banked
  3958   001360  6174               	cpfslt	116,b
  3959   001362  D001               	goto	i2l4881
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;T1.c: 106: batterie++;
  3963   001364  2B74               	incf	116,f,b
  3964   001366                     i2l4881:
  3965                           
  3966                           ;T1.c: 107: if (PORTEbits.RE3==0 && batterie > 0)
  3967   001366  B684               	btfsc	132,3,c	;volatile
  3968   001368  D004               	goto	i2l4887
  3969   00136A  0100               	movlb	0	; () banked
  3970   00136C  5174               	movf	116,w,b
  3971   00136E  A4D8               	btfss	status,2,c
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;T1.c: 108: batterie--;
  3975   001370  0774               	decf	116,f,b
  3976   001372                     i2l4887:
  3977                           
  3978                           ;T1.c: 109: draw_dec8(batterie);
  3979   001372  0100               	movlb	0	; () banked
  3980   001374  5174               	movf	116,w,b
  3981   001376  EC4B  F00E         	call	_draw_dec8
  3982                           
  3983                           ;T1.c: 113: goto_lico(8,0);
  3984   00137A  0E00               	movlw	0
  3985   00137C  6E09               	movwf	goto_lico@colonne^0,c
  3986   00137E  0E08               	movlw	8
  3987   001380  ECCC  F00F         	call	_goto_lico
  3988                           
  3989                           ;T1.c: 114: draw_string("Badge:");
  3990   001384  0E95               	movlw	low STR_14
  3991   001386  6E08               	movwf	draw_string@tableau^0,c
  3992   001388  0E10               	movlw	high STR_14
  3993   00138A  6E09               	movwf	(draw_string@tableau+1)^0,c
  3994   00138C  EC99  F00E         	call	_draw_string	;wreg free
  3995                           
  3996                           ;T1.c: 115: if (n_octet_badge==0)
  3997   001390  0100               	movlb	0	; () banked
  3998   001392  517F               	movf	127,w,b
  3999   001394  A4D8               	btfss	status,2,c
  4000   001396  D007               	goto	i2l4897
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;T1.c: 116: draw_string(" AUCUN              ");
  4004   001398  0E1E               	movlw	low STR_15
  4005   00139A  6E08               	movwf	draw_string@tableau^0,c
  4006   00139C  0E10               	movlw	high STR_15
  4007   00139E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4008   0013A0  EC99  F00E         	call	_draw_string	;wreg free
  4009   0013A4  D01E               	goto	i2l456
  4010   0013A6                     i2l4897:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;T1.c: 117: else;T1.c: 118: {;T1.c: 125: if(Personne==2)
  4014   0013A6  0E02               	movlw	2
  4015   0013A8  1982               	xorwf	130,w,b
  4016   0013AA  A4D8               	btfss	status,2,c
  4017   0013AC  D007               	goto	i2l4901
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;T1.c: 126: {;T1.c: 128: draw_string("Operator");
  4021   0013AE  0E84               	movlw	low STR_16
  4022   0013B0  6E08               	movwf	draw_string@tableau^0,c
  4023   0013B2  0E10               	movlw	high STR_16
  4024   0013B4  6E09               	movwf	(draw_string@tableau+1)^0,c
  4025   0013B6  EC99  F00E         	call	_draw_string	;wreg free
  4026                           
  4027                           ;T1.c: 130: }
  4028   0013BA  D013               	goto	i2l456
  4029   0013BC                     i2l4901:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;T1.c: 131: else if(Personne==1)
  4033   0013BC  0582               	decf	130,w,b
  4034   0013BE  A4D8               	btfss	status,2,c
  4035   0013C0  D007               	goto	i2l4905
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;T1.c: 132: {;T1.c: 134: draw_string(" ADMIN");
  4039   0013C2  0EAA               	movlw	low STR_17
  4040   0013C4  6E08               	movwf	draw_string@tableau^0,c
  4041   0013C6  0E10               	movlw	high STR_17
  4042   0013C8  6E09               	movwf	(draw_string@tableau+1)^0,c
  4043   0013CA  EC99  F00E         	call	_draw_string	;wreg free
  4044                           
  4045                           ;T1.c: 135: }
  4046   0013CE  D009               	goto	i2l456
  4047   0013D0                     i2l4905:
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;T1.c: 136: else if (Personne==0){
  4051   0013D0  5182               	movf	130,w,b
  4052   0013D2  A4D8               	btfss	status,2,c
  4053   0013D4  D006               	goto	i2l456
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;T1.c: 138: draw_string("AUCUN");
  4057   0013D6  0EBD               	movlw	low STR_18
  4058   0013D8  6E08               	movwf	draw_string@tableau^0,c
  4059   0013DA  0E10               	movlw	high STR_18
  4060   0013DC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4061   0013DE  EC99  F00E         	call	_draw_string	;wreg free
  4062   0013E2                     i2l456:
  4063                           
  4064                           ;T1.c: 139: };T1.c: 140: };T1.c: 148: goto_lico(9,0);
  4065                           
  4066                           ; BSR set to: 0
  4067   0013E2  0E00               	movlw	0
  4068   0013E4  6E09               	movwf	goto_lico@colonne^0,c
  4069   0013E6  0E09               	movlw	9
  4070   0013E8  ECCC  F00F         	call	_goto_lico
  4071                           
  4072                           ;T1.c: 149: draw_string("X-Joystick:");
  4073   0013EC  0E4E               	movlw	low STR_19
  4074   0013EE  6E08               	movwf	draw_string@tableau^0,c
  4075   0013F0  0E10               	movlw	high STR_19
  4076   0013F2  6E09               	movwf	(draw_string@tableau+1)^0,c
  4077   0013F4  EC99  F00E         	call	_draw_string	;wreg free
  4078                           
  4079                           ;T1.c: 150: draw_hex8(lecture_8bit_analogique(10));
  4080   0013F8  0E0A               	movlw	10
  4081   0013FA  ECF6  F010         	call	_lecture_8bit_analogique
  4082   0013FE  EC9E  F00F         	call	_draw_hex8
  4083                           
  4084                           ;T1.c: 152: goto_lico(10,0);
  4085   001402  0E00               	movlw	0
  4086   001404  6E09               	movwf	goto_lico@colonne^0,c
  4087   001406  0E0A               	movlw	10
  4088   001408  ECCC  F00F         	call	_goto_lico
  4089                           
  4090                           ;T1.c: 153: draw_string("Y-Joystick:");
  4091   00140C  0E5A               	movlw	low STR_20
  4092   00140E  6E08               	movwf	draw_string@tableau^0,c
  4093   001410  0E10               	movlw	high STR_20
  4094   001412  6E09               	movwf	(draw_string@tableau+1)^0,c
  4095   001414  EC99  F00E         	call	_draw_string	;wreg free
  4096                           
  4097                           ;T1.c: 154: draw_hex8(lecture_8bit_analogique(11));
  4098   001418  0E0B               	movlw	11
  4099   00141A  ECF6  F010         	call	_lecture_8bit_analogique
  4100   00141E  EC9E  F00F         	call	_draw_hex8
  4101                           
  4102                           ;T1.c: 157: goto_lico(5,22);
  4103   001422  0E16               	movlw	22
  4104   001424  6E09               	movwf	goto_lico@colonne^0,c
  4105   001426  0E05               	movlw	5
  4106   001428  ECCC  F00F         	call	_goto_lico
  4107                           
  4108                           ;T1.c: 158: draw_string("VIDE");
  4109   00142C  0EC3               	movlw	low STR_21
  4110   00142E  6E08               	movwf	draw_string@tableau^0,c
  4111   001430  0E10               	movlw	high STR_21
  4112   001432  6E09               	movwf	(draw_string@tableau+1)^0,c
  4113   001434  EC99  F00E         	call	_draw_string	;wreg free
  4114                           
  4115                           ;T1.c: 159: goto_lico(5,31);
  4116   001438  0E1F               	movlw	31
  4117   00143A  6E09               	movwf	goto_lico@colonne^0,c
  4118   00143C  0E05               	movlw	5
  4119   00143E  ECCC  F00F         	call	_goto_lico
  4120                           
  4121                           ;T1.c: 160: draw_string("CHARGE");
  4122   001442  0EA3               	movlw	low STR_22
  4123   001444  6E08               	movwf	draw_string@tableau^0,c
  4124   001446  0E10               	movlw	high STR_22
  4125   001448  6E09               	movwf	(draw_string@tableau+1)^0,c
  4126   00144A  EC99  F00E         	call	_draw_string	;wreg free
  4127                           
  4128                           ;T1.c: 168: if (TP_appui==1)
  4129   00144E  0100               	movlb	0	; () banked
  4130   001450  0566               	decf	102,w,b
  4131   001452  A4D8               	btfss	status,2,c
  4132   001454  D020               	goto	i2l460
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;T1.c: 169: {;T1.c: 170: goto_lico(0,20);
  4136   001456  0E14               	movlw	20
  4137   001458  6E09               	movwf	goto_lico@colonne^0,c
  4138   00145A  0E00               	movlw	0
  4139   00145C  ECCC  F00F         	call	_goto_lico
  4140                           
  4141                           ;T1.c: 171: draw_string("x=");
  4142   001460  0ECF               	movlw	low STR_23
  4143   001462  6E08               	movwf	draw_string@tableau^0,c
  4144   001464  0E10               	movlw	high STR_23
  4145   001466  6E09               	movwf	(draw_string@tableau+1)^0,c
  4146   001468  EC99  F00E         	call	_draw_string	;wreg free
  4147                           
  4148                           ;T1.c: 172: draw_hex8(TP_x);
  4149   00146C  0100               	movlb	0	; () banked
  4150   00146E  5167               	movf	103,w,b
  4151   001470  EC9E  F00F         	call	_draw_hex8
  4152                           
  4153                           ;T1.c: 173: draw_string(" y=");
  4154   001474  0EC8               	movlw	low STR_24
  4155   001476  6E08               	movwf	draw_string@tableau^0,c
  4156   001478  0E10               	movlw	high STR_24
  4157   00147A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4158   00147C  EC99  F00E         	call	_draw_string	;wreg free
  4159                           
  4160                           ;T1.c: 174: draw_hex8(TP_y);
  4161   001480  0100               	movlb	0	; () banked
  4162   001482  5168               	movf	104,w,b
  4163   001484  EC9E  F00F         	call	_draw_hex8
  4164                           
  4165                           ;T1.c: 175: plot1(TP_x,TP_y);
  4166   001488  C068 F009          	movff	104,plot1@y
  4167   00148C  0100               	movlb	0	; () banked
  4168   00148E  5167               	movf	103,w,b
  4169   001490  ECA3  F00D         	call	_plot1
  4170                           
  4171                           ;T1.c: 176: }
  4172   001494  D001               	goto	i2l4939
  4173   001496                     i2l460:
  4174                           
  4175                           ; BSR set to: 0
  4176                           ;T1.c: 177: else;T1.c: 178: {;T1.c: 179: __nop();
  4177   001496  F000               	nop	
  4178   001498                     i2l4939:
  4179                           
  4180                           ;T1.c: 180: };T1.c: 181: if (TEST==1){
  4181   001498  0100               	movlb	0	; () banked
  4182   00149A  0581               	decf	129,w,b
  4183   00149C  B4D8               	btfsc	status,2,c
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;T1.c: 182: charger();
  4187   00149E  EC0B  F012         	call	_charger	;wreg free
  4188                           
  4189                           ;T1.c: 183: };T1.c: 184: if(TEST==0){
  4190   0014A2  0100               	movlb	0	; () banked
  4191   0014A4  5181               	movf	129,w,b
  4192   0014A6  A4D8               	btfss	status,2,c
  4193   0014A8  D68F               	goto	i2l4793
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;T1.c: 185: clear_line(14);
  4197   0014AA  0E0E               	movlw	14
  4198   0014AC  ECA3  F011         	call	_clear_line
  4199                           
  4200                           ;T1.c: 186: vide();
  4201   0014B0  ECFF  F011         	call	_vide	;wreg free
  4202                           
  4203                           ;T1.c: 187: TEST=3;
  4204   0014B4  0E03               	movlw	3
  4205   0014B6  0100               	movlb	0	; () banked
  4206   0014B8  6F81               	movwf	129,b
  4207   0014BA  D686               	goto	i2l4793
  4208   0014BC                     __end_of_tache1:
  4209                           	callstack 0
  4210                           
  4211 ;; *************** function _vitesseAdmin *****************
  4212 ;; Defined at:
  4213 ;;		line 445 in file "afficheur.c"
  4214 ;; Parameters:    Size  Location     Type
  4215 ;;  a               2    0[COMRAM] unsigned int 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  c               2    7[COMRAM] int 
  4218 ;;  b               2    5[COMRAM] int 
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2, status,0
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4231 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;Total ram usage:        9 bytes
  4233 ;; Hardware stack levels used: 1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_tache1
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text15
  4242   001DBE                     __ptext15:
  4243                           	callstack 0
  4244   001DBE                     _vitesseAdmin:
  4245                           	callstack 27
  4246                           
  4247                           ;afficheur.c: 446: int b ;;afficheur.c: 447: int c;;afficheur.c: 448: if (a==1){
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;incstack = 0
  4251   001DBE  0401               	decf	vitesseAdmin@a^0,w,c
  4252   001DC0  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4253   001DC2  A4D8               	btfss	status,2,c
  4254   001DC4  D008               	goto	i2l4443
  4255                           
  4256                           ;afficheur.c: 449: b =50;
  4257   001DC6  0E00               	movlw	0
  4258   001DC8  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4259   001DCA  0E32               	movlw	50
  4260   001DCC  6E06               	movwf	vitesseAdmin@b^0,c
  4261                           
  4262                           ;afficheur.c: 450: c = 80;
  4263   001DCE  0E00               	movlw	0
  4264   001DD0  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4265   001DD2  0E50               	movlw	80
  4266   001DD4  6E08               	movwf	vitesseAdmin@c^0,c
  4267   001DD6                     i2l4443:
  4268                           
  4269                           ;afficheur.c: 451: };afficheur.c: 452: if(a==2){
  4270   001DD6  0E02               	movlw	2
  4271   001DD8  1801               	xorwf	vitesseAdmin@a^0,w,c
  4272   001DDA  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4273   001DDC  A4D8               	btfss	status,2,c
  4274   001DDE  D008               	goto	i2l4447
  4275                           
  4276                           ;afficheur.c: 453: b =15;
  4277   001DE0  0E00               	movlw	0
  4278   001DE2  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4279   001DE4  0E0F               	movlw	15
  4280   001DE6  6E06               	movwf	vitesseAdmin@b^0,c
  4281                           
  4282                           ;afficheur.c: 454: c = 25;
  4283   001DE8  0E00               	movlw	0
  4284   001DEA  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4285   001DEC  0E19               	movlw	25
  4286   001DEE  6E08               	movwf	vitesseAdmin@c^0,c
  4287   001DF0                     i2l4447:
  4288                           
  4289                           ;afficheur.c: 455: };afficheur.c: 456: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4290   001DF0  A081               	btfss	129,0,c	;volatile
  4291   001DF2  D002               	goto	i2u251_40
  4292   001DF4  B281               	btfsc	129,1,c	;volatile
  4293   001DF6  0012               	return	
  4294   001DF8                     i2u251_40:
  4295                           
  4296                           ;afficheur.c: 459: if (PORTEbits.RE4==1){
  4297   001DF8  A884               	btfss	132,4,c	;volatile
  4298   001DFA  0012               	return	
  4299                           
  4300                           ;afficheur.c: 460: if(TEST==1){
  4301   001DFC  0100               	movlb	0	; () banked
  4302   001DFE  0581               	decf	129,w,b
  4303   001E00  A4D8               	btfss	status,2,c
  4304   001E02  D016               	goto	i2l1449
  4305                           
  4306                           ; BSR set to: 0
  4307                           ;afficheur.c: 462: if (PORTEbits.RE0==0 && vitesse < b)
  4308   001E04  B084               	btfsc	132,0,c	;volatile
  4309   001E06  D00D               	goto	i2l4459
  4310                           
  4311                           ; BSR set to: 0
  4312   001E08  5173               	movf	115,w,b
  4313   001E0A  6E03               	movwf	??_vitesseAdmin^0,c
  4314   001E0C  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4315   001E0E  5006               	movf	vitesseAdmin@b^0,w,c
  4316   001E10  5C03               	subwf	??_vitesseAdmin^0,w,c
  4317   001E12  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4318   001E14  0A80               	xorlw	128
  4319   001E16  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4320   001E18  5007               	movf	(vitesseAdmin@b+1)^0,w,c
  4321   001E1A  0A80               	xorlw	128
  4322   001E1C  5805               	subwfb	(??_vitesseAdmin+2)^0,w,c
  4323   001E1E  A0D8               	btfss	status,0,c
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;afficheur.c: 463: vitesse++;
  4327   001E20  2B73               	incf	115,f,b
  4328   001E22                     i2l4459:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;afficheur.c: 464: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4332   001E22  B284               	btfsc	132,1,c	;volatile
  4333   001E24  0012               	return	
  4334                           
  4335                           ; BSR set to: 0
  4336   001E26  5173               	movf	115,w,b
  4337   001E28  B4D8               	btfsc	status,2,c
  4338   001E2A  0012               	return	
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;afficheur.c: 465: vitesse--;
  4342   001E2C  0773               	decf	115,f,b
  4343   001E2E  0012               	return	
  4344   001E30                     i2l1449:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;afficheur.c: 468: if (PORTEbits.RE0==0 && vitesse < c)
  4348   001E30  B084               	btfsc	132,0,c	;volatile
  4349   001E32  D7F7               	goto	i2l4459
  4350                           
  4351                           ; BSR set to: 0
  4352   001E34  5173               	movf	115,w,b
  4353   001E36  6E03               	movwf	??_vitesseAdmin^0,c
  4354   001E38  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4355   001E3A  5008               	movf	vitesseAdmin@c^0,w,c
  4356   001E3C  5C03               	subwf	??_vitesseAdmin^0,w,c
  4357   001E3E  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4358   001E40  0A80               	xorlw	128
  4359   001E42  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4360   001E44  5009               	movf	(vitesseAdmin@c+1)^0,w,c
  4361   001E46  D7E9               	goto	L8
  4362   001E48                     __end_of_vitesseAdmin:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _vide *****************
  4366 ;; Defined at:
  4367 ;;		line 438 in file "afficheur.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;		None
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4385 ;;Total ram usage:        0 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 4
  4388 ;; This function calls:
  4389 ;;		_draw_string
  4390 ;;		_goto_lico
  4391 ;; This function is called by:
  4392 ;;		_tache1
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text16
  4397   0023FE                     __ptext16:
  4398                           	callstack 0
  4399   0023FE                     _vide:
  4400                           	callstack 23
  4401                           
  4402                           ;afficheur.c: 440: goto_lico(14,0);
  4403                           
  4404                           ;incstack = 0
  4405   0023FE  0E00               	movlw	0
  4406   002400  6E09               	movwf	goto_lico@colonne^0,c
  4407   002402  0E0E               	movlw	14
  4408   002404  ECCC  F00F         	call	_goto_lico
  4409                           
  4410                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4411   002408  0E33               	movlw	low STR_26
  4412   00240A  6E08               	movwf	draw_string@tableau^0,c
  4413   00240C  0E10               	movlw	high STR_26
  4414   00240E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4415   002410  EC99  F00E         	call	_draw_string	;wreg free
  4416   002414  0012               	return		;funcret
  4417   002416                     __end_of_vide:
  4418                           	callstack 0
  4419                           
  4420 ;; *************** function _lecture_8bit_analogique *****************
  4421 ;; Defined at:
  4422 ;;		line 60 in file "main.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  channel         1    wreg     unsigned char 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  channel         1    1[COMRAM] unsigned char 
  4427 ;;  ret             1    0[COMRAM] unsigned char 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;Total ram usage:        2 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_tache1
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text17
  4451   0021EC                     __ptext17:
  4452                           	callstack 0
  4453   0021EC                     _lecture_8bit_analogique:
  4454                           	callstack 27
  4455                           
  4456                           ;incstack = 0
  4457                           ;lecture_8bit_analogique@channel stored from wreg
  4458   0021EC  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4459                           
  4460                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4461   0021EE  0E00               	movlw	0
  4462   0021F0  6EC1               	movwf	193,c	;volatile
  4463                           
  4464                           ;main.c: 66: ADCON2=0x16;
  4465   0021F2  0E16               	movlw	22
  4466   0021F4  6EC0               	movwf	192,c	;volatile
  4467                           
  4468                           ;main.c: 67: channel=channel&0x1F;
  4469   0021F6  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4470   0021F8  0B1F               	andlw	31
  4471   0021FA  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4472                           
  4473                           ;main.c: 68: channel=channel<<2;
  4474   0021FC  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4475   0021FE  46E8               	rlncf	wreg,f,c
  4476   002200  0BFC               	andlw	252
  4477   002202  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4478                           
  4479                           ;main.c: 69: ADCON0=channel|0x01;
  4480   002204  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4481   002206  0901               	iorlw	1
  4482   002208  6EC2               	movwf	194,c	;volatile
  4483                           
  4484                           ;main.c: 71: ADCON0bits.GO=1;
  4485   00220A  82C2               	bsf	194,1,c	;volatile
  4486   00220C                     i2l144:
  4487   00220C  B2C2               	btfsc	194,1,c	;volatile
  4488   00220E  D7FE               	goto	i2l144
  4489                           
  4490                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4491   002210  A0C3               	btfss	195,0,c	;volatile
  4492   002212  D003               	goto	i2l147
  4493                           
  4494                           ;main.c: 76: ret=0;
  4495   002214  0E00               	movlw	0
  4496   002216  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4497   002218  D002               	goto	i2l2815
  4498   00221A                     i2l147:
  4499                           
  4500                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4501   00221A  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4502   00221E                     i2l2815:
  4503                           
  4504                           ;main.c: 82: return ret;
  4505   00221E  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4506   002220  0012               	return		;funcret
  4507   002222                     __end_of_lecture_8bit_analogique:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _initialisation_afficheur *****************
  4511 ;; Defined at:
  4512 ;;		line 164 in file "afficheur.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  error_count     1    8[COMRAM] unsigned char 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  1    wreg      void 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;Total ram usage:        1 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; Hardware stack levels required when called: 3
  4533 ;; This function calls:
  4534 ;;		_check_status_ok
  4535 ;;		_command
  4536 ;;		_d1command
  4537 ;;		_d2command
  4538 ;;		_delai_us_char
  4539 ;; This function is called by:
  4540 ;;		_tache1
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text18
  4545   001A7A                     __ptext18:
  4546                           	callstack 0
  4547   001A7A                     _initialisation_afficheur:
  4548                           	callstack 24
  4549                           
  4550                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4551                           
  4552                           ;incstack = 0
  4553   001A7A  0E00               	movlw	0
  4554   001A7C  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4555                           
  4556                           ;afficheur.c: 172: LATH=0;
  4557   001A7E  0E00               	movlw	0
  4558   001A80  6E90               	movwf	144,c	;volatile
  4559                           
  4560                           ;afficheur.c: 173: LATJ=0x1F;
  4561   001A82  0E1F               	movlw	31
  4562   001A84  6E91               	movwf	145,c	;volatile
  4563                           
  4564                           ;afficheur.c: 176: TRISH=0;
  4565   001A86  0E00               	movlw	0
  4566   001A88  6E99               	movwf	153,c	;volatile
  4567                           
  4568                           ;afficheur.c: 177: TRISJ=0;
  4569   001A8A  0E00               	movlw	0
  4570   001A8C  6E9A               	movwf	154,c	;volatile
  4571                           
  4572                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4573   001A8E  9A91               	bcf	145,5,c	;volatile
  4574                           
  4575                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4576   001A90  8C91               	bsf	145,6,c	;volatile
  4577                           
  4578                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4579   001A92  9891               	bcf	145,4,c	;volatile
  4580                           
  4581                           ;afficheur.c: 185: delai_us_char(4);
  4582   001A94  0E04               	movlw	4
  4583   001A96  EC92  F011         	call	_delai_us_char
  4584                           
  4585                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4586   001A9A  8891               	bsf	145,4,c	;volatile
  4587                           
  4588                           ;afficheur.c: 190: delai_us_char(12);
  4589   001A9C  0E0C               	movlw	12
  4590   001A9E  EC92  F011         	call	_delai_us_char
  4591                           
  4592                           ;afficheur.c: 191: while(check_status_ok()==00)
  4593   001AA2  D00C               	goto	i2l4371
  4594   001AA4                     i2l4361:
  4595                           
  4596                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4597   001AA4  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4598                           
  4599                           ;afficheur.c: 194: delai_us_char(12);
  4600   001AA6  0E0C               	movlw	12
  4601   001AA8  EC92  F011         	call	_delai_us_char
  4602                           
  4603                           ;afficheur.c: 195: if (error_count>200)
  4604   001AAC  0EC8               	movlw	200
  4605   001AAE  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4606   001AB0  D005               	goto	i2l4371
  4607                           
  4608                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4609   001AB2  828B               	bsf	139,1,c	;volatile
  4610   001AB4  808F               	bsf	143,0,c	;volatile
  4611   001AB6  948B               	bcf	139,2,c	;volatile
  4612                           
  4613                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4614   001AB8  9EF2               	bcf	242,7,c	;volatile
  4615   001ABA                     i2l1307:
  4616   001ABA  D7FF               	goto	i2l1307
  4617   001ABC                     i2l4371:
  4618   001ABC  EC5A  F011         	call	_check_status_ok	;wreg free
  4619   001AC0  0900               	iorlw	0
  4620   001AC2  B4D8               	btfsc	status,2,c
  4621   001AC4  D7EF               	goto	i2l4361
  4622                           
  4623                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4624   001AC6  0E0F               	movlw	15
  4625   001AC8  6E05               	movwf	d2command@d2^0,c
  4626   001ACA  0E21               	movlw	33
  4627   001ACC  6E06               	movwf	d2command@cmd^0,c
  4628   001ACE  0E27               	movlw	39
  4629   001AD0  EC4A  F010         	call	_d2command
  4630                           
  4631                           ;afficheur.c: 206: d2command(0,0,0x22);
  4632   001AD4  0E00               	movlw	0
  4633   001AD6  6E05               	movwf	d2command@d2^0,c
  4634   001AD8  0E22               	movlw	34
  4635   001ADA  6E06               	movwf	d2command@cmd^0,c
  4636   001ADC  0E00               	movlw	0
  4637   001ADE  EC4A  F010         	call	_d2command
  4638                           
  4639                           ;afficheur.c: 207: d2command(0,0,0x24);
  4640   001AE2  0E00               	movlw	0
  4641   001AE4  6E05               	movwf	d2command@d2^0,c
  4642   001AE6  0E24               	movlw	36
  4643   001AE8  6E06               	movwf	d2command@cmd^0,c
  4644   001AEA  0E00               	movlw	0
  4645   001AEC  EC4A  F010         	call	_d2command
  4646                           
  4647                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4648   001AF0  0E7B               	movlw	123
  4649   001AF2  6E05               	movwf	d2command@d2^0,c
  4650   001AF4  0E40               	movlw	64
  4651   001AF6  6E06               	movwf	d2command@cmd^0,c
  4652   001AF8  0E00               	movlw	0
  4653   001AFA  EC4A  F010         	call	_d2command
  4654                           
  4655                           ;afficheur.c: 211: d2command(40,0,0x41);
  4656   001AFE  0E00               	movlw	0
  4657   001B00  6E05               	movwf	d2command@d2^0,c
  4658   001B02  0E41               	movlw	65
  4659   001B04  6E06               	movwf	d2command@cmd^0,c
  4660   001B06  0E28               	movlw	40
  4661   001B08  EC4A  F010         	call	_d2command
  4662                           
  4663                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4664   001B0C  0E80               	movlw	128
  4665   001B0E  6E05               	movwf	d2command@d2^0,c
  4666   001B10  0E42               	movlw	66
  4667   001B12  6E06               	movwf	d2command@cmd^0,c
  4668   001B14  0E00               	movlw	0
  4669   001B16  EC4A  F010         	call	_d2command
  4670                           
  4671                           ;afficheur.c: 213: d2command(40,0,0x43);
  4672   001B1A  0E00               	movlw	0
  4673   001B1C  6E05               	movwf	d2command@d2^0,c
  4674   001B1E  0E43               	movlw	67
  4675   001B20  6E06               	movwf	d2command@cmd^0,c
  4676   001B22  0E28               	movlw	40
  4677   001B24  EC4A  F010         	call	_d2command
  4678                           
  4679                           ;afficheur.c: 216: command(0x80);
  4680   001B28  0E80               	movlw	128
  4681   001B2A  ECC0  F011         	call	_command
  4682                           
  4683                           ;afficheur.c: 219: command(0x9C);
  4684   001B2E  0E9C               	movlw	156
  4685   001B30  ECC0  F011         	call	_command
  4686                           
  4687                           ;afficheur.c: 222: command(0xA0);
  4688   001B34  0EA0               	movlw	160
  4689   001B36  ECC0  F011         	call	_command
  4690                           
  4691                           ;afficheur.c: 225: d1command(0x02,0x70);
  4692   001B3A  0E70               	movlw	112
  4693   001B3C  6E05               	movwf	d1command@cmd^0,c
  4694   001B3E  0E02               	movlw	2
  4695   001B40  ECBD  F010         	call	_d1command
  4696   001B44  0012               	return		;funcret
  4697   001B46                     __end_of_initialisation_afficheur:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function _check_status_ok *****************
  4701 ;; Defined at:
  4702 ;;		line 30 in file "afficheur.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;		None
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;  res             1    0[COMRAM] unsigned char 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      unsigned char 
  4709 ;; Registers used:
  4710 ;;		wreg, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;Total ram usage:        1 bytes
  4721 ;; Hardware stack levels used: 1
  4722 ;; This function calls:
  4723 ;;		Nothing
  4724 ;; This function is called by:
  4725 ;;		_initialisation_afficheur
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text19
  4730   0022B4                     __ptext19:
  4731                           	callstack 0
  4732   0022B4                     _check_status_ok:
  4733                           	callstack 26
  4734                           
  4735                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4736                           
  4737                           ;incstack = 0
  4738   0022B4  6899               	setf	153,c	;volatile
  4739                           
  4740                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4741   0022B6  8091               	bsf	145,0,c	;volatile
  4742                           
  4743                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4744   0022B8  9691               	bcf	145,3,c	;volatile
  4745                           
  4746                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4747   0022BA  9291               	bcf	145,1,c	;volatile
  4748                           
  4749                           ;afficheur.c: 39: __nop();
  4750   0022BC  F000               	nop	
  4751                           
  4752                           ;afficheur.c: 40: __nop();
  4753   0022BE  F000               	nop	
  4754                           
  4755                           ;afficheur.c: 41: __nop();
  4756   0022C0  F000               	nop	
  4757                           
  4758                           ;afficheur.c: 42: res=PORTH;
  4759   0022C2  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4760                           
  4761                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4762   0022C6  8291               	bsf	145,1,c	;volatile
  4763                           
  4764                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4765   0022C8  8691               	bsf	145,3,c	;volatile
  4766                           
  4767                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4768   0022CA  5001               	movf	check_status_ok@res^0,w,c
  4769   0022CC  0B03               	andlw	3
  4770   0022CE  0A03               	xorlw	3
  4771   0022D0  A4D8               	btfss	status,2,c
  4772   0022D2  D002               	goto	i2l2785
  4773                           
  4774                           ;afficheur.c: 47: res=1;
  4775   0022D4  0E01               	movlw	1
  4776   0022D6  D001               	goto	L4
  4777   0022D8                     i2l2785:
  4778                           
  4779                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4780   0022D8  0E00               	movlw	0
  4781   0022DA                     L4:
  4782   0022DA  6E01               	movwf	check_status_ok@res^0,c
  4783                           
  4784                           ;afficheur.c: 50: return res;
  4785   0022DC  5001               	movf	check_status_ok@res^0,w,c
  4786   0022DE  0012               	return		;funcret
  4787   0022E0                     __end_of_check_status_ok:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _init_rxtx *****************
  4791 ;; Defined at:
  4792 ;;		line 4 in file "rxtx.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; This function calls:
  4813 ;;		Nothing
  4814 ;; This function is called by:
  4815 ;;		_tache1
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text20
  4820   002302                     __ptext20:
  4821                           	callstack 0
  4822   002302                     _init_rxtx:
  4823                           	callstack 27
  4824                           
  4825                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4826                           
  4827                           ;incstack = 0
  4828   002302  9C94               	bcf	148,6,c	;volatile
  4829                           
  4830                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4831   002304  8E94               	bsf	148,7,c	;volatile
  4832                           
  4833                           ;rxtx.c: 8: BAUDCON1=0x08;
  4834   002306  0E08               	movlw	8
  4835   002308  6E65               	movwf	101,c	;volatile
  4836                           
  4837                           ;rxtx.c: 9: SPBRGH1=0x04;
  4838   00230A  0E04               	movlw	4
  4839   00230C  6ED4               	movwf	212,c	;volatile
  4840                           
  4841                           ;rxtx.c: 10: SPBRG1=0xE1;
  4842   00230E  0EE1               	movlw	225
  4843   002310  6EAF               	movwf	175,c	;volatile
  4844                           
  4845                           ;rxtx.c: 11: TXSTA1=0x04;
  4846   002312  0E04               	movlw	4
  4847   002314  6EAC               	movwf	172,c	;volatile
  4848                           
  4849                           ;rxtx.c: 12: RCSTA1=0x80;
  4850   002316  0E80               	movlw	128
  4851   002318  6EAB               	movwf	171,c	;volatile
  4852                           
  4853                           ;rxtx.c: 13: TXSTA1=0x24;
  4854   00231A  0E24               	movlw	36
  4855   00231C  6EAC               	movwf	172,c	;volatile
  4856                           
  4857                           ;rxtx.c: 14: RCSTA1=0x90;
  4858   00231E  0E90               	movlw	144
  4859   002320  6EAB               	movwf	171,c	;volatile
  4860   002322  0012               	return		;funcret
  4861   002324                     __end_of_init_rxtx:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _draw_square *****************
  4865 ;; Defined at:
  4866 ;;		line 325 in file "afficheur.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  x1              1    wreg     unsigned char 
  4869 ;;  y1              1   14[COMRAM] unsigned char 
  4870 ;;  x2              1   15[COMRAM] unsigned char 
  4871 ;;  y2              1   16[COMRAM] unsigned char 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  x1              1   17[COMRAM] unsigned char 
  4874 ;;  y               1   19[COMRAM] unsigned char 
  4875 ;;  x               1   18[COMRAM] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4885 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;Total ram usage:        6 bytes
  4890 ;; Hardware stack levels used: 1
  4891 ;; Hardware stack levels required when called: 4
  4892 ;; This function calls:
  4893 ;;		_plot1
  4894 ;; This function is called by:
  4895 ;;		_tache1
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text21
  4900   0020E4                     __ptext21:
  4901                           	callstack 0
  4902   0020E4                     _draw_square:
  4903                           	callstack 23
  4904                           
  4905                           ;incstack = 0
  4906                           ;draw_square@x1 stored from wreg
  4907   0020E4  6E12               	movwf	draw_square@x1^0,c
  4908                           
  4909                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4910   0020E6  C012  F013         	movff	draw_square@x1,draw_square@x
  4911   0020EA  D00B               	goto	i2l4409
  4912   0020EC                     i2l4405:
  4913                           
  4914                           ;afficheur.c: 330: plot1(x, y1);
  4915   0020EC  C00F  F009         	movff	draw_square@y1,plot1@y
  4916   0020F0  5013               	movf	draw_square@x^0,w,c
  4917   0020F2  ECA3  F00D         	call	_plot1
  4918                           
  4919                           ;afficheur.c: 331: plot1(x, y2);
  4920   0020F6  C011  F009         	movff	draw_square@y2,plot1@y
  4921   0020FA  5013               	movf	draw_square@x^0,w,c
  4922   0020FC  ECA3  F00D         	call	_plot1
  4923   002100  2A13               	incf	draw_square@x^0,f,c
  4924   002102                     i2l4409:
  4925   002102  5013               	movf	draw_square@x^0,w,c
  4926   002104  5C10               	subwf	draw_square@x2^0,w,c
  4927   002106  B0D8               	btfsc	status,0,c
  4928   002108  D7F1               	goto	i2l4405
  4929                           
  4930                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4931   00210A  C00F  F014         	movff	draw_square@y1,draw_square@y
  4932   00210E  D00B               	goto	i2l4415
  4933   002110                     i2l4411:
  4934                           
  4935                           ;afficheur.c: 336: plot1(x1, y);
  4936   002110  C014  F009         	movff	draw_square@y,plot1@y
  4937   002114  5012               	movf	draw_square@x1^0,w,c
  4938   002116  ECA3  F00D         	call	_plot1
  4939                           
  4940                           ;afficheur.c: 337: plot1(x2, y);
  4941   00211A  C014  F009         	movff	draw_square@y,plot1@y
  4942   00211E  5010               	movf	draw_square@x2^0,w,c
  4943   002120  ECA3  F00D         	call	_plot1
  4944   002124  2A14               	incf	draw_square@y^0,f,c
  4945   002126                     i2l4415:
  4946   002126  5014               	movf	draw_square@y^0,w,c
  4947   002128  5C11               	subwf	draw_square@y2^0,w,c
  4948   00212A  A0D8               	btfss	status,0,c
  4949   00212C  0012               	return	
  4950   00212E  D7F0               	goto	i2l4411
  4951   002130                     __end_of_draw_square:
  4952                           	callstack 0
  4953                           
  4954 ;; *************** function _plot1 *****************
  4955 ;; Defined at:
  4956 ;;		line 390 in file "afficheur.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  x               1    wreg     unsigned char 
  4959 ;;  y               1    8[COMRAM] unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  x               1   13[COMRAM] unsigned char 
  4962 ;;  add             2   11[COMRAM] unsigned int 
  4963 ;; Return value:  Size  Location     Type
  4964 ;;                  1    wreg      void 
  4965 ;; Registers used:
  4966 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4967 ;; Tracked objects:
  4968 ;;		On entry : 0/0
  4969 ;;		On exit  : 0/0
  4970 ;;		Unchanged: 0/0
  4971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4972 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4976 ;;Total ram usage:        6 bytes
  4977 ;; Hardware stack levels used: 1
  4978 ;; Hardware stack levels required when called: 3
  4979 ;; This function calls:
  4980 ;;		___awdiv
  4981 ;;		___awmod
  4982 ;;		_command
  4983 ;;		_d2command
  4984 ;; This function is called by:
  4985 ;;		_tache1
  4986 ;;		_draw_square
  4987 ;;		_draw_filled_square
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           	psect	text22
  4992   001B46                     __ptext22:
  4993                           	callstack 0
  4994   001B46                     _plot1:
  4995                           	callstack 24
  4996                           
  4997                           ;incstack = 0
  4998                           ;plot1@x stored from wreg
  4999   001B46  6E0E               	movwf	plot1@x^0,c
  5000                           
  5001                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  5002   001B48  C00E  F001         	movff	plot1@x,___awdiv@dividend
  5003   001B4C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5004   001B4E  0E00               	movlw	0
  5005   001B50  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5006   001B52  0E06               	movlw	6
  5007   001B54  6E03               	movwf	___awdiv@divisor^0,c
  5008   001B56  EC24  F00F         	call	___awdiv	;wreg free
  5009   001B5A  5009               	movf	plot1@y^0,w,c
  5010   001B5C  0D28               	mullw	40
  5011   001B5E  CFF3 F00A          	movff	prodl,??_plot1
  5012   001B62  CFF4 F00B          	movff	prodh,??_plot1+1
  5013   001B66  5001               	movf	?___awdiv^0,w,c
  5014   001B68  240A               	addwf	??_plot1^0,w,c
  5015   001B6A  6E0C               	movwf	plot1@add^0,c
  5016   001B6C  5002               	movf	(?___awdiv+1)^0,w,c
  5017   001B6E  200B               	addwfc	(??_plot1+1)^0,w,c
  5018   001B70  6E0D               	movwf	(plot1@add+1)^0,c
  5019                           
  5020                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  5021   001B72  500D               	movf	(plot1@add+1)^0,w,c
  5022   001B74  6E05               	movwf	d2command@d2^0,c
  5023   001B76  0E24               	movlw	36
  5024   001B78  6E06               	movwf	d2command@cmd^0,c
  5025   001B7A  500C               	movf	plot1@add^0,w,c
  5026   001B7C  EC4A  F010         	call	_d2command
  5027                           
  5028                           ;afficheur.c: 397: switch(x%6)
  5029   001B80  D018               	goto	i2l4335
  5030   001B82                     i2l4321:
  5031   001B82  0EFD               	movlw	253
  5032   001B84  ECC0  F011         	call	_command
  5033   001B88  0012               	return	
  5034   001B8A                     i2l4323:
  5035   001B8A  0EFC               	movlw	252
  5036   001B8C  ECC0  F011         	call	_command
  5037   001B90  0012               	return	
  5038   001B92                     i2l4325:
  5039   001B92  0EFB               	movlw	251
  5040   001B94  ECC0  F011         	call	_command
  5041   001B98  0012               	return	
  5042   001B9A                     i2l4327:
  5043   001B9A  0EFA               	movlw	250
  5044   001B9C  ECC0  F011         	call	_command
  5045   001BA0  0012               	return	
  5046   001BA2                     i2l4329:
  5047   001BA2  0EF9               	movlw	249
  5048   001BA4  ECC0  F011         	call	_command
  5049   001BA8  0012               	return	
  5050   001BAA                     i2l4331:
  5051   001BAA  0EF8               	movlw	248
  5052   001BAC  ECC0  F011         	call	_command
  5053   001BB0  0012               	return	
  5054   001BB2                     i2l4335:
  5055   001BB2  C00E  F001         	movff	plot1@x,___awmod@dividend
  5056   001BB6  6A02               	clrf	(___awmod@dividend+1)^0,c
  5057   001BB8  0E00               	movlw	0
  5058   001BBA  6E04               	movwf	(___awmod@divisor+1)^0,c
  5059   001BBC  0E06               	movlw	6
  5060   001BBE  6E03               	movwf	___awmod@divisor^0,c
  5061   001BC0  EC66  F00F         	call	___awmod	;wreg free
  5062                           
  5063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5064                           ; Switch size 1, requested type "simple"
  5065                           ; Number of cases is 1, Range of values is 0 to 0
  5066                           ; switch strategies available:
  5067                           ; Name         Instructions Cycles
  5068                           ; simple_byte            4     3 (average)
  5069                           ;	Chosen strategy is simple_byte
  5070   001BC4  5002               	movf	(?___awmod+1)^0,w,c
  5071   001BC6  0A00               	xorlw	0	; case 0
  5072   001BC8  A4D8               	btfss	status,2,c
  5073   001BCA  0012               	return	
  5074                           
  5075                           ; Switch size 1, requested type "simple"
  5076                           ; Number of cases is 6, Range of values is 0 to 5
  5077                           ; switch strategies available:
  5078                           ; Name         Instructions Cycles
  5079                           ; simple_byte           19    10 (average)
  5080                           ;	Chosen strategy is simple_byte
  5081   001BCC  5001               	movf	?___awmod^0,w,c
  5082   001BCE  0A00               	xorlw	0	; case 0
  5083   001BD0  B4D8               	btfsc	status,2,c
  5084   001BD2  D7D7               	goto	i2l4321
  5085   001BD4  0A01               	xorlw	1	; case 1
  5086   001BD6  B4D8               	btfsc	status,2,c
  5087   001BD8  D7D8               	goto	i2l4323
  5088   001BDA  0A03               	xorlw	3	; case 2
  5089   001BDC  B4D8               	btfsc	status,2,c
  5090   001BDE  D7D9               	goto	i2l4325
  5091   001BE0  0A01               	xorlw	1	; case 3
  5092   001BE2  B4D8               	btfsc	status,2,c
  5093   001BE4  D7DA               	goto	i2l4327
  5094   001BE6  0A07               	xorlw	7	; case 4
  5095   001BE8  B4D8               	btfsc	status,2,c
  5096   001BEA  D7DB               	goto	i2l4329
  5097   001BEC  0A01               	xorlw	1	; case 5
  5098   001BEE  A4D8               	btfss	status,2,c
  5099   001BF0  0012               	return	
  5100   001BF2  D7DB               	goto	i2l4331
  5101   001BF4                     __end_of_plot1:
  5102                           	callstack 0
  5103                           
  5104 ;; *************** function _command *****************
  5105 ;; Defined at:
  5106 ;;		line 90 in file "afficheur.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  cmd             1    wreg     unsigned char 
  5109 ;; Auto vars:     Size  Location     Type
  5110 ;;  cmd             1    4[COMRAM] unsigned char 
  5111 ;;  res             1    0        unsigned char 
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  1    wreg      unsigned char 
  5114 ;; Registers used:
  5115 ;;		wreg, status,2, status,0, cstack
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;Total ram usage:        1 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; Hardware stack levels required when called: 2
  5128 ;; This function calls:
  5129 ;;		_delai_us_char
  5130 ;;		_wait_status_ok
  5131 ;;		_write_c_aff
  5132 ;; This function is called by:
  5133 ;;		_initialisation_afficheur
  5134 ;;		_plot1
  5135 ;;		_plot0
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           	psect	text23
  5140   002380                     __ptext23:
  5141                           	callstack 0
  5142   002380                     _command:
  5143                           	callstack 24
  5144                           
  5145                           ;incstack = 0
  5146                           ;command@cmd stored from wreg
  5147   002380  6E05               	movwf	command@cmd^0,c
  5148                           
  5149                           ;afficheur.c: 96: if(wait_status_ok()==1)
  5150   002382  EC21  F010         	call	_wait_status_ok	;wreg free
  5151   002386  06E8               	decf	wreg,f,c
  5152   002388  A4D8               	btfss	status,2,c
  5153   00238A  0012               	return	
  5154                           
  5155                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  5156   00238C  0E0C               	movlw	12
  5157   00238E  EC92  F011         	call	_delai_us_char
  5158                           
  5159                           ;afficheur.c: 99: write_c_aff(cmd);
  5160   002392  5005               	movf	command@cmd^0,w,c
  5161   002394  ECDA  F011         	call	_write_c_aff
  5162   002398  0012               	return		;funcret
  5163   00239A                     __end_of_command:
  5164                           	callstack 0
  5165                           
  5166 ;; *************** function ___awmod *****************
  5167 ;; Defined at:
  5168 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;  dividend        2    0[COMRAM] int 
  5171 ;;  divisor         2    2[COMRAM] int 
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;  sign            1    5[COMRAM] unsigned char 
  5174 ;;  counter         1    4[COMRAM] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  2    0[COMRAM] int 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;Total ram usage:        6 bytes
  5189 ;; Hardware stack levels used: 1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_plot1
  5194 ;;		_plot0
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           	psect	text24
  5199   001ECC                     __ptext24:
  5200                           	callstack 0
  5201   001ECC                     ___awmod:
  5202                           	callstack 26
  5203                           
  5204                           ;incstack = 0
  5205   001ECC  0E00               	movlw	0
  5206   001ECE  6E06               	movwf	___awmod@sign^0,c
  5207   001ED0  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5208   001ED2  D006               	goto	i2l4253
  5209   001ED4  6C01               	negf	___awmod@dividend^0,c
  5210   001ED6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5211   001ED8  B0D8               	btfsc	status,0,c
  5212   001EDA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5213   001EDC  0E01               	movlw	1
  5214   001EDE  6E06               	movwf	___awmod@sign^0,c
  5215   001EE0                     i2l4253:
  5216   001EE0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5217   001EE2  D004               	goto	i2l4257
  5218   001EE4  6C03               	negf	___awmod@divisor^0,c
  5219   001EE6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5220   001EE8  B0D8               	btfsc	status,0,c
  5221   001EEA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5222   001EEC                     i2l4257:
  5223   001EEC  5003               	movf	___awmod@divisor^0,w,c
  5224   001EEE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5225   001EF0  B4D8               	btfsc	status,2,c
  5226   001EF2  D018               	goto	i2l4273
  5227   001EF4  0E01               	movlw	1
  5228   001EF6  6E05               	movwf	___awmod@counter^0,c
  5229   001EF8  D004               	goto	i2l4263
  5230   001EFA                     i2l4261:
  5231   001EFA  90D8               	bcf	status,0,c
  5232   001EFC  3603               	rlcf	___awmod@divisor^0,f,c
  5233   001EFE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5234   001F00  2A05               	incf	___awmod@counter^0,f,c
  5235   001F02                     i2l4263:
  5236   001F02  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5237   001F04  D7FA               	goto	i2l4261
  5238   001F06                     i2u223_40:
  5239   001F06  5003               	movf	___awmod@divisor^0,w,c
  5240   001F08  5C01               	subwf	___awmod@dividend^0,w,c
  5241   001F0A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5242   001F0C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5243   001F0E  A0D8               	btfss	status,0,c
  5244   001F10  D004               	goto	i2l4269
  5245   001F12  5003               	movf	___awmod@divisor^0,w,c
  5246   001F14  5E01               	subwf	___awmod@dividend^0,f,c
  5247   001F16  5004               	movf	(___awmod@divisor+1)^0,w,c
  5248   001F18  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5249   001F1A                     i2l4269:
  5250   001F1A  90D8               	bcf	status,0,c
  5251   001F1C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5252   001F1E  3203               	rrcf	___awmod@divisor^0,f,c
  5253   001F20  2E05               	decfsz	___awmod@counter^0,f,c
  5254   001F22  D7F1               	goto	i2u223_40
  5255   001F24                     i2l4273:
  5256   001F24  5006               	movf	___awmod@sign^0,w,c
  5257   001F26  B4D8               	btfsc	status,2,c
  5258   001F28  D004               	goto	i2l4277
  5259   001F2A  6C01               	negf	___awmod@dividend^0,c
  5260   001F2C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5261   001F2E  B0D8               	btfsc	status,0,c
  5262   001F30  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5263   001F32                     i2l4277:
  5264   001F32  C001  F001         	movff	___awmod@dividend,?___awmod
  5265   001F36  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5266   001F3A  0012               	return		;funcret
  5267   001F3C                     __end_of___awmod:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function _draw_hex8 *****************
  5271 ;; Defined at:
  5272 ;;		line 252 in file "afficheur.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  octet           1    wreg     unsigned char 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  octet           1    7[COMRAM] unsigned char 
  5277 ;;  c               1    8[COMRAM] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 3
  5294 ;; This function calls:
  5295 ;;		_d1command
  5296 ;; This function is called by:
  5297 ;;		_tache1
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text25
  5302   001F3C                     __ptext25:
  5303                           	callstack 0
  5304   001F3C                     _draw_hex8:
  5305                           	callstack 24
  5306                           
  5307                           ;incstack = 0
  5308                           ;draw_hex8@octet stored from wreg
  5309   001F3C  6E08               	movwf	draw_hex8@octet^0,c
  5310                           
  5311                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5312   001F3E  3808               	swapf	draw_hex8@octet^0,w,c
  5313   001F40  0B0F               	andlw	15
  5314   001F42  6E09               	movwf	draw_hex8@c^0,c
  5315                           
  5316                           ;afficheur.c: 257: if (c>9)
  5317   001F44  0E09               	movlw	9
  5318   001F46  6409               	cpfsgt	draw_hex8@c^0,c
  5319   001F48  D003               	goto	i2l4479
  5320                           
  5321                           ;afficheur.c: 258: c=c+0x17;
  5322   001F4A  5009               	movf	draw_hex8@c^0,w,c
  5323   001F4C  0F17               	addlw	23
  5324   001F4E  D002               	goto	L5
  5325   001F50                     i2l4479:
  5326                           
  5327                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5328   001F50  5009               	movf	draw_hex8@c^0,w,c
  5329   001F52  0F10               	addlw	16
  5330   001F54                     L5:
  5331   001F54  6E09               	movwf	draw_hex8@c^0,c
  5332   001F56  D001               	goto	i2l4481
  5333   001F58                     i2l1336:
  5334                           
  5335                           ;afficheur.c: 262: __nop();
  5336   001F58  F000               	nop	
  5337   001F5A                     i2l4481:
  5338   001F5A  0EC0               	movlw	192
  5339   001F5C  6E05               	movwf	d1command@cmd^0,c
  5340   001F5E  5009               	movf	draw_hex8@c^0,w,c
  5341   001F60  ECBD  F010         	call	_d1command
  5342   001F64  0900               	iorlw	0
  5343   001F66  B4D8               	btfsc	status,2,c
  5344   001F68  D7F7               	goto	i2l1336
  5345                           
  5346                           ;afficheur.c: 264: c=(octet&0x0F);
  5347   001F6A  5008               	movf	draw_hex8@octet^0,w,c
  5348   001F6C  0B0F               	andlw	15
  5349   001F6E  6E09               	movwf	draw_hex8@c^0,c
  5350                           
  5351                           ;afficheur.c: 265: if (c>9)
  5352   001F70  0E09               	movlw	9
  5353   001F72  6409               	cpfsgt	draw_hex8@c^0,c
  5354   001F74  D003               	goto	i2l4487
  5355                           
  5356                           ;afficheur.c: 266: c=c+0x17;
  5357   001F76  5009               	movf	draw_hex8@c^0,w,c
  5358   001F78  0F17               	addlw	23
  5359   001F7A  D002               	goto	L6
  5360   001F7C                     i2l4487:
  5361                           
  5362                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5363   001F7C  5009               	movf	draw_hex8@c^0,w,c
  5364   001F7E  0F10               	addlw	16
  5365   001F80                     L6:
  5366   001F80  6E09               	movwf	draw_hex8@c^0,c
  5367   001F82  D001               	goto	i2l4489
  5368   001F84                     i2l1341:
  5369                           
  5370                           ;afficheur.c: 270: __nop();
  5371   001F84  F000               	nop	
  5372   001F86                     i2l4489:
  5373   001F86  0EC0               	movlw	192
  5374   001F88  6E05               	movwf	d1command@cmd^0,c
  5375   001F8A  5009               	movf	draw_hex8@c^0,w,c
  5376   001F8C  ECBD  F010         	call	_d1command
  5377   001F90  0900               	iorlw	0
  5378   001F92  A4D8               	btfss	status,2,c
  5379   001F94  0012               	return	
  5380   001F96  D7F6               	goto	i2l1341
  5381   001F98                     __end_of_draw_hex8:
  5382                           	callstack 0
  5383                           
  5384 ;; *************** function _draw_dec8 *****************
  5385 ;; Defined at:
  5386 ;;		line 274 in file "afficheur.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  octet           1    wreg     unsigned char 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;  octet           1   10[COMRAM] unsigned char 
  5391 ;;  c               1   13[COMRAM] unsigned char 
  5392 ;;  dix             1   12[COMRAM] unsigned char 
  5393 ;;  cent            1   11[COMRAM] unsigned char 
  5394 ;;  unit            1    9[COMRAM] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;                  1    wreg      void 
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;Total ram usage:        6 bytes
  5409 ;; Hardware stack levels used: 1
  5410 ;; Hardware stack levels required when called: 3
  5411 ;; This function calls:
  5412 ;;		___awdiv
  5413 ;;		_d1command
  5414 ;; This function is called by:
  5415 ;;		_tache1
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text26
  5420   001C96                     __ptext26:
  5421                           	callstack 0
  5422   001C96                     _draw_dec8:
  5423                           	callstack 24
  5424                           
  5425                           ;incstack = 0
  5426                           ;draw_dec8@octet stored from wreg
  5427   001C96  6E0B               	movwf	draw_dec8@octet^0,c
  5428                           
  5429                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5430   001C98  C00B  F001         	movff	draw_dec8@octet,___awdiv@dividend
  5431   001C9C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5432   001C9E  0E00               	movlw	0
  5433   001CA0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5434   001CA2  0E64               	movlw	100
  5435   001CA4  6E03               	movwf	___awdiv@divisor^0,c
  5436   001CA6  EC24  F00F         	call	___awdiv	;wreg free
  5437   001CAA  5001               	movf	?___awdiv^0,w,c
  5438   001CAC  6E0C               	movwf	draw_dec8@cent^0,c
  5439                           
  5440                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5441   001CAE  500C               	movf	draw_dec8@cent^0,w,c
  5442   001CB0  0D9C               	mullw	156
  5443   001CB2  50F3               	movf	243,w,c
  5444   001CB4  240B               	addwf	draw_dec8@octet^0,w,c
  5445   001CB6  6E0D               	movwf	draw_dec8@dix^0,c
  5446                           
  5447                           ;afficheur.c: 279: dix = dix/10;
  5448   001CB8  C00D  F001         	movff	draw_dec8@dix,___awdiv@dividend
  5449   001CBC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5450   001CBE  0E00               	movlw	0
  5451   001CC0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5452   001CC2  0E0A               	movlw	10
  5453   001CC4  6E03               	movwf	___awdiv@divisor^0,c
  5454   001CC6  EC24  F00F         	call	___awdiv	;wreg free
  5455   001CCA  5001               	movf	?___awdiv^0,w,c
  5456   001CCC  6E0D               	movwf	draw_dec8@dix^0,c
  5457                           
  5458                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5459   001CCE  500C               	movf	draw_dec8@cent^0,w,c
  5460   001CD0  0D9C               	mullw	156
  5461   001CD2  CFF3 F009          	movff	prodl,??_draw_dec8
  5462   001CD6  500D               	movf	draw_dec8@dix^0,w,c
  5463   001CD8  0DF6               	mullw	246
  5464   001CDA  50F3               	movf	243,w,c
  5465   001CDC  2409               	addwf	??_draw_dec8^0,w,c
  5466   001CDE  240B               	addwf	draw_dec8@octet^0,w,c
  5467   001CE0  6E0A               	movwf	draw_dec8@unit^0,c
  5468                           
  5469                           ;afficheur.c: 282: c=cent+0x10;
  5470   001CE2  500C               	movf	draw_dec8@cent^0,w,c
  5471   001CE4  0F10               	addlw	16
  5472   001CE6  6E0E               	movwf	draw_dec8@c^0,c
  5473                           
  5474                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5475   001CE8  D001               	goto	i2l4429
  5476   001CEA                     i2l1347:
  5477                           
  5478                           ;afficheur.c: 284: __nop();
  5479   001CEA  F000               	nop	
  5480   001CEC                     i2l4429:
  5481   001CEC  0EC0               	movlw	192
  5482   001CEE  6E05               	movwf	d1command@cmd^0,c
  5483   001CF0  500E               	movf	draw_dec8@c^0,w,c
  5484   001CF2  ECBD  F010         	call	_d1command
  5485   001CF6  0900               	iorlw	0
  5486   001CF8  B4D8               	btfsc	status,2,c
  5487   001CFA  D7F7               	goto	i2l1347
  5488                           
  5489                           ;afficheur.c: 286: c=dix+0x10;
  5490   001CFC  500D               	movf	draw_dec8@dix^0,w,c
  5491   001CFE  0F10               	addlw	16
  5492   001D00  6E0E               	movwf	draw_dec8@c^0,c
  5493                           
  5494                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5495   001D02  D001               	goto	i2l4433
  5496   001D04                     i2l1350:
  5497                           
  5498                           ;afficheur.c: 288: __nop();
  5499   001D04  F000               	nop	
  5500   001D06                     i2l4433:
  5501   001D06  0EC0               	movlw	192
  5502   001D08  6E05               	movwf	d1command@cmd^0,c
  5503   001D0A  500E               	movf	draw_dec8@c^0,w,c
  5504   001D0C  ECBD  F010         	call	_d1command
  5505   001D10  0900               	iorlw	0
  5506   001D12  B4D8               	btfsc	status,2,c
  5507   001D14  D7F7               	goto	i2l1350
  5508                           
  5509                           ;afficheur.c: 290: c=unit+0x10;
  5510   001D16  500A               	movf	draw_dec8@unit^0,w,c
  5511   001D18  0F10               	addlw	16
  5512   001D1A  6E0E               	movwf	draw_dec8@c^0,c
  5513                           
  5514                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5515   001D1C  D001               	goto	i2l4437
  5516   001D1E                     i2l1353:
  5517                           
  5518                           ;afficheur.c: 292: __nop();
  5519   001D1E  F000               	nop	
  5520   001D20                     i2l4437:
  5521   001D20  0EC0               	movlw	192
  5522   001D22  6E05               	movwf	d1command@cmd^0,c
  5523   001D24  500E               	movf	draw_dec8@c^0,w,c
  5524   001D26  ECBD  F010         	call	_d1command
  5525   001D2A  0900               	iorlw	0
  5526   001D2C  A4D8               	btfss	status,2,c
  5527   001D2E  0012               	return	
  5528   001D30  D7F6               	goto	i2l1353
  5529   001D32                     __end_of_draw_dec8:
  5530                           	callstack 0
  5531                           
  5532 ;; *************** function ___awdiv *****************
  5533 ;; Defined at:
  5534 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  dividend        2    0[COMRAM] int 
  5537 ;;  divisor         2    2[COMRAM] int 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;  quotient        2    6[COMRAM] int 
  5540 ;;  sign            1    5[COMRAM] unsigned char 
  5541 ;;  counter         1    4[COMRAM] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  2    0[COMRAM] int 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5551 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;Total ram usage:        8 bytes
  5556 ;; Hardware stack levels used: 1
  5557 ;; This function calls:
  5558 ;;		Nothing
  5559 ;; This function is called by:
  5560 ;;		_draw_dec8
  5561 ;;		_plot1
  5562 ;;		_plot0
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text27
  5567   001E48                     __ptext27:
  5568                           	callstack 0
  5569   001E48                     ___awdiv:
  5570                           	callstack 26
  5571                           
  5572                           ;incstack = 0
  5573   001E48  0E00               	movlw	0
  5574   001E4A  6E06               	movwf	___awdiv@sign^0,c
  5575   001E4C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5576   001E4E  D006               	goto	i2l4209
  5577   001E50  6C03               	negf	___awdiv@divisor^0,c
  5578   001E52  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5579   001E54  B0D8               	btfsc	status,0,c
  5580   001E56  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5581   001E58  0E01               	movlw	1
  5582   001E5A  6E06               	movwf	___awdiv@sign^0,c
  5583   001E5C                     i2l4209:
  5584   001E5C  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5585   001E5E  D006               	goto	i2l4215
  5586   001E60  6C01               	negf	___awdiv@dividend^0,c
  5587   001E62  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5588   001E64  B0D8               	btfsc	status,0,c
  5589   001E66  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5590   001E68  0E01               	movlw	1
  5591   001E6A  1A06               	xorwf	___awdiv@sign^0,f,c
  5592   001E6C                     i2l4215:
  5593   001E6C  0E00               	movlw	0
  5594   001E6E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5595   001E70  0E00               	movlw	0
  5596   001E72  6E07               	movwf	___awdiv@quotient^0,c
  5597   001E74  5003               	movf	___awdiv@divisor^0,w,c
  5598   001E76  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5599   001E78  B4D8               	btfsc	status,2,c
  5600   001E7A  D01C               	goto	i2l4237
  5601   001E7C  0E01               	movlw	1
  5602   001E7E  6E05               	movwf	___awdiv@counter^0,c
  5603   001E80  D004               	goto	i2l4223
  5604   001E82                     i2l4221:
  5605   001E82  90D8               	bcf	status,0,c
  5606   001E84  3603               	rlcf	___awdiv@divisor^0,f,c
  5607   001E86  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5608   001E88  2A05               	incf	___awdiv@counter^0,f,c
  5609   001E8A                     i2l4223:
  5610   001E8A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5611   001E8C  D7FA               	goto	i2l4221
  5612   001E8E                     i2u217_40:
  5613   001E8E  90D8               	bcf	status,0,c
  5614   001E90  3607               	rlcf	___awdiv@quotient^0,f,c
  5615   001E92  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5616   001E94  5003               	movf	___awdiv@divisor^0,w,c
  5617   001E96  5C01               	subwf	___awdiv@dividend^0,w,c
  5618   001E98  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5619   001E9A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5620   001E9C  A0D8               	btfss	status,0,c
  5621   001E9E  D005               	goto	i2l4233
  5622   001EA0  5003               	movf	___awdiv@divisor^0,w,c
  5623   001EA2  5E01               	subwf	___awdiv@dividend^0,f,c
  5624   001EA4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5625   001EA6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5626   001EA8  8007               	bsf	___awdiv@quotient^0,0,c
  5627   001EAA                     i2l4233:
  5628   001EAA  90D8               	bcf	status,0,c
  5629   001EAC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5630   001EAE  3203               	rrcf	___awdiv@divisor^0,f,c
  5631   001EB0  2E05               	decfsz	___awdiv@counter^0,f,c
  5632   001EB2  D7ED               	goto	i2u217_40
  5633   001EB4                     i2l4237:
  5634   001EB4  5006               	movf	___awdiv@sign^0,w,c
  5635   001EB6  B4D8               	btfsc	status,2,c
  5636   001EB8  D004               	goto	i2l4241
  5637   001EBA  6C07               	negf	___awdiv@quotient^0,c
  5638   001EBC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5639   001EBE  B0D8               	btfsc	status,0,c
  5640   001EC0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5641   001EC2                     i2l4241:
  5642   001EC2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5643   001EC6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5644   001ECA  0012               	return		;funcret
  5645   001ECC                     __end_of___awdiv:
  5646                           	callstack 0
  5647                           
  5648 ;; *************** function _clear_text *****************
  5649 ;; Defined at:
  5650 ;;		line 307 in file "afficheur.c"
  5651 ;; Parameters:    Size  Location     Type
  5652 ;;		None
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  add             2    8[COMRAM] unsigned int 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;                  1    wreg      void 
  5657 ;; Registers used:
  5658 ;;		wreg, status,2, status,0, cstack
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;Total ram usage:        2 bytes
  5669 ;; Hardware stack levels used: 1
  5670 ;; Hardware stack levels required when called: 3
  5671 ;; This function calls:
  5672 ;;		_d1command
  5673 ;;		_d2command
  5674 ;; This function is called by:
  5675 ;;		_tache1
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           
  5679                           	psect	text28
  5680   002254                     __ptext28:
  5681                           	callstack 0
  5682   002254                     _clear_text:
  5683                           	callstack 24
  5684                           
  5685                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5686                           
  5687                           ;incstack = 0
  5688   002254  0E00               	movlw	0
  5689   002256  6E05               	movwf	d2command@d2^0,c
  5690   002258  0E24               	movlw	36
  5691   00225A  6E06               	movwf	d2command@cmd^0,c
  5692   00225C  0E00               	movlw	0
  5693   00225E  EC4A  F010         	call	_d2command
  5694                           
  5695                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5696   002262  0E00               	movlw	0
  5697   002264  6E0A               	movwf	(clear_text@add+1)^0,c
  5698   002266  0E00               	movlw	0
  5699   002268  6E09               	movwf	clear_text@add^0,c
  5700   00226A                     i2l4383:
  5701                           
  5702                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5703   00226A  0EC0               	movlw	192
  5704   00226C  6E05               	movwf	d1command@cmd^0,c
  5705   00226E  0E00               	movlw	0
  5706   002270  ECBD  F010         	call	_d1command
  5707   002274  4A09               	infsnz	clear_text@add^0,f,c
  5708   002276  2A0A               	incf	(clear_text@add+1)^0,f,c
  5709   002278  0E80               	movlw	128
  5710   00227A  180A               	xorwf	(clear_text@add+1)^0,w,c
  5711   00227C  1009               	iorwf	clear_text@add^0,w,c
  5712   00227E  B4D8               	btfsc	status,2,c
  5713   002280  0012               	return	
  5714   002282  D7F3               	goto	i2l4383
  5715   002284                     __end_of_clear_text:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _clear_line *****************
  5719 ;; Defined at:
  5720 ;;		line 318 in file "afficheur.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  line            1    wreg     unsigned char 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  line            1   14[COMRAM] unsigned char 
  5725 ;;  column          1   15[COMRAM] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;Total ram usage:        2 bytes
  5740 ;; Hardware stack levels used: 1
  5741 ;; Hardware stack levels required when called: 4
  5742 ;; This function calls:
  5743 ;;		_draw_char
  5744 ;;		_goto_lico
  5745 ;; This function is called by:
  5746 ;;		_tache1
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text29
  5751   002346                     __ptext29:
  5752                           	callstack 0
  5753   002346                     _clear_line:
  5754                           	callstack 23
  5755                           
  5756                           ;incstack = 0
  5757                           ;clear_line@line stored from wreg
  5758   002346  6E0F               	movwf	clear_line@line^0,c
  5759                           
  5760                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5761   002348  0E00               	movlw	0
  5762   00234A  6E10               	movwf	clear_line@column^0,c
  5763   00234C                     i2l4501:
  5764                           
  5765                           ;afficheur.c: 321: goto_lico(line, column);
  5766   00234C  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5767   002350  500F               	movf	clear_line@line^0,w,c
  5768   002352  ECCC  F00F         	call	_goto_lico
  5769                           
  5770                           ;afficheur.c: 322: draw_char(' ');
  5771   002356  0E20               	movlw	32
  5772   002358  EC11  F011         	call	_draw_char
  5773   00235C  2A10               	incf	clear_line@column^0,f,c
  5774   00235E  0E27               	movlw	39
  5775   002360  6410               	cpfsgt	clear_line@column^0,c
  5776   002362  D7F4               	goto	i2l4501
  5777   002364  0012               	return	
  5778   002366                     __end_of_clear_line:
  5779                           	callstack 0
  5780                           
  5781 ;; *************** function _draw_char *****************
  5782 ;; Defined at:
  5783 ;;		line 228 in file "afficheur.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  dccar           1    wreg     unsigned char 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  dccar           1    7[COMRAM] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:        1 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; Hardware stack levels required when called: 3
  5804 ;; This function calls:
  5805 ;;		_d1command
  5806 ;; This function is called by:
  5807 ;;		_tache1
  5808 ;;		_clear_line
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text30
  5813   002222                     __ptext30:
  5814                           	callstack 0
  5815   002222                     _draw_char:
  5816                           	callstack 24
  5817                           
  5818                           ;incstack = 0
  5819                           ;draw_char@dccar stored from wreg
  5820   002222  6E08               	movwf	draw_char@dccar^0,c
  5821                           
  5822                           ;afficheur.c: 230: if (dccar<32)
  5823   002224  0E20               	movlw	32
  5824   002226  6008               	cpfslt	draw_char@dccar^0,c
  5825   002228  D002               	goto	i2l4299
  5826                           
  5827                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5828   00222A  0E3F               	movlw	63
  5829   00222C  6E08               	movwf	draw_char@dccar^0,c
  5830   00222E                     i2l4299:
  5831                           
  5832                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5833   00222E  0E9F               	movlw	159
  5834   002230  6408               	cpfsgt	draw_char@dccar^0,c
  5835   002232  D002               	goto	i2l4303
  5836                           
  5837                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5838   002234  0E3F               	movlw	63
  5839   002236  6E08               	movwf	draw_char@dccar^0,c
  5840   002238                     i2l4303:
  5841                           
  5842                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5843   002238  5008               	movf	draw_char@dccar^0,w,c
  5844   00223A  0FE0               	addlw	224
  5845   00223C  6E08               	movwf	draw_char@dccar^0,c
  5846                           
  5847                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5848   00223E  D001               	goto	i2l4305
  5849   002240                     i2l1317:
  5850   002240  F000               	nop	
  5851   002242                     i2l4305:
  5852   002242  0EC0               	movlw	192
  5853   002244  6E05               	movwf	d1command@cmd^0,c
  5854   002246  5008               	movf	draw_char@dccar^0,w,c
  5855   002248  ECBD  F010         	call	_d1command
  5856   00224C  0900               	iorlw	0
  5857   00224E  A4D8               	btfss	status,2,c
  5858   002250  0012               	return	
  5859   002252  D7F6               	goto	i2l1317
  5860   002254                     __end_of_draw_char:
  5861                           	callstack 0
  5862                           
  5863 ;; *************** function _clear_graphics *****************
  5864 ;; Defined at:
  5865 ;;		line 368 in file "afficheur.c"
  5866 ;; Parameters:    Size  Location     Type
  5867 ;;		None
  5868 ;; Auto vars:     Size  Location     Type
  5869 ;;  add             2    8[COMRAM] unsigned int 
  5870 ;; Return value:  Size  Location     Type
  5871 ;;                  1    wreg      void 
  5872 ;; Registers used:
  5873 ;;		wreg, status,2, status,0, cstack
  5874 ;; Tracked objects:
  5875 ;;		On entry : 0/0
  5876 ;;		On exit  : 0/0
  5877 ;;		Unchanged: 0/0
  5878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;Total ram usage:        2 bytes
  5884 ;; Hardware stack levels used: 1
  5885 ;; Hardware stack levels required when called: 3
  5886 ;; This function calls:
  5887 ;;		_d1command
  5888 ;;		_d2command
  5889 ;; This function is called by:
  5890 ;;		_tache1
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text31
  5895   002284                     __ptext31:
  5896                           	callstack 0
  5897   002284                     _clear_graphics:
  5898                           	callstack 24
  5899                           
  5900                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5901                           
  5902                           ;incstack = 0
  5903   002284  0E80               	movlw	128
  5904   002286  6E05               	movwf	d2command@d2^0,c
  5905   002288  0E24               	movlw	36
  5906   00228A  6E06               	movwf	d2command@cmd^0,c
  5907   00228C  0E00               	movlw	0
  5908   00228E  EC4A  F010         	call	_d2command
  5909                           
  5910                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5911   002292  0E80               	movlw	128
  5912   002294  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5913   002296  0E00               	movlw	0
  5914   002298  6E09               	movwf	clear_graphics@add^0,c
  5915   00229A                     i2l4397:
  5916                           
  5917                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5918   00229A  0EC0               	movlw	192
  5919   00229C  6E05               	movwf	d1command@cmd^0,c
  5920   00229E  0E00               	movlw	0
  5921   0022A0  ECBD  F010         	call	_d1command
  5922   0022A4  4A09               	infsnz	clear_graphics@add^0,f,c
  5923   0022A6  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5924   0022A8  0EF8               	movlw	248
  5925   0022AA  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5926   0022AC  1009               	iorwf	clear_graphics@add^0,w,c
  5927   0022AE  B4D8               	btfsc	status,2,c
  5928   0022B0  0012               	return	
  5929   0022B2  D7F3               	goto	i2l4397
  5930   0022B4                     __end_of_clear_graphics:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function _charger *****************
  5934 ;; Defined at:
  5935 ;;		line 432 in file "afficheur.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;		None
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;		None
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      void 
  5942 ;; Registers used:
  5943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;Total ram usage:        0 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; Hardware stack levels required when called: 4
  5956 ;; This function calls:
  5957 ;;		_draw_string
  5958 ;;		_goto_lico
  5959 ;; This function is called by:
  5960 ;;		_tache1
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text32
  5965   002416                     __ptext32:
  5966                           	callstack 0
  5967   002416                     _charger:
  5968                           	callstack 23
  5969                           
  5970                           ;afficheur.c: 434: goto_lico(14,0);
  5971                           
  5972                           ;incstack = 0
  5973   002416  0E00               	movlw	0
  5974   002418  6E09               	movwf	goto_lico@colonne^0,c
  5975   00241A  0E0E               	movlw	14
  5976   00241C  ECCC  F00F         	call	_goto_lico
  5977                           
  5978                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5979   002420  0E01               	movlw	low STR_25
  5980   002422  6E08               	movwf	draw_string@tableau^0,c
  5981   002424  0E10               	movlw	high STR_25
  5982   002426  6E09               	movwf	(draw_string@tableau+1)^0,c
  5983   002428  EC99  F00E         	call	_draw_string	;wreg free
  5984   00242C  0012               	return		;funcret
  5985   00242E                     __end_of_charger:
  5986                           	callstack 0
  5987                           
  5988 ;; *************** function _goto_lico *****************
  5989 ;; Defined at:
  5990 ;;		line 295 in file "afficheur.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  ligne           1    wreg     unsigned char 
  5993 ;;  colonne         1    8[COMRAM] unsigned char 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  ligne           1   11[COMRAM] unsigned char 
  5996 ;;  adr             2   12[COMRAM] unsigned int 
  5997 ;; Return value:  Size  Location     Type
  5998 ;;                  1    wreg      void 
  5999 ;; Registers used:
  6000 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6001 ;; Tracked objects:
  6002 ;;		On entry : 0/0
  6003 ;;		On exit  : 0/0
  6004 ;;		Unchanged: 0/0
  6005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6006 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6007 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;Total ram usage:        6 bytes
  6011 ;; Hardware stack levels used: 1
  6012 ;; Hardware stack levels required when called: 3
  6013 ;; This function calls:
  6014 ;;		_d2command
  6015 ;; This function is called by:
  6016 ;;		_tache1
  6017 ;;		_clear_line
  6018 ;;		_charger
  6019 ;;		_vide
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text33
  6024   001F98                     __ptext33:
  6025                           	callstack 0
  6026   001F98                     _goto_lico:
  6027                           	callstack 23
  6028                           
  6029                           ;incstack = 0
  6030                           ;goto_lico@ligne stored from wreg
  6031   001F98  6E0C               	movwf	goto_lico@ligne^0,c
  6032                           
  6033                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  6034   001F9A  0E7B               	movlw	123
  6035   001F9C  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6036   001F9E  0E00               	movlw	0
  6037   001FA0  6E0D               	movwf	goto_lico@adr^0,c
  6038                           
  6039                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  6040   001FA2  0E0F               	movlw	15
  6041   001FA4  640C               	cpfsgt	goto_lico@ligne^0,c
  6042   001FA6  D002               	goto	i2l4287
  6043   001FA8  0E00               	movlw	0
  6044   001FAA  6E0C               	movwf	goto_lico@ligne^0,c
  6045   001FAC                     i2l4287:
  6046                           
  6047                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  6048   001FAC  0E27               	movlw	39
  6049   001FAE  6409               	cpfsgt	goto_lico@colonne^0,c
  6050   001FB0  D002               	goto	i2l4291
  6051   001FB2  0E00               	movlw	0
  6052   001FB4  6E09               	movwf	goto_lico@colonne^0,c
  6053   001FB6                     i2l4291:
  6054                           
  6055                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  6056   001FB6  500C               	movf	goto_lico@ligne^0,w,c
  6057   001FB8  0D28               	mullw	40
  6058   001FBA  CFF3 F00A          	movff	prodl,??_goto_lico
  6059   001FBE  CFF4 F00B          	movff	prodh,??_goto_lico+1
  6060   001FC2  5009               	movf	goto_lico@colonne^0,w,c
  6061   001FC4  260A               	addwf	??_goto_lico^0,f,c
  6062   001FC6  0E00               	movlw	0
  6063   001FC8  220B               	addwfc	(??_goto_lico+1)^0,f,c
  6064   001FCA  500D               	movf	goto_lico@adr^0,w,c
  6065   001FCC  240A               	addwf	??_goto_lico^0,w,c
  6066   001FCE  6E0D               	movwf	goto_lico@adr^0,c
  6067   001FD0  500E               	movf	(goto_lico@adr+1)^0,w,c
  6068   001FD2  200B               	addwfc	(??_goto_lico+1)^0,w,c
  6069   001FD4  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6070                           
  6071                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  6072   001FD6  D001               	goto	i2l4293
  6073   001FD8                     i2l1361:
  6074                           
  6075                           ;afficheur.c: 304: __nop();
  6076   001FD8  F000               	nop	
  6077   001FDA                     i2l4293:
  6078   001FDA  500E               	movf	(goto_lico@adr+1)^0,w,c
  6079   001FDC  6E05               	movwf	d2command@d2^0,c
  6080   001FDE  0E24               	movlw	36
  6081   001FE0  6E06               	movwf	d2command@cmd^0,c
  6082   001FE2  500D               	movf	goto_lico@adr^0,w,c
  6083   001FE4  EC4A  F010         	call	_d2command
  6084   001FE8  0900               	iorlw	0
  6085   001FEA  A4D8               	btfss	status,2,c
  6086   001FEC  0012               	return	
  6087   001FEE  D7F4               	goto	i2l1361
  6088   001FF0                     __end_of_goto_lico:
  6089                           	callstack 0
  6090                           
  6091 ;; *************** function _d2command *****************
  6092 ;; Defined at:
  6093 ;;		line 128 in file "afficheur.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  d1              1    wreg     unsigned char 
  6096 ;;  d2              1    4[COMRAM] unsigned char 
  6097 ;;  cmd             1    5[COMRAM] unsigned char 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  d1              1    6[COMRAM] unsigned char 
  6100 ;;  res             1    7[COMRAM] unsigned char 
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      unsigned char 
  6103 ;; Registers used:
  6104 ;;		wreg, status,2, status,0, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6114 ;;Total ram usage:        4 bytes
  6115 ;; Hardware stack levels used: 1
  6116 ;; Hardware stack levels required when called: 2
  6117 ;; This function calls:
  6118 ;;		_delai_us_char
  6119 ;;		_wait_status_ok
  6120 ;;		_write_c_aff
  6121 ;;		_write_d_aff
  6122 ;; This function is called by:
  6123 ;;		_initialisation_afficheur
  6124 ;;		_goto_lico
  6125 ;;		_clear_text
  6126 ;;		_clear_graphics
  6127 ;;		_plot1
  6128 ;;		_clear_cgram
  6129 ;;		_plot0
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text34
  6134   002094                     __ptext34:
  6135                           	callstack 0
  6136   002094                     _d2command:
  6137                           	callstack 23
  6138                           
  6139                           ;incstack = 0
  6140                           ;d2command@d1 stored from wreg
  6141   002094  6E07               	movwf	d2command@d1^0,c
  6142                           
  6143                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6144   002096  0E00               	movlw	0
  6145   002098  6E08               	movwf	d2command@res^0,c
  6146                           
  6147                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6148   00209A  EC21  F010         	call	_wait_status_ok	;wreg free
  6149   00209E  06E8               	decf	wreg,f,c
  6150   0020A0  A4D8               	btfss	status,2,c
  6151   0020A2  D01E               	goto	i2l4197
  6152                           
  6153                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6154   0020A4  0E0C               	movlw	12
  6155   0020A6  EC92  F011         	call	_delai_us_char
  6156                           
  6157                           ;afficheur.c: 137: write_d_aff(d1);
  6158   0020AA  5007               	movf	d2command@d1^0,w,c
  6159   0020AC  ECCD  F011         	call	_write_d_aff
  6160                           
  6161                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6162   0020B0  EC21  F010         	call	_wait_status_ok	;wreg free
  6163   0020B4  06E8               	decf	wreg,f,c
  6164   0020B6  A4D8               	btfss	status,2,c
  6165   0020B8  D013               	goto	i2l4197
  6166                           
  6167                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6168   0020BA  0E0C               	movlw	12
  6169   0020BC  EC92  F011         	call	_delai_us_char
  6170                           
  6171                           ;afficheur.c: 141: write_d_aff(d2);
  6172   0020C0  5005               	movf	d2command@d2^0,w,c
  6173   0020C2  ECCD  F011         	call	_write_d_aff
  6174                           
  6175                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6176   0020C6  EC21  F010         	call	_wait_status_ok	;wreg free
  6177   0020CA  06E8               	decf	wreg,f,c
  6178   0020CC  A4D8               	btfss	status,2,c
  6179   0020CE  D008               	goto	i2l4197
  6180                           
  6181                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6182   0020D0  0E0C               	movlw	12
  6183   0020D2  EC92  F011         	call	_delai_us_char
  6184                           
  6185                           ;afficheur.c: 145: write_c_aff(cmd);
  6186   0020D6  5006               	movf	d2command@cmd^0,w,c
  6187   0020D8  ECDA  F011         	call	_write_c_aff
  6188                           
  6189                           ;afficheur.c: 147: res=1;
  6190   0020DC  0E01               	movlw	1
  6191   0020DE  6E08               	movwf	d2command@res^0,c
  6192   0020E0                     i2l4197:
  6193                           
  6194                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6195   0020E0  5008               	movf	d2command@res^0,w,c
  6196   0020E2  0012               	return		;funcret
  6197   0020E4                     __end_of_d2command:
  6198                           	callstack 0
  6199                           
  6200 ;; *************** function _draw_string *****************
  6201 ;; Defined at:
  6202 ;;		line 242 in file "afficheur.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6205 ;;		 -> STR_26(14), STR_25(29), STR_24(4), STR_23(3), 
  6206 ;;		 -> STR_22(7), STR_21(5), STR_20(12), STR_19(12), 
  6207 ;;		 -> STR_18(6), STR_17(7), STR_16(9), STR_15(21), 
  6208 ;;		 -> STR_14(7), STR_13(10), STR_12(9), STR_11(6), 
  6209 ;;		 -> STR_10(13), STR_9(11), STR_8(7), STR_7(6), 
  6210 ;;		 -> STR_6(6), STR_5(9), STR_4(3), STR_3(3), 
  6211 ;;		 -> STR_2(3), STR_1(8), RAM(3861), 
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;		None
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  1    wreg      void 
  6216 ;; Registers used:
  6217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6223 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;Total ram usage:        2 bytes
  6228 ;; Hardware stack levels used: 1
  6229 ;; Hardware stack levels required when called: 3
  6230 ;; This function calls:
  6231 ;;		_d1command
  6232 ;; This function is called by:
  6233 ;;		_tache1
  6234 ;;		_charger
  6235 ;;		_vide
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text35
  6240   001D32                     __ptext35:
  6241                           	callstack 0
  6242   001D32                     _draw_string:
  6243                           	callstack 23
  6244                           
  6245                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6246                           
  6247                           ;incstack = 0
  6248   001D32  D01C               	goto	i2l4313
  6249   001D34                     i2l1325:
  6250                           
  6251                           ;afficheur.c: 247: __nop();
  6252   001D34  F000               	nop	
  6253   001D36                     i2l4309:
  6254   001D36  0EC0               	movlw	192
  6255   001D38  6E05               	movwf	d1command@cmd^0,c
  6256   001D3A  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6257   001D3E  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6258   001D42  0E00               	movlw	low (__smallconst shr (0+16))
  6259   001D44  6EF8               	movwf	tblptru,c
  6260   001D46  0E0F               	movlw	(high __ramtop+-1)
  6261   001D48  64F7               	cpfsgt	tblptrh,c
  6262   001D4A  D003               	bra	i2u232_47
  6263   001D4C  0008               	tblrd		*
  6264   001D4E  50F5               	movf	tablat,w,c
  6265   001D50  D005               	bra	i2u232_40
  6266   001D52                     i2u232_47:
  6267   001D52  CFF6 FFE9          	movff	tblptrl,fsr0l
  6268   001D56  CFF7 FFEA          	movff	tblptrh,fsr0h
  6269   001D5A  50EF               	movf	indf0,w,c
  6270   001D5C                     i2u232_40:
  6271   001D5C  0FE0               	addlw	224
  6272   001D5E  ECBD  F010         	call	_d1command
  6273   001D62  0900               	iorlw	0
  6274   001D64  B4D8               	btfsc	status,2,c
  6275   001D66  D7E6               	goto	i2l1325
  6276                           
  6277                           ;afficheur.c: 248: tableau++;
  6278   001D68  4A08               	infsnz	draw_string@tableau^0,f,c
  6279   001D6A  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6280   001D6C                     i2l4313:
  6281   001D6C  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6282   001D70  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6283   001D74  0E00               	movlw	low (__smallconst shr (0+16))
  6284   001D76  6EF8               	movwf	tblptru,c
  6285   001D78  0E0F               	movlw	(high __ramtop+-1)
  6286   001D7A  64F7               	cpfsgt	tblptrh,c
  6287   001D7C  D003               	bra	i2u234_47
  6288   001D7E  0008               	tblrd		*
  6289   001D80  50F5               	movf	tablat,w,c
  6290   001D82  D005               	bra	i2u234_40
  6291   001D84                     i2u234_47:
  6292   001D84  CFF6 FFE9          	movff	tblptrl,fsr0l
  6293   001D88  CFF7 FFEA          	movff	tblptrh,fsr0h
  6294   001D8C  50EF               	movf	indf0,w,c
  6295   001D8E                     i2u234_40:
  6296   001D8E  0900               	iorlw	0
  6297   001D90  B4D8               	btfsc	status,2,c
  6298   001D92  0012               	return	
  6299   001D94  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6300   001D98  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6301   001D9C  0E00               	movlw	low (__smallconst shr (0+16))
  6302   001D9E  6EF8               	movwf	tblptru,c
  6303   001DA0  0E0F               	movlw	(high __ramtop+-1)
  6304   001DA2  64F7               	cpfsgt	tblptrh,c
  6305   001DA4  D003               	bra	i2u236_47
  6306   001DA6  0008               	tblrd		*
  6307   001DA8  50F5               	movf	tablat,w,c
  6308   001DAA  D005               	bra	i2u236_40
  6309   001DAC                     i2u236_47:
  6310   001DAC  CFF6 FFE9          	movff	tblptrl,fsr0l
  6311   001DB0  CFF7 FFEA          	movff	tblptrh,fsr0h
  6312   001DB4  50EF               	movf	indf0,w,c
  6313   001DB6                     i2u236_40:
  6314   001DB6  0900               	iorlw	0
  6315   001DB8  B4D8               	btfsc	status,2,c
  6316   001DBA  0012               	return	
  6317   001DBC  D7BC               	goto	i2l4309
  6318   001DBE                     __end_of_draw_string:
  6319                           	callstack 0
  6320                           
  6321 ;; *************** function _d1command *****************
  6322 ;; Defined at:
  6323 ;;		line 106 in file "afficheur.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  d1              1    wreg     unsigned char 
  6326 ;;  cmd             1    4[COMRAM] unsigned char 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  d1              1    5[COMRAM] unsigned char 
  6329 ;;  res             1    6[COMRAM] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      unsigned char 
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6339 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;Total ram usage:        3 bytes
  6344 ;; Hardware stack levels used: 1
  6345 ;; Hardware stack levels required when called: 2
  6346 ;; This function calls:
  6347 ;;		_delai_us_char
  6348 ;;		_wait_status_ok
  6349 ;;		_write_c_aff
  6350 ;;		_write_d_aff
  6351 ;; This function is called by:
  6352 ;;		_initialisation_afficheur
  6353 ;;		_draw_char
  6354 ;;		_draw_string
  6355 ;;		_draw_hex8
  6356 ;;		_draw_dec8
  6357 ;;		_clear_text
  6358 ;;		_clear_graphics
  6359 ;;		_clear_cgram
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text36
  6364   00217A                     __ptext36:
  6365                           	callstack 0
  6366   00217A                     _d1command:
  6367                           	callstack 23
  6368                           
  6369                           ;incstack = 0
  6370                           ;d1command@d1 stored from wreg
  6371   00217A  6E06               	movwf	d1command@d1^0,c
  6372                           
  6373                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6374   00217C  0E00               	movlw	0
  6375   00217E  6E07               	movwf	d1command@res^0,c
  6376                           
  6377                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6378   002180  EC21  F010         	call	_wait_status_ok	;wreg free
  6379   002184  06E8               	decf	wreg,f,c
  6380   002186  A4D8               	btfss	status,2,c
  6381   002188  D013               	goto	i2l4171
  6382                           
  6383                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6384   00218A  0E0C               	movlw	12
  6385   00218C  EC92  F011         	call	_delai_us_char
  6386                           
  6387                           ;afficheur.c: 115: write_d_aff(d1);
  6388   002190  5006               	movf	d1command@d1^0,w,c
  6389   002192  ECCD  F011         	call	_write_d_aff
  6390                           
  6391                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6392   002196  EC21  F010         	call	_wait_status_ok	;wreg free
  6393   00219A  06E8               	decf	wreg,f,c
  6394   00219C  A4D8               	btfss	status,2,c
  6395   00219E  D008               	goto	i2l4171
  6396                           
  6397                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6398   0021A0  0E0C               	movlw	12
  6399   0021A2  EC92  F011         	call	_delai_us_char
  6400                           
  6401                           ;afficheur.c: 119: write_c_aff(cmd);
  6402   0021A6  5005               	movf	d1command@cmd^0,w,c
  6403   0021A8  ECDA  F011         	call	_write_c_aff
  6404                           
  6405                           ;afficheur.c: 121: res=1;
  6406   0021AC  0E01               	movlw	1
  6407   0021AE  6E07               	movwf	d1command@res^0,c
  6408   0021B0                     i2l4171:
  6409                           
  6410                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6411   0021B0  5007               	movf	d1command@res^0,w,c
  6412   0021B2  0012               	return		;funcret
  6413   0021B4                     __end_of_d1command:
  6414                           	callstack 0
  6415                           
  6416 ;; *************** function _write_d_aff *****************
  6417 ;; Defined at:
  6418 ;;		line 4 in file "afficheur.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  data            1    wreg     unsigned char 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  data            1    0[COMRAM] unsigned char 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;Total ram usage:        1 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; This function calls:
  6439 ;;		Nothing
  6440 ;; This function is called by:
  6441 ;;		_d1command
  6442 ;;		_d2command
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text37
  6447   00239A                     __ptext37:
  6448                           	callstack 0
  6449   00239A                     _write_d_aff:
  6450                           	callstack 24
  6451                           
  6452                           ;incstack = 0
  6453                           ;write_d_aff@data stored from wreg
  6454   00239A  6E01               	movwf	write_d_aff@data^0,c
  6455                           
  6456                           ;afficheur.c: 6: LATH=data;
  6457   00239C  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6458                           
  6459                           ;afficheur.c: 7: TRISH=0x00;
  6460   0023A0  0E00               	movlw	0
  6461   0023A2  6E99               	movwf	153,c	;volatile
  6462                           
  6463                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6464   0023A4  9091               	bcf	145,0,c	;volatile
  6465                           
  6466                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6467   0023A6  9691               	bcf	145,3,c	;volatile
  6468                           
  6469                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6470   0023A8  9491               	bcf	145,2,c	;volatile
  6471                           
  6472                           ;afficheur.c: 11: __nop();
  6473   0023AA  F000               	nop	
  6474                           
  6475                           ;afficheur.c: 12: __nop();
  6476   0023AC  F000               	nop	
  6477                           
  6478                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6479   0023AE  8491               	bsf	145,2,c	;volatile
  6480                           
  6481                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6482   0023B0  8691               	bsf	145,3,c	;volatile
  6483   0023B2  0012               	return		;funcret
  6484   0023B4                     __end_of_write_d_aff:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function _write_c_aff *****************
  6488 ;; Defined at:
  6489 ;;		line 17 in file "afficheur.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  command         1    wreg     unsigned char 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;  command         1    0[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      void 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:        1 bytes
  6508 ;; Hardware stack levels used: 1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_command
  6513 ;;		_d1command
  6514 ;;		_d2command
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text38
  6519   0023B4                     __ptext38:
  6520                           	callstack 0
  6521   0023B4                     _write_c_aff:
  6522                           	callstack 24
  6523                           
  6524                           ;incstack = 0
  6525                           ;write_c_aff@command stored from wreg
  6526   0023B4  6E01               	movwf	write_c_aff@command^0,c
  6527                           
  6528                           ;afficheur.c: 19: LATH=command;
  6529   0023B6  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6530                           
  6531                           ;afficheur.c: 20: TRISH=0x00;
  6532   0023BA  0E00               	movlw	0
  6533   0023BC  6E99               	movwf	153,c	;volatile
  6534                           
  6535                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6536   0023BE  8091               	bsf	145,0,c	;volatile
  6537                           
  6538                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6539   0023C0  9691               	bcf	145,3,c	;volatile
  6540                           
  6541                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6542   0023C2  9491               	bcf	145,2,c	;volatile
  6543                           
  6544                           ;afficheur.c: 24: __nop();
  6545   0023C4  F000               	nop	
  6546                           
  6547                           ;afficheur.c: 25: __nop();
  6548   0023C6  F000               	nop	
  6549                           
  6550                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6551   0023C8  8491               	bsf	145,2,c	;volatile
  6552                           
  6553                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6554   0023CA  8691               	bsf	145,3,c	;volatile
  6555   0023CC  0012               	return		;funcret
  6556   0023CE                     __end_of_write_c_aff:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _wait_status_ok *****************
  6560 ;; Defined at:
  6561 ;;		line 53 in file "afficheur.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  res             1    3[COMRAM] unsigned char 
  6566 ;;  status          1    2[COMRAM] unsigned char 
  6567 ;;  err             1    1[COMRAM] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      unsigned char 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;Total ram usage:        3 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; Hardware stack levels required when called: 1
  6584 ;; This function calls:
  6585 ;;		_delai_us_char
  6586 ;; This function is called by:
  6587 ;;		_command
  6588 ;;		_d1command
  6589 ;;		_d2command
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text39
  6594   002042                     __ptext39:
  6595                           	callstack 0
  6596   002042                     _wait_status_ok:
  6597                           	callstack 23
  6598                           
  6599                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6600                           
  6601                           ;incstack = 0
  6602   002042  0E00               	movlw	0
  6603   002044  6E02               	movwf	wait_status_ok@err^0,c
  6604                           
  6605                           ;afficheur.c: 58: res=2;
  6606   002046  0E02               	movlw	2
  6607   002048  D01E               	goto	L7
  6608   00204A                     i2l1275:
  6609                           
  6610                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6611   00204A  6899               	setf	153,c	;volatile
  6612                           
  6613                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6614   00204C  8091               	bsf	145,0,c	;volatile
  6615                           
  6616                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6617   00204E  9691               	bcf	145,3,c	;volatile
  6618                           
  6619                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6620   002050  9291               	bcf	145,1,c	;volatile
  6621                           
  6622                           ;afficheur.c: 65: __nop();
  6623   002052  F000               	nop	
  6624                           
  6625                           ;afficheur.c: 66: status=PORTH;
  6626   002054  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6627                           
  6628                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6629   002058  8291               	bsf	145,1,c	;volatile
  6630                           
  6631                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6632   00205A  8691               	bsf	145,3,c	;volatile
  6633                           
  6634                           ;afficheur.c: 70: status=(status&0x03);
  6635   00205C  5003               	movf	wait_status_ok@status^0,w,c
  6636   00205E  0B03               	andlw	3
  6637   002060  6E03               	movwf	wait_status_ok@status^0,c
  6638                           
  6639                           ;afficheur.c: 71: if (status!=0x03)
  6640   002062  0E03               	movlw	3
  6641   002064  1803               	xorwf	wait_status_ok@status^0,w,c
  6642   002066  B4D8               	btfsc	status,2,c
  6643   002068  D00D               	goto	i2l2573
  6644                           
  6645                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6646   00206A  2A02               	incf	wait_status_ok@err^0,f,c
  6647                           
  6648                           ;afficheur.c: 74: delai_us_char(12);
  6649   00206C  0E0C               	movlw	12
  6650   00206E  EC92  F011         	call	_delai_us_char
  6651                           
  6652                           ;afficheur.c: 75: if (err>=250)
  6653   002072  0EF9               	movlw	249
  6654   002074  6402               	cpfsgt	wait_status_ok@err^0,c
  6655   002076  D008               	goto	i2l2575
  6656                           
  6657                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6658   002078  9EF2               	bcf	242,7,c	;volatile
  6659                           
  6660                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6661   00207A  948B               	bcf	139,2,c	;volatile
  6662   00207C  828B               	bsf	139,1,c	;volatile
  6663   00207E  808F               	bsf	143,0,c	;volatile
  6664                           
  6665                           ;afficheur.c: 79: res=0;
  6666   002080  0E00               	movlw	0
  6667   002082  D001               	goto	L7
  6668   002084                     i2l2573:
  6669                           
  6670                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6671   002084  0E01               	movlw	1
  6672   002086                     L7:
  6673   002086  6E04               	movwf	wait_status_ok@res^0,c
  6674   002088                     i2l2575:
  6675   002088  0E02               	movlw	2
  6676   00208A  1804               	xorwf	wait_status_ok@res^0,w,c
  6677   00208C  B4D8               	btfsc	status,2,c
  6678   00208E  D7DD               	goto	i2l1275
  6679                           
  6680                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6681   002090  5004               	movf	wait_status_ok@res^0,w,c
  6682   002092  0012               	return		;funcret
  6683   002094                     __end_of_wait_status_ok:
  6684                           	callstack 0
  6685                           
  6686 ;; *************** function _delai_us_char *****************
  6687 ;; Defined at:
  6688 ;;		line 154 in file "afficheur.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  ucdelai         1    wreg     unsigned char 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, status,2, status,0
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;Total ram usage:        1 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; This function calls:
  6709 ;;		Nothing
  6710 ;; This function is called by:
  6711 ;;		_wait_status_ok
  6712 ;;		_command
  6713 ;;		_d1command
  6714 ;;		_d2command
  6715 ;;		_initialisation_afficheur
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text40
  6720   002324                     __ptext40:
  6721                           	callstack 0
  6722   002324                     _delai_us_char:
  6723                           	callstack 23
  6724                           
  6725                           ;incstack = 0
  6726                           ;delai_us_char@ucdelai stored from wreg
  6727   002324  6E01               	movwf	delai_us_char@ucdelai^0,c
  6728                           
  6729                           ;afficheur.c: 157: while (ucdelai>0)
  6730   002326  D00B               	goto	i2l2521
  6731   002328                     i2l1299:
  6732                           
  6733                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6734   002328  F000               	nop	
  6735   00232A  F000               	nop	
  6736   00232C  F000               	nop	
  6737   00232E  F000               	nop	
  6738   002330  F000               	nop	
  6739   002332  F000               	nop	
  6740   002334  F000               	nop	
  6741   002336  F000               	nop	
  6742   002338  F000               	nop	
  6743   00233A  F000               	nop	
  6744                           
  6745                           ;afficheur.c: 160: ucdelai--;
  6746   00233C  0601               	decf	delai_us_char@ucdelai^0,f,c
  6747   00233E                     i2l2521:
  6748   00233E  5001               	movf	delai_us_char@ucdelai^0,w,c
  6749   002340  B4D8               	btfsc	status,2,c
  6750   002342  0012               	return	
  6751   002344  D7F1               	goto	i2l1299
  6752   002346                     __end_of_delai_us_char:
  6753                           	callstack 0
  6754                           
  6755                           	psect	text41
  6756   000000                     __ptext41:
  6757                           	callstack 0
  6758                           
  6759                           	psect	rparam
  6760   000000                     
  6761                           	psect	temp
  6762   000024                     btemp:
  6763                           	callstack 0
  6764   000024                     	ds	12
  6765   000000                     wtemp0	set	btemp
  6766   000000                     wtemp1	set	btemp+2
  6767   000000                     wtemp2	set	btemp+4
  6768   000000                     wtemp3	set	btemp+6
  6769   000000                     wtemp4	set	btemp+8
  6770   000000                     wtemp5	set	btemp+10
  6771   000000                     wtemp8	set	btemp+1
  6772   000000                     ttemp0	set	btemp
  6773   000000                     ttemp1	set	btemp+3
  6774   000000                     ttemp2	set	btemp+6
  6775   000000                     ttemp3	set	btemp+9
  6776   000000                     ttemp5	set	btemp+1
  6777   000000                     ttemp6	set	btemp+4
  6778   000000                     ttemp7	set	btemp+8
  6779   000000                     ltemp0	set	btemp
  6780   000000                     ltemp1	set	btemp+4
  6781   000000                     ltemp2	set	btemp+8
  6782   000000                     lltemp0	set	btemp
  6783                           
  6784                           	psect	idloc
  6785                           
  6786                           ;Config register IDLOC0 @ 0x200000
  6787                           ;	unspecified, using default values
  6788   200000                     	org	2097152
  6789   200000  FF                 	db	255
  6790                           
  6791                           ;Config register IDLOC1 @ 0x200001
  6792                           ;	unspecified, using default values
  6793   200001                     	org	2097153
  6794   200001  FF                 	db	255
  6795                           
  6796                           ;Config register IDLOC2 @ 0x200002
  6797                           ;	unspecified, using default values
  6798   200002                     	org	2097154
  6799   200002  FF                 	db	255
  6800                           
  6801                           ;Config register IDLOC3 @ 0x200003
  6802                           ;	unspecified, using default values
  6803   200003                     	org	2097155
  6804   200003  FF                 	db	255
  6805                           
  6806                           ;Config register IDLOC4 @ 0x200004
  6807                           ;	unspecified, using default values
  6808   200004                     	org	2097156
  6809   200004  FF                 	db	255
  6810                           
  6811                           ;Config register IDLOC5 @ 0x200005
  6812                           ;	unspecified, using default values
  6813   200005                     	org	2097157
  6814   200005  FF                 	db	255
  6815                           
  6816                           ;Config register IDLOC6 @ 0x200006
  6817                           ;	unspecified, using default values
  6818   200006                     	org	2097158
  6819   200006  FF                 	db	255
  6820                           
  6821                           ;Config register IDLOC7 @ 0x200007
  6822                           ;	unspecified, using default values
  6823   200007                     	org	2097159
  6824   200007  FF                 	db	255
  6825                           
  6826                           	psect	config
  6827                           
  6828                           ;Config register CONFIG1L @ 0x300000
  6829                           ;	VREG Sleep Enable bit
  6830                           ;	RETEN = ON, Enabled
  6831                           ;	LF-INTOSC Low-power Enable bit
  6832                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6833                           ;	SOSC Power Selection and mode Configuration bits
  6834                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6835                           ;	Extended Instruction Set
  6836                           ;	XINST = OFF, Disabled
  6837   300000                     	org	3145728
  6838   300000  15                 	db	21
  6839                           
  6840                           ;Config register CONFIG1H @ 0x300001
  6841                           ;	Oscillator
  6842                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  6843                           ;	PLL x4 Enable bit
  6844                           ;	PLLCFG = ON, Enabled
  6845                           ;	Fail-Safe Clock Monitor
  6846                           ;	FCMEN = OFF, Disabled
  6847                           ;	Internal External Oscillator Switch Over Mode
  6848                           ;	IESO = OFF, Disabled
  6849   300001                     	org	3145729
  6850   300001  13                 	db	19
  6851                           
  6852                           ;Config register CONFIG2L @ 0x300002
  6853                           ;	Power Up Timer
  6854                           ;	PWRTEN = OFF, Disabled
  6855                           ;	Brown Out Detect
  6856                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  6857                           ;	Brown-out Reset Voltage bits
  6858                           ;	BORV = 0, 3.0V
  6859                           ;	BORMV Power level
  6860                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6861   300002                     	org	3145730
  6862   300002  61                 	db	97
  6863                           
  6864                           ;Config register CONFIG2H @ 0x300003
  6865                           ;	Watchdog Timer
  6866                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6867                           ;	Watchdog Postscaler
  6868                           ;	WDTPS = 1, 1:1
  6869   300003                     	org	3145731
  6870   300003  00                 	db	0
  6871                           
  6872                           ;Config register CONFIG3L @ 0x300004
  6873                           ;	RTCC Clock Select
  6874                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  6875                           ;	External Address Shift bit
  6876                           ;	EASHFT = OFF, Address Shifting disabled
  6877                           ;	Address Bus Width Select bits
  6878                           ;	ABW = MM, 8-bit address bus
  6879                           ;	Data Bus Width
  6880                           ;	BW = 8, 8-bit external bus mode
  6881                           ;	External Bus Wait
  6882                           ;	WAIT = ON, Enabled
  6883   300004                     	org	3145732
  6884   300004  30                 	db	48
  6885                           
  6886                           ;Config register CONFIG3H @ 0x300005
  6887                           ;	CCP2 Mux
  6888                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  6889                           ;	ECCP Mux
  6890                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  6891                           ;	MSSP address masking
  6892                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  6893                           ;	Master Clear Enable
  6894                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  6895   300005                     	org	3145733
  6896   300005  80                 	db	128
  6897                           
  6898                           ;Config register CONFIG4L @ 0x300006
  6899                           ;	Stack Overflow Reset
  6900                           ;	STVREN = ON, Enabled
  6901                           ;	Boot Block Size
  6902                           ;	BBSIZ = BB1K, 1K word Boot Block size
  6903                           ;	Background Debug
  6904                           ;	DEBUG = OFF, Disabled
  6905   300006                     	org	3145734
  6906   300006  81                 	db	129
  6907                           
  6908                           ; Padding undefined space
  6909   300007                     	org	3145735
  6910   300007  FF                 	db	255
  6911                           
  6912                           ;Config register CONFIG5L @ 0x300008
  6913                           ;	Code Protect 00800-03FFF
  6914                           ;	CP0 = OFF, Disabled
  6915                           ;	Code Protect 04000-07FFF
  6916                           ;	CP1 = OFF, Disabled
  6917                           ;	Code Protect 08000-0BFFF
  6918                           ;	CP2 = OFF, Disabled
  6919                           ;	Code Protect 0C000-0FFFF
  6920                           ;	CP3 = OFF, Disabled
  6921                           ;	Code Protect 10000-13FFF
  6922                           ;	CP4 = OFF, Disabled
  6923                           ;	Code Protect 14000-17FFF
  6924                           ;	CP5 = OFF, Disabled
  6925                           ;	Code Protect 18000-1BFFF
  6926                           ;	CP6 = OFF, Disabled
  6927                           ;	Code Protect 1C000-1FFFF
  6928                           ;	CP7 = OFF, Disabled
  6929   300008                     	org	3145736
  6930   300008  FF                 	db	255
  6931                           
  6932                           ;Config register CONFIG5H @ 0x300009
  6933                           ;	Code Protect Boot
  6934                           ;	CPB = OFF, Disabled
  6935                           ;	Data EE Read Protect
  6936                           ;	CPD = OFF, Disabled
  6937   300009                     	org	3145737
  6938   300009  C0                 	db	192
  6939                           
  6940                           ;Config register CONFIG6L @ 0x30000A
  6941                           ;	Table Write Protect 00800-03FFF
  6942                           ;	WRT0 = OFF, Disabled
  6943                           ;	Table Write Protect 04000-07FFF
  6944                           ;	WRT1 = OFF, Disabled
  6945                           ;	Table Write Protect 08000-0BFFF
  6946                           ;	WRT2 = OFF, Disabled
  6947                           ;	Table Write Protect 0C000-0FFFF
  6948                           ;	WRT3 = OFF, Disabled
  6949                           ;	Table Write Protect 10000-13FFF
  6950                           ;	WRT4 = OFF, Disabled
  6951                           ;	Table Write Protect 14000-17FFF
  6952                           ;	WRT5 = OFF, Disabled
  6953                           ;	Table Write Protect 18000-1BFFF
  6954                           ;	WRT6 = OFF, Disabled
  6955                           ;	Table Write Protect 1C000-1FFFF
  6956                           ;	WRT7 = OFF, Disabled
  6957   30000A                     	org	3145738
  6958   30000A  FF                 	db	255
  6959                           
  6960                           ;Config register CONFIG6H @ 0x30000B
  6961                           ;	Config. Write Protect
  6962                           ;	WRTC = OFF, Disabled
  6963                           ;	Table Write Protect Boot
  6964                           ;	WRTB = OFF, Disabled
  6965                           ;	Data EE Write Protect
  6966                           ;	WRTD = OFF, Disabled
  6967   30000B                     	org	3145739
  6968   30000B  E0                 	db	224
  6969                           
  6970                           ;Config register CONFIG7L @ 0x30000C
  6971                           ;	Table Read Protect 00800-03FFF
  6972                           ;	EBRT0 = OFF, Disabled
  6973                           ;	Table Read Protect 04000-07FFF
  6974                           ;	EBRT1 = OFF, Disabled
  6975                           ;	Table Read Protect 08000-0BFFF
  6976                           ;	EBRT2 = OFF, Disabled
  6977                           ;	Table Read Protect 0C000-0FFFF
  6978                           ;	EBRT3 = OFF, Disabled
  6979                           ;	Table Read Protect 10000-13FFF
  6980                           ;	EBRT4 = OFF, Disabled
  6981                           ;	Table Read Protect 14000-17FFF
  6982                           ;	EBRT5 = OFF, Disabled
  6983                           ;	Table Read Protect 18000-1BFFF
  6984                           ;	EBRT6 = OFF, Disabled
  6985                           ;	Table Read Protect 1C000-1FFFF
  6986                           ;	EBRT7 = OFF, Disabled
  6987   30000C                     	org	3145740
  6988   30000C  FF                 	db	255
  6989                           
  6990                           ;Config register CONFIG7H @ 0x30000D
  6991                           ;	Table Read Protect Boot
  6992                           ;	EBRTB = OFF, Disabled
  6993   30000D                     	org	3145741
  6994   30000D  40                 	db	64
  6995                           tosu	equ	0xFFF
  6996                           tosh	equ	0xFFE
  6997                           tosl	equ	0xFFD
  6998                           stkptr	equ	0xFFC
  6999                           pclatu	equ	0xFFB
  7000                           pclath	equ	0xFFA
  7001                           pcl	equ	0xFF9
  7002                           tblptru	equ	0xFF8
  7003                           tblptrh	equ	0xFF7
  7004                           tblptrl	equ	0xFF6
  7005                           tablat	equ	0xFF5
  7006                           prodh	equ	0xFF4
  7007                           prodl	equ	0xFF3
  7008                           indf0	equ	0xFEF
  7009                           postinc0	equ	0xFEE
  7010                           postdec0	equ	0xFED
  7011                           preinc0	equ	0xFEC
  7012                           plusw0	equ	0xFEB
  7013                           fsr0h	equ	0xFEA
  7014                           fsr0l	equ	0xFE9
  7015                           wreg	equ	0xFE8
  7016                           indf1	equ	0xFE7
  7017                           postinc1	equ	0xFE6
  7018                           postdec1	equ	0xFE5
  7019                           preinc1	equ	0xFE4
  7020                           plusw1	equ	0xFE3
  7021                           fsr1h	equ	0xFE2
  7022                           fsr1l	equ	0xFE1
  7023                           bsr	equ	0xFE0
  7024                           indf2	equ	0xFDF
  7025                           postinc2	equ	0xFDE
  7026                           postdec2	equ	0xFDD
  7027                           preinc2	equ	0xFDC
  7028                           plusw2	equ	0xFDB
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8

Data Sizes:
    Strings     215
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     35      47
    BANK0           124      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_26(CODE[14]), STR_25(CODE[29]), STR_24(CODE[4]), STR_23(CODE[3]), 
		 -> STR_22(CODE[7]), STR_21(CODE[5]), STR_20(CODE[12]), STR_19(CODE[12]), 
		 -> STR_18(CODE[6]), STR_17(CODE[7]), STR_16(CODE[9]), STR_15(CODE[21]), 
		 -> STR_14(CODE[7]), STR_13(CODE[10]), STR_12(CODE[9]), STR_11(CODE[6]), 
		 -> STR_10(CODE[13]), STR_9(CODE[11]), STR_8(CODE[7]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             34 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   52897
                                             22 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               3     3      0   51091
                                             20 COMRAM     2     2      0
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
                               _vide
                       _vitesseAdmin
 ---------------------------------------------------------------------------------
 (4) _vitesseAdmin                                         9     7      2     244
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    7113
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5184
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4416
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2241
                                              8 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5175
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    7113
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3955
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3158
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesseAdmin
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7C      0       0      64        0.0%
BITBANK0            7C      0       0       4        0.0%
BANK0               7C      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     23      2F       1       56.6%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      57        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 23 15:39:48 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0037                         ?_draw_square 000F  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0033                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 23CE                                 l1547 22FE  
                               l2801 22EE                                 l5033 237C  
                               l2797 22E2                                 l2799 22E8  
                               STR_1 108D                                 STR_2 10D5  
                               STR_3 10D2                                 STR_4 10CC  
                               STR_5 107B                                 STR_6 10B1  
                               STR_7 102D                                 STR_8 109C  
                               STR_9 1066                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 22E0                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 2366  
                               _fptr 0030                                 _vide 23FE  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0024                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                         _vitesseAdmin 1DBE  
                   ?_lecture_normale 0003                                ?_main 0001  
                    __end_of___awdiv 1ECC                                STR_10 1041  
                              STR_11 10B7                                STR_12 107B  
                              STR_20 105A                                STR_21 10C3  
                              STR_13 1071                                STR_22 10A3  
                              STR_14 1095                                STR_23 10CF  
                              STR_15 101E                                STR_24 10C8  
                              STR_16 1084                                STR_17 10AA  
                              STR_25 1001                                STR_18 10BD  
                              STR_26 1033                                STR_19 104E  
                    __end_of___awmod 1F3C                                ?_vide 0001  
                              _T0CON 000FD5                      ___awdiv@divisor 0003  
                       draw_dec8@dix 000D                                _FSR0H 000FEA  
                              _FSR1H 000FE2                                _FSR0L 000FE9  
                              _FSR2H 000FDA                                _FSR1L 000FE1  
                              _FSR2L 000FD9                      __end_of___lwdiv 2042  
                              i2l144 220C                                i2l147 221A  
                              i2l460 1496                                i2l436 11F0  
                              i2l456 13E2                                i2l801 19D8  
                              i2l564 1716                                i2l813 19F0  
                              i2l582 23E8                                i2l831 1A14  
                              i2l807 19E4                                i2l569 1758  
                              i2l825 1A08                                i2l843 1A2C  
                              i2l819 19FC                                i2l861 1A50  
                              i2l837 1A20                                i2l855 1A44  
                              i2l783 19B4                                i2l849 1A38  
                              i2l867 1A5C                                i2l795 19CC  
                              i2l971 17FC                      ___awdiv@counter 0005  
                              i2l789 19C0                                i2l965 17F0  
                              i2l983 1814                                i2l977 1808  
                              i2l995 182C                                i2l989 1820  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 23B4  
                        _write_d_aff 239A                      __end_of_charger 242E  
                    write_d_aff@data 0001                       ?_stid_delai_us 0001  
                    __end_of_command 239A                                _badge 000075  
                              _plot1 1B46                                _queue 000069  
                              tablat 000FF5                                ltemp0 0024  
                              ltemp1 0028                                ltemp2 002C  
              __end_of_delai_us_char 2346                                plusw1 000FE3  
                    _check_status_ok 22B4                                ttemp0 0024  
                              ttemp1 0027                                ttemp2 002A  
                              ttemp3 002D                                ttemp5 0025  
                              ttemp6 0028                                ttemp7 002C  
                              status 000FD8                                wtemp0 0024  
                              wtemp1 0026                                wtemp2 0028  
                              wtemp3 002A                                wtemp4 002C  
                              wtemp5 002E                                wtemp8 0025  
      initialisation_du_systeme@temp 0023                      __initialization 242E  
                       __end_of_Init 2302           lecture_8bit_analogique@ret 0001  
                       __end_of_main 2380                         __end_of_vide 2416  
                             ??_main 0024                               ??_vide 000F  
                      __activetblptr 000003                         draw_square@x 0013  
                       draw_square@y 0014                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             ?_plot1 0009                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0001                        _n_octet_badge 00007F  
                      draw_dec8@cent 000C                               _MEMCON 000F26  
                             i2l1001 1838                               i2l1013 1850  
                             i2l1031 1874                               i2l1007 1844  
                             i2l1025 1868                               i2l1043 188C  
                             i2l1019 185C                               i2l1037 1880  
                             i2l1049 1898                               i2l1307 1ABA  
                             i2l1325 1D34                               i2l1317 2240  
                             i2l1341 1F84                               i2l1350 1D04  
                             i2l1336 1F58                               i2l1361 1FD8  
                             i2l1353 1D1E                               i2l1275 204A  
                             i2l1347 1CEA                               i2l2251 2038  
                             i2l2521 233E                               i2l1449 1E30  
                             i2l1299 2328                               i2l5011 2154  
                             i2l4221 1E82                               i2l4303 2238  
                             i2l4223 1E8A                               i2l4215 1E6C  
                             i2l1664 1C30                               i2l4313 1D6C  
                             i2l4305 2242                               i2l4241 1EC2  
                             i2l4233 1EAA                               i2l4209 1E5C  
                             i2l4321 1B82                               i2l1665 1C38  
                             i2l5017 2166                               i2l1674 23D0  
                             i2l4171 21B0                               i2l4331 1BAA  
                             i2l4323 1B8A                               i2l4411 2110  
                             i2l1667 1C42                               i2l5019 216E  
                             _PCLATH 000FFA                               i2l2573 2084  
                             i2l4309 1D36                               i2l4501 234C  
                             i2l4237 1EB4                               i2l4261 1EFA  
                             i2l4253 1EE0                               i2l4325 1B92  
                             i2l4405 20EC                               i2l3533 18FE  
                             i2l5053 0064                               i2l2575 2088  
                             i2l4263 1F02                               i2l4327 1B9A  
                             i2l4335 1BB2                               i2l4415 2126  
                             i2l2815 221E                               i2l3551 192C  
                             i2l3527 18F0                               i2l4433 1D06  
                             i2l4273 1F24                               i2l4257 1EEC  
                             i2l4329 1BA2                               i2l4409 2102  
                             i2l4361 1AA4                               i2l3545 191E  
                             i2l3633 1A68                               i2l4345 23DC  
                             i2l4291 1FB6                               i2l4371 1ABC  
                             i2l4443 1DD6                               i2l3563 194C  
                             i2l4197 20E0                               i2l4293 1FDA  
                             i2l4437 1D20                               i2l4429 1CEC  
                             i2l4277 1F32                               i2l4269 1F1A  
                             i2l4517 23F4                               i2l4287 1FAC  
                             i2l4383 226A                               i2l4447 1DF0  
                             i2l3583 1982                               i2l4535 1C22  
                             i2l4527 1C0C                               i2l4481 1F5A  
                             i2l2785 22D8                               i2l3569 195A  
                             i2l3673 18A4                               i2l5353 02DC  
                             _PCLATU 000FFB                               i2l4299 222E  
                             i2l4459 1E22                               i2l4803 1202  
                             i2l3683 18BC                               i2l4571 1C92  
                             i2l4397 229A                               i2l4901 13BC  
                             i2l4581 2006                               i2l5197 0198  
                             i2l4487 1F7C                               i2l4479 1F50  
                             i2l4823 126C                               i2l4583 200E  
                             i2l4489 1F86                               i2l4905 13D0  
                             i2l4833 129A                               i2l4825 1278  
                             i2l4817 1250                               i2l4593 202E  
                             i2l4835 12A0                               i2l4861 131E  
                             i2l4855 1302                               i2l4881 1366  
                             i2l4865 1324                               i2l4857 1308  
                             i2l4793 11C8                               i2l4939 1498  
                             _TABLAT 000FF5                               i2l4887 1372  
                             i2l4897 13A6                               i2l4985 1778  
                             i2l4969 1736                        draw_dec8@unit 000A  
                             _RCSTA1 000FAB                           _Tick_Count 000071  
                             _SPBRG1 000FAF                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                             _TXREG1 000FAD                       clear_line@line 000F  
                             _TXSTA1 000FAC                               _Valeur 000083  
                          ??___awdiv 0005                            ??___awmod 0005  
                          ??___lwdiv 0005                               _tache1 10DA  
                             _tache2 16F4                               _tache3 18CE  
                             _tache4 19AC                               _tache5 17E8  
                             _tache6 2130                            ??_charger 000F  
                   ___awdiv@quotient 0007                      ___awmod@divisor 0003  
                             isa$std 000001                      ___awmod@counter 0005  
                          ??_command 0005                      ??_stid_delai_us 0003  
                             lltemp0 0024                               plot1@x 000E  
                             plot1@y 0009                     __end_of_tp_delai 23FE  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
            __end_of_check_status_ok 22E0         lecture_normale@temps_attente 0005  
                         __accesstop 0060              __end_of__initialization 2438  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                         ___inthi_sp 0AAC                    __end_of_d1command 21B4  
                  __end_of_d2command 20E4                        __end_of_plot1 1BF4  
                            ??_plot1 000A                        draw_square@x1 0012  
                      draw_square@x2 0010                        draw_square@y1 000F  
                      draw_square@y2 0011                         _W_TEMPORAIRE 000060  
                         __pnvCOMRAM 0030                       _clear_graphics 2284  
        ??_initialisation_du_systeme 0023                           _clear_line 2346  
                         _clear_text 2254             ?_fonction_d_interruption 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                       draw_dec8@octet 000B  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
           _initialisation_afficheur 1A7A                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 003B  
             __end_of_clear_graphics 22B4                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 21B4                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_dec8 1D32  
                  __end_of_draw_char 2254                    __end_of_draw_hex8 1F98  
                            ___awdiv 1E48                              ___awmod 1ECC  
                            ___lwdiv 1FF0                         __psmallconst 1000  
                            __pcinit 242E                              _charger 2416  
                            __ramtop 1000                       draw_char@dccar 0008  
                            __ptext0 2366                              __ptext1 14BC  
                            __ptext2 21B4                              __ptext3 22E0  
                            __ptext5 2130                              __ptext6 1BF4  
                            __ptext7 23CE                              __ptext8 17E8  
                            __ptext9 19AC                              _command 2380  
                          _T0CONbits 000FD5                   draw_string@tableau 0008  
          _initialisation_du_systeme 14BC                     ___awmod@dividend 0001  
                  __end_of_init_rxtx 2324                    __end_of_goto_lico 1FF0  
                            _val_tos 0035                       draw_hex8@octet 0008  
                            _vitesse 000073                 end_of_initialization 2438  
                            tache4@a 0001                              tache5@a 0001  
                            tache6@n 0009                      ?_clear_graphics 0001  
                        ?_clear_line 0001                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84              _lecture_8bit_analogique 21EC  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                         command@cmd 0005                           draw_dec8@c 000E  
                         draw_hex8@c 0009                   check_status_ok@res 0001  
             lecture_normale@n_octet 0006       lecture_8bit_analogique@channel 0002  
                          _d1command 217A                            _d2command 2094  
                     __end_of_tache1 14BC                       __end_of_tache2 17E8  
                     __end_of_tache3 19AC                       __end_of_tache4 1A7A  
                     __end_of_tache5 18CE                       __end_of_tache6 217A  
                      ??_draw_square 0012                        ??_draw_string 000A  
             lecture_normale@stid_id 0003                __end_of_stid_delai_us 23E6  
                start_initialization 242E                        vitesseAdmin@a 0001  
                      vitesseAdmin@b 0006                        vitesseAdmin@c 0008  
                  ??_lecture_normale 0005                        _delai_us_char 2324  
                      ?_vitesseAdmin 0001                             ??_tache1 0015  
                           ??_tache2 0008                             ??_tache3 0001  
                           ??_tache4 0001                             ??_tache5 0001  
                           ??_tache6 0009           ??_initialisation_afficheur 0009  
          ??_lecture_8bit_analogique 0001                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 0037  
                __end_of_draw_square 2130           ??_initialisation_des_ports 0023  
                __end_of_draw_string 1DBE                       ?_delai_us_char 0001  
                   ___lwdiv@dividend 0001                            __pintcode 0008  
                     ??_vitesseAdmin 0003                             ?___awdiv 0001  
                           ?___awmod 0001                             ?___lwdiv 0001  
                           ?_charger 0001                    _pointeur_de_tache 000070  
                          _draw_dec8 1C96                            _draw_char 2222  
                          _draw_hex8 1F3C                             ?_command 0001  
                     _wait_status_ok 2042                          __smallconst 1000  
                          _contexte1 000100                            _contexte2 000200  
                          _contexte3 000300                            _contexte4 000400  
                          _contexte5 000500                            _contexte6 000600  
                           _BAUDCON1 000F65                     goto_lico@colonne 0009  
                       _tache_active 00006F                          _PADCFG1bits 000F53  
                   ??_clear_graphics 0009                     ___lwdiv@quotient 0005  
                          _init_rxtx 2302                   write_c_aff@command 0001  
                          _goto_lico 1F98      __end_of_lecture_8bit_analogique 2222  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
  __end_of_initialisation_du_systeme 16F4                             _LATGbits 000F8F  
                           _LATJbits 000F91                             i2u140_40 19DC  
                           i2u150_40 1A18                             i2u142_40 19E8  
                           i2u134_40 19B8                             i2u223_40 1F06  
                           i2u232_40 1D5C                             i2u160_40 1A54  
                           i2u152_40 1A24                             i2u144_40 19F4  
                           i2u136_40 19C4                             i2u232_47 1D52  
                           i2u217_40 1E8E                             i2u234_40 1D8E  
                           i2u154_40 1A30                             i2u146_40 1A00  
                           i2u138_40 19D0                             i2u234_47 1D84  
                           i2u314_47 1218                             i2u251_40 1DF8  
                           i2u171_40 1818                             i2u236_40 1DB6  
                           i2u156_40 1A3C                             i2u148_40 1A0C  
                           i2u236_47 1DAC                             i2u181_40 1854  
                           i2u173_40 1824                             i2u165_40 17F4  
                       ??_clear_line 000F                             i2u158_40 1A48  
                           i2u191_40 1890                             i2u183_40 1860  
                           i2u175_40 1830                             i2u167_40 1800  
                           i2u185_40 186C                             i2u177_40 183C  
                           i2u169_40 180C                             _PIR1bits 000F9E  
                           i2u283_40 1312                             i2u275_40 2012  
                           i2u187_40 1878                             i2u179_40 1848  
                           i2u189_40 1884                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 2094  
                        ??_d1command 0006                           ?_draw_dec8 0001  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                   clear_line@column 0010                          _draw_square 20E4  
                        _draw_string 1D32                         _Val_sem_rxtx 003A  
                           _TP_appui 000066                   __end_of_clear_line 2366  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 2284                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           _Personne 000082                             _Operator 000082  
                           __Lrparam 0000     __end_of_initialisation_afficheur 1B46  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
            _fonction_d_interruption 0008                      _lecture_normale 1BF4  
                           _batterie 000074                      ___lwdiv@divisor 0003  
   __end_of_initialisation_des_ports 21EC                      ___lwdiv@counter 0007  
                           __ptext10 18CE                             __ptext11 16F4  
                           __ptext20 2302                             __ptext12 23E6  
                           __ptext21 20E4                             __ptext13 1FF0  
                           __ptext30 2222                             __ptext22 1B46  
                           __ptext14 10DA                             __ptext31 2284  
                           __ptext23 2380                             __ptext15 1DBE  
                           __ptext40 2324                             __ptext32 2416  
                           __ptext24 1ECC                             __ptext16 23FE  
                           __ptext41 0000                             __ptext33 1F98  
                           __ptext25 1F3C                             __ptext17 21EC  
                           __ptext34 2094                             __ptext26 1C96  
                           __ptext18 1A7A                             __ptext35 1D32  
                           __ptext27 1E48                             __ptext19 22B4  
                           __ptext36 217A                             __ptext28 2254  
                           __ptext37 239A                             __ptext29 2346  
                           __ptext38 23B4                             __ptext39 2042  
               __end_of_vitesseAdmin 1E48                             isa$xinst 000000  
                           _tp_delai 23E6                    ??_check_status_ok 0001  
                        ??_draw_dec8 0009                          ??_draw_char 0008  
                        ??_draw_hex8 0008                        ??_write_c_aff 0001  
                      ??_write_d_aff 0001                           _INTCONbits 000FF2  
                           tache2@hx 000E                             tache2@hy 0010  
                           tache2@ix 000A                             tache2@iy 000C  
                           tache2@lx 000F                             tache2@ly 0011  
                        ??_init_rxtx 0001                          ??_goto_lico 000A  
                           intlevel2 0000                             plot1@add 000C  
                     goto_lico@ligne 000C              __end_of_lecture_normale 1C96  
                       d1command@cmd 0005                         d1command@res 0007  
          ??_fonction_d_interruption 0017                         tp_delai@itpd 0001  
                        d1command@d1 0006                  __end_of_write_c_aff 23CE  
                __end_of_write_d_aff 23B4                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
