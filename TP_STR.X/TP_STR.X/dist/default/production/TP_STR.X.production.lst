

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 24 13:55:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62                           	dabs	1,0x603,1,_STKPTR_T6
    63                           	dabs	1,0x503,1,_STKPTR_T5
    64                           	dabs	1,0x403,1,_STKPTR_T4
    65                           	dabs	1,0x303,1,_STKPTR_T3
    66                           	dabs	1,0x203,1,_STKPTR_T2
    67                           	dabs	1,0x103,1,_STKPTR_T1
    68                           	dabs	1,0x60,1,_W_TEMPORAIRE
    69                           	dabs	1,0x100,66,_contexte1
    70                           	dabs	1,0x69,6,_queue
    71                           	dabs	1,0x71,2,_Tick_Count
    72                           	dabs	1,0x84,1,_valeur_convertie
    73                           	dabs	1,0x83,1,_Valeur
    74                           	dabs	1,0x82,1,_Personne
    75                           	dabs	1,0x81,1,_TEST
    76                           	dabs	1,0x80,1,_RXTX_libre
    77                           	dabs	1,0x7F,1,_n_octet_badge
    78                           	dabs	1,0x74,1,_batterie
    79                           	dabs	1,0x73,1,_vitesse
    80                           	dabs	1,0x70,1,_pointeur_de_tache
    81                           	dabs	1,0x6F,1,_tache_active
    82                           	dabs	1,0x68,1,_TP_y
    83                           	dabs	1,0x67,1,_TP_x
    84                           	dabs	1,0x66,1,_TP_appui
    85                           	dabs	1,0x65,1,_DEMARRAGE
    86                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    87                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    88                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    89                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    90                           	dabs	1,0x75,10,_badge
    91                           	dabs	1,0x200,66,_contexte2
    92                           	dabs	1,0x300,66,_contexte3
    93                           	dabs	1,0x400,66,_contexte4
    94                           	dabs	1,0x500,66,_contexte5
    95                           	dabs	1,0x600,66,_contexte6
    96   000000                     
    97                           ; Generated 06/04/2022 GMT
    98                           ; 
    99                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F87K22 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131   000000                     
   132 ;;Init@sem	offset=-1 (param)
   133 ;;Init@sem	offset=-1 (param)
   134   000000                     _TMR0	set	4054
   135   000000                     _TOSU	set	4095
   136   000000                     _TOSH	set	4094
   137   000000                     _TOSL	set	4093
   138   000000                     _TABLAT	set	4085
   139   000000                     _TBLPTRL	set	4086
   140   000000                     _TBLPTRH	set	4087
   141   000000                     _TBLPTRU	set	4088
   142   000000                     _PRODL	set	4083
   143   000000                     _PRODH	set	4084
   144   000000                     _FSR2L	set	4057
   145   000000                     _FSR2H	set	4058
   146   000000                     _FSR1L	set	4065
   147   000000                     _FSR1H	set	4066
   148   000000                     _STKPTR	set	4092
   149   000000                     _FSR0L	set	4073
   150   000000                     _FSR0H	set	4074
   151   000000                     _BSR	set	4064
   152   000000                     _WREG	set	4072
   153   000000                     _STATUS	set	4056
   154                           
   155 ;;
   156 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   157 ;;
   158 ;; *************** function _main *****************
   159 ;; Defined at:
   160 ;;		line 6 in file "main.c"
   161 ;; Parameters:    Size  Location     Type
   162 ;;		None
   163 ;; Auto vars:     Size  Location     Type
   164 ;;		None
   165 ;; Return value:  Size  Location     Type
   166 ;;                  1    wreg      void 
   167 ;; Registers used:
   168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   169 ;; Tracked objects:
   170 ;;		On entry : 0/0
   171 ;;		On exit  : 0/0
   172 ;;		Unchanged: 0/0
   173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;Total ram usage:        0 bytes
   179 ;; Hardware stack levels required when called: 8
   180 ;; This function calls:
   181 ;;		_Init
   182 ;;		_initialisation_des_ports
   183 ;;		_initialisation_du_systeme
   184 ;; This function is called by:
   185 ;;		Startup code after reset
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text0
   190   00242E                     __ptext0:
   191                           	callstack 0
   192   000000                     _T0IF	set	32658
   193   000000                     _INTCON2bits	set	4081
   194   00242E                     _main:
   195                           	callstack 23
   196                           
   197                           ;main.c: 8: initialisation_des_ports();
   198                           
   199                           ;incstack = 0
   200   00242E  EC2B  F011         	call	_initialisation_des_ports	;wreg free
   201                           
   202                           ;main.c: 9: initialisation_du_systeme();
   203   002432  EC56  F00A         	call	_initialisation_du_systeme	;wreg free
   204                           
   205                           ;main.c: 10: Init(1);
   206   002436  0E01               	movlw	1
   207   002438  6EE6               	movwf	postinc1,c
   208   00243A  ECD4  F011         	call	_Init	;wreg free
   209                           
   210                           ;main.c: 13: T0CONbits.TMR0ON=1;
   211   00243E  8ED5               	bsf	213,7,c	;volatile
   212                           
   213                           ;main.c: 14: T0IF=1;
   214   002440  84F2               	bsf	4082,2,c	;volatile
   215                           
   216                           ;main.c: 15: (INTCONbits.GIE = 1);
   217   002442  8EF2               	bsf	242,7,c	;volatile
   218   002444                     l5712:
   219                           
   220                           ;main.c: 19: __nop();
   221   002444  F000               	nop	
   222   002446  D7FE               	goto	l5712
   223   002448                     __end_of_main:
   224                           	callstack 0
   225                           
   226                           	psect	nvCOMRAM
   227   000035                     __pnvCOMRAM:
   228                           	callstack 0
   229   000035                     _fptr:
   230                           	callstack 0
   231   000035                     	ds	3
   232   000038                     _puc:
   233                           	callstack 0
   234   000038                     	ds	2
   235   00003A                     _val_tos:
   236                           	callstack 0
   237   00003A                     	ds	2
   238   000000                     _ANCON1bits	set	3876
   239   000000                     _ANCON0bits	set	3877
   240   000000                     _TXSTA1	set	4012
   241   000000                     _LATJ	set	3985
   242   000000                     _T0CON	set	4053
   243   000000                     _ADCON0bits	set	4034
   244   000000                     _INTCONbits	set	4082
   245   000000                     _T0IE	set	32661
   246   000000                     _ANCON2	set	3875
   247   000000                     _ANCON1	set	3876
   248   000000                     _ANCON0	set	3877
   249   000000                     _MEMCON	set	3878
   250   000000                     _T0CONbits	set	4053
   251   000000                     _PADCFG1bits	set	3923
   252   000000                     _LATCbits	set	3979
   253   000000                     _LATDbits	set	3980
   254   000000                     _LATGbits	set	3983
   255   000000                     _LATJbits	set	3985
   256   000000                     _LATH	set	3984
   257   000000                     _TRISCbits	set	3988
   258   000000                     _TRISDbits	set	3989
   259   000000                     _TRISGbits	set	3992
   260   000000                     _TRISJ	set	3994
   261   000000                     _TRISH	set	3993
   262   000000                     _PIR1bits	set	3998
   263   000000                     _TXREG1	set	4013
   264   000000                     _ADCON2	set	4032
   265   000000                     _ADCON1	set	4033
   266   000000                     _BAUDCON1	set	3941
   267   000000                     _PORTBbits	set	3969
   268   000000                     _PORTEbits	set	3972
   269   000000                     _SPBRGH1	set	4052
   270   000000                     _ADRESH	set	4036
   271   000000                     _ADRESL	set	4035
   272   000000                     _ADCON0	set	4034
   273   000000                     _POSTINC0	set	4078
   274   000000                     _POSTINC1	set	4070
   275   000000                     _PCLATH	set	4090
   276   000000                     _PCLATU	set	4091
   277   000000                     _SPBRG1	set	4015
   278   000000                     _PORTH	set	3975
   279   000000                     _PORTDbits	set	3971
   280   000000                     _RCSTA1	set	4011
   281   000000                     _TXSTA1bits	set	4012
   282                           
   283                           	psect	smallconst
   284   001000                     __psmallconst:
   285                           	callstack 0
   286   001000  00                 	db	0
   287   001001                     STR_21:
   288   001001  41                 	db	65	;'A'
   289   001002  54                 	db	84	;'T'
   290   001003  54                 	db	84	;'T'
   291   001004  45                 	db	69	;'E'
   292   001005  4E                 	db	78	;'N'
   293   001006  54                 	db	84	;'T'
   294   001007  49                 	db	73	;'I'
   295   001008  4F                 	db	79	;'O'
   296   001009  4E                 	db	78	;'N'
   297   00100A  20                 	db	32
   298   00100B  76                 	db	118	;'v'
   299   00100C  6F                 	db	111	;'o'
   300   00100D  75                 	db	117	;'u'
   301   00100E  73                 	db	115	;'s'
   302   00100F  20                 	db	32
   303   001010  65                 	db	101	;'e'
   304   001011  74                 	db	116	;'t'
   305   001012  65                 	db	101	;'e'
   306   001013  73                 	db	115	;'s'
   307   001014  20                 	db	32
   308   001015  70                 	db	112	;'p'
   309   001016  6C                 	db	108	;'l'
   310   001017  65                 	db	101	;'e'
   311   001018  69                 	db	105	;'i'
   312   001019  6E                 	db	110	;'n'
   313   00101A  21                 	db	33
   314   00101B  21                 	db	33
   315   00101C  21                 	db	33
   316   00101D  00                 	db	0
   317   00101E                     STR_11:
   318   00101E  20                 	db	32
   319   00101F  41                 	db	65	;'A'
   320   001020  55                 	db	85	;'U'
   321   001021  43                 	db	67	;'C'
   322   001022  55                 	db	85	;'U'
   323   001023  4E                 	db	78	;'N'
   324   001024  20                 	db	32
   325   001025  20                 	db	32
   326   001026  20                 	db	32
   327   001027  20                 	db	32
   328   001028  20                 	db	32
   329   001029  20                 	db	32
   330   00102A  20                 	db	32
   331   00102B  20                 	db	32
   332   00102C  20                 	db	32
   333   00102D  20                 	db	32
   334   00102E  20                 	db	32
   335   00102F  20                 	db	32
   336   001030  20                 	db	32
   337   001031  20                 	db	32
   338   001032  00                 	db	0
   339   001033                     STR_22:
   340   001033  52                 	db	82	;'R'
   341   001034  4F                 	db	79	;'O'
   342   001035  55                 	db	85	;'U'
   343   001036  45                 	db	69	;'E'
   344   001037  53                 	db	83	;'S'
   345   001038  42                 	db	66	;'B'
   346   001039  59                 	db	89	;'Y'
   347   00103A  47                 	db	71	;'G'
   348   00103B  4E                 	db	78	;'N'
   349   00103C  4F                 	db	79	;'O'
   350   00103D  4C                 	db	76	;'L'
   351   00103E  45                 	db	69	;'E'
   352   00103F  53                 	db	83	;'S'
   353   001040  00                 	db	0
   354   001041                     STR_6:
   355   001041  54                 	db	84	;'T'
   356   001042  65                 	db	101	;'e'
   357   001043  6D                 	db	109	;'m'
   358   001044  70                 	db	112	;'p'
   359   001045  2E                 	db	46
   360   001046  20                 	db	32
   361   001047  48                 	db	72	;'H'
   362   001048  75                 	db	117	;'u'
   363   001049  69                 	db	105	;'i'
   364   00104A  6C                 	db	108	;'l'
   365   00104B  65                 	db	101	;'e'
   366   00104C  3A                 	db	58	;':'
   367   00104D  00                 	db	0
   368   00104E                     STR_15:
   369   00104E  58                 	db	88	;'X'
   370   00104F  2D                 	db	45
   371   001050  4A                 	db	74	;'J'
   372   001051  6F                 	db	111	;'o'
   373   001052  79                 	db	121	;'y'
   374   001053  73                 	db	115	;'s'
   375   001054  74                 	db	116	;'t'
   376   001055  69                 	db	105	;'i'
   377   001056  63                 	db	99	;'c'
   378   001057  6B                 	db	107	;'k'
   379   001058  3A                 	db	58	;':'
   380   001059  00                 	db	0
   381   00105A                     STR_16:
   382   00105A  59                 	db	89	;'Y'
   383   00105B  2D                 	db	45
   384   00105C  4A                 	db	74	;'J'
   385   00105D  6F                 	db	111	;'o'
   386   00105E  79                 	db	121	;'y'
   387   00105F  73                 	db	115	;'s'
   388   001060  74                 	db	116	;'t'
   389   001061  69                 	db	105	;'i'
   390   001062  63                 	db	99	;'c'
   391   001063  6B                 	db	107	;'k'
   392   001064  3A                 	db	58	;':'
   393   001065  00                 	db	0
   394   001066                     STR_5:
   395   001066  54                 	db	84	;'T'
   396   001067  65                 	db	101	;'e'
   397   001068  6D                 	db	109	;'m'
   398   001069  70                 	db	112	;'p'
   399   00106A  2E                 	db	46
   400   00106B  20                 	db	32
   401   00106C  45                 	db	69	;'E'
   402   00106D  61                 	db	97	;'a'
   403   00106E  75                 	db	117	;'u'
   404   00106F  3A                 	db	58	;':'
   405   001070  00                 	db	0
   406   001071                     STR_9:
   407   001071  42                 	db	66	;'B'
   408   001072  61                 	db	97	;'a'
   409   001073  74                 	db	116	;'t'
   410   001074  74                 	db	116	;'t'
   411   001075  65                 	db	101	;'e'
   412   001076  72                 	db	114	;'r'
   413   001077  69                 	db	105	;'i'
   414   001078  65                 	db	101	;'e'
   415   001079  3A                 	db	58	;':'
   416   00107A  00                 	db	0
   417   00107B                     STR_8:
   418   00107B  56                 	db	86	;'V'
   419   00107C  69                 	db	105	;'i'
   420   00107D  74                 	db	116	;'t'
   421   00107E  65                 	db	101	;'e'
   422   00107F  73                 	db	115	;'s'
   423   001080  73                 	db	115	;'s'
   424   001081  65                 	db	101	;'e'
   425   001082  3A                 	db	58	;':'
   426   001083  00                 	db	0
   427   001084                     STR_12:
   428   001084  4F                 	db	79	;'O'
   429   001085  70                 	db	112	;'p'
   430   001086  65                 	db	101	;'e'
   431   001087  72                 	db	114	;'r'
   432   001088  61                 	db	97	;'a'
   433   001089  74                 	db	116	;'t'
   434   00108A  6F                 	db	111	;'o'
   435   00108B  72                 	db	114	;'r'
   436   00108C  00                 	db	0
   437   00108D                     STR_1:
   438   00108D  4D                 	db	77	;'M'
   439   00108E  61                 	db	97	;'a'
   440   00108F  72                 	db	114	;'r'
   441   001090  63                 	db	99	;'c'
   442   001091  68                 	db	104	;'h'
   443   001092  65                 	db	101	;'e'
   444   001093  3A                 	db	58	;':'
   445   001094  00                 	db	0
   446   001095                     STR_10:
   447   001095  42                 	db	66	;'B'
   448   001096  61                 	db	97	;'a'
   449   001097  64                 	db	100	;'d'
   450   001098  67                 	db	103	;'g'
   451   001099  65                 	db	101	;'e'
   452   00109A  3A                 	db	58	;':'
   453   00109B  00                 	db	0
   454   00109C                     STR_4:
   455   00109C  53                 	db	83	;'S'
   456   00109D  69                 	db	105	;'i'
   457   00109E  65                 	db	101	;'e'
   458   00109F  67                 	db	103	;'g'
   459   0010A0  65                 	db	101	;'e'
   460   0010A1  3A                 	db	58	;':'
   461   0010A2  00                 	db	0
   462   0010A3                     STR_18:
   463   0010A3  43                 	db	67	;'C'
   464   0010A4  48                 	db	72	;'H'
   465   0010A5  41                 	db	65	;'A'
   466   0010A6  52                 	db	82	;'R'
   467   0010A7  47                 	db	71	;'G'
   468   0010A8  45                 	db	69	;'E'
   469   0010A9  00                 	db	0
   470   0010AA                     STR_13:
   471   0010AA  20                 	db	32
   472   0010AB  41                 	db	65	;'A'
   473   0010AC  44                 	db	68	;'D'
   474   0010AD  4D                 	db	77	;'M'
   475   0010AE  49                 	db	73	;'I'
   476   0010AF  4E                 	db	78	;'N'
   477   0010B0  00                 	db	0
   478   0010B1                     STR_2:
   479   0010B1  28                 	db	40
   480   0010B2  28                 	db	40
   481   0010B3  21                 	db	33
   482   0010B4  29                 	db	41
   483   0010B5  29                 	db	41
   484   0010B6  00                 	db	0
   485   0010B7                     STR_7:
   486   0010B7  43                 	db	67	;'C'
   487   0010B8  68                 	db	104	;'h'
   488   0010B9  6F                 	db	111	;'o'
   489   0010BA  63                 	db	99	;'c'
   490   0010BB  3A                 	db	58	;':'
   491   0010BC  00                 	db	0
   492   0010BD                     STR_14:
   493   0010BD  41                 	db	65	;'A'
   494   0010BE  55                 	db	85	;'U'
   495   0010BF  43                 	db	67	;'C'
   496   0010C0  55                 	db	85	;'U'
   497   0010C1  4E                 	db	78	;'N'
   498   0010C2  00                 	db	0
   499   0010C3                     STR_17:
   500   0010C3  56                 	db	86	;'V'
   501   0010C4  49                 	db	73	;'I'
   502   0010C5  44                 	db	68	;'D'
   503   0010C6  45                 	db	69	;'E'
   504   0010C7  00                 	db	0
   505   0010C8                     STR_20:
   506   0010C8  20                 	db	32
   507   0010C9  79                 	db	121	;'y'
   508   0010CA  3D                 	db	61	;'='
   509   0010CB  00                 	db	0
   510   0010CC                     STR_26:
   511   0010CC  4E                 	db	78	;'N'
   512   0010CD  20                 	db	32
   513   0010CE  00                 	db	0
   514   0010CF                     STR_25:
   515   0010CF  41                 	db	65	;'A'
   516   0010D0  52                 	db	82	;'R'
   517   0010D1  00                 	db	0
   518   0010D2                     STR_24:
   519   0010D2  41                 	db	65	;'A'
   520   0010D3  56                 	db	86	;'V'
   521   0010D4  00                 	db	0
   522   0010D5                     STR_19:
   523   0010D5  78                 	db	120	;'x'
   524   0010D6  3D                 	db	61	;'='
   525   0010D7  00                 	db	0
   526   0010D8  00                 	db	0	; dummy byte at the end
   527   000000                     
   528                           ; #config settings
   529                           
   530                           	psect	cinit
   531   0024F6                     __pcinit:
   532                           	callstack 0
   533   0024F6                     start_initialization:
   534                           	callstack 0
   535   0024F6                     __initialization:
   536                           	callstack 0
   537                           
   538                           ; Clear objects allocated to COMRAM (5 bytes)
   539   0024F6  6A40               	clrf	(__pbssCOMRAM+4)& (0+255),c
   540   0024F8  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   541   0024FA  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   542   0024FC  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   543   0024FE  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   544   002500                     end_of_initialization:
   545                           	callstack 0
   546   002500                     __end_of__initialization:
   547                           	callstack 0
   548   002500  0100               	movlb	0
   549   002502  EF17  F012         	goto	_main	;jump to C main() function
   550                           
   551                           	psect	bssCOMRAM
   552   00003C                     __pbssCOMRAM:
   553                           	callstack 0
   554   00003C                     _tc:
   555                           	callstack 0
   556   00003C                     	ds	3
   557   00003F                     _Val_sem_rxtx:
   558                           	callstack 0
   559   00003F                     	ds	1
   560   000040                     _Val_sem_cna:
   561                           	callstack 0
   562   000040                     	ds	1
   563                           
   564                           	psect	cstackBANK0
   565   000085                     __pcstackBANK0:
   566                           	callstack 0
   567   000085                     initialisation_du_systeme@temp:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x0
   571   000085                     	ds	1
   572   000086                     
   573                           ; 1 bytes @ 0x1
   574                           
   575                           	psect	cstackCOMRAM
   576   000001                     __pcstackCOMRAM:
   577                           	callstack 0
   578   000001                     ?_Diminution:
   579   000001                     ?___wmul:
   580                           	callstack 0
   581   000001                     ?___awmod:
   582                           	callstack 0
   583   000001                     ?___lwdiv:
   584                           	callstack 0
   585   000001                     lecture_8bit_analogique@ret:
   586                           	callstack 0
   587   000001                     write_d_aff@data:
   588                           	callstack 0
   589   000001                     write_c_aff@command:
   590                           	callstack 0
   591   000001                     check_status_ok@res:
   592                           	callstack 0
   593   000001                     delai_us_char@ucdelai:
   594                           	callstack 0
   595   000001                     tp_delai@itpd:
   596                           	callstack 0
   597   000001                     tache4@a:
   598                           	callstack 0
   599   000001                     tache5@a:
   600                           	callstack 0
   601   000001                     vitesseAdmin@a:
   602                           	callstack 0
   603   000001                     Diminution@vitesse:
   604                           	callstack 0
   605   000001                     stid_delai_us@isdu:
   606                           	callstack 0
   607   000001                     ___wmul@multiplier:
   608                           	callstack 0
   609   000001                     ___awmod@dividend:
   610                           	callstack 0
   611   000001                     ___lwdiv@dividend:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x0
   615   000001                     	ds	1
   616   000002                     lecture_8bit_analogique@channel:
   617                           	callstack 0
   618   000002                     wait_status_ok@err:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x1
   622   000002                     	ds	1
   623   000003                     ??_vitesseAdmin:
   624   000003                     wait_status_ok@status:
   625                           	callstack 0
   626   000003                     lecture_normale@stid_id:
   627                           	callstack 0
   628   000003                     ___wmul@multiplicand:
   629                           	callstack 0
   630   000003                     ___awmod@divisor:
   631                           	callstack 0
   632   000003                     ___lwdiv@divisor:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x2
   636   000003                     	ds	1
   637   000004                     wait_status_ok@res:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x3
   641   000004                     	ds	1
   642   000005                     command@cmd:
   643                           	callstack 0
   644   000005                     d1command@cmd:
   645                           	callstack 0
   646   000005                     d2command@d2:
   647                           	callstack 0
   648   000005                     lecture_normale@temps_attente:
   649                           	callstack 0
   650   000005                     ___awmod@counter:
   651                           	callstack 0
   652   000005                     ___wmul@product:
   653                           	callstack 0
   654   000005                     ___lwdiv@quotient:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x4
   658   000005                     	ds	1
   659   000006                     d1command@d1:
   660                           	callstack 0
   661   000006                     d2command@cmd:
   662                           	callstack 0
   663   000006                     lecture_normale@n_octet:
   664                           	callstack 0
   665   000006                     ___awmod@sign:
   666                           	callstack 0
   667   000006                     vitesseAdmin@b:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x5
   671   000006                     	ds	1
   672   000007                     ?___awdiv:
   673                           	callstack 0
   674   000007                     d1command@res:
   675                           	callstack 0
   676   000007                     d2command@d1:
   677                           	callstack 0
   678   000007                     lecture_normale@n_bit:
   679                           	callstack 0
   680   000007                     ___lwdiv@counter:
   681                           	callstack 0
   682   000007                     ___awdiv@dividend:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x6
   686   000007                     	ds	1
   687   000008                     ??_tache2:
   688   000008                     d2command@res:
   689                           	callstack 0
   690   000008                     draw_char@dccar:
   691                           	callstack 0
   692   000008                     draw_hex8@octet:
   693                           	callstack 0
   694   000008                     lecture_normale@octet:
   695                           	callstack 0
   696   000008                     draw_string@tableau:
   697                           	callstack 0
   698   000008                     vitesseAdmin@c:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x7
   702   000008                     	ds	1
   703   000009                     tache6@n:
   704                           	callstack 0
   705   000009                     initialisation_afficheur@error_count:
   706                           	callstack 0
   707   000009                     draw_hex8@c:
   708                           	callstack 0
   709   000009                     goto_lico@colonne:
   710                           	callstack 0
   711   000009                     clear_text@add:
   712                           	callstack 0
   713   000009                     clear_graphics@add:
   714                           	callstack 0
   715   000009                     ___awdiv@divisor:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x8
   719   000009                     	ds	1
   720   00000A                     ??_goto_lico:
   721   00000A                     tache2@ix:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x9
   725   00000A                     	ds	1
   726   00000B                     ___awdiv@counter:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0xA
   730   00000B                     	ds	1
   731   00000C                     goto_lico@ligne:
   732                           	callstack 0
   733   00000C                     ___awdiv@sign:
   734                           	callstack 0
   735   00000C                     tache2@iy:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0xB
   739   00000C                     	ds	1
   740   00000D                     goto_lico@adr:
   741                           	callstack 0
   742   00000D                     ___awdiv@quotient:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0xC
   746   00000D                     	ds	1
   747   00000E                     tache2@hx:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0xD
   751   00000E                     	ds	1
   752   00000F                     ??_marche:
   753   00000F                     ??_draw_dec8:
   754   00000F                     ?_Conversion:
   755                           	callstack 0
   756   00000F                     tache2@lx:
   757                           	callstack 0
   758   00000F                     clear_line@line:
   759                           	callstack 0
   760   00000F                     plot1@y:
   761                           	callstack 0
   762   00000F                     Conversion@a:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0xE
   766   00000F                     	ds	1
   767   000010                     ??_plot1:
   768   000010                     tache2@hy:
   769                           	callstack 0
   770   000010                     draw_dec8@unit:
   771                           	callstack 0
   772   000010                     clear_line@column:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0xF
   776   000010                     	ds	1
   777   000011                     tache2@ly:
   778                           	callstack 0
   779   000011                     draw_dec8@octet:
   780                           	callstack 0
   781   000011                     Conversion@valeur_lue:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x10
   785   000011                     	ds	1
   786   000012                     draw_dec8@cent:
   787                           	callstack 0
   788   000012                     plot1@add:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x11
   792   000012                     	ds	1
   793   000013                     draw_dec8@dix:
   794                           	callstack 0
   795   000013                     Conversion@valeur_convertie:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x12
   799   000013                     	ds	1
   800   000014                     draw_dec8@c:
   801                           	callstack 0
   802   000014                     plot1@x:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x13
   806   000014                     	ds	1
   807   000015                     draw_square@y1:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x14
   811   000015                     	ds	1
   812   000016                     draw_square@x2:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x15
   816   000016                     	ds	1
   817   000017                     draw_square@y2:
   818                           	callstack 0
   819                           
   820                           ; 1 bytes @ 0x16
   821   000017                     	ds	1
   822   000018                     draw_square@x1:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x17
   826   000018                     	ds	1
   827   000019                     draw_square@x:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x18
   831   000019                     	ds	1
   832   00001A                     draw_square@y:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x19
   836   00001A                     	ds	1
   837   00001B                     ??_tache1:
   838                           
   839                           ; 1 bytes @ 0x1A
   840   00001B                     	ds	2
   841   00001D                     ??_fonction_d_interruption:
   842                           
   843                           ; 1 bytes @ 0x1C
   844   00001D                     	ds	12
   845                           
   846 ;; *************** function _initialisation_du_systeme *****************
   847 ;; Defined at:
   848 ;;		line 131 in file "systeme.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  temp            1    0[BANK0 ] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;Total ram usage:        1 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; Hardware stack levels required when called: 7
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text1
   877   0014AC                     __ptext1:
   878                           	callstack 0
   879   0014AC                     _initialisation_du_systeme:
   880                           	callstack 23
   881                           
   882                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   883                           
   884                           ;incstack = 0
   885   0014AC  0E01               	movlw	1
   886   0014AE  0100               	movlb	0	; () banked
   887   0014B0  6F65               	movwf	101,b
   888                           
   889                           ;systeme.c: 138: queue[0]=1;
   890   0014B2  0E01               	movlw	1
   891   0014B4  6F69               	movwf	105,b
   892                           
   893                           ;systeme.c: 139: queue[1]=2;
   894   0014B6  0E02               	movlw	2
   895   0014B8  6F6A               	movwf	106,b
   896                           
   897                           ;systeme.c: 140: queue[2]=3;
   898   0014BA  0E03               	movlw	3
   899   0014BC  6F6B               	movwf	107,b
   900                           
   901                           ;systeme.c: 141: queue[3]=4;
   902   0014BE  0E04               	movlw	4
   903   0014C0  6F6C               	movwf	108,b
   904                           
   905                           ;systeme.c: 142: queue[4]=5;
   906   0014C2  0E05               	movlw	5
   907   0014C4  6F6D               	movwf	109,b
   908                           
   909                           ;systeme.c: 143: queue[5]=6;
   910   0014C6  0E06               	movlw	6
   911   0014C8  6F6E               	movwf	110,b
   912                           
   913                           ;systeme.c: 145: pointeur_de_tache=6-1;
   914   0014CA  0E05               	movlw	5
   915   0014CC  6F70               	movwf	112,b
   916                           
   917                           ; BSR set to: 0
   918                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   919   0014CE  0E69               	movlw	105
   920   0014D0  2570               	addwf	112,w,b
   921   0014D2  6ED9               	movwf	fsr2l,c
   922   0014D4  6ADA               	clrf	fsr2h,c
   923   0014D6  0E00               	movlw	0
   924   0014D8  22DA               	addwfc	fsr2h,f,c
   925   0014DA  50DF               	movf	indf2,w,c
   926   0014DC  6F6F               	movwf	111,b
   927                           
   928                           ; BSR set to: 0
   929                           ;systeme.c: 151: temp=STKPTR;
   930   0014DE  CFFC F085          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   931                           
   932                           ; BSR set to: 0
   933                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   934   0014E2  0E02               	movlw	2
   935   0014E4  6EFC               	movwf	252,c	;volatile
   936                           
   937                           ; BSR set to: 0
   938   0014E6  0EDA               	movlw	low _tache1
   939   0014E8  6E35               	movwf	_fptr^0,c
   940   0014EA  0E10               	movlw	high _tache1
   941   0014EC  6E36               	movwf	(_fptr+1)^0,c
   942   0014EE  0E00               	movlw	low (_tache1 shr (0+16))
   943   0014F0  6E37               	movwf	(_fptr+2)^0,c
   944                           
   945                           ; BSR set to: 0
   946   0014F2  C035  F03A         	movff	_fptr,_val_tos
   947   0014F6  C036  F03B         	movff	_fptr+1,_val_tos+1
   948                           
   949                           ; BSR set to: 0
   950   0014FA  0E3A               	movlw	low _val_tos
   951   0014FC  6E38               	movwf	_puc^0,c
   952   0014FE  0E00               	movlw	high _val_tos
   953   001500  6E39               	movwf	(_puc+1)^0,c
   954                           
   955                           ; BSR set to: 0
   956   001502  C038  FFD9         	movff	_puc,fsr2l
   957   001506  C039  FFDA         	movff	_puc+1,fsr2h
   958   00150A  50DF               	movf	indf2,w,c
   959   00150C  6EFD               	movwf	253,c	;volatile
   960                           
   961                           ; BSR set to: 0
   962   00150E  4A38               	infsnz	_puc^0,f,c
   963   001510  2A39               	incf	(_puc+1)^0,f,c
   964                           
   965                           ; BSR set to: 0
   966   001512  C038  FFD9         	movff	_puc,fsr2l
   967   001516  C039  FFDA         	movff	_puc+1,fsr2h
   968   00151A  50DF               	movf	indf2,w,c
   969   00151C  6EFE               	movwf	254,c	;volatile
   970                           
   971                           ; BSR set to: 0
   972   00151E  4A38               	infsnz	_puc^0,f,c
   973   001520  2A39               	incf	(_puc+1)^0,f,c
   974                           
   975                           ; BSR set to: 0
   976   001522  C038  FFD9         	movff	_puc,fsr2l
   977   001526  C039  FFDA         	movff	_puc+1,fsr2h
   978   00152A  50DF               	movf	indf2,w,c
   979   00152C  6EFF               	movwf	255,c	;volatile
   980                           
   981                           ; BSR set to: 0
   982                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   983   00152E  0E07               	movlw	7
   984   001530  6EFC               	movwf	252,c	;volatile
   985   001532  0EE4               	movlw	low _tache2
   986   001534  6E35               	movwf	_fptr^0,c
   987   001536  0E16               	movlw	high _tache2
   988   001538  6E36               	movwf	(_fptr+1)^0,c
   989   00153A  0E00               	movlw	low (_tache2 shr (0+16))
   990   00153C  6E37               	movwf	(_fptr+2)^0,c
   991                           
   992                           ; BSR set to: 0
   993   00153E  C035  F03A         	movff	_fptr,_val_tos
   994   001542  C036  F03B         	movff	_fptr+1,_val_tos+1
   995   001546  0E3A               	movlw	low _val_tos
   996   001548  6E38               	movwf	_puc^0,c
   997   00154A  0E00               	movlw	high _val_tos
   998   00154C  6E39               	movwf	(_puc+1)^0,c
   999                           
  1000                           ; BSR set to: 0
  1001   00154E  C038  FFD9         	movff	_puc,fsr2l
  1002   001552  C039  FFDA         	movff	_puc+1,fsr2h
  1003   001556  50DF               	movf	indf2,w,c
  1004   001558  6EFD               	movwf	253,c	;volatile
  1005                           
  1006                           ; BSR set to: 0
  1007   00155A  4A38               	infsnz	_puc^0,f,c
  1008   00155C  2A39               	incf	(_puc+1)^0,f,c
  1009                           
  1010                           ; BSR set to: 0
  1011   00155E  C038  FFD9         	movff	_puc,fsr2l
  1012   001562  C039  FFDA         	movff	_puc+1,fsr2h
  1013   001566  50DF               	movf	indf2,w,c
  1014   001568  6EFE               	movwf	254,c	;volatile
  1015                           
  1016                           ; BSR set to: 0
  1017   00156A  4A38               	infsnz	_puc^0,f,c
  1018   00156C  2A39               	incf	(_puc+1)^0,f,c
  1019                           
  1020                           ; BSR set to: 0
  1021   00156E  C038  FFD9         	movff	_puc,fsr2l
  1022   001572  C039  FFDA         	movff	_puc+1,fsr2h
  1023   001576  50DF               	movf	indf2,w,c
  1024   001578  6EFF               	movwf	255,c	;volatile
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1028   00157A  0E0C               	movlw	12
  1029   00157C  6EFC               	movwf	252,c	;volatile
  1030                           
  1031                           ; BSR set to: 0
  1032   00157E  0EBE               	movlw	low _tache3
  1033   001580  6E35               	movwf	_fptr^0,c
  1034   001582  0E18               	movlw	high _tache3
  1035   001584  6E36               	movwf	(_fptr+1)^0,c
  1036   001586  0E00               	movlw	low (_tache3 shr (0+16))
  1037   001588  6E37               	movwf	(_fptr+2)^0,c
  1038                           
  1039                           ; BSR set to: 0
  1040   00158A  C035  F03A         	movff	_fptr,_val_tos
  1041   00158E  C036  F03B         	movff	_fptr+1,_val_tos+1
  1042                           
  1043                           ; BSR set to: 0
  1044   001592  0E3A               	movlw	low _val_tos
  1045   001594  6E38               	movwf	_puc^0,c
  1046   001596  0E00               	movlw	high _val_tos
  1047   001598  6E39               	movwf	(_puc+1)^0,c
  1048                           
  1049                           ; BSR set to: 0
  1050   00159A  C038  FFD9         	movff	_puc,fsr2l
  1051   00159E  C039  FFDA         	movff	_puc+1,fsr2h
  1052   0015A2  50DF               	movf	indf2,w,c
  1053   0015A4  6EFD               	movwf	253,c	;volatile
  1054                           
  1055                           ; BSR set to: 0
  1056   0015A6  4A38               	infsnz	_puc^0,f,c
  1057   0015A8  2A39               	incf	(_puc+1)^0,f,c
  1058                           
  1059                           ; BSR set to: 0
  1060   0015AA  C038  FFD9         	movff	_puc,fsr2l
  1061   0015AE  C039  FFDA         	movff	_puc+1,fsr2h
  1062   0015B2  50DF               	movf	indf2,w,c
  1063   0015B4  6EFE               	movwf	254,c	;volatile
  1064                           
  1065                           ; BSR set to: 0
  1066   0015B6  4A38               	infsnz	_puc^0,f,c
  1067   0015B8  2A39               	incf	(_puc+1)^0,f,c
  1068                           
  1069                           ; BSR set to: 0
  1070   0015BA  C038  FFD9         	movff	_puc,fsr2l
  1071   0015BE  C039  FFDA         	movff	_puc+1,fsr2h
  1072   0015C2  50DF               	movf	indf2,w,c
  1073   0015C4  6EFF               	movwf	255,c	;volatile
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1077   0015C6  0E11               	movlw	17
  1078   0015C8  6EFC               	movwf	252,c	;volatile
  1079   0015CA  0E9C               	movlw	low _tache4
  1080   0015CC  6E35               	movwf	_fptr^0,c
  1081   0015CE  0E19               	movlw	high _tache4
  1082   0015D0  6E36               	movwf	(_fptr+1)^0,c
  1083   0015D2  0E00               	movlw	low (_tache4 shr (0+16))
  1084   0015D4  6E37               	movwf	(_fptr+2)^0,c
  1085                           
  1086                           ; BSR set to: 0
  1087   0015D6  C035  F03A         	movff	_fptr,_val_tos
  1088   0015DA  C036  F03B         	movff	_fptr+1,_val_tos+1
  1089   0015DE  0E3A               	movlw	low _val_tos
  1090   0015E0  6E38               	movwf	_puc^0,c
  1091   0015E2  0E00               	movlw	high _val_tos
  1092   0015E4  6E39               	movwf	(_puc+1)^0,c
  1093                           
  1094                           ; BSR set to: 0
  1095   0015E6  C038  FFD9         	movff	_puc,fsr2l
  1096   0015EA  C039  FFDA         	movff	_puc+1,fsr2h
  1097   0015EE  50DF               	movf	indf2,w,c
  1098   0015F0  6EFD               	movwf	253,c	;volatile
  1099                           
  1100                           ; BSR set to: 0
  1101   0015F2  4A38               	infsnz	_puc^0,f,c
  1102   0015F4  2A39               	incf	(_puc+1)^0,f,c
  1103                           
  1104                           ; BSR set to: 0
  1105   0015F6  C038  FFD9         	movff	_puc,fsr2l
  1106   0015FA  C039  FFDA         	movff	_puc+1,fsr2h
  1107   0015FE  50DF               	movf	indf2,w,c
  1108   001600  6EFE               	movwf	254,c	;volatile
  1109                           
  1110                           ; BSR set to: 0
  1111   001602  4A38               	infsnz	_puc^0,f,c
  1112   001604  2A39               	incf	(_puc+1)^0,f,c
  1113                           
  1114                           ; BSR set to: 0
  1115   001606  C038  FFD9         	movff	_puc,fsr2l
  1116   00160A  C039  FFDA         	movff	_puc+1,fsr2h
  1117   00160E  50DF               	movf	indf2,w,c
  1118   001610  6EFF               	movwf	255,c	;volatile
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1122   001612  0E16               	movlw	22
  1123   001614  6EFC               	movwf	252,c	;volatile
  1124                           
  1125                           ; BSR set to: 0
  1126   001616  0ED8               	movlw	low _tache5
  1127   001618  6E35               	movwf	_fptr^0,c
  1128   00161A  0E17               	movlw	high _tache5
  1129   00161C  6E36               	movwf	(_fptr+1)^0,c
  1130   00161E  0E00               	movlw	low (_tache5 shr (0+16))
  1131   001620  6E37               	movwf	(_fptr+2)^0,c
  1132                           
  1133                           ; BSR set to: 0
  1134   001622  C035  F03A         	movff	_fptr,_val_tos
  1135   001626  C036  F03B         	movff	_fptr+1,_val_tos+1
  1136                           
  1137                           ; BSR set to: 0
  1138   00162A  0E3A               	movlw	low _val_tos
  1139   00162C  6E38               	movwf	_puc^0,c
  1140   00162E  0E00               	movlw	high _val_tos
  1141   001630  6E39               	movwf	(_puc+1)^0,c
  1142                           
  1143                           ; BSR set to: 0
  1144   001632  C038  FFD9         	movff	_puc,fsr2l
  1145   001636  C039  FFDA         	movff	_puc+1,fsr2h
  1146   00163A  50DF               	movf	indf2,w,c
  1147   00163C  6EFD               	movwf	253,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150   00163E  4A38               	infsnz	_puc^0,f,c
  1151   001640  2A39               	incf	(_puc+1)^0,f,c
  1152                           
  1153                           ; BSR set to: 0
  1154   001642  C038  FFD9         	movff	_puc,fsr2l
  1155   001646  C039  FFDA         	movff	_puc+1,fsr2h
  1156   00164A  50DF               	movf	indf2,w,c
  1157   00164C  6EFE               	movwf	254,c	;volatile
  1158                           
  1159                           ; BSR set to: 0
  1160   00164E  4A38               	infsnz	_puc^0,f,c
  1161   001650  2A39               	incf	(_puc+1)^0,f,c
  1162                           
  1163                           ; BSR set to: 0
  1164   001652  C038  FFD9         	movff	_puc,fsr2l
  1165   001656  C039  FFDA         	movff	_puc+1,fsr2h
  1166   00165A  50DF               	movf	indf2,w,c
  1167   00165C  6EFF               	movwf	255,c	;volatile
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1171   00165E  0E1B               	movlw	27
  1172   001660  6EFC               	movwf	252,c	;volatile
  1173   001662  0E92               	movlw	low _tache6
  1174   001664  6E35               	movwf	_fptr^0,c
  1175   001666  0E21               	movlw	high _tache6
  1176   001668  6E36               	movwf	(_fptr+1)^0,c
  1177   00166A  0E00               	movlw	low (_tache6 shr (0+16))
  1178   00166C  6E37               	movwf	(_fptr+2)^0,c
  1179                           
  1180                           ; BSR set to: 0
  1181   00166E  C035  F03A         	movff	_fptr,_val_tos
  1182   001672  C036  F03B         	movff	_fptr+1,_val_tos+1
  1183   001676  0E3A               	movlw	low _val_tos
  1184   001678  6E38               	movwf	_puc^0,c
  1185   00167A  0E00               	movlw	high _val_tos
  1186   00167C  6E39               	movwf	(_puc+1)^0,c
  1187                           
  1188                           ; BSR set to: 0
  1189   00167E  C038  FFD9         	movff	_puc,fsr2l
  1190   001682  C039  FFDA         	movff	_puc+1,fsr2h
  1191   001686  50DF               	movf	indf2,w,c
  1192   001688  6EFD               	movwf	253,c	;volatile
  1193                           
  1194                           ; BSR set to: 0
  1195   00168A  4A38               	infsnz	_puc^0,f,c
  1196   00168C  2A39               	incf	(_puc+1)^0,f,c
  1197                           
  1198                           ; BSR set to: 0
  1199   00168E  C038  FFD9         	movff	_puc,fsr2l
  1200   001692  C039  FFDA         	movff	_puc+1,fsr2h
  1201   001696  50DF               	movf	indf2,w,c
  1202   001698  6EFE               	movwf	254,c	;volatile
  1203                           
  1204                           ; BSR set to: 0
  1205   00169A  4A38               	infsnz	_puc^0,f,c
  1206   00169C  2A39               	incf	(_puc+1)^0,f,c
  1207                           
  1208                           ; BSR set to: 0
  1209   00169E  C038  FFD9         	movff	_puc,fsr2l
  1210   0016A2  C039  FFDA         	movff	_puc+1,fsr2h
  1211   0016A6  50DF               	movf	indf2,w,c
  1212   0016A8  6EFF               	movwf	255,c	;volatile
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;systeme.c: 162: STKPTR=temp;
  1216   0016AA  C085  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1217                           
  1218                           ; BSR set to: 0
  1219                           ;systeme.c: 165: STKPTR_T1=2;
  1220   0016AE  0E02               	movlw	2
  1221   0016B0  0101               	movlb	1	; () banked
  1222   0016B2  6F03               	movwf	3,b
  1223                           
  1224                           ; BSR set to: 1
  1225                           ;systeme.c: 166: STKPTR_T2=7;
  1226   0016B4  0E07               	movlw	7
  1227   0016B6  0102               	movlb	2	; () banked
  1228   0016B8  6F03               	movwf	3,b
  1229                           
  1230                           ; BSR set to: 2
  1231                           ;systeme.c: 167: STKPTR_T3=12;
  1232   0016BA  0E0C               	movlw	12
  1233   0016BC  0103               	movlb	3	; () banked
  1234   0016BE  6F03               	movwf	3,b
  1235                           
  1236                           ; BSR set to: 3
  1237                           ;systeme.c: 168: STKPTR_T4=17;
  1238   0016C0  0E11               	movlw	17
  1239   0016C2  0104               	movlb	4	; () banked
  1240   0016C4  6F03               	movwf	3,b
  1241                           
  1242                           ; BSR set to: 4
  1243                           ;systeme.c: 169: STKPTR_T5=22;
  1244   0016C6  0E16               	movlw	22
  1245   0016C8  0105               	movlb	5	; () banked
  1246   0016CA  6F03               	movwf	3,b
  1247                           
  1248                           ; BSR set to: 5
  1249                           ;systeme.c: 170: STKPTR_T6=27;
  1250   0016CC  0E1B               	movlw	27
  1251   0016CE  0106               	movlb	6	; () banked
  1252   0016D0  6F03               	movwf	3,b
  1253                           
  1254                           ; BSR set to: 6
  1255                           ;systeme.c: 173: Tick_Count=0;
  1256   0016D2  0E00               	movlw	0
  1257   0016D4  0100               	movlb	0	; () banked
  1258   0016D6  6F72               	movwf	114,b
  1259   0016D8  0E00               	movlw	0
  1260   0016DA  6F71               	movwf	113,b
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;systeme.c: 175: T0CON=0x01;
  1264   0016DC  0E01               	movlw	1
  1265   0016DE  6ED5               	movwf	213,c	;volatile
  1266                           
  1267                           ; BSR set to: 0
  1268                           ;systeme.c: 176: T0IE=1;
  1269   0016E0  8AF2               	bsf	4082,5,c	;volatile
  1270                           
  1271                           ; BSR set to: 0
  1272   0016E2  0012               	return		;funcret
  1273   0016E4                     __end_of_initialisation_du_systeme:
  1274                           	callstack 0
  1275                           
  1276 ;; *************** function _initialisation_des_ports *****************
  1277 ;; Defined at:
  1278 ;;		line 23 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        0 bytes
  1297 ;; Hardware stack levels used: 1
  1298 ;; Hardware stack levels required when called: 7
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_main
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text2
  1307   002256                     __ptext2:
  1308                           	callstack 0
  1309   002256                     _initialisation_des_ports:
  1310                           	callstack 23
  1311                           
  1312                           ;main.c: 26: MEMCON=0xA0;
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;incstack = 0
  1316   002256  0EA0               	movlw	160
  1317   002258  010F               	movlb	15	; () banked
  1318   00225A  6F26               	movwf	38,b	;volatile
  1319                           
  1320                           ;main.c: 29: ANCON0=0x00;
  1321   00225C  0E00               	movlw	0
  1322   00225E  6F25               	movwf	37,b	;volatile
  1323                           
  1324                           ;main.c: 30: ANCON1=0x00;
  1325   002260  0E00               	movlw	0
  1326   002262  6F24               	movwf	36,b	;volatile
  1327                           
  1328                           ;main.c: 31: ANCON2=0x00;
  1329   002264  0E00               	movlw	0
  1330   002266  6F23               	movwf	35,b	;volatile
  1331                           
  1332                           ; BSR set to: 15
  1333                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1334   002268  8125               	bsf	37,0,b	;volatile
  1335                           
  1336                           ; BSR set to: 15
  1337                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1338   00226A  8325               	bsf	37,1,b	;volatile
  1339                           
  1340                           ; BSR set to: 15
  1341                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1342   00226C  8525               	bsf	37,2,b	;volatile
  1343                           
  1344                           ; BSR set to: 15
  1345                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1346   00226E  8725               	bsf	37,3,b	;volatile
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1350   002270  8524               	bsf	36,2,b	;volatile
  1351                           
  1352                           ; BSR set to: 15
  1353                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1354   002272  8724               	bsf	36,3,b	;volatile
  1355                           
  1356                           ; BSR set to: 15
  1357                           ;main.c: 41: LATCbits.LATC2=1;
  1358   002274  848B               	bsf	139,2,c	;volatile
  1359                           
  1360                           ; BSR set to: 15
  1361                           ;main.c: 42: LATCbits.LATC1=1;
  1362   002276  828B               	bsf	139,1,c	;volatile
  1363                           
  1364                           ; BSR set to: 15
  1365                           ;main.c: 43: LATGbits.LATG0=1;
  1366   002278  808F               	bsf	143,0,c	;volatile
  1367                           
  1368                           ; BSR set to: 15
  1369                           ;main.c: 46: TRISCbits.TRISC2=0;
  1370   00227A  9494               	bcf	148,2,c	;volatile
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;main.c: 47: TRISCbits.TRISC1=0;
  1374   00227C  9294               	bcf	148,1,c	;volatile
  1375                           
  1376                           ; BSR set to: 15
  1377                           ;main.c: 48: TRISGbits.TRISG0=0;
  1378   00227E  9098               	bcf	152,0,c	;volatile
  1379                           
  1380                           ; BSR set to: 15
  1381                           ;main.c: 49: TRISGbits.TRISG3=0;
  1382   002280  9698               	bcf	152,3,c	;volatile
  1383                           
  1384                           ; BSR set to: 15
  1385                           ;main.c: 50: TRISGbits.TRISG4=0;
  1386   002282  9898               	bcf	152,4,c	;volatile
  1387                           
  1388                           ; BSR set to: 15
  1389                           ;main.c: 51: TRISDbits.TRISD2=0;
  1390   002284  9495               	bcf	149,2,c	;volatile
  1391                           
  1392                           ; BSR set to: 15
  1393                           ;main.c: 52: TRISDbits.TRISD3=0;
  1394   002286  9695               	bcf	149,3,c	;volatile
  1395                           
  1396                           ; BSR set to: 15
  1397                           ;main.c: 55: INTCON2bits.RBPU=0;
  1398   002288  9EF1               	bcf	241,7,c	;volatile
  1399                           
  1400                           ; BSR set to: 15
  1401                           ;main.c: 56: PADCFG1bits.REPU=1;
  1402   00228A  8D53               	bsf	83,6,b	;volatile
  1403                           
  1404                           ; BSR set to: 15
  1405   00228C  0012               	return		;funcret
  1406   00228E                     __end_of_initialisation_des_ports:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _Init *****************
  1410 ;; Defined at:
  1411 ;;		line 4 in file "semaphore.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  sem             1  [STACK] unsigned char 
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1  [STACK] void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 7
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;;		_tache1
  1437 ;; This function uses a reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text3
  1441   0023A8                     __ptext3:
  1442                           	callstack 0
  1443   0023A8                     _Init:
  1444                           	callstack 20
  1445                           
  1446                           ;semaphore.c: 6: switch (sem)
  1447                           
  1448                           ; BSR set to: 15
  1449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1450                           ;incstack = 0
  1451   0023A8  D006               	goto	l2846
  1452   0023AA                     l2842:
  1453                           
  1454                           ;semaphore.c: 9: Val_sem_cna=1;
  1455   0023AA  0E01               	movlw	1
  1456   0023AC  6E40               	movwf	_Val_sem_cna^0,c
  1457                           
  1458                           ;semaphore.c: 10: break;
  1459   0023AE  D00B               	goto	l1578
  1460   0023B0                     l2844:
  1461                           
  1462                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1463   0023B0  0E01               	movlw	1
  1464   0023B2  6E3F               	movwf	_Val_sem_rxtx^0,c
  1465                           
  1466                           ;semaphore.c: 13: break;
  1467   0023B4  D008               	goto	l1578
  1468   0023B6                     l2846:
  1469                           
  1470                           ;stkvar	Init@sem @ sp[(0)+-1]
  1471   0023B6  0EFF               	movlw	-1
  1472   0023B8  50E3               	movf	plusw1,w,c
  1473                           
  1474                           ; Switch size 1, requested type "simple"
  1475                           ; Number of cases is 2, Range of values is 1 to 2
  1476                           ; switch strategies available:
  1477                           ; Name         Instructions Cycles
  1478                           ; simple_byte            7     4 (average)
  1479                           ;	Chosen strategy is simple_byte
  1480   0023BA  0A01               	xorlw	1	; case 1
  1481   0023BC  B4D8               	btfsc	status,2,c
  1482   0023BE  D7F5               	goto	l2842
  1483   0023C0  0A03               	xorlw	3	; case 2
  1484   0023C2  B4D8               	btfsc	status,2,c
  1485   0023C4  D7F5               	goto	l2844
  1486   0023C6                     l1578:
  1487                           
  1488                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1489   0023C6  52E5               	movf	postdec1,f,c
  1490   0023C8  0012               	return		;funcret
  1491   0023CA                     __end_of_Init:
  1492                           	callstack 0
  1493                           
  1494 ;; *************** function _fonction_d_interruption *****************
  1495 ;; Defined at:
  1496 ;;		line 17 in file "systeme.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;Total ram usage:       12 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 6
  1517 ;; This function calls:
  1518 ;;		_tache1
  1519 ;;		_tache2
  1520 ;;		_tache3
  1521 ;;		_tache4
  1522 ;;		_tache5
  1523 ;;		_tache6
  1524 ;; This function is called by:
  1525 ;;		Interrupt level 2
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	intcode
  1530   000008                     __pintcode:
  1531                           	callstack 0
  1532   000008                     _fonction_d_interruption:
  1533                           	callstack 23
  1534                           
  1535                           ;incstack = 0
  1536   000008  CFE9 F01D          	movff	fsr0l,??_fonction_d_interruption
  1537   00000C  CFEA F01E          	movff	fsr0h,??_fonction_d_interruption+1
  1538   000010  CFE1 F01F          	movff	fsr1l,??_fonction_d_interruption+2
  1539   000014  CFE2 F020          	movff	fsr1h,??_fonction_d_interruption+3
  1540   000018  CFD9 F021          	movff	fsr2l,??_fonction_d_interruption+4
  1541   00001C  CFDA F022          	movff	fsr2h,??_fonction_d_interruption+5
  1542   000020  CFF3 F023          	movff	prodl,??_fonction_d_interruption+6
  1543   000024  CFF4 F024          	movff	prodh,??_fonction_d_interruption+7
  1544   000028  CFF6 F025          	movff	tblptrl,??_fonction_d_interruption+8
  1545   00002C  CFF7 F026          	movff	tblptrh,??_fonction_d_interruption+9
  1546   000030  CFF8 F027          	movff	tblptru,??_fonction_d_interruption+10
  1547   000034  CFF5 F028          	movff	tablat,??_fonction_d_interruption+11
  1548   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1549                           
  1550                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1551   00003C  CFD8 F061          	movff	status,97	;volatile
  1552   000040  0100               	movlb	0	; () banked
  1553   000042  6F60               	movwf	96,b
  1554                           
  1555                           ; BSR set to: 0
  1556   000044  CFE0 F062          	movff	bsr,98	;volatile
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1560   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1561                           
  1562                           ; BSR set to: 0
  1563   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1564                           
  1565                           ; BSR set to: 0
  1566                           ;systeme.c: 24: if(T0IE && T0IF)
  1567   000050  BAF2               	btfsc	4082,5,c	;volatile
  1568                           
  1569                           ; BSR set to: 0
  1570   000052  A4F2               	btfss	4082,2,c	;volatile
  1571   000054  D143               	goto	i2l5430
  1572                           
  1573                           ; BSR set to: 0
  1574                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1575   000056  0565               	decf	101,w,b
  1576   000058  A4D8               	btfss	status,2,c
  1577   00005A  D004               	goto	i2l5130
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1581   00005C  0E1B               	movlw	27
  1582   00005E  6EFC               	movwf	252,c	;volatile
  1583                           
  1584                           ;systeme.c: 29: DEMARRAGE=0;
  1585   000060  0E00               	movlw	0
  1586   000062  6F65               	movwf	101,b
  1587   000064                     i2l5130:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1591   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1592                           
  1593                           ;systeme.c: 35: FSR0L=0;
  1594   000068  0E00               	movlw	0
  1595   00006A  6EE9               	movwf	233,c	;volatile
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1599   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1603                           
  1604                           ; BSR set to: 0
  1605   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1606                           
  1607                           ; BSR set to: 0
  1608   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1612   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1613                           
  1614                           ; BSR set to: 0
  1615   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1616                           
  1617                           ; BSR set to: 0
  1618   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1619                           
  1620                           ; BSR set to: 0
  1621   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1625   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1626                           
  1627                           ; BSR set to: 0
  1628   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1629                           
  1630                           ; BSR set to: 0
  1631   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1632                           
  1633                           ; BSR set to: 0
  1634   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1638   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1639                           
  1640                           ; BSR set to: 0
  1641   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1645                           
  1646                           ; BSR set to: 0
  1647   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1651   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1652                           
  1653                           ; BSR set to: 0
  1654   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1655                           
  1656                           ;systeme.c: 44: FSR1H=0;
  1657   0000B4  0E00               	movlw	0
  1658   0000B6  6EE2               	movwf	226,c	;volatile
  1659                           
  1660                           ;systeme.c: 45: FSR1L=0;
  1661   0000B8  0E00               	movlw	0
  1662   0000BA  6EE1               	movwf	225,c	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1666   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1679   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1692   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1693                           
  1694                           ; BSR set to: 0
  1695   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1699                           
  1700                           ; BSR set to: 0
  1701   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1705   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1706                           
  1707                           ; BSR set to: 0
  1708   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1709                           
  1710                           ; BSR set to: 0
  1711   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1718   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1719                           
  1720                           ; BSR set to: 0
  1721   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1722                           
  1723                           ; BSR set to: 0
  1724   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1731   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1732                           
  1733                           ; BSR set to: 0
  1734   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1735                           
  1736                           ; BSR set to: 0
  1737   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1744   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1745                           
  1746                           ; BSR set to: 0
  1747   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1757   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1758                           
  1759                           ; BSR set to: 0
  1760   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1764                           
  1765                           ; BSR set to: 0
  1766   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1770   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1774                           
  1775                           ; BSR set to: 0
  1776   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1777                           
  1778                           ; BSR set to: 0
  1779   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1780                           
  1781                           ; BSR set to: 0
  1782                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1783   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1784                           
  1785                           ; BSR set to: 0
  1786   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1787                           
  1788                           ; BSR set to: 0
  1789   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1790                           
  1791                           ; BSR set to: 0
  1792   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1796   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1800                           
  1801                           ; BSR set to: 0
  1802   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1803                           
  1804                           ; BSR set to: 0
  1805   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1809   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1810                           
  1811                           ; BSR set to: 0
  1812   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1813                           
  1814                           ; BSR set to: 0
  1815   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1816                           
  1817                           ; BSR set to: 0
  1818   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1819                           
  1820                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1821   00017C  0E8A               	movlw	138
  1822   00017E  6ED7               	movwf	215,c	;volatile
  1823   000180  0ECF               	movlw	207
  1824   000182  6ED6               	movwf	214,c	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827                           ;systeme.c: 63: T0IF=0;
  1828   000184  94F2               	bcf	4082,2,c	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;systeme.c: 65: Tick_Count++;
  1832   000186  4B71               	infsnz	113,f,b
  1833   000188  2B72               	incf	114,f,b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;systeme.c: 67: pointeur_de_tache++;
  1837   00018A  2B70               	incf	112,f,b
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1841   00018C  0E06               	movlw	6
  1842   00018E  1970               	xorwf	112,w,b
  1843   000190  A4D8               	btfss	status,2,c
  1844   000192  D002               	goto	i2l5274
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;systeme.c: 69: pointeur_de_tache=0;
  1848   000194  0E00               	movlw	0
  1849   000196  6F70               	movwf	112,b
  1850   000198                     i2l5274:
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1854   000198  0E69               	movlw	105
  1855   00019A  2570               	addwf	112,w,b
  1856   00019C  6ED9               	movwf	fsr2l,c
  1857   00019E  6ADA               	clrf	fsr2h,c
  1858   0001A0  0E00               	movlw	0
  1859   0001A2  22DA               	addwfc	fsr2h,f,c
  1860   0001A4  50DF               	movf	indf2,w,c
  1861   0001A6  6F6F               	movwf	111,b
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;systeme.c: 75: FSR1H=0;
  1865   0001A8  0E00               	movlw	0
  1866   0001AA  6EE2               	movwf	226,c	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;systeme.c: 76: FSR1L=0;
  1870   0001AC  0E00               	movlw	0
  1871   0001AE  6EE1               	movwf	225,c	;volatile
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;systeme.c: 77: FSR0H=tache_active;
  1875   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;systeme.c: 78: FSR0L=18;
  1879   0001B4  0E12               	movlw	18
  1880   0001B6  6EE9               	movwf	233,c	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1884   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1885                           
  1886                           ; BSR set to: 0
  1887   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1888                           
  1889                           ; BSR set to: 0
  1890   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1897   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1898                           
  1899                           ; BSR set to: 0
  1900   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1901                           
  1902                           ; BSR set to: 0
  1903   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1904                           
  1905                           ; BSR set to: 0
  1906   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1910   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1911                           
  1912                           ; BSR set to: 0
  1913   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1914                           
  1915                           ; BSR set to: 0
  1916   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1923   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1924                           
  1925                           ; BSR set to: 0
  1926   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1927                           
  1928                           ; BSR set to: 0
  1929   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1930                           
  1931                           ; BSR set to: 0
  1932   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1936   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1937                           
  1938                           ; BSR set to: 0
  1939   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1940                           
  1941                           ; BSR set to: 0
  1942   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1949   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1950                           
  1951                           ; BSR set to: 0
  1952   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1953                           
  1954                           ; BSR set to: 0
  1955   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1956                           
  1957                           ; BSR set to: 0
  1958   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1962   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1963                           
  1964                           ; BSR set to: 0
  1965   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1966                           
  1967                           ; BSR set to: 0
  1968   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1969                           
  1970                           ; BSR set to: 0
  1971   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1975   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1976                           
  1977                           ; BSR set to: 0
  1978   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1988   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1989                           
  1990                           ; BSR set to: 0
  1991   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1992                           
  1993                           ; BSR set to: 0
  1994   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1995                           
  1996                           ; BSR set to: 0
  1997   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1998                           
  1999                           ; BSR set to: 0
  2000                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2001   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2002                           
  2003                           ; BSR set to: 0
  2004   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2005                           
  2006                           ; BSR set to: 0
  2007   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2008                           
  2009                           ; BSR set to: 0
  2010   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2014   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2015                           
  2016                           ; BSR set to: 0
  2017   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2018                           
  2019                           ; BSR set to: 0
  2020   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2021                           
  2022                           ; BSR set to: 0
  2023   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2027   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2028                           
  2029                           ; BSR set to: 0
  2030   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2031                           
  2032                           ; BSR set to: 0
  2033   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2034                           
  2035                           ; BSR set to: 0
  2036   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;systeme.c: 96: FSR0H=tache_active;
  2040   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;systeme.c: 97: FSR0L=0;
  2044   00027C  0E00               	movlw	0
  2045   00027E  6EE9               	movwf	233,c	;volatile
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  2049   000280  CFEE F060          	movff	postinc0,96	;volatile
  2050                           
  2051                           ; BSR set to: 0
  2052   000284  CFEE F061          	movff	postinc0,97	;volatile
  2053                           
  2054                           ; BSR set to: 0
  2055   000288  CFEE F062          	movff	postinc0,98	;volatile
  2056                           
  2057                           ; BSR set to: 0
  2058   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2062   000290  CFEE F063          	movff	postinc0,99	;volatile
  2063                           
  2064                           ; BSR set to: 0
  2065   000294  CFEE F064          	movff	postinc0,100	;volatile
  2066                           
  2067                           ; BSR set to: 0
  2068   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2069                           
  2070                           ; BSR set to: 0
  2071   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2075   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2076                           
  2077                           ; BSR set to: 0
  2078   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2079                           
  2080                           ; BSR set to: 0
  2081   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2082                           
  2083                           ; BSR set to: 0
  2084   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2088   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2089                           
  2090                           ; BSR set to: 0
  2091   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2092                           
  2093                           ; BSR set to: 0
  2094   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2095                           
  2096                           ; BSR set to: 0
  2097   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2101   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2102                           
  2103                           ; BSR set to: 0
  2104   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2108   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2109                           
  2110                           ; BSR set to: 0
  2111   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2112                           
  2113                           ; BSR set to: 0
  2114   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2118   0002D4  5160               	movf	96,w,b
  2119                           
  2120                           ; BSR set to: 0
  2121   0002D6  C061 FFD8          	movff	97,status	;volatile
  2122   0002DA  0010               	retfie		;# 
  2123   0002DC                     i2l5430:
  2124                           
  2125                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2126   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2127   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2128   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2129                           
  2130                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2131   0002E8  0100               	movlb	0	; () banked
  2132   0002EA  5160               	movf	96,w,b
  2133                           
  2134                           ; BSR set to: 0
  2135   0002EC  C061 FFD8          	movff	97,status	;volatile
  2136   0002F0  0010               	retfie		;# 
  2137                           
  2138                           ;systeme.c: 123: tache1();
  2139   0002F2  EC6D  F008         	call	_tache1	;wreg free
  2140                           
  2141                           ;systeme.c: 124: tache2();
  2142   0002F6  EC72  F00B         	call	_tache2	;wreg free
  2143                           
  2144                           ;systeme.c: 125: tache3();
  2145   0002FA  EC5F  F00C         	call	_tache3	;wreg free
  2146                           
  2147                           ;systeme.c: 126: tache4();
  2148   0002FE  ECCE  F00C         	call	_tache4	;wreg free
  2149                           
  2150                           ;systeme.c: 127: tache5();
  2151   000302  ECEC  F00B         	call	_tache5	;wreg free
  2152                           
  2153                           ;systeme.c: 128: tache6();
  2154   000306  ECC9  F010         	call	_tache6	;wreg free
  2155   00030A  C028  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2156   00030E  C027  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2157   000312  C026  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2158   000316  C025  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2159   00031A  C024  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2160   00031E  C023  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2161   000322  C022  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2162   000326  C021  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2163   00032A  C020  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2164   00032E  C01F  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2165   000332  C01E  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2166   000336  C01D  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2167   00033A  0011               	retfie		f
  2168   00033C                     __end_of_fonction_d_interruption:
  2169                           	callstack 0
  2170                           
  2171 ;; *************** function _tache6 *****************
  2172 ;; Defined at:
  2173 ;;		line 3 in file "T6.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;		None
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  n               1    8[COMRAM] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:        1 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 2
  2194 ;; This function calls:
  2195 ;;		_lecture_normale
  2196 ;; This function is called by:
  2197 ;;		_fonction_d_interruption
  2198 ;;		_initialisation_du_systeme
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text5
  2203   002192                     __ptext5:
  2204                           	callstack 0
  2205   002192                     _tache6:
  2206                           	callstack 26
  2207                           
  2208                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2209                           
  2210                           ;incstack = 0
  2211                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2212   002192  0E75               	movlw	117
  2213   002194  6E03               	movwf	lecture_normale@stid_id^0,c
  2214   002196  0E00               	movlw	0
  2215   002198  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2216   00219A  ECF2  F00D         	call	_lecture_normale	;wreg free
  2217   00219E  6E09               	movwf	tache6@n^0,c
  2218                           
  2219                           ;T6.c: 9: if (n > 0)
  2220   0021A0  5009               	movf	tache6@n^0,w,c
  2221   0021A2  B4D8               	btfsc	status,2,c
  2222   0021A4  D015               	goto	i2l5096
  2223                           
  2224                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2225   0021A6  0E04               	movlw	4
  2226   0021A8  1809               	xorwf	tache6@n^0,w,c
  2227   0021AA  A4D8               	btfss	status,2,c
  2228   0021AC  D004               	goto	i2l5088
  2229                           
  2230                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2231   0021AE  C009  F07F         	movff	tache6@n,127
  2232                           
  2233                           ;T6.c: 16: Personne = 2;
  2234   0021B2  0E02               	movlw	2
  2235   0021B4  D007               	goto	L1
  2236   0021B6                     i2l5088:
  2237                           
  2238                           ;T6.c: 18: else if (n == 8)
  2239   0021B6  0E08               	movlw	8
  2240   0021B8  1809               	xorwf	tache6@n^0,w,c
  2241   0021BA  A4D8               	btfss	status,2,c
  2242   0021BC  D005               	goto	i2l5094
  2243                           
  2244                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2245   0021BE  C009  F07F         	movff	tache6@n,127
  2246                           
  2247                           ;T6.c: 21: Personne = 1;
  2248   0021C2  0E01               	movlw	1
  2249   0021C4                     L1:
  2250   0021C4  0100               	movlb	0	; () banked
  2251   0021C6  D008               	goto	L2
  2252   0021C8                     i2l5094:
  2253                           
  2254                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2255   0021C8  0E00               	movlw	0
  2256   0021CA  0100               	movlb	0	; () banked
  2257   0021CC  6F7F               	movwf	127,b
  2258   0021CE  D7E1               	goto	__ptext5
  2259   0021D0                     i2l5096:
  2260                           
  2261                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2262   0021D0  0E00               	movlw	0
  2263   0021D2  0100               	movlb	0	; () banked
  2264   0021D4  6F7F               	movwf	127,b
  2265                           
  2266                           ;T6.c: 33: Personne = 0;
  2267   0021D6  0E00               	movlw	0
  2268   0021D8                     L2:
  2269   0021D8  6F82               	movwf	130,b
  2270   0021DA  D7DB               	goto	__ptext5
  2271   0021DC                     __end_of_tache6:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _lecture_normale *****************
  2275 ;; Defined at:
  2276 ;;		line 5 in file "stid.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2279 ;;		 -> badge(10), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  octet           1    7[COMRAM] unsigned char 
  2282 ;;  n_bit           1    6[COMRAM] unsigned char 
  2283 ;;  n_octet         1    5[COMRAM] unsigned char 
  2284 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:        6 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 1
  2301 ;; This function calls:
  2302 ;;		_stid_delai_us
  2303 ;; This function is called by:
  2304 ;;		_tache6
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text6
  2309   001BE4                     __ptext6:
  2310                           	callstack 0
  2311   001BE4                     _lecture_normale:
  2312                           	callstack 26
  2313                           
  2314                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;incstack = 0
  2318   001BE4  8295               	bsf	149,1,c	;volatile
  2319                           
  2320                           ;stid.c: 10: LATDbits.LATD3=0;
  2321   001BE6  968C               	bcf	140,3,c	;volatile
  2322                           
  2323                           ;stid.c: 11: LATDbits.LATD2=0;
  2324   001BE8  948C               	bcf	140,2,c	;volatile
  2325                           
  2326                           ;stid.c: 12: stid_delai_us(100);
  2327   001BEA  0E00               	movlw	0
  2328   001BEC  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2329   001BEE  0E64               	movlw	100
  2330   001BF0  6E01               	movwf	stid_delai_us@isdu^0,c
  2331   001BF2  EC4B  F012         	call	_stid_delai_us	;wreg free
  2332                           
  2333                           ;stid.c: 13: LATDbits.LATD3=1;
  2334   001BF6  868C               	bsf	140,3,c	;volatile
  2335                           
  2336                           ;stid.c: 14: temps_attente=0;
  2337   001BF8  0E00               	movlw	0
  2338   001BFA  6E05               	movwf	lecture_normale@temps_attente^0,c
  2339   001BFC                     i2l4616:
  2340                           
  2341                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2342   001BFC  0E03               	movlw	3
  2343   001BFE  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2344   001C00  0EE8               	movlw	232
  2345   001C02  6E01               	movwf	stid_delai_us@isdu^0,c
  2346   001C04  EC4B  F012         	call	_stid_delai_us	;wreg free
  2347                           
  2348                           ;stid.c: 18: temps_attente++;
  2349   001C08  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2350                           
  2351                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2352   001C0A  A083               	btfss	131,0,c	;volatile
  2353   001C0C  D002               	goto	i2l4624
  2354                           
  2355                           ;stid.c: 20: temps_attente=65;
  2356   001C0E  0E41               	movlw	65
  2357   001C10  6E05               	movwf	lecture_normale@temps_attente^0,c
  2358   001C12                     i2l4624:
  2359                           
  2360                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2361   001C12  0E40               	movlw	64
  2362   001C14  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2363   001C16  D7F2               	goto	i2l4616
  2364                           
  2365                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2366   001C18  A083               	btfss	131,0,c	;volatile
  2367   001C1A  D033               	goto	i2l4660
  2368                           
  2369                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2370   001C1C  0E00               	movlw	0
  2371   001C1E  6E06               	movwf	lecture_normale@n_octet^0,c
  2372   001C20                     i2l1697:
  2373                           
  2374                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2375   001C20  0E00               	movlw	0
  2376   001C22  6E08               	movwf	lecture_normale@octet^0,c
  2377                           
  2378                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2379   001C24  0E00               	movlw	0
  2380   001C26  6E07               	movwf	lecture_normale@n_bit^0,c
  2381   001C28                     i2l1698:
  2382                           
  2383                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2384   001C28  A283               	btfss	131,1,c	;volatile
  2385   001C2A  D003               	goto	i2l1700
  2386                           
  2387                           ;stid.c: 34: octet=(octet|0x01);
  2388   001C2C  5008               	movf	lecture_normale@octet^0,w,c
  2389   001C2E  0901               	iorlw	1
  2390   001C30  6E08               	movwf	lecture_normale@octet^0,c
  2391   001C32                     i2l1700:
  2392                           
  2393                           ;stid.c: 35: octet=octet<<1;
  2394   001C32  5008               	movf	lecture_normale@octet^0,w,c
  2395   001C34  2408               	addwf	lecture_normale@octet^0,w,c
  2396   001C36  6E08               	movwf	lecture_normale@octet^0,c
  2397                           
  2398                           ;stid.c: 36: stid_delai_us(100);
  2399   001C38  0E00               	movlw	0
  2400   001C3A  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2401   001C3C  0E64               	movlw	100
  2402   001C3E  6E01               	movwf	stid_delai_us@isdu^0,c
  2403   001C40  EC4B  F012         	call	_stid_delai_us	;wreg free
  2404                           
  2405                           ;stid.c: 37: LATDbits.LATD2=1;
  2406   001C44  848C               	bsf	140,2,c	;volatile
  2407                           
  2408                           ;stid.c: 38: stid_delai_us(500);
  2409   001C46  0E01               	movlw	1
  2410   001C48  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2411   001C4A  0EF4               	movlw	244
  2412   001C4C  6E01               	movwf	stid_delai_us@isdu^0,c
  2413   001C4E  EC4B  F012         	call	_stid_delai_us	;wreg free
  2414                           
  2415                           ;stid.c: 39: LATDbits.LATD2=0;
  2416   001C52  948C               	bcf	140,2,c	;volatile
  2417                           
  2418                           ;stid.c: 40: stid_delai_us(400);
  2419   001C54  0E01               	movlw	1
  2420   001C56  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2421   001C58  0E90               	movlw	144
  2422   001C5A  6E01               	movwf	stid_delai_us@isdu^0,c
  2423   001C5C  EC4B  F012         	call	_stid_delai_us	;wreg free
  2424   001C60  2A07               	incf	lecture_normale@n_bit^0,f,c
  2425   001C62  0E07               	movlw	7
  2426   001C64  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2427   001C66  D7E0               	goto	i2l1698
  2428                           
  2429                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2430   001C68  5006               	movf	lecture_normale@n_octet^0,w,c
  2431   001C6A  2403               	addwf	lecture_normale@stid_id^0,w,c
  2432   001C6C  6ED9               	movwf	fsr2l,c
  2433   001C6E  0E00               	movlw	0
  2434   001C70  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2435   001C72  6EDA               	movwf	fsr2h,c
  2436   001C74  C008  FFDF         	movff	lecture_normale@octet,indf2
  2437                           
  2438                           ;stid.c: 43: n_octet++;
  2439   001C78  2A06               	incf	lecture_normale@n_octet^0,f,c
  2440                           
  2441                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2442   001C7A  B083               	btfsc	131,0,c	;volatile
  2443   001C7C  D7D1               	goto	i2l1697
  2444                           
  2445                           ;stid.c: 47: return n_octet;
  2446   001C7E  5006               	movf	lecture_normale@n_octet^0,w,c
  2447   001C80  0012               	return	
  2448   001C82                     i2l4660:
  2449                           
  2450                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2451   001C82  0E00               	movlw	0
  2452   001C84  0012               	return		;funcret
  2453   001C86                     __end_of_lecture_normale:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _stid_delai_us *****************
  2457 ;; Defined at:
  2458 ;;		line 56 in file "stid.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  isdu            2    0[COMRAM] unsigned int 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_lecture_normale
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text7
  2486   002496                     __ptext7:
  2487                           	callstack 0
  2488   002496                     _stid_delai_us:
  2489                           	callstack 26
  2490                           
  2491                           ;stid.c: 58: while(isdu>0)
  2492                           
  2493                           ;incstack = 0
  2494   002496  D006               	goto	i2l4402
  2495   002498                     i2l1707:
  2496                           
  2497                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2498   002498  F000               	nop	
  2499   00249A  F000               	nop	
  2500   00249C  F000               	nop	
  2501                           
  2502                           ;stid.c: 61: isdu--;
  2503   00249E  0601               	decf	stid_delai_us@isdu^0,f,c
  2504   0024A0  A0D8               	btfss	status,0,c
  2505   0024A2  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2506   0024A4                     i2l4402:
  2507   0024A4  5001               	movf	stid_delai_us@isdu^0,w,c
  2508   0024A6  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2509   0024A8  B4D8               	btfsc	status,2,c
  2510   0024AA  0012               	return	
  2511   0024AC  D7F5               	goto	i2l1707
  2512   0024AE                     __end_of_stid_delai_us:
  2513                           	callstack 0
  2514                           
  2515 ;; *************** function _tache5 *****************
  2516 ;; Defined at:
  2517 ;;		line 3 in file "T5.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;		None
  2520 ;; Auto vars:     Size  Location     Type
  2521 ;;  a               2    0[COMRAM] unsigned int 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  1    wreg      void 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;Total ram usage:        2 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_fonction_d_interruption
  2541 ;;		_initialisation_du_systeme
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545                           	psect	text8
  2546   0017D8                     __ptext8:
  2547                           	callstack 0
  2548   0017D8                     _tache5:
  2549                           	callstack 28
  2550                           
  2551                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2552                           
  2553                           ;incstack = 0
  2554                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2555   0017D8  A89E               	btfss	158,4,c	;volatile
  2556   0017DA  D7FE               	goto	__ptext8
  2557   0017DC  0E74               	movlw	116
  2558   0017DE  6EAD               	movwf	173,c	;volatile
  2559   0017E0                     i2l980:
  2560   0017E0  A2AC               	btfss	172,1,c	;volatile
  2561   0017E2  D7FE               	goto	i2l980
  2562   0017E4                     i2u166_40:
  2563   0017E4  A89E               	btfss	158,4,c	;volatile
  2564   0017E6  D7FE               	goto	i2u166_40
  2565   0017E8  0E61               	movlw	97
  2566   0017EA  6EAD               	movwf	173,c	;volatile
  2567   0017EC                     i2l986:
  2568   0017EC  A2AC               	btfss	172,1,c	;volatile
  2569   0017EE  D7FE               	goto	i2l986
  2570   0017F0                     i2u168_40:
  2571   0017F0  A89E               	btfss	158,4,c	;volatile
  2572   0017F2  D7FE               	goto	i2u168_40
  2573   0017F4  0E63               	movlw	99
  2574   0017F6  6EAD               	movwf	173,c	;volatile
  2575   0017F8                     i2l992:
  2576   0017F8  A2AC               	btfss	172,1,c	;volatile
  2577   0017FA  D7FE               	goto	i2l992
  2578   0017FC                     i2u170_40:
  2579   0017FC  A89E               	btfss	158,4,c	;volatile
  2580   0017FE  D7FE               	goto	i2u170_40
  2581   001800  0E68               	movlw	104
  2582   001802  6EAD               	movwf	173,c	;volatile
  2583   001804                     i2l998:
  2584   001804  A2AC               	btfss	172,1,c	;volatile
  2585   001806  D7FE               	goto	i2l998
  2586   001808                     i2u172_40:
  2587   001808  A89E               	btfss	158,4,c	;volatile
  2588   00180A  D7FE               	goto	i2u172_40
  2589   00180C  0E65               	movlw	101
  2590   00180E  6EAD               	movwf	173,c	;volatile
  2591   001810                     i2l1004:
  2592   001810  A2AC               	btfss	172,1,c	;volatile
  2593   001812  D7FE               	goto	i2l1004
  2594   001814                     i2u174_40:
  2595   001814  A89E               	btfss	158,4,c	;volatile
  2596   001816  D7FE               	goto	i2u174_40
  2597   001818  0E35               	movlw	53
  2598   00181A  6EAD               	movwf	173,c	;volatile
  2599   00181C                     i2l1010:
  2600   00181C  A2AC               	btfss	172,1,c	;volatile
  2601   00181E  D7FE               	goto	i2l1010
  2602   001820                     i2u176_40:
  2603   001820  A89E               	btfss	158,4,c	;volatile
  2604   001822  D7FE               	goto	i2u176_40
  2605   001824  0E5F               	movlw	95
  2606   001826  6EAD               	movwf	173,c	;volatile
  2607   001828                     i2l1016:
  2608   001828  A2AC               	btfss	172,1,c	;volatile
  2609   00182A  D7FE               	goto	i2l1016
  2610   00182C                     i2u178_40:
  2611   00182C  A89E               	btfss	158,4,c	;volatile
  2612   00182E  D7FE               	goto	i2u178_40
  2613   001830  0E65               	movlw	101
  2614   001832  6EAD               	movwf	173,c	;volatile
  2615   001834                     i2l1022:
  2616   001834  A2AC               	btfss	172,1,c	;volatile
  2617   001836  D7FE               	goto	i2l1022
  2618   001838                     i2u180_40:
  2619   001838  A89E               	btfss	158,4,c	;volatile
  2620   00183A  D7FE               	goto	i2u180_40
  2621   00183C  0E6E               	movlw	110
  2622   00183E  6EAD               	movwf	173,c	;volatile
  2623   001840                     i2l1028:
  2624   001840  A2AC               	btfss	172,1,c	;volatile
  2625   001842  D7FE               	goto	i2l1028
  2626   001844                     i2u182_40:
  2627   001844  A89E               	btfss	158,4,c	;volatile
  2628   001846  D7FE               	goto	i2u182_40
  2629   001848  0E5F               	movlw	95
  2630   00184A  6EAD               	movwf	173,c	;volatile
  2631   00184C                     i2l1034:
  2632   00184C  A2AC               	btfss	172,1,c	;volatile
  2633   00184E  D7FE               	goto	i2l1034
  2634   001850                     i2u184_40:
  2635   001850  A89E               	btfss	158,4,c	;volatile
  2636   001852  D7FE               	goto	i2u184_40
  2637   001854  0E63               	movlw	99
  2638   001856  6EAD               	movwf	173,c	;volatile
  2639   001858                     i2l1040:
  2640   001858  A2AC               	btfss	172,1,c	;volatile
  2641   00185A  D7FE               	goto	i2l1040
  2642   00185C                     i2u186_40:
  2643   00185C  A89E               	btfss	158,4,c	;volatile
  2644   00185E  D7FE               	goto	i2u186_40
  2645   001860  0E6F               	movlw	111
  2646   001862  6EAD               	movwf	173,c	;volatile
  2647   001864                     i2l1046:
  2648   001864  A2AC               	btfss	172,1,c	;volatile
  2649   001866  D7FE               	goto	i2l1046
  2650   001868                     i2u188_40:
  2651   001868  A89E               	btfss	158,4,c	;volatile
  2652   00186A  D7FE               	goto	i2u188_40
  2653   00186C  0E75               	movlw	117
  2654   00186E  6EAD               	movwf	173,c	;volatile
  2655   001870                     i2l1052:
  2656   001870  A2AC               	btfss	172,1,c	;volatile
  2657   001872  D7FE               	goto	i2l1052
  2658   001874                     i2u190_40:
  2659   001874  A89E               	btfss	158,4,c	;volatile
  2660   001876  D7FE               	goto	i2u190_40
  2661   001878  0E72               	movlw	114
  2662   00187A  6EAD               	movwf	173,c	;volatile
  2663   00187C                     i2l1058:
  2664   00187C  A2AC               	btfss	172,1,c	;volatile
  2665   00187E  D7FE               	goto	i2l1058
  2666   001880                     i2u192_40:
  2667   001880  A89E               	btfss	158,4,c	;volatile
  2668   001882  D7FE               	goto	i2u192_40
  2669   001884  0E73               	movlw	115
  2670   001886  6EAD               	movwf	173,c	;volatile
  2671   001888                     i2l1064:
  2672   001888  A2AC               	btfss	172,1,c	;volatile
  2673   00188A  D7FE               	goto	i2l1064
  2674                           
  2675                           ;T5.c: 28: for (a=0;a<65000;a++)
  2676   00188C  0E00               	movlw	0
  2677   00188E  6E02               	movwf	(tache5@a+1)^0,c
  2678   001890  0E00               	movlw	0
  2679   001892  6E01               	movwf	tache5@a^0,c
  2680   001894                     i2l3732:
  2681                           
  2682                           ;T5.c: 29: ;
  2683   001894  4A01               	infsnz	tache5@a^0,f,c
  2684   001896  2A02               	incf	(tache5@a+1)^0,f,c
  2685   001898  0EE8               	movlw	232
  2686   00189A  5C01               	subwf	tache5@a^0,w,c
  2687   00189C  0EFD               	movlw	253
  2688   00189E  5802               	subwfb	(tache5@a+1)^0,w,c
  2689   0018A0  A0D8               	btfss	status,0,c
  2690   0018A2  D7F8               	goto	i2l3732
  2691                           
  2692                           ;T5.c: 30: for (a=0;a<65000;a++)
  2693   0018A4  0E00               	movlw	0
  2694   0018A6  6E02               	movwf	(tache5@a+1)^0,c
  2695   0018A8  0E00               	movlw	0
  2696   0018AA  6E01               	movwf	tache5@a^0,c
  2697   0018AC                     i2l3742:
  2698                           
  2699                           ;T5.c: 31: ;
  2700   0018AC  4A01               	infsnz	tache5@a^0,f,c
  2701   0018AE  2A02               	incf	(tache5@a+1)^0,f,c
  2702   0018B0  0EE8               	movlw	232
  2703   0018B2  5C01               	subwf	tache5@a^0,w,c
  2704   0018B4  0EFD               	movlw	253
  2705   0018B6  5802               	subwfb	(tache5@a+1)^0,w,c
  2706   0018B8  B0D8               	btfsc	status,0,c
  2707   0018BA  D78E               	goto	__ptext8
  2708   0018BC  D7F7               	goto	i2l3742
  2709   0018BE                     __end_of_tache5:
  2710                           	callstack 0
  2711                           
  2712 ;; *************** function _tache4 *****************
  2713 ;; Defined at:
  2714 ;;		line 3 in file "T4.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;		None
  2717 ;; Auto vars:     Size  Location     Type
  2718 ;;  a               2    0[COMRAM] unsigned int 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  1    wreg      void 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;Total ram usage:        2 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_fonction_d_interruption
  2738 ;;		_initialisation_du_systeme
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text9
  2743   00199C                     __ptext9:
  2744                           	callstack 0
  2745   00199C                     _tache4:
  2746                           	callstack 28
  2747                           
  2748                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2749                           
  2750                           ;incstack = 0
  2751                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2752   00199C  A89E               	btfss	158,4,c	;volatile
  2753   00199E  D7FE               	goto	__ptext9
  2754   0019A0  0E54               	movlw	84
  2755   0019A2  6EAD               	movwf	173,c	;volatile
  2756   0019A4                     i2l796:
  2757   0019A4  A2AC               	btfss	172,1,c	;volatile
  2758   0019A6  D7FE               	goto	i2l796
  2759   0019A8                     i2u135_40:
  2760   0019A8  A89E               	btfss	158,4,c	;volatile
  2761   0019AA  D7FE               	goto	i2u135_40
  2762   0019AC  0E41               	movlw	65
  2763   0019AE  6EAD               	movwf	173,c	;volatile
  2764   0019B0                     i2l802:
  2765   0019B0  A2AC               	btfss	172,1,c	;volatile
  2766   0019B2  D7FE               	goto	i2l802
  2767   0019B4                     i2u137_40:
  2768   0019B4  A89E               	btfss	158,4,c	;volatile
  2769   0019B6  D7FE               	goto	i2u137_40
  2770   0019B8  0E43               	movlw	67
  2771   0019BA  6EAD               	movwf	173,c	;volatile
  2772   0019BC                     i2l808:
  2773   0019BC  A2AC               	btfss	172,1,c	;volatile
  2774   0019BE  D7FE               	goto	i2l808
  2775   0019C0                     i2u139_40:
  2776   0019C0  A89E               	btfss	158,4,c	;volatile
  2777   0019C2  D7FE               	goto	i2u139_40
  2778   0019C4  0E48               	movlw	72
  2779   0019C6  6EAD               	movwf	173,c	;volatile
  2780   0019C8                     i2l814:
  2781   0019C8  A2AC               	btfss	172,1,c	;volatile
  2782   0019CA  D7FE               	goto	i2l814
  2783   0019CC                     i2u141_40:
  2784   0019CC  A89E               	btfss	158,4,c	;volatile
  2785   0019CE  D7FE               	goto	i2u141_40
  2786   0019D0  0E45               	movlw	69
  2787   0019D2  6EAD               	movwf	173,c	;volatile
  2788   0019D4                     i2l820:
  2789   0019D4  A2AC               	btfss	172,1,c	;volatile
  2790   0019D6  D7FE               	goto	i2l820
  2791   0019D8                     i2u143_40:
  2792   0019D8  A89E               	btfss	158,4,c	;volatile
  2793   0019DA  D7FE               	goto	i2u143_40
  2794   0019DC  0E34               	movlw	52
  2795   0019DE  6EAD               	movwf	173,c	;volatile
  2796   0019E0                     i2l826:
  2797   0019E0  A2AC               	btfss	172,1,c	;volatile
  2798   0019E2  D7FE               	goto	i2l826
  2799   0019E4                     i2u145_40:
  2800   0019E4  A89E               	btfss	158,4,c	;volatile
  2801   0019E6  D7FE               	goto	i2u145_40
  2802   0019E8  0E5F               	movlw	95
  2803   0019EA  6EAD               	movwf	173,c	;volatile
  2804   0019EC                     i2l832:
  2805   0019EC  A2AC               	btfss	172,1,c	;volatile
  2806   0019EE  D7FE               	goto	i2l832
  2807   0019F0                     i2u147_40:
  2808   0019F0  A89E               	btfss	158,4,c	;volatile
  2809   0019F2  D7FE               	goto	i2u147_40
  2810   0019F4  0E45               	movlw	69
  2811   0019F6  6EAD               	movwf	173,c	;volatile
  2812   0019F8                     i2l838:
  2813   0019F8  A2AC               	btfss	172,1,c	;volatile
  2814   0019FA  D7FE               	goto	i2l838
  2815   0019FC                     i2u149_40:
  2816   0019FC  A89E               	btfss	158,4,c	;volatile
  2817   0019FE  D7FE               	goto	i2u149_40
  2818   001A00  0E4E               	movlw	78
  2819   001A02  6EAD               	movwf	173,c	;volatile
  2820   001A04                     i2l844:
  2821   001A04  A2AC               	btfss	172,1,c	;volatile
  2822   001A06  D7FE               	goto	i2l844
  2823   001A08                     i2u151_40:
  2824   001A08  A89E               	btfss	158,4,c	;volatile
  2825   001A0A  D7FE               	goto	i2u151_40
  2826   001A0C  0E5F               	movlw	95
  2827   001A0E  6EAD               	movwf	173,c	;volatile
  2828   001A10                     i2l850:
  2829   001A10  A2AC               	btfss	172,1,c	;volatile
  2830   001A12  D7FE               	goto	i2l850
  2831   001A14                     i2u153_40:
  2832   001A14  A89E               	btfss	158,4,c	;volatile
  2833   001A16  D7FE               	goto	i2u153_40
  2834   001A18  0E43               	movlw	67
  2835   001A1A  6EAD               	movwf	173,c	;volatile
  2836   001A1C                     i2l856:
  2837   001A1C  A2AC               	btfss	172,1,c	;volatile
  2838   001A1E  D7FE               	goto	i2l856
  2839   001A20                     i2u155_40:
  2840   001A20  A89E               	btfss	158,4,c	;volatile
  2841   001A22  D7FE               	goto	i2u155_40
  2842   001A24  0E4F               	movlw	79
  2843   001A26  6EAD               	movwf	173,c	;volatile
  2844   001A28                     i2l862:
  2845   001A28  A2AC               	btfss	172,1,c	;volatile
  2846   001A2A  D7FE               	goto	i2l862
  2847   001A2C                     i2u157_40:
  2848   001A2C  A89E               	btfss	158,4,c	;volatile
  2849   001A2E  D7FE               	goto	i2u157_40
  2850   001A30  0E55               	movlw	85
  2851   001A32  6EAD               	movwf	173,c	;volatile
  2852   001A34                     i2l868:
  2853   001A34  A2AC               	btfss	172,1,c	;volatile
  2854   001A36  D7FE               	goto	i2l868
  2855   001A38                     i2u159_40:
  2856   001A38  A89E               	btfss	158,4,c	;volatile
  2857   001A3A  D7FE               	goto	i2u159_40
  2858   001A3C  0E52               	movlw	82
  2859   001A3E  6EAD               	movwf	173,c	;volatile
  2860   001A40                     i2l874:
  2861   001A40  A2AC               	btfss	172,1,c	;volatile
  2862   001A42  D7FE               	goto	i2l874
  2863   001A44                     i2u161_40:
  2864   001A44  A89E               	btfss	158,4,c	;volatile
  2865   001A46  D7FE               	goto	i2u161_40
  2866   001A48  0E53               	movlw	83
  2867   001A4A  6EAD               	movwf	173,c	;volatile
  2868   001A4C                     i2l880:
  2869   001A4C  A2AC               	btfss	172,1,c	;volatile
  2870   001A4E  D7FE               	goto	i2l880
  2871                           
  2872                           ;T4.c: 28: for (a=0;a<65000;a++)
  2873   001A50  0E00               	movlw	0
  2874   001A52  6E02               	movwf	(tache4@a+1)^0,c
  2875   001A54  0E00               	movlw	0
  2876   001A56  6E01               	movwf	tache4@a^0,c
  2877   001A58                     i2l3692:
  2878                           
  2879                           ;T4.c: 29: ;
  2880   001A58  4A01               	infsnz	tache4@a^0,f,c
  2881   001A5A  2A02               	incf	(tache4@a+1)^0,f,c
  2882   001A5C  0EE8               	movlw	232
  2883   001A5E  5C01               	subwf	tache4@a^0,w,c
  2884   001A60  0EFD               	movlw	253
  2885   001A62  5802               	subwfb	(tache4@a+1)^0,w,c
  2886   001A64  B0D8               	btfsc	status,0,c
  2887   001A66  D79A               	goto	__ptext9
  2888   001A68  D7F7               	goto	i2l3692
  2889   001A6A                     __end_of_tache4:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function _tache3 *****************
  2893 ;; Defined at:
  2894 ;;		line 3 in file "T3.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, status,2, status,0
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;Total ram usage:        0 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_fonction_d_interruption
  2918 ;;		_initialisation_du_systeme
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text10
  2923   0018BE                     __ptext10:
  2924                           	callstack 0
  2925   0018BE                     _tache3:
  2926                           	callstack 28
  2927                           
  2928                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2929                           
  2930                           ;incstack = 0
  2931                           ;T3.c: 5: while(1)
  2932   0018BE  0100               	movlb	0	; () banked
  2933   0018C0  0566               	decf	102,w,b
  2934   0018C2  A4D8               	btfss	status,2,c
  2935   0018C4  D014               	goto	i2l3592
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2939   0018C6  0ECA               	movlw	202
  2940   0018C8  6567               	cpfsgt	103,b
  2941   0018CA  D011               	goto	i2l3592
  2942                           
  2943                           ; BSR set to: 0
  2944   0018CC  0ED1               	movlw	209
  2945   0018CE  6167               	cpfslt	103,b
  2946   0018D0  D00E               	goto	i2l3592
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2950   0018D2  0E70               	movlw	112
  2951   0018D4  6568               	cpfsgt	104,b
  2952   0018D6  D004               	goto	i2l3586
  2953                           
  2954                           ; BSR set to: 0
  2955   0018D8  0E79               	movlw	121
  2956   0018DA  6168               	cpfslt	104,b
  2957   0018DC  D001               	goto	i2l3586
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2961   0018DE  848B               	bsf	139,2,c	;volatile
  2962   0018E0                     i2l3586:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2966   0018E0  0E78               	movlw	120
  2967   0018E2  6568               	cpfsgt	104,b
  2968   0018E4  D004               	goto	i2l3592
  2969                           
  2970                           ; BSR set to: 0
  2971   0018E6  0E7F               	movlw	127
  2972   0018E8  6168               	cpfslt	104,b
  2973   0018EA  D001               	goto	i2l3592
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2977   0018EC  948B               	bcf	139,2,c	;volatile
  2978   0018EE                     i2l3592:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2982   0018EE  0566               	decf	102,w,b
  2983   0018F0  A4D8               	btfss	status,2,c
  2984   0018F2  D014               	goto	i2l3610
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2988   0018F4  0ED6               	movlw	214
  2989   0018F6  6567               	cpfsgt	103,b
  2990   0018F8  D011               	goto	i2l3610
  2991                           
  2992                           ; BSR set to: 0
  2993   0018FA  0EDD               	movlw	221
  2994   0018FC  6167               	cpfslt	103,b
  2995   0018FE  D00E               	goto	i2l3610
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2999   001900  0E70               	movlw	112
  3000   001902  6568               	cpfsgt	104,b
  3001   001904  D004               	goto	i2l3604
  3002                           
  3003                           ; BSR set to: 0
  3004   001906  0E79               	movlw	121
  3005   001908  6168               	cpfslt	104,b
  3006   00190A  D001               	goto	i2l3604
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  3010   00190C  828B               	bsf	139,1,c	;volatile
  3011   00190E                     i2l3604:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  3015   00190E  0E78               	movlw	120
  3016   001910  6568               	cpfsgt	104,b
  3017   001912  D004               	goto	i2l3610
  3018                           
  3019                           ; BSR set to: 0
  3020   001914  0E7F               	movlw	127
  3021   001916  6168               	cpfslt	104,b
  3022   001918  D001               	goto	i2l3610
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  3026   00191A  928B               	bcf	139,1,c	;volatile
  3027   00191C                     i2l3610:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  3031   00191C  0566               	decf	102,w,b
  3032   00191E  A4D8               	btfss	status,2,c
  3033   001920  D014               	goto	i2l3628
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  3037   001922  0EE2               	movlw	226
  3038   001924  6567               	cpfsgt	103,b
  3039   001926  D011               	goto	i2l3628
  3040                           
  3041                           ; BSR set to: 0
  3042   001928  0EE9               	movlw	233
  3043   00192A  6167               	cpfslt	103,b
  3044   00192C  D00E               	goto	i2l3628
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  3048   00192E  0E70               	movlw	112
  3049   001930  6568               	cpfsgt	104,b
  3050   001932  D004               	goto	i2l3622
  3051                           
  3052                           ; BSR set to: 0
  3053   001934  0E79               	movlw	121
  3054   001936  6168               	cpfslt	104,b
  3055   001938  D001               	goto	i2l3622
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  3059   00193A  808F               	bsf	143,0,c	;volatile
  3060   00193C                     i2l3622:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  3064   00193C  0E78               	movlw	120
  3065   00193E  6568               	cpfsgt	104,b
  3066   001940  D004               	goto	i2l3628
  3067                           
  3068                           ; BSR set to: 0
  3069   001942  0E7F               	movlw	127
  3070   001944  6168               	cpfslt	104,b
  3071   001946  D001               	goto	i2l3628
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  3075   001948  908F               	bcf	143,0,c	;volatile
  3076   00194A                     i2l3628:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  3080   00194A  0566               	decf	102,w,b
  3081   00194C  A4D8               	btfss	status,2,c
  3082   00194E  D011               	goto	i2l3642
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  3086   001950  0EB3               	movlw	179
  3087   001952  6567               	cpfsgt	103,b
  3088   001954  D00E               	goto	i2l3642
  3089                           
  3090                           ; BSR set to: 0
  3091   001956  0EE6               	movlw	230
  3092   001958  6167               	cpfslt	103,b
  3093   00195A  D00B               	goto	i2l3642
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  3097   00195C  0E13               	movlw	19
  3098   00195E  6568               	cpfsgt	104,b
  3099   001960  D008               	goto	i2l3642
  3100                           
  3101                           ; BSR set to: 0
  3102   001962  0E3C               	movlw	60
  3103   001964  6168               	cpfslt	104,b
  3104   001966  D005               	goto	i2l3642
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3108   001968  948B               	bcf	139,2,c	;volatile
  3109   00196A  828B               	bsf	139,1,c	;volatile
  3110   00196C  808F               	bsf	143,0,c	;volatile
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;T3.c: 62: TEST = 1;
  3114   00196E  0E01               	movlw	1
  3115   001970  6F81               	movwf	129,b
  3116   001972                     i2l3642:
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3120   001972  0566               	decf	102,w,b
  3121   001974  A4D8               	btfss	status,2,c
  3122   001976  D7A3               	goto	__ptext10
  3123                           
  3124                           ; BSR set to: 0
  3125                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3126   001978  0E77               	movlw	119
  3127   00197A  6567               	cpfsgt	103,b
  3128   00197C  D7A0               	goto	__ptext10
  3129                           
  3130                           ; BSR set to: 0
  3131   00197E  0EAA               	movlw	170
  3132   001980  6167               	cpfslt	103,b
  3133   001982  D79D               	goto	__ptext10
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3137   001984  0E13               	movlw	19
  3138   001986  6568               	cpfsgt	104,b
  3139   001988  D79A               	goto	__ptext10
  3140                           
  3141                           ; BSR set to: 0
  3142   00198A  0E3C               	movlw	60
  3143   00198C  6168               	cpfslt	104,b
  3144   00198E  D797               	goto	__ptext10
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3148   001990  948B               	bcf	139,2,c	;volatile
  3149   001992  928B               	bcf	139,1,c	;volatile
  3150   001994  908F               	bcf	143,0,c	;volatile
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;T3.c: 74: TEST = 0;
  3154   001996  0E00               	movlw	0
  3155   001998  6F81               	movwf	129,b
  3156                           
  3157                           ; BSR set to: 0
  3158   00199A  D791               	goto	__ptext10
  3159   00199C                     __end_of_tache3:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _tache2 *****************
  3163 ;; Defined at:
  3164 ;;		line 3 in file "T2.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  iy              2   11[COMRAM] unsigned int 
  3169 ;;  ix              2    9[COMRAM] unsigned int 
  3170 ;;  ly              1   16[COMRAM] unsigned char 
  3171 ;;  hy              1   15[COMRAM] unsigned char 
  3172 ;;  lx              1   14[COMRAM] unsigned char 
  3173 ;;  hx              1   13[COMRAM] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;Total ram usage:       10 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 1
  3190 ;; This function calls:
  3191 ;;		___lwdiv
  3192 ;;		_tp_delai
  3193 ;; This function is called by:
  3194 ;;		_fonction_d_interruption
  3195 ;;		_initialisation_du_systeme
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text11
  3200   0016E4                     __ptext11:
  3201                           	callstack 0
  3202   0016E4                     _tache2:
  3203                           	callstack 27
  3204                           
  3205                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;incstack = 0
  3209   0016E4  0E00               	movlw	0
  3210   0016E6  0100               	movlb	0	; () banked
  3211   0016E8  6F66               	movwf	102,b
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3215   0016EA  868F               	bsf	143,3,c	;volatile
  3216                           
  3217                           ; BSR set to: 0
  3218                           ;T2.c: 13: LATGbits.LATG4=0;
  3219   0016EC  988F               	bcf	143,4,c	;volatile
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;T2.c: 14: tp_delai(3000);
  3223   0016EE  0E0B               	movlw	11
  3224   0016F0  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3225   0016F2  0EB8               	movlw	184
  3226   0016F4  6E01               	movwf	tp_delai@itpd^0,c
  3227   0016F6  EC57  F012         	call	_tp_delai	;wreg free
  3228                           
  3229                           ;T2.c: 18: ADCON2=0x16;
  3230   0016FA  0E16               	movlw	22
  3231   0016FC  6EC0               	movwf	192,c	;volatile
  3232                           
  3233                           ;T2.c: 19: ADCON0=0x01;
  3234   0016FE  0E01               	movlw	1
  3235   001700  6EC2               	movwf	194,c	;volatile
  3236                           
  3237                           ;T2.c: 20: ADCON0=0x03;
  3238   001702  0E03               	movlw	3
  3239   001704  6EC2               	movwf	194,c	;volatile
  3240   001706                     i2l573:
  3241   001706  B2C2               	btfsc	194,1,c	;volatile
  3242   001708  D7FE               	goto	i2l573
  3243                           
  3244                           ;T2.c: 23: hx=ADRESH;
  3245   00170A  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3246                           
  3247                           ;T2.c: 24: lx=ADRESL;
  3248   00170E  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3249                           
  3250                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3251   001712  C00F  F008         	movff	tache2@lx,??_tache2
  3252   001716  0E0F               	movlw	15
  3253   001718  1608               	andwf	??_tache2^0,f,c
  3254   00171A  B4D8               	btfsc	status,2,c
  3255   00171C  D004               	goto	i2l5046
  3256   00171E  0E00               	movlw	0
  3257   001720  6E0E               	movwf	tache2@hx^0,c
  3258   001722  0E00               	movlw	0
  3259   001724  6E0F               	movwf	tache2@lx^0,c
  3260   001726                     i2l5046:
  3261                           
  3262                           ;T2.c: 31: if (hx>=10)
  3263   001726  0E09               	movlw	9
  3264   001728  640E               	cpfsgt	tache2@hx^0,c
  3265   00172A  D7DC               	goto	__ptext11
  3266                           
  3267                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3268   00172C  968F               	bcf	143,3,c	;volatile
  3269                           
  3270                           ;T2.c: 34: LATGbits.LATG4=1;
  3271   00172E  888F               	bsf	143,4,c	;volatile
  3272                           
  3273                           ;T2.c: 35: tp_delai(3000);
  3274   001730  0E0B               	movlw	11
  3275   001732  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3276   001734  0EB8               	movlw	184
  3277   001736  6E01               	movwf	tp_delai@itpd^0,c
  3278   001738  EC57  F012         	call	_tp_delai	;wreg free
  3279                           
  3280                           ;T2.c: 39: ADCON2=0x16;
  3281   00173C  0E16               	movlw	22
  3282   00173E  6EC0               	movwf	192,c	;volatile
  3283                           
  3284                           ;T2.c: 40: ADCON0=0x05;
  3285   001740  0E05               	movlw	5
  3286   001742  6EC2               	movwf	194,c	;volatile
  3287                           
  3288                           ;T2.c: 41: ADCON0=0x07;
  3289   001744  0E07               	movlw	7
  3290   001746  6EC2               	movwf	194,c	;volatile
  3291   001748                     i2l578:
  3292   001748  B2C2               	btfsc	194,1,c	;volatile
  3293   00174A  D7FE               	goto	i2l578
  3294                           
  3295                           ;T2.c: 44: hy=ADRESH;
  3296   00174C  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3297                           
  3298                           ;T2.c: 45: ly=ADRESL;
  3299   001750  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3300                           
  3301                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3302   001754  C011  F008         	movff	tache2@ly,??_tache2
  3303   001758  0E0F               	movlw	15
  3304   00175A  1608               	andwf	??_tache2^0,f,c
  3305   00175C  B4D8               	btfsc	status,2,c
  3306   00175E  D004               	goto	i2l5062
  3307   001760  0E00               	movlw	0
  3308   001762  6E10               	movwf	tache2@hy^0,c
  3309   001764  0E00               	movlw	0
  3310   001766  6E11               	movwf	tache2@ly^0,c
  3311   001768                     i2l5062:
  3312                           
  3313                           ;T2.c: 51: if (hy>=20)
  3314   001768  0E13               	movlw	19
  3315   00176A  6410               	cpfsgt	tache2@hy^0,c
  3316   00176C  D7BB               	goto	__ptext11
  3317                           
  3318                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3319   00176E  500E               	movf	tache2@hx^0,w,c
  3320   001770  6E08               	movwf	??_tache2^0,c
  3321   001772  500F               	movf	tache2@lx^0,w,c
  3322   001774  6E0A               	movwf	tache2@ix^0,c
  3323   001776  C008  F00B         	movff	??_tache2,tache2@ix+1
  3324                           
  3325                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3326   00177A  5010               	movf	tache2@hy^0,w,c
  3327   00177C  6E08               	movwf	??_tache2^0,c
  3328   00177E  5011               	movf	tache2@ly^0,w,c
  3329   001780  6E0C               	movwf	tache2@iy^0,c
  3330   001782  C008  F00D         	movff	??_tache2,tache2@iy+1
  3331                           
  3332                           ;T2.c: 55: ix=ix-3150;
  3333   001786  0EB2               	movlw	178
  3334   001788  240A               	addwf	tache2@ix^0,w,c
  3335   00178A  6E0A               	movwf	tache2@ix^0,c
  3336   00178C  0EF3               	movlw	243
  3337   00178E  200B               	addwfc	(tache2@ix+1)^0,w,c
  3338   001790  6E0B               	movwf	(tache2@ix+1)^0,c
  3339                           
  3340                           ;T2.c: 56: iy=iy-6500;
  3341   001792  0E9C               	movlw	156
  3342   001794  240C               	addwf	tache2@iy^0,w,c
  3343   001796  6E0C               	movwf	tache2@iy^0,c
  3344   001798  0EE6               	movlw	230
  3345   00179A  200D               	addwfc	(tache2@iy+1)^0,w,c
  3346   00179C  6E0D               	movwf	(tache2@iy+1)^0,c
  3347                           
  3348                           ;T2.c: 58: TP_x=ix/246;
  3349   00179E  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3350   0017A2  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3351   0017A6  0E00               	movlw	0
  3352   0017A8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3353   0017AA  0EF6               	movlw	246
  3354   0017AC  6E03               	movwf	___lwdiv@divisor^0,c
  3355   0017AE  EC29  F010         	call	___lwdiv	;wreg free
  3356   0017B2  5001               	movf	?___lwdiv^0,w,c
  3357   0017B4  0100               	movlb	0	; () banked
  3358   0017B6  6F67               	movwf	103,b
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;T2.c: 59: TP_y=127-(iy/409);
  3362   0017B8  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3363   0017BC  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3364   0017C0  0E01               	movlw	1
  3365   0017C2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3366   0017C4  0E99               	movlw	153
  3367   0017C6  6E03               	movwf	___lwdiv@divisor^0,c
  3368   0017C8  EC29  F010         	call	___lwdiv	;wreg free
  3369   0017CC  5001               	movf	?___lwdiv^0,w,c
  3370   0017CE  087F               	sublw	127
  3371   0017D0  0100               	movlb	0	; () banked
  3372   0017D2  6F68               	movwf	104,b
  3373                           
  3374                           ;T2.c: 68: TP_appui=1;
  3375   0017D4  0E01               	movlw	1
  3376   0017D6  D788               	goto	L3
  3377   0017D8                     __end_of_tache2:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _tp_delai *****************
  3381 ;; Defined at:
  3382 ;;		line 87 in file "T2.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  itpd            2    0[COMRAM] unsigned int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_tache2
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text12
  3410   0024AE                     __ptext12:
  3411                           	callstack 0
  3412   0024AE                     _tp_delai:
  3413                           	callstack 27
  3414                           
  3415                           ;T2.c: 89: while(itpd>0)
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;incstack = 0
  3419   0024AE  D006               	goto	i2l4606
  3420   0024B0                     i2l591:
  3421                           
  3422                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3423   0024B0  F000               	nop	
  3424   0024B2  F000               	nop	
  3425   0024B4  F000               	nop	
  3426                           
  3427                           ;T2.c: 92: itpd--;
  3428   0024B6  0601               	decf	tp_delai@itpd^0,f,c
  3429   0024B8  A0D8               	btfss	status,0,c
  3430   0024BA  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3431   0024BC                     i2l4606:
  3432   0024BC  5001               	movf	tp_delai@itpd^0,w,c
  3433   0024BE  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3434   0024C0  B4D8               	btfsc	status,2,c
  3435   0024C2  0012               	return	
  3436   0024C4  D7F5               	goto	i2l591
  3437   0024C6                     __end_of_tp_delai:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function ___lwdiv *****************
  3441 ;; Defined at:
  3442 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  dividend        2    0[COMRAM] unsigned int 
  3445 ;;  divisor         2    2[COMRAM] unsigned int 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  quotient        2    4[COMRAM] unsigned int 
  3448 ;;  counter         1    6[COMRAM] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  2    0[COMRAM] unsigned int 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;Total ram usage:        7 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; This function calls:
  3465 ;;		Nothing
  3466 ;; This function is called by:
  3467 ;;		_tache2
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471                           	psect	text13
  3472   002052                     __ptext13:
  3473                           	callstack 0
  3474   002052                     ___lwdiv:
  3475                           	callstack 27
  3476                           
  3477                           ;incstack = 0
  3478   002052  0E00               	movlw	0
  3479   002054  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3480   002056  0E00               	movlw	0
  3481   002058  6E05               	movwf	___lwdiv@quotient^0,c
  3482   00205A  5003               	movf	___lwdiv@divisor^0,w,c
  3483   00205C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3484   00205E  B4D8               	btfsc	status,2,c
  3485   002060  D01C               	goto	i2l2286
  3486   002062  0E01               	movlw	1
  3487   002064  6E07               	movwf	___lwdiv@counter^0,c
  3488   002066  D004               	goto	i2l4672
  3489   002068                     i2l4670:
  3490   002068  90D8               	bcf	status,0,c
  3491   00206A  3603               	rlcf	___lwdiv@divisor^0,f,c
  3492   00206C  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3493   00206E  2A07               	incf	___lwdiv@counter^0,f,c
  3494   002070                     i2l4672:
  3495   002070  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3496   002072  D7FA               	goto	i2l4670
  3497   002074                     i2u279_40:
  3498   002074  90D8               	bcf	status,0,c
  3499   002076  3605               	rlcf	___lwdiv@quotient^0,f,c
  3500   002078  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3501   00207A  5003               	movf	___lwdiv@divisor^0,w,c
  3502   00207C  5C01               	subwf	___lwdiv@dividend^0,w,c
  3503   00207E  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3504   002080  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3505   002082  A0D8               	btfss	status,0,c
  3506   002084  D005               	goto	i2l4682
  3507   002086  5003               	movf	___lwdiv@divisor^0,w,c
  3508   002088  5E01               	subwf	___lwdiv@dividend^0,f,c
  3509   00208A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3510   00208C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3511   00208E  8005               	bsf	___lwdiv@quotient^0,0,c
  3512   002090                     i2l4682:
  3513   002090  90D8               	bcf	status,0,c
  3514   002092  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3515   002094  3203               	rrcf	___lwdiv@divisor^0,f,c
  3516   002096  2E07               	decfsz	___lwdiv@counter^0,f,c
  3517   002098  D7ED               	goto	i2u279_40
  3518   00209A                     i2l2286:
  3519   00209A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3520   00209E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3521   0020A2  0012               	return		;funcret
  3522   0020A4                     __end_of___lwdiv:
  3523                           	callstack 0
  3524                           
  3525 ;; *************** function _tache1 *****************
  3526 ;; Defined at:
  3527 ;;		line 3 in file "T1.c"
  3528 ;; Parameters:    Size  Location     Type
  3529 ;;		None
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  i               1    0        unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;Total ram usage:        2 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 5
  3548 ;; This function calls:
  3549 ;;		_Conversion
  3550 ;;		_Diminution
  3551 ;;		_Init
  3552 ;;		_charger
  3553 ;;		_clear_graphics
  3554 ;;		_clear_line
  3555 ;;		_clear_text
  3556 ;;		_draw_char
  3557 ;;		_draw_dec8
  3558 ;;		_draw_hex8
  3559 ;;		_draw_square
  3560 ;;		_draw_string
  3561 ;;		_goto_lico
  3562 ;;		_init_rxtx
  3563 ;;		_initialisation_afficheur
  3564 ;;		_lecture_8bit_analogique
  3565 ;;		_marche
  3566 ;;		_plot1
  3567 ;;		_vide
  3568 ;;		_vitesseAdmin
  3569 ;; This function is called by:
  3570 ;;		_fonction_d_interruption
  3571 ;;		_initialisation_du_systeme
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text14
  3576   0010DA                     __ptext14:
  3577                           	callstack 0
  3578   0010DA                     _tache1:
  3579                           	callstack 23
  3580                           
  3581                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3582                           
  3583                           ;incstack = 0
  3584   0010DA  9EF2               	bcf	242,7,c	;volatile
  3585                           
  3586                           ;T1.c: 8: initialisation_afficheur();
  3587   0010DC  EC35  F00D         	call	_initialisation_afficheur	;wreg free
  3588                           
  3589                           ;T1.c: 9: clear_text();
  3590   0010E0  EC7B  F011         	call	_clear_text	;wreg free
  3591                           
  3592                           ;T1.c: 10: clear_graphics();
  3593   0010E4  EC93  F011         	call	_clear_graphics	;wreg free
  3594                           
  3595                           ;T1.c: 11: init_rxtx();
  3596   0010E8  ECE5  F011         	call	_init_rxtx	;wreg free
  3597                           
  3598                           ;T1.c: 12: Init(2);
  3599   0010EC  0E02               	movlw	2
  3600   0010EE  6EE6               	movwf	postinc1,c
  3601   0010F0  ECD4  F011         	call	_Init	;wreg free
  3602                           
  3603                           ;T1.c: 13: RXTX_libre=1;
  3604   0010F4  0E01               	movlw	1
  3605   0010F6  0100               	movlb	0	; () banked
  3606   0010F8  6F80               	movwf	128,b
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;T1.c: 14: TXREG1='R';
  3610   0010FA  0E52               	movlw	82
  3611   0010FC  6EAD               	movwf	173,c	;volatile
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3615   0010FE  8EF2               	bsf	242,7,c	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3619   001100  948B               	bcf	139,2,c	;volatile
  3620                           
  3621                           ; BSR set to: 0
  3622   001102  928B               	bcf	139,1,c	;volatile
  3623                           
  3624                           ; BSR set to: 0
  3625   001104  908F               	bcf	143,0,c	;volatile
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;T1.c: 19: vitesse=0;
  3629   001106  0E00               	movlw	0
  3630   001108  6F73               	movwf	115,b
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;T1.c: 21: n_octet_badge=0;
  3634   00110A  0E00               	movlw	0
  3635   00110C  6F7F               	movwf	127,b
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;T1.c: 22: TEST=0;
  3639   00110E  0E00               	movlw	0
  3640   001110  6F81               	movwf	129,b
  3641                           
  3642                           ; BSR set to: 0
  3643                           ;T1.c: 23: Personne=0;
  3644   001112  0E00               	movlw	0
  3645   001114  6F82               	movwf	130,b
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3649   001116  0E22               	movlw	34
  3650   001118  6E09               	movwf	goto_lico@colonne^0,c
  3651   00111A  0E0D               	movlw	13
  3652   00111C  ECFD  F00F         	call	_goto_lico
  3653   001120  0E52               	movlw	82
  3654   001122  EC62  F011         	call	_draw_char
  3655   001126  0E20               	movlw	32
  3656   001128  EC62  F011         	call	_draw_char
  3657   00112C  0E56               	movlw	86
  3658   00112E  EC62  F011         	call	_draw_char
  3659   001132  0E20               	movlw	32
  3660   001134  EC62  F011         	call	_draw_char
  3661   001138  0E42               	movlw	66
  3662   00113A  EC62  F011         	call	_draw_char
  3663                           
  3664                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3665   00113E  0E22               	movlw	34
  3666   001140  6E09               	movwf	goto_lico@colonne^0,c
  3667   001142  0E0E               	movlw	14
  3668   001144  ECFD  F00F         	call	_goto_lico
  3669   001148  0E30               	movlw	48
  3670   00114A  EC62  F011         	call	_draw_char
  3671   00114E  0E20               	movlw	32
  3672   001150  EC62  F011         	call	_draw_char
  3673   001154  0E30               	movlw	48
  3674   001156  EC62  F011         	call	_draw_char
  3675   00115A  0E20               	movlw	32
  3676   00115C  EC62  F011         	call	_draw_char
  3677   001160  0E30               	movlw	48
  3678   001162  EC62  F011         	call	_draw_char
  3679                           
  3680                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3681   001166  0E22               	movlw	34
  3682   001168  6E09               	movwf	goto_lico@colonne^0,c
  3683   00116A  0E0F               	movlw	15
  3684   00116C  ECFD  F00F         	call	_goto_lico
  3685   001170  0E31               	movlw	49
  3686   001172  EC62  F011         	call	_draw_char
  3687   001176  0E20               	movlw	32
  3688   001178  EC62  F011         	call	_draw_char
  3689   00117C  0E31               	movlw	49
  3690   00117E  EC62  F011         	call	_draw_char
  3691   001182  0E20               	movlw	32
  3692   001184  EC62  F011         	call	_draw_char
  3693   001188  0E31               	movlw	49
  3694   00118A  EC62  F011         	call	_draw_char
  3695                           
  3696                           ;T1.c: 29: TP_appui=0;
  3697   00118E  0E00               	movlw	0
  3698   001190  0100               	movlb	0	; () banked
  3699   001192  6F66               	movwf	102,b
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;T1.c: 30: draw_square(180,20,230,60);
  3703   001194  0E14               	movlw	20
  3704   001196  6E15               	movwf	draw_square@y1^0,c
  3705   001198  0EE6               	movlw	230
  3706   00119A  6E16               	movwf	draw_square@x2^0,c
  3707   00119C  0E3C               	movlw	60
  3708   00119E  6E17               	movwf	draw_square@y2^0,c
  3709   0011A0  0EB4               	movlw	180
  3710   0011A2  ECA3  F010         	call	_draw_square
  3711                           
  3712                           ;T1.c: 31: draw_square(120,20,170,60);
  3713   0011A6  0E14               	movlw	20
  3714   0011A8  6E15               	movwf	draw_square@y1^0,c
  3715   0011AA  0EAA               	movlw	170
  3716   0011AC  6E16               	movwf	draw_square@x2^0,c
  3717   0011AE  0E3C               	movlw	60
  3718   0011B0  6E17               	movwf	draw_square@y2^0,c
  3719   0011B2  0E78               	movlw	120
  3720   0011B4  ECA3  F010         	call	_draw_square
  3721                           
  3722                           ;T1.c: 33: draw_string(2);
  3723   0011B8  0E02               	movlw	2
  3724   0011BA  6E08               	movwf	draw_string@tableau^0,c
  3725   0011BC  0E00               	movlw	0
  3726   0011BE  6E09               	movwf	(draw_string@tableau+1)^0,c
  3727   0011C0  ECD8  F00E         	call	_draw_string	;wreg free
  3728   0011C4                     i2l4880:
  3729                           
  3730                           ;T1.c: 36: {;T1.c: 37: goto_lico(0, 0);
  3731   0011C4  0E00               	movlw	0
  3732   0011C6  6E09               	movwf	goto_lico@colonne^0,c
  3733   0011C8  0E00               	movlw	0
  3734   0011CA  ECFD  F00F         	call	_goto_lico
  3735                           
  3736                           ;T1.c: 38: draw_string("Marche:");
  3737   0011CE  0E8D               	movlw	low STR_1
  3738   0011D0  6E08               	movwf	draw_string@tableau^0,c
  3739   0011D2  0E10               	movlw	high STR_1
  3740   0011D4  6E09               	movwf	(draw_string@tableau+1)^0,c
  3741   0011D6  ECD8  F00E         	call	_draw_string	;wreg free
  3742                           
  3743                           ;T1.c: 39: goto_lico(7, 0);
  3744   0011DA  0E00               	movlw	0
  3745   0011DC  6E09               	movwf	goto_lico@colonne^0,c
  3746   0011DE  0E07               	movlw	7
  3747   0011E0  ECFD  F00F         	call	_goto_lico
  3748                           
  3749                           ;T1.c: 40: if (PORTEbits.RE4 == 0)
  3750   0011E4  B884               	btfsc	132,4,c	;volatile
  3751   0011E6  D017               	goto	i2l4894
  3752                           
  3753                           ;T1.c: 41: {;T1.c: 42: draw_string("((!))");
  3754   0011E8  0EB1               	movlw	low STR_2
  3755   0011EA  6E08               	movwf	draw_string@tableau^0,c
  3756   0011EC  0E10               	movlw	high STR_2
  3757   0011EE  6E09               	movwf	(draw_string@tableau+1)^0,c
  3758   0011F0  ECD8  F00E         	call	_draw_string	;wreg free
  3759                           
  3760                           ;T1.c: 43: _delay((unsigned long)((5)*(48000000/4000.0)));
  3761   0011F4  0E4E               	movlw	78
  3762   0011F6  6E1B               	movwf	??_tache1^0,c
  3763   0011F8  0EEB               	movlw	235
  3764   0011FA                     i2u315_47:
  3765   0011FA  2EE8               	decfsz	wreg,f,c
  3766   0011FC  D7FE               	bra	i2u315_47
  3767   0011FE  2E1B               	decfsz	??_tache1^0,f,c
  3768   001200  D7FC               	bra	i2u315_47
  3769   001202  F000               	nop	
  3770                           
  3771                           ;T1.c: 44: vitesse = Diminution(vitesse);
  3772   001204  C073 F001          	movff	115,Diminution@vitesse
  3773   001208  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3774   00120A  EC83  F012         	call	_Diminution	;wreg free
  3775   00120E  5001               	movf	?_Diminution^0,w,c
  3776   001210  0100               	movlb	0	; () banked
  3777   001212  6F73               	movwf	115,b
  3778                           
  3779                           ;T1.c: 45: }
  3780   001214  D006               	goto	i2l4896
  3781   001216                     i2l4894:
  3782                           
  3783                           ;T1.c: 46: else;T1.c: 47: {;T1.c: 48: draw_string("     ");
  3784   001216  0E2D               	movlw	low (STR_11+15)
  3785   001218  6E08               	movwf	draw_string@tableau^0,c
  3786   00121A  0E10               	movlw	high (STR_11+15)
  3787   00121C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3788   00121E  ECD8  F00E         	call	_draw_string	;wreg free
  3789   001222                     i2l4896:
  3790                           
  3791                           ;T1.c: 49: };T1.c: 51: goto_lico(1, 0);
  3792   001222  0E00               	movlw	0
  3793   001224  6E09               	movwf	goto_lico@colonne^0,c
  3794   001226  0E01               	movlw	1
  3795   001228  ECFD  F00F         	call	_goto_lico
  3796                           
  3797                           ;T1.c: 52: draw_string("Siege:");
  3798   00122C  0E9C               	movlw	low STR_4
  3799   00122E  6E08               	movwf	draw_string@tableau^0,c
  3800   001230  0E10               	movlw	high STR_4
  3801   001232  6E09               	movwf	(draw_string@tableau+1)^0,c
  3802   001234  ECD8  F00E         	call	_draw_string	;wreg free
  3803                           
  3804                           ;T1.c: 53: if (PORTBbits.RB2 == 0)
  3805   001238  B481               	btfsc	129,2,c	;volatile
  3806   00123A  D006               	goto	i2l4906
  3807                           
  3808                           ;T1.c: 54: {;T1.c: 55: {draw_char('1');}
  3809   00123C  0E31               	movlw	49
  3810   00123E  EC62  F011         	call	_draw_char
  3811                           
  3812                           ;T1.c: 56: marche();
  3813   001242  EC98  F00F         	call	_marche	;wreg free
  3814                           
  3815                           ;T1.c: 57: }
  3816   001246  D016               	goto	i2l4912
  3817   001248                     i2l4906:
  3818                           
  3819                           ;T1.c: 58: else;T1.c: 59: {;T1.c: 60: {draw_char('0');}
  3820   001248  0E30               	movlw	48
  3821   00124A  EC62  F011         	call	_draw_char
  3822                           
  3823                           ;T1.c: 61: _delay((unsigned long)((50)*(48000000/4000.0)));
  3824   00124E  0E04               	movlw	4
  3825   001250  6E1C               	movwf	(??_tache1+1)^0,c
  3826   001252  0E0C               	movlw	12
  3827   001254  6E1B               	movwf	??_tache1^0,c
  3828   001256  0E34               	movlw	52
  3829   001258                     i2u316_47:
  3830   001258  2EE8               	decfsz	wreg,f,c
  3831   00125A  D7FE               	bra	i2u316_47
  3832   00125C  2E1B               	decfsz	??_tache1^0,f,c
  3833   00125E  D7FC               	bra	i2u316_47
  3834   001260  2E1C               	decfsz	(??_tache1+1)^0,f,c
  3835   001262  D7FA               	bra	i2u316_47
  3836                           
  3837                           ;T1.c: 62: vitesse = Diminution(vitesse);
  3838   001264  C073 F001          	movff	115,Diminution@vitesse
  3839   001268  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3840   00126A  EC83  F012         	call	_Diminution	;wreg free
  3841   00126E  5001               	movf	?_Diminution^0,w,c
  3842   001270  0100               	movlb	0	; () banked
  3843   001272  6F73               	movwf	115,b
  3844   001274                     i2l4912:
  3845                           
  3846                           ;T1.c: 63: };T1.c: 65: goto_lico(2, 0);
  3847   001274  0E00               	movlw	0
  3848   001276  6E09               	movwf	goto_lico@colonne^0,c
  3849   001278  0E02               	movlw	2
  3850   00127A  ECFD  F00F         	call	_goto_lico
  3851                           
  3852                           ;T1.c: 66: draw_string("Temp. Eau:");
  3853   00127E  0E66               	movlw	low STR_5
  3854   001280  6E08               	movwf	draw_string@tableau^0,c
  3855   001282  0E10               	movlw	high STR_5
  3856   001284  6E09               	movwf	(draw_string@tableau+1)^0,c
  3857   001286  ECD8  F00E         	call	_draw_string	;wreg free
  3858                           
  3859                           ;T1.c: 67: draw_dec8(Conversion(lecture_8bit_analogique(2)));
  3860   00128A  0E02               	movlw	2
  3861   00128C  EC47  F011         	call	_lecture_8bit_analogique
  3862   001290  6E1B               	movwf	??_tache1^0,c
  3863   001292  501B               	movf	??_tache1^0,w,c
  3864   001294  6E0F               	movwf	Conversion@a^0,c
  3865   001296  6A10               	clrf	(Conversion@a+1)^0,c
  3866   001298  ECEE  F010         	call	_Conversion	;wreg free
  3867   00129C  500F               	movf	?_Conversion^0,w,c
  3868   00129E  EC43  F00E         	call	_draw_dec8
  3869                           
  3870                           ;T1.c: 69: goto_lico(3, 0);
  3871   0012A2  0E00               	movlw	0
  3872   0012A4  6E09               	movwf	goto_lico@colonne^0,c
  3873   0012A6  0E03               	movlw	3
  3874   0012A8  ECFD  F00F         	call	_goto_lico
  3875                           
  3876                           ;T1.c: 70: draw_string("Temp. Huile:");
  3877   0012AC  0E41               	movlw	low STR_6
  3878   0012AE  6E08               	movwf	draw_string@tableau^0,c
  3879   0012B0  0E10               	movlw	high STR_6
  3880   0012B2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3881   0012B4  ECD8  F00E         	call	_draw_string	;wreg free
  3882                           
  3883                           ;T1.c: 71: draw_dec8(Conversion(lecture_8bit_analogique(3)));
  3884   0012B8  0E03               	movlw	3
  3885   0012BA  EC47  F011         	call	_lecture_8bit_analogique
  3886   0012BE  6E1B               	movwf	??_tache1^0,c
  3887   0012C0  501B               	movf	??_tache1^0,w,c
  3888   0012C2  6E0F               	movwf	Conversion@a^0,c
  3889   0012C4  6A10               	clrf	(Conversion@a+1)^0,c
  3890   0012C6  ECEE  F010         	call	_Conversion	;wreg free
  3891   0012CA  500F               	movf	?_Conversion^0,w,c
  3892   0012CC  EC43  F00E         	call	_draw_dec8
  3893                           
  3894                           ;T1.c: 73: goto_lico(4, 0);
  3895   0012D0  0E00               	movlw	0
  3896   0012D2  6E09               	movwf	goto_lico@colonne^0,c
  3897   0012D4  0E04               	movlw	4
  3898   0012D6  ECFD  F00F         	call	_goto_lico
  3899                           
  3900                           ;T1.c: 74: draw_string("Choc:");
  3901   0012DA  0EB7               	movlw	low STR_7
  3902   0012DC  6E08               	movwf	draw_string@tableau^0,c
  3903   0012DE  0E10               	movlw	high STR_7
  3904   0012E0  6E09               	movwf	(draw_string@tableau+1)^0,c
  3905   0012E2  ECD8  F00E         	call	_draw_string	;wreg free
  3906                           
  3907                           ;T1.c: 75: if (PORTBbits.RB3 == 0)
  3908   0012E6  B681               	btfsc	129,3,c	;volatile
  3909   0012E8  D004               	goto	i2l4932
  3910                           
  3911                           ;T1.c: 76: {;T1.c: 77: draw_char('1');
  3912   0012EA  0E31               	movlw	49
  3913   0012EC  EC62  F011         	call	_draw_char
  3914                           
  3915                           ;T1.c: 78: }
  3916   0012F0  D003               	goto	i2l4934
  3917   0012F2                     i2l4932:
  3918                           
  3919                           ;T1.c: 79: else;T1.c: 80: {;T1.c: 81: draw_char('0');
  3920   0012F2  0E30               	movlw	48
  3921   0012F4  EC62  F011         	call	_draw_char
  3922   0012F8                     i2l4934:
  3923                           
  3924                           ;T1.c: 82: };T1.c: 84: if (Personne == 2)
  3925   0012F8  0E02               	movlw	2
  3926   0012FA  0100               	movlb	0	; () banked
  3927   0012FC  1982               	xorwf	130,w,b
  3928   0012FE  A4D8               	btfss	status,2,c
  3929   001300  D006               	goto	i2l4938
  3930   001302                     i2u284_40:
  3931                           
  3932                           ; BSR set to: 0
  3933                           ;T1.c: 85: {;T1.c: 86: vitesseAdmin(Personne);
  3934   001302  C082 F001          	movff	130,vitesseAdmin@a
  3935   001306  6A02               	clrf	(vitesseAdmin@a+1)^0,c
  3936   001308  EC91  F00E         	call	_vitesseAdmin	;wreg free
  3937                           
  3938                           ;T1.c: 87: }
  3939   00130C  D003               	goto	i2l4942
  3940   00130E                     i2l4938:
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;T1.c: 88: else if (Personne == 1)
  3944   00130E  0582               	decf	130,w,b
  3945   001310  B4D8               	btfsc	status,2,c
  3946   001312  D7F7               	goto	i2u284_40
  3947   001314                     i2l4942:
  3948                           
  3949                           ;T1.c: 94: };T1.c: 96: goto_lico(5, 0);
  3950   001314  0E00               	movlw	0
  3951   001316  6E09               	movwf	goto_lico@colonne^0,c
  3952   001318  0E05               	movlw	5
  3953   00131A  ECFD  F00F         	call	_goto_lico
  3954                           
  3955                           ;T1.c: 97: draw_string("Vitesse:");
  3956   00131E  0E7B               	movlw	low STR_8
  3957   001320  6E08               	movwf	draw_string@tableau^0,c
  3958   001322  0E10               	movlw	high STR_8
  3959   001324  6E09               	movwf	(draw_string@tableau+1)^0,c
  3960   001326  ECD8  F00E         	call	_draw_string	;wreg free
  3961                           
  3962                           ;T1.c: 98: draw_dec8(vitesse);
  3963   00132A  0100               	movlb	0	; () banked
  3964   00132C  5173               	movf	115,w,b
  3965   00132E  EC43  F00E         	call	_draw_dec8
  3966                           
  3967                           ;T1.c: 100: goto_lico(6, 0);
  3968   001332  0E00               	movlw	0
  3969   001334  6E09               	movwf	goto_lico@colonne^0,c
  3970   001336  0E06               	movlw	6
  3971   001338  ECFD  F00F         	call	_goto_lico
  3972                           
  3973                           ;T1.c: 101: draw_string("Batterie:");
  3974   00133C  0E71               	movlw	low STR_9
  3975   00133E  6E08               	movwf	draw_string@tableau^0,c
  3976   001340  0E10               	movlw	high STR_9
  3977   001342  6E09               	movwf	(draw_string@tableau+1)^0,c
  3978   001344  ECD8  F00E         	call	_draw_string	;wreg free
  3979                           
  3980                           ;T1.c: 102: if (PORTEbits.RE2 == 0 && batterie < 100)
  3981   001348  B484               	btfsc	132,2,c	;volatile
  3982   00134A  D005               	goto	i2l4958
  3983   00134C  0E64               	movlw	100
  3984   00134E  0100               	movlb	0	; () banked
  3985   001350  6174               	cpfslt	116,b
  3986   001352  D001               	goto	i2l4958
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;T1.c: 103: {;T1.c: 104: batterie++;
  3990   001354  2B74               	incf	116,f,b
  3991   001356                     i2l4958:
  3992                           
  3993                           ;T1.c: 105: };T1.c: 106: if (PORTEbits.RE3 == 0 && batterie > 0)
  3994   001356  B684               	btfsc	132,3,c	;volatile
  3995   001358  D004               	goto	i2l4964
  3996   00135A  0100               	movlb	0	; () banked
  3997   00135C  5174               	movf	116,w,b
  3998   00135E  A4D8               	btfss	status,2,c
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;T1.c: 107: {;T1.c: 108: batterie--;
  4002   001360  0774               	decf	116,f,b
  4003   001362                     i2l4964:
  4004                           
  4005                           ;T1.c: 109: };T1.c: 110: draw_dec8(batterie);
  4006   001362  0100               	movlb	0	; () banked
  4007   001364  5174               	movf	116,w,b
  4008   001366  EC43  F00E         	call	_draw_dec8
  4009                           
  4010                           ;T1.c: 112: goto_lico(8, 0);
  4011   00136A  0E00               	movlw	0
  4012   00136C  6E09               	movwf	goto_lico@colonne^0,c
  4013   00136E  0E08               	movlw	8
  4014   001370  ECFD  F00F         	call	_goto_lico
  4015                           
  4016                           ;T1.c: 113: draw_string("Badge:");
  4017   001374  0E95               	movlw	low STR_10
  4018   001376  6E08               	movwf	draw_string@tableau^0,c
  4019   001378  0E10               	movlw	high STR_10
  4020   00137A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4021   00137C  ECD8  F00E         	call	_draw_string	;wreg free
  4022                           
  4023                           ;T1.c: 114: if (n_octet_badge == 0)
  4024   001380  0100               	movlb	0	; () banked
  4025   001382  517F               	movf	127,w,b
  4026   001384  A4D8               	btfss	status,2,c
  4027   001386  D007               	goto	i2l4974
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;T1.c: 115: {;T1.c: 116: draw_string(" AUCUN              ");
  4031   001388  0E1E               	movlw	low STR_11
  4032   00138A  6E08               	movwf	draw_string@tableau^0,c
  4033   00138C  0E10               	movlw	high STR_11
  4034   00138E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4035   001390  ECD8  F00E         	call	_draw_string	;wreg free
  4036                           
  4037                           ;T1.c: 117: }
  4038   001394  D01E               	goto	i2l463
  4039   001396                     i2l4974:
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;T1.c: 118: else;T1.c: 119: {;T1.c: 126: if (Personne == 2)
  4043   001396  0E02               	movlw	2
  4044   001398  1982               	xorwf	130,w,b
  4045   00139A  A4D8               	btfss	status,2,c
  4046   00139C  D007               	goto	i2l4978
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;T1.c: 127: {;T1.c: 128: draw_string("Operator");
  4050   00139E  0E84               	movlw	low STR_12
  4051   0013A0  6E08               	movwf	draw_string@tableau^0,c
  4052   0013A2  0E10               	movlw	high STR_12
  4053   0013A4  6E09               	movwf	(draw_string@tableau+1)^0,c
  4054   0013A6  ECD8  F00E         	call	_draw_string	;wreg free
  4055                           
  4056                           ;T1.c: 129: }
  4057   0013AA  D013               	goto	i2l463
  4058   0013AC                     i2l4978:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;T1.c: 130: else if (Personne == 1)
  4062   0013AC  0582               	decf	130,w,b
  4063   0013AE  A4D8               	btfss	status,2,c
  4064   0013B0  D007               	goto	i2l4982
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;T1.c: 131: {;T1.c: 132: draw_string(" ADMIN");
  4068   0013B2  0EAA               	movlw	low STR_13
  4069   0013B4  6E08               	movwf	draw_string@tableau^0,c
  4070   0013B6  0E10               	movlw	high STR_13
  4071   0013B8  6E09               	movwf	(draw_string@tableau+1)^0,c
  4072   0013BA  ECD8  F00E         	call	_draw_string	;wreg free
  4073                           
  4074                           ;T1.c: 133: }
  4075   0013BE  D009               	goto	i2l463
  4076   0013C0                     i2l4982:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;T1.c: 134: else if (Personne == 0)
  4080   0013C0  5182               	movf	130,w,b
  4081   0013C2  A4D8               	btfss	status,2,c
  4082   0013C4  D006               	goto	i2l463
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;T1.c: 135: {;T1.c: 136: draw_string("AUCUN");
  4086   0013C6  0EBD               	movlw	low STR_14
  4087   0013C8  6E08               	movwf	draw_string@tableau^0,c
  4088   0013CA  0E10               	movlw	high STR_14
  4089   0013CC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4090   0013CE  ECD8  F00E         	call	_draw_string	;wreg free
  4091   0013D2                     i2l463:
  4092                           
  4093                           ;T1.c: 137: };T1.c: 138: };T1.c: 143: goto_lico(9, 0);
  4094                           
  4095                           ; BSR set to: 0
  4096   0013D2  0E00               	movlw	0
  4097   0013D4  6E09               	movwf	goto_lico@colonne^0,c
  4098   0013D6  0E09               	movlw	9
  4099   0013D8  ECFD  F00F         	call	_goto_lico
  4100                           
  4101                           ;T1.c: 144: draw_string("X-Joystick:");
  4102   0013DC  0E4E               	movlw	low STR_15
  4103   0013DE  6E08               	movwf	draw_string@tableau^0,c
  4104   0013E0  0E10               	movlw	high STR_15
  4105   0013E2  6E09               	movwf	(draw_string@tableau+1)^0,c
  4106   0013E4  ECD8  F00E         	call	_draw_string	;wreg free
  4107                           
  4108                           ;T1.c: 145: draw_hex8(lecture_8bit_analogique(10));
  4109   0013E8  0E0A               	movlw	10
  4110   0013EA  EC47  F011         	call	_lecture_8bit_analogique
  4111   0013EE  ECCF  F00F         	call	_draw_hex8
  4112                           
  4113                           ;T1.c: 147: goto_lico(10, 0);
  4114   0013F2  0E00               	movlw	0
  4115   0013F4  6E09               	movwf	goto_lico@colonne^0,c
  4116   0013F6  0E0A               	movlw	10
  4117   0013F8  ECFD  F00F         	call	_goto_lico
  4118                           
  4119                           ;T1.c: 148: draw_string("Y-Joystick:");
  4120   0013FC  0E5A               	movlw	low STR_16
  4121   0013FE  6E08               	movwf	draw_string@tableau^0,c
  4122   001400  0E10               	movlw	high STR_16
  4123   001402  6E09               	movwf	(draw_string@tableau+1)^0,c
  4124   001404  ECD8  F00E         	call	_draw_string	;wreg free
  4125                           
  4126                           ;T1.c: 149: draw_hex8(lecture_8bit_analogique(11));
  4127   001408  0E0B               	movlw	11
  4128   00140A  EC47  F011         	call	_lecture_8bit_analogique
  4129   00140E  ECCF  F00F         	call	_draw_hex8
  4130                           
  4131                           ;T1.c: 151: goto_lico(5, 22);
  4132   001412  0E16               	movlw	22
  4133   001414  6E09               	movwf	goto_lico@colonne^0,c
  4134   001416  0E05               	movlw	5
  4135   001418  ECFD  F00F         	call	_goto_lico
  4136                           
  4137                           ;T1.c: 152: draw_string("VIDE");
  4138   00141C  0EC3               	movlw	low STR_17
  4139   00141E  6E08               	movwf	draw_string@tableau^0,c
  4140   001420  0E10               	movlw	high STR_17
  4141   001422  6E09               	movwf	(draw_string@tableau+1)^0,c
  4142   001424  ECD8  F00E         	call	_draw_string	;wreg free
  4143                           
  4144                           ;T1.c: 153: goto_lico(5, 31);
  4145   001428  0E1F               	movlw	31
  4146   00142A  6E09               	movwf	goto_lico@colonne^0,c
  4147   00142C  0E05               	movlw	5
  4148   00142E  ECFD  F00F         	call	_goto_lico
  4149                           
  4150                           ;T1.c: 154: draw_string("CHARGE");
  4151   001432  0EA3               	movlw	low STR_18
  4152   001434  6E08               	movwf	draw_string@tableau^0,c
  4153   001436  0E10               	movlw	high STR_18
  4154   001438  6E09               	movwf	(draw_string@tableau+1)^0,c
  4155   00143A  ECD8  F00E         	call	_draw_string	;wreg free
  4156                           
  4157                           ;T1.c: 158: if (TP_appui == 1)
  4158   00143E  0100               	movlb	0	; () banked
  4159   001440  0566               	decf	102,w,b
  4160   001442  A4D8               	btfss	status,2,c
  4161   001444  D020               	goto	i2l467
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;T1.c: 159: {;T1.c: 160: goto_lico(0, 20);
  4165   001446  0E14               	movlw	20
  4166   001448  6E09               	movwf	goto_lico@colonne^0,c
  4167   00144A  0E00               	movlw	0
  4168   00144C  ECFD  F00F         	call	_goto_lico
  4169                           
  4170                           ;T1.c: 161: draw_string("x=");
  4171   001450  0ED5               	movlw	low STR_19
  4172   001452  6E08               	movwf	draw_string@tableau^0,c
  4173   001454  0E10               	movlw	high STR_19
  4174   001456  6E09               	movwf	(draw_string@tableau+1)^0,c
  4175   001458  ECD8  F00E         	call	_draw_string	;wreg free
  4176                           
  4177                           ;T1.c: 162: draw_hex8(TP_x);
  4178   00145C  0100               	movlb	0	; () banked
  4179   00145E  5167               	movf	103,w,b
  4180   001460  ECCF  F00F         	call	_draw_hex8
  4181                           
  4182                           ;T1.c: 163: draw_string(" y=");
  4183   001464  0EC8               	movlw	low STR_20
  4184   001466  6E08               	movwf	draw_string@tableau^0,c
  4185   001468  0E10               	movlw	high STR_20
  4186   00146A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4187   00146C  ECD8  F00E         	call	_draw_string	;wreg free
  4188                           
  4189                           ;T1.c: 164: draw_hex8(TP_y);
  4190   001470  0100               	movlb	0	; () banked
  4191   001472  5168               	movf	104,w,b
  4192   001474  ECCF  F00F         	call	_draw_hex8
  4193                           
  4194                           ;T1.c: 165: plot1(TP_x, TP_y);
  4195   001478  C068 F00F          	movff	104,plot1@y
  4196   00147C  0100               	movlb	0	; () banked
  4197   00147E  5167               	movf	103,w,b
  4198   001480  EC9B  F00D         	call	_plot1
  4199                           
  4200                           ;T1.c: 166: }
  4201   001484  D001               	goto	i2l5016
  4202   001486                     i2l467:
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;T1.c: 167: else;T1.c: 168: {;T1.c: 169: __nop();
  4206   001486  F000               	nop	
  4207   001488                     i2l5016:
  4208                           
  4209                           ;T1.c: 170: };T1.c: 171: if (TEST == 1)
  4210   001488  0100               	movlb	0	; () banked
  4211   00148A  0581               	decf	129,w,b
  4212   00148C  B4D8               	btfsc	status,2,c
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;T1.c: 172: {;T1.c: 173: charger();
  4216   00148E  EC6F  F012         	call	_charger	;wreg free
  4217                           
  4218                           ;T1.c: 174: };T1.c: 175: if (TEST == 0)
  4219   001492  0100               	movlb	0	; () banked
  4220   001494  5181               	movf	129,w,b
  4221   001496  A4D8               	btfss	status,2,c
  4222   001498  D695               	goto	i2l4880
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;T1.c: 176: {;T1.c: 177: clear_line(14);
  4226   00149A  0E0E               	movlw	14
  4227   00149C  EC07  F012         	call	_clear_line
  4228                           
  4229                           ;T1.c: 178: vide();
  4230   0014A0  EC63  F012         	call	_vide	;wreg free
  4231                           
  4232                           ;T1.c: 179: TEST = 3;
  4233   0014A4  0E03               	movlw	3
  4234   0014A6  0100               	movlb	0	; () banked
  4235   0014A8  6F81               	movwf	129,b
  4236   0014AA  D68C               	goto	i2l4880
  4237   0014AC                     __end_of_tache1:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _vitesseAdmin *****************
  4241 ;; Defined at:
  4242 ;;		line 445 in file "afficheur.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  a               2    0[COMRAM] unsigned int 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  c               2    7[COMRAM] int 
  4247 ;;  b               2    5[COMRAM] int 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        9 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_tache1
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text15
  4271   001D22                     __ptext15:
  4272                           	callstack 0
  4273   001D22                     _vitesseAdmin:
  4274                           	callstack 27
  4275                           
  4276                           ;afficheur.c: 446: int b ;;afficheur.c: 447: int c;;afficheur.c: 448: if (a==1){
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;incstack = 0
  4280   001D22  0401               	decf	vitesseAdmin@a^0,w,c
  4281   001D24  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4282   001D26  A4D8               	btfss	status,2,c
  4283   001D28  D008               	goto	i2l4530
  4284                           
  4285                           ;afficheur.c: 449: b =50;
  4286   001D2A  0E00               	movlw	0
  4287   001D2C  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4288   001D2E  0E32               	movlw	50
  4289   001D30  6E06               	movwf	vitesseAdmin@b^0,c
  4290                           
  4291                           ;afficheur.c: 450: c = 80;
  4292   001D32  0E00               	movlw	0
  4293   001D34  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4294   001D36  0E50               	movlw	80
  4295   001D38  6E08               	movwf	vitesseAdmin@c^0,c
  4296   001D3A                     i2l4530:
  4297                           
  4298                           ;afficheur.c: 451: };afficheur.c: 452: if(a==2){
  4299   001D3A  0E02               	movlw	2
  4300   001D3C  1801               	xorwf	vitesseAdmin@a^0,w,c
  4301   001D3E  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4302   001D40  A4D8               	btfss	status,2,c
  4303   001D42  D008               	goto	i2l4534
  4304                           
  4305                           ;afficheur.c: 453: b =15;
  4306   001D44  0E00               	movlw	0
  4307   001D46  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4308   001D48  0E0F               	movlw	15
  4309   001D4A  6E06               	movwf	vitesseAdmin@b^0,c
  4310                           
  4311                           ;afficheur.c: 454: c = 25;
  4312   001D4C  0E00               	movlw	0
  4313   001D4E  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4314   001D50  0E19               	movlw	25
  4315   001D52  6E08               	movwf	vitesseAdmin@c^0,c
  4316   001D54                     i2l4534:
  4317                           
  4318                           ;afficheur.c: 455: };afficheur.c: 456: if(PORTBbits.RB2==0){
  4319   001D54  B481               	btfsc	129,2,c	;volatile
  4320   001D56  0012               	return	
  4321                           
  4322                           ;afficheur.c: 457: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4323   001D58  A081               	btfss	129,0,c	;volatile
  4324   001D5A  D002               	goto	i2u255_40
  4325   001D5C  B281               	btfsc	129,1,c	;volatile
  4326   001D5E  0012               	return	
  4327   001D60                     i2u255_40:
  4328                           
  4329                           ;afficheur.c: 460: if (PORTEbits.RE4==1){
  4330   001D60  A884               	btfss	132,4,c	;volatile
  4331   001D62  0012               	return	
  4332                           
  4333                           ;afficheur.c: 461: if(TEST==1){
  4334   001D64  0100               	movlb	0	; () banked
  4335   001D66  0581               	decf	129,w,b
  4336   001D68  A4D8               	btfss	status,2,c
  4337   001D6A  D016               	goto	i2l1469
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;afficheur.c: 463: if (PORTEbits.RE0==0 && vitesse < b)
  4341   001D6C  B084               	btfsc	132,0,c	;volatile
  4342   001D6E  D00D               	goto	i2l4548
  4343                           
  4344                           ; BSR set to: 0
  4345   001D70  5173               	movf	115,w,b
  4346   001D72  6E03               	movwf	??_vitesseAdmin^0,c
  4347   001D74  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4348   001D76  5006               	movf	vitesseAdmin@b^0,w,c
  4349   001D78  5C03               	subwf	??_vitesseAdmin^0,w,c
  4350   001D7A  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4351   001D7C  0A80               	xorlw	128
  4352   001D7E  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4353   001D80  5007               	movf	(vitesseAdmin@b+1)^0,w,c
  4354   001D82  0A80               	xorlw	128
  4355   001D84  5805               	subwfb	(??_vitesseAdmin+2)^0,w,c
  4356   001D86  A0D8               	btfss	status,0,c
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;afficheur.c: 464: vitesse++;
  4360   001D88  2B73               	incf	115,f,b
  4361   001D8A                     i2l4548:
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;afficheur.c: 465: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4365   001D8A  B284               	btfsc	132,1,c	;volatile
  4366   001D8C  0012               	return	
  4367                           
  4368                           ; BSR set to: 0
  4369   001D8E  5173               	movf	115,w,b
  4370   001D90  B4D8               	btfsc	status,2,c
  4371   001D92  0012               	return	
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;afficheur.c: 466: vitesse--;
  4375   001D94  0773               	decf	115,f,b
  4376   001D96  0012               	return	
  4377   001D98                     i2l1469:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;afficheur.c: 469: if (PORTEbits.RE0==0 && vitesse < c)
  4381   001D98  B084               	btfsc	132,0,c	;volatile
  4382   001D9A  D7F7               	goto	i2l4548
  4383                           
  4384                           ; BSR set to: 0
  4385   001D9C  5173               	movf	115,w,b
  4386   001D9E  6E03               	movwf	??_vitesseAdmin^0,c
  4387   001DA0  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4388   001DA2  5008               	movf	vitesseAdmin@c^0,w,c
  4389   001DA4  5C03               	subwf	??_vitesseAdmin^0,w,c
  4390   001DA6  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4391   001DA8  0A80               	xorlw	128
  4392   001DAA  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4393   001DAC  5009               	movf	(vitesseAdmin@c+1)^0,w,c
  4394   001DAE  D7E9               	goto	L8
  4395   001DB0                     __end_of_vitesseAdmin:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _vide *****************
  4399 ;; Defined at:
  4400 ;;		line 438 in file "afficheur.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;Total ram usage:        0 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 4
  4421 ;; This function calls:
  4422 ;;		_draw_string
  4423 ;;		_goto_lico
  4424 ;; This function is called by:
  4425 ;;		_tache1
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text16
  4430   0024C6                     __ptext16:
  4431                           	callstack 0
  4432   0024C6                     _vide:
  4433                           	callstack 23
  4434                           
  4435                           ;afficheur.c: 440: goto_lico(14,0);
  4436                           
  4437                           ;incstack = 0
  4438   0024C6  0E00               	movlw	0
  4439   0024C8  6E09               	movwf	goto_lico@colonne^0,c
  4440   0024CA  0E0E               	movlw	14
  4441   0024CC  ECFD  F00F         	call	_goto_lico
  4442                           
  4443                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4444   0024D0  0E33               	movlw	low STR_22
  4445   0024D2  6E08               	movwf	draw_string@tableau^0,c
  4446   0024D4  0E10               	movlw	high STR_22
  4447   0024D6  6E09               	movwf	(draw_string@tableau+1)^0,c
  4448   0024D8  ECD8  F00E         	call	_draw_string	;wreg free
  4449   0024DC  0012               	return		;funcret
  4450   0024DE                     __end_of_vide:
  4451                           	callstack 0
  4452                           
  4453 ;; *************** function _marche *****************
  4454 ;; Defined at:
  4455 ;;		line 500 in file "afficheur.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;		None
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;Total ram usage:        2 bytes
  4474 ;; Hardware stack levels used: 1
  4475 ;; Hardware stack levels required when called: 4
  4476 ;; This function calls:
  4477 ;;		_Diminution
  4478 ;;		_draw_string
  4479 ;;		_goto_lico
  4480 ;; This function is called by:
  4481 ;;		_tache1
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text17
  4486   001F30                     __ptext17:
  4487                           	callstack 0
  4488   001F30                     _marche:
  4489                           	callstack 23
  4490                           
  4491                           ;afficheur.c: 501: goto_lico(0,0);
  4492                           
  4493                           ;incstack = 0
  4494   001F30  0E00               	movlw	0
  4495   001F32  6E09               	movwf	goto_lico@colonne^0,c
  4496   001F34  0E00               	movlw	0
  4497   001F36  ECFD  F00F         	call	_goto_lico
  4498                           
  4499                           ;afficheur.c: 502: draw_string("Marche:");
  4500   001F3A  0E8D               	movlw	low STR_1
  4501   001F3C  6E08               	movwf	draw_string@tableau^0,c
  4502   001F3E  0E10               	movlw	high STR_1
  4503   001F40  6E09               	movwf	(draw_string@tableau+1)^0,c
  4504   001F42  ECD8  F00E         	call	_draw_string	;wreg free
  4505                           
  4506                           ;afficheur.c: 503: if (PORTBbits.RB0==0)
  4507   001F46  B081               	btfsc	129,0,c	;volatile
  4508   001F48  D007               	goto	i2l1486
  4509                           
  4510                           ;afficheur.c: 504: draw_string("AV");
  4511   001F4A  0ED2               	movlw	low STR_24
  4512   001F4C  6E08               	movwf	draw_string@tableau^0,c
  4513   001F4E  0E10               	movlw	high STR_24
  4514   001F50  6E09               	movwf	(draw_string@tableau+1)^0,c
  4515   001F52  ECD8  F00E         	call	_draw_string	;wreg free
  4516   001F56  0012               	return	
  4517   001F58                     i2l1486:
  4518                           
  4519                           ;afficheur.c: 505: else;afficheur.c: 506: if (PORTBbits.RB1==0)
  4520   001F58  B281               	btfsc	129,1,c	;volatile
  4521   001F5A  D007               	goto	i2l4490
  4522                           
  4523                           ;afficheur.c: 507: draw_string("AR");
  4524   001F5C  0ECF               	movlw	low STR_25
  4525   001F5E  6E08               	movwf	draw_string@tableau^0,c
  4526   001F60  0E10               	movlw	high STR_25
  4527   001F62  6E09               	movwf	(draw_string@tableau+1)^0,c
  4528   001F64  ECD8  F00E         	call	_draw_string	;wreg free
  4529   001F68  0012               	return	
  4530   001F6A                     i2l4490:
  4531                           
  4532                           ;afficheur.c: 508: else{;afficheur.c: 509: draw_string("N ");
  4533   001F6A  0ECC               	movlw	low STR_26
  4534   001F6C  6E08               	movwf	draw_string@tableau^0,c
  4535   001F6E  0E10               	movlw	high STR_26
  4536   001F70  6E09               	movwf	(draw_string@tableau+1)^0,c
  4537   001F72  ECD8  F00E         	call	_draw_string	;wreg free
  4538                           
  4539                           ;afficheur.c: 511: _delay((unsigned long)((50)*(48000000/4000.0)));
  4540   001F76  0E04               	movlw	4
  4541   001F78  6E10               	movwf	(??_marche+1)^0,c
  4542   001F7A  0E0C               	movlw	12
  4543   001F7C  6E0F               	movwf	??_marche^0,c
  4544   001F7E  0E34               	movlw	52
  4545   001F80                     i2u317_47:
  4546   001F80  2EE8               	decfsz	wreg,f,c
  4547   001F82  D7FE               	bra	i2u317_47
  4548   001F84  2E0F               	decfsz	??_marche^0,f,c
  4549   001F86  D7FC               	bra	i2u317_47
  4550   001F88  2E10               	decfsz	(??_marche+1)^0,f,c
  4551   001F8A  D7FA               	bra	i2u317_47
  4552                           
  4553                           ;afficheur.c: 512: vitesse=Diminution(vitesse);
  4554   001F8C  C073 F001          	movff	115,Diminution@vitesse
  4555   001F90  6A02               	clrf	(Diminution@vitesse+1)^0,c
  4556   001F92  EC83  F012         	call	_Diminution	;wreg free
  4557   001F96  5001               	movf	?_Diminution^0,w,c
  4558   001F98  0100               	movlb	0	; () banked
  4559   001F9A  6F73               	movwf	115,b
  4560   001F9C  0012               	return		;funcret
  4561   001F9E                     __end_of_marche:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _Diminution *****************
  4565 ;; Defined at:
  4566 ;;		line 488 in file "afficheur.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  vitesse         2    0[COMRAM] unsigned int 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  2    0[COMRAM] int 
  4573 ;; Registers used:
  4574 ;;		wreg, status,2, status,0
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;Total ram usage:        2 bytes
  4585 ;; Hardware stack levels used: 1
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_tache1
  4590 ;;		_marche
  4591 ;; This function uses a non-reentrant model
  4592 ;;
  4593                           
  4594                           	psect	text18
  4595   002506                     __ptext18:
  4596                           	callstack 0
  4597   002506                     _Diminution:
  4598                           	callstack 26
  4599                           
  4600                           ;afficheur.c: 489: if(vitesse>0){
  4601                           
  4602                           ;incstack = 0
  4603   002506  5001               	movf	Diminution@vitesse^0,w,c
  4604   002508  1002               	iorwf	(Diminution@vitesse+1)^0,w,c
  4605   00250A  B4D8               	btfsc	status,2,c
  4606   00250C  0012               	return	
  4607                           
  4608                           ;afficheur.c: 490: vitesse--;
  4609   00250E  0601               	decf	Diminution@vitesse^0,f,c
  4610   002510  A0D8               	btfss	status,0,c
  4611   002512  0602               	decf	(Diminution@vitesse+1)^0,f,c
  4612   002514  0012               	return		;funcret
  4613   002516                     __end_of_Diminution:
  4614                           	callstack 0
  4615                           
  4616 ;; *************** function _lecture_8bit_analogique *****************
  4617 ;; Defined at:
  4618 ;;		line 60 in file "main.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  channel         1    wreg     unsigned char 
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  channel         1    1[COMRAM] unsigned char 
  4623 ;;  ret             1    0[COMRAM] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      unsigned char 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;Total ram usage:        2 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_tache1
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text19
  4647   00228E                     __ptext19:
  4648                           	callstack 0
  4649   00228E                     _lecture_8bit_analogique:
  4650                           	callstack 27
  4651                           
  4652                           ;incstack = 0
  4653                           ;lecture_8bit_analogique@channel stored from wreg
  4654   00228E  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4655                           
  4656                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4657   002290  0E00               	movlw	0
  4658   002292  6EC1               	movwf	193,c	;volatile
  4659                           
  4660                           ;main.c: 66: ADCON2=0x16;
  4661   002294  0E16               	movlw	22
  4662   002296  6EC0               	movwf	192,c	;volatile
  4663                           
  4664                           ;main.c: 67: channel=channel&0x1F;
  4665   002298  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4666   00229A  0B1F               	andlw	31
  4667   00229C  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4668                           
  4669                           ;main.c: 68: channel=channel<<2;
  4670   00229E  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4671   0022A0  46E8               	rlncf	wreg,f,c
  4672   0022A2  0BFC               	andlw	252
  4673   0022A4  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4674                           
  4675                           ;main.c: 69: ADCON0=channel|0x01;
  4676   0022A6  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4677   0022A8  0901               	iorlw	1
  4678   0022AA  6EC2               	movwf	194,c	;volatile
  4679                           
  4680                           ;main.c: 71: ADCON0bits.GO=1;
  4681   0022AC  82C2               	bsf	194,1,c	;volatile
  4682   0022AE                     i2l146:
  4683   0022AE  B2C2               	btfsc	194,1,c	;volatile
  4684   0022B0  D7FE               	goto	i2l146
  4685                           
  4686                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4687   0022B2  A0C3               	btfss	195,0,c	;volatile
  4688   0022B4  D003               	goto	i2l149
  4689                           
  4690                           ;main.c: 76: ret=0;
  4691   0022B6  0E00               	movlw	0
  4692   0022B8  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4693   0022BA  D002               	goto	i2l2860
  4694   0022BC                     i2l149:
  4695                           
  4696                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4697   0022BC  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4698   0022C0                     i2l2860:
  4699                           
  4700                           ;main.c: 82: return ret;
  4701   0022C0  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4702   0022C2  0012               	return		;funcret
  4703   0022C4                     __end_of_lecture_8bit_analogique:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _initialisation_afficheur *****************
  4707 ;; Defined at:
  4708 ;;		line 164 in file "afficheur.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  error_count     1    8[COMRAM] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;Total ram usage:        1 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 3
  4729 ;; This function calls:
  4730 ;;		_check_status_ok
  4731 ;;		_command
  4732 ;;		_d1command
  4733 ;;		_d2command
  4734 ;;		_delai_us_char
  4735 ;; This function is called by:
  4736 ;;		_tache1
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           
  4740                           	psect	text20
  4741   001A6A                     __ptext20:
  4742                           	callstack 0
  4743   001A6A                     _initialisation_afficheur:
  4744                           	callstack 24
  4745                           
  4746                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4747                           
  4748                           ;incstack = 0
  4749   001A6A  0E00               	movlw	0
  4750   001A6C  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4751                           
  4752                           ;afficheur.c: 172: LATH=0;
  4753   001A6E  0E00               	movlw	0
  4754   001A70  6E90               	movwf	144,c	;volatile
  4755                           
  4756                           ;afficheur.c: 173: LATJ=0x1F;
  4757   001A72  0E1F               	movlw	31
  4758   001A74  6E91               	movwf	145,c	;volatile
  4759                           
  4760                           ;afficheur.c: 176: TRISH=0;
  4761   001A76  0E00               	movlw	0
  4762   001A78  6E99               	movwf	153,c	;volatile
  4763                           
  4764                           ;afficheur.c: 177: TRISJ=0;
  4765   001A7A  0E00               	movlw	0
  4766   001A7C  6E9A               	movwf	154,c	;volatile
  4767                           
  4768                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4769   001A7E  9A91               	bcf	145,5,c	;volatile
  4770                           
  4771                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4772   001A80  8C91               	bsf	145,6,c	;volatile
  4773                           
  4774                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4775   001A82  9891               	bcf	145,4,c	;volatile
  4776                           
  4777                           ;afficheur.c: 185: delai_us_char(4);
  4778   001A84  0E04               	movlw	4
  4779   001A86  ECF6  F011         	call	_delai_us_char
  4780                           
  4781                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4782   001A8A  8891               	bsf	145,4,c	;volatile
  4783                           
  4784                           ;afficheur.c: 190: delai_us_char(12);
  4785   001A8C  0E0C               	movlw	12
  4786   001A8E  ECF6  F011         	call	_delai_us_char
  4787                           
  4788                           ;afficheur.c: 191: while(check_status_ok()==00)
  4789   001A92  D00C               	goto	i2l4434
  4790   001A94                     i2l4424:
  4791                           
  4792                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4793   001A94  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4794                           
  4795                           ;afficheur.c: 194: delai_us_char(12);
  4796   001A96  0E0C               	movlw	12
  4797   001A98  ECF6  F011         	call	_delai_us_char
  4798                           
  4799                           ;afficheur.c: 195: if (error_count>200)
  4800   001A9C  0EC8               	movlw	200
  4801   001A9E  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4802   001AA0  D005               	goto	i2l4434
  4803                           
  4804                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4805   001AA2  828B               	bsf	139,1,c	;volatile
  4806   001AA4  808F               	bsf	143,0,c	;volatile
  4807   001AA6  948B               	bcf	139,2,c	;volatile
  4808                           
  4809                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4810   001AA8  9EF2               	bcf	242,7,c	;volatile
  4811   001AAA                     i2l1326:
  4812   001AAA  D7FF               	goto	i2l1326
  4813   001AAC                     i2l4434:
  4814   001AAC  ECAB  F011         	call	_check_status_ok	;wreg free
  4815   001AB0  0900               	iorlw	0
  4816   001AB2  B4D8               	btfsc	status,2,c
  4817   001AB4  D7EF               	goto	i2l4424
  4818                           
  4819                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4820   001AB6  0E0F               	movlw	15
  4821   001AB8  6E05               	movwf	d2command@d2^0,c
  4822   001ABA  0E21               	movlw	33
  4823   001ABC  6E06               	movwf	d2command@cmd^0,c
  4824   001ABE  0E27               	movlw	39
  4825   001AC0  EC7B  F010         	call	_d2command
  4826                           
  4827                           ;afficheur.c: 206: d2command(0,0,0x22);
  4828   001AC4  0E00               	movlw	0
  4829   001AC6  6E05               	movwf	d2command@d2^0,c
  4830   001AC8  0E22               	movlw	34
  4831   001ACA  6E06               	movwf	d2command@cmd^0,c
  4832   001ACC  0E00               	movlw	0
  4833   001ACE  EC7B  F010         	call	_d2command
  4834                           
  4835                           ;afficheur.c: 207: d2command(0,0,0x24);
  4836   001AD2  0E00               	movlw	0
  4837   001AD4  6E05               	movwf	d2command@d2^0,c
  4838   001AD6  0E24               	movlw	36
  4839   001AD8  6E06               	movwf	d2command@cmd^0,c
  4840   001ADA  0E00               	movlw	0
  4841   001ADC  EC7B  F010         	call	_d2command
  4842                           
  4843                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4844   001AE0  0E7B               	movlw	123
  4845   001AE2  6E05               	movwf	d2command@d2^0,c
  4846   001AE4  0E40               	movlw	64
  4847   001AE6  6E06               	movwf	d2command@cmd^0,c
  4848   001AE8  0E00               	movlw	0
  4849   001AEA  EC7B  F010         	call	_d2command
  4850                           
  4851                           ;afficheur.c: 211: d2command(40,0,0x41);
  4852   001AEE  0E00               	movlw	0
  4853   001AF0  6E05               	movwf	d2command@d2^0,c
  4854   001AF2  0E41               	movlw	65
  4855   001AF4  6E06               	movwf	d2command@cmd^0,c
  4856   001AF6  0E28               	movlw	40
  4857   001AF8  EC7B  F010         	call	_d2command
  4858                           
  4859                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4860   001AFC  0E80               	movlw	128
  4861   001AFE  6E05               	movwf	d2command@d2^0,c
  4862   001B00  0E42               	movlw	66
  4863   001B02  6E06               	movwf	d2command@cmd^0,c
  4864   001B04  0E00               	movlw	0
  4865   001B06  EC7B  F010         	call	_d2command
  4866                           
  4867                           ;afficheur.c: 213: d2command(40,0,0x43);
  4868   001B0A  0E00               	movlw	0
  4869   001B0C  6E05               	movwf	d2command@d2^0,c
  4870   001B0E  0E43               	movlw	67
  4871   001B10  6E06               	movwf	d2command@cmd^0,c
  4872   001B12  0E28               	movlw	40
  4873   001B14  EC7B  F010         	call	_d2command
  4874                           
  4875                           ;afficheur.c: 216: command(0x80);
  4876   001B18  0E80               	movlw	128
  4877   001B1A  EC24  F012         	call	_command
  4878                           
  4879                           ;afficheur.c: 219: command(0x9C);
  4880   001B1E  0E9C               	movlw	156
  4881   001B20  EC24  F012         	call	_command
  4882                           
  4883                           ;afficheur.c: 222: command(0xA0);
  4884   001B24  0EA0               	movlw	160
  4885   001B26  EC24  F012         	call	_command
  4886                           
  4887                           ;afficheur.c: 225: d1command(0x02,0x70);
  4888   001B2A  0E70               	movlw	112
  4889   001B2C  6E05               	movwf	d1command@cmd^0,c
  4890   001B2E  0E02               	movlw	2
  4891   001B30  EC0E  F011         	call	_d1command
  4892   001B34  0012               	return		;funcret
  4893   001B36                     __end_of_initialisation_afficheur:
  4894                           	callstack 0
  4895                           
  4896 ;; *************** function _check_status_ok *****************
  4897 ;; Defined at:
  4898 ;;		line 30 in file "afficheur.c"
  4899 ;; Parameters:    Size  Location     Type
  4900 ;;		None
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  res             1    0[COMRAM] unsigned char 
  4903 ;; Return value:  Size  Location     Type
  4904 ;;                  1    wreg      unsigned char 
  4905 ;; Registers used:
  4906 ;;		wreg, status,2, status,0
  4907 ;; Tracked objects:
  4908 ;;		On entry : 0/0
  4909 ;;		On exit  : 0/0
  4910 ;;		Unchanged: 0/0
  4911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;Total ram usage:        1 bytes
  4917 ;; Hardware stack levels used: 1
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_initialisation_afficheur
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           
  4925                           	psect	text21
  4926   002356                     __ptext21:
  4927                           	callstack 0
  4928   002356                     _check_status_ok:
  4929                           	callstack 26
  4930                           
  4931                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4932                           
  4933                           ;incstack = 0
  4934   002356  6899               	setf	153,c	;volatile
  4935                           
  4936                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4937   002358  8091               	bsf	145,0,c	;volatile
  4938                           
  4939                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4940   00235A  9691               	bcf	145,3,c	;volatile
  4941                           
  4942                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4943   00235C  9291               	bcf	145,1,c	;volatile
  4944                           
  4945                           ;afficheur.c: 39: __nop();
  4946   00235E  F000               	nop	
  4947                           
  4948                           ;afficheur.c: 40: __nop();
  4949   002360  F000               	nop	
  4950                           
  4951                           ;afficheur.c: 41: __nop();
  4952   002362  F000               	nop	
  4953                           
  4954                           ;afficheur.c: 42: res=PORTH;
  4955   002364  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4956                           
  4957                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4958   002368  8291               	bsf	145,1,c	;volatile
  4959                           
  4960                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4961   00236A  8691               	bsf	145,3,c	;volatile
  4962                           
  4963                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4964   00236C  5001               	movf	check_status_ok@res^0,w,c
  4965   00236E  0B03               	andlw	3
  4966   002370  0A03               	xorlw	3
  4967   002372  A4D8               	btfss	status,2,c
  4968   002374  D002               	goto	i2l2824
  4969                           
  4970                           ;afficheur.c: 47: res=1;
  4971   002376  0E01               	movlw	1
  4972   002378  D001               	goto	L4
  4973   00237A                     i2l2824:
  4974                           
  4975                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4976   00237A  0E00               	movlw	0
  4977   00237C                     L4:
  4978   00237C  6E01               	movwf	check_status_ok@res^0,c
  4979                           
  4980                           ;afficheur.c: 50: return res;
  4981   00237E  5001               	movf	check_status_ok@res^0,w,c
  4982   002380  0012               	return		;funcret
  4983   002382                     __end_of_check_status_ok:
  4984                           	callstack 0
  4985                           
  4986 ;; *************** function _init_rxtx *****************
  4987 ;; Defined at:
  4988 ;;		line 4 in file "rxtx.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; This function calls:
  5009 ;;		Nothing
  5010 ;; This function is called by:
  5011 ;;		_tache1
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text22
  5016   0023CA                     __ptext22:
  5017                           	callstack 0
  5018   0023CA                     _init_rxtx:
  5019                           	callstack 27
  5020                           
  5021                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  5022                           
  5023                           ;incstack = 0
  5024   0023CA  9C94               	bcf	148,6,c	;volatile
  5025                           
  5026                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  5027   0023CC  8E94               	bsf	148,7,c	;volatile
  5028                           
  5029                           ;rxtx.c: 8: BAUDCON1=0x08;
  5030   0023CE  0E08               	movlw	8
  5031   0023D0  6E65               	movwf	101,c	;volatile
  5032                           
  5033                           ;rxtx.c: 9: SPBRGH1=0x04;
  5034   0023D2  0E04               	movlw	4
  5035   0023D4  6ED4               	movwf	212,c	;volatile
  5036                           
  5037                           ;rxtx.c: 10: SPBRG1=0xE1;
  5038   0023D6  0EE1               	movlw	225
  5039   0023D8  6EAF               	movwf	175,c	;volatile
  5040                           
  5041                           ;rxtx.c: 11: TXSTA1=0x04;
  5042   0023DA  0E04               	movlw	4
  5043   0023DC  6EAC               	movwf	172,c	;volatile
  5044                           
  5045                           ;rxtx.c: 12: RCSTA1=0x80;
  5046   0023DE  0E80               	movlw	128
  5047   0023E0  6EAB               	movwf	171,c	;volatile
  5048                           
  5049                           ;rxtx.c: 13: TXSTA1=0x24;
  5050   0023E2  0E24               	movlw	36
  5051   0023E4  6EAC               	movwf	172,c	;volatile
  5052                           
  5053                           ;rxtx.c: 14: RCSTA1=0x90;
  5054   0023E6  0E90               	movlw	144
  5055   0023E8  6EAB               	movwf	171,c	;volatile
  5056   0023EA  0012               	return		;funcret
  5057   0023EC                     __end_of_init_rxtx:
  5058                           	callstack 0
  5059                           
  5060 ;; *************** function _draw_square *****************
  5061 ;; Defined at:
  5062 ;;		line 325 in file "afficheur.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;  x1              1    wreg     unsigned char 
  5065 ;;  y1              1   20[COMRAM] unsigned char 
  5066 ;;  x2              1   21[COMRAM] unsigned char 
  5067 ;;  y2              1   22[COMRAM] unsigned char 
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  x1              1   23[COMRAM] unsigned char 
  5070 ;;  y               1   25[COMRAM] unsigned char 
  5071 ;;  x               1   24[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5081 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;Total ram usage:        6 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 4
  5088 ;; This function calls:
  5089 ;;		_plot1
  5090 ;; This function is called by:
  5091 ;;		_tache1
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text23
  5096   002146                     __ptext23:
  5097                           	callstack 0
  5098   002146                     _draw_square:
  5099                           	callstack 23
  5100                           
  5101                           ;incstack = 0
  5102                           ;draw_square@x1 stored from wreg
  5103   002146  6E18               	movwf	draw_square@x1^0,c
  5104                           
  5105                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  5106   002148  C018  F019         	movff	draw_square@x1,draw_square@x
  5107   00214C  D00B               	goto	i2l4472
  5108   00214E                     i2l4468:
  5109                           
  5110                           ;afficheur.c: 330: plot1(x, y1);
  5111   00214E  C015  F00F         	movff	draw_square@y1,plot1@y
  5112   002152  5019               	movf	draw_square@x^0,w,c
  5113   002154  EC9B  F00D         	call	_plot1
  5114                           
  5115                           ;afficheur.c: 331: plot1(x, y2);
  5116   002158  C017  F00F         	movff	draw_square@y2,plot1@y
  5117   00215C  5019               	movf	draw_square@x^0,w,c
  5118   00215E  EC9B  F00D         	call	_plot1
  5119   002162  2A19               	incf	draw_square@x^0,f,c
  5120   002164                     i2l4472:
  5121   002164  5019               	movf	draw_square@x^0,w,c
  5122   002166  5C16               	subwf	draw_square@x2^0,w,c
  5123   002168  B0D8               	btfsc	status,0,c
  5124   00216A  D7F1               	goto	i2l4468
  5125                           
  5126                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  5127   00216C  C015  F01A         	movff	draw_square@y1,draw_square@y
  5128   002170  D00B               	goto	i2l4478
  5129   002172                     i2l4474:
  5130                           
  5131                           ;afficheur.c: 336: plot1(x1, y);
  5132   002172  C01A  F00F         	movff	draw_square@y,plot1@y
  5133   002176  5018               	movf	draw_square@x1^0,w,c
  5134   002178  EC9B  F00D         	call	_plot1
  5135                           
  5136                           ;afficheur.c: 337: plot1(x2, y);
  5137   00217C  C01A  F00F         	movff	draw_square@y,plot1@y
  5138   002180  5016               	movf	draw_square@x2^0,w,c
  5139   002182  EC9B  F00D         	call	_plot1
  5140   002186  2A1A               	incf	draw_square@y^0,f,c
  5141   002188                     i2l4478:
  5142   002188  501A               	movf	draw_square@y^0,w,c
  5143   00218A  5C17               	subwf	draw_square@y2^0,w,c
  5144   00218C  A0D8               	btfss	status,0,c
  5145   00218E  0012               	return	
  5146   002190  D7F0               	goto	i2l4474
  5147   002192                     __end_of_draw_square:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _plot1 *****************
  5151 ;; Defined at:
  5152 ;;		line 390 in file "afficheur.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  x               1    wreg     unsigned char 
  5155 ;;  y               1   14[COMRAM] unsigned char 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  x               1   19[COMRAM] unsigned char 
  5158 ;;  add             2   17[COMRAM] unsigned int 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5168 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;Total ram usage:        6 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 3
  5175 ;; This function calls:
  5176 ;;		___awdiv
  5177 ;;		___awmod
  5178 ;;		_command
  5179 ;;		_d2command
  5180 ;; This function is called by:
  5181 ;;		_tache1
  5182 ;;		_draw_square
  5183 ;;		_draw_filled_square
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text24
  5188   001B36                     __ptext24:
  5189                           	callstack 0
  5190   001B36                     _plot1:
  5191                           	callstack 24
  5192                           
  5193                           ;incstack = 0
  5194                           ;plot1@x stored from wreg
  5195   001B36  6E14               	movwf	plot1@x^0,c
  5196                           
  5197                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  5198   001B38  C014  F007         	movff	plot1@x,___awdiv@dividend
  5199   001B3C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5200   001B3E  0E00               	movlw	0
  5201   001B40  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5202   001B42  0E06               	movlw	6
  5203   001B44  6E09               	movwf	___awdiv@divisor^0,c
  5204   001B46  EC1E  F00F         	call	___awdiv	;wreg free
  5205   001B4A  500F               	movf	plot1@y^0,w,c
  5206   001B4C  0D28               	mullw	40
  5207   001B4E  CFF3 F010          	movff	prodl,??_plot1
  5208   001B52  CFF4 F011          	movff	prodh,??_plot1+1
  5209   001B56  5007               	movf	?___awdiv^0,w,c
  5210   001B58  2410               	addwf	??_plot1^0,w,c
  5211   001B5A  6E12               	movwf	plot1@add^0,c
  5212   001B5C  5008               	movf	(?___awdiv+1)^0,w,c
  5213   001B5E  2011               	addwfc	(??_plot1+1)^0,w,c
  5214   001B60  6E13               	movwf	(plot1@add+1)^0,c
  5215                           
  5216                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  5217   001B62  5013               	movf	(plot1@add+1)^0,w,c
  5218   001B64  6E05               	movwf	d2command@d2^0,c
  5219   001B66  0E24               	movlw	36
  5220   001B68  6E06               	movwf	d2command@cmd^0,c
  5221   001B6A  5012               	movf	plot1@add^0,w,c
  5222   001B6C  EC7B  F010         	call	_d2command
  5223                           
  5224                           ;afficheur.c: 397: switch(x%6)
  5225   001B70  D018               	goto	i2l4392
  5226   001B72                     i2l4378:
  5227   001B72  0EFD               	movlw	253
  5228   001B74  EC24  F012         	call	_command
  5229   001B78  0012               	return	
  5230   001B7A                     i2l4380:
  5231   001B7A  0EFC               	movlw	252
  5232   001B7C  EC24  F012         	call	_command
  5233   001B80  0012               	return	
  5234   001B82                     i2l4382:
  5235   001B82  0EFB               	movlw	251
  5236   001B84  EC24  F012         	call	_command
  5237   001B88  0012               	return	
  5238   001B8A                     i2l4384:
  5239   001B8A  0EFA               	movlw	250
  5240   001B8C  EC24  F012         	call	_command
  5241   001B90  0012               	return	
  5242   001B92                     i2l4386:
  5243   001B92  0EF9               	movlw	249
  5244   001B94  EC24  F012         	call	_command
  5245   001B98  0012               	return	
  5246   001B9A                     i2l4388:
  5247   001B9A  0EF8               	movlw	248
  5248   001B9C  EC24  F012         	call	_command
  5249   001BA0  0012               	return	
  5250   001BA2                     i2l4392:
  5251   001BA2  C014  F001         	movff	plot1@x,___awmod@dividend
  5252   001BA6  6A02               	clrf	(___awmod@dividend+1)^0,c
  5253   001BA8  0E00               	movlw	0
  5254   001BAA  6E04               	movwf	(___awmod@divisor+1)^0,c
  5255   001BAC  0E06               	movlw	6
  5256   001BAE  6E03               	movwf	___awmod@divisor^0,c
  5257   001BB0  EC60  F00F         	call	___awmod	;wreg free
  5258                           
  5259                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5260                           ; Switch size 1, requested type "simple"
  5261                           ; Number of cases is 1, Range of values is 0 to 0
  5262                           ; switch strategies available:
  5263                           ; Name         Instructions Cycles
  5264                           ; simple_byte            4     3 (average)
  5265                           ;	Chosen strategy is simple_byte
  5266   001BB4  5002               	movf	(?___awmod+1)^0,w,c
  5267   001BB6  0A00               	xorlw	0	; case 0
  5268   001BB8  A4D8               	btfss	status,2,c
  5269   001BBA  0012               	return	
  5270                           
  5271                           ; Switch size 1, requested type "simple"
  5272                           ; Number of cases is 6, Range of values is 0 to 5
  5273                           ; switch strategies available:
  5274                           ; Name         Instructions Cycles
  5275                           ; simple_byte           19    10 (average)
  5276                           ;	Chosen strategy is simple_byte
  5277   001BBC  5001               	movf	?___awmod^0,w,c
  5278   001BBE  0A00               	xorlw	0	; case 0
  5279   001BC0  B4D8               	btfsc	status,2,c
  5280   001BC2  D7D7               	goto	i2l4378
  5281   001BC4  0A01               	xorlw	1	; case 1
  5282   001BC6  B4D8               	btfsc	status,2,c
  5283   001BC8  D7D8               	goto	i2l4380
  5284   001BCA  0A03               	xorlw	3	; case 2
  5285   001BCC  B4D8               	btfsc	status,2,c
  5286   001BCE  D7D9               	goto	i2l4382
  5287   001BD0  0A01               	xorlw	1	; case 3
  5288   001BD2  B4D8               	btfsc	status,2,c
  5289   001BD4  D7DA               	goto	i2l4384
  5290   001BD6  0A07               	xorlw	7	; case 4
  5291   001BD8  B4D8               	btfsc	status,2,c
  5292   001BDA  D7DB               	goto	i2l4386
  5293   001BDC  0A01               	xorlw	1	; case 5
  5294   001BDE  A4D8               	btfss	status,2,c
  5295   001BE0  0012               	return	
  5296   001BE2  D7DB               	goto	i2l4388
  5297   001BE4                     __end_of_plot1:
  5298                           	callstack 0
  5299                           
  5300 ;; *************** function _command *****************
  5301 ;; Defined at:
  5302 ;;		line 90 in file "afficheur.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  cmd             1    wreg     unsigned char 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  cmd             1    4[COMRAM] unsigned char 
  5307 ;;  res             1    0        unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      unsigned char 
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;Total ram usage:        1 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; Hardware stack levels required when called: 2
  5324 ;; This function calls:
  5325 ;;		_delai_us_char
  5326 ;;		_wait_status_ok
  5327 ;;		_write_c_aff
  5328 ;; This function is called by:
  5329 ;;		_initialisation_afficheur
  5330 ;;		_plot1
  5331 ;;		_plot0
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text25
  5336   002448                     __ptext25:
  5337                           	callstack 0
  5338   002448                     _command:
  5339                           	callstack 24
  5340                           
  5341                           ;incstack = 0
  5342                           ;command@cmd stored from wreg
  5343   002448  6E05               	movwf	command@cmd^0,c
  5344                           
  5345                           ;afficheur.c: 96: if(wait_status_ok()==1)
  5346   00244A  EC52  F010         	call	_wait_status_ok	;wreg free
  5347   00244E  06E8               	decf	wreg,f,c
  5348   002450  A4D8               	btfss	status,2,c
  5349   002452  0012               	return	
  5350                           
  5351                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  5352   002454  0E0C               	movlw	12
  5353   002456  ECF6  F011         	call	_delai_us_char
  5354                           
  5355                           ;afficheur.c: 99: write_c_aff(cmd);
  5356   00245A  5005               	movf	command@cmd^0,w,c
  5357   00245C  EC3E  F012         	call	_write_c_aff
  5358   002460  0012               	return		;funcret
  5359   002462                     __end_of_command:
  5360                           	callstack 0
  5361                           
  5362 ;; *************** function ___awmod *****************
  5363 ;; Defined at:
  5364 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5365 ;; Parameters:    Size  Location     Type
  5366 ;;  dividend        2    0[COMRAM] int 
  5367 ;;  divisor         2    2[COMRAM] int 
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;  sign            1    5[COMRAM] unsigned char 
  5370 ;;  counter         1    4[COMRAM] unsigned char 
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  2    0[COMRAM] int 
  5373 ;; Registers used:
  5374 ;;		wreg, status,2, status,0
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;Total ram usage:        6 bytes
  5385 ;; Hardware stack levels used: 1
  5386 ;; This function calls:
  5387 ;;		Nothing
  5388 ;; This function is called by:
  5389 ;;		_plot1
  5390 ;;		_plot0
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text26
  5395   001EC0                     __ptext26:
  5396                           	callstack 0
  5397   001EC0                     ___awmod:
  5398                           	callstack 26
  5399                           
  5400                           ;incstack = 0
  5401   001EC0  0E00               	movlw	0
  5402   001EC2  6E06               	movwf	___awmod@sign^0,c
  5403   001EC4  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5404   001EC6  D006               	goto	i2l4306
  5405   001EC8  6C01               	negf	___awmod@dividend^0,c
  5406   001ECA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5407   001ECC  B0D8               	btfsc	status,0,c
  5408   001ECE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5409   001ED0  0E01               	movlw	1
  5410   001ED2  6E06               	movwf	___awmod@sign^0,c
  5411   001ED4                     i2l4306:
  5412   001ED4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5413   001ED6  D004               	goto	i2l4310
  5414   001ED8  6C03               	negf	___awmod@divisor^0,c
  5415   001EDA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5416   001EDC  B0D8               	btfsc	status,0,c
  5417   001EDE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5418   001EE0                     i2l4310:
  5419   001EE0  5003               	movf	___awmod@divisor^0,w,c
  5420   001EE2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5421   001EE4  B4D8               	btfsc	status,2,c
  5422   001EE6  D018               	goto	i2l4326
  5423   001EE8  0E01               	movlw	1
  5424   001EEA  6E05               	movwf	___awmod@counter^0,c
  5425   001EEC  D004               	goto	i2l4316
  5426   001EEE                     i2l4314:
  5427   001EEE  90D8               	bcf	status,0,c
  5428   001EF0  3603               	rlcf	___awmod@divisor^0,f,c
  5429   001EF2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5430   001EF4  2A05               	incf	___awmod@counter^0,f,c
  5431   001EF6                     i2l4316:
  5432   001EF6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5433   001EF8  D7FA               	goto	i2l4314
  5434   001EFA                     i2u223_40:
  5435   001EFA  5003               	movf	___awmod@divisor^0,w,c
  5436   001EFC  5C01               	subwf	___awmod@dividend^0,w,c
  5437   001EFE  5004               	movf	(___awmod@divisor+1)^0,w,c
  5438   001F00  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5439   001F02  A0D8               	btfss	status,0,c
  5440   001F04  D004               	goto	i2l4322
  5441   001F06  5003               	movf	___awmod@divisor^0,w,c
  5442   001F08  5E01               	subwf	___awmod@dividend^0,f,c
  5443   001F0A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5444   001F0C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5445   001F0E                     i2l4322:
  5446   001F0E  90D8               	bcf	status,0,c
  5447   001F10  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5448   001F12  3203               	rrcf	___awmod@divisor^0,f,c
  5449   001F14  2E05               	decfsz	___awmod@counter^0,f,c
  5450   001F16  D7F1               	goto	i2u223_40
  5451   001F18                     i2l4326:
  5452   001F18  5006               	movf	___awmod@sign^0,w,c
  5453   001F1A  B4D8               	btfsc	status,2,c
  5454   001F1C  D004               	goto	i2l4330
  5455   001F1E  6C01               	negf	___awmod@dividend^0,c
  5456   001F20  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5457   001F22  B0D8               	btfsc	status,0,c
  5458   001F24  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5459   001F26                     i2l4330:
  5460   001F26  C001  F001         	movff	___awmod@dividend,?___awmod
  5461   001F2A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5462   001F2E  0012               	return		;funcret
  5463   001F30                     __end_of___awmod:
  5464                           	callstack 0
  5465                           
  5466 ;; *************** function _draw_hex8 *****************
  5467 ;; Defined at:
  5468 ;;		line 252 in file "afficheur.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  octet           1    wreg     unsigned char 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  octet           1    7[COMRAM] unsigned char 
  5473 ;;  c               1    8[COMRAM] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;Total ram usage:        2 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; Hardware stack levels required when called: 3
  5490 ;; This function calls:
  5491 ;;		_d1command
  5492 ;; This function is called by:
  5493 ;;		_tache1
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text27
  5498   001F9E                     __ptext27:
  5499                           	callstack 0
  5500   001F9E                     _draw_hex8:
  5501                           	callstack 24
  5502                           
  5503                           ;incstack = 0
  5504                           ;draw_hex8@octet stored from wreg
  5505   001F9E  6E08               	movwf	draw_hex8@octet^0,c
  5506                           
  5507                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5508   001FA0  3808               	swapf	draw_hex8@octet^0,w,c
  5509   001FA2  0B0F               	andlw	15
  5510   001FA4  6E09               	movwf	draw_hex8@c^0,c
  5511                           
  5512                           ;afficheur.c: 257: if (c>9)
  5513   001FA6  0E09               	movlw	9
  5514   001FA8  6409               	cpfsgt	draw_hex8@c^0,c
  5515   001FAA  D003               	goto	i2l4568
  5516                           
  5517                           ;afficheur.c: 258: c=c+0x17;
  5518   001FAC  5009               	movf	draw_hex8@c^0,w,c
  5519   001FAE  0F17               	addlw	23
  5520   001FB0  D002               	goto	L5
  5521   001FB2                     i2l4568:
  5522                           
  5523                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5524   001FB2  5009               	movf	draw_hex8@c^0,w,c
  5525   001FB4  0F10               	addlw	16
  5526   001FB6                     L5:
  5527   001FB6  6E09               	movwf	draw_hex8@c^0,c
  5528   001FB8  D001               	goto	i2l4570
  5529   001FBA                     i2l1355:
  5530                           
  5531                           ;afficheur.c: 262: __nop();
  5532   001FBA  F000               	nop	
  5533   001FBC                     i2l4570:
  5534   001FBC  0EC0               	movlw	192
  5535   001FBE  6E05               	movwf	d1command@cmd^0,c
  5536   001FC0  5009               	movf	draw_hex8@c^0,w,c
  5537   001FC2  EC0E  F011         	call	_d1command
  5538   001FC6  0900               	iorlw	0
  5539   001FC8  B4D8               	btfsc	status,2,c
  5540   001FCA  D7F7               	goto	i2l1355
  5541                           
  5542                           ;afficheur.c: 264: c=(octet&0x0F);
  5543   001FCC  5008               	movf	draw_hex8@octet^0,w,c
  5544   001FCE  0B0F               	andlw	15
  5545   001FD0  6E09               	movwf	draw_hex8@c^0,c
  5546                           
  5547                           ;afficheur.c: 265: if (c>9)
  5548   001FD2  0E09               	movlw	9
  5549   001FD4  6409               	cpfsgt	draw_hex8@c^0,c
  5550   001FD6  D003               	goto	i2l4576
  5551                           
  5552                           ;afficheur.c: 266: c=c+0x17;
  5553   001FD8  5009               	movf	draw_hex8@c^0,w,c
  5554   001FDA  0F17               	addlw	23
  5555   001FDC  D002               	goto	L6
  5556   001FDE                     i2l4576:
  5557                           
  5558                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5559   001FDE  5009               	movf	draw_hex8@c^0,w,c
  5560   001FE0  0F10               	addlw	16
  5561   001FE2                     L6:
  5562   001FE2  6E09               	movwf	draw_hex8@c^0,c
  5563   001FE4  D001               	goto	i2l4578
  5564   001FE6                     i2l1360:
  5565                           
  5566                           ;afficheur.c: 270: __nop();
  5567   001FE6  F000               	nop	
  5568   001FE8                     i2l4578:
  5569   001FE8  0EC0               	movlw	192
  5570   001FEA  6E05               	movwf	d1command@cmd^0,c
  5571   001FEC  5009               	movf	draw_hex8@c^0,w,c
  5572   001FEE  EC0E  F011         	call	_d1command
  5573   001FF2  0900               	iorlw	0
  5574   001FF4  A4D8               	btfss	status,2,c
  5575   001FF6  0012               	return	
  5576   001FF8  D7F6               	goto	i2l1360
  5577   001FFA                     __end_of_draw_hex8:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _draw_dec8 *****************
  5581 ;; Defined at:
  5582 ;;		line 274 in file "afficheur.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  octet           1    wreg     unsigned char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  octet           1   16[COMRAM] unsigned char 
  5587 ;;  c               1   19[COMRAM] unsigned char 
  5588 ;;  dix             1   18[COMRAM] unsigned char 
  5589 ;;  cent            1   17[COMRAM] unsigned char 
  5590 ;;  unit            1   15[COMRAM] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5604 ;;Total ram usage:        6 bytes
  5605 ;; Hardware stack levels used: 1
  5606 ;; Hardware stack levels required when called: 3
  5607 ;; This function calls:
  5608 ;;		___awdiv
  5609 ;;		_d1command
  5610 ;; This function is called by:
  5611 ;;		_tache1
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text28
  5616   001C86                     __ptext28:
  5617                           	callstack 0
  5618   001C86                     _draw_dec8:
  5619                           	callstack 24
  5620                           
  5621                           ;incstack = 0
  5622                           ;draw_dec8@octet stored from wreg
  5623   001C86  6E11               	movwf	draw_dec8@octet^0,c
  5624                           
  5625                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5626   001C88  C011  F007         	movff	draw_dec8@octet,___awdiv@dividend
  5627   001C8C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5628   001C8E  0E00               	movlw	0
  5629   001C90  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5630   001C92  0E64               	movlw	100
  5631   001C94  6E09               	movwf	___awdiv@divisor^0,c
  5632   001C96  EC1E  F00F         	call	___awdiv	;wreg free
  5633   001C9A  5007               	movf	?___awdiv^0,w,c
  5634   001C9C  6E12               	movwf	draw_dec8@cent^0,c
  5635                           
  5636                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5637   001C9E  5012               	movf	draw_dec8@cent^0,w,c
  5638   001CA0  0D9C               	mullw	156
  5639   001CA2  50F3               	movf	243,w,c
  5640   001CA4  2411               	addwf	draw_dec8@octet^0,w,c
  5641   001CA6  6E13               	movwf	draw_dec8@dix^0,c
  5642                           
  5643                           ;afficheur.c: 279: dix = dix/10;
  5644   001CA8  C013  F007         	movff	draw_dec8@dix,___awdiv@dividend
  5645   001CAC  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5646   001CAE  0E00               	movlw	0
  5647   001CB0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5648   001CB2  0E0A               	movlw	10
  5649   001CB4  6E09               	movwf	___awdiv@divisor^0,c
  5650   001CB6  EC1E  F00F         	call	___awdiv	;wreg free
  5651   001CBA  5007               	movf	?___awdiv^0,w,c
  5652   001CBC  6E13               	movwf	draw_dec8@dix^0,c
  5653                           
  5654                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5655   001CBE  5012               	movf	draw_dec8@cent^0,w,c
  5656   001CC0  0D9C               	mullw	156
  5657   001CC2  CFF3 F00F          	movff	prodl,??_draw_dec8
  5658   001CC6  5013               	movf	draw_dec8@dix^0,w,c
  5659   001CC8  0DF6               	mullw	246
  5660   001CCA  50F3               	movf	243,w,c
  5661   001CCC  240F               	addwf	??_draw_dec8^0,w,c
  5662   001CCE  2411               	addwf	draw_dec8@octet^0,w,c
  5663   001CD0  6E10               	movwf	draw_dec8@unit^0,c
  5664                           
  5665                           ;afficheur.c: 282: c=cent+0x10;
  5666   001CD2  5012               	movf	draw_dec8@cent^0,w,c
  5667   001CD4  0F10               	addlw	16
  5668   001CD6  6E14               	movwf	draw_dec8@c^0,c
  5669                           
  5670                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5671   001CD8  D001               	goto	i2l4516
  5672   001CDA                     i2l1366:
  5673                           
  5674                           ;afficheur.c: 284: __nop();
  5675   001CDA  F000               	nop	
  5676   001CDC                     i2l4516:
  5677   001CDC  0EC0               	movlw	192
  5678   001CDE  6E05               	movwf	d1command@cmd^0,c
  5679   001CE0  5014               	movf	draw_dec8@c^0,w,c
  5680   001CE2  EC0E  F011         	call	_d1command
  5681   001CE6  0900               	iorlw	0
  5682   001CE8  B4D8               	btfsc	status,2,c
  5683   001CEA  D7F7               	goto	i2l1366
  5684                           
  5685                           ;afficheur.c: 286: c=dix+0x10;
  5686   001CEC  5013               	movf	draw_dec8@dix^0,w,c
  5687   001CEE  0F10               	addlw	16
  5688   001CF0  6E14               	movwf	draw_dec8@c^0,c
  5689                           
  5690                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5691   001CF2  D001               	goto	i2l4520
  5692   001CF4                     i2l1369:
  5693                           
  5694                           ;afficheur.c: 288: __nop();
  5695   001CF4  F000               	nop	
  5696   001CF6                     i2l4520:
  5697   001CF6  0EC0               	movlw	192
  5698   001CF8  6E05               	movwf	d1command@cmd^0,c
  5699   001CFA  5014               	movf	draw_dec8@c^0,w,c
  5700   001CFC  EC0E  F011         	call	_d1command
  5701   001D00  0900               	iorlw	0
  5702   001D02  B4D8               	btfsc	status,2,c
  5703   001D04  D7F7               	goto	i2l1369
  5704                           
  5705                           ;afficheur.c: 290: c=unit+0x10;
  5706   001D06  5010               	movf	draw_dec8@unit^0,w,c
  5707   001D08  0F10               	addlw	16
  5708   001D0A  6E14               	movwf	draw_dec8@c^0,c
  5709                           
  5710                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5711   001D0C  D001               	goto	i2l4524
  5712   001D0E                     i2l1372:
  5713                           
  5714                           ;afficheur.c: 292: __nop();
  5715   001D0E  F000               	nop	
  5716   001D10                     i2l4524:
  5717   001D10  0EC0               	movlw	192
  5718   001D12  6E05               	movwf	d1command@cmd^0,c
  5719   001D14  5014               	movf	draw_dec8@c^0,w,c
  5720   001D16  EC0E  F011         	call	_d1command
  5721   001D1A  0900               	iorlw	0
  5722   001D1C  A4D8               	btfss	status,2,c
  5723   001D1E  0012               	return	
  5724   001D20  D7F6               	goto	i2l1372
  5725   001D22                     __end_of_draw_dec8:
  5726                           	callstack 0
  5727                           
  5728 ;; *************** function _clear_text *****************
  5729 ;; Defined at:
  5730 ;;		line 307 in file "afficheur.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;		None
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  add             2    8[COMRAM] unsigned int 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;Total ram usage:        2 bytes
  5749 ;; Hardware stack levels used: 1
  5750 ;; Hardware stack levels required when called: 3
  5751 ;; This function calls:
  5752 ;;		_d1command
  5753 ;;		_d2command
  5754 ;; This function is called by:
  5755 ;;		_tache1
  5756 ;; This function uses a non-reentrant model
  5757 ;;
  5758                           
  5759                           	psect	text29
  5760   0022F6                     __ptext29:
  5761                           	callstack 0
  5762   0022F6                     _clear_text:
  5763                           	callstack 24
  5764                           
  5765                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5766                           
  5767                           ;incstack = 0
  5768   0022F6  0E00               	movlw	0
  5769   0022F8  6E05               	movwf	d2command@d2^0,c
  5770   0022FA  0E24               	movlw	36
  5771   0022FC  6E06               	movwf	d2command@cmd^0,c
  5772   0022FE  0E00               	movlw	0
  5773   002300  EC7B  F010         	call	_d2command
  5774                           
  5775                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5776   002304  0E00               	movlw	0
  5777   002306  6E0A               	movwf	(clear_text@add+1)^0,c
  5778   002308  0E00               	movlw	0
  5779   00230A  6E09               	movwf	clear_text@add^0,c
  5780   00230C                     i2l4446:
  5781                           
  5782                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5783   00230C  0EC0               	movlw	192
  5784   00230E  6E05               	movwf	d1command@cmd^0,c
  5785   002310  0E00               	movlw	0
  5786   002312  EC0E  F011         	call	_d1command
  5787   002316  4A09               	infsnz	clear_text@add^0,f,c
  5788   002318  2A0A               	incf	(clear_text@add+1)^0,f,c
  5789   00231A  0E80               	movlw	128
  5790   00231C  180A               	xorwf	(clear_text@add+1)^0,w,c
  5791   00231E  1009               	iorwf	clear_text@add^0,w,c
  5792   002320  B4D8               	btfsc	status,2,c
  5793   002322  0012               	return	
  5794   002324  D7F3               	goto	i2l4446
  5795   002326                     __end_of_clear_text:
  5796                           	callstack 0
  5797                           
  5798 ;; *************** function _clear_line *****************
  5799 ;; Defined at:
  5800 ;;		line 318 in file "afficheur.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  line            1    wreg     unsigned char 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  line            1   14[COMRAM] unsigned char 
  5805 ;;  column          1   15[COMRAM] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;Total ram usage:        2 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 4
  5822 ;; This function calls:
  5823 ;;		_draw_char
  5824 ;;		_goto_lico
  5825 ;; This function is called by:
  5826 ;;		_tache1
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text30
  5831   00240E                     __ptext30:
  5832                           	callstack 0
  5833   00240E                     _clear_line:
  5834                           	callstack 23
  5835                           
  5836                           ;incstack = 0
  5837                           ;clear_line@line stored from wreg
  5838   00240E  6E0F               	movwf	clear_line@line^0,c
  5839                           
  5840                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5841   002410  0E00               	movlw	0
  5842   002412  6E10               	movwf	clear_line@column^0,c
  5843   002414                     i2l4590:
  5844                           
  5845                           ;afficheur.c: 321: goto_lico(line, column);
  5846   002414  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5847   002418  500F               	movf	clear_line@line^0,w,c
  5848   00241A  ECFD  F00F         	call	_goto_lico
  5849                           
  5850                           ;afficheur.c: 322: draw_char(' ');
  5851   00241E  0E20               	movlw	32
  5852   002420  EC62  F011         	call	_draw_char
  5853   002424  2A10               	incf	clear_line@column^0,f,c
  5854   002426  0E27               	movlw	39
  5855   002428  6410               	cpfsgt	clear_line@column^0,c
  5856   00242A  D7F4               	goto	i2l4590
  5857   00242C  0012               	return	
  5858   00242E                     __end_of_clear_line:
  5859                           	callstack 0
  5860                           
  5861 ;; *************** function _draw_char *****************
  5862 ;; Defined at:
  5863 ;;		line 228 in file "afficheur.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  dccar           1    wreg     unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  dccar           1    7[COMRAM] unsigned char 
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2, status,0, cstack
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;Total ram usage:        1 bytes
  5882 ;; Hardware stack levels used: 1
  5883 ;; Hardware stack levels required when called: 3
  5884 ;; This function calls:
  5885 ;;		_d1command
  5886 ;; This function is called by:
  5887 ;;		_tache1
  5888 ;;		_clear_line
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text31
  5893   0022C4                     __ptext31:
  5894                           	callstack 0
  5895   0022C4                     _draw_char:
  5896                           	callstack 24
  5897                           
  5898                           ;incstack = 0
  5899                           ;draw_char@dccar stored from wreg
  5900   0022C4  6E08               	movwf	draw_char@dccar^0,c
  5901                           
  5902                           ;afficheur.c: 230: if (dccar<32)
  5903   0022C6  0E20               	movlw	32
  5904   0022C8  6008               	cpfslt	draw_char@dccar^0,c
  5905   0022CA  D002               	goto	i2l4352
  5906                           
  5907                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5908   0022CC  0E3F               	movlw	63
  5909   0022CE  6E08               	movwf	draw_char@dccar^0,c
  5910   0022D0                     i2l4352:
  5911                           
  5912                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5913   0022D0  0E9F               	movlw	159
  5914   0022D2  6408               	cpfsgt	draw_char@dccar^0,c
  5915   0022D4  D002               	goto	i2l4356
  5916                           
  5917                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5918   0022D6  0E3F               	movlw	63
  5919   0022D8  6E08               	movwf	draw_char@dccar^0,c
  5920   0022DA                     i2l4356:
  5921                           
  5922                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5923   0022DA  5008               	movf	draw_char@dccar^0,w,c
  5924   0022DC  0FE0               	addlw	224
  5925   0022DE  6E08               	movwf	draw_char@dccar^0,c
  5926                           
  5927                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5928   0022E0  D001               	goto	i2l4358
  5929   0022E2                     i2l1336:
  5930   0022E2  F000               	nop	
  5931   0022E4                     i2l4358:
  5932   0022E4  0EC0               	movlw	192
  5933   0022E6  6E05               	movwf	d1command@cmd^0,c
  5934   0022E8  5008               	movf	draw_char@dccar^0,w,c
  5935   0022EA  EC0E  F011         	call	_d1command
  5936   0022EE  0900               	iorlw	0
  5937   0022F0  A4D8               	btfss	status,2,c
  5938   0022F2  0012               	return	
  5939   0022F4  D7F6               	goto	i2l1336
  5940   0022F6                     __end_of_draw_char:
  5941                           	callstack 0
  5942                           
  5943 ;; *************** function _clear_graphics *****************
  5944 ;; Defined at:
  5945 ;;		line 368 in file "afficheur.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;		None
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  add             2    8[COMRAM] unsigned int 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      void 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5963 ;;Total ram usage:        2 bytes
  5964 ;; Hardware stack levels used: 1
  5965 ;; Hardware stack levels required when called: 3
  5966 ;; This function calls:
  5967 ;;		_d1command
  5968 ;;		_d2command
  5969 ;; This function is called by:
  5970 ;;		_tache1
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text32
  5975   002326                     __ptext32:
  5976                           	callstack 0
  5977   002326                     _clear_graphics:
  5978                           	callstack 24
  5979                           
  5980                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5981                           
  5982                           ;incstack = 0
  5983   002326  0E80               	movlw	128
  5984   002328  6E05               	movwf	d2command@d2^0,c
  5985   00232A  0E24               	movlw	36
  5986   00232C  6E06               	movwf	d2command@cmd^0,c
  5987   00232E  0E00               	movlw	0
  5988   002330  EC7B  F010         	call	_d2command
  5989                           
  5990                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5991   002334  0E80               	movlw	128
  5992   002336  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5993   002338  0E00               	movlw	0
  5994   00233A  6E09               	movwf	clear_graphics@add^0,c
  5995   00233C                     i2l4460:
  5996                           
  5997                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5998   00233C  0EC0               	movlw	192
  5999   00233E  6E05               	movwf	d1command@cmd^0,c
  6000   002340  0E00               	movlw	0
  6001   002342  EC0E  F011         	call	_d1command
  6002   002346  4A09               	infsnz	clear_graphics@add^0,f,c
  6003   002348  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  6004   00234A  0EF8               	movlw	248
  6005   00234C  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  6006   00234E  1009               	iorwf	clear_graphics@add^0,w,c
  6007   002350  B4D8               	btfsc	status,2,c
  6008   002352  0012               	return	
  6009   002354  D7F3               	goto	i2l4460
  6010   002356                     __end_of_clear_graphics:
  6011                           	callstack 0
  6012                           
  6013 ;; *************** function _charger *****************
  6014 ;; Defined at:
  6015 ;;		line 432 in file "afficheur.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;Total ram usage:        0 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; Hardware stack levels required when called: 4
  6036 ;; This function calls:
  6037 ;;		_draw_string
  6038 ;;		_goto_lico
  6039 ;; This function is called by:
  6040 ;;		_tache1
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text33
  6045   0024DE                     __ptext33:
  6046                           	callstack 0
  6047   0024DE                     _charger:
  6048                           	callstack 23
  6049                           
  6050                           ;afficheur.c: 434: goto_lico(14,0);
  6051                           
  6052                           ;incstack = 0
  6053   0024DE  0E00               	movlw	0
  6054   0024E0  6E09               	movwf	goto_lico@colonne^0,c
  6055   0024E2  0E0E               	movlw	14
  6056   0024E4  ECFD  F00F         	call	_goto_lico
  6057                           
  6058                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  6059   0024E8  0E01               	movlw	low STR_21
  6060   0024EA  6E08               	movwf	draw_string@tableau^0,c
  6061   0024EC  0E10               	movlw	high STR_21
  6062   0024EE  6E09               	movwf	(draw_string@tableau+1)^0,c
  6063   0024F0  ECD8  F00E         	call	_draw_string	;wreg free
  6064   0024F4  0012               	return		;funcret
  6065   0024F6                     __end_of_charger:
  6066                           	callstack 0
  6067                           
  6068 ;; *************** function _goto_lico *****************
  6069 ;; Defined at:
  6070 ;;		line 295 in file "afficheur.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  ligne           1    wreg     unsigned char 
  6073 ;;  colonne         1    8[COMRAM] unsigned char 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  ligne           1   11[COMRAM] unsigned char 
  6076 ;;  adr             2   12[COMRAM] unsigned int 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      void 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6086 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;Total ram usage:        6 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; Hardware stack levels required when called: 3
  6093 ;; This function calls:
  6094 ;;		_d2command
  6095 ;; This function is called by:
  6096 ;;		_tache1
  6097 ;;		_clear_line
  6098 ;;		_charger
  6099 ;;		_vide
  6100 ;;		_marche
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text34
  6105   001FFA                     __ptext34:
  6106                           	callstack 0
  6107   001FFA                     _goto_lico:
  6108                           	callstack 23
  6109                           
  6110                           ;incstack = 0
  6111                           ;goto_lico@ligne stored from wreg
  6112   001FFA  6E0C               	movwf	goto_lico@ligne^0,c
  6113                           
  6114                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  6115   001FFC  0E7B               	movlw	123
  6116   001FFE  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6117   002000  0E00               	movlw	0
  6118   002002  6E0D               	movwf	goto_lico@adr^0,c
  6119                           
  6120                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  6121   002004  0E0F               	movlw	15
  6122   002006  640C               	cpfsgt	goto_lico@ligne^0,c
  6123   002008  D002               	goto	i2l4340
  6124   00200A  0E00               	movlw	0
  6125   00200C  6E0C               	movwf	goto_lico@ligne^0,c
  6126   00200E                     i2l4340:
  6127                           
  6128                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  6129   00200E  0E27               	movlw	39
  6130   002010  6409               	cpfsgt	goto_lico@colonne^0,c
  6131   002012  D002               	goto	i2l4344
  6132   002014  0E00               	movlw	0
  6133   002016  6E09               	movwf	goto_lico@colonne^0,c
  6134   002018                     i2l4344:
  6135                           
  6136                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  6137   002018  500C               	movf	goto_lico@ligne^0,w,c
  6138   00201A  0D28               	mullw	40
  6139   00201C  CFF3 F00A          	movff	prodl,??_goto_lico
  6140   002020  CFF4 F00B          	movff	prodh,??_goto_lico+1
  6141   002024  5009               	movf	goto_lico@colonne^0,w,c
  6142   002026  260A               	addwf	??_goto_lico^0,f,c
  6143   002028  0E00               	movlw	0
  6144   00202A  220B               	addwfc	(??_goto_lico+1)^0,f,c
  6145   00202C  500D               	movf	goto_lico@adr^0,w,c
  6146   00202E  240A               	addwf	??_goto_lico^0,w,c
  6147   002030  6E0D               	movwf	goto_lico@adr^0,c
  6148   002032  500E               	movf	(goto_lico@adr+1)^0,w,c
  6149   002034  200B               	addwfc	(??_goto_lico+1)^0,w,c
  6150   002036  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6151                           
  6152                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  6153   002038  D001               	goto	i2l4346
  6154   00203A                     i2l1380:
  6155                           
  6156                           ;afficheur.c: 304: __nop();
  6157   00203A  F000               	nop	
  6158   00203C                     i2l4346:
  6159   00203C  500E               	movf	(goto_lico@adr+1)^0,w,c
  6160   00203E  6E05               	movwf	d2command@d2^0,c
  6161   002040  0E24               	movlw	36
  6162   002042  6E06               	movwf	d2command@cmd^0,c
  6163   002044  500D               	movf	goto_lico@adr^0,w,c
  6164   002046  EC7B  F010         	call	_d2command
  6165   00204A  0900               	iorlw	0
  6166   00204C  A4D8               	btfss	status,2,c
  6167   00204E  0012               	return	
  6168   002050  D7F4               	goto	i2l1380
  6169   002052                     __end_of_goto_lico:
  6170                           	callstack 0
  6171                           
  6172 ;; *************** function _d2command *****************
  6173 ;; Defined at:
  6174 ;;		line 128 in file "afficheur.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  d1              1    wreg     unsigned char 
  6177 ;;  d2              1    4[COMRAM] unsigned char 
  6178 ;;  cmd             1    5[COMRAM] unsigned char 
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;  d1              1    6[COMRAM] unsigned char 
  6181 ;;  res             1    7[COMRAM] unsigned char 
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      unsigned char 
  6184 ;; Registers used:
  6185 ;;		wreg, status,2, status,0, cstack
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;Total ram usage:        4 bytes
  6196 ;; Hardware stack levels used: 1
  6197 ;; Hardware stack levels required when called: 2
  6198 ;; This function calls:
  6199 ;;		_delai_us_char
  6200 ;;		_wait_status_ok
  6201 ;;		_write_c_aff
  6202 ;;		_write_d_aff
  6203 ;; This function is called by:
  6204 ;;		_initialisation_afficheur
  6205 ;;		_goto_lico
  6206 ;;		_clear_text
  6207 ;;		_clear_graphics
  6208 ;;		_plot1
  6209 ;;		_clear_cgram
  6210 ;;		_plot0
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text35
  6215   0020F6                     __ptext35:
  6216                           	callstack 0
  6217   0020F6                     _d2command:
  6218                           	callstack 23
  6219                           
  6220                           ;incstack = 0
  6221                           ;d2command@d1 stored from wreg
  6222   0020F6  6E07               	movwf	d2command@d1^0,c
  6223                           
  6224                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6225   0020F8  0E00               	movlw	0
  6226   0020FA  6E08               	movwf	d2command@res^0,c
  6227                           
  6228                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6229   0020FC  EC52  F010         	call	_wait_status_ok	;wreg free
  6230   002100  06E8               	decf	wreg,f,c
  6231   002102  A4D8               	btfss	status,2,c
  6232   002104  D01E               	goto	i2l4250
  6233                           
  6234                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6235   002106  0E0C               	movlw	12
  6236   002108  ECF6  F011         	call	_delai_us_char
  6237                           
  6238                           ;afficheur.c: 137: write_d_aff(d1);
  6239   00210C  5007               	movf	d2command@d1^0,w,c
  6240   00210E  EC31  F012         	call	_write_d_aff
  6241                           
  6242                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6243   002112  EC52  F010         	call	_wait_status_ok	;wreg free
  6244   002116  06E8               	decf	wreg,f,c
  6245   002118  A4D8               	btfss	status,2,c
  6246   00211A  D013               	goto	i2l4250
  6247                           
  6248                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6249   00211C  0E0C               	movlw	12
  6250   00211E  ECF6  F011         	call	_delai_us_char
  6251                           
  6252                           ;afficheur.c: 141: write_d_aff(d2);
  6253   002122  5005               	movf	d2command@d2^0,w,c
  6254   002124  EC31  F012         	call	_write_d_aff
  6255                           
  6256                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6257   002128  EC52  F010         	call	_wait_status_ok	;wreg free
  6258   00212C  06E8               	decf	wreg,f,c
  6259   00212E  A4D8               	btfss	status,2,c
  6260   002130  D008               	goto	i2l4250
  6261                           
  6262                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6263   002132  0E0C               	movlw	12
  6264   002134  ECF6  F011         	call	_delai_us_char
  6265                           
  6266                           ;afficheur.c: 145: write_c_aff(cmd);
  6267   002138  5006               	movf	d2command@cmd^0,w,c
  6268   00213A  EC3E  F012         	call	_write_c_aff
  6269                           
  6270                           ;afficheur.c: 147: res=1;
  6271   00213E  0E01               	movlw	1
  6272   002140  6E08               	movwf	d2command@res^0,c
  6273   002142                     i2l4250:
  6274                           
  6275                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6276   002142  5008               	movf	d2command@res^0,w,c
  6277   002144  0012               	return		;funcret
  6278   002146                     __end_of_d2command:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _draw_string *****************
  6282 ;; Defined at:
  6283 ;;		line 242 in file "afficheur.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6286 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(8), 
  6287 ;;		 -> STR_22(14), STR_21(29), STR_20(4), STR_19(3), 
  6288 ;;		 -> STR_18(7), STR_17(5), STR_16(12), STR_15(12), 
  6289 ;;		 -> STR_14(6), STR_13(7), STR_12(9), STR_11(21), 
  6290 ;;		 -> STR_10(7), STR_9(10), STR_8(9), STR_7(6), 
  6291 ;;		 -> STR_6(13), STR_5(11), STR_4(7), STR_3(6), 
  6292 ;;		 -> STR_2(6), STR_1(8), RAM(3861), 
  6293 ;; Auto vars:     Size  Location     Type
  6294 ;;		None
  6295 ;; Return value:  Size  Location     Type
  6296 ;;                  1    wreg      void 
  6297 ;; Registers used:
  6298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6299 ;; Tracked objects:
  6300 ;;		On entry : 0/0
  6301 ;;		On exit  : 0/0
  6302 ;;		Unchanged: 0/0
  6303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;Total ram usage:        2 bytes
  6309 ;; Hardware stack levels used: 1
  6310 ;; Hardware stack levels required when called: 3
  6311 ;; This function calls:
  6312 ;;		_d1command
  6313 ;; This function is called by:
  6314 ;;		_tache1
  6315 ;;		_charger
  6316 ;;		_vide
  6317 ;;		_marche
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text36
  6322   001DB0                     __ptext36:
  6323                           	callstack 0
  6324   001DB0                     _draw_string:
  6325                           	callstack 23
  6326                           
  6327                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6328                           
  6329                           ;incstack = 0
  6330   001DB0  D01C               	goto	i2l4366
  6331   001DB2                     i2l1344:
  6332                           
  6333                           ;afficheur.c: 247: __nop();
  6334   001DB2  F000               	nop	
  6335   001DB4                     i2l4362:
  6336   001DB4  0EC0               	movlw	192
  6337   001DB6  6E05               	movwf	d1command@cmd^0,c
  6338   001DB8  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6339   001DBC  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6340   001DC0  0E00               	movlw	low (__smallconst shr (0+16))
  6341   001DC2  6EF8               	movwf	tblptru,c
  6342   001DC4  0E0F               	movlw	(high __ramtop+-1)
  6343   001DC6  64F7               	cpfsgt	tblptrh,c
  6344   001DC8  D003               	bra	i2u232_47
  6345   001DCA  0008               	tblrd		*
  6346   001DCC  50F5               	movf	tablat,w,c
  6347   001DCE  D005               	bra	i2u232_40
  6348   001DD0                     i2u232_47:
  6349   001DD0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6350   001DD4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6351   001DD8  50EF               	movf	indf0,w,c
  6352   001DDA                     i2u232_40:
  6353   001DDA  0FE0               	addlw	224
  6354   001DDC  EC0E  F011         	call	_d1command
  6355   001DE0  0900               	iorlw	0
  6356   001DE2  B4D8               	btfsc	status,2,c
  6357   001DE4  D7E6               	goto	i2l1344
  6358                           
  6359                           ;afficheur.c: 248: tableau++;
  6360   001DE6  4A08               	infsnz	draw_string@tableau^0,f,c
  6361   001DE8  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6362   001DEA                     i2l4366:
  6363   001DEA  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6364   001DEE  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6365   001DF2  0E00               	movlw	low (__smallconst shr (0+16))
  6366   001DF4  6EF8               	movwf	tblptru,c
  6367   001DF6  0E0F               	movlw	(high __ramtop+-1)
  6368   001DF8  64F7               	cpfsgt	tblptrh,c
  6369   001DFA  D003               	bra	i2u234_47
  6370   001DFC  0008               	tblrd		*
  6371   001DFE  50F5               	movf	tablat,w,c
  6372   001E00  D005               	bra	i2u234_40
  6373   001E02                     i2u234_47:
  6374   001E02  CFF6 FFE9          	movff	tblptrl,fsr0l
  6375   001E06  CFF7 FFEA          	movff	tblptrh,fsr0h
  6376   001E0A  50EF               	movf	indf0,w,c
  6377   001E0C                     i2u234_40:
  6378   001E0C  0900               	iorlw	0
  6379   001E0E  B4D8               	btfsc	status,2,c
  6380   001E10  0012               	return	
  6381   001E12  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6382   001E16  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6383   001E1A  0E00               	movlw	low (__smallconst shr (0+16))
  6384   001E1C  6EF8               	movwf	tblptru,c
  6385   001E1E  0E0F               	movlw	(high __ramtop+-1)
  6386   001E20  64F7               	cpfsgt	tblptrh,c
  6387   001E22  D003               	bra	i2u236_47
  6388   001E24  0008               	tblrd		*
  6389   001E26  50F5               	movf	tablat,w,c
  6390   001E28  D005               	bra	i2u236_40
  6391   001E2A                     i2u236_47:
  6392   001E2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6393   001E2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6394   001E32  50EF               	movf	indf0,w,c
  6395   001E34                     i2u236_40:
  6396   001E34  0900               	iorlw	0
  6397   001E36  B4D8               	btfsc	status,2,c
  6398   001E38  0012               	return	
  6399   001E3A  D7BC               	goto	i2l4362
  6400   001E3C                     __end_of_draw_string:
  6401                           	callstack 0
  6402                           
  6403 ;; *************** function _d1command *****************
  6404 ;; Defined at:
  6405 ;;		line 106 in file "afficheur.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  d1              1    wreg     unsigned char 
  6408 ;;  cmd             1    4[COMRAM] unsigned char 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  d1              1    5[COMRAM] unsigned char 
  6411 ;;  res             1    6[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  1    wreg      unsigned char 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0, cstack
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6421 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;Total ram usage:        3 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; Hardware stack levels required when called: 2
  6428 ;; This function calls:
  6429 ;;		_delai_us_char
  6430 ;;		_wait_status_ok
  6431 ;;		_write_c_aff
  6432 ;;		_write_d_aff
  6433 ;; This function is called by:
  6434 ;;		_initialisation_afficheur
  6435 ;;		_draw_char
  6436 ;;		_draw_string
  6437 ;;		_draw_hex8
  6438 ;;		_draw_dec8
  6439 ;;		_clear_text
  6440 ;;		_clear_graphics
  6441 ;;		_clear_cgram
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text37
  6446   00221C                     __ptext37:
  6447                           	callstack 0
  6448   00221C                     _d1command:
  6449                           	callstack 23
  6450                           
  6451                           ;incstack = 0
  6452                           ;d1command@d1 stored from wreg
  6453   00221C  6E06               	movwf	d1command@d1^0,c
  6454                           
  6455                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6456   00221E  0E00               	movlw	0
  6457   002220  6E07               	movwf	d1command@res^0,c
  6458                           
  6459                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6460   002222  EC52  F010         	call	_wait_status_ok	;wreg free
  6461   002226  06E8               	decf	wreg,f,c
  6462   002228  A4D8               	btfss	status,2,c
  6463   00222A  D013               	goto	i2l4224
  6464                           
  6465                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6466   00222C  0E0C               	movlw	12
  6467   00222E  ECF6  F011         	call	_delai_us_char
  6468                           
  6469                           ;afficheur.c: 115: write_d_aff(d1);
  6470   002232  5006               	movf	d1command@d1^0,w,c
  6471   002234  EC31  F012         	call	_write_d_aff
  6472                           
  6473                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6474   002238  EC52  F010         	call	_wait_status_ok	;wreg free
  6475   00223C  06E8               	decf	wreg,f,c
  6476   00223E  A4D8               	btfss	status,2,c
  6477   002240  D008               	goto	i2l4224
  6478                           
  6479                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6480   002242  0E0C               	movlw	12
  6481   002244  ECF6  F011         	call	_delai_us_char
  6482                           
  6483                           ;afficheur.c: 119: write_c_aff(cmd);
  6484   002248  5005               	movf	d1command@cmd^0,w,c
  6485   00224A  EC3E  F012         	call	_write_c_aff
  6486                           
  6487                           ;afficheur.c: 121: res=1;
  6488   00224E  0E01               	movlw	1
  6489   002250  6E07               	movwf	d1command@res^0,c
  6490   002252                     i2l4224:
  6491                           
  6492                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6493   002252  5007               	movf	d1command@res^0,w,c
  6494   002254  0012               	return		;funcret
  6495   002256                     __end_of_d1command:
  6496                           	callstack 0
  6497                           
  6498 ;; *************** function _write_d_aff *****************
  6499 ;; Defined at:
  6500 ;;		line 4 in file "afficheur.c"
  6501 ;; Parameters:    Size  Location     Type
  6502 ;;  data            1    wreg     unsigned char 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;  data            1    0[COMRAM] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  1    wreg      void 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;Total ram usage:        1 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; This function calls:
  6521 ;;		Nothing
  6522 ;; This function is called by:
  6523 ;;		_d1command
  6524 ;;		_d2command
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text38
  6529   002462                     __ptext38:
  6530                           	callstack 0
  6531   002462                     _write_d_aff:
  6532                           	callstack 24
  6533                           
  6534                           ;incstack = 0
  6535                           ;write_d_aff@data stored from wreg
  6536   002462  6E01               	movwf	write_d_aff@data^0,c
  6537                           
  6538                           ;afficheur.c: 6: LATH=data;
  6539   002464  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6540                           
  6541                           ;afficheur.c: 7: TRISH=0x00;
  6542   002468  0E00               	movlw	0
  6543   00246A  6E99               	movwf	153,c	;volatile
  6544                           
  6545                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6546   00246C  9091               	bcf	145,0,c	;volatile
  6547                           
  6548                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6549   00246E  9691               	bcf	145,3,c	;volatile
  6550                           
  6551                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6552   002470  9491               	bcf	145,2,c	;volatile
  6553                           
  6554                           ;afficheur.c: 11: __nop();
  6555   002472  F000               	nop	
  6556                           
  6557                           ;afficheur.c: 12: __nop();
  6558   002474  F000               	nop	
  6559                           
  6560                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6561   002476  8491               	bsf	145,2,c	;volatile
  6562                           
  6563                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6564   002478  8691               	bsf	145,3,c	;volatile
  6565   00247A  0012               	return		;funcret
  6566   00247C                     __end_of_write_d_aff:
  6567                           	callstack 0
  6568                           
  6569 ;; *************** function _write_c_aff *****************
  6570 ;; Defined at:
  6571 ;;		line 17 in file "afficheur.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  command         1    wreg     unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  command         1    0[COMRAM] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;Total ram usage:        1 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_command
  6595 ;;		_d1command
  6596 ;;		_d2command
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text39
  6601   00247C                     __ptext39:
  6602                           	callstack 0
  6603   00247C                     _write_c_aff:
  6604                           	callstack 24
  6605                           
  6606                           ;incstack = 0
  6607                           ;write_c_aff@command stored from wreg
  6608   00247C  6E01               	movwf	write_c_aff@command^0,c
  6609                           
  6610                           ;afficheur.c: 19: LATH=command;
  6611   00247E  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6612                           
  6613                           ;afficheur.c: 20: TRISH=0x00;
  6614   002482  0E00               	movlw	0
  6615   002484  6E99               	movwf	153,c	;volatile
  6616                           
  6617                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6618   002486  8091               	bsf	145,0,c	;volatile
  6619                           
  6620                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6621   002488  9691               	bcf	145,3,c	;volatile
  6622                           
  6623                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6624   00248A  9491               	bcf	145,2,c	;volatile
  6625                           
  6626                           ;afficheur.c: 24: __nop();
  6627   00248C  F000               	nop	
  6628                           
  6629                           ;afficheur.c: 25: __nop();
  6630   00248E  F000               	nop	
  6631                           
  6632                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6633   002490  8491               	bsf	145,2,c	;volatile
  6634                           
  6635                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6636   002492  8691               	bsf	145,3,c	;volatile
  6637   002494  0012               	return		;funcret
  6638   002496                     __end_of_write_c_aff:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function _wait_status_ok *****************
  6642 ;; Defined at:
  6643 ;;		line 53 in file "afficheur.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;		None
  6646 ;; Auto vars:     Size  Location     Type
  6647 ;;  res             1    3[COMRAM] unsigned char 
  6648 ;;  status          1    2[COMRAM] unsigned char 
  6649 ;;  err             1    1[COMRAM] unsigned char 
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      unsigned char 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0, cstack
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;Total ram usage:        3 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 1
  6666 ;; This function calls:
  6667 ;;		_delai_us_char
  6668 ;; This function is called by:
  6669 ;;		_command
  6670 ;;		_d1command
  6671 ;;		_d2command
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text40
  6676   0020A4                     __ptext40:
  6677                           	callstack 0
  6678   0020A4                     _wait_status_ok:
  6679                           	callstack 23
  6680                           
  6681                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6682                           
  6683                           ;incstack = 0
  6684   0020A4  0E00               	movlw	0
  6685   0020A6  6E02               	movwf	wait_status_ok@err^0,c
  6686                           
  6687                           ;afficheur.c: 58: res=2;
  6688   0020A8  0E02               	movlw	2
  6689   0020AA  D01E               	goto	L7
  6690   0020AC                     i2l1294:
  6691                           
  6692                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6693   0020AC  6899               	setf	153,c	;volatile
  6694                           
  6695                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6696   0020AE  8091               	bsf	145,0,c	;volatile
  6697                           
  6698                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6699   0020B0  9691               	bcf	145,3,c	;volatile
  6700                           
  6701                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6702   0020B2  9291               	bcf	145,1,c	;volatile
  6703                           
  6704                           ;afficheur.c: 65: __nop();
  6705   0020B4  F000               	nop	
  6706                           
  6707                           ;afficheur.c: 66: status=PORTH;
  6708   0020B6  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6709                           
  6710                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6711   0020BA  8291               	bsf	145,1,c	;volatile
  6712                           
  6713                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6714   0020BC  8691               	bsf	145,3,c	;volatile
  6715                           
  6716                           ;afficheur.c: 70: status=(status&0x03);
  6717   0020BE  5003               	movf	wait_status_ok@status^0,w,c
  6718   0020C0  0B03               	andlw	3
  6719   0020C2  6E03               	movwf	wait_status_ok@status^0,c
  6720                           
  6721                           ;afficheur.c: 71: if (status!=0x03)
  6722   0020C4  0E03               	movlw	3
  6723   0020C6  1803               	xorwf	wait_status_ok@status^0,w,c
  6724   0020C8  B4D8               	btfsc	status,2,c
  6725   0020CA  D00D               	goto	i2l2608
  6726                           
  6727                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6728   0020CC  2A02               	incf	wait_status_ok@err^0,f,c
  6729                           
  6730                           ;afficheur.c: 74: delai_us_char(12);
  6731   0020CE  0E0C               	movlw	12
  6732   0020D0  ECF6  F011         	call	_delai_us_char
  6733                           
  6734                           ;afficheur.c: 75: if (err>=250)
  6735   0020D4  0EF9               	movlw	249
  6736   0020D6  6402               	cpfsgt	wait_status_ok@err^0,c
  6737   0020D8  D008               	goto	i2l2610
  6738                           
  6739                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6740   0020DA  9EF2               	bcf	242,7,c	;volatile
  6741                           
  6742                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6743   0020DC  948B               	bcf	139,2,c	;volatile
  6744   0020DE  828B               	bsf	139,1,c	;volatile
  6745   0020E0  808F               	bsf	143,0,c	;volatile
  6746                           
  6747                           ;afficheur.c: 79: res=0;
  6748   0020E2  0E00               	movlw	0
  6749   0020E4  D001               	goto	L7
  6750   0020E6                     i2l2608:
  6751                           
  6752                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6753   0020E6  0E01               	movlw	1
  6754   0020E8                     L7:
  6755   0020E8  6E04               	movwf	wait_status_ok@res^0,c
  6756   0020EA                     i2l2610:
  6757   0020EA  0E02               	movlw	2
  6758   0020EC  1804               	xorwf	wait_status_ok@res^0,w,c
  6759   0020EE  B4D8               	btfsc	status,2,c
  6760   0020F0  D7DD               	goto	i2l1294
  6761                           
  6762                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6763   0020F2  5004               	movf	wait_status_ok@res^0,w,c
  6764   0020F4  0012               	return		;funcret
  6765   0020F6                     __end_of_wait_status_ok:
  6766                           	callstack 0
  6767                           
  6768 ;; *************** function _delai_us_char *****************
  6769 ;; Defined at:
  6770 ;;		line 154 in file "afficheur.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  ucdelai         1    wreg     unsigned char 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;Total ram usage:        1 bytes
  6789 ;; Hardware stack levels used: 1
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_wait_status_ok
  6794 ;;		_command
  6795 ;;		_d1command
  6796 ;;		_d2command
  6797 ;;		_initialisation_afficheur
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           	psect	text41
  6802   0023EC                     __ptext41:
  6803                           	callstack 0
  6804   0023EC                     _delai_us_char:
  6805                           	callstack 23
  6806                           
  6807                           ;incstack = 0
  6808                           ;delai_us_char@ucdelai stored from wreg
  6809   0023EC  6E01               	movwf	delai_us_char@ucdelai^0,c
  6810                           
  6811                           ;afficheur.c: 157: while (ucdelai>0)
  6812   0023EE  D00B               	goto	i2l2556
  6813   0023F0                     i2l1318:
  6814                           
  6815                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6816   0023F0  F000               	nop	
  6817   0023F2  F000               	nop	
  6818   0023F4  F000               	nop	
  6819   0023F6  F000               	nop	
  6820   0023F8  F000               	nop	
  6821   0023FA  F000               	nop	
  6822   0023FC  F000               	nop	
  6823   0023FE  F000               	nop	
  6824   002400  F000               	nop	
  6825   002402  F000               	nop	
  6826                           
  6827                           ;afficheur.c: 160: ucdelai--;
  6828   002404  0601               	decf	delai_us_char@ucdelai^0,f,c
  6829   002406                     i2l2556:
  6830   002406  5001               	movf	delai_us_char@ucdelai^0,w,c
  6831   002408  B4D8               	btfsc	status,2,c
  6832   00240A  0012               	return	
  6833   00240C  D7F1               	goto	i2l1318
  6834   00240E                     __end_of_delai_us_char:
  6835                           	callstack 0
  6836                           
  6837 ;; *************** function _Conversion *****************
  6838 ;; Defined at:
  6839 ;;		line 493 in file "afficheur.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  a               2   14[COMRAM] unsigned int 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  valeur_conve    2   18[COMRAM] int 
  6844 ;;  valeur_lue      2   16[COMRAM] int 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  2   14[COMRAM] int 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;Total ram usage:        6 bytes
  6859 ;; Hardware stack levels used: 1
  6860 ;; Hardware stack levels required when called: 1
  6861 ;; This function calls:
  6862 ;;		___awdiv
  6863 ;;		___wmul
  6864 ;; This function is called by:
  6865 ;;		_tache1
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text42
  6870   0021DC                     __ptext42:
  6871                           	callstack 0
  6872   0021DC                     _Conversion:
  6873                           	callstack 26
  6874                           
  6875                           ;afficheur.c: 494: int valeur_lue = a;
  6876                           
  6877                           ;incstack = 0
  6878   0021DC  C00F  F011         	movff	Conversion@a,Conversion@valeur_lue
  6879   0021E0  C010  F012         	movff	Conversion@a+1,Conversion@valeur_lue+1
  6880                           
  6881                           ;afficheur.c: 495: int valeur_convertie = (valeur_lue * 100) / 255;
  6882   0021E4  C011  F001         	movff	Conversion@valeur_lue,___wmul@multiplier
  6883   0021E8  C012  F002         	movff	Conversion@valeur_lue+1,___wmul@multiplier+1
  6884   0021EC  0E00               	movlw	0
  6885   0021EE  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6886   0021F0  0E64               	movlw	100
  6887   0021F2  6E03               	movwf	___wmul@multiplicand^0,c
  6888   0021F4  ECC1  F011         	call	___wmul	;wreg free
  6889   0021F8  C001  F007         	movff	?___wmul,___awdiv@dividend
  6890   0021FC  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  6891   002200  0E00               	movlw	0
  6892   002202  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6893   002204  6809               	setf	___awdiv@divisor^0,c
  6894   002206  EC1E  F00F         	call	___awdiv	;wreg free
  6895   00220A  C007  F013         	movff	?___awdiv,Conversion@valeur_convertie
  6896   00220E  C008  F014         	movff	?___awdiv+1,Conversion@valeur_convertie+1
  6897                           
  6898                           ;afficheur.c: 497: return valeur_convertie;
  6899   002212  C013  F00F         	movff	Conversion@valeur_convertie,?_Conversion
  6900   002216  C014  F010         	movff	Conversion@valeur_convertie+1,?_Conversion+1
  6901   00221A  0012               	return		;funcret
  6902   00221C                     __end_of_Conversion:
  6903                           	callstack 0
  6904                           
  6905 ;; *************** function ___wmul *****************
  6906 ;; Defined at:
  6907 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  multiplier      2    0[COMRAM] unsigned int 
  6910 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;  product         2    4[COMRAM] unsigned int 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  2    0[COMRAM] unsigned int 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0, prodl, prodh
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6922 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6923 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;Total ram usage:        6 bytes
  6927 ;; Hardware stack levels used: 1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_Conversion
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text43
  6936   002382                     __ptext43:
  6937                           	callstack 0
  6938   002382                     ___wmul:
  6939                           	callstack 26
  6940                           
  6941                           ;incstack = 0
  6942   002382  5001               	movf	___wmul@multiplier^0,w,c
  6943   002384  0203               	mulwf	___wmul@multiplicand^0,c
  6944   002386  CFF3 F005          	movff	prodl,___wmul@product
  6945   00238A  CFF4 F006          	movff	prodh,___wmul@product+1
  6946   00238E  5001               	movf	___wmul@multiplier^0,w,c
  6947   002390  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6948   002392  50F3               	movf	243,w,c
  6949   002394  2606               	addwf	(___wmul@product+1)^0,f,c
  6950   002396  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6951   002398  0203               	mulwf	___wmul@multiplicand^0,c
  6952   00239A  50F3               	movf	243,w,c
  6953   00239C  2606               	addwf	(___wmul@product+1)^0,f,c
  6954   00239E  C005  F001         	movff	___wmul@product,?___wmul
  6955   0023A2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6956   0023A6  0012               	return		;funcret
  6957   0023A8                     __end_of___wmul:
  6958                           	callstack 0
  6959                           
  6960 ;; *************** function ___awdiv *****************
  6961 ;; Defined at:
  6962 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  dividend        2    6[COMRAM] int 
  6965 ;;  divisor         2    8[COMRAM] int 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  quotient        2   12[COMRAM] int 
  6968 ;;  sign            1   11[COMRAM] unsigned char 
  6969 ;;  counter         1   10[COMRAM] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  2    6[COMRAM] int 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6980 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;Total ram usage:        8 bytes
  6984 ;; Hardware stack levels used: 1
  6985 ;; This function calls:
  6986 ;;		Nothing
  6987 ;; This function is called by:
  6988 ;;		_draw_dec8
  6989 ;;		_plot1
  6990 ;;		_Conversion
  6991 ;;		_plot0
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text44
  6996   001E3C                     __ptext44:
  6997                           	callstack 0
  6998   001E3C                     ___awdiv:
  6999                           	callstack 26
  7000                           
  7001                           ;incstack = 0
  7002   001E3C  0E00               	movlw	0
  7003   001E3E  6E0C               	movwf	___awdiv@sign^0,c
  7004   001E40  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7005   001E42  D006               	goto	i2l4262
  7006   001E44  6C09               	negf	___awdiv@divisor^0,c
  7007   001E46  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  7008   001E48  B0D8               	btfsc	status,0,c
  7009   001E4A  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  7010   001E4C  0E01               	movlw	1
  7011   001E4E  6E0C               	movwf	___awdiv@sign^0,c
  7012   001E50                     i2l4262:
  7013   001E50  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  7014   001E52  D006               	goto	i2l4268
  7015   001E54  6C07               	negf	___awdiv@dividend^0,c
  7016   001E56  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  7017   001E58  B0D8               	btfsc	status,0,c
  7018   001E5A  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  7019   001E5C  0E01               	movlw	1
  7020   001E5E  1A0C               	xorwf	___awdiv@sign^0,f,c
  7021   001E60                     i2l4268:
  7022   001E60  0E00               	movlw	0
  7023   001E62  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  7024   001E64  0E00               	movlw	0
  7025   001E66  6E0D               	movwf	___awdiv@quotient^0,c
  7026   001E68  5009               	movf	___awdiv@divisor^0,w,c
  7027   001E6A  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  7028   001E6C  B4D8               	btfsc	status,2,c
  7029   001E6E  D01C               	goto	i2l4290
  7030   001E70  0E01               	movlw	1
  7031   001E72  6E0B               	movwf	___awdiv@counter^0,c
  7032   001E74  D004               	goto	i2l4276
  7033   001E76                     i2l4274:
  7034   001E76  90D8               	bcf	status,0,c
  7035   001E78  3609               	rlcf	___awdiv@divisor^0,f,c
  7036   001E7A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  7037   001E7C  2A0B               	incf	___awdiv@counter^0,f,c
  7038   001E7E                     i2l4276:
  7039   001E7E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7040   001E80  D7FA               	goto	i2l4274
  7041   001E82                     i2u217_40:
  7042   001E82  90D8               	bcf	status,0,c
  7043   001E84  360D               	rlcf	___awdiv@quotient^0,f,c
  7044   001E86  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  7045   001E88  5009               	movf	___awdiv@divisor^0,w,c
  7046   001E8A  5C07               	subwf	___awdiv@dividend^0,w,c
  7047   001E8C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7048   001E8E  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  7049   001E90  A0D8               	btfss	status,0,c
  7050   001E92  D005               	goto	i2l4286
  7051   001E94  5009               	movf	___awdiv@divisor^0,w,c
  7052   001E96  5E07               	subwf	___awdiv@dividend^0,f,c
  7053   001E98  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7054   001E9A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  7055   001E9C  800D               	bsf	___awdiv@quotient^0,0,c
  7056   001E9E                     i2l4286:
  7057   001E9E  90D8               	bcf	status,0,c
  7058   001EA0  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  7059   001EA2  3209               	rrcf	___awdiv@divisor^0,f,c
  7060   001EA4  2E0B               	decfsz	___awdiv@counter^0,f,c
  7061   001EA6  D7ED               	goto	i2u217_40
  7062   001EA8                     i2l4290:
  7063   001EA8  500C               	movf	___awdiv@sign^0,w,c
  7064   001EAA  B4D8               	btfsc	status,2,c
  7065   001EAC  D004               	goto	i2l4294
  7066   001EAE  6C0D               	negf	___awdiv@quotient^0,c
  7067   001EB0  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  7068   001EB2  B0D8               	btfsc	status,0,c
  7069   001EB4  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  7070   001EB6                     i2l4294:
  7071   001EB6  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  7072   001EBA  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  7073   001EBE  0012               	return		;funcret
  7074   001EC0                     __end_of___awdiv:
  7075                           	callstack 0
  7076                           
  7077                           	psect	text45
  7078   000000                     __ptext45:
  7079                           	callstack 0
  7080                           
  7081                           	psect	rparam
  7082   000000                     
  7083                           	psect	temp
  7084   000029                     btemp:
  7085                           	callstack 0
  7086   000029                     	ds	12
  7087   000000                     wtemp0	set	btemp
  7088   000000                     wtemp1	set	btemp+2
  7089   000000                     wtemp2	set	btemp+4
  7090   000000                     wtemp3	set	btemp+6
  7091   000000                     wtemp4	set	btemp+8
  7092   000000                     wtemp5	set	btemp+10
  7093   000000                     wtemp8	set	btemp+1
  7094   000000                     ttemp0	set	btemp
  7095   000000                     ttemp1	set	btemp+3
  7096   000000                     ttemp2	set	btemp+6
  7097   000000                     ttemp3	set	btemp+9
  7098   000000                     ttemp5	set	btemp+1
  7099   000000                     ttemp6	set	btemp+4
  7100   000000                     ttemp7	set	btemp+8
  7101   000000                     ltemp0	set	btemp
  7102   000000                     ltemp1	set	btemp+4
  7103   000000                     ltemp2	set	btemp+8
  7104   000000                     lltemp0	set	btemp
  7105                           
  7106                           	psect	idloc
  7107                           
  7108                           ;Config register IDLOC0 @ 0x200000
  7109                           ;	unspecified, using default values
  7110   200000                     	org	2097152
  7111   200000  FF                 	db	255
  7112                           
  7113                           ;Config register IDLOC1 @ 0x200001
  7114                           ;	unspecified, using default values
  7115   200001                     	org	2097153
  7116   200001  FF                 	db	255
  7117                           
  7118                           ;Config register IDLOC2 @ 0x200002
  7119                           ;	unspecified, using default values
  7120   200002                     	org	2097154
  7121   200002  FF                 	db	255
  7122                           
  7123                           ;Config register IDLOC3 @ 0x200003
  7124                           ;	unspecified, using default values
  7125   200003                     	org	2097155
  7126   200003  FF                 	db	255
  7127                           
  7128                           ;Config register IDLOC4 @ 0x200004
  7129                           ;	unspecified, using default values
  7130   200004                     	org	2097156
  7131   200004  FF                 	db	255
  7132                           
  7133                           ;Config register IDLOC5 @ 0x200005
  7134                           ;	unspecified, using default values
  7135   200005                     	org	2097157
  7136   200005  FF                 	db	255
  7137                           
  7138                           ;Config register IDLOC6 @ 0x200006
  7139                           ;	unspecified, using default values
  7140   200006                     	org	2097158
  7141   200006  FF                 	db	255
  7142                           
  7143                           ;Config register IDLOC7 @ 0x200007
  7144                           ;	unspecified, using default values
  7145   200007                     	org	2097159
  7146   200007  FF                 	db	255
  7147                           
  7148                           	psect	config
  7149                           
  7150                           ;Config register CONFIG1L @ 0x300000
  7151                           ;	VREG Sleep Enable bit
  7152                           ;	RETEN = ON, Enabled
  7153                           ;	LF-INTOSC Low-power Enable bit
  7154                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  7155                           ;	SOSC Power Selection and mode Configuration bits
  7156                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  7157                           ;	Extended Instruction Set
  7158                           ;	XINST = OFF, Disabled
  7159   300000                     	org	3145728
  7160   300000  15                 	db	21
  7161                           
  7162                           ;Config register CONFIG1H @ 0x300001
  7163                           ;	Oscillator
  7164                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  7165                           ;	PLL x4 Enable bit
  7166                           ;	PLLCFG = ON, Enabled
  7167                           ;	Fail-Safe Clock Monitor
  7168                           ;	FCMEN = OFF, Disabled
  7169                           ;	Internal External Oscillator Switch Over Mode
  7170                           ;	IESO = OFF, Disabled
  7171   300001                     	org	3145729
  7172   300001  13                 	db	19
  7173                           
  7174                           ;Config register CONFIG2L @ 0x300002
  7175                           ;	Power Up Timer
  7176                           ;	PWRTEN = OFF, Disabled
  7177                           ;	Brown Out Detect
  7178                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  7179                           ;	Brown-out Reset Voltage bits
  7180                           ;	BORV = 0, 3.0V
  7181                           ;	BORMV Power level
  7182                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  7183   300002                     	org	3145730
  7184   300002  61                 	db	97
  7185                           
  7186                           ;Config register CONFIG2H @ 0x300003
  7187                           ;	Watchdog Timer
  7188                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  7189                           ;	Watchdog Postscaler
  7190                           ;	WDTPS = 1, 1:1
  7191   300003                     	org	3145731
  7192   300003  00                 	db	0
  7193                           
  7194                           ;Config register CONFIG3L @ 0x300004
  7195                           ;	RTCC Clock Select
  7196                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  7197                           ;	External Address Shift bit
  7198                           ;	EASHFT = OFF, Address Shifting disabled
  7199                           ;	Address Bus Width Select bits
  7200                           ;	ABW = MM, 8-bit address bus
  7201                           ;	Data Bus Width
  7202                           ;	BW = 8, 8-bit external bus mode
  7203                           ;	External Bus Wait
  7204                           ;	WAIT = ON, Enabled
  7205   300004                     	org	3145732
  7206   300004  30                 	db	48
  7207                           
  7208                           ;Config register CONFIG3H @ 0x300005
  7209                           ;	CCP2 Mux
  7210                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  7211                           ;	ECCP Mux
  7212                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  7213                           ;	MSSP address masking
  7214                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  7215                           ;	Master Clear Enable
  7216                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  7217   300005                     	org	3145733
  7218   300005  80                 	db	128
  7219                           
  7220                           ;Config register CONFIG4L @ 0x300006
  7221                           ;	Stack Overflow Reset
  7222                           ;	STVREN = ON, Enabled
  7223                           ;	Boot Block Size
  7224                           ;	BBSIZ = BB1K, 1K word Boot Block size
  7225                           ;	Background Debug
  7226                           ;	DEBUG = OFF, Disabled
  7227   300006                     	org	3145734
  7228   300006  81                 	db	129
  7229                           
  7230                           ; Padding undefined space
  7231   300007                     	org	3145735
  7232   300007  FF                 	db	255
  7233                           
  7234                           ;Config register CONFIG5L @ 0x300008
  7235                           ;	Code Protect 00800-03FFF
  7236                           ;	CP0 = OFF, Disabled
  7237                           ;	Code Protect 04000-07FFF
  7238                           ;	CP1 = OFF, Disabled
  7239                           ;	Code Protect 08000-0BFFF
  7240                           ;	CP2 = OFF, Disabled
  7241                           ;	Code Protect 0C000-0FFFF
  7242                           ;	CP3 = OFF, Disabled
  7243                           ;	Code Protect 10000-13FFF
  7244                           ;	CP4 = OFF, Disabled
  7245                           ;	Code Protect 14000-17FFF
  7246                           ;	CP5 = OFF, Disabled
  7247                           ;	Code Protect 18000-1BFFF
  7248                           ;	CP6 = OFF, Disabled
  7249                           ;	Code Protect 1C000-1FFFF
  7250                           ;	CP7 = OFF, Disabled
  7251   300008                     	org	3145736
  7252   300008  FF                 	db	255
  7253                           
  7254                           ;Config register CONFIG5H @ 0x300009
  7255                           ;	Code Protect Boot
  7256                           ;	CPB = OFF, Disabled
  7257                           ;	Data EE Read Protect
  7258                           ;	CPD = OFF, Disabled
  7259   300009                     	org	3145737
  7260   300009  C0                 	db	192
  7261                           
  7262                           ;Config register CONFIG6L @ 0x30000A
  7263                           ;	Table Write Protect 00800-03FFF
  7264                           ;	WRT0 = OFF, Disabled
  7265                           ;	Table Write Protect 04000-07FFF
  7266                           ;	WRT1 = OFF, Disabled
  7267                           ;	Table Write Protect 08000-0BFFF
  7268                           ;	WRT2 = OFF, Disabled
  7269                           ;	Table Write Protect 0C000-0FFFF
  7270                           ;	WRT3 = OFF, Disabled
  7271                           ;	Table Write Protect 10000-13FFF
  7272                           ;	WRT4 = OFF, Disabled
  7273                           ;	Table Write Protect 14000-17FFF
  7274                           ;	WRT5 = OFF, Disabled
  7275                           ;	Table Write Protect 18000-1BFFF
  7276                           ;	WRT6 = OFF, Disabled
  7277                           ;	Table Write Protect 1C000-1FFFF
  7278                           ;	WRT7 = OFF, Disabled
  7279   30000A                     	org	3145738
  7280   30000A  FF                 	db	255
  7281                           
  7282                           ;Config register CONFIG6H @ 0x30000B
  7283                           ;	Config. Write Protect
  7284                           ;	WRTC = OFF, Disabled
  7285                           ;	Table Write Protect Boot
  7286                           ;	WRTB = OFF, Disabled
  7287                           ;	Data EE Write Protect
  7288                           ;	WRTD = OFF, Disabled
  7289   30000B                     	org	3145739
  7290   30000B  E0                 	db	224
  7291                           
  7292                           ;Config register CONFIG7L @ 0x30000C
  7293                           ;	Table Read Protect 00800-03FFF
  7294                           ;	EBRT0 = OFF, Disabled
  7295                           ;	Table Read Protect 04000-07FFF
  7296                           ;	EBRT1 = OFF, Disabled
  7297                           ;	Table Read Protect 08000-0BFFF
  7298                           ;	EBRT2 = OFF, Disabled
  7299                           ;	Table Read Protect 0C000-0FFFF
  7300                           ;	EBRT3 = OFF, Disabled
  7301                           ;	Table Read Protect 10000-13FFF
  7302                           ;	EBRT4 = OFF, Disabled
  7303                           ;	Table Read Protect 14000-17FFF
  7304                           ;	EBRT5 = OFF, Disabled
  7305                           ;	Table Read Protect 18000-1BFFF
  7306                           ;	EBRT6 = OFF, Disabled
  7307                           ;	Table Read Protect 1C000-1FFFF
  7308                           ;	EBRT7 = OFF, Disabled
  7309   30000C                     	org	3145740
  7310   30000C  FF                 	db	255
  7311                           
  7312                           ;Config register CONFIG7H @ 0x30000D
  7313                           ;	Table Read Protect Boot
  7314                           ;	EBRTB = OFF, Disabled
  7315   30000D                     	org	3145741
  7316   30000D  40                 	db	64
  7317                           tosu	equ	0xFFF
  7318                           tosh	equ	0xFFE
  7319                           tosl	equ	0xFFD
  7320                           stkptr	equ	0xFFC
  7321                           pclatu	equ	0xFFB
  7322                           pclath	equ	0xFFA
  7323                           pcl	equ	0xFF9
  7324                           tblptru	equ	0xFF8
  7325                           tblptrh	equ	0xFF7
  7326                           tblptrl	equ	0xFF6
  7327                           tablat	equ	0xFF5
  7328                           prodh	equ	0xFF4
  7329                           prodl	equ	0xFF3
  7330                           indf0	equ	0xFEF
  7331                           postinc0	equ	0xFEE
  7332                           postdec0	equ	0xFED
  7333                           preinc0	equ	0xFEC
  7334                           plusw0	equ	0xFEB
  7335                           fsr0h	equ	0xFEA
  7336                           fsr0l	equ	0xFE9
  7337                           wreg	equ	0xFE8
  7338                           indf1	equ	0xFE7
  7339                           postinc1	equ	0xFE6
  7340                           postdec1	equ	0xFE5
  7341                           preinc1	equ	0xFE4
  7342                           plusw1	equ	0xFE3
  7343                           fsr1h	equ	0xFE2
  7344                           fsr1l	equ	0xFE1
  7345                           bsr	equ	0xFE0
  7346                           indf2	equ	0xFDF
  7347                           postinc2	equ	0xFDE
  7348                           postdec2	equ	0xFDD
  7349                           preinc2	equ	0xFDC
  7350                           plusw2	equ	0xFDB
  7351                           fsr2h	equ	0xFDA
  7352                           fsr2l	equ	0xFD9
  7353                           status	equ	0xFD8

Data Sizes:
    Strings     215
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     40      52
    BANK0           123      1       1
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[8]), 
		 -> STR_22(CODE[14]), STR_21(CODE[29]), STR_20(CODE[4]), STR_19(CODE[3]), 
		 -> STR_18(CODE[7]), STR_17(CODE[5]), STR_16(CODE[12]), STR_15(CODE[12]), 
		 -> STR_14(CODE[6]), STR_13(CODE[7]), STR_12(CODE[9]), STR_11(CODE[21]), 
		 -> STR_10(CODE[7]), STR_9(CODE[10]), STR_8(CODE[9]), STR_7(CODE[6]), 
		 -> STR_6(CODE[13]), STR_5(CODE[11]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _marche->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char
    _Conversion->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      49
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   62559
                                             28 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               3     3      0   60753
                                             26 COMRAM     2     2      0
                         _Conversion
                         _Diminution
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                             _marche
                              _plot1
                               _vide
                       _vitesseAdmin
 ---------------------------------------------------------------------------------
 (4) _vitesseAdmin                                         9     7      2     244
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    7113
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _marche                                               2     2      0    7364
                                             14 COMRAM     2     2      0
                         _Diminution
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _Diminution                                           2     0      2     251
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5336
                                             20 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4568
                                             14 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2393
                                             14 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5175
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    7113
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3955
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3158
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (4) _Conversion                                           6     4      2    1591
                                             14 COMRAM     6     4      2
                            ___awdiv
                             ___wmul
            _lecture_8bit_analogique (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1060
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Conversion
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _lecture_8bit_analogique (ARG)
     _Diminution
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _marche
       _Diminution
       _draw_string
       _goto_lico
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesseAdmin
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7B      0       0      64        0.0%
BITBANK0            7B      0       0       4        0.0%
BANK0               7B      1       1       5        0.8%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     28      34       1       62.7%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhll     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhl      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhlh      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      57        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 24 13:55:36 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 000C  
                                 _tc 003C                  ___wmul@multiplicand 0003  
                       ?_draw_square 0015                                  _BSR 000FE0  
                       ?_draw_string 0008                                  _puc 0038  
                        Conversion@a 000F                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 2496                                 l1578 23C6  
                               l2842 23AA                                 l2844 23B0  
                               l2846 23B6                                 l5712 2444  
                               STR_1 108D                                 STR_2 10B1  
                               STR_3 102D                                 STR_4 109C  
                               STR_5 1066                                 STR_6 1041  
                               STR_7 10B7                                 STR_8 107B  
                               STR_9 1071                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 23A8                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 242E  
                               _fptr 0035                                 _vide 24C6  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0029                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                         _vitesseAdmin 1D22  
                   ?_lecture_normale 0003                                ?_main 0001  
                    __end_of___awdiv 1EC0                                STR_10 1095  
                              STR_11 101E                                STR_20 10C8  
                              STR_12 1084                                STR_13 10AA  
                              STR_21 1001                                STR_14 10BD  
                              STR_22 1033                                STR_23 108D  
                              STR_15 104E                                STR_24 10D2  
                              STR_16 105A                                STR_25 10CF  
                              STR_17 10C3                                STR_26 10CC  
                              STR_18 10A3                                STR_19 10D5  
                    __end_of___awmod 1F30                                ?_vide 0001  
                         _Diminution 2506                                _T0CON 000FD5  
                    ___awdiv@divisor 0009                         draw_dec8@dix 0013  
                              _FSR0H 000FEA                                _FSR1H 000FE2  
                              _FSR0L 000FE9                                _FSR2H 000FDA  
                              _FSR1L 000FE1                                _FSR2L 000FD9  
                    __end_of___lwdiv 20A4                                i2l146 22AE  
                              i2l149 22BC                                i2l463 13D2  
                              i2l802 19B0                                i2l467 1486  
                              i2l820 19D4                                i2l573 1706  
                              i2l814 19C8                                i2l591 24B0  
                              i2l832 19EC                                i2l808 19BC  
                              i2l578 1748                                i2l850 1A10  
                              i2l826 19E0                                i2l844 1A04  
                              i2l862 1A28                                i2l838 19F8  
                              i2l880 1A4C                                i2l856 1A1C  
                              i2l874 1A40                                i2l868 1A34  
                              i2l796 19A4                                i2l980 17E0  
                    ___awdiv@counter 000B                                i2l992 17F8  
                              i2l986 17EC                                i2l998 1804  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 247C  
                        _write_d_aff 2462                      __end_of_charger 24F6  
                    write_d_aff@data 0001                       ?_stid_delai_us 0001  
                    __end_of_command 2462                                _badge 000075  
                              _plot1 1B36                                _queue 000069  
                              tablat 000FF5                                ltemp0 0029  
                              ltemp1 002D                                ltemp2 0031  
                         _Conversion 21DC                __end_of_delai_us_char 240E  
                              plusw1 000FE3                      _check_status_ok 2356  
                              ttemp0 0029                                ttemp1 002C  
                              ttemp2 002F                                ttemp3 0032  
                              ttemp5 002A                                ttemp6 002D  
                              ttemp7 0031                                status 000FD8  
                              wtemp0 0029                                wtemp1 002B  
                              wtemp2 002D                                wtemp3 002F  
                              wtemp4 0031                                wtemp5 0033  
                              wtemp8 002A        initialisation_du_systeme@temp 0085  
                    __initialization 24F6                         __end_of_Init 23CA  
         lecture_8bit_analogique@ret 0001                         __end_of_main 2448  
                       __end_of_vide 24DE                               ??_main 0086  
                             ??_vide 000F                        __activetblptr 000003  
                   _valeur_convertie 000084                         draw_square@x 0019  
                       draw_square@y 001A                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             ?_plot1 000F                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0007                        _n_octet_badge 00007F  
                      draw_dec8@cent 0012                               _MEMCON 000F26  
                             i2l1010 181C                               i2l1004 1810  
                             i2l1022 1834                               i2l1040 1858  
                             i2l1016 1828                               i2l1034 184C  
                             i2l1052 1870                               i2l1028 1840  
                             i2l1046 1864                               i2l1064 1888  
                             i2l1058 187C                               i2l1318 23F0  
                             i2l1326 1AAA                               i2l1344 1DB2  
                             i2l1336 22E2                               i2l1360 1FE6  
                             i2l1355 1FBA                               i2l1380 203A  
                             i2l1372 1D0E                               i2l1700 1C32  
                             i2l1294 20AC                               i2l1366 1CDA  
                             i2l1369 1CF4                               i2l2610 20EA  
                             i2l1707 2498                               i2l1469 1D98  
                             i2l4310 1EE0                               i2l1486 1F58  
                             i2l2286 209A                               i2l2608 20E6  
                             i2l4224 2252                               i2l5016 1488  
                             i2l4250 2142                               i2l4330 1F26  
                             i2l4322 1F0E                               i2l4314 1EEE  
                             i2l4306 1ED4                               i2l3610 191C  
                             i2l4402 24A4                               i2l5130 0064  
                             i2l2556 2406                               i2l4340 200E  
                             i2l4316 1EF6                               i2l3604 190E  
                             _PCLATH 000FFA                               i2l4262 1E50  
                             i2l4326 1F18                               i2l5062 1768  
                             i2l5046 1726                               i2l3622 193C  
                             i2l4344 2018                               i2l4352 22D0  
                             i2l4520 1CF6                               i2l2824 237A  
                             i2l4424 1A94                               i2l1697 1C20  
                             i2l4274 1E76                               i2l4290 1EA8  
                             i2l4362 1DB4                               i2l4346 203C  
                             i2l4434 1AAC                               i2l4530 1D3A  
                             i2l3642 1972                               i2l1698 1C28  
                             i2l4276 1E7E                               i2l4268 1E60  
                             i2l4460 233C                               i2l4356 22DA  
                             i2l4524 1D10                               i2l4516 1CDC  
                             i2l4380 1B7A                               i2l2860 22C0  
                             i2l3628 194A                               i2l3732 1894  
                             i2l4294 1EB6                               i2l4286 1E9E  
                             i2l4366 1DEA                               i2l4358 22E4  
                             i2l4446 230C                               i2l4382 1B82  
                             i2l4534 1D54                               i2l4606 24BC  
                             i2l3742 18AC                               i2l5094 21C8  
                             i2l5430 02DC                               i2l4384 1B8A  
                             i2l4392 1BA2                               i2l4472 2164  
                             i2l3592 18EE                               i2l4624 1C12  
                             i2l4616 1BFC                               i2l5088 21B6  
                             i2l5096 21D0                               _PCLATU 000FFB  
                             i2l4570 1FBC                               i2l4386 1B92  
                             i2l4378 1B72                               i2l4474 2172  
                             i2l4490 1F6A                               i2l3586 18E0  
                             i2l5274 0198                               i2l4388 1B9A  
                             i2l4468 214E                               i2l4548 1D8A  
                             i2l3692 1A58                               i2l4660 1C82  
                             i2l4590 2414                               i2l4478 2188  
                             i2l4670 2068                               i2l4576 1FDE  
                             i2l4568 1FB2                               i2l4912 1274  
                             i2l4672 2070                               i2l4578 1FE8  
                             i2l4906 1248                               i2l4682 2090  
                             i2l4932 12F2                               i2l4942 1314  
                             i2l4934 12F8                               i2l4880 11C4  
                             i2l4938 130E                               i2l4964 1362  
                             i2l4982 13C0                               i2l4974 1396  
                             i2l4958 1356                               i2l4894 1216  
                             _TABLAT 000FF5                               i2l4896 1222  
                             i2l4978 13AC                        draw_dec8@unit 0010  
                             _RCSTA1 000FAB                           _Tick_Count 000071  
                             _SPBRG1 000FAF                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                             _TXREG1 000FAD                       clear_line@line 000F  
                             _TXSTA1 000FAC                               _Valeur 000083  
                             ___wmul 2382                            ??___awdiv 000B  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _marche 1F30                               _tache1 10DA  
                             _tache2 16E4                               _tache3 18BE  
                             _tache4 199C                               _tache5 17D8  
                             _tache6 2192                            ??_charger 000F  
                   ___awdiv@quotient 000D                      ___awmod@divisor 0003  
                             isa$std 000001                      ___awmod@counter 0005  
                          ??_command 0005                          ?_Diminution 0001  
                    ??_stid_delai_us 0003                               lltemp0 0029  
                             plot1@x 0014                               plot1@y 000F  
                   __end_of_tp_delai 24C6                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 2382  
       lecture_normale@temps_attente 0005                          ?_Conversion 000F  
                         __accesstop 0060              __end_of__initialization 2500  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                         ___inthi_sp 0AAC                    __end_of_d1command 2256  
                  __end_of_d2command 2146                        __end_of_plot1 1BE4  
                            ??_plot1 0010                        draw_square@x1 0018  
                      draw_square@x2 0016                        draw_square@y1 0015  
                      draw_square@y2 0017                         _W_TEMPORAIRE 000060  
                         __pnvCOMRAM 0035                       _clear_graphics 2326  
        ??_initialisation_du_systeme 0085                           _clear_line 240E  
                         _clear_text 22F6             ?_fonction_d_interruption 0001  
                            ?___wmul 0001                              ?_marche 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                       draw_dec8@octet 0011  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
           _initialisation_afficheur 1A6A                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 0040  
             __end_of_clear_graphics 2356                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 2256                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_dec8 1D22  
                  __end_of_draw_char 22F6                    __end_of_draw_hex8 1FFA  
                            ___awdiv 1E3C                              ___awmod 1EC0  
                            ___lwdiv 2052                         __psmallconst 1000  
                            __pcinit 24F6                              _charger 24DE  
                            __ramtop 1000                       draw_char@dccar 0008  
                            __ptext0 242E                              __ptext1 14AC  
                            __ptext2 2256                              __ptext3 23A8  
                            __ptext5 2192                              __ptext6 1BE4  
                            __ptext7 2496                              __ptext8 17D8  
                            __ptext9 199C                              _command 2448  
                          _T0CONbits 000FD5                   draw_string@tableau 0008  
          _initialisation_du_systeme 14AC                     ___awmod@dividend 0001  
                  __end_of_init_rxtx 23EC                    __end_of_goto_lico 2052  
                            _val_tos 003A                       draw_hex8@octet 0008  
                            _vitesse 000073                 end_of_initialization 2500  
                            tache4@a 0001                              tache5@a 0001  
                            tache6@n 0009                      ?_clear_graphics 0001  
                        ?_clear_line 0001                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                 Conversion@valeur_lue 0011  
                       goto_lico@adr 000D                            _PORTBbits 000F81  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                       ??_Diminution 0003              _lecture_8bit_analogique 228E  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                       ??_Conversion 0011                           command@cmd 0005  
                         draw_dec8@c 0014           Conversion@valeur_convertie 0013  
                         draw_hex8@c 0009                   __end_of_Diminution 2516  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
                     __end_of___wmul 23A8       lecture_8bit_analogique@channel 0002  
                          _d1command 221C                       __end_of_marche 1F9E  
                          _d2command 20F6                       __end_of_tache1 14AC  
                     __end_of_tache2 17D8                       __end_of_tache3 199C  
                     __end_of_tache4 1A6A                       __end_of_tache5 18BE  
                     __end_of_tache6 21DC                        ??_draw_square 0018  
                      ??_draw_string 000A                   __end_of_Conversion 221C  
             lecture_normale@stid_id 0003                __end_of_stid_delai_us 24AE  
                start_initialization 24F6                        vitesseAdmin@a 0001  
                      vitesseAdmin@b 0006                        vitesseAdmin@c 0008  
                  ??_lecture_normale 0005                        _delai_us_char 23EC  
                           ??___wmul 0005                        ?_vitesseAdmin 0001  
                           ??_marche 000F                             ??_tache1 001B  
                           ??_tache2 0008                             ??_tache3 0001  
                           ??_tache4 0001                             ??_tache5 0001  
                           ??_tache6 0009           ??_initialisation_afficheur 0009  
          ??_lecture_8bit_analogique 0001                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 003C  
                      __pcstackBANK0 0085                  __end_of_draw_square 2192  
         ??_initialisation_des_ports 0085                  __end_of_draw_string 1E3C  
                     ?_delai_us_char 0001                     ___lwdiv@dividend 0001  
                          __pintcode 0008                       ??_vitesseAdmin 0003  
                           ?___awdiv 0007                             ?___awmod 0001  
                           ?___lwdiv 0001                             ?_charger 0001  
                  _pointeur_de_tache 000070                            _draw_dec8 1C86  
                          _draw_char 22C4                            _draw_hex8 1F9E  
                           ?_command 0001                       _wait_status_ok 20A4  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 23CA  
                 write_c_aff@command 0001                            _goto_lico 1FFA  
    __end_of_lecture_8bit_analogique 22C4                       ___wmul@product 0005  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
  __end_of_initialisation_du_systeme 16E4                             _LATGbits 000F8F  
                           _LATJbits 000F91                             i2u141_40 19CC  
                           i2u223_40 1EFA                             i2u151_40 1A08  
                           i2u143_40 19D8                             i2u135_40 19A8  
                           i2u232_40 1DDA                             i2u232_47 1DD0  
                           i2u217_40 1E82                             i2u161_40 1A44  
                           i2u153_40 1A14                             i2u145_40 19E4  
                           i2u137_40 19B4                             i2u234_40 1E0C  
                           i2u170_40 17FC                             i2u234_47 1E02  
                           i2u155_40 1A20                             i2u147_40 19F0  
                           i2u139_40 19C0                             i2u315_47 11FA  
                           i2u236_40 1E34                             i2u180_40 1838  
                           i2u172_40 1808                             i2u236_47 1E2A  
                           i2u316_47 1258                             i2u157_40 1A2C  
                           i2u149_40 19FC                         ??_clear_line 000F  
                           i2u317_47 1F80                             i2u190_40 1874  
                           i2u182_40 1844                             i2u174_40 1814  
                           i2u166_40 17E4                             i2u255_40 1D60  
                           i2u159_40 1A38                             i2u192_40 1880  
                           i2u184_40 1850                             i2u176_40 1820  
                           i2u168_40 17F0                             _PIR1bits 000F9E  
                           i2u186_40 185C                             i2u178_40 182C  
                           i2u284_40 1302                             i2u188_40 1868  
                           i2u279_40 2074                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 20F6  
                        ??_d1command 0006                           ?_draw_dec8 0001  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 0001                     clear_line@column 0010  
                        _draw_square 2146                          _draw_string 1DB0  
                       _Val_sem_rxtx 003F                             _TP_appui 000066  
                 __end_of_clear_line 242E                          _INTCON2bits 000FF1  
                    ??_delai_us_char 0001                   __end_of_clear_text 2326  
                         ?_init_rxtx 0001                           ?_goto_lico 0009  
                         _ANCON0bits 000F25                           _ANCON1bits 000F24  
                           __Hrparam 0000                             _Personne 000082  
                           __Lrparam 0000     __end_of_initialisation_afficheur 1B36  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
            _fonction_d_interruption 0008                      _lecture_normale 1BE4  
                           _batterie 000074                      ___lwdiv@divisor 0003  
   __end_of_initialisation_des_ports 228E                      ___lwdiv@counter 0007  
                           __ptext10 18BE                             __ptext11 16E4  
                           __ptext20 1A6A                             __ptext12 24AE  
                           __ptext21 2356                             __ptext13 2052  
                           __ptext30 240E                             __ptext22 23CA  
                           __ptext14 10DA                             __ptext31 22C4  
                           __ptext23 2146                             __ptext15 1D22  
                           __ptext40 20A4                             __ptext32 2326  
                           __ptext24 1B36                             __ptext16 24C6  
                           __ptext41 23EC                             __ptext33 24DE  
                           __ptext25 2448                             __ptext17 1F30  
                           __ptext42 21DC                             __ptext34 1FFA  
                           __ptext26 1EC0                             __ptext18 2506  
                           __ptext43 2382                             __ptext35 20F6  
                           __ptext27 1F9E                             __ptext19 228E  
                           __ptext44 1E3C                             __ptext36 1DB0  
                           __ptext28 1C86                             __ptext45 0000  
                           __ptext37 221C                             __ptext29 22F6  
                           __ptext38 2462                             __ptext39 247C  
               __end_of_vitesseAdmin 1DB0                             isa$xinst 000000  
                           _tp_delai 24AE                    ??_check_status_ok 0001  
                  Diminution@vitesse 0001                          ??_draw_dec8 000F  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_init_rxtx 0001  
                        ??_goto_lico 000A                             intlevel2 0000  
                           plot1@add 0012                       goto_lico@ligne 000C  
            __end_of_lecture_normale 1C86                         d1command@cmd 0005  
                       d1command@res 0007            ??_fonction_d_interruption 001D  
                       tp_delai@itpd 0001                          d1command@d1 0006  
                __end_of_write_c_aff 2496                  __end_of_write_d_aff 247C  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
