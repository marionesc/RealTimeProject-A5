

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 24 11:21:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61                           	dabs	1,0x603,1,_STKPTR_T6
    62                           	dabs	1,0x503,1,_STKPTR_T5
    63                           	dabs	1,0x403,1,_STKPTR_T4
    64                           	dabs	1,0x303,1,_STKPTR_T3
    65                           	dabs	1,0x203,1,_STKPTR_T2
    66                           	dabs	1,0x103,1,_STKPTR_T1
    67                           	dabs	1,0x60,1,_W_TEMPORAIRE
    68                           	dabs	1,0x100,66,_contexte1
    69                           	dabs	1,0x69,6,_queue
    70                           	dabs	1,0x71,2,_Tick_Count
    71                           	dabs	1,0x84,1,_valeur_convertie
    72                           	dabs	1,0x83,1,_Valeur
    73                           	dabs	1,0x82,1,_Personne
    74                           	dabs	1,0x81,1,_TEST
    75                           	dabs	1,0x80,1,_RXTX_libre
    76                           	dabs	1,0x7F,1,_n_octet_badge
    77                           	dabs	1,0x74,1,_batterie
    78                           	dabs	1,0x73,1,_vitesse
    79                           	dabs	1,0x70,1,_pointeur_de_tache
    80                           	dabs	1,0x6F,1,_tache_active
    81                           	dabs	1,0x68,1,_TP_y
    82                           	dabs	1,0x67,1,_TP_x
    83                           	dabs	1,0x66,1,_TP_appui
    84                           	dabs	1,0x65,1,_DEMARRAGE
    85                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    86                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    87                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    88                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    89                           	dabs	1,0x75,10,_badge
    90                           	dabs	1,0x200,66,_contexte2
    91                           	dabs	1,0x300,66,_contexte3
    92                           	dabs	1,0x400,66,_contexte4
    93                           	dabs	1,0x500,66,_contexte5
    94                           	dabs	1,0x600,66,_contexte6
    95   000000                     
    96                           ; Generated 06/04/2022 GMT
    97                           ; 
    98                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F87K22 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130   000000                     
   131 ;;Init@sem	offset=-1 (param)
   132 ;;Init@sem	offset=-1 (param)
   133   000000                     _TMR0	set	4054
   134   000000                     _TOSU	set	4095
   135   000000                     _TOSH	set	4094
   136   000000                     _TOSL	set	4093
   137   000000                     _TABLAT	set	4085
   138   000000                     _TBLPTRL	set	4086
   139   000000                     _TBLPTRH	set	4087
   140   000000                     _TBLPTRU	set	4088
   141   000000                     _PRODL	set	4083
   142   000000                     _PRODH	set	4084
   143   000000                     _FSR2L	set	4057
   144   000000                     _FSR2H	set	4058
   145   000000                     _FSR1L	set	4065
   146   000000                     _FSR1H	set	4066
   147   000000                     _STKPTR	set	4092
   148   000000                     _FSR0L	set	4073
   149   000000                     _FSR0H	set	4074
   150   000000                     _BSR	set	4064
   151   000000                     _WREG	set	4072
   152   000000                     _STATUS	set	4056
   153                           
   154 ;;
   155 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   156 ;;
   157 ;; *************** function _main *****************
   158 ;; Defined at:
   159 ;;		line 6 in file "main.c"
   160 ;; Parameters:    Size  Location     Type
   161 ;;		None
   162 ;; Auto vars:     Size  Location     Type
   163 ;;		None
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   177 ;;Total ram usage:        0 bytes
   178 ;; Hardware stack levels required when called: 8
   179 ;; This function calls:
   180 ;;		_Init
   181 ;;		_initialisation_des_ports
   182 ;;		_initialisation_du_systeme
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189   0023EC                     __ptext0:
   190                           	callstack 0
   191   000000                     _T0IF	set	32658
   192   000000                     _INTCON2bits	set	4081
   193   0023EC                     _main:
   194                           	callstack 23
   195                           
   196                           ;main.c: 8: initialisation_des_ports();
   197                           
   198                           ;incstack = 0
   199   0023EC  EC0A  F011         	call	_initialisation_des_ports	;wreg free
   200                           
   201                           ;main.c: 9: initialisation_du_systeme();
   202   0023F0  EC6E  F00A         	call	_initialisation_du_systeme	;wreg free
   203                           
   204                           ;main.c: 10: Init(1);
   205   0023F4  0E01               	movlw	1
   206   0023F6  6EE6               	movwf	postinc1,c
   207   0023F8  ECB3  F011         	call	_Init	;wreg free
   208                           
   209                           ;main.c: 13: T0CONbits.TMR0ON=1;
   210   0023FC  8ED5               	bsf	213,7,c	;volatile
   211                           
   212                           ;main.c: 14: T0IF=1;
   213   0023FE  84F2               	bsf	4082,2,c	;volatile
   214                           
   215                           ;main.c: 15: (INTCONbits.GIE = 1);
   216   002400  8EF2               	bsf	242,7,c	;volatile
   217   002402                     l5683:
   218                           
   219                           ;main.c: 19: __nop();
   220   002402  F000               	nop	
   221   002404  D7FE               	goto	l5683
   222   002406                     __end_of_main:
   223                           	callstack 0
   224                           
   225                           	psect	nvCOMRAM
   226   000035                     __pnvCOMRAM:
   227                           	callstack 0
   228   000035                     _fptr:
   229                           	callstack 0
   230   000035                     	ds	3
   231   000038                     _puc:
   232                           	callstack 0
   233   000038                     	ds	2
   234   00003A                     _val_tos:
   235                           	callstack 0
   236   00003A                     	ds	2
   237   000000                     _ANCON1bits	set	3876
   238   000000                     _ANCON0bits	set	3877
   239   000000                     _TXSTA1	set	4012
   240   000000                     _LATJ	set	3985
   241   000000                     _T0CON	set	4053
   242   000000                     _ADCON0bits	set	4034
   243   000000                     _INTCONbits	set	4082
   244   000000                     _T0IE	set	32661
   245   000000                     _ANCON2	set	3875
   246   000000                     _ANCON1	set	3876
   247   000000                     _ANCON0	set	3877
   248   000000                     _MEMCON	set	3878
   249   000000                     _T0CONbits	set	4053
   250   000000                     _PADCFG1bits	set	3923
   251   000000                     _LATCbits	set	3979
   252   000000                     _LATDbits	set	3980
   253   000000                     _LATGbits	set	3983
   254   000000                     _LATJbits	set	3985
   255   000000                     _LATH	set	3984
   256   000000                     _TRISCbits	set	3988
   257   000000                     _TRISDbits	set	3989
   258   000000                     _TRISGbits	set	3992
   259   000000                     _TRISJ	set	3994
   260   000000                     _TRISH	set	3993
   261   000000                     _PIR1bits	set	3998
   262   000000                     _TXREG1	set	4013
   263   000000                     _ADCON2	set	4032
   264   000000                     _ADCON1	set	4033
   265   000000                     _BAUDCON1	set	3941
   266   000000                     _PORTBbits	set	3969
   267   000000                     _SPBRGH1	set	4052
   268   000000                     _ADRESH	set	4036
   269   000000                     _ADRESL	set	4035
   270   000000                     _ADCON0	set	4034
   271   000000                     _POSTINC0	set	4078
   272   000000                     _POSTINC1	set	4070
   273   000000                     _PCLATH	set	4090
   274   000000                     _PCLATU	set	4091
   275   000000                     _SPBRG1	set	4015
   276   000000                     _PORTDbits	set	3971
   277   000000                     _PORTEbits	set	3972
   278   000000                     _PORTH	set	3975
   279   000000                     _RCSTA1	set	4011
   280   000000                     _TXSTA1bits	set	4012
   281                           
   282                           	psect	smallconst
   283   001000                     __psmallconst:
   284                           	callstack 0
   285   001000  00                 	db	0
   286   001001                     STR_24:
   287   001001  41                 	db	65	;'A'
   288   001002  54                 	db	84	;'T'
   289   001003  54                 	db	84	;'T'
   290   001004  45                 	db	69	;'E'
   291   001005  4E                 	db	78	;'N'
   292   001006  54                 	db	84	;'T'
   293   001007  49                 	db	73	;'I'
   294   001008  4F                 	db	79	;'O'
   295   001009  4E                 	db	78	;'N'
   296   00100A  20                 	db	32
   297   00100B  76                 	db	118	;'v'
   298   00100C  6F                 	db	111	;'o'
   299   00100D  75                 	db	117	;'u'
   300   00100E  73                 	db	115	;'s'
   301   00100F  20                 	db	32
   302   001010  65                 	db	101	;'e'
   303   001011  74                 	db	116	;'t'
   304   001012  65                 	db	101	;'e'
   305   001013  73                 	db	115	;'s'
   306   001014  20                 	db	32
   307   001015  70                 	db	112	;'p'
   308   001016  6C                 	db	108	;'l'
   309   001017  65                 	db	101	;'e'
   310   001018  69                 	db	105	;'i'
   311   001019  6E                 	db	110	;'n'
   312   00101A  21                 	db	33
   313   00101B  21                 	db	33
   314   00101C  21                 	db	33
   315   00101D  00                 	db	0
   316   00101E                     STR_14:
   317   00101E  20                 	db	32
   318   00101F  41                 	db	65	;'A'
   319   001020  55                 	db	85	;'U'
   320   001021  43                 	db	67	;'C'
   321   001022  55                 	db	85	;'U'
   322   001023  4E                 	db	78	;'N'
   323   001024  20                 	db	32
   324   001025  20                 	db	32
   325   001026  20                 	db	32
   326   001027  20                 	db	32
   327   001028  20                 	db	32
   328   001029  20                 	db	32
   329   00102A  20                 	db	32
   330   00102B  20                 	db	32
   331   00102C  20                 	db	32
   332   00102D  20                 	db	32
   333   00102E  20                 	db	32
   334   00102F  20                 	db	32
   335   001030  20                 	db	32
   336   001031  20                 	db	32
   337   001032  00                 	db	0
   338   001033                     STR_25:
   339   001033  52                 	db	82	;'R'
   340   001034  4F                 	db	79	;'O'
   341   001035  55                 	db	85	;'U'
   342   001036  45                 	db	69	;'E'
   343   001037  53                 	db	83	;'S'
   344   001038  42                 	db	66	;'B'
   345   001039  59                 	db	89	;'Y'
   346   00103A  47                 	db	71	;'G'
   347   00103B  4E                 	db	78	;'N'
   348   00103C  4F                 	db	79	;'O'
   349   00103D  4C                 	db	76	;'L'
   350   00103E  45                 	db	69	;'E'
   351   00103F  53                 	db	83	;'S'
   352   001040  00                 	db	0
   353   001041                     STR_9:
   354   001041  54                 	db	84	;'T'
   355   001042  65                 	db	101	;'e'
   356   001043  6D                 	db	109	;'m'
   357   001044  70                 	db	112	;'p'
   358   001045  2E                 	db	46
   359   001046  20                 	db	32
   360   001047  48                 	db	72	;'H'
   361   001048  75                 	db	117	;'u'
   362   001049  69                 	db	105	;'i'
   363   00104A  6C                 	db	108	;'l'
   364   00104B  65                 	db	101	;'e'
   365   00104C  3A                 	db	58	;':'
   366   00104D  00                 	db	0
   367   00104E                     STR_18:
   368   00104E  58                 	db	88	;'X'
   369   00104F  2D                 	db	45
   370   001050  4A                 	db	74	;'J'
   371   001051  6F                 	db	111	;'o'
   372   001052  79                 	db	121	;'y'
   373   001053  73                 	db	115	;'s'
   374   001054  74                 	db	116	;'t'
   375   001055  69                 	db	105	;'i'
   376   001056  63                 	db	99	;'c'
   377   001057  6B                 	db	107	;'k'
   378   001058  3A                 	db	58	;':'
   379   001059  00                 	db	0
   380   00105A                     STR_19:
   381   00105A  59                 	db	89	;'Y'
   382   00105B  2D                 	db	45
   383   00105C  4A                 	db	74	;'J'
   384   00105D  6F                 	db	111	;'o'
   385   00105E  79                 	db	121	;'y'
   386   00105F  73                 	db	115	;'s'
   387   001060  74                 	db	116	;'t'
   388   001061  69                 	db	105	;'i'
   389   001062  63                 	db	99	;'c'
   390   001063  6B                 	db	107	;'k'
   391   001064  3A                 	db	58	;':'
   392   001065  00                 	db	0
   393   001066                     STR_8:
   394   001066  54                 	db	84	;'T'
   395   001067  65                 	db	101	;'e'
   396   001068  6D                 	db	109	;'m'
   397   001069  70                 	db	112	;'p'
   398   00106A  2E                 	db	46
   399   00106B  20                 	db	32
   400   00106C  45                 	db	69	;'E'
   401   00106D  61                 	db	97	;'a'
   402   00106E  75                 	db	117	;'u'
   403   00106F  3A                 	db	58	;':'
   404   001070  00                 	db	0
   405   001071                     STR_12:
   406   001071  42                 	db	66	;'B'
   407   001072  61                 	db	97	;'a'
   408   001073  74                 	db	116	;'t'
   409   001074  74                 	db	116	;'t'
   410   001075  65                 	db	101	;'e'
   411   001076  72                 	db	114	;'r'
   412   001077  69                 	db	105	;'i'
   413   001078  65                 	db	101	;'e'
   414   001079  3A                 	db	58	;':'
   415   00107A  00                 	db	0
   416   00107B                     STR_11:
   417   00107B  56                 	db	86	;'V'
   418   00107C  69                 	db	105	;'i'
   419   00107D  74                 	db	116	;'t'
   420   00107E  65                 	db	101	;'e'
   421   00107F  73                 	db	115	;'s'
   422   001080  73                 	db	115	;'s'
   423   001081  65                 	db	101	;'e'
   424   001082  3A                 	db	58	;':'
   425   001083  00                 	db	0
   426   001084                     STR_15:
   427   001084  4F                 	db	79	;'O'
   428   001085  70                 	db	112	;'p'
   429   001086  65                 	db	101	;'e'
   430   001087  72                 	db	114	;'r'
   431   001088  61                 	db	97	;'a'
   432   001089  74                 	db	116	;'t'
   433   00108A  6F                 	db	111	;'o'
   434   00108B  72                 	db	114	;'r'
   435   00108C  00                 	db	0
   436   00108D                     STR_1:
   437   00108D  4D                 	db	77	;'M'
   438   00108E  61                 	db	97	;'a'
   439   00108F  72                 	db	114	;'r'
   440   001090  63                 	db	99	;'c'
   441   001091  68                 	db	104	;'h'
   442   001092  65                 	db	101	;'e'
   443   001093  3A                 	db	58	;':'
   444   001094  00                 	db	0
   445   001095                     STR_13:
   446   001095  42                 	db	66	;'B'
   447   001096  61                 	db	97	;'a'
   448   001097  64                 	db	100	;'d'
   449   001098  67                 	db	103	;'g'
   450   001099  65                 	db	101	;'e'
   451   00109A  3A                 	db	58	;':'
   452   00109B  00                 	db	0
   453   00109C                     STR_7:
   454   00109C  53                 	db	83	;'S'
   455   00109D  69                 	db	105	;'i'
   456   00109E  65                 	db	101	;'e'
   457   00109F  67                 	db	103	;'g'
   458   0010A0  65                 	db	101	;'e'
   459   0010A1  3A                 	db	58	;':'
   460   0010A2  00                 	db	0
   461   0010A3                     STR_21:
   462   0010A3  43                 	db	67	;'C'
   463   0010A4  48                 	db	72	;'H'
   464   0010A5  41                 	db	65	;'A'
   465   0010A6  52                 	db	82	;'R'
   466   0010A7  47                 	db	71	;'G'
   467   0010A8  45                 	db	69	;'E'
   468   0010A9  00                 	db	0
   469   0010AA                     STR_16:
   470   0010AA  20                 	db	32
   471   0010AB  41                 	db	65	;'A'
   472   0010AC  44                 	db	68	;'D'
   473   0010AD  4D                 	db	77	;'M'
   474   0010AE  49                 	db	73	;'I'
   475   0010AF  4E                 	db	78	;'N'
   476   0010B0  00                 	db	0
   477   0010B1                     STR_5:
   478   0010B1  28                 	db	40
   479   0010B2  28                 	db	40
   480   0010B3  21                 	db	33
   481   0010B4  29                 	db	41
   482   0010B5  29                 	db	41
   483   0010B6  00                 	db	0
   484   0010B7                     STR_10:
   485   0010B7  43                 	db	67	;'C'
   486   0010B8  68                 	db	104	;'h'
   487   0010B9  6F                 	db	111	;'o'
   488   0010BA  63                 	db	99	;'c'
   489   0010BB  3A                 	db	58	;':'
   490   0010BC  00                 	db	0
   491   0010BD                     STR_17:
   492   0010BD  41                 	db	65	;'A'
   493   0010BE  55                 	db	85	;'U'
   494   0010BF  43                 	db	67	;'C'
   495   0010C0  55                 	db	85	;'U'
   496   0010C1  4E                 	db	78	;'N'
   497   0010C2  00                 	db	0
   498   0010C3                     STR_20:
   499   0010C3  56                 	db	86	;'V'
   500   0010C4  49                 	db	73	;'I'
   501   0010C5  44                 	db	68	;'D'
   502   0010C6  45                 	db	69	;'E'
   503   0010C7  00                 	db	0
   504   0010C8                     STR_23:
   505   0010C8  20                 	db	32
   506   0010C9  79                 	db	121	;'y'
   507   0010CA  3D                 	db	61	;'='
   508   0010CB  00                 	db	0
   509   0010CC                     STR_4:
   510   0010CC  4E                 	db	78	;'N'
   511   0010CD  20                 	db	32
   512   0010CE  00                 	db	0
   513   0010CF                     STR_22:
   514   0010CF  78                 	db	120	;'x'
   515   0010D0  3D                 	db	61	;'='
   516   0010D1  00                 	db	0
   517   0010D2                     STR_3:
   518   0010D2  41                 	db	65	;'A'
   519   0010D3  52                 	db	82	;'R'
   520   0010D4  00                 	db	0
   521   0010D5                     STR_2:
   522   0010D5  41                 	db	65	;'A'
   523   0010D6  56                 	db	86	;'V'
   524   0010D7  00                 	db	0
   525   0010D8  00                 	db	0	; dummy byte at the end
   526   000000                     
   527                           ; #config settings
   528                           
   529                           	psect	cinit
   530   0024B4                     __pcinit:
   531                           	callstack 0
   532   0024B4                     start_initialization:
   533                           	callstack 0
   534   0024B4                     __initialization:
   535                           	callstack 0
   536                           
   537                           ; Clear objects allocated to COMRAM (5 bytes)
   538   0024B4  6A40               	clrf	(__pbssCOMRAM+4)& (0+255),c
   539   0024B6  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   540   0024B8  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   541   0024BA  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   542   0024BC  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   543   0024BE                     end_of_initialization:
   544                           	callstack 0
   545   0024BE                     __end_of__initialization:
   546                           	callstack 0
   547   0024BE  0100               	movlb	0
   548   0024C0  EFF6  F011         	goto	_main	;jump to C main() function
   549                           
   550                           	psect	bssCOMRAM
   551   00003C                     __pbssCOMRAM:
   552                           	callstack 0
   553   00003C                     _tc:
   554                           	callstack 0
   555   00003C                     	ds	3
   556   00003F                     _Val_sem_rxtx:
   557                           	callstack 0
   558   00003F                     	ds	1
   559   000040                     _Val_sem_cna:
   560                           	callstack 0
   561   000040                     	ds	1
   562                           
   563                           	psect	cstackBANK0
   564   000085                     __pcstackBANK0:
   565                           	callstack 0
   566   000085                     initialisation_du_systeme@temp:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x0
   570   000085                     	ds	1
   571   000086                     
   572                           ; 1 bytes @ 0x1
   573                           
   574                           	psect	cstackCOMRAM
   575   000001                     __pcstackCOMRAM:
   576                           	callstack 0
   577   000001                     ?_Diminution:
   578   000001                     ?___wmul:
   579                           	callstack 0
   580   000001                     ?___awmod:
   581                           	callstack 0
   582   000001                     ?___lwdiv:
   583                           	callstack 0
   584   000001                     lecture_8bit_analogique@ret:
   585                           	callstack 0
   586   000001                     write_d_aff@data:
   587                           	callstack 0
   588   000001                     write_c_aff@command:
   589                           	callstack 0
   590   000001                     check_status_ok@res:
   591                           	callstack 0
   592   000001                     delai_us_char@ucdelai:
   593                           	callstack 0
   594   000001                     tp_delai@itpd:
   595                           	callstack 0
   596   000001                     tache4@a:
   597                           	callstack 0
   598   000001                     tache5@a:
   599                           	callstack 0
   600   000001                     vitesseAdmin@a:
   601                           	callstack 0
   602   000001                     Diminution@vitesse:
   603                           	callstack 0
   604   000001                     stid_delai_us@isdu:
   605                           	callstack 0
   606   000001                     ___wmul@multiplier:
   607                           	callstack 0
   608   000001                     ___awmod@dividend:
   609                           	callstack 0
   610   000001                     ___lwdiv@dividend:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x0
   614   000001                     	ds	1
   615   000002                     lecture_8bit_analogique@channel:
   616                           	callstack 0
   617   000002                     wait_status_ok@err:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x1
   621   000002                     	ds	1
   622   000003                     ??_vitesseAdmin:
   623   000003                     wait_status_ok@status:
   624                           	callstack 0
   625   000003                     lecture_normale@stid_id:
   626                           	callstack 0
   627   000003                     ___wmul@multiplicand:
   628                           	callstack 0
   629   000003                     ___awmod@divisor:
   630                           	callstack 0
   631   000003                     ___lwdiv@divisor:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2
   635   000003                     	ds	1
   636   000004                     wait_status_ok@res:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x3
   640   000004                     	ds	1
   641   000005                     command@cmd:
   642                           	callstack 0
   643   000005                     d1command@cmd:
   644                           	callstack 0
   645   000005                     d2command@d2:
   646                           	callstack 0
   647   000005                     lecture_normale@temps_attente:
   648                           	callstack 0
   649   000005                     ___awmod@counter:
   650                           	callstack 0
   651   000005                     ___wmul@product:
   652                           	callstack 0
   653   000005                     ___lwdiv@quotient:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x4
   657   000005                     	ds	1
   658   000006                     d1command@d1:
   659                           	callstack 0
   660   000006                     d2command@cmd:
   661                           	callstack 0
   662   000006                     lecture_normale@n_octet:
   663                           	callstack 0
   664   000006                     ___awmod@sign:
   665                           	callstack 0
   666   000006                     vitesseAdmin@b:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x5
   670   000006                     	ds	1
   671   000007                     ?___awdiv:
   672                           	callstack 0
   673   000007                     d1command@res:
   674                           	callstack 0
   675   000007                     d2command@d1:
   676                           	callstack 0
   677   000007                     lecture_normale@n_bit:
   678                           	callstack 0
   679   000007                     ___lwdiv@counter:
   680                           	callstack 0
   681   000007                     ___awdiv@dividend:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x6
   685   000007                     	ds	1
   686   000008                     ??_tache2:
   687   000008                     d2command@res:
   688                           	callstack 0
   689   000008                     draw_char@dccar:
   690                           	callstack 0
   691   000008                     draw_hex8@octet:
   692                           	callstack 0
   693   000008                     lecture_normale@octet:
   694                           	callstack 0
   695   000008                     draw_string@tableau:
   696                           	callstack 0
   697   000008                     vitesseAdmin@c:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x7
   701   000008                     	ds	1
   702   000009                     tache6@n:
   703                           	callstack 0
   704   000009                     initialisation_afficheur@error_count:
   705                           	callstack 0
   706   000009                     draw_hex8@c:
   707                           	callstack 0
   708   000009                     goto_lico@colonne:
   709                           	callstack 0
   710   000009                     clear_text@add:
   711                           	callstack 0
   712   000009                     clear_graphics@add:
   713                           	callstack 0
   714   000009                     ___awdiv@divisor:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x8
   718   000009                     	ds	1
   719   00000A                     ??_goto_lico:
   720   00000A                     tache2@ix:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x9
   724   00000A                     	ds	1
   725   00000B                     ___awdiv@counter:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0xA
   729   00000B                     	ds	1
   730   00000C                     goto_lico@ligne:
   731                           	callstack 0
   732   00000C                     ___awdiv@sign:
   733                           	callstack 0
   734   00000C                     tache2@iy:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0xB
   738   00000C                     	ds	1
   739   00000D                     goto_lico@adr:
   740                           	callstack 0
   741   00000D                     ___awdiv@quotient:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0xC
   745   00000D                     	ds	1
   746   00000E                     tache2@hx:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0xD
   750   00000E                     	ds	1
   751   00000F                     ??_draw_dec8:
   752   00000F                     ?_Conversion:
   753                           	callstack 0
   754   00000F                     tache2@lx:
   755                           	callstack 0
   756   00000F                     clear_line@line:
   757                           	callstack 0
   758   00000F                     plot1@y:
   759                           	callstack 0
   760   00000F                     Conversion@a:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xE
   764   00000F                     	ds	1
   765   000010                     ??_plot1:
   766   000010                     tache2@hy:
   767                           	callstack 0
   768   000010                     draw_dec8@unit:
   769                           	callstack 0
   770   000010                     clear_line@column:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0xF
   774   000010                     	ds	1
   775   000011                     tache2@ly:
   776                           	callstack 0
   777   000011                     draw_dec8@octet:
   778                           	callstack 0
   779   000011                     Conversion@valeur_lue:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x10
   783   000011                     	ds	1
   784   000012                     draw_dec8@cent:
   785                           	callstack 0
   786   000012                     plot1@add:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x11
   790   000012                     	ds	1
   791   000013                     draw_dec8@dix:
   792                           	callstack 0
   793   000013                     Conversion@valeur_convertie:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x12
   797   000013                     	ds	1
   798   000014                     draw_dec8@c:
   799                           	callstack 0
   800   000014                     plot1@x:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0x13
   804   000014                     	ds	1
   805   000015                     draw_square@y1:
   806                           	callstack 0
   807                           
   808                           ; 1 bytes @ 0x14
   809   000015                     	ds	1
   810   000016                     draw_square@x2:
   811                           	callstack 0
   812                           
   813                           ; 1 bytes @ 0x15
   814   000016                     	ds	1
   815   000017                     draw_square@y2:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x16
   819   000017                     	ds	1
   820   000018                     draw_square@x1:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x17
   824   000018                     	ds	1
   825   000019                     draw_square@x:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x18
   829   000019                     	ds	1
   830   00001A                     draw_square@y:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x19
   834   00001A                     	ds	1
   835   00001B                     ??_tache1:
   836                           
   837                           ; 1 bytes @ 0x1A
   838   00001B                     	ds	2
   839   00001D                     ??_fonction_d_interruption:
   840                           
   841                           ; 1 bytes @ 0x1C
   842   00001D                     	ds	12
   843                           
   844 ;; *************** function _initialisation_du_systeme *****************
   845 ;; Defined at:
   846 ;;		line 131 in file "systeme.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  temp            1    0[BANK0 ] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;Total ram usage:        1 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 7
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text1
   875   0014DC                     __ptext1:
   876                           	callstack 0
   877   0014DC                     _initialisation_du_systeme:
   878                           	callstack 23
   879                           
   880                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   881                           
   882                           ;incstack = 0
   883   0014DC  0E01               	movlw	1
   884   0014DE  0100               	movlb	0	; () banked
   885   0014E0  6F65               	movwf	101,b
   886                           
   887                           ;systeme.c: 138: queue[0]=1;
   888   0014E2  0E01               	movlw	1
   889   0014E4  6F69               	movwf	105,b
   890                           
   891                           ;systeme.c: 139: queue[1]=2;
   892   0014E6  0E02               	movlw	2
   893   0014E8  6F6A               	movwf	106,b
   894                           
   895                           ;systeme.c: 140: queue[2]=3;
   896   0014EA  0E03               	movlw	3
   897   0014EC  6F6B               	movwf	107,b
   898                           
   899                           ;systeme.c: 141: queue[3]=4;
   900   0014EE  0E04               	movlw	4
   901   0014F0  6F6C               	movwf	108,b
   902                           
   903                           ;systeme.c: 142: queue[4]=5;
   904   0014F2  0E05               	movlw	5
   905   0014F4  6F6D               	movwf	109,b
   906                           
   907                           ;systeme.c: 143: queue[5]=6;
   908   0014F6  0E06               	movlw	6
   909   0014F8  6F6E               	movwf	110,b
   910                           
   911                           ;systeme.c: 145: pointeur_de_tache=6-1;
   912   0014FA  0E05               	movlw	5
   913   0014FC  6F70               	movwf	112,b
   914                           
   915                           ; BSR set to: 0
   916                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   917   0014FE  0E69               	movlw	105
   918   001500  2570               	addwf	112,w,b
   919   001502  6ED9               	movwf	fsr2l,c
   920   001504  6ADA               	clrf	fsr2h,c
   921   001506  0E00               	movlw	0
   922   001508  22DA               	addwfc	fsr2h,f,c
   923   00150A  50DF               	movf	indf2,w,c
   924   00150C  6F6F               	movwf	111,b
   925                           
   926                           ; BSR set to: 0
   927                           ;systeme.c: 151: temp=STKPTR;
   928   00150E  CFFC F085          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   929                           
   930                           ; BSR set to: 0
   931                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   932   001512  0E02               	movlw	2
   933   001514  6EFC               	movwf	252,c	;volatile
   934                           
   935                           ; BSR set to: 0
   936   001516  0EDA               	movlw	low _tache1
   937   001518  6E35               	movwf	_fptr^0,c
   938   00151A  0E10               	movlw	high _tache1
   939   00151C  6E36               	movwf	(_fptr+1)^0,c
   940   00151E  0E00               	movlw	low (_tache1 shr (0+16))
   941   001520  6E37               	movwf	(_fptr+2)^0,c
   942                           
   943                           ; BSR set to: 0
   944   001522  C035  F03A         	movff	_fptr,_val_tos
   945   001526  C036  F03B         	movff	_fptr+1,_val_tos+1
   946                           
   947                           ; BSR set to: 0
   948   00152A  0E3A               	movlw	low _val_tos
   949   00152C  6E38               	movwf	_puc^0,c
   950   00152E  0E00               	movlw	high _val_tos
   951   001530  6E39               	movwf	(_puc+1)^0,c
   952                           
   953                           ; BSR set to: 0
   954   001532  C038  FFD9         	movff	_puc,fsr2l
   955   001536  C039  FFDA         	movff	_puc+1,fsr2h
   956   00153A  50DF               	movf	indf2,w,c
   957   00153C  6EFD               	movwf	253,c	;volatile
   958                           
   959                           ; BSR set to: 0
   960   00153E  4A38               	infsnz	_puc^0,f,c
   961   001540  2A39               	incf	(_puc+1)^0,f,c
   962                           
   963                           ; BSR set to: 0
   964   001542  C038  FFD9         	movff	_puc,fsr2l
   965   001546  C039  FFDA         	movff	_puc+1,fsr2h
   966   00154A  50DF               	movf	indf2,w,c
   967   00154C  6EFE               	movwf	254,c	;volatile
   968                           
   969                           ; BSR set to: 0
   970   00154E  4A38               	infsnz	_puc^0,f,c
   971   001550  2A39               	incf	(_puc+1)^0,f,c
   972                           
   973                           ; BSR set to: 0
   974   001552  C038  FFD9         	movff	_puc,fsr2l
   975   001556  C039  FFDA         	movff	_puc+1,fsr2h
   976   00155A  50DF               	movf	indf2,w,c
   977   00155C  6EFF               	movwf	255,c	;volatile
   978                           
   979                           ; BSR set to: 0
   980                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   981   00155E  0E07               	movlw	7
   982   001560  6EFC               	movwf	252,c	;volatile
   983   001562  0E14               	movlw	low _tache2
   984   001564  6E35               	movwf	_fptr^0,c
   985   001566  0E17               	movlw	high _tache2
   986   001568  6E36               	movwf	(_fptr+1)^0,c
   987   00156A  0E00               	movlw	low (_tache2 shr (0+16))
   988   00156C  6E37               	movwf	(_fptr+2)^0,c
   989                           
   990                           ; BSR set to: 0
   991   00156E  C035  F03A         	movff	_fptr,_val_tos
   992   001572  C036  F03B         	movff	_fptr+1,_val_tos+1
   993   001576  0E3A               	movlw	low _val_tos
   994   001578  6E38               	movwf	_puc^0,c
   995   00157A  0E00               	movlw	high _val_tos
   996   00157C  6E39               	movwf	(_puc+1)^0,c
   997                           
   998                           ; BSR set to: 0
   999   00157E  C038  FFD9         	movff	_puc,fsr2l
  1000   001582  C039  FFDA         	movff	_puc+1,fsr2h
  1001   001586  50DF               	movf	indf2,w,c
  1002   001588  6EFD               	movwf	253,c	;volatile
  1003                           
  1004                           ; BSR set to: 0
  1005   00158A  4A38               	infsnz	_puc^0,f,c
  1006   00158C  2A39               	incf	(_puc+1)^0,f,c
  1007                           
  1008                           ; BSR set to: 0
  1009   00158E  C038  FFD9         	movff	_puc,fsr2l
  1010   001592  C039  FFDA         	movff	_puc+1,fsr2h
  1011   001596  50DF               	movf	indf2,w,c
  1012   001598  6EFE               	movwf	254,c	;volatile
  1013                           
  1014                           ; BSR set to: 0
  1015   00159A  4A38               	infsnz	_puc^0,f,c
  1016   00159C  2A39               	incf	(_puc+1)^0,f,c
  1017                           
  1018                           ; BSR set to: 0
  1019   00159E  C038  FFD9         	movff	_puc,fsr2l
  1020   0015A2  C039  FFDA         	movff	_puc+1,fsr2h
  1021   0015A6  50DF               	movf	indf2,w,c
  1022   0015A8  6EFF               	movwf	255,c	;volatile
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1026   0015AA  0E0C               	movlw	12
  1027   0015AC  6EFC               	movwf	252,c	;volatile
  1028                           
  1029                           ; BSR set to: 0
  1030   0015AE  0EEE               	movlw	low _tache3
  1031   0015B0  6E35               	movwf	_fptr^0,c
  1032   0015B2  0E18               	movlw	high _tache3
  1033   0015B4  6E36               	movwf	(_fptr+1)^0,c
  1034   0015B6  0E00               	movlw	low (_tache3 shr (0+16))
  1035   0015B8  6E37               	movwf	(_fptr+2)^0,c
  1036                           
  1037                           ; BSR set to: 0
  1038   0015BA  C035  F03A         	movff	_fptr,_val_tos
  1039   0015BE  C036  F03B         	movff	_fptr+1,_val_tos+1
  1040                           
  1041                           ; BSR set to: 0
  1042   0015C2  0E3A               	movlw	low _val_tos
  1043   0015C4  6E38               	movwf	_puc^0,c
  1044   0015C6  0E00               	movlw	high _val_tos
  1045   0015C8  6E39               	movwf	(_puc+1)^0,c
  1046                           
  1047                           ; BSR set to: 0
  1048   0015CA  C038  FFD9         	movff	_puc,fsr2l
  1049   0015CE  C039  FFDA         	movff	_puc+1,fsr2h
  1050   0015D2  50DF               	movf	indf2,w,c
  1051   0015D4  6EFD               	movwf	253,c	;volatile
  1052                           
  1053                           ; BSR set to: 0
  1054   0015D6  4A38               	infsnz	_puc^0,f,c
  1055   0015D8  2A39               	incf	(_puc+1)^0,f,c
  1056                           
  1057                           ; BSR set to: 0
  1058   0015DA  C038  FFD9         	movff	_puc,fsr2l
  1059   0015DE  C039  FFDA         	movff	_puc+1,fsr2h
  1060   0015E2  50DF               	movf	indf2,w,c
  1061   0015E4  6EFE               	movwf	254,c	;volatile
  1062                           
  1063                           ; BSR set to: 0
  1064   0015E6  4A38               	infsnz	_puc^0,f,c
  1065   0015E8  2A39               	incf	(_puc+1)^0,f,c
  1066                           
  1067                           ; BSR set to: 0
  1068   0015EA  C038  FFD9         	movff	_puc,fsr2l
  1069   0015EE  C039  FFDA         	movff	_puc+1,fsr2h
  1070   0015F2  50DF               	movf	indf2,w,c
  1071   0015F4  6EFF               	movwf	255,c	;volatile
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1075   0015F6  0E11               	movlw	17
  1076   0015F8  6EFC               	movwf	252,c	;volatile
  1077   0015FA  0ECC               	movlw	low _tache4
  1078   0015FC  6E35               	movwf	_fptr^0,c
  1079   0015FE  0E19               	movlw	high _tache4
  1080   001600  6E36               	movwf	(_fptr+1)^0,c
  1081   001602  0E00               	movlw	low (_tache4 shr (0+16))
  1082   001604  6E37               	movwf	(_fptr+2)^0,c
  1083                           
  1084                           ; BSR set to: 0
  1085   001606  C035  F03A         	movff	_fptr,_val_tos
  1086   00160A  C036  F03B         	movff	_fptr+1,_val_tos+1
  1087   00160E  0E3A               	movlw	low _val_tos
  1088   001610  6E38               	movwf	_puc^0,c
  1089   001612  0E00               	movlw	high _val_tos
  1090   001614  6E39               	movwf	(_puc+1)^0,c
  1091                           
  1092                           ; BSR set to: 0
  1093   001616  C038  FFD9         	movff	_puc,fsr2l
  1094   00161A  C039  FFDA         	movff	_puc+1,fsr2h
  1095   00161E  50DF               	movf	indf2,w,c
  1096   001620  6EFD               	movwf	253,c	;volatile
  1097                           
  1098                           ; BSR set to: 0
  1099   001622  4A38               	infsnz	_puc^0,f,c
  1100   001624  2A39               	incf	(_puc+1)^0,f,c
  1101                           
  1102                           ; BSR set to: 0
  1103   001626  C038  FFD9         	movff	_puc,fsr2l
  1104   00162A  C039  FFDA         	movff	_puc+1,fsr2h
  1105   00162E  50DF               	movf	indf2,w,c
  1106   001630  6EFE               	movwf	254,c	;volatile
  1107                           
  1108                           ; BSR set to: 0
  1109   001632  4A38               	infsnz	_puc^0,f,c
  1110   001634  2A39               	incf	(_puc+1)^0,f,c
  1111                           
  1112                           ; BSR set to: 0
  1113   001636  C038  FFD9         	movff	_puc,fsr2l
  1114   00163A  C039  FFDA         	movff	_puc+1,fsr2h
  1115   00163E  50DF               	movf	indf2,w,c
  1116   001640  6EFF               	movwf	255,c	;volatile
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1120   001642  0E16               	movlw	22
  1121   001644  6EFC               	movwf	252,c	;volatile
  1122                           
  1123                           ; BSR set to: 0
  1124   001646  0E08               	movlw	low _tache5
  1125   001648  6E35               	movwf	_fptr^0,c
  1126   00164A  0E18               	movlw	high _tache5
  1127   00164C  6E36               	movwf	(_fptr+1)^0,c
  1128   00164E  0E00               	movlw	low (_tache5 shr (0+16))
  1129   001650  6E37               	movwf	(_fptr+2)^0,c
  1130                           
  1131                           ; BSR set to: 0
  1132   001652  C035  F03A         	movff	_fptr,_val_tos
  1133   001656  C036  F03B         	movff	_fptr+1,_val_tos+1
  1134                           
  1135                           ; BSR set to: 0
  1136   00165A  0E3A               	movlw	low _val_tos
  1137   00165C  6E38               	movwf	_puc^0,c
  1138   00165E  0E00               	movlw	high _val_tos
  1139   001660  6E39               	movwf	(_puc+1)^0,c
  1140                           
  1141                           ; BSR set to: 0
  1142   001662  C038  FFD9         	movff	_puc,fsr2l
  1143   001666  C039  FFDA         	movff	_puc+1,fsr2h
  1144   00166A  50DF               	movf	indf2,w,c
  1145   00166C  6EFD               	movwf	253,c	;volatile
  1146                           
  1147                           ; BSR set to: 0
  1148   00166E  4A38               	infsnz	_puc^0,f,c
  1149   001670  2A39               	incf	(_puc+1)^0,f,c
  1150                           
  1151                           ; BSR set to: 0
  1152   001672  C038  FFD9         	movff	_puc,fsr2l
  1153   001676  C039  FFDA         	movff	_puc+1,fsr2h
  1154   00167A  50DF               	movf	indf2,w,c
  1155   00167C  6EFE               	movwf	254,c	;volatile
  1156                           
  1157                           ; BSR set to: 0
  1158   00167E  4A38               	infsnz	_puc^0,f,c
  1159   001680  2A39               	incf	(_puc+1)^0,f,c
  1160                           
  1161                           ; BSR set to: 0
  1162   001682  C038  FFD9         	movff	_puc,fsr2l
  1163   001686  C039  FFDA         	movff	_puc+1,fsr2h
  1164   00168A  50DF               	movf	indf2,w,c
  1165   00168C  6EFF               	movwf	255,c	;volatile
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1169   00168E  0E1B               	movlw	27
  1170   001690  6EFC               	movwf	252,c	;volatile
  1171   001692  0E50               	movlw	low _tache6
  1172   001694  6E35               	movwf	_fptr^0,c
  1173   001696  0E21               	movlw	high _tache6
  1174   001698  6E36               	movwf	(_fptr+1)^0,c
  1175   00169A  0E00               	movlw	low (_tache6 shr (0+16))
  1176   00169C  6E37               	movwf	(_fptr+2)^0,c
  1177                           
  1178                           ; BSR set to: 0
  1179   00169E  C035  F03A         	movff	_fptr,_val_tos
  1180   0016A2  C036  F03B         	movff	_fptr+1,_val_tos+1
  1181   0016A6  0E3A               	movlw	low _val_tos
  1182   0016A8  6E38               	movwf	_puc^0,c
  1183   0016AA  0E00               	movlw	high _val_tos
  1184   0016AC  6E39               	movwf	(_puc+1)^0,c
  1185                           
  1186                           ; BSR set to: 0
  1187   0016AE  C038  FFD9         	movff	_puc,fsr2l
  1188   0016B2  C039  FFDA         	movff	_puc+1,fsr2h
  1189   0016B6  50DF               	movf	indf2,w,c
  1190   0016B8  6EFD               	movwf	253,c	;volatile
  1191                           
  1192                           ; BSR set to: 0
  1193   0016BA  4A38               	infsnz	_puc^0,f,c
  1194   0016BC  2A39               	incf	(_puc+1)^0,f,c
  1195                           
  1196                           ; BSR set to: 0
  1197   0016BE  C038  FFD9         	movff	_puc,fsr2l
  1198   0016C2  C039  FFDA         	movff	_puc+1,fsr2h
  1199   0016C6  50DF               	movf	indf2,w,c
  1200   0016C8  6EFE               	movwf	254,c	;volatile
  1201                           
  1202                           ; BSR set to: 0
  1203   0016CA  4A38               	infsnz	_puc^0,f,c
  1204   0016CC  2A39               	incf	(_puc+1)^0,f,c
  1205                           
  1206                           ; BSR set to: 0
  1207   0016CE  C038  FFD9         	movff	_puc,fsr2l
  1208   0016D2  C039  FFDA         	movff	_puc+1,fsr2h
  1209   0016D6  50DF               	movf	indf2,w,c
  1210   0016D8  6EFF               	movwf	255,c	;volatile
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;systeme.c: 162: STKPTR=temp;
  1214   0016DA  C085  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;systeme.c: 165: STKPTR_T1=2;
  1218   0016DE  0E02               	movlw	2
  1219   0016E0  0101               	movlb	1	; () banked
  1220   0016E2  6F03               	movwf	3,b
  1221                           
  1222                           ; BSR set to: 1
  1223                           ;systeme.c: 166: STKPTR_T2=7;
  1224   0016E4  0E07               	movlw	7
  1225   0016E6  0102               	movlb	2	; () banked
  1226   0016E8  6F03               	movwf	3,b
  1227                           
  1228                           ; BSR set to: 2
  1229                           ;systeme.c: 167: STKPTR_T3=12;
  1230   0016EA  0E0C               	movlw	12
  1231   0016EC  0103               	movlb	3	; () banked
  1232   0016EE  6F03               	movwf	3,b
  1233                           
  1234                           ; BSR set to: 3
  1235                           ;systeme.c: 168: STKPTR_T4=17;
  1236   0016F0  0E11               	movlw	17
  1237   0016F2  0104               	movlb	4	; () banked
  1238   0016F4  6F03               	movwf	3,b
  1239                           
  1240                           ; BSR set to: 4
  1241                           ;systeme.c: 169: STKPTR_T5=22;
  1242   0016F6  0E16               	movlw	22
  1243   0016F8  0105               	movlb	5	; () banked
  1244   0016FA  6F03               	movwf	3,b
  1245                           
  1246                           ; BSR set to: 5
  1247                           ;systeme.c: 170: STKPTR_T6=27;
  1248   0016FC  0E1B               	movlw	27
  1249   0016FE  0106               	movlb	6	; () banked
  1250   001700  6F03               	movwf	3,b
  1251                           
  1252                           ; BSR set to: 6
  1253                           ;systeme.c: 173: Tick_Count=0;
  1254   001702  0E00               	movlw	0
  1255   001704  0100               	movlb	0	; () banked
  1256   001706  6F72               	movwf	114,b
  1257   001708  0E00               	movlw	0
  1258   00170A  6F71               	movwf	113,b
  1259                           
  1260                           ; BSR set to: 0
  1261                           ;systeme.c: 175: T0CON=0x01;
  1262   00170C  0E01               	movlw	1
  1263   00170E  6ED5               	movwf	213,c	;volatile
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;systeme.c: 176: T0IE=1;
  1267   001710  8AF2               	bsf	4082,5,c	;volatile
  1268                           
  1269                           ; BSR set to: 0
  1270   001712  0012               	return		;funcret
  1271   001714                     __end_of_initialisation_du_systeme:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _initialisation_des_ports *****************
  1275 ;; Defined at:
  1276 ;;		line 23 in file "main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 7
  1297 ;; This function calls:
  1298 ;;		Nothing
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text2
  1305   002214                     __ptext2:
  1306                           	callstack 0
  1307   002214                     _initialisation_des_ports:
  1308                           	callstack 23
  1309                           
  1310                           ;main.c: 26: MEMCON=0xA0;
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;incstack = 0
  1314   002214  0EA0               	movlw	160
  1315   002216  010F               	movlb	15	; () banked
  1316   002218  6F26               	movwf	38,b	;volatile
  1317                           
  1318                           ;main.c: 29: ANCON0=0x00;
  1319   00221A  0E00               	movlw	0
  1320   00221C  6F25               	movwf	37,b	;volatile
  1321                           
  1322                           ;main.c: 30: ANCON1=0x00;
  1323   00221E  0E00               	movlw	0
  1324   002220  6F24               	movwf	36,b	;volatile
  1325                           
  1326                           ;main.c: 31: ANCON2=0x00;
  1327   002222  0E00               	movlw	0
  1328   002224  6F23               	movwf	35,b	;volatile
  1329                           
  1330                           ; BSR set to: 15
  1331                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1332   002226  8125               	bsf	37,0,b	;volatile
  1333                           
  1334                           ; BSR set to: 15
  1335                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1336   002228  8325               	bsf	37,1,b	;volatile
  1337                           
  1338                           ; BSR set to: 15
  1339                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1340   00222A  8525               	bsf	37,2,b	;volatile
  1341                           
  1342                           ; BSR set to: 15
  1343                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1344   00222C  8725               	bsf	37,3,b	;volatile
  1345                           
  1346                           ; BSR set to: 15
  1347                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1348   00222E  8524               	bsf	36,2,b	;volatile
  1349                           
  1350                           ; BSR set to: 15
  1351                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1352   002230  8724               	bsf	36,3,b	;volatile
  1353                           
  1354                           ; BSR set to: 15
  1355                           ;main.c: 41: LATCbits.LATC2=1;
  1356   002232  848B               	bsf	139,2,c	;volatile
  1357                           
  1358                           ; BSR set to: 15
  1359                           ;main.c: 42: LATCbits.LATC1=1;
  1360   002234  828B               	bsf	139,1,c	;volatile
  1361                           
  1362                           ; BSR set to: 15
  1363                           ;main.c: 43: LATGbits.LATG0=1;
  1364   002236  808F               	bsf	143,0,c	;volatile
  1365                           
  1366                           ; BSR set to: 15
  1367                           ;main.c: 46: TRISCbits.TRISC2=0;
  1368   002238  9494               	bcf	148,2,c	;volatile
  1369                           
  1370                           ; BSR set to: 15
  1371                           ;main.c: 47: TRISCbits.TRISC1=0;
  1372   00223A  9294               	bcf	148,1,c	;volatile
  1373                           
  1374                           ; BSR set to: 15
  1375                           ;main.c: 48: TRISGbits.TRISG0=0;
  1376   00223C  9098               	bcf	152,0,c	;volatile
  1377                           
  1378                           ; BSR set to: 15
  1379                           ;main.c: 49: TRISGbits.TRISG3=0;
  1380   00223E  9698               	bcf	152,3,c	;volatile
  1381                           
  1382                           ; BSR set to: 15
  1383                           ;main.c: 50: TRISGbits.TRISG4=0;
  1384   002240  9898               	bcf	152,4,c	;volatile
  1385                           
  1386                           ; BSR set to: 15
  1387                           ;main.c: 51: TRISDbits.TRISD2=0;
  1388   002242  9495               	bcf	149,2,c	;volatile
  1389                           
  1390                           ; BSR set to: 15
  1391                           ;main.c: 52: TRISDbits.TRISD3=0;
  1392   002244  9695               	bcf	149,3,c	;volatile
  1393                           
  1394                           ; BSR set to: 15
  1395                           ;main.c: 55: INTCON2bits.RBPU=0;
  1396   002246  9EF1               	bcf	241,7,c	;volatile
  1397                           
  1398                           ; BSR set to: 15
  1399                           ;main.c: 56: PADCFG1bits.REPU=1;
  1400   002248  8D53               	bsf	83,6,b	;volatile
  1401                           
  1402                           ; BSR set to: 15
  1403   00224A  0012               	return		;funcret
  1404   00224C                     __end_of_initialisation_des_ports:
  1405                           	callstack 0
  1406                           
  1407 ;; *************** function _Init *****************
  1408 ;; Defined at:
  1409 ;;		line 4 in file "semaphore.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  sem             1  [STACK] unsigned char 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1  [STACK] void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;Total ram usage:        0 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 7
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_main
  1434 ;;		_tache1
  1435 ;; This function uses a reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text3
  1439   002366                     __ptext3:
  1440                           	callstack 0
  1441   002366                     _Init:
  1442                           	callstack 20
  1443                           
  1444                           ;semaphore.c: 6: switch (sem)
  1445                           
  1446                           ; BSR set to: 15
  1447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1448                           ;incstack = 0
  1449   002366  D006               	goto	l2833
  1450   002368                     l2829:
  1451                           
  1452                           ;semaphore.c: 9: Val_sem_cna=1;
  1453   002368  0E01               	movlw	1
  1454   00236A  6E40               	movwf	_Val_sem_cna^0,c
  1455                           
  1456                           ;semaphore.c: 10: break;
  1457   00236C  D00B               	goto	l1569
  1458   00236E                     l2831:
  1459                           
  1460                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1461   00236E  0E01               	movlw	1
  1462   002370  6E3F               	movwf	_Val_sem_rxtx^0,c
  1463                           
  1464                           ;semaphore.c: 13: break;
  1465   002372  D008               	goto	l1569
  1466   002374                     l2833:
  1467                           
  1468                           ;stkvar	Init@sem @ sp[(0)+-1]
  1469   002374  0EFF               	movlw	-1
  1470   002376  50E3               	movf	plusw1,w,c
  1471                           
  1472                           ; Switch size 1, requested type "simple"
  1473                           ; Number of cases is 2, Range of values is 1 to 2
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; simple_byte            7     4 (average)
  1477                           ;	Chosen strategy is simple_byte
  1478   002378  0A01               	xorlw	1	; case 1
  1479   00237A  B4D8               	btfsc	status,2,c
  1480   00237C  D7F5               	goto	l2829
  1481   00237E  0A03               	xorlw	3	; case 2
  1482   002380  B4D8               	btfsc	status,2,c
  1483   002382  D7F5               	goto	l2831
  1484   002384                     l1569:
  1485                           
  1486                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1487   002384  52E5               	movf	postdec1,f,c
  1488   002386  0012               	return		;funcret
  1489   002388                     __end_of_Init:
  1490                           	callstack 0
  1491                           
  1492 ;; *************** function _fonction_d_interruption *****************
  1493 ;; Defined at:
  1494 ;;		line 17 in file "systeme.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;		None
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;		None
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;Total ram usage:       12 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 6
  1515 ;; This function calls:
  1516 ;;		_tache1
  1517 ;;		_tache2
  1518 ;;		_tache3
  1519 ;;		_tache4
  1520 ;;		_tache5
  1521 ;;		_tache6
  1522 ;; This function is called by:
  1523 ;;		Interrupt level 2
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	intcode
  1528   000008                     __pintcode:
  1529                           	callstack 0
  1530   000008                     _fonction_d_interruption:
  1531                           	callstack 23
  1532                           
  1533                           ;incstack = 0
  1534   000008  CFE9 F01D          	movff	fsr0l,??_fonction_d_interruption
  1535   00000C  CFEA F01E          	movff	fsr0h,??_fonction_d_interruption+1
  1536   000010  CFE1 F01F          	movff	fsr1l,??_fonction_d_interruption+2
  1537   000014  CFE2 F020          	movff	fsr1h,??_fonction_d_interruption+3
  1538   000018  CFD9 F021          	movff	fsr2l,??_fonction_d_interruption+4
  1539   00001C  CFDA F022          	movff	fsr2h,??_fonction_d_interruption+5
  1540   000020  CFF3 F023          	movff	prodl,??_fonction_d_interruption+6
  1541   000024  CFF4 F024          	movff	prodh,??_fonction_d_interruption+7
  1542   000028  CFF6 F025          	movff	tblptrl,??_fonction_d_interruption+8
  1543   00002C  CFF7 F026          	movff	tblptrh,??_fonction_d_interruption+9
  1544   000030  CFF8 F027          	movff	tblptru,??_fonction_d_interruption+10
  1545   000034  CFF5 F028          	movff	tablat,??_fonction_d_interruption+11
  1546   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1547                           
  1548                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1549   00003C  CFD8 F061          	movff	status,97	;volatile
  1550   000040  0100               	movlb	0	; () banked
  1551   000042  6F60               	movwf	96,b
  1552                           
  1553                           ; BSR set to: 0
  1554   000044  CFE0 F062          	movff	bsr,98	;volatile
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1558   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1559                           
  1560                           ; BSR set to: 0
  1561   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;systeme.c: 24: if(T0IE && T0IF)
  1565   000050  BAF2               	btfsc	4082,5,c	;volatile
  1566                           
  1567                           ; BSR set to: 0
  1568   000052  A4F2               	btfss	4082,2,c	;volatile
  1569   000054  D143               	goto	i2l5401
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1573   000056  0565               	decf	101,w,b
  1574   000058  A4D8               	btfss	status,2,c
  1575   00005A  D004               	goto	i2l5101
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1579   00005C  0E1B               	movlw	27
  1580   00005E  6EFC               	movwf	252,c	;volatile
  1581                           
  1582                           ;systeme.c: 29: DEMARRAGE=0;
  1583   000060  0E00               	movlw	0
  1584   000062  6F65               	movwf	101,b
  1585   000064                     i2l5101:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1589   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1590                           
  1591                           ;systeme.c: 35: FSR0L=0;
  1592   000068  0E00               	movlw	0
  1593   00006A  6EE9               	movwf	233,c	;volatile
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1597   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1598                           
  1599                           ; BSR set to: 0
  1600   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1601                           
  1602                           ; BSR set to: 0
  1603   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1610   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1623   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1627                           
  1628                           ; BSR set to: 0
  1629   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1630                           
  1631                           ; BSR set to: 0
  1632   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1636   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1640                           
  1641                           ; BSR set to: 0
  1642   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1643                           
  1644                           ; BSR set to: 0
  1645   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1649   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1650                           
  1651                           ; BSR set to: 0
  1652   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1653                           
  1654                           ;systeme.c: 44: FSR1H=0;
  1655   0000B4  0E00               	movlw	0
  1656   0000B6  6EE2               	movwf	226,c	;volatile
  1657                           
  1658                           ;systeme.c: 45: FSR1L=0;
  1659   0000B8  0E00               	movlw	0
  1660   0000BA  6EE1               	movwf	225,c	;volatile
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1664   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1665                           
  1666                           ; BSR set to: 0
  1667   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1668                           
  1669                           ; BSR set to: 0
  1670   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1671                           
  1672                           ; BSR set to: 0
  1673   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1674                           
  1675                           ; BSR set to: 0
  1676                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1677   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1678                           
  1679                           ; BSR set to: 0
  1680   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1681                           
  1682                           ; BSR set to: 0
  1683   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1684                           
  1685                           ; BSR set to: 0
  1686   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1690   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1691                           
  1692                           ; BSR set to: 0
  1693   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1694                           
  1695                           ; BSR set to: 0
  1696   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1697                           
  1698                           ; BSR set to: 0
  1699   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1703   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1704                           
  1705                           ; BSR set to: 0
  1706   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1707                           
  1708                           ; BSR set to: 0
  1709   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1710                           
  1711                           ; BSR set to: 0
  1712   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1716   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1717                           
  1718                           ; BSR set to: 0
  1719   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1720                           
  1721                           ; BSR set to: 0
  1722   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1723                           
  1724                           ; BSR set to: 0
  1725   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1729   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1730                           
  1731                           ; BSR set to: 0
  1732   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1733                           
  1734                           ; BSR set to: 0
  1735   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1736                           
  1737                           ; BSR set to: 0
  1738   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1739                           
  1740                           ; BSR set to: 0
  1741                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1742   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1743                           
  1744                           ; BSR set to: 0
  1745   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1746                           
  1747                           ; BSR set to: 0
  1748   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1749                           
  1750                           ; BSR set to: 0
  1751   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1755   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1756                           
  1757                           ; BSR set to: 0
  1758   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1759                           
  1760                           ; BSR set to: 0
  1761   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1762                           
  1763                           ; BSR set to: 0
  1764   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1768   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1772                           
  1773                           ; BSR set to: 0
  1774   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1775                           
  1776                           ; BSR set to: 0
  1777   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1781   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1782                           
  1783                           ; BSR set to: 0
  1784   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1785                           
  1786                           ; BSR set to: 0
  1787   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1788                           
  1789                           ; BSR set to: 0
  1790   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1794   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1795                           
  1796                           ; BSR set to: 0
  1797   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1798                           
  1799                           ; BSR set to: 0
  1800   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1801                           
  1802                           ; BSR set to: 0
  1803   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1804                           
  1805                           ; BSR set to: 0
  1806                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1807   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1808                           
  1809                           ; BSR set to: 0
  1810   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1811                           
  1812                           ; BSR set to: 0
  1813   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1814                           
  1815                           ; BSR set to: 0
  1816   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1817                           
  1818                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1819   00017C  0E8A               	movlw	138
  1820   00017E  6ED7               	movwf	215,c	;volatile
  1821   000180  0ECF               	movlw	207
  1822   000182  6ED6               	movwf	214,c	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;systeme.c: 63: T0IF=0;
  1826   000184  94F2               	bcf	4082,2,c	;volatile
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;systeme.c: 65: Tick_Count++;
  1830   000186  4B71               	infsnz	113,f,b
  1831   000188  2B72               	incf	114,f,b
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;systeme.c: 67: pointeur_de_tache++;
  1835   00018A  2B70               	incf	112,f,b
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1839   00018C  0E06               	movlw	6
  1840   00018E  1970               	xorwf	112,w,b
  1841   000190  A4D8               	btfss	status,2,c
  1842   000192  D002               	goto	i2l5245
  1843                           
  1844                           ; BSR set to: 0
  1845                           ;systeme.c: 69: pointeur_de_tache=0;
  1846   000194  0E00               	movlw	0
  1847   000196  6F70               	movwf	112,b
  1848   000198                     i2l5245:
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1852   000198  0E69               	movlw	105
  1853   00019A  2570               	addwf	112,w,b
  1854   00019C  6ED9               	movwf	fsr2l,c
  1855   00019E  6ADA               	clrf	fsr2h,c
  1856   0001A0  0E00               	movlw	0
  1857   0001A2  22DA               	addwfc	fsr2h,f,c
  1858   0001A4  50DF               	movf	indf2,w,c
  1859   0001A6  6F6F               	movwf	111,b
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;systeme.c: 75: FSR1H=0;
  1863   0001A8  0E00               	movlw	0
  1864   0001AA  6EE2               	movwf	226,c	;volatile
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;systeme.c: 76: FSR1L=0;
  1868   0001AC  0E00               	movlw	0
  1869   0001AE  6EE1               	movwf	225,c	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;systeme.c: 77: FSR0H=tache_active;
  1873   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;systeme.c: 78: FSR0L=18;
  1877   0001B4  0E12               	movlw	18
  1878   0001B6  6EE9               	movwf	233,c	;volatile
  1879                           
  1880                           ; BSR set to: 0
  1881                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1882   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1886                           
  1887                           ; BSR set to: 0
  1888   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1889                           
  1890                           ; BSR set to: 0
  1891   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1895   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1896                           
  1897                           ; BSR set to: 0
  1898   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1902                           
  1903                           ; BSR set to: 0
  1904   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1908   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1915                           
  1916                           ; BSR set to: 0
  1917   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1918                           
  1919                           ; BSR set to: 0
  1920                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1921   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1925                           
  1926                           ; BSR set to: 0
  1927   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1928                           
  1929                           ; BSR set to: 0
  1930   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1934   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1938                           
  1939                           ; BSR set to: 0
  1940   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1941                           
  1942                           ; BSR set to: 0
  1943   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1947   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1948                           
  1949                           ; BSR set to: 0
  1950   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1951                           
  1952                           ; BSR set to: 0
  1953   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1954                           
  1955                           ; BSR set to: 0
  1956   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1960   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1961                           
  1962                           ; BSR set to: 0
  1963   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1964                           
  1965                           ; BSR set to: 0
  1966   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1967                           
  1968                           ; BSR set to: 0
  1969   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1973   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1974                           
  1975                           ; BSR set to: 0
  1976   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1977                           
  1978                           ; BSR set to: 0
  1979   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1980                           
  1981                           ; BSR set to: 0
  1982   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1986   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1987                           
  1988                           ; BSR set to: 0
  1989   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1990                           
  1991                           ; BSR set to: 0
  1992   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1993                           
  1994                           ; BSR set to: 0
  1995   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1999   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2000                           
  2001                           ; BSR set to: 0
  2002   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2006                           
  2007                           ; BSR set to: 0
  2008   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2012   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2013                           
  2014                           ; BSR set to: 0
  2015   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2016                           
  2017                           ; BSR set to: 0
  2018   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2019                           
  2020                           ; BSR set to: 0
  2021   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2025   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2026                           
  2027                           ; BSR set to: 0
  2028   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2032                           
  2033                           ; BSR set to: 0
  2034   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;systeme.c: 96: FSR0H=tache_active;
  2038   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;systeme.c: 97: FSR0L=0;
  2042   00027C  0E00               	movlw	0
  2043   00027E  6EE9               	movwf	233,c	;volatile
  2044                           
  2045                           ; BSR set to: 0
  2046                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  2047   000280  CFEE F060          	movff	postinc0,96	;volatile
  2048                           
  2049                           ; BSR set to: 0
  2050   000284  CFEE F061          	movff	postinc0,97	;volatile
  2051                           
  2052                           ; BSR set to: 0
  2053   000288  CFEE F062          	movff	postinc0,98	;volatile
  2054                           
  2055                           ; BSR set to: 0
  2056   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2060   000290  CFEE F063          	movff	postinc0,99	;volatile
  2061                           
  2062                           ; BSR set to: 0
  2063   000294  CFEE F064          	movff	postinc0,100	;volatile
  2064                           
  2065                           ; BSR set to: 0
  2066   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2067                           
  2068                           ; BSR set to: 0
  2069   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2073   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2074                           
  2075                           ; BSR set to: 0
  2076   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2077                           
  2078                           ; BSR set to: 0
  2079   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2080                           
  2081                           ; BSR set to: 0
  2082   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2086   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2087                           
  2088                           ; BSR set to: 0
  2089   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2090                           
  2091                           ; BSR set to: 0
  2092   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2093                           
  2094                           ; BSR set to: 0
  2095   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2099   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2100                           
  2101                           ; BSR set to: 0
  2102   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2106   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2107                           
  2108                           ; BSR set to: 0
  2109   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2110                           
  2111                           ; BSR set to: 0
  2112   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2113                           
  2114                           ; BSR set to: 0
  2115                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2116   0002D4  5160               	movf	96,w,b
  2117                           
  2118                           ; BSR set to: 0
  2119   0002D6  C061 FFD8          	movff	97,status	;volatile
  2120   0002DA  0010               	retfie		;# 
  2121   0002DC                     i2l5401:
  2122                           
  2123                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2124   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2125   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2126   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2127                           
  2128                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2129   0002E8  0100               	movlb	0	; () banked
  2130   0002EA  5160               	movf	96,w,b
  2131                           
  2132                           ; BSR set to: 0
  2133   0002EC  C061 FFD8          	movff	97,status	;volatile
  2134   0002F0  0010               	retfie		;# 
  2135                           
  2136                           ;systeme.c: 123: tache1();
  2137   0002F2  EC6D  F008         	call	_tache1	;wreg free
  2138                           
  2139                           ;systeme.c: 124: tache2();
  2140   0002F6  EC8A  F00B         	call	_tache2	;wreg free
  2141                           
  2142                           ;systeme.c: 125: tache3();
  2143   0002FA  EC77  F00C         	call	_tache3	;wreg free
  2144                           
  2145                           ;systeme.c: 126: tache4();
  2146   0002FE  ECE6  F00C         	call	_tache4	;wreg free
  2147                           
  2148                           ;systeme.c: 127: tache5();
  2149   000302  EC04  F00C         	call	_tache5	;wreg free
  2150                           
  2151                           ;systeme.c: 128: tache6();
  2152   000306  ECA8  F010         	call	_tache6	;wreg free
  2153   00030A  C028  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2154   00030E  C027  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2155   000312  C026  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2156   000316  C025  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2157   00031A  C024  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2158   00031E  C023  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2159   000322  C022  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2160   000326  C021  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2161   00032A  C020  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2162   00032E  C01F  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2163   000332  C01E  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2164   000336  C01D  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2165   00033A  0011               	retfie		f
  2166   00033C                     __end_of_fonction_d_interruption:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function _tache6 *****************
  2170 ;; Defined at:
  2171 ;;		line 3 in file "T6.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  n               1    8[COMRAM] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;Total ram usage:        1 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 2
  2192 ;; This function calls:
  2193 ;;		_lecture_normale
  2194 ;; This function is called by:
  2195 ;;		_fonction_d_interruption
  2196 ;;		_initialisation_du_systeme
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           	psect	text5
  2201   002150                     __ptext5:
  2202                           	callstack 0
  2203   002150                     _tache6:
  2204                           	callstack 26
  2205                           
  2206                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2207                           
  2208                           ;incstack = 0
  2209                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2210   002150  0E75               	movlw	117
  2211   002152  6E03               	movwf	lecture_normale@stid_id^0,c
  2212   002154  0E00               	movlw	0
  2213   002156  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2214   002158  EC0A  F00E         	call	_lecture_normale	;wreg free
  2215   00215C  6E09               	movwf	tache6@n^0,c
  2216                           
  2217                           ;T6.c: 9: if (n > 0)
  2218   00215E  5009               	movf	tache6@n^0,w,c
  2219   002160  B4D8               	btfsc	status,2,c
  2220   002162  D015               	goto	i2l5067
  2221                           
  2222                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2223   002164  0E04               	movlw	4
  2224   002166  1809               	xorwf	tache6@n^0,w,c
  2225   002168  A4D8               	btfss	status,2,c
  2226   00216A  D004               	goto	i2l5059
  2227                           
  2228                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2229   00216C  C009  F07F         	movff	tache6@n,127
  2230                           
  2231                           ;T6.c: 16: Personne = 2;
  2232   002170  0E02               	movlw	2
  2233   002172  D007               	goto	L1
  2234   002174                     i2l5059:
  2235                           
  2236                           ;T6.c: 18: else if (n == 8)
  2237   002174  0E08               	movlw	8
  2238   002176  1809               	xorwf	tache6@n^0,w,c
  2239   002178  A4D8               	btfss	status,2,c
  2240   00217A  D005               	goto	i2l5065
  2241                           
  2242                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2243   00217C  C009  F07F         	movff	tache6@n,127
  2244                           
  2245                           ;T6.c: 21: Personne = 1;
  2246   002180  0E01               	movlw	1
  2247   002182                     L1:
  2248   002182  0100               	movlb	0	; () banked
  2249   002184  D008               	goto	L2
  2250   002186                     i2l5065:
  2251                           
  2252                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2253   002186  0E00               	movlw	0
  2254   002188  0100               	movlb	0	; () banked
  2255   00218A  6F7F               	movwf	127,b
  2256   00218C  D7E1               	goto	__ptext5
  2257   00218E                     i2l5067:
  2258                           
  2259                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2260   00218E  0E00               	movlw	0
  2261   002190  0100               	movlb	0	; () banked
  2262   002192  6F7F               	movwf	127,b
  2263                           
  2264                           ;T6.c: 33: Personne = 0;
  2265   002194  0E00               	movlw	0
  2266   002196                     L2:
  2267   002196  6F82               	movwf	130,b
  2268   002198  D7DB               	goto	__ptext5
  2269   00219A                     __end_of_tache6:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _lecture_normale *****************
  2273 ;; Defined at:
  2274 ;;		line 5 in file "stid.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2277 ;;		 -> badge(10), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  octet           1    7[COMRAM] unsigned char 
  2280 ;;  n_bit           1    6[COMRAM] unsigned char 
  2281 ;;  n_octet         1    5[COMRAM] unsigned char 
  2282 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      unsigned char 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;Total ram usage:        6 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 1
  2299 ;; This function calls:
  2300 ;;		_stid_delai_us
  2301 ;; This function is called by:
  2302 ;;		_tache6
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text6
  2307   001C14                     __ptext6:
  2308                           	callstack 0
  2309   001C14                     _lecture_normale:
  2310                           	callstack 26
  2311                           
  2312                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;incstack = 0
  2316   001C14  8295               	bsf	149,1,c	;volatile
  2317                           
  2318                           ;stid.c: 10: LATDbits.LATD3=0;
  2319   001C16  968C               	bcf	140,3,c	;volatile
  2320                           
  2321                           ;stid.c: 11: LATDbits.LATD2=0;
  2322   001C18  948C               	bcf	140,2,c	;volatile
  2323                           
  2324                           ;stid.c: 12: stid_delai_us(100);
  2325   001C1A  0E00               	movlw	0
  2326   001C1C  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2327   001C1E  0E64               	movlw	100
  2328   001C20  6E01               	movwf	stid_delai_us@isdu^0,c
  2329   001C22  EC2A  F012         	call	_stid_delai_us	;wreg free
  2330                           
  2331                           ;stid.c: 13: LATDbits.LATD3=1;
  2332   001C26  868C               	bsf	140,3,c	;volatile
  2333                           
  2334                           ;stid.c: 14: temps_attente=0;
  2335   001C28  0E00               	movlw	0
  2336   001C2A  6E05               	movwf	lecture_normale@temps_attente^0,c
  2337   001C2C                     i2l4579:
  2338                           
  2339                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2340   001C2C  0E03               	movlw	3
  2341   001C2E  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2342   001C30  0EE8               	movlw	232
  2343   001C32  6E01               	movwf	stid_delai_us@isdu^0,c
  2344   001C34  EC2A  F012         	call	_stid_delai_us	;wreg free
  2345                           
  2346                           ;stid.c: 18: temps_attente++;
  2347   001C38  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2348                           
  2349                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2350   001C3A  A083               	btfss	131,0,c	;volatile
  2351   001C3C  D002               	goto	i2l4587
  2352                           
  2353                           ;stid.c: 20: temps_attente=65;
  2354   001C3E  0E41               	movlw	65
  2355   001C40  6E05               	movwf	lecture_normale@temps_attente^0,c
  2356   001C42                     i2l4587:
  2357                           
  2358                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2359   001C42  0E40               	movlw	64
  2360   001C44  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2361   001C46  D7F2               	goto	i2l4579
  2362                           
  2363                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2364   001C48  A083               	btfss	131,0,c	;volatile
  2365   001C4A  D033               	goto	i2l4623
  2366                           
  2367                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2368   001C4C  0E00               	movlw	0
  2369   001C4E  6E06               	movwf	lecture_normale@n_octet^0,c
  2370   001C50                     i2l1688:
  2371                           
  2372                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2373   001C50  0E00               	movlw	0
  2374   001C52  6E08               	movwf	lecture_normale@octet^0,c
  2375                           
  2376                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2377   001C54  0E00               	movlw	0
  2378   001C56  6E07               	movwf	lecture_normale@n_bit^0,c
  2379   001C58                     i2l1689:
  2380                           
  2381                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2382   001C58  A283               	btfss	131,1,c	;volatile
  2383   001C5A  D003               	goto	i2l1691
  2384                           
  2385                           ;stid.c: 34: octet=(octet|0x01);
  2386   001C5C  5008               	movf	lecture_normale@octet^0,w,c
  2387   001C5E  0901               	iorlw	1
  2388   001C60  6E08               	movwf	lecture_normale@octet^0,c
  2389   001C62                     i2l1691:
  2390                           
  2391                           ;stid.c: 35: octet=octet<<1;
  2392   001C62  5008               	movf	lecture_normale@octet^0,w,c
  2393   001C64  2408               	addwf	lecture_normale@octet^0,w,c
  2394   001C66  6E08               	movwf	lecture_normale@octet^0,c
  2395                           
  2396                           ;stid.c: 36: stid_delai_us(100);
  2397   001C68  0E00               	movlw	0
  2398   001C6A  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2399   001C6C  0E64               	movlw	100
  2400   001C6E  6E01               	movwf	stid_delai_us@isdu^0,c
  2401   001C70  EC2A  F012         	call	_stid_delai_us	;wreg free
  2402                           
  2403                           ;stid.c: 37: LATDbits.LATD2=1;
  2404   001C74  848C               	bsf	140,2,c	;volatile
  2405                           
  2406                           ;stid.c: 38: stid_delai_us(500);
  2407   001C76  0E01               	movlw	1
  2408   001C78  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2409   001C7A  0EF4               	movlw	244
  2410   001C7C  6E01               	movwf	stid_delai_us@isdu^0,c
  2411   001C7E  EC2A  F012         	call	_stid_delai_us	;wreg free
  2412                           
  2413                           ;stid.c: 39: LATDbits.LATD2=0;
  2414   001C82  948C               	bcf	140,2,c	;volatile
  2415                           
  2416                           ;stid.c: 40: stid_delai_us(400);
  2417   001C84  0E01               	movlw	1
  2418   001C86  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2419   001C88  0E90               	movlw	144
  2420   001C8A  6E01               	movwf	stid_delai_us@isdu^0,c
  2421   001C8C  EC2A  F012         	call	_stid_delai_us	;wreg free
  2422   001C90  2A07               	incf	lecture_normale@n_bit^0,f,c
  2423   001C92  0E07               	movlw	7
  2424   001C94  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2425   001C96  D7E0               	goto	i2l1689
  2426                           
  2427                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2428   001C98  5006               	movf	lecture_normale@n_octet^0,w,c
  2429   001C9A  2403               	addwf	lecture_normale@stid_id^0,w,c
  2430   001C9C  6ED9               	movwf	fsr2l,c
  2431   001C9E  0E00               	movlw	0
  2432   001CA0  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2433   001CA2  6EDA               	movwf	fsr2h,c
  2434   001CA4  C008  FFDF         	movff	lecture_normale@octet,indf2
  2435                           
  2436                           ;stid.c: 43: n_octet++;
  2437   001CA8  2A06               	incf	lecture_normale@n_octet^0,f,c
  2438                           
  2439                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2440   001CAA  B083               	btfsc	131,0,c	;volatile
  2441   001CAC  D7D1               	goto	i2l1688
  2442                           
  2443                           ;stid.c: 47: return n_octet;
  2444   001CAE  5006               	movf	lecture_normale@n_octet^0,w,c
  2445   001CB0  0012               	return	
  2446   001CB2                     i2l4623:
  2447                           
  2448                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2449   001CB2  0E00               	movlw	0
  2450   001CB4  0012               	return		;funcret
  2451   001CB6                     __end_of_lecture_normale:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _stid_delai_us *****************
  2455 ;; Defined at:
  2456 ;;		line 56 in file "stid.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  isdu            2    0[COMRAM] unsigned int 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        2 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_lecture_normale
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text7
  2484   002454                     __ptext7:
  2485                           	callstack 0
  2486   002454                     _stid_delai_us:
  2487                           	callstack 26
  2488                           
  2489                           ;stid.c: 58: while(isdu>0)
  2490                           
  2491                           ;incstack = 0
  2492   002454  D006               	goto	i2l4379
  2493   002456                     i2l1698:
  2494                           
  2495                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2496   002456  F000               	nop	
  2497   002458  F000               	nop	
  2498   00245A  F000               	nop	
  2499                           
  2500                           ;stid.c: 61: isdu--;
  2501   00245C  0601               	decf	stid_delai_us@isdu^0,f,c
  2502   00245E  A0D8               	btfss	status,0,c
  2503   002460  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2504   002462                     i2l4379:
  2505   002462  5001               	movf	stid_delai_us@isdu^0,w,c
  2506   002464  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2507   002466  B4D8               	btfsc	status,2,c
  2508   002468  0012               	return	
  2509   00246A  D7F5               	goto	i2l1698
  2510   00246C                     __end_of_stid_delai_us:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _tache5 *****************
  2514 ;; Defined at:
  2515 ;;		line 3 in file "T5.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  a               2    0[COMRAM] unsigned int 
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:        2 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_fonction_d_interruption
  2539 ;;		_initialisation_du_systeme
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           	psect	text8
  2544   001808                     __ptext8:
  2545                           	callstack 0
  2546   001808                     _tache5:
  2547                           	callstack 28
  2548                           
  2549                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2550                           
  2551                           ;incstack = 0
  2552                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2553   001808  A89E               	btfss	158,4,c	;volatile
  2554   00180A  D7FE               	goto	__ptext8
  2555   00180C  0E74               	movlw	116
  2556   00180E  6EAD               	movwf	173,c	;volatile
  2557   001810                     i2l982:
  2558   001810  A2AC               	btfss	172,1,c	;volatile
  2559   001812  D7FE               	goto	i2l982
  2560   001814                     i2u165_40:
  2561   001814  A89E               	btfss	158,4,c	;volatile
  2562   001816  D7FE               	goto	i2u165_40
  2563   001818  0E61               	movlw	97
  2564   00181A  6EAD               	movwf	173,c	;volatile
  2565   00181C                     i2l988:
  2566   00181C  A2AC               	btfss	172,1,c	;volatile
  2567   00181E  D7FE               	goto	i2l988
  2568   001820                     i2u167_40:
  2569   001820  A89E               	btfss	158,4,c	;volatile
  2570   001822  D7FE               	goto	i2u167_40
  2571   001824  0E63               	movlw	99
  2572   001826  6EAD               	movwf	173,c	;volatile
  2573   001828                     i2l994:
  2574   001828  A2AC               	btfss	172,1,c	;volatile
  2575   00182A  D7FE               	goto	i2l994
  2576   00182C                     i2u169_40:
  2577   00182C  A89E               	btfss	158,4,c	;volatile
  2578   00182E  D7FE               	goto	i2u169_40
  2579   001830  0E68               	movlw	104
  2580   001832  6EAD               	movwf	173,c	;volatile
  2581   001834                     i2l1000:
  2582   001834  A2AC               	btfss	172,1,c	;volatile
  2583   001836  D7FE               	goto	i2l1000
  2584   001838                     i2u171_40:
  2585   001838  A89E               	btfss	158,4,c	;volatile
  2586   00183A  D7FE               	goto	i2u171_40
  2587   00183C  0E65               	movlw	101
  2588   00183E  6EAD               	movwf	173,c	;volatile
  2589   001840                     i2l1006:
  2590   001840  A2AC               	btfss	172,1,c	;volatile
  2591   001842  D7FE               	goto	i2l1006
  2592   001844                     i2u173_40:
  2593   001844  A89E               	btfss	158,4,c	;volatile
  2594   001846  D7FE               	goto	i2u173_40
  2595   001848  0E35               	movlw	53
  2596   00184A  6EAD               	movwf	173,c	;volatile
  2597   00184C                     i2l1012:
  2598   00184C  A2AC               	btfss	172,1,c	;volatile
  2599   00184E  D7FE               	goto	i2l1012
  2600   001850                     i2u175_40:
  2601   001850  A89E               	btfss	158,4,c	;volatile
  2602   001852  D7FE               	goto	i2u175_40
  2603   001854  0E5F               	movlw	95
  2604   001856  6EAD               	movwf	173,c	;volatile
  2605   001858                     i2l1018:
  2606   001858  A2AC               	btfss	172,1,c	;volatile
  2607   00185A  D7FE               	goto	i2l1018
  2608   00185C                     i2u177_40:
  2609   00185C  A89E               	btfss	158,4,c	;volatile
  2610   00185E  D7FE               	goto	i2u177_40
  2611   001860  0E65               	movlw	101
  2612   001862  6EAD               	movwf	173,c	;volatile
  2613   001864                     i2l1024:
  2614   001864  A2AC               	btfss	172,1,c	;volatile
  2615   001866  D7FE               	goto	i2l1024
  2616   001868                     i2u179_40:
  2617   001868  A89E               	btfss	158,4,c	;volatile
  2618   00186A  D7FE               	goto	i2u179_40
  2619   00186C  0E6E               	movlw	110
  2620   00186E  6EAD               	movwf	173,c	;volatile
  2621   001870                     i2l1030:
  2622   001870  A2AC               	btfss	172,1,c	;volatile
  2623   001872  D7FE               	goto	i2l1030
  2624   001874                     i2u181_40:
  2625   001874  A89E               	btfss	158,4,c	;volatile
  2626   001876  D7FE               	goto	i2u181_40
  2627   001878  0E5F               	movlw	95
  2628   00187A  6EAD               	movwf	173,c	;volatile
  2629   00187C                     i2l1036:
  2630   00187C  A2AC               	btfss	172,1,c	;volatile
  2631   00187E  D7FE               	goto	i2l1036
  2632   001880                     i2u183_40:
  2633   001880  A89E               	btfss	158,4,c	;volatile
  2634   001882  D7FE               	goto	i2u183_40
  2635   001884  0E63               	movlw	99
  2636   001886  6EAD               	movwf	173,c	;volatile
  2637   001888                     i2l1042:
  2638   001888  A2AC               	btfss	172,1,c	;volatile
  2639   00188A  D7FE               	goto	i2l1042
  2640   00188C                     i2u185_40:
  2641   00188C  A89E               	btfss	158,4,c	;volatile
  2642   00188E  D7FE               	goto	i2u185_40
  2643   001890  0E6F               	movlw	111
  2644   001892  6EAD               	movwf	173,c	;volatile
  2645   001894                     i2l1048:
  2646   001894  A2AC               	btfss	172,1,c	;volatile
  2647   001896  D7FE               	goto	i2l1048
  2648   001898                     i2u187_40:
  2649   001898  A89E               	btfss	158,4,c	;volatile
  2650   00189A  D7FE               	goto	i2u187_40
  2651   00189C  0E75               	movlw	117
  2652   00189E  6EAD               	movwf	173,c	;volatile
  2653   0018A0                     i2l1054:
  2654   0018A0  A2AC               	btfss	172,1,c	;volatile
  2655   0018A2  D7FE               	goto	i2l1054
  2656   0018A4                     i2u189_40:
  2657   0018A4  A89E               	btfss	158,4,c	;volatile
  2658   0018A6  D7FE               	goto	i2u189_40
  2659   0018A8  0E72               	movlw	114
  2660   0018AA  6EAD               	movwf	173,c	;volatile
  2661   0018AC                     i2l1060:
  2662   0018AC  A2AC               	btfss	172,1,c	;volatile
  2663   0018AE  D7FE               	goto	i2l1060
  2664   0018B0                     i2u191_40:
  2665   0018B0  A89E               	btfss	158,4,c	;volatile
  2666   0018B2  D7FE               	goto	i2u191_40
  2667   0018B4  0E73               	movlw	115
  2668   0018B6  6EAD               	movwf	173,c	;volatile
  2669   0018B8                     i2l1066:
  2670   0018B8  A2AC               	btfss	172,1,c	;volatile
  2671   0018BA  D7FE               	goto	i2l1066
  2672                           
  2673                           ;T5.c: 28: for (a=0;a<65000;a++)
  2674   0018BC  0E00               	movlw	0
  2675   0018BE  6E02               	movwf	(tache5@a+1)^0,c
  2676   0018C0  0E00               	movlw	0
  2677   0018C2  6E01               	movwf	tache5@a^0,c
  2678   0018C4                     i2l3713:
  2679                           
  2680                           ;T5.c: 29: ;
  2681   0018C4  4A01               	infsnz	tache5@a^0,f,c
  2682   0018C6  2A02               	incf	(tache5@a+1)^0,f,c
  2683   0018C8  0EE8               	movlw	232
  2684   0018CA  5C01               	subwf	tache5@a^0,w,c
  2685   0018CC  0EFD               	movlw	253
  2686   0018CE  5802               	subwfb	(tache5@a+1)^0,w,c
  2687   0018D0  A0D8               	btfss	status,0,c
  2688   0018D2  D7F8               	goto	i2l3713
  2689                           
  2690                           ;T5.c: 30: for (a=0;a<65000;a++)
  2691   0018D4  0E00               	movlw	0
  2692   0018D6  6E02               	movwf	(tache5@a+1)^0,c
  2693   0018D8  0E00               	movlw	0
  2694   0018DA  6E01               	movwf	tache5@a^0,c
  2695   0018DC                     i2l3723:
  2696                           
  2697                           ;T5.c: 31: ;
  2698   0018DC  4A01               	infsnz	tache5@a^0,f,c
  2699   0018DE  2A02               	incf	(tache5@a+1)^0,f,c
  2700   0018E0  0EE8               	movlw	232
  2701   0018E2  5C01               	subwf	tache5@a^0,w,c
  2702   0018E4  0EFD               	movlw	253
  2703   0018E6  5802               	subwfb	(tache5@a+1)^0,w,c
  2704   0018E8  B0D8               	btfsc	status,0,c
  2705   0018EA  D78E               	goto	__ptext8
  2706   0018EC  D7F7               	goto	i2l3723
  2707   0018EE                     __end_of_tache5:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _tache4 *****************
  2711 ;; Defined at:
  2712 ;;		line 3 in file "T4.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  a               2    0[COMRAM] unsigned int 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;Total ram usage:        2 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_fonction_d_interruption
  2736 ;;		_initialisation_du_systeme
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text9
  2741   0019CC                     __ptext9:
  2742                           	callstack 0
  2743   0019CC                     _tache4:
  2744                           	callstack 28
  2745                           
  2746                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2747                           
  2748                           ;incstack = 0
  2749                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2750   0019CC  A89E               	btfss	158,4,c	;volatile
  2751   0019CE  D7FE               	goto	__ptext9
  2752   0019D0  0E54               	movlw	84
  2753   0019D2  6EAD               	movwf	173,c	;volatile
  2754   0019D4                     i2l798:
  2755   0019D4  A2AC               	btfss	172,1,c	;volatile
  2756   0019D6  D7FE               	goto	i2l798
  2757   0019D8                     i2u134_40:
  2758   0019D8  A89E               	btfss	158,4,c	;volatile
  2759   0019DA  D7FE               	goto	i2u134_40
  2760   0019DC  0E41               	movlw	65
  2761   0019DE  6EAD               	movwf	173,c	;volatile
  2762   0019E0                     i2l804:
  2763   0019E0  A2AC               	btfss	172,1,c	;volatile
  2764   0019E2  D7FE               	goto	i2l804
  2765   0019E4                     i2u136_40:
  2766   0019E4  A89E               	btfss	158,4,c	;volatile
  2767   0019E6  D7FE               	goto	i2u136_40
  2768   0019E8  0E43               	movlw	67
  2769   0019EA  6EAD               	movwf	173,c	;volatile
  2770   0019EC                     i2l810:
  2771   0019EC  A2AC               	btfss	172,1,c	;volatile
  2772   0019EE  D7FE               	goto	i2l810
  2773   0019F0                     i2u138_40:
  2774   0019F0  A89E               	btfss	158,4,c	;volatile
  2775   0019F2  D7FE               	goto	i2u138_40
  2776   0019F4  0E48               	movlw	72
  2777   0019F6  6EAD               	movwf	173,c	;volatile
  2778   0019F8                     i2l816:
  2779   0019F8  A2AC               	btfss	172,1,c	;volatile
  2780   0019FA  D7FE               	goto	i2l816
  2781   0019FC                     i2u140_40:
  2782   0019FC  A89E               	btfss	158,4,c	;volatile
  2783   0019FE  D7FE               	goto	i2u140_40
  2784   001A00  0E45               	movlw	69
  2785   001A02  6EAD               	movwf	173,c	;volatile
  2786   001A04                     i2l822:
  2787   001A04  A2AC               	btfss	172,1,c	;volatile
  2788   001A06  D7FE               	goto	i2l822
  2789   001A08                     i2u142_40:
  2790   001A08  A89E               	btfss	158,4,c	;volatile
  2791   001A0A  D7FE               	goto	i2u142_40
  2792   001A0C  0E34               	movlw	52
  2793   001A0E  6EAD               	movwf	173,c	;volatile
  2794   001A10                     i2l828:
  2795   001A10  A2AC               	btfss	172,1,c	;volatile
  2796   001A12  D7FE               	goto	i2l828
  2797   001A14                     i2u144_40:
  2798   001A14  A89E               	btfss	158,4,c	;volatile
  2799   001A16  D7FE               	goto	i2u144_40
  2800   001A18  0E5F               	movlw	95
  2801   001A1A  6EAD               	movwf	173,c	;volatile
  2802   001A1C                     i2l834:
  2803   001A1C  A2AC               	btfss	172,1,c	;volatile
  2804   001A1E  D7FE               	goto	i2l834
  2805   001A20                     i2u146_40:
  2806   001A20  A89E               	btfss	158,4,c	;volatile
  2807   001A22  D7FE               	goto	i2u146_40
  2808   001A24  0E45               	movlw	69
  2809   001A26  6EAD               	movwf	173,c	;volatile
  2810   001A28                     i2l840:
  2811   001A28  A2AC               	btfss	172,1,c	;volatile
  2812   001A2A  D7FE               	goto	i2l840
  2813   001A2C                     i2u148_40:
  2814   001A2C  A89E               	btfss	158,4,c	;volatile
  2815   001A2E  D7FE               	goto	i2u148_40
  2816   001A30  0E4E               	movlw	78
  2817   001A32  6EAD               	movwf	173,c	;volatile
  2818   001A34                     i2l846:
  2819   001A34  A2AC               	btfss	172,1,c	;volatile
  2820   001A36  D7FE               	goto	i2l846
  2821   001A38                     i2u150_40:
  2822   001A38  A89E               	btfss	158,4,c	;volatile
  2823   001A3A  D7FE               	goto	i2u150_40
  2824   001A3C  0E5F               	movlw	95
  2825   001A3E  6EAD               	movwf	173,c	;volatile
  2826   001A40                     i2l852:
  2827   001A40  A2AC               	btfss	172,1,c	;volatile
  2828   001A42  D7FE               	goto	i2l852
  2829   001A44                     i2u152_40:
  2830   001A44  A89E               	btfss	158,4,c	;volatile
  2831   001A46  D7FE               	goto	i2u152_40
  2832   001A48  0E43               	movlw	67
  2833   001A4A  6EAD               	movwf	173,c	;volatile
  2834   001A4C                     i2l858:
  2835   001A4C  A2AC               	btfss	172,1,c	;volatile
  2836   001A4E  D7FE               	goto	i2l858
  2837   001A50                     i2u154_40:
  2838   001A50  A89E               	btfss	158,4,c	;volatile
  2839   001A52  D7FE               	goto	i2u154_40
  2840   001A54  0E4F               	movlw	79
  2841   001A56  6EAD               	movwf	173,c	;volatile
  2842   001A58                     i2l864:
  2843   001A58  A2AC               	btfss	172,1,c	;volatile
  2844   001A5A  D7FE               	goto	i2l864
  2845   001A5C                     i2u156_40:
  2846   001A5C  A89E               	btfss	158,4,c	;volatile
  2847   001A5E  D7FE               	goto	i2u156_40
  2848   001A60  0E55               	movlw	85
  2849   001A62  6EAD               	movwf	173,c	;volatile
  2850   001A64                     i2l870:
  2851   001A64  A2AC               	btfss	172,1,c	;volatile
  2852   001A66  D7FE               	goto	i2l870
  2853   001A68                     i2u158_40:
  2854   001A68  A89E               	btfss	158,4,c	;volatile
  2855   001A6A  D7FE               	goto	i2u158_40
  2856   001A6C  0E52               	movlw	82
  2857   001A6E  6EAD               	movwf	173,c	;volatile
  2858   001A70                     i2l876:
  2859   001A70  A2AC               	btfss	172,1,c	;volatile
  2860   001A72  D7FE               	goto	i2l876
  2861   001A74                     i2u160_40:
  2862   001A74  A89E               	btfss	158,4,c	;volatile
  2863   001A76  D7FE               	goto	i2u160_40
  2864   001A78  0E53               	movlw	83
  2865   001A7A  6EAD               	movwf	173,c	;volatile
  2866   001A7C                     i2l882:
  2867   001A7C  A2AC               	btfss	172,1,c	;volatile
  2868   001A7E  D7FE               	goto	i2l882
  2869                           
  2870                           ;T4.c: 28: for (a=0;a<65000;a++)
  2871   001A80  0E00               	movlw	0
  2872   001A82  6E02               	movwf	(tache4@a+1)^0,c
  2873   001A84  0E00               	movlw	0
  2874   001A86  6E01               	movwf	tache4@a^0,c
  2875   001A88                     i2l3673:
  2876                           
  2877                           ;T4.c: 29: ;
  2878   001A88  4A01               	infsnz	tache4@a^0,f,c
  2879   001A8A  2A02               	incf	(tache4@a+1)^0,f,c
  2880   001A8C  0EE8               	movlw	232
  2881   001A8E  5C01               	subwf	tache4@a^0,w,c
  2882   001A90  0EFD               	movlw	253
  2883   001A92  5802               	subwfb	(tache4@a+1)^0,w,c
  2884   001A94  B0D8               	btfsc	status,0,c
  2885   001A96  D79A               	goto	__ptext9
  2886   001A98  D7F7               	goto	i2l3673
  2887   001A9A                     __end_of_tache4:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _tache3 *****************
  2891 ;; Defined at:
  2892 ;;		line 3 in file "T3.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_fonction_d_interruption
  2916 ;;		_initialisation_du_systeme
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text10
  2921   0018EE                     __ptext10:
  2922                           	callstack 0
  2923   0018EE                     _tache3:
  2924                           	callstack 28
  2925                           
  2926                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2927                           
  2928                           ;incstack = 0
  2929                           ;T3.c: 5: while(1)
  2930   0018EE  0100               	movlb	0	; () banked
  2931   0018F0  0566               	decf	102,w,b
  2932   0018F2  A4D8               	btfss	status,2,c
  2933   0018F4  D014               	goto	i2l3573
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2937   0018F6  0ECA               	movlw	202
  2938   0018F8  6567               	cpfsgt	103,b
  2939   0018FA  D011               	goto	i2l3573
  2940                           
  2941                           ; BSR set to: 0
  2942   0018FC  0ED1               	movlw	209
  2943   0018FE  6167               	cpfslt	103,b
  2944   001900  D00E               	goto	i2l3573
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2948   001902  0E70               	movlw	112
  2949   001904  6568               	cpfsgt	104,b
  2950   001906  D004               	goto	i2l3567
  2951                           
  2952                           ; BSR set to: 0
  2953   001908  0E79               	movlw	121
  2954   00190A  6168               	cpfslt	104,b
  2955   00190C  D001               	goto	i2l3567
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2959   00190E  848B               	bsf	139,2,c	;volatile
  2960   001910                     i2l3567:
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2964   001910  0E78               	movlw	120
  2965   001912  6568               	cpfsgt	104,b
  2966   001914  D004               	goto	i2l3573
  2967                           
  2968                           ; BSR set to: 0
  2969   001916  0E7F               	movlw	127
  2970   001918  6168               	cpfslt	104,b
  2971   00191A  D001               	goto	i2l3573
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2975   00191C  948B               	bcf	139,2,c	;volatile
  2976   00191E                     i2l3573:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2980   00191E  0566               	decf	102,w,b
  2981   001920  A4D8               	btfss	status,2,c
  2982   001922  D014               	goto	i2l3591
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2986   001924  0ED6               	movlw	214
  2987   001926  6567               	cpfsgt	103,b
  2988   001928  D011               	goto	i2l3591
  2989                           
  2990                           ; BSR set to: 0
  2991   00192A  0EDD               	movlw	221
  2992   00192C  6167               	cpfslt	103,b
  2993   00192E  D00E               	goto	i2l3591
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2997   001930  0E70               	movlw	112
  2998   001932  6568               	cpfsgt	104,b
  2999   001934  D004               	goto	i2l3585
  3000                           
  3001                           ; BSR set to: 0
  3002   001936  0E79               	movlw	121
  3003   001938  6168               	cpfslt	104,b
  3004   00193A  D001               	goto	i2l3585
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  3008   00193C  828B               	bsf	139,1,c	;volatile
  3009   00193E                     i2l3585:
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  3013   00193E  0E78               	movlw	120
  3014   001940  6568               	cpfsgt	104,b
  3015   001942  D004               	goto	i2l3591
  3016                           
  3017                           ; BSR set to: 0
  3018   001944  0E7F               	movlw	127
  3019   001946  6168               	cpfslt	104,b
  3020   001948  D001               	goto	i2l3591
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  3024   00194A  928B               	bcf	139,1,c	;volatile
  3025   00194C                     i2l3591:
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  3029   00194C  0566               	decf	102,w,b
  3030   00194E  A4D8               	btfss	status,2,c
  3031   001950  D014               	goto	i2l3609
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  3035   001952  0EE2               	movlw	226
  3036   001954  6567               	cpfsgt	103,b
  3037   001956  D011               	goto	i2l3609
  3038                           
  3039                           ; BSR set to: 0
  3040   001958  0EE9               	movlw	233
  3041   00195A  6167               	cpfslt	103,b
  3042   00195C  D00E               	goto	i2l3609
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  3046   00195E  0E70               	movlw	112
  3047   001960  6568               	cpfsgt	104,b
  3048   001962  D004               	goto	i2l3603
  3049                           
  3050                           ; BSR set to: 0
  3051   001964  0E79               	movlw	121
  3052   001966  6168               	cpfslt	104,b
  3053   001968  D001               	goto	i2l3603
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  3057   00196A  808F               	bsf	143,0,c	;volatile
  3058   00196C                     i2l3603:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  3062   00196C  0E78               	movlw	120
  3063   00196E  6568               	cpfsgt	104,b
  3064   001970  D004               	goto	i2l3609
  3065                           
  3066                           ; BSR set to: 0
  3067   001972  0E7F               	movlw	127
  3068   001974  6168               	cpfslt	104,b
  3069   001976  D001               	goto	i2l3609
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  3073   001978  908F               	bcf	143,0,c	;volatile
  3074   00197A                     i2l3609:
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  3078   00197A  0566               	decf	102,w,b
  3079   00197C  A4D8               	btfss	status,2,c
  3080   00197E  D011               	goto	i2l3623
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  3084   001980  0EB3               	movlw	179
  3085   001982  6567               	cpfsgt	103,b
  3086   001984  D00E               	goto	i2l3623
  3087                           
  3088                           ; BSR set to: 0
  3089   001986  0EE6               	movlw	230
  3090   001988  6167               	cpfslt	103,b
  3091   00198A  D00B               	goto	i2l3623
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  3095   00198C  0E13               	movlw	19
  3096   00198E  6568               	cpfsgt	104,b
  3097   001990  D008               	goto	i2l3623
  3098                           
  3099                           ; BSR set to: 0
  3100   001992  0E3C               	movlw	60
  3101   001994  6168               	cpfslt	104,b
  3102   001996  D005               	goto	i2l3623
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3106   001998  948B               	bcf	139,2,c	;volatile
  3107   00199A  828B               	bsf	139,1,c	;volatile
  3108   00199C  808F               	bsf	143,0,c	;volatile
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;T3.c: 62: TEST = 1;
  3112   00199E  0E01               	movlw	1
  3113   0019A0  6F81               	movwf	129,b
  3114   0019A2                     i2l3623:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3118   0019A2  0566               	decf	102,w,b
  3119   0019A4  A4D8               	btfss	status,2,c
  3120   0019A6  D7A3               	goto	__ptext10
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3124   0019A8  0E77               	movlw	119
  3125   0019AA  6567               	cpfsgt	103,b
  3126   0019AC  D7A0               	goto	__ptext10
  3127                           
  3128                           ; BSR set to: 0
  3129   0019AE  0EAA               	movlw	170
  3130   0019B0  6167               	cpfslt	103,b
  3131   0019B2  D79D               	goto	__ptext10
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3135   0019B4  0E13               	movlw	19
  3136   0019B6  6568               	cpfsgt	104,b
  3137   0019B8  D79A               	goto	__ptext10
  3138                           
  3139                           ; BSR set to: 0
  3140   0019BA  0E3C               	movlw	60
  3141   0019BC  6168               	cpfslt	104,b
  3142   0019BE  D797               	goto	__ptext10
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3146   0019C0  948B               	bcf	139,2,c	;volatile
  3147   0019C2  928B               	bcf	139,1,c	;volatile
  3148   0019C4  908F               	bcf	143,0,c	;volatile
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;T3.c: 74: TEST = 0;
  3152   0019C6  0E00               	movlw	0
  3153   0019C8  6F81               	movwf	129,b
  3154                           
  3155                           ; BSR set to: 0
  3156   0019CA  D791               	goto	__ptext10
  3157   0019CC                     __end_of_tache3:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _tache2 *****************
  3161 ;; Defined at:
  3162 ;;		line 3 in file "T2.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  iy              2   11[COMRAM] unsigned int 
  3167 ;;  ix              2    9[COMRAM] unsigned int 
  3168 ;;  ly              1   16[COMRAM] unsigned char 
  3169 ;;  hy              1   15[COMRAM] unsigned char 
  3170 ;;  lx              1   14[COMRAM] unsigned char 
  3171 ;;  hx              1   13[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;Total ram usage:       10 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 1
  3188 ;; This function calls:
  3189 ;;		___lwdiv
  3190 ;;		_tp_delai
  3191 ;; This function is called by:
  3192 ;;		_fonction_d_interruption
  3193 ;;		_initialisation_du_systeme
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text11
  3198   001714                     __ptext11:
  3199                           	callstack 0
  3200   001714                     _tache2:
  3201                           	callstack 27
  3202                           
  3203                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;incstack = 0
  3207   001714  0E00               	movlw	0
  3208   001716  0100               	movlb	0	; () banked
  3209   001718  6F66               	movwf	102,b
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3213   00171A  868F               	bsf	143,3,c	;volatile
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;T2.c: 13: LATGbits.LATG4=0;
  3217   00171C  988F               	bcf	143,4,c	;volatile
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;T2.c: 14: tp_delai(3000);
  3221   00171E  0E0B               	movlw	11
  3222   001720  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3223   001722  0EB8               	movlw	184
  3224   001724  6E01               	movwf	tp_delai@itpd^0,c
  3225   001726  EC36  F012         	call	_tp_delai	;wreg free
  3226                           
  3227                           ;T2.c: 18: ADCON2=0x16;
  3228   00172A  0E16               	movlw	22
  3229   00172C  6EC0               	movwf	192,c	;volatile
  3230                           
  3231                           ;T2.c: 19: ADCON0=0x01;
  3232   00172E  0E01               	movlw	1
  3233   001730  6EC2               	movwf	194,c	;volatile
  3234                           
  3235                           ;T2.c: 20: ADCON0=0x03;
  3236   001732  0E03               	movlw	3
  3237   001734  6EC2               	movwf	194,c	;volatile
  3238   001736                     i2l575:
  3239   001736  B2C2               	btfsc	194,1,c	;volatile
  3240   001738  D7FE               	goto	i2l575
  3241                           
  3242                           ;T2.c: 23: hx=ADRESH;
  3243   00173A  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3244                           
  3245                           ;T2.c: 24: lx=ADRESL;
  3246   00173E  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3247                           
  3248                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3249   001742  C00F  F008         	movff	tache2@lx,??_tache2
  3250   001746  0E0F               	movlw	15
  3251   001748  1608               	andwf	??_tache2^0,f,c
  3252   00174A  B4D8               	btfsc	status,2,c
  3253   00174C  D004               	goto	i2l5017
  3254   00174E  0E00               	movlw	0
  3255   001750  6E0E               	movwf	tache2@hx^0,c
  3256   001752  0E00               	movlw	0
  3257   001754  6E0F               	movwf	tache2@lx^0,c
  3258   001756                     i2l5017:
  3259                           
  3260                           ;T2.c: 31: if (hx>=10)
  3261   001756  0E09               	movlw	9
  3262   001758  640E               	cpfsgt	tache2@hx^0,c
  3263   00175A  D7DC               	goto	__ptext11
  3264                           
  3265                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3266   00175C  968F               	bcf	143,3,c	;volatile
  3267                           
  3268                           ;T2.c: 34: LATGbits.LATG4=1;
  3269   00175E  888F               	bsf	143,4,c	;volatile
  3270                           
  3271                           ;T2.c: 35: tp_delai(3000);
  3272   001760  0E0B               	movlw	11
  3273   001762  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3274   001764  0EB8               	movlw	184
  3275   001766  6E01               	movwf	tp_delai@itpd^0,c
  3276   001768  EC36  F012         	call	_tp_delai	;wreg free
  3277                           
  3278                           ;T2.c: 39: ADCON2=0x16;
  3279   00176C  0E16               	movlw	22
  3280   00176E  6EC0               	movwf	192,c	;volatile
  3281                           
  3282                           ;T2.c: 40: ADCON0=0x05;
  3283   001770  0E05               	movlw	5
  3284   001772  6EC2               	movwf	194,c	;volatile
  3285                           
  3286                           ;T2.c: 41: ADCON0=0x07;
  3287   001774  0E07               	movlw	7
  3288   001776  6EC2               	movwf	194,c	;volatile
  3289   001778                     i2l580:
  3290   001778  B2C2               	btfsc	194,1,c	;volatile
  3291   00177A  D7FE               	goto	i2l580
  3292                           
  3293                           ;T2.c: 44: hy=ADRESH;
  3294   00177C  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3295                           
  3296                           ;T2.c: 45: ly=ADRESL;
  3297   001780  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3298                           
  3299                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3300   001784  C011  F008         	movff	tache2@ly,??_tache2
  3301   001788  0E0F               	movlw	15
  3302   00178A  1608               	andwf	??_tache2^0,f,c
  3303   00178C  B4D8               	btfsc	status,2,c
  3304   00178E  D004               	goto	i2l5033
  3305   001790  0E00               	movlw	0
  3306   001792  6E10               	movwf	tache2@hy^0,c
  3307   001794  0E00               	movlw	0
  3308   001796  6E11               	movwf	tache2@ly^0,c
  3309   001798                     i2l5033:
  3310                           
  3311                           ;T2.c: 51: if (hy>=20)
  3312   001798  0E13               	movlw	19
  3313   00179A  6410               	cpfsgt	tache2@hy^0,c
  3314   00179C  D7BB               	goto	__ptext11
  3315                           
  3316                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3317   00179E  500E               	movf	tache2@hx^0,w,c
  3318   0017A0  6E08               	movwf	??_tache2^0,c
  3319   0017A2  500F               	movf	tache2@lx^0,w,c
  3320   0017A4  6E0A               	movwf	tache2@ix^0,c
  3321   0017A6  C008  F00B         	movff	??_tache2,tache2@ix+1
  3322                           
  3323                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3324   0017AA  5010               	movf	tache2@hy^0,w,c
  3325   0017AC  6E08               	movwf	??_tache2^0,c
  3326   0017AE  5011               	movf	tache2@ly^0,w,c
  3327   0017B0  6E0C               	movwf	tache2@iy^0,c
  3328   0017B2  C008  F00D         	movff	??_tache2,tache2@iy+1
  3329                           
  3330                           ;T2.c: 55: ix=ix-3150;
  3331   0017B6  0EB2               	movlw	178
  3332   0017B8  240A               	addwf	tache2@ix^0,w,c
  3333   0017BA  6E0A               	movwf	tache2@ix^0,c
  3334   0017BC  0EF3               	movlw	243
  3335   0017BE  200B               	addwfc	(tache2@ix+1)^0,w,c
  3336   0017C0  6E0B               	movwf	(tache2@ix+1)^0,c
  3337                           
  3338                           ;T2.c: 56: iy=iy-6500;
  3339   0017C2  0E9C               	movlw	156
  3340   0017C4  240C               	addwf	tache2@iy^0,w,c
  3341   0017C6  6E0C               	movwf	tache2@iy^0,c
  3342   0017C8  0EE6               	movlw	230
  3343   0017CA  200D               	addwfc	(tache2@iy+1)^0,w,c
  3344   0017CC  6E0D               	movwf	(tache2@iy+1)^0,c
  3345                           
  3346                           ;T2.c: 58: TP_x=ix/246;
  3347   0017CE  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3348   0017D2  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3349   0017D6  0E00               	movlw	0
  3350   0017D8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3351   0017DA  0EF6               	movlw	246
  3352   0017DC  6E03               	movwf	___lwdiv@divisor^0,c
  3353   0017DE  EC08  F010         	call	___lwdiv	;wreg free
  3354   0017E2  5001               	movf	?___lwdiv^0,w,c
  3355   0017E4  0100               	movlb	0	; () banked
  3356   0017E6  6F67               	movwf	103,b
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;T2.c: 59: TP_y=127-(iy/409);
  3360   0017E8  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3361   0017EC  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3362   0017F0  0E01               	movlw	1
  3363   0017F2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3364   0017F4  0E99               	movlw	153
  3365   0017F6  6E03               	movwf	___lwdiv@divisor^0,c
  3366   0017F8  EC08  F010         	call	___lwdiv	;wreg free
  3367   0017FC  5001               	movf	?___lwdiv^0,w,c
  3368   0017FE  087F               	sublw	127
  3369   001800  0100               	movlb	0	; () banked
  3370   001802  6F68               	movwf	104,b
  3371                           
  3372                           ;T2.c: 68: TP_appui=1;
  3373   001804  0E01               	movlw	1
  3374   001806  D788               	goto	L3
  3375   001808                     __end_of_tache2:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _tp_delai *****************
  3379 ;; Defined at:
  3380 ;;		line 87 in file "T2.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  itpd            2    0[COMRAM] unsigned int 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg, status,2, status,0
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        2 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_tache2
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text12
  3408   00246C                     __ptext12:
  3409                           	callstack 0
  3410   00246C                     _tp_delai:
  3411                           	callstack 27
  3412                           
  3413                           ;T2.c: 89: while(itpd>0)
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;incstack = 0
  3417   00246C  D006               	goto	i2l4569
  3418   00246E                     i2l593:
  3419                           
  3420                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3421   00246E  F000               	nop	
  3422   002470  F000               	nop	
  3423   002472  F000               	nop	
  3424                           
  3425                           ;T2.c: 92: itpd--;
  3426   002474  0601               	decf	tp_delai@itpd^0,f,c
  3427   002476  A0D8               	btfss	status,0,c
  3428   002478  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3429   00247A                     i2l4569:
  3430   00247A  5001               	movf	tp_delai@itpd^0,w,c
  3431   00247C  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3432   00247E  B4D8               	btfsc	status,2,c
  3433   002480  0012               	return	
  3434   002482  D7F5               	goto	i2l593
  3435   002484                     __end_of_tp_delai:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function ___lwdiv *****************
  3439 ;; Defined at:
  3440 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  dividend        2    0[COMRAM] unsigned int 
  3443 ;;  divisor         2    2[COMRAM] unsigned int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  quotient        2    4[COMRAM] unsigned int 
  3446 ;;  counter         1    6[COMRAM] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2    0[COMRAM] unsigned int 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;Total ram usage:        7 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_tache2
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text13
  3470   002010                     __ptext13:
  3471                           	callstack 0
  3472   002010                     ___lwdiv:
  3473                           	callstack 27
  3474                           
  3475                           ;incstack = 0
  3476   002010  0E00               	movlw	0
  3477   002012  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3478   002014  0E00               	movlw	0
  3479   002016  6E05               	movwf	___lwdiv@quotient^0,c
  3480   002018  5003               	movf	___lwdiv@divisor^0,w,c
  3481   00201A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3482   00201C  B4D8               	btfsc	status,2,c
  3483   00201E  D01C               	goto	i2l2277
  3484   002020  0E01               	movlw	1
  3485   002022  6E07               	movwf	___lwdiv@counter^0,c
  3486   002024  D004               	goto	i2l4635
  3487   002026                     i2l4633:
  3488   002026  90D8               	bcf	status,0,c
  3489   002028  3603               	rlcf	___lwdiv@divisor^0,f,c
  3490   00202A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3491   00202C  2A07               	incf	___lwdiv@counter^0,f,c
  3492   00202E                     i2l4635:
  3493   00202E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3494   002030  D7FA               	goto	i2l4633
  3495   002032                     i2u275_40:
  3496   002032  90D8               	bcf	status,0,c
  3497   002034  3605               	rlcf	___lwdiv@quotient^0,f,c
  3498   002036  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3499   002038  5003               	movf	___lwdiv@divisor^0,w,c
  3500   00203A  5C01               	subwf	___lwdiv@dividend^0,w,c
  3501   00203C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3502   00203E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3503   002040  A0D8               	btfss	status,0,c
  3504   002042  D005               	goto	i2l4645
  3505   002044  5003               	movf	___lwdiv@divisor^0,w,c
  3506   002046  5E01               	subwf	___lwdiv@dividend^0,f,c
  3507   002048  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3508   00204A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3509   00204C  8005               	bsf	___lwdiv@quotient^0,0,c
  3510   00204E                     i2l4645:
  3511   00204E  90D8               	bcf	status,0,c
  3512   002050  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3513   002052  3203               	rrcf	___lwdiv@divisor^0,f,c
  3514   002054  2E07               	decfsz	___lwdiv@counter^0,f,c
  3515   002056  D7ED               	goto	i2u275_40
  3516   002058                     i2l2277:
  3517   002058  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3518   00205C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3519   002060  0012               	return		;funcret
  3520   002062                     __end_of___lwdiv:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _tache1 *****************
  3524 ;; Defined at:
  3525 ;;		line 3 in file "T1.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  i               1    0        unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:        2 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 5
  3546 ;; This function calls:
  3547 ;;		_Conversion
  3548 ;;		_Diminution
  3549 ;;		_Init
  3550 ;;		_charger
  3551 ;;		_clear_graphics
  3552 ;;		_clear_line
  3553 ;;		_clear_text
  3554 ;;		_draw_char
  3555 ;;		_draw_dec8
  3556 ;;		_draw_hex8
  3557 ;;		_draw_square
  3558 ;;		_draw_string
  3559 ;;		_goto_lico
  3560 ;;		_init_rxtx
  3561 ;;		_initialisation_afficheur
  3562 ;;		_lecture_8bit_analogique
  3563 ;;		_plot1
  3564 ;;		_vide
  3565 ;;		_vitesseAdmin
  3566 ;; This function is called by:
  3567 ;;		_fonction_d_interruption
  3568 ;;		_initialisation_du_systeme
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text14
  3573   0010DA                     __ptext14:
  3574                           	callstack 0
  3575   0010DA                     _tache1:
  3576                           	callstack 23
  3577                           
  3578                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3579                           
  3580                           ;incstack = 0
  3581   0010DA  9EF2               	bcf	242,7,c	;volatile
  3582                           
  3583                           ;T1.c: 8: initialisation_afficheur();
  3584   0010DC  EC4D  F00D         	call	_initialisation_afficheur	;wreg free
  3585                           
  3586                           ;T1.c: 9: clear_text();
  3587   0010E0  EC5A  F011         	call	_clear_text	;wreg free
  3588                           
  3589                           ;T1.c: 10: clear_graphics();
  3590   0010E4  EC72  F011         	call	_clear_graphics	;wreg free
  3591                           
  3592                           ;T1.c: 11: init_rxtx();
  3593   0010E8  ECC4  F011         	call	_init_rxtx	;wreg free
  3594                           
  3595                           ;T1.c: 12: Init(2);
  3596   0010EC  0E02               	movlw	2
  3597   0010EE  6EE6               	movwf	postinc1,c
  3598   0010F0  ECB3  F011         	call	_Init	;wreg free
  3599                           
  3600                           ;T1.c: 13: RXTX_libre=1;
  3601   0010F4  0E01               	movlw	1
  3602   0010F6  0100               	movlb	0	; () banked
  3603   0010F8  6F80               	movwf	128,b
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;T1.c: 14: TXREG1='R';
  3607   0010FA  0E52               	movlw	82
  3608   0010FC  6EAD               	movwf	173,c	;volatile
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3612   0010FE  8EF2               	bsf	242,7,c	;volatile
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3616   001100  948B               	bcf	139,2,c	;volatile
  3617                           
  3618                           ; BSR set to: 0
  3619   001102  928B               	bcf	139,1,c	;volatile
  3620                           
  3621                           ; BSR set to: 0
  3622   001104  908F               	bcf	143,0,c	;volatile
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;T1.c: 19: vitesse=0;
  3626   001106  0E00               	movlw	0
  3627   001108  6F73               	movwf	115,b
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;T1.c: 20: batterie=15;
  3631   00110A  0E0F               	movlw	15
  3632   00110C  6F74               	movwf	116,b
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;T1.c: 21: n_octet_badge=0;
  3636   00110E  0E00               	movlw	0
  3637   001110  6F7F               	movwf	127,b
  3638                           
  3639                           ; BSR set to: 0
  3640                           ;T1.c: 22: TEST=0;
  3641   001112  0E00               	movlw	0
  3642   001114  6F81               	movwf	129,b
  3643                           
  3644                           ; BSR set to: 0
  3645                           ;T1.c: 23: Personne=0;
  3646   001116  0E00               	movlw	0
  3647   001118  6F82               	movwf	130,b
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3651   00111A  0E22               	movlw	34
  3652   00111C  6E09               	movwf	goto_lico@colonne^0,c
  3653   00111E  0E0D               	movlw	13
  3654   001120  ECDC  F00F         	call	_goto_lico
  3655   001124  0E52               	movlw	82
  3656   001126  EC41  F011         	call	_draw_char
  3657   00112A  0E20               	movlw	32
  3658   00112C  EC41  F011         	call	_draw_char
  3659   001130  0E56               	movlw	86
  3660   001132  EC41  F011         	call	_draw_char
  3661   001136  0E20               	movlw	32
  3662   001138  EC41  F011         	call	_draw_char
  3663   00113C  0E42               	movlw	66
  3664   00113E  EC41  F011         	call	_draw_char
  3665                           
  3666                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3667   001142  0E22               	movlw	34
  3668   001144  6E09               	movwf	goto_lico@colonne^0,c
  3669   001146  0E0E               	movlw	14
  3670   001148  ECDC  F00F         	call	_goto_lico
  3671   00114C  0E30               	movlw	48
  3672   00114E  EC41  F011         	call	_draw_char
  3673   001152  0E20               	movlw	32
  3674   001154  EC41  F011         	call	_draw_char
  3675   001158  0E30               	movlw	48
  3676   00115A  EC41  F011         	call	_draw_char
  3677   00115E  0E20               	movlw	32
  3678   001160  EC41  F011         	call	_draw_char
  3679   001164  0E30               	movlw	48
  3680   001166  EC41  F011         	call	_draw_char
  3681                           
  3682                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3683   00116A  0E22               	movlw	34
  3684   00116C  6E09               	movwf	goto_lico@colonne^0,c
  3685   00116E  0E0F               	movlw	15
  3686   001170  ECDC  F00F         	call	_goto_lico
  3687   001174  0E31               	movlw	49
  3688   001176  EC41  F011         	call	_draw_char
  3689   00117A  0E20               	movlw	32
  3690   00117C  EC41  F011         	call	_draw_char
  3691   001180  0E31               	movlw	49
  3692   001182  EC41  F011         	call	_draw_char
  3693   001186  0E20               	movlw	32
  3694   001188  EC41  F011         	call	_draw_char
  3695   00118C  0E31               	movlw	49
  3696   00118E  EC41  F011         	call	_draw_char
  3697                           
  3698                           ;T1.c: 29: TP_appui=0;
  3699   001192  0E00               	movlw	0
  3700   001194  0100               	movlb	0	; () banked
  3701   001196  6F66               	movwf	102,b
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;T1.c: 30: draw_square(180,20,230,60);
  3705   001198  0E14               	movlw	20
  3706   00119A  6E15               	movwf	draw_square@y1^0,c
  3707   00119C  0EE6               	movlw	230
  3708   00119E  6E16               	movwf	draw_square@x2^0,c
  3709   0011A0  0E3C               	movlw	60
  3710   0011A2  6E17               	movwf	draw_square@y2^0,c
  3711   0011A4  0EB4               	movlw	180
  3712   0011A6  EC82  F010         	call	_draw_square
  3713                           
  3714                           ;T1.c: 31: draw_square(120,20,170,60);
  3715   0011AA  0E14               	movlw	20
  3716   0011AC  6E15               	movwf	draw_square@y1^0,c
  3717   0011AE  0EAA               	movlw	170
  3718   0011B0  6E16               	movwf	draw_square@x2^0,c
  3719   0011B2  0E3C               	movlw	60
  3720   0011B4  6E17               	movwf	draw_square@y2^0,c
  3721   0011B6  0E78               	movlw	120
  3722   0011B8  EC82  F010         	call	_draw_square
  3723                           
  3724                           ;T1.c: 33: draw_string(2);
  3725   0011BC  0E02               	movlw	2
  3726   0011BE  6E08               	movwf	draw_string@tableau^0,c
  3727   0011C0  0E00               	movlw	0
  3728   0011C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3729   0011C4  ECA9  F00E         	call	_draw_string	;wreg free
  3730   0011C8                     i2l4845:
  3731                           
  3732                           ;T1.c: 36: {;T1.c: 38: goto_lico(0,0);
  3733   0011C8  0E00               	movlw	0
  3734   0011CA  6E09               	movwf	goto_lico@colonne^0,c
  3735   0011CC  0E00               	movlw	0
  3736   0011CE  ECDC  F00F         	call	_goto_lico
  3737                           
  3738                           ;T1.c: 39: draw_string("Marche:");
  3739   0011D2  0E8D               	movlw	low STR_1
  3740   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3741   0011D6  0E10               	movlw	high STR_1
  3742   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3743   0011DA  ECA9  F00E         	call	_draw_string	;wreg free
  3744                           
  3745                           ;T1.c: 40: if (PORTBbits.RB0==0)
  3746   0011DE  B081               	btfsc	129,0,c	;volatile
  3747   0011E0  D007               	goto	i2l446
  3748                           
  3749                           ;T1.c: 41: draw_string("AV");
  3750   0011E2  0ED5               	movlw	low STR_2
  3751   0011E4  6E08               	movwf	draw_string@tableau^0,c
  3752   0011E6  0E10               	movlw	high STR_2
  3753   0011E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3754   0011EA  ECA9  F00E         	call	_draw_string	;wreg free
  3755   0011EE  D022               	goto	i2l4861
  3756   0011F0                     i2l446:
  3757                           
  3758                           ;T1.c: 42: else;T1.c: 43: if (PORTBbits.RB1==0)
  3759   0011F0  B281               	btfsc	129,1,c	;volatile
  3760   0011F2  D007               	goto	i2l4855
  3761                           
  3762                           ;T1.c: 44: draw_string("AR");
  3763   0011F4  0ED2               	movlw	low STR_3
  3764   0011F6  6E08               	movwf	draw_string@tableau^0,c
  3765   0011F8  0E10               	movlw	high STR_3
  3766   0011FA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3767   0011FC  ECA9  F00E         	call	_draw_string	;wreg free
  3768   001200  D019               	goto	i2l4861
  3769   001202                     i2l4855:
  3770                           
  3771                           ;T1.c: 45: else{;T1.c: 46: draw_string("N ");
  3772   001202  0ECC               	movlw	low STR_4
  3773   001204  6E08               	movwf	draw_string@tableau^0,c
  3774   001206  0E10               	movlw	high STR_4
  3775   001208  6E09               	movwf	(draw_string@tableau+1)^0,c
  3776   00120A  ECA9  F00E         	call	_draw_string	;wreg free
  3777                           
  3778                           ;T1.c: 48: _delay((unsigned long)((50)*(48000000/4000.0)));
  3779   00120E  0E04               	movlw	4
  3780   001210  6E1C               	movwf	(??_tache1+1)^0,c
  3781   001212  0E0C               	movlw	12
  3782   001214  6E1B               	movwf	??_tache1^0,c
  3783   001216  0E34               	movlw	52
  3784   001218                     i2u313_47:
  3785   001218  2EE8               	decfsz	wreg,f,c
  3786   00121A  D7FE               	bra	i2u313_47
  3787   00121C  2E1B               	decfsz	??_tache1^0,f,c
  3788   00121E  D7FC               	bra	i2u313_47
  3789   001220  2E1C               	decfsz	(??_tache1+1)^0,f,c
  3790   001222  D7FA               	bra	i2u313_47
  3791                           
  3792                           ;T1.c: 49: vitesse=Diminution(vitesse);
  3793   001224  C073 F001          	movff	115,Diminution@vitesse
  3794   001228  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3795   00122A  EC62  F012         	call	_Diminution	;wreg free
  3796   00122E  5001               	movf	?_Diminution^0,w,c
  3797   001230  0100               	movlb	0	; () banked
  3798   001232  6F73               	movwf	115,b
  3799   001234                     i2l4861:
  3800                           
  3801                           ;T1.c: 55: };T1.c: 57: goto_lico(7,0);
  3802   001234  0E00               	movlw	0
  3803   001236  6E09               	movwf	goto_lico@colonne^0,c
  3804   001238  0E07               	movlw	7
  3805   00123A  ECDC  F00F         	call	_goto_lico
  3806                           
  3807                           ;T1.c: 58: if (PORTEbits.RE4==0){
  3808   00123E  B884               	btfsc	132,4,c	;volatile
  3809   001240  D017               	goto	i2l4871
  3810                           
  3811                           ;T1.c: 59: draw_string("((!))");
  3812   001242  0EB1               	movlw	low STR_5
  3813   001244  6E08               	movwf	draw_string@tableau^0,c
  3814   001246  0E10               	movlw	high STR_5
  3815   001248  6E09               	movwf	(draw_string@tableau+1)^0,c
  3816   00124A  ECA9  F00E         	call	_draw_string	;wreg free
  3817                           
  3818                           ;T1.c: 60: _delay((unsigned long)((5)*(48000000/4000.0)));
  3819   00124E  0E4E               	movlw	78
  3820   001250  6E1B               	movwf	??_tache1^0,c
  3821   001252  0EEB               	movlw	235
  3822   001254                     i2u314_47:
  3823   001254  2EE8               	decfsz	wreg,f,c
  3824   001256  D7FE               	bra	i2u314_47
  3825   001258  2E1B               	decfsz	??_tache1^0,f,c
  3826   00125A  D7FC               	bra	i2u314_47
  3827   00125C  F000               	nop	
  3828                           
  3829                           ;T1.c: 61: vitesse=Diminution(vitesse);
  3830   00125E  C073 F001          	movff	115,Diminution@vitesse
  3831   001262  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3832   001264  EC62  F012         	call	_Diminution	;wreg free
  3833   001268  5001               	movf	?_Diminution^0,w,c
  3834   00126A  0100               	movlb	0	; () banked
  3835   00126C  6F73               	movwf	115,b
  3836                           
  3837                           ;T1.c: 62: }
  3838   00126E  D006               	goto	i2l4873
  3839   001270                     i2l4871:
  3840                           
  3841                           ;T1.c: 63: else{;T1.c: 64: draw_string("     ");
  3842   001270  0E2D               	movlw	low (STR_14+15)
  3843   001272  6E08               	movwf	draw_string@tableau^0,c
  3844   001274  0E10               	movlw	high (STR_14+15)
  3845   001276  6E09               	movwf	(draw_string@tableau+1)^0,c
  3846   001278  ECA9  F00E         	call	_draw_string	;wreg free
  3847   00127C                     i2l4873:
  3848                           
  3849                           ;T1.c: 65: };T1.c: 67: goto_lico(1,0);
  3850   00127C  0E00               	movlw	0
  3851   00127E  6E09               	movwf	goto_lico@colonne^0,c
  3852   001280  0E01               	movlw	1
  3853   001282  ECDC  F00F         	call	_goto_lico
  3854                           
  3855                           ;T1.c: 68: draw_string("Siege:");
  3856   001286  0E9C               	movlw	low STR_7
  3857   001288  6E08               	movwf	draw_string@tableau^0,c
  3858   00128A  0E10               	movlw	high STR_7
  3859   00128C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3860   00128E  ECA9  F00E         	call	_draw_string	;wreg free
  3861                           
  3862                           ;T1.c: 69: if (PORTBbits.RB2==0)
  3863   001292  B481               	btfsc	129,2,c	;volatile
  3864   001294  D004               	goto	i2l4881
  3865                           
  3866                           ;T1.c: 70: {draw_char('1');}
  3867   001296  0E31               	movlw	49
  3868   001298  EC41  F011         	call	_draw_char
  3869   00129C  D003               	goto	i2l4883
  3870   00129E                     i2l4881:
  3871                           
  3872                           ;T1.c: 71: else;T1.c: 72: {draw_char('0');}
  3873   00129E  0E30               	movlw	48
  3874   0012A0  EC41  F011         	call	_draw_char
  3875   0012A4                     i2l4883:
  3876                           
  3877                           ;T1.c: 74: goto_lico(2,0);
  3878   0012A4  0E00               	movlw	0
  3879   0012A6  6E09               	movwf	goto_lico@colonne^0,c
  3880   0012A8  0E02               	movlw	2
  3881   0012AA  ECDC  F00F         	call	_goto_lico
  3882                           
  3883                           ;T1.c: 75: draw_string("Temp. Eau:");
  3884   0012AE  0E66               	movlw	low STR_8
  3885   0012B0  6E08               	movwf	draw_string@tableau^0,c
  3886   0012B2  0E10               	movlw	high STR_8
  3887   0012B4  6E09               	movwf	(draw_string@tableau+1)^0,c
  3888   0012B6  ECA9  F00E         	call	_draw_string	;wreg free
  3889                           
  3890                           ;T1.c: 77: draw_dec8(Conversion(lecture_8bit_analogique(2)));
  3891   0012BA  0E02               	movlw	2
  3892   0012BC  EC26  F011         	call	_lecture_8bit_analogique
  3893   0012C0  6E1B               	movwf	??_tache1^0,c
  3894   0012C2  501B               	movf	??_tache1^0,w,c
  3895   0012C4  6E0F               	movwf	Conversion@a^0,c
  3896   0012C6  6A10               	clrf	(Conversion@a+1)^0,c
  3897   0012C8  ECCD  F010         	call	_Conversion	;wreg free
  3898   0012CC  500F               	movf	?_Conversion^0,w,c
  3899   0012CE  EC5B  F00E         	call	_draw_dec8
  3900                           
  3901                           ;T1.c: 79: goto_lico(3,0);
  3902   0012D2  0E00               	movlw	0
  3903   0012D4  6E09               	movwf	goto_lico@colonne^0,c
  3904   0012D6  0E03               	movlw	3
  3905   0012D8  ECDC  F00F         	call	_goto_lico
  3906                           
  3907                           ;T1.c: 80: draw_string("Temp. Huile:");
  3908   0012DC  0E41               	movlw	low STR_9
  3909   0012DE  6E08               	movwf	draw_string@tableau^0,c
  3910   0012E0  0E10               	movlw	high STR_9
  3911   0012E2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3912   0012E4  ECA9  F00E         	call	_draw_string	;wreg free
  3913                           
  3914                           ;T1.c: 81: draw_dec8(Conversion(lecture_8bit_analogique(3)));
  3915   0012E8  0E03               	movlw	3
  3916   0012EA  EC26  F011         	call	_lecture_8bit_analogique
  3917   0012EE  6E1B               	movwf	??_tache1^0,c
  3918   0012F0  501B               	movf	??_tache1^0,w,c
  3919   0012F2  6E0F               	movwf	Conversion@a^0,c
  3920   0012F4  6A10               	clrf	(Conversion@a+1)^0,c
  3921   0012F6  ECCD  F010         	call	_Conversion	;wreg free
  3922   0012FA  500F               	movf	?_Conversion^0,w,c
  3923   0012FC  EC5B  F00E         	call	_draw_dec8
  3924                           
  3925                           ;T1.c: 83: goto_lico(4,0);
  3926   001300  0E00               	movlw	0
  3927   001302  6E09               	movwf	goto_lico@colonne^0,c
  3928   001304  0E04               	movlw	4
  3929   001306  ECDC  F00F         	call	_goto_lico
  3930                           
  3931                           ;T1.c: 84: draw_string("Choc:");
  3932   00130A  0EB7               	movlw	low STR_10
  3933   00130C  6E08               	movwf	draw_string@tableau^0,c
  3934   00130E  0E10               	movlw	high STR_10
  3935   001310  6E09               	movwf	(draw_string@tableau+1)^0,c
  3936   001312  ECA9  F00E         	call	_draw_string	;wreg free
  3937                           
  3938                           ;T1.c: 87: if (PORTBbits.RB3==0)
  3939   001316  B681               	btfsc	129,3,c	;volatile
  3940   001318  D004               	goto	i2l4903
  3941                           
  3942                           ;T1.c: 89: draw_char('1');
  3943   00131A  0E31               	movlw	49
  3944   00131C  EC41  F011         	call	_draw_char
  3945   001320  D003               	goto	i2l4905
  3946   001322                     i2l4903:
  3947                           
  3948                           ;T1.c: 91: else;T1.c: 92: draw_char('0');
  3949   001322  0E30               	movlw	48
  3950   001324  EC41  F011         	call	_draw_char
  3951   001328                     i2l4905:
  3952                           
  3953                           ;T1.c: 94: if(Personne == 2) {
  3954   001328  0E02               	movlw	2
  3955   00132A  0100               	movlb	0	; () banked
  3956   00132C  1982               	xorwf	130,w,b
  3957   00132E  A4D8               	btfss	status,2,c
  3958   001330  D006               	goto	i2l4909
  3959   001332                     i2u282_40:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;T1.c: 95: vitesseAdmin(Personne);
  3963   001332  C082 F001          	movff	130,vitesseAdmin@a
  3964   001336  6A02               	clrf	(vitesseAdmin@a+1)^0,c
  3965   001338  ECEF  F00E         	call	_vitesseAdmin	;wreg free
  3966                           
  3967                           ;T1.c: 97: }
  3968   00133C  D003               	goto	i2l4913
  3969   00133E                     i2l4909:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;T1.c: 98: else if(Personne ==1){
  3973   00133E  0582               	decf	130,w,b
  3974   001340  B4D8               	btfsc	status,2,c
  3975   001342  D7F7               	goto	i2u282_40
  3976   001344                     i2l4913:
  3977                           
  3978                           ;T1.c: 103: };T1.c: 105: goto_lico(5,0);
  3979   001344  0E00               	movlw	0
  3980   001346  6E09               	movwf	goto_lico@colonne^0,c
  3981   001348  0E05               	movlw	5
  3982   00134A  ECDC  F00F         	call	_goto_lico
  3983                           
  3984                           ;T1.c: 106: draw_string("Vitesse:");
  3985   00134E  0E7B               	movlw	low STR_11
  3986   001350  6E08               	movwf	draw_string@tableau^0,c
  3987   001352  0E10               	movlw	high STR_11
  3988   001354  6E09               	movwf	(draw_string@tableau+1)^0,c
  3989   001356  ECA9  F00E         	call	_draw_string	;wreg free
  3990                           
  3991                           ;T1.c: 107: draw_dec8(vitesse);
  3992   00135A  0100               	movlb	0	; () banked
  3993   00135C  5173               	movf	115,w,b
  3994   00135E  EC5B  F00E         	call	_draw_dec8
  3995                           
  3996                           ;T1.c: 109: goto_lico(6,0);
  3997   001362  0E00               	movlw	0
  3998   001364  6E09               	movwf	goto_lico@colonne^0,c
  3999   001366  0E06               	movlw	6
  4000   001368  ECDC  F00F         	call	_goto_lico
  4001                           
  4002                           ;T1.c: 110: draw_string("Batterie:");
  4003   00136C  0E71               	movlw	low STR_12
  4004   00136E  6E08               	movwf	draw_string@tableau^0,c
  4005   001370  0E10               	movlw	high STR_12
  4006   001372  6E09               	movwf	(draw_string@tableau+1)^0,c
  4007   001374  ECA9  F00E         	call	_draw_string	;wreg free
  4008                           
  4009                           ;T1.c: 111: if (PORTEbits.RE2==0 && batterie < 100)
  4010   001378  B484               	btfsc	132,2,c	;volatile
  4011   00137A  D005               	goto	i2l4929
  4012   00137C  0E64               	movlw	100
  4013   00137E  0100               	movlb	0	; () banked
  4014   001380  6174               	cpfslt	116,b
  4015   001382  D001               	goto	i2l4929
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;T1.c: 112: batterie++;
  4019   001384  2B74               	incf	116,f,b
  4020   001386                     i2l4929:
  4021                           
  4022                           ;T1.c: 113: if (PORTEbits.RE3==0 && batterie > 0)
  4023   001386  B684               	btfsc	132,3,c	;volatile
  4024   001388  D004               	goto	i2l4935
  4025   00138A  0100               	movlb	0	; () banked
  4026   00138C  5174               	movf	116,w,b
  4027   00138E  A4D8               	btfss	status,2,c
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;T1.c: 114: batterie--;
  4031   001390  0774               	decf	116,f,b
  4032   001392                     i2l4935:
  4033                           
  4034                           ;T1.c: 115: draw_dec8(batterie);
  4035   001392  0100               	movlb	0	; () banked
  4036   001394  5174               	movf	116,w,b
  4037   001396  EC5B  F00E         	call	_draw_dec8
  4038                           
  4039                           ;T1.c: 119: goto_lico(8,0);
  4040   00139A  0E00               	movlw	0
  4041   00139C  6E09               	movwf	goto_lico@colonne^0,c
  4042   00139E  0E08               	movlw	8
  4043   0013A0  ECDC  F00F         	call	_goto_lico
  4044                           
  4045                           ;T1.c: 120: draw_string("Badge:");
  4046   0013A4  0E95               	movlw	low STR_13
  4047   0013A6  6E08               	movwf	draw_string@tableau^0,c
  4048   0013A8  0E10               	movlw	high STR_13
  4049   0013AA  6E09               	movwf	(draw_string@tableau+1)^0,c
  4050   0013AC  ECA9  F00E         	call	_draw_string	;wreg free
  4051                           
  4052                           ;T1.c: 121: if (n_octet_badge==0)
  4053   0013B0  0100               	movlb	0	; () banked
  4054   0013B2  517F               	movf	127,w,b
  4055   0013B4  A4D8               	btfss	status,2,c
  4056   0013B6  D007               	goto	i2l4945
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;T1.c: 122: draw_string(" AUCUN              ");
  4060   0013B8  0E1E               	movlw	low STR_14
  4061   0013BA  6E08               	movwf	draw_string@tableau^0,c
  4062   0013BC  0E10               	movlw	high STR_14
  4063   0013BE  6E09               	movwf	(draw_string@tableau+1)^0,c
  4064   0013C0  ECA9  F00E         	call	_draw_string	;wreg free
  4065   0013C4  D01E               	goto	i2l465
  4066   0013C6                     i2l4945:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;T1.c: 123: else;T1.c: 124: {;T1.c: 131: if(Personne==2)
  4070   0013C6  0E02               	movlw	2
  4071   0013C8  1982               	xorwf	130,w,b
  4072   0013CA  A4D8               	btfss	status,2,c
  4073   0013CC  D007               	goto	i2l4949
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;T1.c: 132: {;T1.c: 134: draw_string("Operator");
  4077   0013CE  0E84               	movlw	low STR_15
  4078   0013D0  6E08               	movwf	draw_string@tableau^0,c
  4079   0013D2  0E10               	movlw	high STR_15
  4080   0013D4  6E09               	movwf	(draw_string@tableau+1)^0,c
  4081   0013D6  ECA9  F00E         	call	_draw_string	;wreg free
  4082                           
  4083                           ;T1.c: 136: }
  4084   0013DA  D013               	goto	i2l465
  4085   0013DC                     i2l4949:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;T1.c: 137: else if(Personne==1)
  4089   0013DC  0582               	decf	130,w,b
  4090   0013DE  A4D8               	btfss	status,2,c
  4091   0013E0  D007               	goto	i2l4953
  4092                           
  4093                           ; BSR set to: 0
  4094                           ;T1.c: 138: {;T1.c: 140: draw_string(" ADMIN");
  4095   0013E2  0EAA               	movlw	low STR_16
  4096   0013E4  6E08               	movwf	draw_string@tableau^0,c
  4097   0013E6  0E10               	movlw	high STR_16
  4098   0013E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  4099   0013EA  ECA9  F00E         	call	_draw_string	;wreg free
  4100                           
  4101                           ;T1.c: 141: }
  4102   0013EE  D009               	goto	i2l465
  4103   0013F0                     i2l4953:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;T1.c: 142: else if (Personne==0){
  4107   0013F0  5182               	movf	130,w,b
  4108   0013F2  A4D8               	btfss	status,2,c
  4109   0013F4  D006               	goto	i2l465
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;T1.c: 144: draw_string("AUCUN");
  4113   0013F6  0EBD               	movlw	low STR_17
  4114   0013F8  6E08               	movwf	draw_string@tableau^0,c
  4115   0013FA  0E10               	movlw	high STR_17
  4116   0013FC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4117   0013FE  ECA9  F00E         	call	_draw_string	;wreg free
  4118   001402                     i2l465:
  4119                           
  4120                           ;T1.c: 145: };T1.c: 146: };T1.c: 154: goto_lico(9,0);
  4121                           
  4122                           ; BSR set to: 0
  4123   001402  0E00               	movlw	0
  4124   001404  6E09               	movwf	goto_lico@colonne^0,c
  4125   001406  0E09               	movlw	9
  4126   001408  ECDC  F00F         	call	_goto_lico
  4127                           
  4128                           ;T1.c: 155: draw_string("X-Joystick:");
  4129   00140C  0E4E               	movlw	low STR_18
  4130   00140E  6E08               	movwf	draw_string@tableau^0,c
  4131   001410  0E10               	movlw	high STR_18
  4132   001412  6E09               	movwf	(draw_string@tableau+1)^0,c
  4133   001414  ECA9  F00E         	call	_draw_string	;wreg free
  4134                           
  4135                           ;T1.c: 156: draw_hex8(lecture_8bit_analogique(10));
  4136   001418  0E0A               	movlw	10
  4137   00141A  EC26  F011         	call	_lecture_8bit_analogique
  4138   00141E  ECAE  F00F         	call	_draw_hex8
  4139                           
  4140                           ;T1.c: 158: goto_lico(10,0);
  4141   001422  0E00               	movlw	0
  4142   001424  6E09               	movwf	goto_lico@colonne^0,c
  4143   001426  0E0A               	movlw	10
  4144   001428  ECDC  F00F         	call	_goto_lico
  4145                           
  4146                           ;T1.c: 159: draw_string("Y-Joystick:");
  4147   00142C  0E5A               	movlw	low STR_19
  4148   00142E  6E08               	movwf	draw_string@tableau^0,c
  4149   001430  0E10               	movlw	high STR_19
  4150   001432  6E09               	movwf	(draw_string@tableau+1)^0,c
  4151   001434  ECA9  F00E         	call	_draw_string	;wreg free
  4152                           
  4153                           ;T1.c: 160: draw_hex8(lecture_8bit_analogique(11));
  4154   001438  0E0B               	movlw	11
  4155   00143A  EC26  F011         	call	_lecture_8bit_analogique
  4156   00143E  ECAE  F00F         	call	_draw_hex8
  4157                           
  4158                           ;T1.c: 163: goto_lico(5,22);
  4159   001442  0E16               	movlw	22
  4160   001444  6E09               	movwf	goto_lico@colonne^0,c
  4161   001446  0E05               	movlw	5
  4162   001448  ECDC  F00F         	call	_goto_lico
  4163                           
  4164                           ;T1.c: 164: draw_string("VIDE");
  4165   00144C  0EC3               	movlw	low STR_20
  4166   00144E  6E08               	movwf	draw_string@tableau^0,c
  4167   001450  0E10               	movlw	high STR_20
  4168   001452  6E09               	movwf	(draw_string@tableau+1)^0,c
  4169   001454  ECA9  F00E         	call	_draw_string	;wreg free
  4170                           
  4171                           ;T1.c: 165: goto_lico(5,31);
  4172   001458  0E1F               	movlw	31
  4173   00145A  6E09               	movwf	goto_lico@colonne^0,c
  4174   00145C  0E05               	movlw	5
  4175   00145E  ECDC  F00F         	call	_goto_lico
  4176                           
  4177                           ;T1.c: 166: draw_string("CHARGE");
  4178   001462  0EA3               	movlw	low STR_21
  4179   001464  6E08               	movwf	draw_string@tableau^0,c
  4180   001466  0E10               	movlw	high STR_21
  4181   001468  6E09               	movwf	(draw_string@tableau+1)^0,c
  4182   00146A  ECA9  F00E         	call	_draw_string	;wreg free
  4183                           
  4184                           ;T1.c: 174: if (TP_appui==1)
  4185   00146E  0100               	movlb	0	; () banked
  4186   001470  0566               	decf	102,w,b
  4187   001472  A4D8               	btfss	status,2,c
  4188   001474  D020               	goto	i2l469
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;T1.c: 175: {;T1.c: 176: goto_lico(0,20);
  4192   001476  0E14               	movlw	20
  4193   001478  6E09               	movwf	goto_lico@colonne^0,c
  4194   00147A  0E00               	movlw	0
  4195   00147C  ECDC  F00F         	call	_goto_lico
  4196                           
  4197                           ;T1.c: 177: draw_string("x=");
  4198   001480  0ECF               	movlw	low STR_22
  4199   001482  6E08               	movwf	draw_string@tableau^0,c
  4200   001484  0E10               	movlw	high STR_22
  4201   001486  6E09               	movwf	(draw_string@tableau+1)^0,c
  4202   001488  ECA9  F00E         	call	_draw_string	;wreg free
  4203                           
  4204                           ;T1.c: 178: draw_hex8(TP_x);
  4205   00148C  0100               	movlb	0	; () banked
  4206   00148E  5167               	movf	103,w,b
  4207   001490  ECAE  F00F         	call	_draw_hex8
  4208                           
  4209                           ;T1.c: 179: draw_string(" y=");
  4210   001494  0EC8               	movlw	low STR_23
  4211   001496  6E08               	movwf	draw_string@tableau^0,c
  4212   001498  0E10               	movlw	high STR_23
  4213   00149A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4214   00149C  ECA9  F00E         	call	_draw_string	;wreg free
  4215                           
  4216                           ;T1.c: 180: draw_hex8(TP_y);
  4217   0014A0  0100               	movlb	0	; () banked
  4218   0014A2  5168               	movf	104,w,b
  4219   0014A4  ECAE  F00F         	call	_draw_hex8
  4220                           
  4221                           ;T1.c: 181: plot1(TP_x,TP_y);
  4222   0014A8  C068 F00F          	movff	104,plot1@y
  4223   0014AC  0100               	movlb	0	; () banked
  4224   0014AE  5167               	movf	103,w,b
  4225   0014B0  ECB3  F00D         	call	_plot1
  4226                           
  4227                           ;T1.c: 182: }
  4228   0014B4  D001               	goto	i2l4987
  4229   0014B6                     i2l469:
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;T1.c: 183: else;T1.c: 184: {;T1.c: 185: __nop();
  4233   0014B6  F000               	nop	
  4234   0014B8                     i2l4987:
  4235                           
  4236                           ;T1.c: 186: };T1.c: 187: if (TEST==1){
  4237   0014B8  0100               	movlb	0	; () banked
  4238   0014BA  0581               	decf	129,w,b
  4239   0014BC  B4D8               	btfsc	status,2,c
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;T1.c: 188: charger();
  4243   0014BE  EC4E  F012         	call	_charger	;wreg free
  4244                           
  4245                           ;T1.c: 189: };T1.c: 190: if(TEST==0){
  4246   0014C2  0100               	movlb	0	; () banked
  4247   0014C4  5181               	movf	129,w,b
  4248   0014C6  A4D8               	btfss	status,2,c
  4249   0014C8  D67F               	goto	i2l4845
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;T1.c: 191: clear_line(14);
  4253   0014CA  0E0E               	movlw	14
  4254   0014CC  ECE6  F011         	call	_clear_line
  4255                           
  4256                           ;T1.c: 192: vide();
  4257   0014D0  EC42  F012         	call	_vide	;wreg free
  4258                           
  4259                           ;T1.c: 193: TEST=3;
  4260   0014D4  0E03               	movlw	3
  4261   0014D6  0100               	movlb	0	; () banked
  4262   0014D8  6F81               	movwf	129,b
  4263   0014DA  D676               	goto	i2l4845
  4264   0014DC                     __end_of_tache1:
  4265                           	callstack 0
  4266                           
  4267 ;; *************** function _vitesseAdmin *****************
  4268 ;; Defined at:
  4269 ;;		line 445 in file "afficheur.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  a               2    0[COMRAM] unsigned int 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  c               2    7[COMRAM] int 
  4274 ;;  b               2    5[COMRAM] int 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2, status,0
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:        9 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; This function calls:
  4291 ;;		Nothing
  4292 ;; This function is called by:
  4293 ;;		_tache1
  4294 ;; This function uses a non-reentrant model
  4295 ;;
  4296                           
  4297                           	psect	text15
  4298   001DDE                     __ptext15:
  4299                           	callstack 0
  4300   001DDE                     _vitesseAdmin:
  4301                           	callstack 27
  4302                           
  4303                           ;afficheur.c: 446: int b ;;afficheur.c: 447: int c;;afficheur.c: 448: if (a==1){
  4304                           
  4305                           ; BSR set to: 0
  4306                           ;incstack = 0
  4307   001DDE  0401               	decf	vitesseAdmin@a^0,w,c
  4308   001DE0  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4309   001DE2  A4D8               	btfss	status,2,c
  4310   001DE4  D008               	goto	i2l4495
  4311                           
  4312                           ;afficheur.c: 449: b =50;
  4313   001DE6  0E00               	movlw	0
  4314   001DE8  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4315   001DEA  0E32               	movlw	50
  4316   001DEC  6E06               	movwf	vitesseAdmin@b^0,c
  4317                           
  4318                           ;afficheur.c: 450: c = 80;
  4319   001DEE  0E00               	movlw	0
  4320   001DF0  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4321   001DF2  0E50               	movlw	80
  4322   001DF4  6E08               	movwf	vitesseAdmin@c^0,c
  4323   001DF6                     i2l4495:
  4324                           
  4325                           ;afficheur.c: 451: };afficheur.c: 452: if(a==2){
  4326   001DF6  0E02               	movlw	2
  4327   001DF8  1801               	xorwf	vitesseAdmin@a^0,w,c
  4328   001DFA  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4329   001DFC  A4D8               	btfss	status,2,c
  4330   001DFE  D008               	goto	i2l4499
  4331                           
  4332                           ;afficheur.c: 453: b =15;
  4333   001E00  0E00               	movlw	0
  4334   001E02  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4335   001E04  0E0F               	movlw	15
  4336   001E06  6E06               	movwf	vitesseAdmin@b^0,c
  4337                           
  4338                           ;afficheur.c: 454: c = 25;
  4339   001E08  0E00               	movlw	0
  4340   001E0A  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4341   001E0C  0E19               	movlw	25
  4342   001E0E  6E08               	movwf	vitesseAdmin@c^0,c
  4343   001E10                     i2l4499:
  4344                           
  4345                           ;afficheur.c: 455: };afficheur.c: 456: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4346   001E10  A081               	btfss	129,0,c	;volatile
  4347   001E12  D002               	goto	i2u251_40
  4348   001E14  B281               	btfsc	129,1,c	;volatile
  4349   001E16  0012               	return	
  4350   001E18                     i2u251_40:
  4351                           
  4352                           ;afficheur.c: 459: if (PORTEbits.RE4==1){
  4353   001E18  A884               	btfss	132,4,c	;volatile
  4354   001E1A  0012               	return	
  4355                           
  4356                           ;afficheur.c: 460: if(TEST==1){
  4357   001E1C  0100               	movlb	0	; () banked
  4358   001E1E  0581               	decf	129,w,b
  4359   001E20  A4D8               	btfss	status,2,c
  4360   001E22  D016               	goto	i2l1468
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;afficheur.c: 462: if (PORTEbits.RE0==0 && vitesse < b)
  4364   001E24  B084               	btfsc	132,0,c	;volatile
  4365   001E26  D00D               	goto	i2l4511
  4366                           
  4367                           ; BSR set to: 0
  4368   001E28  5173               	movf	115,w,b
  4369   001E2A  6E03               	movwf	??_vitesseAdmin^0,c
  4370   001E2C  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4371   001E2E  5006               	movf	vitesseAdmin@b^0,w,c
  4372   001E30  5C03               	subwf	??_vitesseAdmin^0,w,c
  4373   001E32  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4374   001E34  0A80               	xorlw	128
  4375   001E36  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4376   001E38  5007               	movf	(vitesseAdmin@b+1)^0,w,c
  4377   001E3A  0A80               	xorlw	128
  4378   001E3C  5805               	subwfb	(??_vitesseAdmin+2)^0,w,c
  4379   001E3E  A0D8               	btfss	status,0,c
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;afficheur.c: 463: vitesse++;
  4383   001E40  2B73               	incf	115,f,b
  4384   001E42                     i2l4511:
  4385                           
  4386                           ; BSR set to: 0
  4387                           ;afficheur.c: 464: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4388   001E42  B284               	btfsc	132,1,c	;volatile
  4389   001E44  0012               	return	
  4390                           
  4391                           ; BSR set to: 0
  4392   001E46  5173               	movf	115,w,b
  4393   001E48  B4D8               	btfsc	status,2,c
  4394   001E4A  0012               	return	
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;afficheur.c: 465: vitesse--;
  4398   001E4C  0773               	decf	115,f,b
  4399   001E4E  0012               	return	
  4400   001E50                     i2l1468:
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;afficheur.c: 468: if (PORTEbits.RE0==0 && vitesse < c)
  4404   001E50  B084               	btfsc	132,0,c	;volatile
  4405   001E52  D7F7               	goto	i2l4511
  4406                           
  4407                           ; BSR set to: 0
  4408   001E54  5173               	movf	115,w,b
  4409   001E56  6E03               	movwf	??_vitesseAdmin^0,c
  4410   001E58  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4411   001E5A  5008               	movf	vitesseAdmin@c^0,w,c
  4412   001E5C  5C03               	subwf	??_vitesseAdmin^0,w,c
  4413   001E5E  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4414   001E60  0A80               	xorlw	128
  4415   001E62  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4416   001E64  5009               	movf	(vitesseAdmin@c+1)^0,w,c
  4417   001E66  D7E9               	goto	L8
  4418   001E68                     __end_of_vitesseAdmin:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _vide *****************
  4422 ;; Defined at:
  4423 ;;		line 438 in file "afficheur.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; Hardware stack levels required when called: 4
  4444 ;; This function calls:
  4445 ;;		_draw_string
  4446 ;;		_goto_lico
  4447 ;; This function is called by:
  4448 ;;		_tache1
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text16
  4453   002484                     __ptext16:
  4454                           	callstack 0
  4455   002484                     _vide:
  4456                           	callstack 23
  4457                           
  4458                           ;afficheur.c: 440: goto_lico(14,0);
  4459                           
  4460                           ;incstack = 0
  4461   002484  0E00               	movlw	0
  4462   002486  6E09               	movwf	goto_lico@colonne^0,c
  4463   002488  0E0E               	movlw	14
  4464   00248A  ECDC  F00F         	call	_goto_lico
  4465                           
  4466                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4467   00248E  0E33               	movlw	low STR_25
  4468   002490  6E08               	movwf	draw_string@tableau^0,c
  4469   002492  0E10               	movlw	high STR_25
  4470   002494  6E09               	movwf	(draw_string@tableau+1)^0,c
  4471   002496  ECA9  F00E         	call	_draw_string	;wreg free
  4472   00249A  0012               	return		;funcret
  4473   00249C                     __end_of_vide:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _lecture_8bit_analogique *****************
  4477 ;; Defined at:
  4478 ;;		line 60 in file "main.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  channel         1    wreg     unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  channel         1    1[COMRAM] unsigned char 
  4483 ;;  ret             1    0[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      unsigned char 
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;Total ram usage:        2 bytes
  4498 ;; Hardware stack levels used: 1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_tache1
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text17
  4507   00224C                     __ptext17:
  4508                           	callstack 0
  4509   00224C                     _lecture_8bit_analogique:
  4510                           	callstack 27
  4511                           
  4512                           ;incstack = 0
  4513                           ;lecture_8bit_analogique@channel stored from wreg
  4514   00224C  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4515                           
  4516                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4517   00224E  0E00               	movlw	0
  4518   002250  6EC1               	movwf	193,c	;volatile
  4519                           
  4520                           ;main.c: 66: ADCON2=0x16;
  4521   002252  0E16               	movlw	22
  4522   002254  6EC0               	movwf	192,c	;volatile
  4523                           
  4524                           ;main.c: 67: channel=channel&0x1F;
  4525   002256  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4526   002258  0B1F               	andlw	31
  4527   00225A  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4528                           
  4529                           ;main.c: 68: channel=channel<<2;
  4530   00225C  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4531   00225E  46E8               	rlncf	wreg,f,c
  4532   002260  0BFC               	andlw	252
  4533   002262  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4534                           
  4535                           ;main.c: 69: ADCON0=channel|0x01;
  4536   002264  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4537   002266  0901               	iorlw	1
  4538   002268  6EC2               	movwf	194,c	;volatile
  4539                           
  4540                           ;main.c: 71: ADCON0bits.GO=1;
  4541   00226A  82C2               	bsf	194,1,c	;volatile
  4542   00226C                     i2l146:
  4543   00226C  B2C2               	btfsc	194,1,c	;volatile
  4544   00226E  D7FE               	goto	i2l146
  4545                           
  4546                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4547   002270  A0C3               	btfss	195,0,c	;volatile
  4548   002272  D003               	goto	i2l149
  4549                           
  4550                           ;main.c: 76: ret=0;
  4551   002274  0E00               	movlw	0
  4552   002276  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4553   002278  D002               	goto	i2l2847
  4554   00227A                     i2l149:
  4555                           
  4556                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4557   00227A  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4558   00227E                     i2l2847:
  4559                           
  4560                           ;main.c: 82: return ret;
  4561   00227E  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4562   002280  0012               	return		;funcret
  4563   002282                     __end_of_lecture_8bit_analogique:
  4564                           	callstack 0
  4565                           
  4566 ;; *************** function _initialisation_afficheur *****************
  4567 ;; Defined at:
  4568 ;;		line 164 in file "afficheur.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;		None
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  error_count     1    8[COMRAM] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  1    wreg      void 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0, cstack
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;Total ram usage:        1 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; Hardware stack levels required when called: 3
  4589 ;; This function calls:
  4590 ;;		_check_status_ok
  4591 ;;		_command
  4592 ;;		_d1command
  4593 ;;		_d2command
  4594 ;;		_delai_us_char
  4595 ;; This function is called by:
  4596 ;;		_tache1
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text18
  4601   001A9A                     __ptext18:
  4602                           	callstack 0
  4603   001A9A                     _initialisation_afficheur:
  4604                           	callstack 24
  4605                           
  4606                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4607                           
  4608                           ;incstack = 0
  4609   001A9A  0E00               	movlw	0
  4610   001A9C  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4611                           
  4612                           ;afficheur.c: 172: LATH=0;
  4613   001A9E  0E00               	movlw	0
  4614   001AA0  6E90               	movwf	144,c	;volatile
  4615                           
  4616                           ;afficheur.c: 173: LATJ=0x1F;
  4617   001AA2  0E1F               	movlw	31
  4618   001AA4  6E91               	movwf	145,c	;volatile
  4619                           
  4620                           ;afficheur.c: 176: TRISH=0;
  4621   001AA6  0E00               	movlw	0
  4622   001AA8  6E99               	movwf	153,c	;volatile
  4623                           
  4624                           ;afficheur.c: 177: TRISJ=0;
  4625   001AAA  0E00               	movlw	0
  4626   001AAC  6E9A               	movwf	154,c	;volatile
  4627                           
  4628                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4629   001AAE  9A91               	bcf	145,5,c	;volatile
  4630                           
  4631                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4632   001AB0  8C91               	bsf	145,6,c	;volatile
  4633                           
  4634                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4635   001AB2  9891               	bcf	145,4,c	;volatile
  4636                           
  4637                           ;afficheur.c: 185: delai_us_char(4);
  4638   001AB4  0E04               	movlw	4
  4639   001AB6  ECD5  F011         	call	_delai_us_char
  4640                           
  4641                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4642   001ABA  8891               	bsf	145,4,c	;volatile
  4643                           
  4644                           ;afficheur.c: 190: delai_us_char(12);
  4645   001ABC  0E0C               	movlw	12
  4646   001ABE  ECD5  F011         	call	_delai_us_char
  4647                           
  4648                           ;afficheur.c: 191: while(check_status_ok()==00)
  4649   001AC2  D00C               	goto	i2l4411
  4650   001AC4                     i2l4401:
  4651                           
  4652                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4653   001AC4  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4654                           
  4655                           ;afficheur.c: 194: delai_us_char(12);
  4656   001AC6  0E0C               	movlw	12
  4657   001AC8  ECD5  F011         	call	_delai_us_char
  4658                           
  4659                           ;afficheur.c: 195: if (error_count>200)
  4660   001ACC  0EC8               	movlw	200
  4661   001ACE  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4662   001AD0  D005               	goto	i2l4411
  4663                           
  4664                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4665   001AD2  828B               	bsf	139,1,c	;volatile
  4666   001AD4  808F               	bsf	143,0,c	;volatile
  4667   001AD6  948B               	bcf	139,2,c	;volatile
  4668                           
  4669                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4670   001AD8  9EF2               	bcf	242,7,c	;volatile
  4671   001ADA                     i2l1326:
  4672   001ADA  D7FF               	goto	i2l1326
  4673   001ADC                     i2l4411:
  4674   001ADC  EC8A  F011         	call	_check_status_ok	;wreg free
  4675   001AE0  0900               	iorlw	0
  4676   001AE2  B4D8               	btfsc	status,2,c
  4677   001AE4  D7EF               	goto	i2l4401
  4678                           
  4679                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4680   001AE6  0E0F               	movlw	15
  4681   001AE8  6E05               	movwf	d2command@d2^0,c
  4682   001AEA  0E21               	movlw	33
  4683   001AEC  6E06               	movwf	d2command@cmd^0,c
  4684   001AEE  0E27               	movlw	39
  4685   001AF0  EC5A  F010         	call	_d2command
  4686                           
  4687                           ;afficheur.c: 206: d2command(0,0,0x22);
  4688   001AF4  0E00               	movlw	0
  4689   001AF6  6E05               	movwf	d2command@d2^0,c
  4690   001AF8  0E22               	movlw	34
  4691   001AFA  6E06               	movwf	d2command@cmd^0,c
  4692   001AFC  0E00               	movlw	0
  4693   001AFE  EC5A  F010         	call	_d2command
  4694                           
  4695                           ;afficheur.c: 207: d2command(0,0,0x24);
  4696   001B02  0E00               	movlw	0
  4697   001B04  6E05               	movwf	d2command@d2^0,c
  4698   001B06  0E24               	movlw	36
  4699   001B08  6E06               	movwf	d2command@cmd^0,c
  4700   001B0A  0E00               	movlw	0
  4701   001B0C  EC5A  F010         	call	_d2command
  4702                           
  4703                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4704   001B10  0E7B               	movlw	123
  4705   001B12  6E05               	movwf	d2command@d2^0,c
  4706   001B14  0E40               	movlw	64
  4707   001B16  6E06               	movwf	d2command@cmd^0,c
  4708   001B18  0E00               	movlw	0
  4709   001B1A  EC5A  F010         	call	_d2command
  4710                           
  4711                           ;afficheur.c: 211: d2command(40,0,0x41);
  4712   001B1E  0E00               	movlw	0
  4713   001B20  6E05               	movwf	d2command@d2^0,c
  4714   001B22  0E41               	movlw	65
  4715   001B24  6E06               	movwf	d2command@cmd^0,c
  4716   001B26  0E28               	movlw	40
  4717   001B28  EC5A  F010         	call	_d2command
  4718                           
  4719                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4720   001B2C  0E80               	movlw	128
  4721   001B2E  6E05               	movwf	d2command@d2^0,c
  4722   001B30  0E42               	movlw	66
  4723   001B32  6E06               	movwf	d2command@cmd^0,c
  4724   001B34  0E00               	movlw	0
  4725   001B36  EC5A  F010         	call	_d2command
  4726                           
  4727                           ;afficheur.c: 213: d2command(40,0,0x43);
  4728   001B3A  0E00               	movlw	0
  4729   001B3C  6E05               	movwf	d2command@d2^0,c
  4730   001B3E  0E43               	movlw	67
  4731   001B40  6E06               	movwf	d2command@cmd^0,c
  4732   001B42  0E28               	movlw	40
  4733   001B44  EC5A  F010         	call	_d2command
  4734                           
  4735                           ;afficheur.c: 216: command(0x80);
  4736   001B48  0E80               	movlw	128
  4737   001B4A  EC03  F012         	call	_command
  4738                           
  4739                           ;afficheur.c: 219: command(0x9C);
  4740   001B4E  0E9C               	movlw	156
  4741   001B50  EC03  F012         	call	_command
  4742                           
  4743                           ;afficheur.c: 222: command(0xA0);
  4744   001B54  0EA0               	movlw	160
  4745   001B56  EC03  F012         	call	_command
  4746                           
  4747                           ;afficheur.c: 225: d1command(0x02,0x70);
  4748   001B5A  0E70               	movlw	112
  4749   001B5C  6E05               	movwf	d1command@cmd^0,c
  4750   001B5E  0E02               	movlw	2
  4751   001B60  ECED  F010         	call	_d1command
  4752   001B64  0012               	return		;funcret
  4753   001B66                     __end_of_initialisation_afficheur:
  4754                           	callstack 0
  4755                           
  4756 ;; *************** function _check_status_ok *****************
  4757 ;; Defined at:
  4758 ;;		line 30 in file "afficheur.c"
  4759 ;; Parameters:    Size  Location     Type
  4760 ;;		None
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  res             1    0[COMRAM] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  1    wreg      unsigned char 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;Total ram usage:        1 bytes
  4777 ;; Hardware stack levels used: 1
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_initialisation_afficheur
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text19
  4786   002314                     __ptext19:
  4787                           	callstack 0
  4788   002314                     _check_status_ok:
  4789                           	callstack 26
  4790                           
  4791                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4792                           
  4793                           ;incstack = 0
  4794   002314  6899               	setf	153,c	;volatile
  4795                           
  4796                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4797   002316  8091               	bsf	145,0,c	;volatile
  4798                           
  4799                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4800   002318  9691               	bcf	145,3,c	;volatile
  4801                           
  4802                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4803   00231A  9291               	bcf	145,1,c	;volatile
  4804                           
  4805                           ;afficheur.c: 39: __nop();
  4806   00231C  F000               	nop	
  4807                           
  4808                           ;afficheur.c: 40: __nop();
  4809   00231E  F000               	nop	
  4810                           
  4811                           ;afficheur.c: 41: __nop();
  4812   002320  F000               	nop	
  4813                           
  4814                           ;afficheur.c: 42: res=PORTH;
  4815   002322  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4816                           
  4817                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4818   002326  8291               	bsf	145,1,c	;volatile
  4819                           
  4820                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4821   002328  8691               	bsf	145,3,c	;volatile
  4822                           
  4823                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4824   00232A  5001               	movf	check_status_ok@res^0,w,c
  4825   00232C  0B03               	andlw	3
  4826   00232E  0A03               	xorlw	3
  4827   002330  A4D8               	btfss	status,2,c
  4828   002332  D002               	goto	i2l2811
  4829                           
  4830                           ;afficheur.c: 47: res=1;
  4831   002334  0E01               	movlw	1
  4832   002336  D001               	goto	L4
  4833   002338                     i2l2811:
  4834                           
  4835                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4836   002338  0E00               	movlw	0
  4837   00233A                     L4:
  4838   00233A  6E01               	movwf	check_status_ok@res^0,c
  4839                           
  4840                           ;afficheur.c: 50: return res;
  4841   00233C  5001               	movf	check_status_ok@res^0,w,c
  4842   00233E  0012               	return		;funcret
  4843   002340                     __end_of_check_status_ok:
  4844                           	callstack 0
  4845                           
  4846 ;; *************** function _init_rxtx *****************
  4847 ;; Defined at:
  4848 ;;		line 4 in file "rxtx.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_tache1
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text20
  4876   002388                     __ptext20:
  4877                           	callstack 0
  4878   002388                     _init_rxtx:
  4879                           	callstack 27
  4880                           
  4881                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4882                           
  4883                           ;incstack = 0
  4884   002388  9C94               	bcf	148,6,c	;volatile
  4885                           
  4886                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4887   00238A  8E94               	bsf	148,7,c	;volatile
  4888                           
  4889                           ;rxtx.c: 8: BAUDCON1=0x08;
  4890   00238C  0E08               	movlw	8
  4891   00238E  6E65               	movwf	101,c	;volatile
  4892                           
  4893                           ;rxtx.c: 9: SPBRGH1=0x04;
  4894   002390  0E04               	movlw	4
  4895   002392  6ED4               	movwf	212,c	;volatile
  4896                           
  4897                           ;rxtx.c: 10: SPBRG1=0xE1;
  4898   002394  0EE1               	movlw	225
  4899   002396  6EAF               	movwf	175,c	;volatile
  4900                           
  4901                           ;rxtx.c: 11: TXSTA1=0x04;
  4902   002398  0E04               	movlw	4
  4903   00239A  6EAC               	movwf	172,c	;volatile
  4904                           
  4905                           ;rxtx.c: 12: RCSTA1=0x80;
  4906   00239C  0E80               	movlw	128
  4907   00239E  6EAB               	movwf	171,c	;volatile
  4908                           
  4909                           ;rxtx.c: 13: TXSTA1=0x24;
  4910   0023A0  0E24               	movlw	36
  4911   0023A2  6EAC               	movwf	172,c	;volatile
  4912                           
  4913                           ;rxtx.c: 14: RCSTA1=0x90;
  4914   0023A4  0E90               	movlw	144
  4915   0023A6  6EAB               	movwf	171,c	;volatile
  4916   0023A8  0012               	return		;funcret
  4917   0023AA                     __end_of_init_rxtx:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function _draw_square *****************
  4921 ;; Defined at:
  4922 ;;		line 325 in file "afficheur.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  x1              1    wreg     unsigned char 
  4925 ;;  y1              1   20[COMRAM] unsigned char 
  4926 ;;  x2              1   21[COMRAM] unsigned char 
  4927 ;;  y2              1   22[COMRAM] unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  x1              1   23[COMRAM] unsigned char 
  4930 ;;  y               1   25[COMRAM] unsigned char 
  4931 ;;  x               1   24[COMRAM] unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;                  1    wreg      void 
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4941 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;Total ram usage:        6 bytes
  4946 ;; Hardware stack levels used: 1
  4947 ;; Hardware stack levels required when called: 4
  4948 ;; This function calls:
  4949 ;;		_plot1
  4950 ;; This function is called by:
  4951 ;;		_tache1
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text21
  4956   002104                     __ptext21:
  4957                           	callstack 0
  4958   002104                     _draw_square:
  4959                           	callstack 23
  4960                           
  4961                           ;incstack = 0
  4962                           ;draw_square@x1 stored from wreg
  4963   002104  6E18               	movwf	draw_square@x1^0,c
  4964                           
  4965                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4966   002106  C018  F019         	movff	draw_square@x1,draw_square@x
  4967   00210A  D00B               	goto	i2l4449
  4968   00210C                     i2l4445:
  4969                           
  4970                           ;afficheur.c: 330: plot1(x, y1);
  4971   00210C  C015  F00F         	movff	draw_square@y1,plot1@y
  4972   002110  5019               	movf	draw_square@x^0,w,c
  4973   002112  ECB3  F00D         	call	_plot1
  4974                           
  4975                           ;afficheur.c: 331: plot1(x, y2);
  4976   002116  C017  F00F         	movff	draw_square@y2,plot1@y
  4977   00211A  5019               	movf	draw_square@x^0,w,c
  4978   00211C  ECB3  F00D         	call	_plot1
  4979   002120  2A19               	incf	draw_square@x^0,f,c
  4980   002122                     i2l4449:
  4981   002122  5019               	movf	draw_square@x^0,w,c
  4982   002124  5C16               	subwf	draw_square@x2^0,w,c
  4983   002126  B0D8               	btfsc	status,0,c
  4984   002128  D7F1               	goto	i2l4445
  4985                           
  4986                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4987   00212A  C015  F01A         	movff	draw_square@y1,draw_square@y
  4988   00212E  D00B               	goto	i2l4455
  4989   002130                     i2l4451:
  4990                           
  4991                           ;afficheur.c: 336: plot1(x1, y);
  4992   002130  C01A  F00F         	movff	draw_square@y,plot1@y
  4993   002134  5018               	movf	draw_square@x1^0,w,c
  4994   002136  ECB3  F00D         	call	_plot1
  4995                           
  4996                           ;afficheur.c: 337: plot1(x2, y);
  4997   00213A  C01A  F00F         	movff	draw_square@y,plot1@y
  4998   00213E  5016               	movf	draw_square@x2^0,w,c
  4999   002140  ECB3  F00D         	call	_plot1
  5000   002144  2A1A               	incf	draw_square@y^0,f,c
  5001   002146                     i2l4455:
  5002   002146  501A               	movf	draw_square@y^0,w,c
  5003   002148  5C17               	subwf	draw_square@y2^0,w,c
  5004   00214A  A0D8               	btfss	status,0,c
  5005   00214C  0012               	return	
  5006   00214E  D7F0               	goto	i2l4451
  5007   002150                     __end_of_draw_square:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function _plot1 *****************
  5011 ;; Defined at:
  5012 ;;		line 390 in file "afficheur.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  x               1    wreg     unsigned char 
  5015 ;;  y               1   14[COMRAM] unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  x               1   19[COMRAM] unsigned char 
  5018 ;;  add             2   17[COMRAM] unsigned int 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5028 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;Total ram usage:        6 bytes
  5033 ;; Hardware stack levels used: 1
  5034 ;; Hardware stack levels required when called: 3
  5035 ;; This function calls:
  5036 ;;		___awdiv
  5037 ;;		___awmod
  5038 ;;		_command
  5039 ;;		_d2command
  5040 ;; This function is called by:
  5041 ;;		_tache1
  5042 ;;		_draw_square
  5043 ;;		_draw_filled_square
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text22
  5048   001B66                     __ptext22:
  5049                           	callstack 0
  5050   001B66                     _plot1:
  5051                           	callstack 24
  5052                           
  5053                           ;incstack = 0
  5054                           ;plot1@x stored from wreg
  5055   001B66  6E14               	movwf	plot1@x^0,c
  5056                           
  5057                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  5058   001B68  C014  F007         	movff	plot1@x,___awdiv@dividend
  5059   001B6C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5060   001B6E  0E00               	movlw	0
  5061   001B70  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5062   001B72  0E06               	movlw	6
  5063   001B74  6E09               	movwf	___awdiv@divisor^0,c
  5064   001B76  EC34  F00F         	call	___awdiv	;wreg free
  5065   001B7A  500F               	movf	plot1@y^0,w,c
  5066   001B7C  0D28               	mullw	40
  5067   001B7E  CFF3 F010          	movff	prodl,??_plot1
  5068   001B82  CFF4 F011          	movff	prodh,??_plot1+1
  5069   001B86  5007               	movf	?___awdiv^0,w,c
  5070   001B88  2410               	addwf	??_plot1^0,w,c
  5071   001B8A  6E12               	movwf	plot1@add^0,c
  5072   001B8C  5008               	movf	(?___awdiv+1)^0,w,c
  5073   001B8E  2011               	addwfc	(??_plot1+1)^0,w,c
  5074   001B90  6E13               	movwf	(plot1@add+1)^0,c
  5075                           
  5076                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  5077   001B92  5013               	movf	(plot1@add+1)^0,w,c
  5078   001B94  6E05               	movwf	d2command@d2^0,c
  5079   001B96  0E24               	movlw	36
  5080   001B98  6E06               	movwf	d2command@cmd^0,c
  5081   001B9A  5012               	movf	plot1@add^0,w,c
  5082   001B9C  EC5A  F010         	call	_d2command
  5083                           
  5084                           ;afficheur.c: 397: switch(x%6)
  5085   001BA0  D018               	goto	i2l4369
  5086   001BA2                     i2l4355:
  5087   001BA2  0EFD               	movlw	253
  5088   001BA4  EC03  F012         	call	_command
  5089   001BA8  0012               	return	
  5090   001BAA                     i2l4357:
  5091   001BAA  0EFC               	movlw	252
  5092   001BAC  EC03  F012         	call	_command
  5093   001BB0  0012               	return	
  5094   001BB2                     i2l4359:
  5095   001BB2  0EFB               	movlw	251
  5096   001BB4  EC03  F012         	call	_command
  5097   001BB8  0012               	return	
  5098   001BBA                     i2l4361:
  5099   001BBA  0EFA               	movlw	250
  5100   001BBC  EC03  F012         	call	_command
  5101   001BC0  0012               	return	
  5102   001BC2                     i2l4363:
  5103   001BC2  0EF9               	movlw	249
  5104   001BC4  EC03  F012         	call	_command
  5105   001BC8  0012               	return	
  5106   001BCA                     i2l4365:
  5107   001BCA  0EF8               	movlw	248
  5108   001BCC  EC03  F012         	call	_command
  5109   001BD0  0012               	return	
  5110   001BD2                     i2l4369:
  5111   001BD2  C014  F001         	movff	plot1@x,___awmod@dividend
  5112   001BD6  6A02               	clrf	(___awmod@dividend+1)^0,c
  5113   001BD8  0E00               	movlw	0
  5114   001BDA  6E04               	movwf	(___awmod@divisor+1)^0,c
  5115   001BDC  0E06               	movlw	6
  5116   001BDE  6E03               	movwf	___awmod@divisor^0,c
  5117   001BE0  EC76  F00F         	call	___awmod	;wreg free
  5118                           
  5119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5120                           ; Switch size 1, requested type "simple"
  5121                           ; Number of cases is 1, Range of values is 0 to 0
  5122                           ; switch strategies available:
  5123                           ; Name         Instructions Cycles
  5124                           ; simple_byte            4     3 (average)
  5125                           ;	Chosen strategy is simple_byte
  5126   001BE4  5002               	movf	(?___awmod+1)^0,w,c
  5127   001BE6  0A00               	xorlw	0	; case 0
  5128   001BE8  A4D8               	btfss	status,2,c
  5129   001BEA  0012               	return	
  5130                           
  5131                           ; Switch size 1, requested type "simple"
  5132                           ; Number of cases is 6, Range of values is 0 to 5
  5133                           ; switch strategies available:
  5134                           ; Name         Instructions Cycles
  5135                           ; simple_byte           19    10 (average)
  5136                           ;	Chosen strategy is simple_byte
  5137   001BEC  5001               	movf	?___awmod^0,w,c
  5138   001BEE  0A00               	xorlw	0	; case 0
  5139   001BF0  B4D8               	btfsc	status,2,c
  5140   001BF2  D7D7               	goto	i2l4355
  5141   001BF4  0A01               	xorlw	1	; case 1
  5142   001BF6  B4D8               	btfsc	status,2,c
  5143   001BF8  D7D8               	goto	i2l4357
  5144   001BFA  0A03               	xorlw	3	; case 2
  5145   001BFC  B4D8               	btfsc	status,2,c
  5146   001BFE  D7D9               	goto	i2l4359
  5147   001C00  0A01               	xorlw	1	; case 3
  5148   001C02  B4D8               	btfsc	status,2,c
  5149   001C04  D7DA               	goto	i2l4361
  5150   001C06  0A07               	xorlw	7	; case 4
  5151   001C08  B4D8               	btfsc	status,2,c
  5152   001C0A  D7DB               	goto	i2l4363
  5153   001C0C  0A01               	xorlw	1	; case 5
  5154   001C0E  A4D8               	btfss	status,2,c
  5155   001C10  0012               	return	
  5156   001C12  D7DB               	goto	i2l4365
  5157   001C14                     __end_of_plot1:
  5158                           	callstack 0
  5159                           
  5160 ;; *************** function _command *****************
  5161 ;; Defined at:
  5162 ;;		line 90 in file "afficheur.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  cmd             1    wreg     unsigned char 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  cmd             1    4[COMRAM] unsigned char 
  5167 ;;  res             1    0        unsigned char 
  5168 ;; Return value:  Size  Location     Type
  5169 ;;                  1    wreg      unsigned char 
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0, cstack
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;Total ram usage:        1 bytes
  5182 ;; Hardware stack levels used: 1
  5183 ;; Hardware stack levels required when called: 2
  5184 ;; This function calls:
  5185 ;;		_delai_us_char
  5186 ;;		_wait_status_ok
  5187 ;;		_write_c_aff
  5188 ;; This function is called by:
  5189 ;;		_initialisation_afficheur
  5190 ;;		_plot1
  5191 ;;		_plot0
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           	psect	text23
  5196   002406                     __ptext23:
  5197                           	callstack 0
  5198   002406                     _command:
  5199                           	callstack 24
  5200                           
  5201                           ;incstack = 0
  5202                           ;command@cmd stored from wreg
  5203   002406  6E05               	movwf	command@cmd^0,c
  5204                           
  5205                           ;afficheur.c: 96: if(wait_status_ok()==1)
  5206   002408  EC31  F010         	call	_wait_status_ok	;wreg free
  5207   00240C  06E8               	decf	wreg,f,c
  5208   00240E  A4D8               	btfss	status,2,c
  5209   002410  0012               	return	
  5210                           
  5211                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  5212   002412  0E0C               	movlw	12
  5213   002414  ECD5  F011         	call	_delai_us_char
  5214                           
  5215                           ;afficheur.c: 99: write_c_aff(cmd);
  5216   002418  5005               	movf	command@cmd^0,w,c
  5217   00241A  EC1D  F012         	call	_write_c_aff
  5218   00241E  0012               	return		;funcret
  5219   002420                     __end_of_command:
  5220                           	callstack 0
  5221                           
  5222 ;; *************** function ___awmod *****************
  5223 ;; Defined at:
  5224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  dividend        2    0[COMRAM] int 
  5227 ;;  divisor         2    2[COMRAM] int 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  sign            1    5[COMRAM] unsigned char 
  5230 ;;  counter         1    4[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  2    0[COMRAM] int 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;Total ram usage:        6 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_plot1
  5250 ;;		_plot0
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text24
  5255   001EEC                     __ptext24:
  5256                           	callstack 0
  5257   001EEC                     ___awmod:
  5258                           	callstack 26
  5259                           
  5260                           ;incstack = 0
  5261   001EEC  0E00               	movlw	0
  5262   001EEE  6E06               	movwf	___awmod@sign^0,c
  5263   001EF0  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5264   001EF2  D006               	goto	i2l4287
  5265   001EF4  6C01               	negf	___awmod@dividend^0,c
  5266   001EF6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5267   001EF8  B0D8               	btfsc	status,0,c
  5268   001EFA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5269   001EFC  0E01               	movlw	1
  5270   001EFE  6E06               	movwf	___awmod@sign^0,c
  5271   001F00                     i2l4287:
  5272   001F00  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5273   001F02  D004               	goto	i2l4291
  5274   001F04  6C03               	negf	___awmod@divisor^0,c
  5275   001F06  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5276   001F08  B0D8               	btfsc	status,0,c
  5277   001F0A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5278   001F0C                     i2l4291:
  5279   001F0C  5003               	movf	___awmod@divisor^0,w,c
  5280   001F0E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5281   001F10  B4D8               	btfsc	status,2,c
  5282   001F12  D018               	goto	i2l4307
  5283   001F14  0E01               	movlw	1
  5284   001F16  6E05               	movwf	___awmod@counter^0,c
  5285   001F18  D004               	goto	i2l4297
  5286   001F1A                     i2l4295:
  5287   001F1A  90D8               	bcf	status,0,c
  5288   001F1C  3603               	rlcf	___awmod@divisor^0,f,c
  5289   001F1E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5290   001F20  2A05               	incf	___awmod@counter^0,f,c
  5291   001F22                     i2l4297:
  5292   001F22  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5293   001F24  D7FA               	goto	i2l4295
  5294   001F26                     i2u222_40:
  5295   001F26  5003               	movf	___awmod@divisor^0,w,c
  5296   001F28  5C01               	subwf	___awmod@dividend^0,w,c
  5297   001F2A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5298   001F2C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5299   001F2E  A0D8               	btfss	status,0,c
  5300   001F30  D004               	goto	i2l4303
  5301   001F32  5003               	movf	___awmod@divisor^0,w,c
  5302   001F34  5E01               	subwf	___awmod@dividend^0,f,c
  5303   001F36  5004               	movf	(___awmod@divisor+1)^0,w,c
  5304   001F38  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5305   001F3A                     i2l4303:
  5306   001F3A  90D8               	bcf	status,0,c
  5307   001F3C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5308   001F3E  3203               	rrcf	___awmod@divisor^0,f,c
  5309   001F40  2E05               	decfsz	___awmod@counter^0,f,c
  5310   001F42  D7F1               	goto	i2u222_40
  5311   001F44                     i2l4307:
  5312   001F44  5006               	movf	___awmod@sign^0,w,c
  5313   001F46  B4D8               	btfsc	status,2,c
  5314   001F48  D004               	goto	i2l4311
  5315   001F4A  6C01               	negf	___awmod@dividend^0,c
  5316   001F4C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5317   001F4E  B0D8               	btfsc	status,0,c
  5318   001F50  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5319   001F52                     i2l4311:
  5320   001F52  C001  F001         	movff	___awmod@dividend,?___awmod
  5321   001F56  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5322   001F5A  0012               	return		;funcret
  5323   001F5C                     __end_of___awmod:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function _draw_hex8 *****************
  5327 ;; Defined at:
  5328 ;;		line 252 in file "afficheur.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  octet           1    wreg     unsigned char 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  octet           1    7[COMRAM] unsigned char 
  5333 ;;  c               1    8[COMRAM] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0, cstack
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;Total ram usage:        2 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 3
  5350 ;; This function calls:
  5351 ;;		_d1command
  5352 ;; This function is called by:
  5353 ;;		_tache1
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text25
  5358   001F5C                     __ptext25:
  5359                           	callstack 0
  5360   001F5C                     _draw_hex8:
  5361                           	callstack 24
  5362                           
  5363                           ;incstack = 0
  5364                           ;draw_hex8@octet stored from wreg
  5365   001F5C  6E08               	movwf	draw_hex8@octet^0,c
  5366                           
  5367                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5368   001F5E  3808               	swapf	draw_hex8@octet^0,w,c
  5369   001F60  0B0F               	andlw	15
  5370   001F62  6E09               	movwf	draw_hex8@c^0,c
  5371                           
  5372                           ;afficheur.c: 257: if (c>9)
  5373   001F64  0E09               	movlw	9
  5374   001F66  6409               	cpfsgt	draw_hex8@c^0,c
  5375   001F68  D003               	goto	i2l4531
  5376                           
  5377                           ;afficheur.c: 258: c=c+0x17;
  5378   001F6A  5009               	movf	draw_hex8@c^0,w,c
  5379   001F6C  0F17               	addlw	23
  5380   001F6E  D002               	goto	L5
  5381   001F70                     i2l4531:
  5382                           
  5383                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5384   001F70  5009               	movf	draw_hex8@c^0,w,c
  5385   001F72  0F10               	addlw	16
  5386   001F74                     L5:
  5387   001F74  6E09               	movwf	draw_hex8@c^0,c
  5388   001F76  D001               	goto	i2l4533
  5389   001F78                     i2l1355:
  5390                           
  5391                           ;afficheur.c: 262: __nop();
  5392   001F78  F000               	nop	
  5393   001F7A                     i2l4533:
  5394   001F7A  0EC0               	movlw	192
  5395   001F7C  6E05               	movwf	d1command@cmd^0,c
  5396   001F7E  5009               	movf	draw_hex8@c^0,w,c
  5397   001F80  ECED  F010         	call	_d1command
  5398   001F84  0900               	iorlw	0
  5399   001F86  B4D8               	btfsc	status,2,c
  5400   001F88  D7F7               	goto	i2l1355
  5401                           
  5402                           ;afficheur.c: 264: c=(octet&0x0F);
  5403   001F8A  5008               	movf	draw_hex8@octet^0,w,c
  5404   001F8C  0B0F               	andlw	15
  5405   001F8E  6E09               	movwf	draw_hex8@c^0,c
  5406                           
  5407                           ;afficheur.c: 265: if (c>9)
  5408   001F90  0E09               	movlw	9
  5409   001F92  6409               	cpfsgt	draw_hex8@c^0,c
  5410   001F94  D003               	goto	i2l4539
  5411                           
  5412                           ;afficheur.c: 266: c=c+0x17;
  5413   001F96  5009               	movf	draw_hex8@c^0,w,c
  5414   001F98  0F17               	addlw	23
  5415   001F9A  D002               	goto	L6
  5416   001F9C                     i2l4539:
  5417                           
  5418                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5419   001F9C  5009               	movf	draw_hex8@c^0,w,c
  5420   001F9E  0F10               	addlw	16
  5421   001FA0                     L6:
  5422   001FA0  6E09               	movwf	draw_hex8@c^0,c
  5423   001FA2  D001               	goto	i2l4541
  5424   001FA4                     i2l1360:
  5425                           
  5426                           ;afficheur.c: 270: __nop();
  5427   001FA4  F000               	nop	
  5428   001FA6                     i2l4541:
  5429   001FA6  0EC0               	movlw	192
  5430   001FA8  6E05               	movwf	d1command@cmd^0,c
  5431   001FAA  5009               	movf	draw_hex8@c^0,w,c
  5432   001FAC  ECED  F010         	call	_d1command
  5433   001FB0  0900               	iorlw	0
  5434   001FB2  A4D8               	btfss	status,2,c
  5435   001FB4  0012               	return	
  5436   001FB6  D7F6               	goto	i2l1360
  5437   001FB8                     __end_of_draw_hex8:
  5438                           	callstack 0
  5439                           
  5440 ;; *************** function _draw_dec8 *****************
  5441 ;; Defined at:
  5442 ;;		line 274 in file "afficheur.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  octet           1    wreg     unsigned char 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  octet           1   16[COMRAM] unsigned char 
  5447 ;;  c               1   19[COMRAM] unsigned char 
  5448 ;;  dix             1   18[COMRAM] unsigned char 
  5449 ;;  cent            1   17[COMRAM] unsigned char 
  5450 ;;  unit            1   15[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;Total ram usage:        6 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; Hardware stack levels required when called: 3
  5467 ;; This function calls:
  5468 ;;		___awdiv
  5469 ;;		_d1command
  5470 ;; This function is called by:
  5471 ;;		_tache1
  5472 ;; This function uses a non-reentrant model
  5473 ;;
  5474                           
  5475                           	psect	text26
  5476   001CB6                     __ptext26:
  5477                           	callstack 0
  5478   001CB6                     _draw_dec8:
  5479                           	callstack 24
  5480                           
  5481                           ;incstack = 0
  5482                           ;draw_dec8@octet stored from wreg
  5483   001CB6  6E11               	movwf	draw_dec8@octet^0,c
  5484                           
  5485                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5486   001CB8  C011  F007         	movff	draw_dec8@octet,___awdiv@dividend
  5487   001CBC  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5488   001CBE  0E00               	movlw	0
  5489   001CC0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5490   001CC2  0E64               	movlw	100
  5491   001CC4  6E09               	movwf	___awdiv@divisor^0,c
  5492   001CC6  EC34  F00F         	call	___awdiv	;wreg free
  5493   001CCA  5007               	movf	?___awdiv^0,w,c
  5494   001CCC  6E12               	movwf	draw_dec8@cent^0,c
  5495                           
  5496                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5497   001CCE  5012               	movf	draw_dec8@cent^0,w,c
  5498   001CD0  0D9C               	mullw	156
  5499   001CD2  50F3               	movf	243,w,c
  5500   001CD4  2411               	addwf	draw_dec8@octet^0,w,c
  5501   001CD6  6E13               	movwf	draw_dec8@dix^0,c
  5502                           
  5503                           ;afficheur.c: 279: dix = dix/10;
  5504   001CD8  C013  F007         	movff	draw_dec8@dix,___awdiv@dividend
  5505   001CDC  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5506   001CDE  0E00               	movlw	0
  5507   001CE0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5508   001CE2  0E0A               	movlw	10
  5509   001CE4  6E09               	movwf	___awdiv@divisor^0,c
  5510   001CE6  EC34  F00F         	call	___awdiv	;wreg free
  5511   001CEA  5007               	movf	?___awdiv^0,w,c
  5512   001CEC  6E13               	movwf	draw_dec8@dix^0,c
  5513                           
  5514                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5515   001CEE  5012               	movf	draw_dec8@cent^0,w,c
  5516   001CF0  0D9C               	mullw	156
  5517   001CF2  CFF3 F00F          	movff	prodl,??_draw_dec8
  5518   001CF6  5013               	movf	draw_dec8@dix^0,w,c
  5519   001CF8  0DF6               	mullw	246
  5520   001CFA  50F3               	movf	243,w,c
  5521   001CFC  240F               	addwf	??_draw_dec8^0,w,c
  5522   001CFE  2411               	addwf	draw_dec8@octet^0,w,c
  5523   001D00  6E10               	movwf	draw_dec8@unit^0,c
  5524                           
  5525                           ;afficheur.c: 282: c=cent+0x10;
  5526   001D02  5012               	movf	draw_dec8@cent^0,w,c
  5527   001D04  0F10               	addlw	16
  5528   001D06  6E14               	movwf	draw_dec8@c^0,c
  5529                           
  5530                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5531   001D08  D001               	goto	i2l4481
  5532   001D0A                     i2l1366:
  5533                           
  5534                           ;afficheur.c: 284: __nop();
  5535   001D0A  F000               	nop	
  5536   001D0C                     i2l4481:
  5537   001D0C  0EC0               	movlw	192
  5538   001D0E  6E05               	movwf	d1command@cmd^0,c
  5539   001D10  5014               	movf	draw_dec8@c^0,w,c
  5540   001D12  ECED  F010         	call	_d1command
  5541   001D16  0900               	iorlw	0
  5542   001D18  B4D8               	btfsc	status,2,c
  5543   001D1A  D7F7               	goto	i2l1366
  5544                           
  5545                           ;afficheur.c: 286: c=dix+0x10;
  5546   001D1C  5013               	movf	draw_dec8@dix^0,w,c
  5547   001D1E  0F10               	addlw	16
  5548   001D20  6E14               	movwf	draw_dec8@c^0,c
  5549                           
  5550                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5551   001D22  D001               	goto	i2l4485
  5552   001D24                     i2l1369:
  5553                           
  5554                           ;afficheur.c: 288: __nop();
  5555   001D24  F000               	nop	
  5556   001D26                     i2l4485:
  5557   001D26  0EC0               	movlw	192
  5558   001D28  6E05               	movwf	d1command@cmd^0,c
  5559   001D2A  5014               	movf	draw_dec8@c^0,w,c
  5560   001D2C  ECED  F010         	call	_d1command
  5561   001D30  0900               	iorlw	0
  5562   001D32  B4D8               	btfsc	status,2,c
  5563   001D34  D7F7               	goto	i2l1369
  5564                           
  5565                           ;afficheur.c: 290: c=unit+0x10;
  5566   001D36  5010               	movf	draw_dec8@unit^0,w,c
  5567   001D38  0F10               	addlw	16
  5568   001D3A  6E14               	movwf	draw_dec8@c^0,c
  5569                           
  5570                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5571   001D3C  D001               	goto	i2l4489
  5572   001D3E                     i2l1372:
  5573                           
  5574                           ;afficheur.c: 292: __nop();
  5575   001D3E  F000               	nop	
  5576   001D40                     i2l4489:
  5577   001D40  0EC0               	movlw	192
  5578   001D42  6E05               	movwf	d1command@cmd^0,c
  5579   001D44  5014               	movf	draw_dec8@c^0,w,c
  5580   001D46  ECED  F010         	call	_d1command
  5581   001D4A  0900               	iorlw	0
  5582   001D4C  A4D8               	btfss	status,2,c
  5583   001D4E  0012               	return	
  5584   001D50  D7F6               	goto	i2l1372
  5585   001D52                     __end_of_draw_dec8:
  5586                           	callstack 0
  5587                           
  5588 ;; *************** function _clear_text *****************
  5589 ;; Defined at:
  5590 ;;		line 307 in file "afficheur.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;		None
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  add             2    8[COMRAM] unsigned int 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      void 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;Total ram usage:        2 bytes
  5609 ;; Hardware stack levels used: 1
  5610 ;; Hardware stack levels required when called: 3
  5611 ;; This function calls:
  5612 ;;		_d1command
  5613 ;;		_d2command
  5614 ;; This function is called by:
  5615 ;;		_tache1
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text27
  5620   0022B4                     __ptext27:
  5621                           	callstack 0
  5622   0022B4                     _clear_text:
  5623                           	callstack 24
  5624                           
  5625                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5626                           
  5627                           ;incstack = 0
  5628   0022B4  0E00               	movlw	0
  5629   0022B6  6E05               	movwf	d2command@d2^0,c
  5630   0022B8  0E24               	movlw	36
  5631   0022BA  6E06               	movwf	d2command@cmd^0,c
  5632   0022BC  0E00               	movlw	0
  5633   0022BE  EC5A  F010         	call	_d2command
  5634                           
  5635                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5636   0022C2  0E00               	movlw	0
  5637   0022C4  6E0A               	movwf	(clear_text@add+1)^0,c
  5638   0022C6  0E00               	movlw	0
  5639   0022C8  6E09               	movwf	clear_text@add^0,c
  5640   0022CA                     i2l4423:
  5641                           
  5642                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5643   0022CA  0EC0               	movlw	192
  5644   0022CC  6E05               	movwf	d1command@cmd^0,c
  5645   0022CE  0E00               	movlw	0
  5646   0022D0  ECED  F010         	call	_d1command
  5647   0022D4  4A09               	infsnz	clear_text@add^0,f,c
  5648   0022D6  2A0A               	incf	(clear_text@add+1)^0,f,c
  5649   0022D8  0E80               	movlw	128
  5650   0022DA  180A               	xorwf	(clear_text@add+1)^0,w,c
  5651   0022DC  1009               	iorwf	clear_text@add^0,w,c
  5652   0022DE  B4D8               	btfsc	status,2,c
  5653   0022E0  0012               	return	
  5654   0022E2  D7F3               	goto	i2l4423
  5655   0022E4                     __end_of_clear_text:
  5656                           	callstack 0
  5657                           
  5658 ;; *************** function _clear_line *****************
  5659 ;; Defined at:
  5660 ;;		line 318 in file "afficheur.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  line            1    wreg     unsigned char 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  line            1   14[COMRAM] unsigned char 
  5665 ;;  column          1   15[COMRAM] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  1    wreg      void 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;Total ram usage:        2 bytes
  5680 ;; Hardware stack levels used: 1
  5681 ;; Hardware stack levels required when called: 4
  5682 ;; This function calls:
  5683 ;;		_draw_char
  5684 ;;		_goto_lico
  5685 ;; This function is called by:
  5686 ;;		_tache1
  5687 ;; This function uses a non-reentrant model
  5688 ;;
  5689                           
  5690                           	psect	text28
  5691   0023CC                     __ptext28:
  5692                           	callstack 0
  5693   0023CC                     _clear_line:
  5694                           	callstack 23
  5695                           
  5696                           ;incstack = 0
  5697                           ;clear_line@line stored from wreg
  5698   0023CC  6E0F               	movwf	clear_line@line^0,c
  5699                           
  5700                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5701   0023CE  0E00               	movlw	0
  5702   0023D0  6E10               	movwf	clear_line@column^0,c
  5703   0023D2                     i2l4553:
  5704                           
  5705                           ;afficheur.c: 321: goto_lico(line, column);
  5706   0023D2  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5707   0023D6  500F               	movf	clear_line@line^0,w,c
  5708   0023D8  ECDC  F00F         	call	_goto_lico
  5709                           
  5710                           ;afficheur.c: 322: draw_char(' ');
  5711   0023DC  0E20               	movlw	32
  5712   0023DE  EC41  F011         	call	_draw_char
  5713   0023E2  2A10               	incf	clear_line@column^0,f,c
  5714   0023E4  0E27               	movlw	39
  5715   0023E6  6410               	cpfsgt	clear_line@column^0,c
  5716   0023E8  D7F4               	goto	i2l4553
  5717   0023EA  0012               	return	
  5718   0023EC                     __end_of_clear_line:
  5719                           	callstack 0
  5720                           
  5721 ;; *************** function _draw_char *****************
  5722 ;; Defined at:
  5723 ;;		line 228 in file "afficheur.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  dccar           1    wreg     unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  dccar           1    7[COMRAM] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5741 ;;Total ram usage:        1 bytes
  5742 ;; Hardware stack levels used: 1
  5743 ;; Hardware stack levels required when called: 3
  5744 ;; This function calls:
  5745 ;;		_d1command
  5746 ;; This function is called by:
  5747 ;;		_tache1
  5748 ;;		_clear_line
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text29
  5753   002282                     __ptext29:
  5754                           	callstack 0
  5755   002282                     _draw_char:
  5756                           	callstack 24
  5757                           
  5758                           ;incstack = 0
  5759                           ;draw_char@dccar stored from wreg
  5760   002282  6E08               	movwf	draw_char@dccar^0,c
  5761                           
  5762                           ;afficheur.c: 230: if (dccar<32)
  5763   002284  0E20               	movlw	32
  5764   002286  6008               	cpfslt	draw_char@dccar^0,c
  5765   002288  D002               	goto	i2l4333
  5766                           
  5767                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5768   00228A  0E3F               	movlw	63
  5769   00228C  6E08               	movwf	draw_char@dccar^0,c
  5770   00228E                     i2l4333:
  5771                           
  5772                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5773   00228E  0E9F               	movlw	159
  5774   002290  6408               	cpfsgt	draw_char@dccar^0,c
  5775   002292  D002               	goto	i2l4337
  5776                           
  5777                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5778   002294  0E3F               	movlw	63
  5779   002296  6E08               	movwf	draw_char@dccar^0,c
  5780   002298                     i2l4337:
  5781                           
  5782                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5783   002298  5008               	movf	draw_char@dccar^0,w,c
  5784   00229A  0FE0               	addlw	224
  5785   00229C  6E08               	movwf	draw_char@dccar^0,c
  5786                           
  5787                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5788   00229E  D001               	goto	i2l4339
  5789   0022A0                     i2l1336:
  5790   0022A0  F000               	nop	
  5791   0022A2                     i2l4339:
  5792   0022A2  0EC0               	movlw	192
  5793   0022A4  6E05               	movwf	d1command@cmd^0,c
  5794   0022A6  5008               	movf	draw_char@dccar^0,w,c
  5795   0022A8  ECED  F010         	call	_d1command
  5796   0022AC  0900               	iorlw	0
  5797   0022AE  A4D8               	btfss	status,2,c
  5798   0022B0  0012               	return	
  5799   0022B2  D7F6               	goto	i2l1336
  5800   0022B4                     __end_of_draw_char:
  5801                           	callstack 0
  5802                           
  5803 ;; *************** function _clear_graphics *****************
  5804 ;; Defined at:
  5805 ;;		line 368 in file "afficheur.c"
  5806 ;; Parameters:    Size  Location     Type
  5807 ;;		None
  5808 ;; Auto vars:     Size  Location     Type
  5809 ;;  add             2    8[COMRAM] unsigned int 
  5810 ;; Return value:  Size  Location     Type
  5811 ;;                  1    wreg      void 
  5812 ;; Registers used:
  5813 ;;		wreg, status,2, status,0, cstack
  5814 ;; Tracked objects:
  5815 ;;		On entry : 0/0
  5816 ;;		On exit  : 0/0
  5817 ;;		Unchanged: 0/0
  5818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;Total ram usage:        2 bytes
  5824 ;; Hardware stack levels used: 1
  5825 ;; Hardware stack levels required when called: 3
  5826 ;; This function calls:
  5827 ;;		_d1command
  5828 ;;		_d2command
  5829 ;; This function is called by:
  5830 ;;		_tache1
  5831 ;; This function uses a non-reentrant model
  5832 ;;
  5833                           
  5834                           	psect	text30
  5835   0022E4                     __ptext30:
  5836                           	callstack 0
  5837   0022E4                     _clear_graphics:
  5838                           	callstack 24
  5839                           
  5840                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5841                           
  5842                           ;incstack = 0
  5843   0022E4  0E80               	movlw	128
  5844   0022E6  6E05               	movwf	d2command@d2^0,c
  5845   0022E8  0E24               	movlw	36
  5846   0022EA  6E06               	movwf	d2command@cmd^0,c
  5847   0022EC  0E00               	movlw	0
  5848   0022EE  EC5A  F010         	call	_d2command
  5849                           
  5850                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5851   0022F2  0E80               	movlw	128
  5852   0022F4  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5853   0022F6  0E00               	movlw	0
  5854   0022F8  6E09               	movwf	clear_graphics@add^0,c
  5855   0022FA                     i2l4437:
  5856                           
  5857                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5858   0022FA  0EC0               	movlw	192
  5859   0022FC  6E05               	movwf	d1command@cmd^0,c
  5860   0022FE  0E00               	movlw	0
  5861   002300  ECED  F010         	call	_d1command
  5862   002304  4A09               	infsnz	clear_graphics@add^0,f,c
  5863   002306  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5864   002308  0EF8               	movlw	248
  5865   00230A  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5866   00230C  1009               	iorwf	clear_graphics@add^0,w,c
  5867   00230E  B4D8               	btfsc	status,2,c
  5868   002310  0012               	return	
  5869   002312  D7F3               	goto	i2l4437
  5870   002314                     __end_of_clear_graphics:
  5871                           	callstack 0
  5872                           
  5873 ;; *************** function _charger *****************
  5874 ;; Defined at:
  5875 ;;		line 432 in file "afficheur.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used: 1
  5895 ;; Hardware stack levels required when called: 4
  5896 ;; This function calls:
  5897 ;;		_draw_string
  5898 ;;		_goto_lico
  5899 ;; This function is called by:
  5900 ;;		_tache1
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           	psect	text31
  5905   00249C                     __ptext31:
  5906                           	callstack 0
  5907   00249C                     _charger:
  5908                           	callstack 23
  5909                           
  5910                           ;afficheur.c: 434: goto_lico(14,0);
  5911                           
  5912                           ;incstack = 0
  5913   00249C  0E00               	movlw	0
  5914   00249E  6E09               	movwf	goto_lico@colonne^0,c
  5915   0024A0  0E0E               	movlw	14
  5916   0024A2  ECDC  F00F         	call	_goto_lico
  5917                           
  5918                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5919   0024A6  0E01               	movlw	low STR_24
  5920   0024A8  6E08               	movwf	draw_string@tableau^0,c
  5921   0024AA  0E10               	movlw	high STR_24
  5922   0024AC  6E09               	movwf	(draw_string@tableau+1)^0,c
  5923   0024AE  ECA9  F00E         	call	_draw_string	;wreg free
  5924   0024B2  0012               	return		;funcret
  5925   0024B4                     __end_of_charger:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _goto_lico *****************
  5929 ;; Defined at:
  5930 ;;		line 295 in file "afficheur.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  ligne           1    wreg     unsigned char 
  5933 ;;  colonne         1    8[COMRAM] unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  ligne           1   11[COMRAM] unsigned char 
  5936 ;;  adr             2   12[COMRAM] unsigned int 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5946 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;Total ram usage:        6 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 3
  5953 ;; This function calls:
  5954 ;;		_d2command
  5955 ;; This function is called by:
  5956 ;;		_tache1
  5957 ;;		_clear_line
  5958 ;;		_charger
  5959 ;;		_vide
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text32
  5964   001FB8                     __ptext32:
  5965                           	callstack 0
  5966   001FB8                     _goto_lico:
  5967                           	callstack 23
  5968                           
  5969                           ;incstack = 0
  5970                           ;goto_lico@ligne stored from wreg
  5971   001FB8  6E0C               	movwf	goto_lico@ligne^0,c
  5972                           
  5973                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  5974   001FBA  0E7B               	movlw	123
  5975   001FBC  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5976   001FBE  0E00               	movlw	0
  5977   001FC0  6E0D               	movwf	goto_lico@adr^0,c
  5978                           
  5979                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  5980   001FC2  0E0F               	movlw	15
  5981   001FC4  640C               	cpfsgt	goto_lico@ligne^0,c
  5982   001FC6  D002               	goto	i2l4321
  5983   001FC8  0E00               	movlw	0
  5984   001FCA  6E0C               	movwf	goto_lico@ligne^0,c
  5985   001FCC                     i2l4321:
  5986                           
  5987                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  5988   001FCC  0E27               	movlw	39
  5989   001FCE  6409               	cpfsgt	goto_lico@colonne^0,c
  5990   001FD0  D002               	goto	i2l4325
  5991   001FD2  0E00               	movlw	0
  5992   001FD4  6E09               	movwf	goto_lico@colonne^0,c
  5993   001FD6                     i2l4325:
  5994                           
  5995                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  5996   001FD6  500C               	movf	goto_lico@ligne^0,w,c
  5997   001FD8  0D28               	mullw	40
  5998   001FDA  CFF3 F00A          	movff	prodl,??_goto_lico
  5999   001FDE  CFF4 F00B          	movff	prodh,??_goto_lico+1
  6000   001FE2  5009               	movf	goto_lico@colonne^0,w,c
  6001   001FE4  260A               	addwf	??_goto_lico^0,f,c
  6002   001FE6  0E00               	movlw	0
  6003   001FE8  220B               	addwfc	(??_goto_lico+1)^0,f,c
  6004   001FEA  500D               	movf	goto_lico@adr^0,w,c
  6005   001FEC  240A               	addwf	??_goto_lico^0,w,c
  6006   001FEE  6E0D               	movwf	goto_lico@adr^0,c
  6007   001FF0  500E               	movf	(goto_lico@adr+1)^0,w,c
  6008   001FF2  200B               	addwfc	(??_goto_lico+1)^0,w,c
  6009   001FF4  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6010                           
  6011                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  6012   001FF6  D001               	goto	i2l4327
  6013   001FF8                     i2l1380:
  6014                           
  6015                           ;afficheur.c: 304: __nop();
  6016   001FF8  F000               	nop	
  6017   001FFA                     i2l4327:
  6018   001FFA  500E               	movf	(goto_lico@adr+1)^0,w,c
  6019   001FFC  6E05               	movwf	d2command@d2^0,c
  6020   001FFE  0E24               	movlw	36
  6021   002000  6E06               	movwf	d2command@cmd^0,c
  6022   002002  500D               	movf	goto_lico@adr^0,w,c
  6023   002004  EC5A  F010         	call	_d2command
  6024   002008  0900               	iorlw	0
  6025   00200A  A4D8               	btfss	status,2,c
  6026   00200C  0012               	return	
  6027   00200E  D7F4               	goto	i2l1380
  6028   002010                     __end_of_goto_lico:
  6029                           	callstack 0
  6030                           
  6031 ;; *************** function _d2command *****************
  6032 ;; Defined at:
  6033 ;;		line 128 in file "afficheur.c"
  6034 ;; Parameters:    Size  Location     Type
  6035 ;;  d1              1    wreg     unsigned char 
  6036 ;;  d2              1    4[COMRAM] unsigned char 
  6037 ;;  cmd             1    5[COMRAM] unsigned char 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  d1              1    6[COMRAM] unsigned char 
  6040 ;;  res             1    7[COMRAM] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      unsigned char 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;Total ram usage:        4 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 2
  6057 ;; This function calls:
  6058 ;;		_delai_us_char
  6059 ;;		_wait_status_ok
  6060 ;;		_write_c_aff
  6061 ;;		_write_d_aff
  6062 ;; This function is called by:
  6063 ;;		_initialisation_afficheur
  6064 ;;		_goto_lico
  6065 ;;		_clear_text
  6066 ;;		_clear_graphics
  6067 ;;		_plot1
  6068 ;;		_clear_cgram
  6069 ;;		_plot0
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text33
  6074   0020B4                     __ptext33:
  6075                           	callstack 0
  6076   0020B4                     _d2command:
  6077                           	callstack 23
  6078                           
  6079                           ;incstack = 0
  6080                           ;d2command@d1 stored from wreg
  6081   0020B4  6E07               	movwf	d2command@d1^0,c
  6082                           
  6083                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6084   0020B6  0E00               	movlw	0
  6085   0020B8  6E08               	movwf	d2command@res^0,c
  6086                           
  6087                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6088   0020BA  EC31  F010         	call	_wait_status_ok	;wreg free
  6089   0020BE  06E8               	decf	wreg,f,c
  6090   0020C0  A4D8               	btfss	status,2,c
  6091   0020C2  D01E               	goto	i2l4231
  6092                           
  6093                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6094   0020C4  0E0C               	movlw	12
  6095   0020C6  ECD5  F011         	call	_delai_us_char
  6096                           
  6097                           ;afficheur.c: 137: write_d_aff(d1);
  6098   0020CA  5007               	movf	d2command@d1^0,w,c
  6099   0020CC  EC10  F012         	call	_write_d_aff
  6100                           
  6101                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6102   0020D0  EC31  F010         	call	_wait_status_ok	;wreg free
  6103   0020D4  06E8               	decf	wreg,f,c
  6104   0020D6  A4D8               	btfss	status,2,c
  6105   0020D8  D013               	goto	i2l4231
  6106                           
  6107                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6108   0020DA  0E0C               	movlw	12
  6109   0020DC  ECD5  F011         	call	_delai_us_char
  6110                           
  6111                           ;afficheur.c: 141: write_d_aff(d2);
  6112   0020E0  5005               	movf	d2command@d2^0,w,c
  6113   0020E2  EC10  F012         	call	_write_d_aff
  6114                           
  6115                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6116   0020E6  EC31  F010         	call	_wait_status_ok	;wreg free
  6117   0020EA  06E8               	decf	wreg,f,c
  6118   0020EC  A4D8               	btfss	status,2,c
  6119   0020EE  D008               	goto	i2l4231
  6120                           
  6121                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6122   0020F0  0E0C               	movlw	12
  6123   0020F2  ECD5  F011         	call	_delai_us_char
  6124                           
  6125                           ;afficheur.c: 145: write_c_aff(cmd);
  6126   0020F6  5006               	movf	d2command@cmd^0,w,c
  6127   0020F8  EC1D  F012         	call	_write_c_aff
  6128                           
  6129                           ;afficheur.c: 147: res=1;
  6130   0020FC  0E01               	movlw	1
  6131   0020FE  6E08               	movwf	d2command@res^0,c
  6132   002100                     i2l4231:
  6133                           
  6134                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6135   002100  5008               	movf	d2command@res^0,w,c
  6136   002102  0012               	return		;funcret
  6137   002104                     __end_of_d2command:
  6138                           	callstack 0
  6139                           
  6140 ;; *************** function _draw_string *****************
  6141 ;; Defined at:
  6142 ;;		line 242 in file "afficheur.c"
  6143 ;; Parameters:    Size  Location     Type
  6144 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6145 ;;		 -> STR_25(14), STR_24(29), STR_23(4), STR_22(3), 
  6146 ;;		 -> STR_21(7), STR_20(5), STR_19(12), STR_18(12), 
  6147 ;;		 -> STR_17(6), STR_16(7), STR_15(9), STR_14(21), 
  6148 ;;		 -> STR_13(7), STR_12(10), STR_11(9), STR_10(6), 
  6149 ;;		 -> STR_9(13), STR_8(11), STR_7(7), STR_6(6), 
  6150 ;;		 -> STR_5(6), STR_4(3), STR_3(3), STR_2(3), 
  6151 ;;		 -> STR_1(8), RAM(3861), 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;Total ram usage:        2 bytes
  6168 ;; Hardware stack levels used: 1
  6169 ;; Hardware stack levels required when called: 3
  6170 ;; This function calls:
  6171 ;;		_d1command
  6172 ;; This function is called by:
  6173 ;;		_tache1
  6174 ;;		_charger
  6175 ;;		_vide
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           	psect	text34
  6180   001D52                     __ptext34:
  6181                           	callstack 0
  6182   001D52                     _draw_string:
  6183                           	callstack 23
  6184                           
  6185                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6186                           
  6187                           ;incstack = 0
  6188   001D52  D01C               	goto	i2l4347
  6189   001D54                     i2l1344:
  6190                           
  6191                           ;afficheur.c: 247: __nop();
  6192   001D54  F000               	nop	
  6193   001D56                     i2l4343:
  6194   001D56  0EC0               	movlw	192
  6195   001D58  6E05               	movwf	d1command@cmd^0,c
  6196   001D5A  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6197   001D5E  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6198   001D62  0E00               	movlw	low (__smallconst shr (0+16))
  6199   001D64  6EF8               	movwf	tblptru,c
  6200   001D66  0E0F               	movlw	(high __ramtop+-1)
  6201   001D68  64F7               	cpfsgt	tblptrh,c
  6202   001D6A  D003               	bra	i2u231_47
  6203   001D6C  0008               	tblrd		*
  6204   001D6E  50F5               	movf	tablat,w,c
  6205   001D70  D005               	bra	i2u231_40
  6206   001D72                     i2u231_47:
  6207   001D72  CFF6 FFE9          	movff	tblptrl,fsr0l
  6208   001D76  CFF7 FFEA          	movff	tblptrh,fsr0h
  6209   001D7A  50EF               	movf	indf0,w,c
  6210   001D7C                     i2u231_40:
  6211   001D7C  0FE0               	addlw	224
  6212   001D7E  ECED  F010         	call	_d1command
  6213   001D82  0900               	iorlw	0
  6214   001D84  B4D8               	btfsc	status,2,c
  6215   001D86  D7E6               	goto	i2l1344
  6216                           
  6217                           ;afficheur.c: 248: tableau++;
  6218   001D88  4A08               	infsnz	draw_string@tableau^0,f,c
  6219   001D8A  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6220   001D8C                     i2l4347:
  6221   001D8C  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6222   001D90  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6223   001D94  0E00               	movlw	low (__smallconst shr (0+16))
  6224   001D96  6EF8               	movwf	tblptru,c
  6225   001D98  0E0F               	movlw	(high __ramtop+-1)
  6226   001D9A  64F7               	cpfsgt	tblptrh,c
  6227   001D9C  D003               	bra	i2u233_47
  6228   001D9E  0008               	tblrd		*
  6229   001DA0  50F5               	movf	tablat,w,c
  6230   001DA2  D005               	bra	i2u233_40
  6231   001DA4                     i2u233_47:
  6232   001DA4  CFF6 FFE9          	movff	tblptrl,fsr0l
  6233   001DA8  CFF7 FFEA          	movff	tblptrh,fsr0h
  6234   001DAC  50EF               	movf	indf0,w,c
  6235   001DAE                     i2u233_40:
  6236   001DAE  0900               	iorlw	0
  6237   001DB0  B4D8               	btfsc	status,2,c
  6238   001DB2  0012               	return	
  6239   001DB4  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6240   001DB8  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6241   001DBC  0E00               	movlw	low (__smallconst shr (0+16))
  6242   001DBE  6EF8               	movwf	tblptru,c
  6243   001DC0  0E0F               	movlw	(high __ramtop+-1)
  6244   001DC2  64F7               	cpfsgt	tblptrh,c
  6245   001DC4  D003               	bra	i2u235_47
  6246   001DC6  0008               	tblrd		*
  6247   001DC8  50F5               	movf	tablat,w,c
  6248   001DCA  D005               	bra	i2u235_40
  6249   001DCC                     i2u235_47:
  6250   001DCC  CFF6 FFE9          	movff	tblptrl,fsr0l
  6251   001DD0  CFF7 FFEA          	movff	tblptrh,fsr0h
  6252   001DD4  50EF               	movf	indf0,w,c
  6253   001DD6                     i2u235_40:
  6254   001DD6  0900               	iorlw	0
  6255   001DD8  B4D8               	btfsc	status,2,c
  6256   001DDA  0012               	return	
  6257   001DDC  D7BC               	goto	i2l4343
  6258   001DDE                     __end_of_draw_string:
  6259                           	callstack 0
  6260                           
  6261 ;; *************** function _d1command *****************
  6262 ;; Defined at:
  6263 ;;		line 106 in file "afficheur.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  d1              1    wreg     unsigned char 
  6266 ;;  cmd             1    4[COMRAM] unsigned char 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  d1              1    5[COMRAM] unsigned char 
  6269 ;;  res             1    6[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      unsigned char 
  6272 ;; Registers used:
  6273 ;;		wreg, status,2, status,0, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:        3 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 2
  6286 ;; This function calls:
  6287 ;;		_delai_us_char
  6288 ;;		_wait_status_ok
  6289 ;;		_write_c_aff
  6290 ;;		_write_d_aff
  6291 ;; This function is called by:
  6292 ;;		_initialisation_afficheur
  6293 ;;		_draw_char
  6294 ;;		_draw_string
  6295 ;;		_draw_hex8
  6296 ;;		_draw_dec8
  6297 ;;		_clear_text
  6298 ;;		_clear_graphics
  6299 ;;		_clear_cgram
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text35
  6304   0021DA                     __ptext35:
  6305                           	callstack 0
  6306   0021DA                     _d1command:
  6307                           	callstack 23
  6308                           
  6309                           ;incstack = 0
  6310                           ;d1command@d1 stored from wreg
  6311   0021DA  6E06               	movwf	d1command@d1^0,c
  6312                           
  6313                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6314   0021DC  0E00               	movlw	0
  6315   0021DE  6E07               	movwf	d1command@res^0,c
  6316                           
  6317                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6318   0021E0  EC31  F010         	call	_wait_status_ok	;wreg free
  6319   0021E4  06E8               	decf	wreg,f,c
  6320   0021E6  A4D8               	btfss	status,2,c
  6321   0021E8  D013               	goto	i2l4205
  6322                           
  6323                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6324   0021EA  0E0C               	movlw	12
  6325   0021EC  ECD5  F011         	call	_delai_us_char
  6326                           
  6327                           ;afficheur.c: 115: write_d_aff(d1);
  6328   0021F0  5006               	movf	d1command@d1^0,w,c
  6329   0021F2  EC10  F012         	call	_write_d_aff
  6330                           
  6331                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6332   0021F6  EC31  F010         	call	_wait_status_ok	;wreg free
  6333   0021FA  06E8               	decf	wreg,f,c
  6334   0021FC  A4D8               	btfss	status,2,c
  6335   0021FE  D008               	goto	i2l4205
  6336                           
  6337                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6338   002200  0E0C               	movlw	12
  6339   002202  ECD5  F011         	call	_delai_us_char
  6340                           
  6341                           ;afficheur.c: 119: write_c_aff(cmd);
  6342   002206  5005               	movf	d1command@cmd^0,w,c
  6343   002208  EC1D  F012         	call	_write_c_aff
  6344                           
  6345                           ;afficheur.c: 121: res=1;
  6346   00220C  0E01               	movlw	1
  6347   00220E  6E07               	movwf	d1command@res^0,c
  6348   002210                     i2l4205:
  6349                           
  6350                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6351   002210  5007               	movf	d1command@res^0,w,c
  6352   002212  0012               	return		;funcret
  6353   002214                     __end_of_d1command:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function _write_d_aff *****************
  6357 ;; Defined at:
  6358 ;;		line 4 in file "afficheur.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  data            1    wreg     unsigned char 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  data            1    0[COMRAM] unsigned char 
  6363 ;; Return value:  Size  Location     Type
  6364 ;;                  1    wreg      void 
  6365 ;; Registers used:
  6366 ;;		wreg, status,2
  6367 ;; Tracked objects:
  6368 ;;		On entry : 0/0
  6369 ;;		On exit  : 0/0
  6370 ;;		Unchanged: 0/0
  6371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;Total ram usage:        1 bytes
  6377 ;; Hardware stack levels used: 1
  6378 ;; This function calls:
  6379 ;;		Nothing
  6380 ;; This function is called by:
  6381 ;;		_d1command
  6382 ;;		_d2command
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text36
  6387   002420                     __ptext36:
  6388                           	callstack 0
  6389   002420                     _write_d_aff:
  6390                           	callstack 24
  6391                           
  6392                           ;incstack = 0
  6393                           ;write_d_aff@data stored from wreg
  6394   002420  6E01               	movwf	write_d_aff@data^0,c
  6395                           
  6396                           ;afficheur.c: 6: LATH=data;
  6397   002422  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6398                           
  6399                           ;afficheur.c: 7: TRISH=0x00;
  6400   002426  0E00               	movlw	0
  6401   002428  6E99               	movwf	153,c	;volatile
  6402                           
  6403                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6404   00242A  9091               	bcf	145,0,c	;volatile
  6405                           
  6406                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6407   00242C  9691               	bcf	145,3,c	;volatile
  6408                           
  6409                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6410   00242E  9491               	bcf	145,2,c	;volatile
  6411                           
  6412                           ;afficheur.c: 11: __nop();
  6413   002430  F000               	nop	
  6414                           
  6415                           ;afficheur.c: 12: __nop();
  6416   002432  F000               	nop	
  6417                           
  6418                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6419   002434  8491               	bsf	145,2,c	;volatile
  6420                           
  6421                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6422   002436  8691               	bsf	145,3,c	;volatile
  6423   002438  0012               	return		;funcret
  6424   00243A                     __end_of_write_d_aff:
  6425                           	callstack 0
  6426                           
  6427 ;; *************** function _write_c_aff *****************
  6428 ;; Defined at:
  6429 ;;		line 17 in file "afficheur.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  command         1    wreg     unsigned char 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  command         1    0[COMRAM] unsigned char 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg, status,2
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;Total ram usage:        1 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_command
  6453 ;;		_d1command
  6454 ;;		_d2command
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text37
  6459   00243A                     __ptext37:
  6460                           	callstack 0
  6461   00243A                     _write_c_aff:
  6462                           	callstack 24
  6463                           
  6464                           ;incstack = 0
  6465                           ;write_c_aff@command stored from wreg
  6466   00243A  6E01               	movwf	write_c_aff@command^0,c
  6467                           
  6468                           ;afficheur.c: 19: LATH=command;
  6469   00243C  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6470                           
  6471                           ;afficheur.c: 20: TRISH=0x00;
  6472   002440  0E00               	movlw	0
  6473   002442  6E99               	movwf	153,c	;volatile
  6474                           
  6475                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6476   002444  8091               	bsf	145,0,c	;volatile
  6477                           
  6478                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6479   002446  9691               	bcf	145,3,c	;volatile
  6480                           
  6481                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6482   002448  9491               	bcf	145,2,c	;volatile
  6483                           
  6484                           ;afficheur.c: 24: __nop();
  6485   00244A  F000               	nop	
  6486                           
  6487                           ;afficheur.c: 25: __nop();
  6488   00244C  F000               	nop	
  6489                           
  6490                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6491   00244E  8491               	bsf	145,2,c	;volatile
  6492                           
  6493                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6494   002450  8691               	bsf	145,3,c	;volatile
  6495   002452  0012               	return		;funcret
  6496   002454                     __end_of_write_c_aff:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _wait_status_ok *****************
  6500 ;; Defined at:
  6501 ;;		line 53 in file "afficheur.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  res             1    3[COMRAM] unsigned char 
  6506 ;;  status          1    2[COMRAM] unsigned char 
  6507 ;;  err             1    1[COMRAM] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      unsigned char 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;Total ram usage:        3 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; Hardware stack levels required when called: 1
  6524 ;; This function calls:
  6525 ;;		_delai_us_char
  6526 ;; This function is called by:
  6527 ;;		_command
  6528 ;;		_d1command
  6529 ;;		_d2command
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text38
  6534   002062                     __ptext38:
  6535                           	callstack 0
  6536   002062                     _wait_status_ok:
  6537                           	callstack 23
  6538                           
  6539                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6540                           
  6541                           ;incstack = 0
  6542   002062  0E00               	movlw	0
  6543   002064  6E02               	movwf	wait_status_ok@err^0,c
  6544                           
  6545                           ;afficheur.c: 58: res=2;
  6546   002066  0E02               	movlw	2
  6547   002068  D01E               	goto	L7
  6548   00206A                     i2l1294:
  6549                           
  6550                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6551   00206A  6899               	setf	153,c	;volatile
  6552                           
  6553                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6554   00206C  8091               	bsf	145,0,c	;volatile
  6555                           
  6556                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6557   00206E  9691               	bcf	145,3,c	;volatile
  6558                           
  6559                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6560   002070  9291               	bcf	145,1,c	;volatile
  6561                           
  6562                           ;afficheur.c: 65: __nop();
  6563   002072  F000               	nop	
  6564                           
  6565                           ;afficheur.c: 66: status=PORTH;
  6566   002074  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6567                           
  6568                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6569   002078  8291               	bsf	145,1,c	;volatile
  6570                           
  6571                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6572   00207A  8691               	bsf	145,3,c	;volatile
  6573                           
  6574                           ;afficheur.c: 70: status=(status&0x03);
  6575   00207C  5003               	movf	wait_status_ok@status^0,w,c
  6576   00207E  0B03               	andlw	3
  6577   002080  6E03               	movwf	wait_status_ok@status^0,c
  6578                           
  6579                           ;afficheur.c: 71: if (status!=0x03)
  6580   002082  0E03               	movlw	3
  6581   002084  1803               	xorwf	wait_status_ok@status^0,w,c
  6582   002086  B4D8               	btfsc	status,2,c
  6583   002088  D00D               	goto	i2l2599
  6584                           
  6585                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6586   00208A  2A02               	incf	wait_status_ok@err^0,f,c
  6587                           
  6588                           ;afficheur.c: 74: delai_us_char(12);
  6589   00208C  0E0C               	movlw	12
  6590   00208E  ECD5  F011         	call	_delai_us_char
  6591                           
  6592                           ;afficheur.c: 75: if (err>=250)
  6593   002092  0EF9               	movlw	249
  6594   002094  6402               	cpfsgt	wait_status_ok@err^0,c
  6595   002096  D008               	goto	i2l2601
  6596                           
  6597                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6598   002098  9EF2               	bcf	242,7,c	;volatile
  6599                           
  6600                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6601   00209A  948B               	bcf	139,2,c	;volatile
  6602   00209C  828B               	bsf	139,1,c	;volatile
  6603   00209E  808F               	bsf	143,0,c	;volatile
  6604                           
  6605                           ;afficheur.c: 79: res=0;
  6606   0020A0  0E00               	movlw	0
  6607   0020A2  D001               	goto	L7
  6608   0020A4                     i2l2599:
  6609                           
  6610                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6611   0020A4  0E01               	movlw	1
  6612   0020A6                     L7:
  6613   0020A6  6E04               	movwf	wait_status_ok@res^0,c
  6614   0020A8                     i2l2601:
  6615   0020A8  0E02               	movlw	2
  6616   0020AA  1804               	xorwf	wait_status_ok@res^0,w,c
  6617   0020AC  B4D8               	btfsc	status,2,c
  6618   0020AE  D7DD               	goto	i2l1294
  6619                           
  6620                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6621   0020B0  5004               	movf	wait_status_ok@res^0,w,c
  6622   0020B2  0012               	return		;funcret
  6623   0020B4                     __end_of_wait_status_ok:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _delai_us_char *****************
  6627 ;; Defined at:
  6628 ;;		line 154 in file "afficheur.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  ucdelai         1    wreg     unsigned char 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;Total ram usage:        1 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; This function calls:
  6649 ;;		Nothing
  6650 ;; This function is called by:
  6651 ;;		_wait_status_ok
  6652 ;;		_command
  6653 ;;		_d1command
  6654 ;;		_d2command
  6655 ;;		_initialisation_afficheur
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text39
  6660   0023AA                     __ptext39:
  6661                           	callstack 0
  6662   0023AA                     _delai_us_char:
  6663                           	callstack 23
  6664                           
  6665                           ;incstack = 0
  6666                           ;delai_us_char@ucdelai stored from wreg
  6667   0023AA  6E01               	movwf	delai_us_char@ucdelai^0,c
  6668                           
  6669                           ;afficheur.c: 157: while (ucdelai>0)
  6670   0023AC  D00B               	goto	i2l2547
  6671   0023AE                     i2l1318:
  6672                           
  6673                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6674   0023AE  F000               	nop	
  6675   0023B0  F000               	nop	
  6676   0023B2  F000               	nop	
  6677   0023B4  F000               	nop	
  6678   0023B6  F000               	nop	
  6679   0023B8  F000               	nop	
  6680   0023BA  F000               	nop	
  6681   0023BC  F000               	nop	
  6682   0023BE  F000               	nop	
  6683   0023C0  F000               	nop	
  6684                           
  6685                           ;afficheur.c: 160: ucdelai--;
  6686   0023C2  0601               	decf	delai_us_char@ucdelai^0,f,c
  6687   0023C4                     i2l2547:
  6688   0023C4  5001               	movf	delai_us_char@ucdelai^0,w,c
  6689   0023C6  B4D8               	btfsc	status,2,c
  6690   0023C8  0012               	return	
  6691   0023CA  D7F1               	goto	i2l1318
  6692   0023CC                     __end_of_delai_us_char:
  6693                           	callstack 0
  6694                           
  6695 ;; *************** function _Diminution *****************
  6696 ;; Defined at:
  6697 ;;		line 482 in file "afficheur.c"
  6698 ;; Parameters:    Size  Location     Type
  6699 ;;  vitesse         2    0[COMRAM] unsigned int 
  6700 ;; Auto vars:     Size  Location     Type
  6701 ;;		None
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  2    0[COMRAM] int 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, status,0
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;Total ram usage:        2 bytes
  6716 ;; Hardware stack levels used: 1
  6717 ;; This function calls:
  6718 ;;		Nothing
  6719 ;; This function is called by:
  6720 ;;		_tache1
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           	psect	text40
  6725   0024C4                     __ptext40:
  6726                           	callstack 0
  6727   0024C4                     _Diminution:
  6728                           	callstack 27
  6729                           
  6730                           ;afficheur.c: 483: if(vitesse>0){
  6731                           
  6732                           ;incstack = 0
  6733   0024C4  5001               	movf	Diminution@vitesse^0,w,c
  6734   0024C6  1002               	iorwf	(Diminution@vitesse+1)^0,w,c
  6735   0024C8  B4D8               	btfsc	status,2,c
  6736   0024CA  0012               	return	
  6737                           
  6738                           ;afficheur.c: 484: vitesse--;
  6739   0024CC  0601               	decf	Diminution@vitesse^0,f,c
  6740   0024CE  A0D8               	btfss	status,0,c
  6741   0024D0  0602               	decf	(Diminution@vitesse+1)^0,f,c
  6742   0024D2  0012               	return		;funcret
  6743   0024D4                     __end_of_Diminution:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _Conversion *****************
  6747 ;; Defined at:
  6748 ;;		line 487 in file "afficheur.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  a               2   14[COMRAM] unsigned int 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  valeur_conve    2   18[COMRAM] int 
  6753 ;;  valeur_lue      2   16[COMRAM] int 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;                  2   14[COMRAM] int 
  6756 ;; Registers used:
  6757 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6767 ;;Total ram usage:        6 bytes
  6768 ;; Hardware stack levels used: 1
  6769 ;; Hardware stack levels required when called: 1
  6770 ;; This function calls:
  6771 ;;		___awdiv
  6772 ;;		___wmul
  6773 ;; This function is called by:
  6774 ;;		_tache1
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           	psect	text41
  6779   00219A                     __ptext41:
  6780                           	callstack 0
  6781   00219A                     _Conversion:
  6782                           	callstack 26
  6783                           
  6784                           ;afficheur.c: 488: int valeur_lue = a;
  6785                           
  6786                           ;incstack = 0
  6787   00219A  C00F  F011         	movff	Conversion@a,Conversion@valeur_lue
  6788   00219E  C010  F012         	movff	Conversion@a+1,Conversion@valeur_lue+1
  6789                           
  6790                           ;afficheur.c: 489: int valeur_convertie = (valeur_lue * 100) / 255;
  6791   0021A2  C011  F001         	movff	Conversion@valeur_lue,___wmul@multiplier
  6792   0021A6  C012  F002         	movff	Conversion@valeur_lue+1,___wmul@multiplier+1
  6793   0021AA  0E00               	movlw	0
  6794   0021AC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6795   0021AE  0E64               	movlw	100
  6796   0021B0  6E03               	movwf	___wmul@multiplicand^0,c
  6797   0021B2  ECA0  F011         	call	___wmul	;wreg free
  6798   0021B6  C001  F007         	movff	?___wmul,___awdiv@dividend
  6799   0021BA  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  6800   0021BE  0E00               	movlw	0
  6801   0021C0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6802   0021C2  6809               	setf	___awdiv@divisor^0,c
  6803   0021C4  EC34  F00F         	call	___awdiv	;wreg free
  6804   0021C8  C007  F013         	movff	?___awdiv,Conversion@valeur_convertie
  6805   0021CC  C008  F014         	movff	?___awdiv+1,Conversion@valeur_convertie+1
  6806                           
  6807                           ;afficheur.c: 491: return valeur_convertie;
  6808   0021D0  C013  F00F         	movff	Conversion@valeur_convertie,?_Conversion
  6809   0021D4  C014  F010         	movff	Conversion@valeur_convertie+1,?_Conversion+1
  6810   0021D8  0012               	return		;funcret
  6811   0021DA                     __end_of_Conversion:
  6812                           	callstack 0
  6813                           
  6814 ;; *************** function ___wmul *****************
  6815 ;; Defined at:
  6816 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  multiplier      2    0[COMRAM] unsigned int 
  6819 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6820 ;; Auto vars:     Size  Location     Type
  6821 ;;  product         2    4[COMRAM] unsigned int 
  6822 ;; Return value:  Size  Location     Type
  6823 ;;                  2    0[COMRAM] unsigned int 
  6824 ;; Registers used:
  6825 ;;		wreg, status,2, status,0, prodl, prodh
  6826 ;; Tracked objects:
  6827 ;;		On entry : 0/0
  6828 ;;		On exit  : 0/0
  6829 ;;		Unchanged: 0/0
  6830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;Total ram usage:        6 bytes
  6836 ;; Hardware stack levels used: 1
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_Conversion
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           	psect	text42
  6845   002340                     __ptext42:
  6846                           	callstack 0
  6847   002340                     ___wmul:
  6848                           	callstack 26
  6849                           
  6850                           ;incstack = 0
  6851   002340  5001               	movf	___wmul@multiplier^0,w,c
  6852   002342  0203               	mulwf	___wmul@multiplicand^0,c
  6853   002344  CFF3 F005          	movff	prodl,___wmul@product
  6854   002348  CFF4 F006          	movff	prodh,___wmul@product+1
  6855   00234C  5001               	movf	___wmul@multiplier^0,w,c
  6856   00234E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6857   002350  50F3               	movf	243,w,c
  6858   002352  2606               	addwf	(___wmul@product+1)^0,f,c
  6859   002354  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6860   002356  0203               	mulwf	___wmul@multiplicand^0,c
  6861   002358  50F3               	movf	243,w,c
  6862   00235A  2606               	addwf	(___wmul@product+1)^0,f,c
  6863   00235C  C005  F001         	movff	___wmul@product,?___wmul
  6864   002360  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6865   002364  0012               	return		;funcret
  6866   002366                     __end_of___wmul:
  6867                           	callstack 0
  6868                           
  6869 ;; *************** function ___awdiv *****************
  6870 ;; Defined at:
  6871 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  dividend        2    6[COMRAM] int 
  6874 ;;  divisor         2    8[COMRAM] int 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  quotient        2   12[COMRAM] int 
  6877 ;;  sign            1   11[COMRAM] unsigned char 
  6878 ;;  counter         1   10[COMRAM] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  2    6[COMRAM] int 
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6892 ;;Total ram usage:        8 bytes
  6893 ;; Hardware stack levels used: 1
  6894 ;; This function calls:
  6895 ;;		Nothing
  6896 ;; This function is called by:
  6897 ;;		_draw_dec8
  6898 ;;		_plot1
  6899 ;;		_Conversion
  6900 ;;		_plot0
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text43
  6905   001E68                     __ptext43:
  6906                           	callstack 0
  6907   001E68                     ___awdiv:
  6908                           	callstack 26
  6909                           
  6910                           ;incstack = 0
  6911   001E68  0E00               	movlw	0
  6912   001E6A  6E0C               	movwf	___awdiv@sign^0,c
  6913   001E6C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6914   001E6E  D006               	goto	i2l4243
  6915   001E70  6C09               	negf	___awdiv@divisor^0,c
  6916   001E72  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  6917   001E74  B0D8               	btfsc	status,0,c
  6918   001E76  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  6919   001E78  0E01               	movlw	1
  6920   001E7A  6E0C               	movwf	___awdiv@sign^0,c
  6921   001E7C                     i2l4243:
  6922   001E7C  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  6923   001E7E  D006               	goto	i2l4249
  6924   001E80  6C07               	negf	___awdiv@dividend^0,c
  6925   001E82  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  6926   001E84  B0D8               	btfsc	status,0,c
  6927   001E86  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  6928   001E88  0E01               	movlw	1
  6929   001E8A  1A0C               	xorwf	___awdiv@sign^0,f,c
  6930   001E8C                     i2l4249:
  6931   001E8C  0E00               	movlw	0
  6932   001E8E  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  6933   001E90  0E00               	movlw	0
  6934   001E92  6E0D               	movwf	___awdiv@quotient^0,c
  6935   001E94  5009               	movf	___awdiv@divisor^0,w,c
  6936   001E96  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  6937   001E98  B4D8               	btfsc	status,2,c
  6938   001E9A  D01C               	goto	i2l4271
  6939   001E9C  0E01               	movlw	1
  6940   001E9E  6E0B               	movwf	___awdiv@counter^0,c
  6941   001EA0  D004               	goto	i2l4257
  6942   001EA2                     i2l4255:
  6943   001EA2  90D8               	bcf	status,0,c
  6944   001EA4  3609               	rlcf	___awdiv@divisor^0,f,c
  6945   001EA6  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  6946   001EA8  2A0B               	incf	___awdiv@counter^0,f,c
  6947   001EAA                     i2l4257:
  6948   001EAA  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6949   001EAC  D7FA               	goto	i2l4255
  6950   001EAE                     i2u216_40:
  6951   001EAE  90D8               	bcf	status,0,c
  6952   001EB0  360D               	rlcf	___awdiv@quotient^0,f,c
  6953   001EB2  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  6954   001EB4  5009               	movf	___awdiv@divisor^0,w,c
  6955   001EB6  5C07               	subwf	___awdiv@dividend^0,w,c
  6956   001EB8  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6957   001EBA  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  6958   001EBC  A0D8               	btfss	status,0,c
  6959   001EBE  D005               	goto	i2l4267
  6960   001EC0  5009               	movf	___awdiv@divisor^0,w,c
  6961   001EC2  5E07               	subwf	___awdiv@dividend^0,f,c
  6962   001EC4  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6963   001EC6  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  6964   001EC8  800D               	bsf	___awdiv@quotient^0,0,c
  6965   001ECA                     i2l4267:
  6966   001ECA  90D8               	bcf	status,0,c
  6967   001ECC  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  6968   001ECE  3209               	rrcf	___awdiv@divisor^0,f,c
  6969   001ED0  2E0B               	decfsz	___awdiv@counter^0,f,c
  6970   001ED2  D7ED               	goto	i2u216_40
  6971   001ED4                     i2l4271:
  6972   001ED4  500C               	movf	___awdiv@sign^0,w,c
  6973   001ED6  B4D8               	btfsc	status,2,c
  6974   001ED8  D004               	goto	i2l4275
  6975   001EDA  6C0D               	negf	___awdiv@quotient^0,c
  6976   001EDC  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  6977   001EDE  B0D8               	btfsc	status,0,c
  6978   001EE0  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  6979   001EE2                     i2l4275:
  6980   001EE2  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6981   001EE6  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6982   001EEA  0012               	return		;funcret
  6983   001EEC                     __end_of___awdiv:
  6984                           	callstack 0
  6985                           
  6986                           	psect	text44
  6987   000000                     __ptext44:
  6988                           	callstack 0
  6989                           
  6990                           	psect	rparam
  6991   000000                     
  6992                           	psect	temp
  6993   000029                     btemp:
  6994                           	callstack 0
  6995   000029                     	ds	12
  6996   000000                     wtemp0	set	btemp
  6997   000000                     wtemp1	set	btemp+2
  6998   000000                     wtemp2	set	btemp+4
  6999   000000                     wtemp3	set	btemp+6
  7000   000000                     wtemp4	set	btemp+8
  7001   000000                     wtemp5	set	btemp+10
  7002   000000                     wtemp8	set	btemp+1
  7003   000000                     ttemp0	set	btemp
  7004   000000                     ttemp1	set	btemp+3
  7005   000000                     ttemp2	set	btemp+6
  7006   000000                     ttemp3	set	btemp+9
  7007   000000                     ttemp5	set	btemp+1
  7008   000000                     ttemp6	set	btemp+4
  7009   000000                     ttemp7	set	btemp+8
  7010   000000                     ltemp0	set	btemp
  7011   000000                     ltemp1	set	btemp+4
  7012   000000                     ltemp2	set	btemp+8
  7013   000000                     lltemp0	set	btemp
  7014                           
  7015                           	psect	idloc
  7016                           
  7017                           ;Config register IDLOC0 @ 0x200000
  7018                           ;	unspecified, using default values
  7019   200000                     	org	2097152
  7020   200000  FF                 	db	255
  7021                           
  7022                           ;Config register IDLOC1 @ 0x200001
  7023                           ;	unspecified, using default values
  7024   200001                     	org	2097153
  7025   200001  FF                 	db	255
  7026                           
  7027                           ;Config register IDLOC2 @ 0x200002
  7028                           ;	unspecified, using default values
  7029   200002                     	org	2097154
  7030   200002  FF                 	db	255
  7031                           
  7032                           ;Config register IDLOC3 @ 0x200003
  7033                           ;	unspecified, using default values
  7034   200003                     	org	2097155
  7035   200003  FF                 	db	255
  7036                           
  7037                           ;Config register IDLOC4 @ 0x200004
  7038                           ;	unspecified, using default values
  7039   200004                     	org	2097156
  7040   200004  FF                 	db	255
  7041                           
  7042                           ;Config register IDLOC5 @ 0x200005
  7043                           ;	unspecified, using default values
  7044   200005                     	org	2097157
  7045   200005  FF                 	db	255
  7046                           
  7047                           ;Config register IDLOC6 @ 0x200006
  7048                           ;	unspecified, using default values
  7049   200006                     	org	2097158
  7050   200006  FF                 	db	255
  7051                           
  7052                           ;Config register IDLOC7 @ 0x200007
  7053                           ;	unspecified, using default values
  7054   200007                     	org	2097159
  7055   200007  FF                 	db	255
  7056                           
  7057                           	psect	config
  7058                           
  7059                           ;Config register CONFIG1L @ 0x300000
  7060                           ;	VREG Sleep Enable bit
  7061                           ;	RETEN = ON, Enabled
  7062                           ;	LF-INTOSC Low-power Enable bit
  7063                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  7064                           ;	SOSC Power Selection and mode Configuration bits
  7065                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  7066                           ;	Extended Instruction Set
  7067                           ;	XINST = OFF, Disabled
  7068   300000                     	org	3145728
  7069   300000  15                 	db	21
  7070                           
  7071                           ;Config register CONFIG1H @ 0x300001
  7072                           ;	Oscillator
  7073                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  7074                           ;	PLL x4 Enable bit
  7075                           ;	PLLCFG = ON, Enabled
  7076                           ;	Fail-Safe Clock Monitor
  7077                           ;	FCMEN = OFF, Disabled
  7078                           ;	Internal External Oscillator Switch Over Mode
  7079                           ;	IESO = OFF, Disabled
  7080   300001                     	org	3145729
  7081   300001  13                 	db	19
  7082                           
  7083                           ;Config register CONFIG2L @ 0x300002
  7084                           ;	Power Up Timer
  7085                           ;	PWRTEN = OFF, Disabled
  7086                           ;	Brown Out Detect
  7087                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  7088                           ;	Brown-out Reset Voltage bits
  7089                           ;	BORV = 0, 3.0V
  7090                           ;	BORMV Power level
  7091                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  7092   300002                     	org	3145730
  7093   300002  61                 	db	97
  7094                           
  7095                           ;Config register CONFIG2H @ 0x300003
  7096                           ;	Watchdog Timer
  7097                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  7098                           ;	Watchdog Postscaler
  7099                           ;	WDTPS = 1, 1:1
  7100   300003                     	org	3145731
  7101   300003  00                 	db	0
  7102                           
  7103                           ;Config register CONFIG3L @ 0x300004
  7104                           ;	RTCC Clock Select
  7105                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  7106                           ;	External Address Shift bit
  7107                           ;	EASHFT = OFF, Address Shifting disabled
  7108                           ;	Address Bus Width Select bits
  7109                           ;	ABW = MM, 8-bit address bus
  7110                           ;	Data Bus Width
  7111                           ;	BW = 8, 8-bit external bus mode
  7112                           ;	External Bus Wait
  7113                           ;	WAIT = ON, Enabled
  7114   300004                     	org	3145732
  7115   300004  30                 	db	48
  7116                           
  7117                           ;Config register CONFIG3H @ 0x300005
  7118                           ;	CCP2 Mux
  7119                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  7120                           ;	ECCP Mux
  7121                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  7122                           ;	MSSP address masking
  7123                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  7124                           ;	Master Clear Enable
  7125                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  7126   300005                     	org	3145733
  7127   300005  80                 	db	128
  7128                           
  7129                           ;Config register CONFIG4L @ 0x300006
  7130                           ;	Stack Overflow Reset
  7131                           ;	STVREN = ON, Enabled
  7132                           ;	Boot Block Size
  7133                           ;	BBSIZ = BB1K, 1K word Boot Block size
  7134                           ;	Background Debug
  7135                           ;	DEBUG = OFF, Disabled
  7136   300006                     	org	3145734
  7137   300006  81                 	db	129
  7138                           
  7139                           ; Padding undefined space
  7140   300007                     	org	3145735
  7141   300007  FF                 	db	255
  7142                           
  7143                           ;Config register CONFIG5L @ 0x300008
  7144                           ;	Code Protect 00800-03FFF
  7145                           ;	CP0 = OFF, Disabled
  7146                           ;	Code Protect 04000-07FFF
  7147                           ;	CP1 = OFF, Disabled
  7148                           ;	Code Protect 08000-0BFFF
  7149                           ;	CP2 = OFF, Disabled
  7150                           ;	Code Protect 0C000-0FFFF
  7151                           ;	CP3 = OFF, Disabled
  7152                           ;	Code Protect 10000-13FFF
  7153                           ;	CP4 = OFF, Disabled
  7154                           ;	Code Protect 14000-17FFF
  7155                           ;	CP5 = OFF, Disabled
  7156                           ;	Code Protect 18000-1BFFF
  7157                           ;	CP6 = OFF, Disabled
  7158                           ;	Code Protect 1C000-1FFFF
  7159                           ;	CP7 = OFF, Disabled
  7160   300008                     	org	3145736
  7161   300008  FF                 	db	255
  7162                           
  7163                           ;Config register CONFIG5H @ 0x300009
  7164                           ;	Code Protect Boot
  7165                           ;	CPB = OFF, Disabled
  7166                           ;	Data EE Read Protect
  7167                           ;	CPD = OFF, Disabled
  7168   300009                     	org	3145737
  7169   300009  C0                 	db	192
  7170                           
  7171                           ;Config register CONFIG6L @ 0x30000A
  7172                           ;	Table Write Protect 00800-03FFF
  7173                           ;	WRT0 = OFF, Disabled
  7174                           ;	Table Write Protect 04000-07FFF
  7175                           ;	WRT1 = OFF, Disabled
  7176                           ;	Table Write Protect 08000-0BFFF
  7177                           ;	WRT2 = OFF, Disabled
  7178                           ;	Table Write Protect 0C000-0FFFF
  7179                           ;	WRT3 = OFF, Disabled
  7180                           ;	Table Write Protect 10000-13FFF
  7181                           ;	WRT4 = OFF, Disabled
  7182                           ;	Table Write Protect 14000-17FFF
  7183                           ;	WRT5 = OFF, Disabled
  7184                           ;	Table Write Protect 18000-1BFFF
  7185                           ;	WRT6 = OFF, Disabled
  7186                           ;	Table Write Protect 1C000-1FFFF
  7187                           ;	WRT7 = OFF, Disabled
  7188   30000A                     	org	3145738
  7189   30000A  FF                 	db	255
  7190                           
  7191                           ;Config register CONFIG6H @ 0x30000B
  7192                           ;	Config. Write Protect
  7193                           ;	WRTC = OFF, Disabled
  7194                           ;	Table Write Protect Boot
  7195                           ;	WRTB = OFF, Disabled
  7196                           ;	Data EE Write Protect
  7197                           ;	WRTD = OFF, Disabled
  7198   30000B                     	org	3145739
  7199   30000B  E0                 	db	224
  7200                           
  7201                           ;Config register CONFIG7L @ 0x30000C
  7202                           ;	Table Read Protect 00800-03FFF
  7203                           ;	EBRT0 = OFF, Disabled
  7204                           ;	Table Read Protect 04000-07FFF
  7205                           ;	EBRT1 = OFF, Disabled
  7206                           ;	Table Read Protect 08000-0BFFF
  7207                           ;	EBRT2 = OFF, Disabled
  7208                           ;	Table Read Protect 0C000-0FFFF
  7209                           ;	EBRT3 = OFF, Disabled
  7210                           ;	Table Read Protect 10000-13FFF
  7211                           ;	EBRT4 = OFF, Disabled
  7212                           ;	Table Read Protect 14000-17FFF
  7213                           ;	EBRT5 = OFF, Disabled
  7214                           ;	Table Read Protect 18000-1BFFF
  7215                           ;	EBRT6 = OFF, Disabled
  7216                           ;	Table Read Protect 1C000-1FFFF
  7217                           ;	EBRT7 = OFF, Disabled
  7218   30000C                     	org	3145740
  7219   30000C  FF                 	db	255
  7220                           
  7221                           ;Config register CONFIG7H @ 0x30000D
  7222                           ;	Table Read Protect Boot
  7223                           ;	EBRTB = OFF, Disabled
  7224   30000D                     	org	3145741
  7225   30000D  40                 	db	64
  7226                           tosu	equ	0xFFF
  7227                           tosh	equ	0xFFE
  7228                           tosl	equ	0xFFD
  7229                           stkptr	equ	0xFFC
  7230                           pclatu	equ	0xFFB
  7231                           pclath	equ	0xFFA
  7232                           pcl	equ	0xFF9
  7233                           tblptru	equ	0xFF8
  7234                           tblptrh	equ	0xFF7
  7235                           tblptrl	equ	0xFF6
  7236                           tablat	equ	0xFF5
  7237                           prodh	equ	0xFF4
  7238                           prodl	equ	0xFF3
  7239                           indf0	equ	0xFEF
  7240                           postinc0	equ	0xFEE
  7241                           postdec0	equ	0xFED
  7242                           preinc0	equ	0xFEC
  7243                           plusw0	equ	0xFEB
  7244                           fsr0h	equ	0xFEA
  7245                           fsr0l	equ	0xFE9
  7246                           wreg	equ	0xFE8
  7247                           indf1	equ	0xFE7
  7248                           postinc1	equ	0xFE6
  7249                           postdec1	equ	0xFE5
  7250                           preinc1	equ	0xFE4
  7251                           plusw1	equ	0xFE3
  7252                           fsr1h	equ	0xFE2
  7253                           fsr1l	equ	0xFE1
  7254                           bsr	equ	0xFE0
  7255                           indf2	equ	0xFDF
  7256                           postinc2	equ	0xFDE
  7257                           postdec2	equ	0xFDD
  7258                           preinc2	equ	0xFDC
  7259                           plusw2	equ	0xFDB
  7260                           fsr2h	equ	0xFDA
  7261                           fsr2l	equ	0xFD9
  7262                           status	equ	0xFD8

Data Sizes:
    Strings     215
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     40      52
    BANK0           123      1       1
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_25(CODE[14]), STR_24(CODE[29]), STR_23(CODE[4]), STR_22(CODE[3]), 
		 -> STR_21(CODE[7]), STR_20(CODE[5]), STR_19(CODE[12]), STR_18(CODE[12]), 
		 -> STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[9]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[6]), 
		 -> STR_9(CODE[13]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char
    _Conversion->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      49
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   54587
                                             28 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               3     3      0   52781
                                             26 COMRAM     2     2      0
                         _Conversion
                         _Diminution
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
                               _vide
                       _vitesseAdmin
 ---------------------------------------------------------------------------------
 (4) _vitesseAdmin                                         9     7      2     244
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5336
                                             20 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4568
                                             14 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2393
                                             14 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5099
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3879
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3082
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (4) _Diminution                                           2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Conversion                                           6     4      2    1591
                                             14 COMRAM     6     4      2
                            ___awdiv
                             ___wmul
            _lecture_8bit_analogique (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1060
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Conversion
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _lecture_8bit_analogique (ARG)
     _Diminution
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesseAdmin
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7B      0       0      64        0.0%
BITBANK0            7B      0       0       4        0.0%
BANK0               7B      1       1       5        0.8%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     28      34       1       62.7%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      57        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 24 11:21:36 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 000C  
                                 _tc 003C                  ___wmul@multiplicand 0003  
                       ?_draw_square 0015                                  _BSR 000FE0  
                       ?_draw_string 0008                                  _puc 0038  
                        Conversion@a 000F                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 2454                                 l1569 2384  
                               l2831 236E                                 l2833 2374  
                               l2829 2368                                 l5683 2402  
                               STR_1 108D                                 STR_2 10D5  
                               STR_3 10D2                                 STR_4 10CC  
                               STR_5 10B1                                 STR_6 102D  
                               STR_7 109C                                 STR_8 1066  
                               STR_9 1041                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 2366                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 23EC  
                               _fptr 0035                                 _vide 2484  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0029                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                         _vitesseAdmin 1DDE  
                   ?_lecture_normale 0003                                ?_main 0001  
                    __end_of___awdiv 1EEC                                STR_10 10B7  
                              STR_11 107B                                STR_20 10C3  
                              STR_12 1071                                STR_21 10A3  
                              STR_13 1095                                STR_22 10CF  
                              STR_14 101E                                STR_23 10C8  
                              STR_15 1084                                STR_16 10AA  
                              STR_24 1001                                STR_17 10BD  
                              STR_25 1033                                STR_18 104E  
                              STR_19 105A                      __end_of___awmod 1F5C  
                              ?_vide 0001                           _Diminution 24C4  
                              _T0CON 000FD5                      ___awdiv@divisor 0009  
                       draw_dec8@dix 0013                                _FSR0H 000FEA  
                              _FSR1H 000FE2                                _FSR0L 000FE9  
                              _FSR2H 000FDA                                _FSR1L 000FE1  
                              _FSR2L 000FD9                      __end_of___lwdiv 2062  
                              i2l146 226C                                i2l149 227A  
                              i2l446 11F0                                i2l465 1402  
                              i2l810 19EC                                i2l580 1778  
                              i2l804 19E0                                i2l469 14B6  
                              i2l822 1A04                                i2l575 1736  
                              i2l840 1A28                                i2l816 19F8  
                              i2l593 246E                                i2l834 1A1C  
                              i2l852 1A40                                i2l828 1A10  
                              i2l870 1A64                                i2l846 1A34  
                              i2l864 1A58                                i2l882 1A7C  
                              i2l858 1A4C                                i2l876 1A70  
                    ___awdiv@counter 000B                                i2l798 19D4  
                              i2l982 1810                                i2l994 1828  
                              i2l988 181C                                _PRODH 000FF4  
                              _PRODL 000FF3                                _PORTH 000F87  
                              _TRISH 000F99                                _TRISJ 000F9A  
                        _write_c_aff 243A                          _write_d_aff 2420  
                    __end_of_charger 24B4                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                      __end_of_command 2420  
                              _badge 000075                                _plot1 1B66  
                              _queue 000069                                tablat 000FF5  
                              ltemp0 0029                                ltemp1 002D  
                              ltemp2 0031                           _Conversion 219A  
              __end_of_delai_us_char 23CC                                plusw1 000FE3  
                    _check_status_ok 2314                                ttemp0 0029  
                              ttemp1 002C                                ttemp2 002F  
                              ttemp3 0032                                ttemp5 002A  
                              ttemp6 002D                                ttemp7 0031  
                              status 000FD8                                wtemp0 0029  
                              wtemp1 002B                                wtemp2 002D  
                              wtemp3 002F                                wtemp4 0031  
                              wtemp5 0033                                wtemp8 002A  
      initialisation_du_systeme@temp 0085                      __initialization 24B4  
                       __end_of_Init 2388           lecture_8bit_analogique@ret 0001  
                       __end_of_main 2406                         __end_of_vide 249C  
                             ??_main 0086                               ??_vide 000F  
                      __activetblptr 000003                     _valeur_convertie 000084  
                       draw_square@x 0019                         draw_square@y 001A  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               ?_plot1 000F  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0007  
                      _n_octet_badge 00007F                        draw_dec8@cent 0012  
                             _MEMCON 000F26                               i2l1000 1834  
                             i2l1012 184C                               i2l1030 1870  
                             i2l1006 1840                               i2l1024 1864  
                             i2l1042 1888                               i2l1018 1858  
                             i2l1060 18AC                               i2l1036 187C  
                             i2l1054 18A0                               i2l1048 1894  
                             i2l1066 18B8                               i2l1318 23AE  
                             i2l1326 1ADA                               i2l1344 1D54  
                             i2l1336 22A0                               i2l1360 1FA4  
                             i2l1355 1F78                               i2l1380 1FF8  
                             i2l1372 1D3E                               i2l1294 206A  
                             i2l1366 1D0A                               i2l2601 20A8  
                             i2l1369 1D24                               i2l1468 1E50  
                             i2l4205 2210                               i2l2277 2058  
                             i2l5101 0064                               i2l4231 2100  
                             i2l4311 1F52                               i2l4303 1F3A  
                             i2l4321 1FCC                               i2l4401 1AC4  
                             i2l5033 1798                               i2l5017 1756  
                             i2l4243 1E7C                               i2l2547 23C4  
                             i2l4307 1F44                               i2l2811 2338  
                             i2l4411 1ADC                               i2l3603 196C  
                             i2l1691 1C62                               _PCLATH 000FFA  
                             i2l4325 1FD6                               i2l4333 228E  
                             i2l4255 1EA2                               i2l4271 1ED4  
                             i2l4343 1D56                               i2l4327 1FFA  
                             i2l4423 22CA                               i2l4511 1E42  
                             i2l3623 19A2                               i2l1688 1C50  
                             i2l4257 1EAA                               i2l4249 1E8C  
                             i2l4337 2298                               i2l4361 1BBA  
                             i2l3609 197A                               i2l3713 18C4  
                             i2l1689 1C58                               i2l5065 2186  
                             i2l5401 02DC                               i2l1698 2456  
                             i2l4275 1EE2                               i2l4267 1ECA  
                             i2l4347 1D8C                               i2l4339 22A2  
                             i2l4531 1F70                               i2l4291 1F0C  
                             i2l4363 1BC2                               i2l4355 1BA2  
                             i2l4451 2130                               i2l3723 18DC  
                             i2l5059 2174                               i2l5067 218E  
                             i2l4437 22FA                               i2l4541 1FA6  
                             i2l4533 1F7A                               i2l4365 1BCA  
                             i2l4357 1BAA                               i2l4445 210C  
                             i2l3573 191E                               i2l5245 0198  
                             i2l2599 20A4                               i2l4295 1F1A  
                             i2l4287 1F00                               i2l4359 1BB2  
                             i2l4455 2146                               i2l2847 227E  
                             i2l3591 194C                               i2l3567 1910  
                             i2l4623 1CB2                               i2l4553 23D2  
                             i2l4481 1D0C                               i2l4297 1F22  
                             i2l4369 1BD2                               i2l4449 2122  
                             i2l4633 2026                               i2l3585 193E  
                             i2l3673 1A88                               _PCLATU 000FFB  
                             i2l4539 1F9C                               i2l4635 202E  
                             i2l4379 2462                               i2l4485 1D26  
                             i2l4645 204E                               i2l4495 1DF6  
                             i2l4903 1322                               i2l4489 1D40  
                             i2l4913 1344                               i2l4905 1328  
                             i2l4569 247A                               i2l4499 1E10  
                             i2l4587 1C42                               i2l4579 1C2C  
                             i2l4909 133E                               i2l4861 1234  
                             i2l4845 11C8                               i2l4935 1392  
                             i2l4871 1270                               i2l4855 1202  
                             i2l4953 13F0                               i2l4945 13C6  
                             i2l4929 1386                               i2l4881 129E  
                             i2l4873 127C                               i2l4883 12A4  
                             i2l4949 13DC                               _TABLAT 000FF5  
                             i2l4987 14B8                        draw_dec8@unit 0010  
                             _RCSTA1 000FAB                           _Tick_Count 000071  
                             _SPBRG1 000FAF                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                             _TXREG1 000FAD                       clear_line@line 000F  
                             _TXSTA1 000FAC                               _Valeur 000083  
                             ___wmul 2340                            ??___awdiv 000B  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _tache1 10DA                               _tache2 1714  
                             _tache3 18EE                               _tache4 19CC  
                             _tache5 1808                               _tache6 2150  
                          ??_charger 000F                     ___awdiv@quotient 000D  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                        ?_Diminution 0001                      ??_stid_delai_us 0003  
                             lltemp0 0029                               plot1@x 0014  
                             plot1@y 000F                     __end_of_tp_delai 2484  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
            __end_of_check_status_ok 2340         lecture_normale@temps_attente 0005  
                        ?_Conversion 000F                           __accesstop 0060  
            __end_of__initialization 24BE                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                           ___inthi_sp 0AAC  
                  __end_of_d1command 2214                    __end_of_d2command 2104  
                      __end_of_plot1 1C14                              ??_plot1 0010  
                      draw_square@x1 0018                        draw_square@x2 0016  
                      draw_square@y1 0015                        draw_square@y2 0017  
                       _W_TEMPORAIRE 000060                           __pnvCOMRAM 0035  
                     _clear_graphics 22E4          ??_initialisation_du_systeme 0085  
                         _clear_line 23CC                           _clear_text 22B4  
           ?_fonction_d_interruption 0001                              ?___wmul 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                       draw_dec8@octet 0011  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
           _initialisation_afficheur 1A9A                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 0040  
             __end_of_clear_graphics 2314                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 2214                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_dec8 1D52  
                  __end_of_draw_char 22B4                    __end_of_draw_hex8 1FB8  
                            ___awdiv 1E68                              ___awmod 1EEC  
                            ___lwdiv 2010                         __psmallconst 1000  
                            __pcinit 24B4                              _charger 249C  
                            __ramtop 1000                       draw_char@dccar 0008  
                            __ptext0 23EC                              __ptext1 14DC  
                            __ptext2 2214                              __ptext3 2366  
                            __ptext5 2150                              __ptext6 1C14  
                            __ptext7 2454                              __ptext8 1808  
                            __ptext9 19CC                              _command 2406  
                          _T0CONbits 000FD5                   draw_string@tableau 0008  
          _initialisation_du_systeme 14DC                     ___awmod@dividend 0001  
                  __end_of_init_rxtx 23AA                    __end_of_goto_lico 2010  
                            _val_tos 003A                       draw_hex8@octet 0008  
                            _vitesse 000073                 end_of_initialization 24BE  
                            tache4@a 0001                              tache5@a 0001  
                            tache6@n 0009                      ?_clear_graphics 0001  
                        ?_clear_line 0001                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                 Conversion@valeur_lue 0011  
                       goto_lico@adr 000D                            _PORTBbits 000F81  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                       ??_Diminution 0003              _lecture_8bit_analogique 224C  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                       ??_Conversion 0011                           command@cmd 0005  
                         draw_dec8@c 0014           Conversion@valeur_convertie 0013  
                         draw_hex8@c 0009                   __end_of_Diminution 24D4  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
                     __end_of___wmul 2366       lecture_8bit_analogique@channel 0002  
                          _d1command 21DA                            _d2command 20B4  
                     __end_of_tache1 14DC                       __end_of_tache2 1808  
                     __end_of_tache3 19CC                       __end_of_tache4 1A9A  
                     __end_of_tache5 18EE                       __end_of_tache6 219A  
                      ??_draw_square 0018                        ??_draw_string 000A  
                 __end_of_Conversion 21DA               lecture_normale@stid_id 0003  
              __end_of_stid_delai_us 246C                  start_initialization 24B4  
                      vitesseAdmin@a 0001                        vitesseAdmin@b 0006  
                      vitesseAdmin@c 0008                    ??_lecture_normale 0005  
                      _delai_us_char 23AA                             ??___wmul 0005  
                      ?_vitesseAdmin 0001                             ??_tache1 001B  
                           ??_tache2 0008                             ??_tache3 0001  
                           ??_tache4 0001                             ??_tache5 0001  
                           ??_tache6 0009           ??_initialisation_afficheur 0009  
          ??_lecture_8bit_analogique 0001                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 003C  
                      __pcstackBANK0 0085                  __end_of_draw_square 2150  
         ??_initialisation_des_ports 0085                  __end_of_draw_string 1DDE  
                     ?_delai_us_char 0001                     ___lwdiv@dividend 0001  
                          __pintcode 0008                       ??_vitesseAdmin 0003  
                           ?___awdiv 0007                             ?___awmod 0001  
                           ?___lwdiv 0001                             ?_charger 0001  
                  _pointeur_de_tache 000070                            _draw_dec8 1CB6  
                          _draw_char 2282                            _draw_hex8 1F5C  
                           ?_command 0001                       _wait_status_ok 2062  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 2388  
                 write_c_aff@command 0001                            _goto_lico 1FB8  
    __end_of_lecture_8bit_analogique 2282                       ___wmul@product 0005  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
  __end_of_initialisation_du_systeme 1714                             _LATGbits 000F8F  
                           _LATJbits 000F91                             i2u140_40 19FC  
                           i2u222_40 1F26                             i2u150_40 1A38  
                           i2u142_40 1A08                             i2u134_40 19D8  
                           i2u231_40 1D7C                             i2u231_47 1D72  
                           i2u216_40 1EAE                             i2u160_40 1A74  
                           i2u152_40 1A44                             i2u144_40 1A14  
                           i2u136_40 19E4                             i2u233_40 1DAE  
                           i2u233_47 1DA4                             i2u313_47 1218  
                           i2u154_40 1A50                             i2u146_40 1A20  
                           i2u138_40 19F0                             i2u314_47 1254  
                           i2u235_40 1DD6                             i2u251_40 1E18  
                           i2u171_40 1838                             i2u235_47 1DCC  
                           i2u156_40 1A5C                             i2u148_40 1A2C  
                           i2u181_40 1874                             i2u173_40 1844  
                           i2u165_40 1814                         ??_clear_line 000F  
                           i2u158_40 1A68                             i2u191_40 18B0  
                           i2u183_40 1880                             i2u175_40 1850  
                           i2u167_40 1820                             i2u185_40 188C  
                           i2u177_40 185C                             i2u169_40 182C  
                           _PIR1bits 000F9E                             i2u282_40 1332  
                           i2u275_40 2032                             i2u187_40 1898  
                           i2u179_40 1868                             i2u189_40 18A4  
                       ??_clear_text 0009                             _POSTINC0 000FEE  
                           _POSTINC1 000FE6                    _STATUS_TEMPORAIRE 000061  
             __end_of_wait_status_ok 20B4                          ??_d1command 0006  
                         ?_draw_dec8 0001                           ?_draw_char 0001  
                        ??_d2command 0007                           ?_draw_hex8 0001  
                         _ADCON0bits 000FC2                    ___wmul@multiplier 0001  
                   clear_line@column 0010                          _draw_square 2104  
                        _draw_string 1D52                         _Val_sem_rxtx 003F  
                           _TP_appui 000066                   __end_of_clear_line 23EC  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 22E4                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           _Personne 000082                             __Lrparam 0000  
   __end_of_initialisation_afficheur 1B66                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009              _fonction_d_interruption 0008  
                    _lecture_normale 1C14                             _batterie 000074  
                    ___lwdiv@divisor 0003     __end_of_initialisation_des_ports 224C  
                    ___lwdiv@counter 0007                             __ptext10 18EE  
                           __ptext11 1714                             __ptext20 2388  
                           __ptext12 246C                             __ptext21 2104  
                           __ptext13 2010                             __ptext30 22E4  
                           __ptext22 1B66                             __ptext14 10DA  
                           __ptext31 249C                             __ptext23 2406  
                           __ptext15 1DDE                             __ptext40 24C4  
                           __ptext32 1FB8                             __ptext24 1EEC  
                           __ptext16 2484                             __ptext41 219A  
                           __ptext33 20B4                             __ptext25 1F5C  
                           __ptext17 224C                             __ptext42 2340  
                           __ptext34 1D52                             __ptext26 1CB6  
                           __ptext18 1A9A                             __ptext43 1E68  
                           __ptext35 21DA                             __ptext27 22B4  
                           __ptext19 2314                             __ptext44 0000  
                           __ptext36 2420                             __ptext28 23CC  
                           __ptext37 243A                             __ptext29 2282  
                           __ptext38 2062                             __ptext39 23AA  
               __end_of_vitesseAdmin 1E68                             isa$xinst 000000  
                           _tp_delai 246C                    ??_check_status_ok 0001  
                  Diminution@vitesse 0001                          ??_draw_dec8 000F  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_init_rxtx 0001  
                        ??_goto_lico 000A                             intlevel2 0000  
                           plot1@add 0012                       goto_lico@ligne 000C  
            __end_of_lecture_normale 1CB6                         d1command@cmd 0005  
                       d1command@res 0007            ??_fonction_d_interruption 001D  
                       tp_delai@itpd 0001                          d1command@d1 0006  
                __end_of_write_c_aff 2454                  __end_of_write_d_aff 243A  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
