

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 23 14:11:03 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57                           	dabs	1,0x603,1,_STKPTR_T6
    58                           	dabs	1,0x503,1,_STKPTR_T5
    59                           	dabs	1,0x403,1,_STKPTR_T4
    60                           	dabs	1,0x303,1,_STKPTR_T3
    61                           	dabs	1,0x203,1,_STKPTR_T2
    62                           	dabs	1,0x103,1,_STKPTR_T1
    63                           	dabs	1,0x60,1,_W_TEMPORAIRE
    64                           	dabs	1,0x100,66,_contexte1
    65                           	dabs	1,0x69,6,_queue
    66                           	dabs	1,0x71,2,_Tick_Count
    67                           	dabs	1,0x83,1,_Valeur
    68                           	dabs	1,0x82,1,_Operator
    69                           	dabs	1,0x81,1,_TEST
    70                           	dabs	1,0x80,1,_RXTX_libre
    71                           	dabs	1,0x7F,1,_n_octet_badge
    72                           	dabs	1,0x74,1,_batterie
    73                           	dabs	1,0x73,1,_vitesse
    74                           	dabs	1,0x70,1,_pointeur_de_tache
    75                           	dabs	1,0x6F,1,_tache_active
    76                           	dabs	1,0x68,1,_TP_y
    77                           	dabs	1,0x67,1,_TP_x
    78                           	dabs	1,0x66,1,_TP_appui
    79                           	dabs	1,0x65,1,_DEMARRAGE
    80                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    81                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    82                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    83                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    84                           	dabs	1,0x75,10,_badge
    85                           	dabs	1,0x200,66,_contexte2
    86                           	dabs	1,0x300,66,_contexte3
    87                           	dabs	1,0x400,66,_contexte4
    88                           	dabs	1,0x500,66,_contexte5
    89                           	dabs	1,0x600,66,_contexte6
    90   000000                     
    91                           ; Generated 06/04/2022 GMT
    92                           ; 
    93                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F87K22 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125   000000                     
   126 ;;Init@sem	offset=-1 (param)
   127 ;;Init@sem	offset=-1 (param)
   128   000000                     _TMR0	set	4054
   129   000000                     _TOSU	set	4095
   130   000000                     _TOSH	set	4094
   131   000000                     _TOSL	set	4093
   132   000000                     _TABLAT	set	4085
   133   000000                     _TBLPTRL	set	4086
   134   000000                     _TBLPTRH	set	4087
   135   000000                     _TBLPTRU	set	4088
   136   000000                     _PRODL	set	4083
   137   000000                     _PRODH	set	4084
   138   000000                     _FSR2L	set	4057
   139   000000                     _FSR2H	set	4058
   140   000000                     _FSR1L	set	4065
   141   000000                     _FSR1H	set	4066
   142   000000                     _STKPTR	set	4092
   143   000000                     _FSR0L	set	4073
   144   000000                     _FSR0H	set	4074
   145   000000                     _BSR	set	4064
   146   000000                     _WREG	set	4072
   147   000000                     _STATUS	set	4056
   148                           
   149                           ; 1 bytes @ 0x21
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 6 in file "main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels required when called: 8
   175 ;; This function calls:
   176 ;;		_Init
   177 ;;		_initialisation_des_ports
   178 ;;		_initialisation_du_systeme
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185   0022C6                     __ptext0:
   186                           	callstack 0
   187   000000                     _T0IF	set	32658
   188   000000                     _INTCON2bits	set	4081
   189   0022C6                     _main:
   190                           	callstack 23
   191                           
   192                           ;main.c: 8: initialisation_des_ports();
   193                           
   194                           ;incstack = 0
   195   0022C6  EC8A  F010         	call	_initialisation_des_ports	;wreg free
   196                           
   197                           ;main.c: 9: initialisation_du_systeme();
   198   0022CA  EC26  F00A         	call	_initialisation_du_systeme	;wreg free
   199                           
   200                           ;main.c: 10: Init(1);
   201   0022CE  0E01               	movlw	1
   202   0022D0  6EE6               	movwf	postinc1,c
   203   0022D2  EC20  F011         	call	_Init	;wreg free
   204                           
   205                           ;main.c: 13: T0CONbits.TMR0ON=1;
   206   0022D6  8ED5               	bsf	213,7,c	;volatile
   207                           
   208                           ;main.c: 14: T0IF=1;
   209   0022D8  84F2               	bsf	4082,2,c	;volatile
   210                           
   211                           ;main.c: 15: (INTCONbits.GIE = 1);
   212   0022DA  8EF2               	bsf	242,7,c	;volatile
   213   0022DC                     l4973:
   214                           
   215                           ;main.c: 19: __nop();
   216   0022DC  F000               	nop	
   217   0022DE  D7FE               	goto	l4973
   218   0022E0                     __end_of_main:
   219                           	callstack 0
   220                           
   221                           	psect	nvCOMRAM
   222   00002E                     __pnvCOMRAM:
   223                           	callstack 0
   224   00002E                     _fptr:
   225                           	callstack 0
   226   00002E                     	ds	3
   227   000031                     _puc:
   228                           	callstack 0
   229   000031                     	ds	2
   230   000033                     _val_tos:
   231                           	callstack 0
   232   000033                     	ds	2
   233   000000                     _ANCON1bits	set	3876
   234   000000                     _ANCON0bits	set	3877
   235   000000                     _TXSTA1	set	4012
   236   000000                     _LATJ	set	3985
   237   000000                     _T0CON	set	4053
   238   000000                     _ADCON0bits	set	4034
   239   000000                     _INTCONbits	set	4082
   240   000000                     _T0IE	set	32661
   241   000000                     _ANCON2	set	3875
   242   000000                     _ANCON1	set	3876
   243   000000                     _ANCON0	set	3877
   244   000000                     _MEMCON	set	3878
   245   000000                     _T0CONbits	set	4053
   246   000000                     _PADCFG1bits	set	3923
   247   000000                     _LATCbits	set	3979
   248   000000                     _LATDbits	set	3980
   249   000000                     _LATGbits	set	3983
   250   000000                     _LATJbits	set	3985
   251   000000                     _LATH	set	3984
   252   000000                     _TRISCbits	set	3988
   253   000000                     _TRISDbits	set	3989
   254   000000                     _TRISGbits	set	3992
   255   000000                     _TRISJ	set	3994
   256   000000                     _TRISH	set	3993
   257   000000                     _PIR1bits	set	3998
   258   000000                     _TXREG1	set	4013
   259   000000                     _ADCON2	set	4032
   260   000000                     _ADCON1	set	4033
   261   000000                     _BAUDCON1	set	3941
   262   000000                     _PORTBbits	set	3969
   263   000000                     _SPBRGH1	set	4052
   264   000000                     _ADRESH	set	4036
   265   000000                     _ADRESL	set	4035
   266   000000                     _ADCON0	set	4034
   267   000000                     _POSTINC0	set	4078
   268   000000                     _POSTINC1	set	4070
   269   000000                     _PCLATH	set	4090
   270   000000                     _PCLATU	set	4091
   271   000000                     _SPBRG1	set	4015
   272   000000                     _PORTDbits	set	3971
   273   000000                     _PORTEbits	set	3972
   274   000000                     _PORTH	set	3975
   275   000000                     _RCSTA1	set	4011
   276   000000                     _TXSTA1bits	set	4012
   277                           
   278                           	psect	smallconst
   279   001000                     __psmallconst:
   280                           	callstack 0
   281   001000  00                 	db	0
   282   001001                     STR_22:
   283   001001  41                 	db	65	;'A'
   284   001002  54                 	db	84	;'T'
   285   001003  54                 	db	84	;'T'
   286   001004  45                 	db	69	;'E'
   287   001005  4E                 	db	78	;'N'
   288   001006  54                 	db	84	;'T'
   289   001007  49                 	db	73	;'I'
   290   001008  4F                 	db	79	;'O'
   291   001009  4E                 	db	78	;'N'
   292   00100A  20                 	db	32
   293   00100B  76                 	db	118	;'v'
   294   00100C  6F                 	db	111	;'o'
   295   00100D  75                 	db	117	;'u'
   296   00100E  73                 	db	115	;'s'
   297   00100F  20                 	db	32
   298   001010  65                 	db	101	;'e'
   299   001011  74                 	db	116	;'t'
   300   001012  65                 	db	101	;'e'
   301   001013  73                 	db	115	;'s'
   302   001014  20                 	db	32
   303   001015  70                 	db	112	;'p'
   304   001016  6C                 	db	108	;'l'
   305   001017  65                 	db	101	;'e'
   306   001018  69                 	db	105	;'i'
   307   001019  6E                 	db	110	;'n'
   308   00101A  21                 	db	33
   309   00101B  21                 	db	33
   310   00101C  21                 	db	33
   311   00101D  00                 	db	0
   312   00101E                     STR_12:
   313   00101E  20                 	db	32
   314   00101F  41                 	db	65	;'A'
   315   001020  55                 	db	85	;'U'
   316   001021  43                 	db	67	;'C'
   317   001022  55                 	db	85	;'U'
   318   001023  4E                 	db	78	;'N'
   319   001024  20                 	db	32
   320   001025  20                 	db	32
   321   001026  20                 	db	32
   322   001027  20                 	db	32
   323   001028  20                 	db	32
   324   001029  20                 	db	32
   325   00102A  20                 	db	32
   326   00102B  20                 	db	32
   327   00102C  20                 	db	32
   328   00102D  20                 	db	32
   329   00102E  20                 	db	32
   330   00102F  20                 	db	32
   331   001030  20                 	db	32
   332   001031  20                 	db	32
   333   001032  00                 	db	0
   334   001033                     STR_23:
   335   001033  52                 	db	82	;'R'
   336   001034  4F                 	db	79	;'O'
   337   001035  55                 	db	85	;'U'
   338   001036  45                 	db	69	;'E'
   339   001037  53                 	db	83	;'S'
   340   001038  42                 	db	66	;'B'
   341   001039  59                 	db	89	;'Y'
   342   00103A  47                 	db	71	;'G'
   343   00103B  4E                 	db	78	;'N'
   344   00103C  4F                 	db	79	;'O'
   345   00103D  4C                 	db	76	;'L'
   346   00103E  45                 	db	69	;'E'
   347   00103F  53                 	db	83	;'S'
   348   001040  00                 	db	0
   349   001041                     STR_7:
   350   001041  54                 	db	84	;'T'
   351   001042  65                 	db	101	;'e'
   352   001043  6D                 	db	109	;'m'
   353   001044  70                 	db	112	;'p'
   354   001045  2E                 	db	46
   355   001046  20                 	db	32
   356   001047  48                 	db	72	;'H'
   357   001048  75                 	db	117	;'u'
   358   001049  69                 	db	105	;'i'
   359   00104A  6C                 	db	108	;'l'
   360   00104B  65                 	db	101	;'e'
   361   00104C  3A                 	db	58	;':'
   362   00104D  00                 	db	0
   363   00104E                     STR_16:
   364   00104E  58                 	db	88	;'X'
   365   00104F  2D                 	db	45
   366   001050  4A                 	db	74	;'J'
   367   001051  6F                 	db	111	;'o'
   368   001052  79                 	db	121	;'y'
   369   001053  73                 	db	115	;'s'
   370   001054  74                 	db	116	;'t'
   371   001055  69                 	db	105	;'i'
   372   001056  63                 	db	99	;'c'
   373   001057  6B                 	db	107	;'k'
   374   001058  3A                 	db	58	;':'
   375   001059  00                 	db	0
   376   00105A                     STR_17:
   377   00105A  59                 	db	89	;'Y'
   378   00105B  2D                 	db	45
   379   00105C  4A                 	db	74	;'J'
   380   00105D  6F                 	db	111	;'o'
   381   00105E  79                 	db	121	;'y'
   382   00105F  73                 	db	115	;'s'
   383   001060  74                 	db	116	;'t'
   384   001061  69                 	db	105	;'i'
   385   001062  63                 	db	99	;'c'
   386   001063  6B                 	db	107	;'k'
   387   001064  3A                 	db	58	;':'
   388   001065  00                 	db	0
   389   001066                     STR_6:
   390   001066  54                 	db	84	;'T'
   391   001067  65                 	db	101	;'e'
   392   001068  6D                 	db	109	;'m'
   393   001069  70                 	db	112	;'p'
   394   00106A  2E                 	db	46
   395   00106B  20                 	db	32
   396   00106C  45                 	db	69	;'E'
   397   00106D  61                 	db	97	;'a'
   398   00106E  75                 	db	117	;'u'
   399   00106F  3A                 	db	58	;':'
   400   001070  00                 	db	0
   401   001071                     STR_10:
   402   001071  42                 	db	66	;'B'
   403   001072  61                 	db	97	;'a'
   404   001073  74                 	db	116	;'t'
   405   001074  74                 	db	116	;'t'
   406   001075  65                 	db	101	;'e'
   407   001076  72                 	db	114	;'r'
   408   001077  69                 	db	105	;'i'
   409   001078  65                 	db	101	;'e'
   410   001079  3A                 	db	58	;':'
   411   00107A  00                 	db	0
   412   00107B                     STR_9:
   413   00107B  56                 	db	86	;'V'
   414   00107C  69                 	db	105	;'i'
   415   00107D  74                 	db	116	;'t'
   416   00107E  65                 	db	101	;'e'
   417   00107F  73                 	db	115	;'s'
   418   001080  73                 	db	115	;'s'
   419   001081  65                 	db	101	;'e'
   420   001082  3A                 	db	58	;':'
   421   001083  00                 	db	0
   422   001084                     STR_13:
   423   001084  4F                 	db	79	;'O'
   424   001085  70                 	db	112	;'p'
   425   001086  65                 	db	101	;'e'
   426   001087  72                 	db	114	;'r'
   427   001088  61                 	db	97	;'a'
   428   001089  74                 	db	116	;'t'
   429   00108A  6F                 	db	111	;'o'
   430   00108B  72                 	db	114	;'r'
   431   00108C  00                 	db	0
   432   00108D                     STR_1:
   433   00108D  4D                 	db	77	;'M'
   434   00108E  61                 	db	97	;'a'
   435   00108F  72                 	db	114	;'r'
   436   001090  63                 	db	99	;'c'
   437   001091  68                 	db	104	;'h'
   438   001092  65                 	db	101	;'e'
   439   001093  3A                 	db	58	;':'
   440   001094  00                 	db	0
   441   001095                     STR_11:
   442   001095  42                 	db	66	;'B'
   443   001096  61                 	db	97	;'a'
   444   001097  64                 	db	100	;'d'
   445   001098  67                 	db	103	;'g'
   446   001099  65                 	db	101	;'e'
   447   00109A  3A                 	db	58	;':'
   448   00109B  00                 	db	0
   449   00109C                     STR_5:
   450   00109C  53                 	db	83	;'S'
   451   00109D  69                 	db	105	;'i'
   452   00109E  65                 	db	101	;'e'
   453   00109F  67                 	db	103	;'g'
   454   0010A0  65                 	db	101	;'e'
   455   0010A1  3A                 	db	58	;':'
   456   0010A2  00                 	db	0
   457   0010A3                     STR_19:
   458   0010A3  43                 	db	67	;'C'
   459   0010A4  48                 	db	72	;'H'
   460   0010A5  41                 	db	65	;'A'
   461   0010A6  52                 	db	82	;'R'
   462   0010A7  47                 	db	71	;'G'
   463   0010A8  45                 	db	69	;'E'
   464   0010A9  00                 	db	0
   465   0010AA                     STR_14:
   466   0010AA  20                 	db	32
   467   0010AB  41                 	db	65	;'A'
   468   0010AC  44                 	db	68	;'D'
   469   0010AD  4D                 	db	77	;'M'
   470   0010AE  49                 	db	73	;'I'
   471   0010AF  4E                 	db	78	;'N'
   472   0010B0  00                 	db	0
   473   0010B1                     STR_24:
   474   0010B1  28                 	db	40
   475   0010B2  28                 	db	40
   476   0010B3  21                 	db	33
   477   0010B4  29                 	db	41
   478   0010B5  29                 	db	41
   479   0010B6  00                 	db	0
   480   0010B7                     STR_8:
   481   0010B7  43                 	db	67	;'C'
   482   0010B8  68                 	db	104	;'h'
   483   0010B9  6F                 	db	111	;'o'
   484   0010BA  63                 	db	99	;'c'
   485   0010BB  3A                 	db	58	;':'
   486   0010BC  00                 	db	0
   487   0010BD                     STR_15:
   488   0010BD  41                 	db	65	;'A'
   489   0010BE  55                 	db	85	;'U'
   490   0010BF  43                 	db	67	;'C'
   491   0010C0  55                 	db	85	;'U'
   492   0010C1  4E                 	db	78	;'N'
   493   0010C2  00                 	db	0
   494   0010C3                     STR_18:
   495   0010C3  56                 	db	86	;'V'
   496   0010C4  49                 	db	73	;'I'
   497   0010C5  44                 	db	68	;'D'
   498   0010C6  45                 	db	69	;'E'
   499   0010C7  00                 	db	0
   500   0010C8                     STR_21:
   501   0010C8  20                 	db	32
   502   0010C9  79                 	db	121	;'y'
   503   0010CA  3D                 	db	61	;'='
   504   0010CB  00                 	db	0
   505   0010CC                     STR_4:
   506   0010CC  4E                 	db	78	;'N'
   507   0010CD  20                 	db	32
   508   0010CE  00                 	db	0
   509   0010CF                     STR_20:
   510   0010CF  78                 	db	120	;'x'
   511   0010D0  3D                 	db	61	;'='
   512   0010D1  00                 	db	0
   513   0010D2                     STR_3:
   514   0010D2  41                 	db	65	;'A'
   515   0010D3  52                 	db	82	;'R'
   516   0010D4  00                 	db	0
   517   0010D5                     STR_2:
   518   0010D5  41                 	db	65	;'A'
   519   0010D6  56                 	db	86	;'V'
   520   0010D7  00                 	db	0
   521   0010D8  00                 	db	0	; dummy byte at the end
   522   000000                     
   523                           ; #config settings
   524                           
   525                           	psect	cinit
   526   00238E                     __pcinit:
   527                           	callstack 0
   528   00238E                     start_initialization:
   529                           	callstack 0
   530   00238E                     __initialization:
   531                           	callstack 0
   532                           
   533                           ; Clear objects allocated to COMRAM (5 bytes)
   534   00238E  6A39               	clrf	(__pbssCOMRAM+4)& (0+255),c
   535   002390  6A38               	clrf	(__pbssCOMRAM+3)& (0+255),c
   536   002392  6A37               	clrf	(__pbssCOMRAM+2)& (0+255),c
   537   002394  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   538   002396  6A35               	clrf	__pbssCOMRAM& (0+255),c
   539   002398                     end_of_initialization:
   540                           	callstack 0
   541   002398                     __end_of__initialization:
   542                           	callstack 0
   543   002398  0100               	movlb	0
   544   00239A  EF63  F011         	goto	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMRAM
   547   000035                     __pbssCOMRAM:
   548                           	callstack 0
   549   000035                     _tc:
   550                           	callstack 0
   551   000035                     	ds	3
   552   000038                     _Val_sem_rxtx:
   553                           	callstack 0
   554   000038                     	ds	1
   555   000039                     _Val_sem_cna:
   556                           	callstack 0
   557   000039                     	ds	1
   558                           
   559                           	psect	cstackCOMRAM
   560   000001                     __pcstackCOMRAM:
   561                           	callstack 0
   562   000001                     ?___awdiv:
   563                           	callstack 0
   564   000001                     ?___awmod:
   565                           	callstack 0
   566   000001                     ?___lwdiv:
   567                           	callstack 0
   568   000001                     lecture_8bit_analogique@ret:
   569                           	callstack 0
   570   000001                     write_d_aff@data:
   571                           	callstack 0
   572   000001                     write_c_aff@command:
   573                           	callstack 0
   574   000001                     check_status_ok@res:
   575                           	callstack 0
   576   000001                     delai_us_char@ucdelai:
   577                           	callstack 0
   578   000001                     tp_delai@itpd:
   579                           	callstack 0
   580   000001                     tache4@a:
   581                           	callstack 0
   582   000001                     tache5@a:
   583                           	callstack 0
   584   000001                     stid_delai_us@isdu:
   585                           	callstack 0
   586   000001                     ___awdiv@dividend:
   587                           	callstack 0
   588   000001                     ___awmod@dividend:
   589                           	callstack 0
   590   000001                     ___lwdiv@dividend:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x0
   594   000001                     	ds	1
   595   000002                     lecture_8bit_analogique@channel:
   596                           	callstack 0
   597   000002                     wait_status_ok@err:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x1
   601   000002                     	ds	1
   602   000003                     wait_status_ok@status:
   603                           	callstack 0
   604   000003                     lecture_normale@stid_id:
   605                           	callstack 0
   606   000003                     ___awdiv@divisor:
   607                           	callstack 0
   608   000003                     ___awmod@divisor:
   609                           	callstack 0
   610   000003                     ___lwdiv@divisor:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x2
   614   000003                     	ds	1
   615   000004                     wait_status_ok@res:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x3
   619   000004                     	ds	1
   620   000005                     command@cmd:
   621                           	callstack 0
   622   000005                     d1command@cmd:
   623                           	callstack 0
   624   000005                     d2command@d2:
   625                           	callstack 0
   626   000005                     lecture_normale@temps_attente:
   627                           	callstack 0
   628   000005                     ___awdiv@counter:
   629                           	callstack 0
   630   000005                     ___awmod@counter:
   631                           	callstack 0
   632   000005                     ___lwdiv@quotient:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x4
   636   000005                     	ds	1
   637   000006                     d1command@d1:
   638                           	callstack 0
   639   000006                     d2command@cmd:
   640                           	callstack 0
   641   000006                     lecture_normale@n_octet:
   642                           	callstack 0
   643   000006                     ___awdiv@sign:
   644                           	callstack 0
   645   000006                     ___awmod@sign:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0x5
   649   000006                     	ds	1
   650   000007                     d1command@res:
   651                           	callstack 0
   652   000007                     d2command@d1:
   653                           	callstack 0
   654   000007                     lecture_normale@n_bit:
   655                           	callstack 0
   656   000007                     ___lwdiv@counter:
   657                           	callstack 0
   658   000007                     ___awdiv@quotient:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x6
   662   000007                     	ds	1
   663   000008                     ??_tache2:
   664   000008                     d2command@res:
   665                           	callstack 0
   666   000008                     draw_char@dccar:
   667                           	callstack 0
   668   000008                     draw_hex8@octet:
   669                           	callstack 0
   670   000008                     lecture_normale@octet:
   671                           	callstack 0
   672   000008                     draw_string@tableau:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x7
   676   000008                     	ds	1
   677   000009                     ??_draw_dec8:
   678   000009                     tache6@n:
   679                           	callstack 0
   680   000009                     initialisation_afficheur@error_count:
   681                           	callstack 0
   682   000009                     draw_hex8@c:
   683                           	callstack 0
   684   000009                     goto_lico@colonne:
   685                           	callstack 0
   686   000009                     plot1@y:
   687                           	callstack 0
   688   000009                     clear_text@add:
   689                           	callstack 0
   690   000009                     clear_graphics@add:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x8
   694   000009                     	ds	1
   695   00000A                     ??_goto_lico:
   696   00000A                     ??_plot1:
   697   00000A                     draw_dec8@unit:
   698                           	callstack 0
   699   00000A                     tache2@ix:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x9
   703   00000A                     	ds	1
   704   00000B                     draw_dec8@octet:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0xA
   708   00000B                     	ds	1
   709   00000C                     draw_dec8@cent:
   710                           	callstack 0
   711   00000C                     goto_lico@ligne:
   712                           	callstack 0
   713   00000C                     tache2@iy:
   714                           	callstack 0
   715   00000C                     plot1@add:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0xB
   719   00000C                     	ds	1
   720   00000D                     draw_dec8@dix:
   721                           	callstack 0
   722   00000D                     goto_lico@adr:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0xC
   726   00000D                     	ds	1
   727   00000E                     tache2@hx:
   728                           	callstack 0
   729   00000E                     draw_dec8@c:
   730                           	callstack 0
   731   00000E                     plot1@x:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0xD
   735   00000E                     	ds	1
   736   00000F                     tache2@lx:
   737                           	callstack 0
   738   00000F                     clear_line@line:
   739                           	callstack 0
   740   00000F                     draw_square@y1:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0xE
   744   00000F                     	ds	1
   745   000010                     tache2@hy:
   746                           	callstack 0
   747   000010                     clear_line@column:
   748                           	callstack 0
   749   000010                     draw_square@x2:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0xF
   753   000010                     	ds	1
   754   000011                     tache2@ly:
   755                           	callstack 0
   756   000011                     draw_square@y2:
   757                           	callstack 0
   758                           
   759                           ; 1 bytes @ 0x10
   760   000011                     	ds	1
   761   000012                     draw_square@x1:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x11
   765   000012                     	ds	1
   766   000013                     draw_square@x:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x12
   770   000013                     	ds	1
   771   000014                     draw_square@y:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x13
   775   000014                     	ds	1
   776   000015                     ??_fonction_d_interruption:
   777                           
   778                           ; 1 bytes @ 0x14
   779   000015                     	ds	12
   780   000021                     initialisation_du_systeme@temp:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x20
   784   000021                     	ds	1
   785   000022                     
   786 ;; *************** function _initialisation_du_systeme *****************
   787 ;; Defined at:
   788 ;;		line 131 in file "systeme.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  temp            1   32[COMRAM] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;Total ram usage:        1 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 7
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_main
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text1
   817   00144C                     __ptext1:
   818                           	callstack 0
   819   00144C                     _initialisation_du_systeme:
   820                           	callstack 23
   821                           
   822                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   823                           
   824                           ;incstack = 0
   825   00144C  0E01               	movlw	1
   826   00144E  0100               	movlb	0	; () banked
   827   001450  6F65               	movwf	101,b
   828                           
   829                           ;systeme.c: 138: queue[0]=1;
   830   001452  0E01               	movlw	1
   831   001454  6F69               	movwf	105,b
   832                           
   833                           ;systeme.c: 139: queue[1]=2;
   834   001456  0E02               	movlw	2
   835   001458  6F6A               	movwf	106,b
   836                           
   837                           ;systeme.c: 140: queue[2]=3;
   838   00145A  0E03               	movlw	3
   839   00145C  6F6B               	movwf	107,b
   840                           
   841                           ;systeme.c: 141: queue[3]=4;
   842   00145E  0E04               	movlw	4
   843   001460  6F6C               	movwf	108,b
   844                           
   845                           ;systeme.c: 142: queue[4]=5;
   846   001462  0E05               	movlw	5
   847   001464  6F6D               	movwf	109,b
   848                           
   849                           ;systeme.c: 143: queue[5]=6;
   850   001466  0E06               	movlw	6
   851   001468  6F6E               	movwf	110,b
   852                           
   853                           ;systeme.c: 145: pointeur_de_tache=6-1;
   854   00146A  0E05               	movlw	5
   855   00146C  6F70               	movwf	112,b
   856                           
   857                           ; BSR set to: 0
   858                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   859   00146E  0E69               	movlw	105
   860   001470  2570               	addwf	112,w,b
   861   001472  6ED9               	movwf	fsr2l,c
   862   001474  6ADA               	clrf	fsr2h,c
   863   001476  0E00               	movlw	0
   864   001478  22DA               	addwfc	fsr2h,f,c
   865   00147A  50DF               	movf	indf2,w,c
   866   00147C  6F6F               	movwf	111,b
   867                           
   868                           ; BSR set to: 0
   869                           ;systeme.c: 151: temp=STKPTR;
   870   00147E  CFFC F021          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   871                           
   872                           ; BSR set to: 0
   873                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   874   001482  0E02               	movlw	2
   875   001484  6EFC               	movwf	252,c	;volatile
   876                           
   877                           ; BSR set to: 0
   878   001486  0EDA               	movlw	low _tache1
   879   001488  6E2E               	movwf	_fptr^0,c
   880   00148A  0E10               	movlw	high _tache1
   881   00148C  6E2F               	movwf	(_fptr+1)^0,c
   882   00148E  0E00               	movlw	low (_tache1 shr (0+16))
   883   001490  6E30               	movwf	(_fptr+2)^0,c
   884                           
   885                           ; BSR set to: 0
   886   001492  C02E  F033         	movff	_fptr,_val_tos
   887   001496  C02F  F034         	movff	_fptr+1,_val_tos+1
   888                           
   889                           ; BSR set to: 0
   890   00149A  0E33               	movlw	low _val_tos
   891   00149C  6E31               	movwf	_puc^0,c
   892   00149E  0E00               	movlw	high _val_tos
   893   0014A0  6E32               	movwf	(_puc+1)^0,c
   894                           
   895                           ; BSR set to: 0
   896   0014A2  C031  FFD9         	movff	_puc,fsr2l
   897   0014A6  C032  FFDA         	movff	_puc+1,fsr2h
   898   0014AA  50DF               	movf	indf2,w,c
   899   0014AC  6EFD               	movwf	253,c	;volatile
   900                           
   901                           ; BSR set to: 0
   902   0014AE  4A31               	infsnz	_puc^0,f,c
   903   0014B0  2A32               	incf	(_puc+1)^0,f,c
   904                           
   905                           ; BSR set to: 0
   906   0014B2  C031  FFD9         	movff	_puc,fsr2l
   907   0014B6  C032  FFDA         	movff	_puc+1,fsr2h
   908   0014BA  50DF               	movf	indf2,w,c
   909   0014BC  6EFE               	movwf	254,c	;volatile
   910                           
   911                           ; BSR set to: 0
   912   0014BE  4A31               	infsnz	_puc^0,f,c
   913   0014C0  2A32               	incf	(_puc+1)^0,f,c
   914                           
   915                           ; BSR set to: 0
   916   0014C2  C031  FFD9         	movff	_puc,fsr2l
   917   0014C6  C032  FFDA         	movff	_puc+1,fsr2h
   918   0014CA  50DF               	movf	indf2,w,c
   919   0014CC  6EFF               	movwf	255,c	;volatile
   920                           
   921                           ; BSR set to: 0
   922                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   923   0014CE  0E07               	movlw	7
   924   0014D0  6EFC               	movwf	252,c	;volatile
   925   0014D2  0E84               	movlw	low _tache2
   926   0014D4  6E2E               	movwf	_fptr^0,c
   927   0014D6  0E16               	movlw	high _tache2
   928   0014D8  6E2F               	movwf	(_fptr+1)^0,c
   929   0014DA  0E00               	movlw	low (_tache2 shr (0+16))
   930   0014DC  6E30               	movwf	(_fptr+2)^0,c
   931                           
   932                           ; BSR set to: 0
   933   0014DE  C02E  F033         	movff	_fptr,_val_tos
   934   0014E2  C02F  F034         	movff	_fptr+1,_val_tos+1
   935   0014E6  0E33               	movlw	low _val_tos
   936   0014E8  6E31               	movwf	_puc^0,c
   937   0014EA  0E00               	movlw	high _val_tos
   938   0014EC  6E32               	movwf	(_puc+1)^0,c
   939                           
   940                           ; BSR set to: 0
   941   0014EE  C031  FFD9         	movff	_puc,fsr2l
   942   0014F2  C032  FFDA         	movff	_puc+1,fsr2h
   943   0014F6  50DF               	movf	indf2,w,c
   944   0014F8  6EFD               	movwf	253,c	;volatile
   945                           
   946                           ; BSR set to: 0
   947   0014FA  4A31               	infsnz	_puc^0,f,c
   948   0014FC  2A32               	incf	(_puc+1)^0,f,c
   949                           
   950                           ; BSR set to: 0
   951   0014FE  C031  FFD9         	movff	_puc,fsr2l
   952   001502  C032  FFDA         	movff	_puc+1,fsr2h
   953   001506  50DF               	movf	indf2,w,c
   954   001508  6EFE               	movwf	254,c	;volatile
   955                           
   956                           ; BSR set to: 0
   957   00150A  4A31               	infsnz	_puc^0,f,c
   958   00150C  2A32               	incf	(_puc+1)^0,f,c
   959                           
   960                           ; BSR set to: 0
   961   00150E  C031  FFD9         	movff	_puc,fsr2l
   962   001512  C032  FFDA         	movff	_puc+1,fsr2h
   963   001516  50DF               	movf	indf2,w,c
   964   001518  6EFF               	movwf	255,c	;volatile
   965                           
   966                           ; BSR set to: 0
   967                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   968   00151A  0E0C               	movlw	12
   969   00151C  6EFC               	movwf	252,c	;volatile
   970                           
   971                           ; BSR set to: 0
   972   00151E  0E5E               	movlw	low _tache3
   973   001520  6E2E               	movwf	_fptr^0,c
   974   001522  0E18               	movlw	high _tache3
   975   001524  6E2F               	movwf	(_fptr+1)^0,c
   976   001526  0E00               	movlw	low (_tache3 shr (0+16))
   977   001528  6E30               	movwf	(_fptr+2)^0,c
   978                           
   979                           ; BSR set to: 0
   980   00152A  C02E  F033         	movff	_fptr,_val_tos
   981   00152E  C02F  F034         	movff	_fptr+1,_val_tos+1
   982                           
   983                           ; BSR set to: 0
   984   001532  0E33               	movlw	low _val_tos
   985   001534  6E31               	movwf	_puc^0,c
   986   001536  0E00               	movlw	high _val_tos
   987   001538  6E32               	movwf	(_puc+1)^0,c
   988                           
   989                           ; BSR set to: 0
   990   00153A  C031  FFD9         	movff	_puc,fsr2l
   991   00153E  C032  FFDA         	movff	_puc+1,fsr2h
   992   001542  50DF               	movf	indf2,w,c
   993   001544  6EFD               	movwf	253,c	;volatile
   994                           
   995                           ; BSR set to: 0
   996   001546  4A31               	infsnz	_puc^0,f,c
   997   001548  2A32               	incf	(_puc+1)^0,f,c
   998                           
   999                           ; BSR set to: 0
  1000   00154A  C031  FFD9         	movff	_puc,fsr2l
  1001   00154E  C032  FFDA         	movff	_puc+1,fsr2h
  1002   001552  50DF               	movf	indf2,w,c
  1003   001554  6EFE               	movwf	254,c	;volatile
  1004                           
  1005                           ; BSR set to: 0
  1006   001556  4A31               	infsnz	_puc^0,f,c
  1007   001558  2A32               	incf	(_puc+1)^0,f,c
  1008                           
  1009                           ; BSR set to: 0
  1010   00155A  C031  FFD9         	movff	_puc,fsr2l
  1011   00155E  C032  FFDA         	movff	_puc+1,fsr2h
  1012   001562  50DF               	movf	indf2,w,c
  1013   001564  6EFF               	movwf	255,c	;volatile
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1017   001566  0E11               	movlw	17
  1018   001568  6EFC               	movwf	252,c	;volatile
  1019   00156A  0E3C               	movlw	low _tache4
  1020   00156C  6E2E               	movwf	_fptr^0,c
  1021   00156E  0E19               	movlw	high _tache4
  1022   001570  6E2F               	movwf	(_fptr+1)^0,c
  1023   001572  0E00               	movlw	low (_tache4 shr (0+16))
  1024   001574  6E30               	movwf	(_fptr+2)^0,c
  1025                           
  1026                           ; BSR set to: 0
  1027   001576  C02E  F033         	movff	_fptr,_val_tos
  1028   00157A  C02F  F034         	movff	_fptr+1,_val_tos+1
  1029   00157E  0E33               	movlw	low _val_tos
  1030   001580  6E31               	movwf	_puc^0,c
  1031   001582  0E00               	movlw	high _val_tos
  1032   001584  6E32               	movwf	(_puc+1)^0,c
  1033                           
  1034                           ; BSR set to: 0
  1035   001586  C031  FFD9         	movff	_puc,fsr2l
  1036   00158A  C032  FFDA         	movff	_puc+1,fsr2h
  1037   00158E  50DF               	movf	indf2,w,c
  1038   001590  6EFD               	movwf	253,c	;volatile
  1039                           
  1040                           ; BSR set to: 0
  1041   001592  4A31               	infsnz	_puc^0,f,c
  1042   001594  2A32               	incf	(_puc+1)^0,f,c
  1043                           
  1044                           ; BSR set to: 0
  1045   001596  C031  FFD9         	movff	_puc,fsr2l
  1046   00159A  C032  FFDA         	movff	_puc+1,fsr2h
  1047   00159E  50DF               	movf	indf2,w,c
  1048   0015A0  6EFE               	movwf	254,c	;volatile
  1049                           
  1050                           ; BSR set to: 0
  1051   0015A2  4A31               	infsnz	_puc^0,f,c
  1052   0015A4  2A32               	incf	(_puc+1)^0,f,c
  1053                           
  1054                           ; BSR set to: 0
  1055   0015A6  C031  FFD9         	movff	_puc,fsr2l
  1056   0015AA  C032  FFDA         	movff	_puc+1,fsr2h
  1057   0015AE  50DF               	movf	indf2,w,c
  1058   0015B0  6EFF               	movwf	255,c	;volatile
  1059                           
  1060                           ; BSR set to: 0
  1061                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1062   0015B2  0E16               	movlw	22
  1063   0015B4  6EFC               	movwf	252,c	;volatile
  1064                           
  1065                           ; BSR set to: 0
  1066   0015B6  0E78               	movlw	low _tache5
  1067   0015B8  6E2E               	movwf	_fptr^0,c
  1068   0015BA  0E17               	movlw	high _tache5
  1069   0015BC  6E2F               	movwf	(_fptr+1)^0,c
  1070   0015BE  0E00               	movlw	low (_tache5 shr (0+16))
  1071   0015C0  6E30               	movwf	(_fptr+2)^0,c
  1072                           
  1073                           ; BSR set to: 0
  1074   0015C2  C02E  F033         	movff	_fptr,_val_tos
  1075   0015C6  C02F  F034         	movff	_fptr+1,_val_tos+1
  1076                           
  1077                           ; BSR set to: 0
  1078   0015CA  0E33               	movlw	low _val_tos
  1079   0015CC  6E31               	movwf	_puc^0,c
  1080   0015CE  0E00               	movlw	high _val_tos
  1081   0015D0  6E32               	movwf	(_puc+1)^0,c
  1082                           
  1083                           ; BSR set to: 0
  1084   0015D2  C031  FFD9         	movff	_puc,fsr2l
  1085   0015D6  C032  FFDA         	movff	_puc+1,fsr2h
  1086   0015DA  50DF               	movf	indf2,w,c
  1087   0015DC  6EFD               	movwf	253,c	;volatile
  1088                           
  1089                           ; BSR set to: 0
  1090   0015DE  4A31               	infsnz	_puc^0,f,c
  1091   0015E0  2A32               	incf	(_puc+1)^0,f,c
  1092                           
  1093                           ; BSR set to: 0
  1094   0015E2  C031  FFD9         	movff	_puc,fsr2l
  1095   0015E6  C032  FFDA         	movff	_puc+1,fsr2h
  1096   0015EA  50DF               	movf	indf2,w,c
  1097   0015EC  6EFE               	movwf	254,c	;volatile
  1098                           
  1099                           ; BSR set to: 0
  1100   0015EE  4A31               	infsnz	_puc^0,f,c
  1101   0015F0  2A32               	incf	(_puc+1)^0,f,c
  1102                           
  1103                           ; BSR set to: 0
  1104   0015F2  C031  FFD9         	movff	_puc,fsr2l
  1105   0015F6  C032  FFDA         	movff	_puc+1,fsr2h
  1106   0015FA  50DF               	movf	indf2,w,c
  1107   0015FC  6EFF               	movwf	255,c	;volatile
  1108                           
  1109                           ; BSR set to: 0
  1110                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1111   0015FE  0E1B               	movlw	27
  1112   001600  6EFC               	movwf	252,c	;volatile
  1113   001602  0E90               	movlw	low _tache6
  1114   001604  6E2E               	movwf	_fptr^0,c
  1115   001606  0E20               	movlw	high _tache6
  1116   001608  6E2F               	movwf	(_fptr+1)^0,c
  1117   00160A  0E00               	movlw	low (_tache6 shr (0+16))
  1118   00160C  6E30               	movwf	(_fptr+2)^0,c
  1119                           
  1120                           ; BSR set to: 0
  1121   00160E  C02E  F033         	movff	_fptr,_val_tos
  1122   001612  C02F  F034         	movff	_fptr+1,_val_tos+1
  1123   001616  0E33               	movlw	low _val_tos
  1124   001618  6E31               	movwf	_puc^0,c
  1125   00161A  0E00               	movlw	high _val_tos
  1126   00161C  6E32               	movwf	(_puc+1)^0,c
  1127                           
  1128                           ; BSR set to: 0
  1129   00161E  C031  FFD9         	movff	_puc,fsr2l
  1130   001622  C032  FFDA         	movff	_puc+1,fsr2h
  1131   001626  50DF               	movf	indf2,w,c
  1132   001628  6EFD               	movwf	253,c	;volatile
  1133                           
  1134                           ; BSR set to: 0
  1135   00162A  4A31               	infsnz	_puc^0,f,c
  1136   00162C  2A32               	incf	(_puc+1)^0,f,c
  1137                           
  1138                           ; BSR set to: 0
  1139   00162E  C031  FFD9         	movff	_puc,fsr2l
  1140   001632  C032  FFDA         	movff	_puc+1,fsr2h
  1141   001636  50DF               	movf	indf2,w,c
  1142   001638  6EFE               	movwf	254,c	;volatile
  1143                           
  1144                           ; BSR set to: 0
  1145   00163A  4A31               	infsnz	_puc^0,f,c
  1146   00163C  2A32               	incf	(_puc+1)^0,f,c
  1147                           
  1148                           ; BSR set to: 0
  1149   00163E  C031  FFD9         	movff	_puc,fsr2l
  1150   001642  C032  FFDA         	movff	_puc+1,fsr2h
  1151   001646  50DF               	movf	indf2,w,c
  1152   001648  6EFF               	movwf	255,c	;volatile
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;systeme.c: 162: STKPTR=temp;
  1156   00164A  C021  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;systeme.c: 165: STKPTR_T1=2;
  1160   00164E  0E02               	movlw	2
  1161   001650  0101               	movlb	1	; () banked
  1162   001652  6F03               	movwf	3,b
  1163                           
  1164                           ; BSR set to: 1
  1165                           ;systeme.c: 166: STKPTR_T2=7;
  1166   001654  0E07               	movlw	7
  1167   001656  0102               	movlb	2	; () banked
  1168   001658  6F03               	movwf	3,b
  1169                           
  1170                           ; BSR set to: 2
  1171                           ;systeme.c: 167: STKPTR_T3=12;
  1172   00165A  0E0C               	movlw	12
  1173   00165C  0103               	movlb	3	; () banked
  1174   00165E  6F03               	movwf	3,b
  1175                           
  1176                           ; BSR set to: 3
  1177                           ;systeme.c: 168: STKPTR_T4=17;
  1178   001660  0E11               	movlw	17
  1179   001662  0104               	movlb	4	; () banked
  1180   001664  6F03               	movwf	3,b
  1181                           
  1182                           ; BSR set to: 4
  1183                           ;systeme.c: 169: STKPTR_T5=22;
  1184   001666  0E16               	movlw	22
  1185   001668  0105               	movlb	5	; () banked
  1186   00166A  6F03               	movwf	3,b
  1187                           
  1188                           ; BSR set to: 5
  1189                           ;systeme.c: 170: STKPTR_T6=27;
  1190   00166C  0E1B               	movlw	27
  1191   00166E  0106               	movlb	6	; () banked
  1192   001670  6F03               	movwf	3,b
  1193                           
  1194                           ; BSR set to: 6
  1195                           ;systeme.c: 173: Tick_Count=0;
  1196   001672  0E00               	movlw	0
  1197   001674  0100               	movlb	0	; () banked
  1198   001676  6F72               	movwf	114,b
  1199   001678  0E00               	movlw	0
  1200   00167A  6F71               	movwf	113,b
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;systeme.c: 175: T0CON=0x01;
  1204   00167C  0E01               	movlw	1
  1205   00167E  6ED5               	movwf	213,c	;volatile
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;systeme.c: 176: T0IE=1;
  1209   001680  8AF2               	bsf	4082,5,c	;volatile
  1210                           
  1211                           ; BSR set to: 0
  1212   001682  0012               	return		;funcret
  1213   001684                     __end_of_initialisation_du_systeme:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _initialisation_des_ports *****************
  1217 ;; Defined at:
  1218 ;;		line 23 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 7
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text2
  1247   002114                     __ptext2:
  1248                           	callstack 0
  1249   002114                     _initialisation_des_ports:
  1250                           	callstack 23
  1251                           
  1252                           ;main.c: 26: MEMCON=0xA0;
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;incstack = 0
  1256   002114  0EA0               	movlw	160
  1257   002116  010F               	movlb	15	; () banked
  1258   002118  6F26               	movwf	38,b	;volatile
  1259                           
  1260                           ;main.c: 29: ANCON0=0x00;
  1261   00211A  0E00               	movlw	0
  1262   00211C  6F25               	movwf	37,b	;volatile
  1263                           
  1264                           ;main.c: 30: ANCON1=0x00;
  1265   00211E  0E00               	movlw	0
  1266   002120  6F24               	movwf	36,b	;volatile
  1267                           
  1268                           ;main.c: 31: ANCON2=0x00;
  1269   002122  0E00               	movlw	0
  1270   002124  6F23               	movwf	35,b	;volatile
  1271                           
  1272                           ; BSR set to: 15
  1273                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1274   002126  8125               	bsf	37,0,b	;volatile
  1275                           
  1276                           ; BSR set to: 15
  1277                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1278   002128  8325               	bsf	37,1,b	;volatile
  1279                           
  1280                           ; BSR set to: 15
  1281                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1282   00212A  8525               	bsf	37,2,b	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1286   00212C  8725               	bsf	37,3,b	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1290   00212E  8524               	bsf	36,2,b	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1294   002130  8724               	bsf	36,3,b	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;main.c: 41: LATCbits.LATC2=1;
  1298   002132  848B               	bsf	139,2,c	;volatile
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;main.c: 42: LATCbits.LATC1=1;
  1302   002134  828B               	bsf	139,1,c	;volatile
  1303                           
  1304                           ; BSR set to: 15
  1305                           ;main.c: 43: LATGbits.LATG0=1;
  1306   002136  808F               	bsf	143,0,c	;volatile
  1307                           
  1308                           ; BSR set to: 15
  1309                           ;main.c: 46: TRISCbits.TRISC2=0;
  1310   002138  9494               	bcf	148,2,c	;volatile
  1311                           
  1312                           ; BSR set to: 15
  1313                           ;main.c: 47: TRISCbits.TRISC1=0;
  1314   00213A  9294               	bcf	148,1,c	;volatile
  1315                           
  1316                           ; BSR set to: 15
  1317                           ;main.c: 48: TRISGbits.TRISG0=0;
  1318   00213C  9098               	bcf	152,0,c	;volatile
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;main.c: 49: TRISGbits.TRISG3=0;
  1322   00213E  9698               	bcf	152,3,c	;volatile
  1323                           
  1324                           ; BSR set to: 15
  1325                           ;main.c: 50: TRISGbits.TRISG4=0;
  1326   002140  9898               	bcf	152,4,c	;volatile
  1327                           
  1328                           ; BSR set to: 15
  1329                           ;main.c: 51: TRISDbits.TRISD2=0;
  1330   002142  9495               	bcf	149,2,c	;volatile
  1331                           
  1332                           ; BSR set to: 15
  1333                           ;main.c: 52: TRISDbits.TRISD3=0;
  1334   002144  9695               	bcf	149,3,c	;volatile
  1335                           
  1336                           ; BSR set to: 15
  1337                           ;main.c: 55: INTCON2bits.RBPU=0;
  1338   002146  9EF1               	bcf	241,7,c	;volatile
  1339                           
  1340                           ; BSR set to: 15
  1341                           ;main.c: 56: PADCFG1bits.REPU=1;
  1342   002148  8D53               	bsf	83,6,b	;volatile
  1343                           
  1344                           ; BSR set to: 15
  1345   00214A  0012               	return		;funcret
  1346   00214C                     __end_of_initialisation_des_ports:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function _Init *****************
  1350 ;; Defined at:
  1351 ;;		line 4 in file "semaphore.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  sem             1  [STACK] unsigned char 
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;                  1  [STACK] void 
  1358 ;; Registers used:
  1359 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used: 1
  1371 ;; Hardware stack levels required when called: 7
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_main
  1376 ;;		_tache1
  1377 ;; This function uses a reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text3
  1381   002240                     __ptext3:
  1382                           	callstack 0
  1383   002240                     _Init:
  1384                           	callstack 20
  1385                           
  1386                           ;semaphore.c: 6: switch (sem)
  1387                           
  1388                           ; BSR set to: 15
  1389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1390                           ;incstack = 0
  1391   002240  D006               	goto	l2787
  1392   002242                     l2783:
  1393                           
  1394                           ;semaphore.c: 9: Val_sem_cna=1;
  1395   002242  0E01               	movlw	1
  1396   002244  6E39               	movwf	_Val_sem_cna^0,c
  1397                           
  1398                           ;semaphore.c: 10: break;
  1399   002246  D00B               	goto	l1533
  1400   002248                     l2785:
  1401                           
  1402                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1403   002248  0E01               	movlw	1
  1404   00224A  6E38               	movwf	_Val_sem_rxtx^0,c
  1405                           
  1406                           ;semaphore.c: 13: break;
  1407   00224C  D008               	goto	l1533
  1408   00224E                     l2787:
  1409                           
  1410                           ;stkvar	Init@sem @ sp[(0)+-1]
  1411   00224E  0EFF               	movlw	-1
  1412   002250  50E3               	movf	plusw1,w,c
  1413                           
  1414                           ; Switch size 1, requested type "simple"
  1415                           ; Number of cases is 2, Range of values is 1 to 2
  1416                           ; switch strategies available:
  1417                           ; Name         Instructions Cycles
  1418                           ; simple_byte            7     4 (average)
  1419                           ;	Chosen strategy is simple_byte
  1420   002252  0A01               	xorlw	1	; case 1
  1421   002254  B4D8               	btfsc	status,2,c
  1422   002256  D7F5               	goto	l2783
  1423   002258  0A03               	xorlw	3	; case 2
  1424   00225A  B4D8               	btfsc	status,2,c
  1425   00225C  D7F5               	goto	l2785
  1426   00225E                     l1533:
  1427                           
  1428                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1429   00225E  52E5               	movf	postdec1,f,c
  1430   002260  0012               	return		;funcret
  1431   002262                     __end_of_Init:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _fonction_d_interruption *****************
  1435 ;; Defined at:
  1436 ;;		line 17 in file "systeme.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;Total ram usage:       12 bytes
  1455 ;; Hardware stack levels used: 1
  1456 ;; Hardware stack levels required when called: 6
  1457 ;; This function calls:
  1458 ;;		_tache1
  1459 ;;		_tache2
  1460 ;;		_tache3
  1461 ;;		_tache4
  1462 ;;		_tache5
  1463 ;;		_tache6
  1464 ;; This function is called by:
  1465 ;;		Interrupt level 2
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	intcode
  1470   000008                     __pintcode:
  1471                           	callstack 0
  1472   000008                     _fonction_d_interruption:
  1473                           	callstack 23
  1474                           
  1475                           ;incstack = 0
  1476   000008  CFE9 F015          	movff	fsr0l,??_fonction_d_interruption
  1477   00000C  CFEA F016          	movff	fsr0h,??_fonction_d_interruption+1
  1478   000010  CFE1 F017          	movff	fsr1l,??_fonction_d_interruption+2
  1479   000014  CFE2 F018          	movff	fsr1h,??_fonction_d_interruption+3
  1480   000018  CFD9 F019          	movff	fsr2l,??_fonction_d_interruption+4
  1481   00001C  CFDA F01A          	movff	fsr2h,??_fonction_d_interruption+5
  1482   000020  CFF3 F01B          	movff	prodl,??_fonction_d_interruption+6
  1483   000024  CFF4 F01C          	movff	prodh,??_fonction_d_interruption+7
  1484   000028  CFF6 F01D          	movff	tblptrl,??_fonction_d_interruption+8
  1485   00002C  CFF7 F01E          	movff	tblptrh,??_fonction_d_interruption+9
  1486   000030  CFF8 F01F          	movff	tblptru,??_fonction_d_interruption+10
  1487   000034  CFF5 F020          	movff	tablat,??_fonction_d_interruption+11
  1488   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1489                           
  1490                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1491   00003C  CFD8 F061          	movff	status,97	;volatile
  1492   000040  0100               	movlb	0	; () banked
  1493   000042  6F60               	movwf	96,b
  1494                           
  1495                           ; BSR set to: 0
  1496   000044  CFE0 F062          	movff	bsr,98	;volatile
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1500   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1501                           
  1502                           ; BSR set to: 0
  1503   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;systeme.c: 24: if(T0IE && T0IF)
  1507   000050  BAF2               	btfsc	4082,5,c	;volatile
  1508                           
  1509                           ; BSR set to: 0
  1510   000052  A4F2               	btfss	4082,2,c	;volatile
  1511   000054  D143               	goto	i2l5293
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1515   000056  0565               	decf	101,w,b
  1516   000058  A4D8               	btfss	status,2,c
  1517   00005A  D004               	goto	i2l4993
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1521   00005C  0E1B               	movlw	27
  1522   00005E  6EFC               	movwf	252,c	;volatile
  1523                           
  1524                           ;systeme.c: 29: DEMARRAGE=0;
  1525   000060  0E00               	movlw	0
  1526   000062  6F65               	movwf	101,b
  1527   000064                     i2l4993:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1531   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1532                           
  1533                           ;systeme.c: 35: FSR0L=0;
  1534   000068  0E00               	movlw	0
  1535   00006A  6EE9               	movwf	233,c	;volatile
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1539   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1540                           
  1541                           ; BSR set to: 0
  1542   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1543                           
  1544                           ; BSR set to: 0
  1545   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1546                           
  1547                           ; BSR set to: 0
  1548   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1552   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1553                           
  1554                           ; BSR set to: 0
  1555   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1556                           
  1557                           ; BSR set to: 0
  1558   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1559                           
  1560                           ; BSR set to: 0
  1561   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1565   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1566                           
  1567                           ; BSR set to: 0
  1568   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1569                           
  1570                           ; BSR set to: 0
  1571   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1572                           
  1573                           ; BSR set to: 0
  1574   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1578   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1579                           
  1580                           ; BSR set to: 0
  1581   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1582                           
  1583                           ; BSR set to: 0
  1584   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1585                           
  1586                           ; BSR set to: 0
  1587   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1591   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1592                           
  1593                           ; BSR set to: 0
  1594   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1595                           
  1596                           ;systeme.c: 44: FSR1H=0;
  1597   0000B4  0E00               	movlw	0
  1598   0000B6  6EE2               	movwf	226,c	;volatile
  1599                           
  1600                           ;systeme.c: 45: FSR1L=0;
  1601   0000B8  0E00               	movlw	0
  1602   0000BA  6EE1               	movwf	225,c	;volatile
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1606   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1607                           
  1608                           ; BSR set to: 0
  1609   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1610                           
  1611                           ; BSR set to: 0
  1612   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1613                           
  1614                           ; BSR set to: 0
  1615   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1619   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1620                           
  1621                           ; BSR set to: 0
  1622   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1623                           
  1624                           ; BSR set to: 0
  1625   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1626                           
  1627                           ; BSR set to: 0
  1628   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1632   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1633                           
  1634                           ; BSR set to: 0
  1635   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1636                           
  1637                           ; BSR set to: 0
  1638   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1639                           
  1640                           ; BSR set to: 0
  1641   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1645   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1646                           
  1647                           ; BSR set to: 0
  1648   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1649                           
  1650                           ; BSR set to: 0
  1651   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1652                           
  1653                           ; BSR set to: 0
  1654   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1658   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1659                           
  1660                           ; BSR set to: 0
  1661   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1662                           
  1663                           ; BSR set to: 0
  1664   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1665                           
  1666                           ; BSR set to: 0
  1667   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1671   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1672                           
  1673                           ; BSR set to: 0
  1674   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1675                           
  1676                           ; BSR set to: 0
  1677   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1678                           
  1679                           ; BSR set to: 0
  1680   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1684   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1685                           
  1686                           ; BSR set to: 0
  1687   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1688                           
  1689                           ; BSR set to: 0
  1690   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1691                           
  1692                           ; BSR set to: 0
  1693   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1697   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1698                           
  1699                           ; BSR set to: 0
  1700   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1701                           
  1702                           ; BSR set to: 0
  1703   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1704                           
  1705                           ; BSR set to: 0
  1706   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1710   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1714                           
  1715                           ; BSR set to: 0
  1716   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1717                           
  1718                           ; BSR set to: 0
  1719   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1723   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1724                           
  1725                           ; BSR set to: 0
  1726   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1727                           
  1728                           ; BSR set to: 0
  1729   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1730                           
  1731                           ; BSR set to: 0
  1732   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1736   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1737                           
  1738                           ; BSR set to: 0
  1739   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1740                           
  1741                           ; BSR set to: 0
  1742   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1743                           
  1744                           ; BSR set to: 0
  1745   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1749   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1750                           
  1751                           ; BSR set to: 0
  1752   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1753                           
  1754                           ; BSR set to: 0
  1755   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1756                           
  1757                           ; BSR set to: 0
  1758   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1759                           
  1760                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1761   00017C  0E8A               	movlw	138
  1762   00017E  6ED7               	movwf	215,c	;volatile
  1763   000180  0ECF               	movlw	207
  1764   000182  6ED6               	movwf	214,c	;volatile
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;systeme.c: 63: T0IF=0;
  1768   000184  94F2               	bcf	4082,2,c	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;systeme.c: 65: Tick_Count++;
  1772   000186  4B71               	infsnz	113,f,b
  1773   000188  2B72               	incf	114,f,b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;systeme.c: 67: pointeur_de_tache++;
  1777   00018A  2B70               	incf	112,f,b
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1781   00018C  0E06               	movlw	6
  1782   00018E  1970               	xorwf	112,w,b
  1783   000190  A4D8               	btfss	status,2,c
  1784   000192  D002               	goto	i2l5137
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;systeme.c: 69: pointeur_de_tache=0;
  1788   000194  0E00               	movlw	0
  1789   000196  6F70               	movwf	112,b
  1790   000198                     i2l5137:
  1791                           
  1792                           ; BSR set to: 0
  1793                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1794   000198  0E69               	movlw	105
  1795   00019A  2570               	addwf	112,w,b
  1796   00019C  6ED9               	movwf	fsr2l,c
  1797   00019E  6ADA               	clrf	fsr2h,c
  1798   0001A0  0E00               	movlw	0
  1799   0001A2  22DA               	addwfc	fsr2h,f,c
  1800   0001A4  50DF               	movf	indf2,w,c
  1801   0001A6  6F6F               	movwf	111,b
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;systeme.c: 75: FSR1H=0;
  1805   0001A8  0E00               	movlw	0
  1806   0001AA  6EE2               	movwf	226,c	;volatile
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;systeme.c: 76: FSR1L=0;
  1810   0001AC  0E00               	movlw	0
  1811   0001AE  6EE1               	movwf	225,c	;volatile
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;systeme.c: 77: FSR0H=tache_active;
  1815   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;systeme.c: 78: FSR0L=18;
  1819   0001B4  0E12               	movlw	18
  1820   0001B6  6EE9               	movwf	233,c	;volatile
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1824   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1831                           
  1832                           ; BSR set to: 0
  1833   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1837   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1838                           
  1839                           ; BSR set to: 0
  1840   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1844                           
  1845                           ; BSR set to: 0
  1846   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1850   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1851                           
  1852                           ; BSR set to: 0
  1853   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1854                           
  1855                           ; BSR set to: 0
  1856   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1857                           
  1858                           ; BSR set to: 0
  1859   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1863   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1864                           
  1865                           ; BSR set to: 0
  1866   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1876   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1877                           
  1878                           ; BSR set to: 0
  1879   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1889   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1890                           
  1891                           ; BSR set to: 0
  1892   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1893                           
  1894                           ; BSR set to: 0
  1895   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1896                           
  1897                           ; BSR set to: 0
  1898   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1902   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1903                           
  1904                           ; BSR set to: 0
  1905   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1906                           
  1907                           ; BSR set to: 0
  1908   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1915   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1916                           
  1917                           ; BSR set to: 0
  1918   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1919                           
  1920                           ; BSR set to: 0
  1921   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1928   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1932                           
  1933                           ; BSR set to: 0
  1934   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1941   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1942                           
  1943                           ; BSR set to: 0
  1944   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1945                           
  1946                           ; BSR set to: 0
  1947   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1948                           
  1949                           ; BSR set to: 0
  1950   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1954   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1955                           
  1956                           ; BSR set to: 0
  1957   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1958                           
  1959                           ; BSR set to: 0
  1960   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1961                           
  1962                           ; BSR set to: 0
  1963   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1967   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1968                           
  1969                           ; BSR set to: 0
  1970   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1971                           
  1972                           ; BSR set to: 0
  1973   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1974                           
  1975                           ; BSR set to: 0
  1976   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;systeme.c: 96: FSR0H=tache_active;
  1980   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;systeme.c: 97: FSR0L=0;
  1984   00027C  0E00               	movlw	0
  1985   00027E  6EE9               	movwf	233,c	;volatile
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1989   000280  CFEE F060          	movff	postinc0,96	;volatile
  1990                           
  1991                           ; BSR set to: 0
  1992   000284  CFEE F061          	movff	postinc0,97	;volatile
  1993                           
  1994                           ; BSR set to: 0
  1995   000288  CFEE F062          	movff	postinc0,98	;volatile
  1996                           
  1997                           ; BSR set to: 0
  1998   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2002   000290  CFEE F063          	movff	postinc0,99	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005   000294  CFEE F064          	movff	postinc0,100	;volatile
  2006                           
  2007                           ; BSR set to: 0
  2008   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2009                           
  2010                           ; BSR set to: 0
  2011   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2015   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2016                           
  2017                           ; BSR set to: 0
  2018   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2019                           
  2020                           ; BSR set to: 0
  2021   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2022                           
  2023                           ; BSR set to: 0
  2024   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2028   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2032                           
  2033                           ; BSR set to: 0
  2034   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2035                           
  2036                           ; BSR set to: 0
  2037   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2041   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2042                           
  2043                           ; BSR set to: 0
  2044   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2048   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2049                           
  2050                           ; BSR set to: 0
  2051   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2058   0002D4  5160               	movf	96,w,b
  2059                           
  2060                           ; BSR set to: 0
  2061   0002D6  C061 FFD8          	movff	97,status	;volatile
  2062   0002DA  0010               	retfie		;# 
  2063   0002DC                     i2l5293:
  2064                           
  2065                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2066   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2067   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2068   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2069                           
  2070                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2071   0002E8  0100               	movlb	0	; () banked
  2072   0002EA  5160               	movf	96,w,b
  2073                           
  2074                           ; BSR set to: 0
  2075   0002EC  C061 FFD8          	movff	97,status	;volatile
  2076   0002F0  0010               	retfie		;# 
  2077                           
  2078                           ;systeme.c: 123: tache1();
  2079   0002F2  EC6D  F008         	call	_tache1	;wreg free
  2080                           
  2081                           ;systeme.c: 124: tache2();
  2082   0002F6  EC42  F00B         	call	_tache2	;wreg free
  2083                           
  2084                           ;systeme.c: 125: tache3();
  2085   0002FA  EC2F  F00C         	call	_tache3	;wreg free
  2086                           
  2087                           ;systeme.c: 126: tache4();
  2088   0002FE  EC9E  F00C         	call	_tache4	;wreg free
  2089                           
  2090                           ;systeme.c: 127: tache5();
  2091   000302  ECBC  F00B         	call	_tache5	;wreg free
  2092                           
  2093                           ;systeme.c: 128: tache6();
  2094   000306  EC48  F010         	call	_tache6	;wreg free
  2095   00030A  C020  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2096   00030E  C01F  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2097   000312  C01E  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2098   000316  C01D  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2099   00031A  C01C  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2100   00031E  C01B  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2101   000322  C01A  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2102   000326  C019  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2103   00032A  C018  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2104   00032E  C017  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2105   000332  C016  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2106   000336  C015  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2107   00033A  0011               	retfie		f
  2108   00033C                     __end_of_fonction_d_interruption:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _tache6 *****************
  2112 ;; Defined at:
  2113 ;;		line 3 in file "T6.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  n               1    8[COMRAM] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;Total ram usage:        1 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 2
  2134 ;; This function calls:
  2135 ;;		_lecture_normale
  2136 ;; This function is called by:
  2137 ;;		_fonction_d_interruption
  2138 ;;		_initialisation_du_systeme
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text5
  2143   002090                     __ptext5:
  2144                           	callstack 0
  2145   002090                     _tache6:
  2146                           	callstack 26
  2147                           
  2148                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2149                           
  2150                           ;incstack = 0
  2151                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2152   002090  0E75               	movlw	117
  2153   002092  6E03               	movwf	lecture_normale@stid_id^0,c
  2154   002094  0E00               	movlw	0
  2155   002096  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2156   002098  ECC2  F00D         	call	_lecture_normale	;wreg free
  2157   00209C  6E09               	movwf	tache6@n^0,c
  2158                           
  2159                           ;T6.c: 9: if (n > 0)
  2160   00209E  5009               	movf	tache6@n^0,w,c
  2161   0020A0  B4D8               	btfsc	status,2,c
  2162   0020A2  D015               	goto	i2l4959
  2163                           
  2164                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2165   0020A4  0E04               	movlw	4
  2166   0020A6  1809               	xorwf	tache6@n^0,w,c
  2167   0020A8  A4D8               	btfss	status,2,c
  2168   0020AA  D004               	goto	i2l4951
  2169                           
  2170                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2171   0020AC  C009  F07F         	movff	tache6@n,127
  2172                           
  2173                           ;T6.c: 16: Operator = 2;
  2174   0020B0  0E02               	movlw	2
  2175   0020B2  D007               	goto	L1
  2176   0020B4                     i2l4951:
  2177                           
  2178                           ;T6.c: 18: else if (n == 8)
  2179   0020B4  0E08               	movlw	8
  2180   0020B6  1809               	xorwf	tache6@n^0,w,c
  2181   0020B8  A4D8               	btfss	status,2,c
  2182   0020BA  D005               	goto	i2l4957
  2183                           
  2184                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2185   0020BC  C009  F07F         	movff	tache6@n,127
  2186                           
  2187                           ;T6.c: 21: Operator = 1;
  2188   0020C0  0E01               	movlw	1
  2189   0020C2                     L1:
  2190   0020C2  0100               	movlb	0	; () banked
  2191   0020C4  D008               	goto	L2
  2192   0020C6                     i2l4957:
  2193                           
  2194                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2195   0020C6  0E00               	movlw	0
  2196   0020C8  0100               	movlb	0	; () banked
  2197   0020CA  6F7F               	movwf	127,b
  2198   0020CC  D7E1               	goto	__ptext5
  2199   0020CE                     i2l4959:
  2200                           
  2201                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2202   0020CE  0E00               	movlw	0
  2203   0020D0  0100               	movlb	0	; () banked
  2204   0020D2  6F7F               	movwf	127,b
  2205                           
  2206                           ;T6.c: 33: Operator = 0;
  2207   0020D4  0E00               	movlw	0
  2208   0020D6                     L2:
  2209   0020D6  6F82               	movwf	130,b
  2210   0020D8  D7DB               	goto	__ptext5
  2211   0020DA                     __end_of_tache6:
  2212                           	callstack 0
  2213                           
  2214 ;; *************** function _lecture_normale *****************
  2215 ;; Defined at:
  2216 ;;		line 5 in file "stid.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2219 ;;		 -> badge(10), 
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  octet           1    7[COMRAM] unsigned char 
  2222 ;;  n_bit           1    6[COMRAM] unsigned char 
  2223 ;;  n_octet         1    5[COMRAM] unsigned char 
  2224 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      unsigned char 
  2227 ;; Registers used:
  2228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;Total ram usage:        6 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 1
  2241 ;; This function calls:
  2242 ;;		_stid_delai_us
  2243 ;; This function is called by:
  2244 ;;		_tache6
  2245 ;; This function uses a non-reentrant model
  2246 ;;
  2247                           
  2248                           	psect	text6
  2249   001B84                     __ptext6:
  2250                           	callstack 0
  2251   001B84                     _lecture_normale:
  2252                           	callstack 26
  2253                           
  2254                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;incstack = 0
  2258   001B84  8295               	bsf	149,1,c	;volatile
  2259                           
  2260                           ;stid.c: 10: LATDbits.LATD3=0;
  2261   001B86  968C               	bcf	140,3,c	;volatile
  2262                           
  2263                           ;stid.c: 11: LATDbits.LATD2=0;
  2264   001B88  948C               	bcf	140,2,c	;volatile
  2265                           
  2266                           ;stid.c: 12: stid_delai_us(100);
  2267   001B8A  0E00               	movlw	0
  2268   001B8C  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2269   001B8E  0E64               	movlw	100
  2270   001B90  6E01               	movwf	stid_delai_us@isdu^0,c
  2271   001B92  EC97  F011         	call	_stid_delai_us	;wreg free
  2272                           
  2273                           ;stid.c: 13: LATDbits.LATD3=1;
  2274   001B96  868C               	bsf	140,3,c	;volatile
  2275                           
  2276                           ;stid.c: 14: temps_attente=0;
  2277   001B98  0E00               	movlw	0
  2278   001B9A  6E05               	movwf	lecture_normale@temps_attente^0,c
  2279   001B9C                     i2l4487:
  2280                           
  2281                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2282   001B9C  0E03               	movlw	3
  2283   001B9E  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2284   001BA0  0EE8               	movlw	232
  2285   001BA2  6E01               	movwf	stid_delai_us@isdu^0,c
  2286   001BA4  EC97  F011         	call	_stid_delai_us	;wreg free
  2287                           
  2288                           ;stid.c: 18: temps_attente++;
  2289   001BA8  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2290                           
  2291                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2292   001BAA  A083               	btfss	131,0,c	;volatile
  2293   001BAC  D002               	goto	i2l4495
  2294                           
  2295                           ;stid.c: 20: temps_attente=65;
  2296   001BAE  0E41               	movlw	65
  2297   001BB0  6E05               	movwf	lecture_normale@temps_attente^0,c
  2298   001BB2                     i2l4495:
  2299                           
  2300                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2301   001BB2  0E40               	movlw	64
  2302   001BB4  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2303   001BB6  D7F2               	goto	i2l4487
  2304                           
  2305                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2306   001BB8  A083               	btfss	131,0,c	;volatile
  2307   001BBA  D033               	goto	i2l4531
  2308                           
  2309                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2310   001BBC  0E00               	movlw	0
  2311   001BBE  6E06               	movwf	lecture_normale@n_octet^0,c
  2312   001BC0                     i2l1650:
  2313                           
  2314                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2315   001BC0  0E00               	movlw	0
  2316   001BC2  6E08               	movwf	lecture_normale@octet^0,c
  2317                           
  2318                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2319   001BC4  0E00               	movlw	0
  2320   001BC6  6E07               	movwf	lecture_normale@n_bit^0,c
  2321   001BC8                     i2l1651:
  2322                           
  2323                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2324   001BC8  A283               	btfss	131,1,c	;volatile
  2325   001BCA  D003               	goto	i2l1653
  2326                           
  2327                           ;stid.c: 34: octet=(octet|0x01);
  2328   001BCC  5008               	movf	lecture_normale@octet^0,w,c
  2329   001BCE  0901               	iorlw	1
  2330   001BD0  6E08               	movwf	lecture_normale@octet^0,c
  2331   001BD2                     i2l1653:
  2332                           
  2333                           ;stid.c: 35: octet=octet<<1;
  2334   001BD2  5008               	movf	lecture_normale@octet^0,w,c
  2335   001BD4  2408               	addwf	lecture_normale@octet^0,w,c
  2336   001BD6  6E08               	movwf	lecture_normale@octet^0,c
  2337                           
  2338                           ;stid.c: 36: stid_delai_us(100);
  2339   001BD8  0E00               	movlw	0
  2340   001BDA  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2341   001BDC  0E64               	movlw	100
  2342   001BDE  6E01               	movwf	stid_delai_us@isdu^0,c
  2343   001BE0  EC97  F011         	call	_stid_delai_us	;wreg free
  2344                           
  2345                           ;stid.c: 37: LATDbits.LATD2=1;
  2346   001BE4  848C               	bsf	140,2,c	;volatile
  2347                           
  2348                           ;stid.c: 38: stid_delai_us(500);
  2349   001BE6  0E01               	movlw	1
  2350   001BE8  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2351   001BEA  0EF4               	movlw	244
  2352   001BEC  6E01               	movwf	stid_delai_us@isdu^0,c
  2353   001BEE  EC97  F011         	call	_stid_delai_us	;wreg free
  2354                           
  2355                           ;stid.c: 39: LATDbits.LATD2=0;
  2356   001BF2  948C               	bcf	140,2,c	;volatile
  2357                           
  2358                           ;stid.c: 40: stid_delai_us(400);
  2359   001BF4  0E01               	movlw	1
  2360   001BF6  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2361   001BF8  0E90               	movlw	144
  2362   001BFA  6E01               	movwf	stid_delai_us@isdu^0,c
  2363   001BFC  EC97  F011         	call	_stid_delai_us	;wreg free
  2364   001C00  2A07               	incf	lecture_normale@n_bit^0,f,c
  2365   001C02  0E07               	movlw	7
  2366   001C04  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2367   001C06  D7E0               	goto	i2l1651
  2368                           
  2369                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2370   001C08  5006               	movf	lecture_normale@n_octet^0,w,c
  2371   001C0A  2403               	addwf	lecture_normale@stid_id^0,w,c
  2372   001C0C  6ED9               	movwf	fsr2l,c
  2373   001C0E  0E00               	movlw	0
  2374   001C10  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2375   001C12  6EDA               	movwf	fsr2h,c
  2376   001C14  C008  FFDF         	movff	lecture_normale@octet,indf2
  2377                           
  2378                           ;stid.c: 43: n_octet++;
  2379   001C18  2A06               	incf	lecture_normale@n_octet^0,f,c
  2380                           
  2381                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2382   001C1A  B083               	btfsc	131,0,c	;volatile
  2383   001C1C  D7D1               	goto	i2l1650
  2384                           
  2385                           ;stid.c: 47: return n_octet;
  2386   001C1E  5006               	movf	lecture_normale@n_octet^0,w,c
  2387   001C20  0012               	return	
  2388   001C22                     i2l4531:
  2389                           
  2390                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2391   001C22  0E00               	movlw	0
  2392   001C24  0012               	return		;funcret
  2393   001C26                     __end_of_lecture_normale:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _stid_delai_us *****************
  2397 ;; Defined at:
  2398 ;;		line 56 in file "stid.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  isdu            2    0[COMRAM] unsigned int 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        2 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; This function calls:
  2419 ;;		Nothing
  2420 ;; This function is called by:
  2421 ;;		_lecture_normale
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text7
  2426   00232E                     __ptext7:
  2427                           	callstack 0
  2428   00232E                     _stid_delai_us:
  2429                           	callstack 26
  2430                           
  2431                           ;stid.c: 58: while(isdu>0)
  2432                           
  2433                           ;incstack = 0
  2434   00232E  D006               	goto	i2l4305
  2435   002330                     i2l1660:
  2436                           
  2437                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2438   002330  F000               	nop	
  2439   002332  F000               	nop	
  2440   002334  F000               	nop	
  2441                           
  2442                           ;stid.c: 61: isdu--;
  2443   002336  0601               	decf	stid_delai_us@isdu^0,f,c
  2444   002338  A0D8               	btfss	status,0,c
  2445   00233A  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2446   00233C                     i2l4305:
  2447   00233C  5001               	movf	stid_delai_us@isdu^0,w,c
  2448   00233E  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2449   002340  B4D8               	btfsc	status,2,c
  2450   002342  0012               	return	
  2451   002344  D7F5               	goto	i2l1660
  2452   002346                     __end_of_stid_delai_us:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _tache5 *****************
  2456 ;; Defined at:
  2457 ;;		line 3 in file "T5.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  a               2    0[COMRAM] unsigned int 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;Total ram usage:        2 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_fonction_d_interruption
  2481 ;;		_initialisation_du_systeme
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text8
  2486   001778                     __ptext8:
  2487                           	callstack 0
  2488   001778                     _tache5:
  2489                           	callstack 28
  2490                           
  2491                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2492                           
  2493                           ;incstack = 0
  2494                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2495   001778  A89E               	btfss	158,4,c	;volatile
  2496   00177A  D7FE               	goto	__ptext8
  2497   00177C  0E74               	movlw	116
  2498   00177E  6EAD               	movwf	173,c	;volatile
  2499   001780                     i2l960:
  2500   001780  A2AC               	btfss	172,1,c	;volatile
  2501   001782  D7FE               	goto	i2l960
  2502   001784                     i2u161_40:
  2503   001784  A89E               	btfss	158,4,c	;volatile
  2504   001786  D7FE               	goto	i2u161_40
  2505   001788  0E61               	movlw	97
  2506   00178A  6EAD               	movwf	173,c	;volatile
  2507   00178C                     i2l966:
  2508   00178C  A2AC               	btfss	172,1,c	;volatile
  2509   00178E  D7FE               	goto	i2l966
  2510   001790                     i2u163_40:
  2511   001790  A89E               	btfss	158,4,c	;volatile
  2512   001792  D7FE               	goto	i2u163_40
  2513   001794  0E63               	movlw	99
  2514   001796  6EAD               	movwf	173,c	;volatile
  2515   001798                     i2l972:
  2516   001798  A2AC               	btfss	172,1,c	;volatile
  2517   00179A  D7FE               	goto	i2l972
  2518   00179C                     i2u165_40:
  2519   00179C  A89E               	btfss	158,4,c	;volatile
  2520   00179E  D7FE               	goto	i2u165_40
  2521   0017A0  0E68               	movlw	104
  2522   0017A2  6EAD               	movwf	173,c	;volatile
  2523   0017A4                     i2l978:
  2524   0017A4  A2AC               	btfss	172,1,c	;volatile
  2525   0017A6  D7FE               	goto	i2l978
  2526   0017A8                     i2u167_40:
  2527   0017A8  A89E               	btfss	158,4,c	;volatile
  2528   0017AA  D7FE               	goto	i2u167_40
  2529   0017AC  0E65               	movlw	101
  2530   0017AE  6EAD               	movwf	173,c	;volatile
  2531   0017B0                     i2l984:
  2532   0017B0  A2AC               	btfss	172,1,c	;volatile
  2533   0017B2  D7FE               	goto	i2l984
  2534   0017B4                     i2u169_40:
  2535   0017B4  A89E               	btfss	158,4,c	;volatile
  2536   0017B6  D7FE               	goto	i2u169_40
  2537   0017B8  0E35               	movlw	53
  2538   0017BA  6EAD               	movwf	173,c	;volatile
  2539   0017BC                     i2l990:
  2540   0017BC  A2AC               	btfss	172,1,c	;volatile
  2541   0017BE  D7FE               	goto	i2l990
  2542   0017C0                     i2u171_40:
  2543   0017C0  A89E               	btfss	158,4,c	;volatile
  2544   0017C2  D7FE               	goto	i2u171_40
  2545   0017C4  0E5F               	movlw	95
  2546   0017C6  6EAD               	movwf	173,c	;volatile
  2547   0017C8                     i2l996:
  2548   0017C8  A2AC               	btfss	172,1,c	;volatile
  2549   0017CA  D7FE               	goto	i2l996
  2550   0017CC                     i2u173_40:
  2551   0017CC  A89E               	btfss	158,4,c	;volatile
  2552   0017CE  D7FE               	goto	i2u173_40
  2553   0017D0  0E65               	movlw	101
  2554   0017D2  6EAD               	movwf	173,c	;volatile
  2555   0017D4                     i2l1002:
  2556   0017D4  A2AC               	btfss	172,1,c	;volatile
  2557   0017D6  D7FE               	goto	i2l1002
  2558   0017D8                     i2u175_40:
  2559   0017D8  A89E               	btfss	158,4,c	;volatile
  2560   0017DA  D7FE               	goto	i2u175_40
  2561   0017DC  0E6E               	movlw	110
  2562   0017DE  6EAD               	movwf	173,c	;volatile
  2563   0017E0                     i2l1008:
  2564   0017E0  A2AC               	btfss	172,1,c	;volatile
  2565   0017E2  D7FE               	goto	i2l1008
  2566   0017E4                     i2u177_40:
  2567   0017E4  A89E               	btfss	158,4,c	;volatile
  2568   0017E6  D7FE               	goto	i2u177_40
  2569   0017E8  0E5F               	movlw	95
  2570   0017EA  6EAD               	movwf	173,c	;volatile
  2571   0017EC                     i2l1014:
  2572   0017EC  A2AC               	btfss	172,1,c	;volatile
  2573   0017EE  D7FE               	goto	i2l1014
  2574   0017F0                     i2u179_40:
  2575   0017F0  A89E               	btfss	158,4,c	;volatile
  2576   0017F2  D7FE               	goto	i2u179_40
  2577   0017F4  0E63               	movlw	99
  2578   0017F6  6EAD               	movwf	173,c	;volatile
  2579   0017F8                     i2l1020:
  2580   0017F8  A2AC               	btfss	172,1,c	;volatile
  2581   0017FA  D7FE               	goto	i2l1020
  2582   0017FC                     i2u181_40:
  2583   0017FC  A89E               	btfss	158,4,c	;volatile
  2584   0017FE  D7FE               	goto	i2u181_40
  2585   001800  0E6F               	movlw	111
  2586   001802  6EAD               	movwf	173,c	;volatile
  2587   001804                     i2l1026:
  2588   001804  A2AC               	btfss	172,1,c	;volatile
  2589   001806  D7FE               	goto	i2l1026
  2590   001808                     i2u183_40:
  2591   001808  A89E               	btfss	158,4,c	;volatile
  2592   00180A  D7FE               	goto	i2u183_40
  2593   00180C  0E75               	movlw	117
  2594   00180E  6EAD               	movwf	173,c	;volatile
  2595   001810                     i2l1032:
  2596   001810  A2AC               	btfss	172,1,c	;volatile
  2597   001812  D7FE               	goto	i2l1032
  2598   001814                     i2u185_40:
  2599   001814  A89E               	btfss	158,4,c	;volatile
  2600   001816  D7FE               	goto	i2u185_40
  2601   001818  0E72               	movlw	114
  2602   00181A  6EAD               	movwf	173,c	;volatile
  2603   00181C                     i2l1038:
  2604   00181C  A2AC               	btfss	172,1,c	;volatile
  2605   00181E  D7FE               	goto	i2l1038
  2606   001820                     i2u187_40:
  2607   001820  A89E               	btfss	158,4,c	;volatile
  2608   001822  D7FE               	goto	i2u187_40
  2609   001824  0E73               	movlw	115
  2610   001826  6EAD               	movwf	173,c	;volatile
  2611   001828                     i2l1044:
  2612   001828  A2AC               	btfss	172,1,c	;volatile
  2613   00182A  D7FE               	goto	i2l1044
  2614                           
  2615                           ;T5.c: 28: for (a=0;a<65000;a++)
  2616   00182C  0E00               	movlw	0
  2617   00182E  6E02               	movwf	(tache5@a+1)^0,c
  2618   001830  0E00               	movlw	0
  2619   001832  6E01               	movwf	tache5@a^0,c
  2620   001834                     i2l3639:
  2621                           
  2622                           ;T5.c: 29: ;
  2623   001834  4A01               	infsnz	tache5@a^0,f,c
  2624   001836  2A02               	incf	(tache5@a+1)^0,f,c
  2625   001838  0EE8               	movlw	232
  2626   00183A  5C01               	subwf	tache5@a^0,w,c
  2627   00183C  0EFD               	movlw	253
  2628   00183E  5802               	subwfb	(tache5@a+1)^0,w,c
  2629   001840  A0D8               	btfss	status,0,c
  2630   001842  D7F8               	goto	i2l3639
  2631                           
  2632                           ;T5.c: 30: for (a=0;a<65000;a++)
  2633   001844  0E00               	movlw	0
  2634   001846  6E02               	movwf	(tache5@a+1)^0,c
  2635   001848  0E00               	movlw	0
  2636   00184A  6E01               	movwf	tache5@a^0,c
  2637   00184C                     i2l3649:
  2638                           
  2639                           ;T5.c: 31: ;
  2640   00184C  4A01               	infsnz	tache5@a^0,f,c
  2641   00184E  2A02               	incf	(tache5@a+1)^0,f,c
  2642   001850  0EE8               	movlw	232
  2643   001852  5C01               	subwf	tache5@a^0,w,c
  2644   001854  0EFD               	movlw	253
  2645   001856  5802               	subwfb	(tache5@a+1)^0,w,c
  2646   001858  B0D8               	btfsc	status,0,c
  2647   00185A  D78E               	goto	__ptext8
  2648   00185C  D7F7               	goto	i2l3649
  2649   00185E                     __end_of_tache5:
  2650                           	callstack 0
  2651                           
  2652 ;; *************** function _tache4 *****************
  2653 ;; Defined at:
  2654 ;;		line 3 in file "T4.c"
  2655 ;; Parameters:    Size  Location     Type
  2656 ;;		None
  2657 ;; Auto vars:     Size  Location     Type
  2658 ;;  a               2    0[COMRAM] unsigned int 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  1    wreg      void 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;Total ram usage:        2 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_fonction_d_interruption
  2678 ;;		_initialisation_du_systeme
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text9
  2683   00193C                     __ptext9:
  2684                           	callstack 0
  2685   00193C                     _tache4:
  2686                           	callstack 28
  2687                           
  2688                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2689                           
  2690                           ;incstack = 0
  2691                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2692   00193C  A89E               	btfss	158,4,c	;volatile
  2693   00193E  D7FE               	goto	__ptext9
  2694   001940  0E54               	movlw	84
  2695   001942  6EAD               	movwf	173,c	;volatile
  2696   001944                     i2l778:
  2697   001944  A2AC               	btfss	172,1,c	;volatile
  2698   001946  D7FE               	goto	i2l778
  2699   001948                     i2u130_40:
  2700   001948  A89E               	btfss	158,4,c	;volatile
  2701   00194A  D7FE               	goto	i2u130_40
  2702   00194C  0E41               	movlw	65
  2703   00194E  6EAD               	movwf	173,c	;volatile
  2704   001950                     i2l784:
  2705   001950  A2AC               	btfss	172,1,c	;volatile
  2706   001952  D7FE               	goto	i2l784
  2707   001954                     i2u132_40:
  2708   001954  A89E               	btfss	158,4,c	;volatile
  2709   001956  D7FE               	goto	i2u132_40
  2710   001958  0E43               	movlw	67
  2711   00195A  6EAD               	movwf	173,c	;volatile
  2712   00195C                     i2l790:
  2713   00195C  A2AC               	btfss	172,1,c	;volatile
  2714   00195E  D7FE               	goto	i2l790
  2715   001960                     i2u134_40:
  2716   001960  A89E               	btfss	158,4,c	;volatile
  2717   001962  D7FE               	goto	i2u134_40
  2718   001964  0E48               	movlw	72
  2719   001966  6EAD               	movwf	173,c	;volatile
  2720   001968                     i2l796:
  2721   001968  A2AC               	btfss	172,1,c	;volatile
  2722   00196A  D7FE               	goto	i2l796
  2723   00196C                     i2u136_40:
  2724   00196C  A89E               	btfss	158,4,c	;volatile
  2725   00196E  D7FE               	goto	i2u136_40
  2726   001970  0E45               	movlw	69
  2727   001972  6EAD               	movwf	173,c	;volatile
  2728   001974                     i2l802:
  2729   001974  A2AC               	btfss	172,1,c	;volatile
  2730   001976  D7FE               	goto	i2l802
  2731   001978                     i2u138_40:
  2732   001978  A89E               	btfss	158,4,c	;volatile
  2733   00197A  D7FE               	goto	i2u138_40
  2734   00197C  0E34               	movlw	52
  2735   00197E  6EAD               	movwf	173,c	;volatile
  2736   001980                     i2l808:
  2737   001980  A2AC               	btfss	172,1,c	;volatile
  2738   001982  D7FE               	goto	i2l808
  2739   001984                     i2u140_40:
  2740   001984  A89E               	btfss	158,4,c	;volatile
  2741   001986  D7FE               	goto	i2u140_40
  2742   001988  0E5F               	movlw	95
  2743   00198A  6EAD               	movwf	173,c	;volatile
  2744   00198C                     i2l814:
  2745   00198C  A2AC               	btfss	172,1,c	;volatile
  2746   00198E  D7FE               	goto	i2l814
  2747   001990                     i2u142_40:
  2748   001990  A89E               	btfss	158,4,c	;volatile
  2749   001992  D7FE               	goto	i2u142_40
  2750   001994  0E45               	movlw	69
  2751   001996  6EAD               	movwf	173,c	;volatile
  2752   001998                     i2l820:
  2753   001998  A2AC               	btfss	172,1,c	;volatile
  2754   00199A  D7FE               	goto	i2l820
  2755   00199C                     i2u144_40:
  2756   00199C  A89E               	btfss	158,4,c	;volatile
  2757   00199E  D7FE               	goto	i2u144_40
  2758   0019A0  0E4E               	movlw	78
  2759   0019A2  6EAD               	movwf	173,c	;volatile
  2760   0019A4                     i2l826:
  2761   0019A4  A2AC               	btfss	172,1,c	;volatile
  2762   0019A6  D7FE               	goto	i2l826
  2763   0019A8                     i2u146_40:
  2764   0019A8  A89E               	btfss	158,4,c	;volatile
  2765   0019AA  D7FE               	goto	i2u146_40
  2766   0019AC  0E5F               	movlw	95
  2767   0019AE  6EAD               	movwf	173,c	;volatile
  2768   0019B0                     i2l832:
  2769   0019B0  A2AC               	btfss	172,1,c	;volatile
  2770   0019B2  D7FE               	goto	i2l832
  2771   0019B4                     i2u148_40:
  2772   0019B4  A89E               	btfss	158,4,c	;volatile
  2773   0019B6  D7FE               	goto	i2u148_40
  2774   0019B8  0E43               	movlw	67
  2775   0019BA  6EAD               	movwf	173,c	;volatile
  2776   0019BC                     i2l838:
  2777   0019BC  A2AC               	btfss	172,1,c	;volatile
  2778   0019BE  D7FE               	goto	i2l838
  2779   0019C0                     i2u150_40:
  2780   0019C0  A89E               	btfss	158,4,c	;volatile
  2781   0019C2  D7FE               	goto	i2u150_40
  2782   0019C4  0E4F               	movlw	79
  2783   0019C6  6EAD               	movwf	173,c	;volatile
  2784   0019C8                     i2l844:
  2785   0019C8  A2AC               	btfss	172,1,c	;volatile
  2786   0019CA  D7FE               	goto	i2l844
  2787   0019CC                     i2u152_40:
  2788   0019CC  A89E               	btfss	158,4,c	;volatile
  2789   0019CE  D7FE               	goto	i2u152_40
  2790   0019D0  0E55               	movlw	85
  2791   0019D2  6EAD               	movwf	173,c	;volatile
  2792   0019D4                     i2l850:
  2793   0019D4  A2AC               	btfss	172,1,c	;volatile
  2794   0019D6  D7FE               	goto	i2l850
  2795   0019D8                     i2u154_40:
  2796   0019D8  A89E               	btfss	158,4,c	;volatile
  2797   0019DA  D7FE               	goto	i2u154_40
  2798   0019DC  0E52               	movlw	82
  2799   0019DE  6EAD               	movwf	173,c	;volatile
  2800   0019E0                     i2l856:
  2801   0019E0  A2AC               	btfss	172,1,c	;volatile
  2802   0019E2  D7FE               	goto	i2l856
  2803   0019E4                     i2u156_40:
  2804   0019E4  A89E               	btfss	158,4,c	;volatile
  2805   0019E6  D7FE               	goto	i2u156_40
  2806   0019E8  0E53               	movlw	83
  2807   0019EA  6EAD               	movwf	173,c	;volatile
  2808   0019EC                     i2l862:
  2809   0019EC  A2AC               	btfss	172,1,c	;volatile
  2810   0019EE  D7FE               	goto	i2l862
  2811                           
  2812                           ;T4.c: 28: for (a=0;a<65000;a++)
  2813   0019F0  0E00               	movlw	0
  2814   0019F2  6E02               	movwf	(tache4@a+1)^0,c
  2815   0019F4  0E00               	movlw	0
  2816   0019F6  6E01               	movwf	tache4@a^0,c
  2817   0019F8                     i2l3599:
  2818                           
  2819                           ;T4.c: 29: ;
  2820   0019F8  4A01               	infsnz	tache4@a^0,f,c
  2821   0019FA  2A02               	incf	(tache4@a+1)^0,f,c
  2822   0019FC  0EE8               	movlw	232
  2823   0019FE  5C01               	subwf	tache4@a^0,w,c
  2824   001A00  0EFD               	movlw	253
  2825   001A02  5802               	subwfb	(tache4@a+1)^0,w,c
  2826   001A04  B0D8               	btfsc	status,0,c
  2827   001A06  D79A               	goto	__ptext9
  2828   001A08  D7F7               	goto	i2l3599
  2829   001A0A                     __end_of_tache4:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _tache3 *****************
  2833 ;; Defined at:
  2834 ;;		line 3 in file "T3.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, status,2, status,0
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_fonction_d_interruption
  2858 ;;		_initialisation_du_systeme
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text10
  2863   00185E                     __ptext10:
  2864                           	callstack 0
  2865   00185E                     _tache3:
  2866                           	callstack 28
  2867                           
  2868                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2869                           
  2870                           ;incstack = 0
  2871                           ;T3.c: 5: while(1)
  2872   00185E  0100               	movlb	0	; () banked
  2873   001860  0566               	decf	102,w,b
  2874   001862  A4D8               	btfss	status,2,c
  2875   001864  D014               	goto	i2l3499
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2879   001866  0ECA               	movlw	202
  2880   001868  6567               	cpfsgt	103,b
  2881   00186A  D011               	goto	i2l3499
  2882                           
  2883                           ; BSR set to: 0
  2884   00186C  0ED1               	movlw	209
  2885   00186E  6167               	cpfslt	103,b
  2886   001870  D00E               	goto	i2l3499
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2890   001872  0E70               	movlw	112
  2891   001874  6568               	cpfsgt	104,b
  2892   001876  D004               	goto	i2l3493
  2893                           
  2894                           ; BSR set to: 0
  2895   001878  0E79               	movlw	121
  2896   00187A  6168               	cpfslt	104,b
  2897   00187C  D001               	goto	i2l3493
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2901   00187E  848B               	bsf	139,2,c	;volatile
  2902   001880                     i2l3493:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2906   001880  0E78               	movlw	120
  2907   001882  6568               	cpfsgt	104,b
  2908   001884  D004               	goto	i2l3499
  2909                           
  2910                           ; BSR set to: 0
  2911   001886  0E7F               	movlw	127
  2912   001888  6168               	cpfslt	104,b
  2913   00188A  D001               	goto	i2l3499
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2917   00188C  948B               	bcf	139,2,c	;volatile
  2918   00188E                     i2l3499:
  2919                           
  2920                           ; BSR set to: 0
  2921                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2922   00188E  0566               	decf	102,w,b
  2923   001890  A4D8               	btfss	status,2,c
  2924   001892  D014               	goto	i2l3517
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2928   001894  0ED6               	movlw	214
  2929   001896  6567               	cpfsgt	103,b
  2930   001898  D011               	goto	i2l3517
  2931                           
  2932                           ; BSR set to: 0
  2933   00189A  0EDD               	movlw	221
  2934   00189C  6167               	cpfslt	103,b
  2935   00189E  D00E               	goto	i2l3517
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2939   0018A0  0E70               	movlw	112
  2940   0018A2  6568               	cpfsgt	104,b
  2941   0018A4  D004               	goto	i2l3511
  2942                           
  2943                           ; BSR set to: 0
  2944   0018A6  0E79               	movlw	121
  2945   0018A8  6168               	cpfslt	104,b
  2946   0018AA  D001               	goto	i2l3511
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2950   0018AC  828B               	bsf	139,1,c	;volatile
  2951   0018AE                     i2l3511:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2955   0018AE  0E78               	movlw	120
  2956   0018B0  6568               	cpfsgt	104,b
  2957   0018B2  D004               	goto	i2l3517
  2958                           
  2959                           ; BSR set to: 0
  2960   0018B4  0E7F               	movlw	127
  2961   0018B6  6168               	cpfslt	104,b
  2962   0018B8  D001               	goto	i2l3517
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2966   0018BA  928B               	bcf	139,1,c	;volatile
  2967   0018BC                     i2l3517:
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2971   0018BC  0566               	decf	102,w,b
  2972   0018BE  A4D8               	btfss	status,2,c
  2973   0018C0  D014               	goto	i2l3535
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2977   0018C2  0EE2               	movlw	226
  2978   0018C4  6567               	cpfsgt	103,b
  2979   0018C6  D011               	goto	i2l3535
  2980                           
  2981                           ; BSR set to: 0
  2982   0018C8  0EE9               	movlw	233
  2983   0018CA  6167               	cpfslt	103,b
  2984   0018CC  D00E               	goto	i2l3535
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  2988   0018CE  0E70               	movlw	112
  2989   0018D0  6568               	cpfsgt	104,b
  2990   0018D2  D004               	goto	i2l3529
  2991                           
  2992                           ; BSR set to: 0
  2993   0018D4  0E79               	movlw	121
  2994   0018D6  6168               	cpfslt	104,b
  2995   0018D8  D001               	goto	i2l3529
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  2999   0018DA  808F               	bsf	143,0,c	;volatile
  3000   0018DC                     i2l3529:
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  3004   0018DC  0E78               	movlw	120
  3005   0018DE  6568               	cpfsgt	104,b
  3006   0018E0  D004               	goto	i2l3535
  3007                           
  3008                           ; BSR set to: 0
  3009   0018E2  0E7F               	movlw	127
  3010   0018E4  6168               	cpfslt	104,b
  3011   0018E6  D001               	goto	i2l3535
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  3015   0018E8  908F               	bcf	143,0,c	;volatile
  3016   0018EA                     i2l3535:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  3020   0018EA  0566               	decf	102,w,b
  3021   0018EC  A4D8               	btfss	status,2,c
  3022   0018EE  D011               	goto	i2l3549
  3023                           
  3024                           ; BSR set to: 0
  3025                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  3026   0018F0  0EB3               	movlw	179
  3027   0018F2  6567               	cpfsgt	103,b
  3028   0018F4  D00E               	goto	i2l3549
  3029                           
  3030                           ; BSR set to: 0
  3031   0018F6  0EE6               	movlw	230
  3032   0018F8  6167               	cpfslt	103,b
  3033   0018FA  D00B               	goto	i2l3549
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  3037   0018FC  0E13               	movlw	19
  3038   0018FE  6568               	cpfsgt	104,b
  3039   001900  D008               	goto	i2l3549
  3040                           
  3041                           ; BSR set to: 0
  3042   001902  0E3C               	movlw	60
  3043   001904  6168               	cpfslt	104,b
  3044   001906  D005               	goto	i2l3549
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3048   001908  948B               	bcf	139,2,c	;volatile
  3049   00190A  828B               	bsf	139,1,c	;volatile
  3050   00190C  808F               	bsf	143,0,c	;volatile
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;T3.c: 62: TEST = 1;
  3054   00190E  0E01               	movlw	1
  3055   001910  6F81               	movwf	129,b
  3056   001912                     i2l3549:
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3060   001912  0566               	decf	102,w,b
  3061   001914  A4D8               	btfss	status,2,c
  3062   001916  D7A3               	goto	__ptext10
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3066   001918  0E77               	movlw	119
  3067   00191A  6567               	cpfsgt	103,b
  3068   00191C  D7A0               	goto	__ptext10
  3069                           
  3070                           ; BSR set to: 0
  3071   00191E  0EAA               	movlw	170
  3072   001920  6167               	cpfslt	103,b
  3073   001922  D79D               	goto	__ptext10
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3077   001924  0E13               	movlw	19
  3078   001926  6568               	cpfsgt	104,b
  3079   001928  D79A               	goto	__ptext10
  3080                           
  3081                           ; BSR set to: 0
  3082   00192A  0E3C               	movlw	60
  3083   00192C  6168               	cpfslt	104,b
  3084   00192E  D797               	goto	__ptext10
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3088   001930  948B               	bcf	139,2,c	;volatile
  3089   001932  928B               	bcf	139,1,c	;volatile
  3090   001934  908F               	bcf	143,0,c	;volatile
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;T3.c: 74: TEST = 0;
  3094   001936  0E00               	movlw	0
  3095   001938  6F81               	movwf	129,b
  3096                           
  3097                           ; BSR set to: 0
  3098   00193A  D791               	goto	__ptext10
  3099   00193C                     __end_of_tache3:
  3100                           	callstack 0
  3101                           
  3102 ;; *************** function _tache2 *****************
  3103 ;; Defined at:
  3104 ;;		line 3 in file "T2.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;		None
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  iy              2   11[COMRAM] unsigned int 
  3109 ;;  ix              2    9[COMRAM] unsigned int 
  3110 ;;  ly              1   16[COMRAM] unsigned char 
  3111 ;;  hy              1   15[COMRAM] unsigned char 
  3112 ;;  lx              1   14[COMRAM] unsigned char 
  3113 ;;  hx              1   13[COMRAM] unsigned char 
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:       10 bytes
  3128 ;; Hardware stack levels used: 1
  3129 ;; Hardware stack levels required when called: 1
  3130 ;; This function calls:
  3131 ;;		___lwdiv
  3132 ;;		_tp_delai
  3133 ;; This function is called by:
  3134 ;;		_fonction_d_interruption
  3135 ;;		_initialisation_du_systeme
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text11
  3140   001684                     __ptext11:
  3141                           	callstack 0
  3142   001684                     _tache2:
  3143                           	callstack 27
  3144                           
  3145                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;incstack = 0
  3149   001684  0E00               	movlw	0
  3150   001686  0100               	movlb	0	; () banked
  3151   001688  6F66               	movwf	102,b
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3155   00168A  868F               	bsf	143,3,c	;volatile
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;T2.c: 13: LATGbits.LATG4=0;
  3159   00168C  988F               	bcf	143,4,c	;volatile
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;T2.c: 14: tp_delai(3000);
  3163   00168E  0E0B               	movlw	11
  3164   001690  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3165   001692  0EB8               	movlw	184
  3166   001694  6E01               	movwf	tp_delai@itpd^0,c
  3167   001696  ECA3  F011         	call	_tp_delai	;wreg free
  3168                           
  3169                           ;T2.c: 18: ADCON2=0x16;
  3170   00169A  0E16               	movlw	22
  3171   00169C  6EC0               	movwf	192,c	;volatile
  3172                           
  3173                           ;T2.c: 19: ADCON0=0x01;
  3174   00169E  0E01               	movlw	1
  3175   0016A0  6EC2               	movwf	194,c	;volatile
  3176                           
  3177                           ;T2.c: 20: ADCON0=0x03;
  3178   0016A2  0E03               	movlw	3
  3179   0016A4  6EC2               	movwf	194,c	;volatile
  3180   0016A6                     i2l559:
  3181   0016A6  B2C2               	btfsc	194,1,c	;volatile
  3182   0016A8  D7FE               	goto	i2l559
  3183                           
  3184                           ;T2.c: 23: hx=ADRESH;
  3185   0016AA  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3186                           
  3187                           ;T2.c: 24: lx=ADRESL;
  3188   0016AE  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3189                           
  3190                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3191   0016B2  C00F  F008         	movff	tache2@lx,??_tache2
  3192   0016B6  0E0F               	movlw	15
  3193   0016B8  1608               	andwf	??_tache2^0,f,c
  3194   0016BA  B4D8               	btfsc	status,2,c
  3195   0016BC  D004               	goto	i2l4909
  3196   0016BE  0E00               	movlw	0
  3197   0016C0  6E0E               	movwf	tache2@hx^0,c
  3198   0016C2  0E00               	movlw	0
  3199   0016C4  6E0F               	movwf	tache2@lx^0,c
  3200   0016C6                     i2l4909:
  3201                           
  3202                           ;T2.c: 31: if (hx>=10)
  3203   0016C6  0E09               	movlw	9
  3204   0016C8  640E               	cpfsgt	tache2@hx^0,c
  3205   0016CA  D7DC               	goto	__ptext11
  3206                           
  3207                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3208   0016CC  968F               	bcf	143,3,c	;volatile
  3209                           
  3210                           ;T2.c: 34: LATGbits.LATG4=1;
  3211   0016CE  888F               	bsf	143,4,c	;volatile
  3212                           
  3213                           ;T2.c: 35: tp_delai(3000);
  3214   0016D0  0E0B               	movlw	11
  3215   0016D2  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3216   0016D4  0EB8               	movlw	184
  3217   0016D6  6E01               	movwf	tp_delai@itpd^0,c
  3218   0016D8  ECA3  F011         	call	_tp_delai	;wreg free
  3219                           
  3220                           ;T2.c: 39: ADCON2=0x16;
  3221   0016DC  0E16               	movlw	22
  3222   0016DE  6EC0               	movwf	192,c	;volatile
  3223                           
  3224                           ;T2.c: 40: ADCON0=0x05;
  3225   0016E0  0E05               	movlw	5
  3226   0016E2  6EC2               	movwf	194,c	;volatile
  3227                           
  3228                           ;T2.c: 41: ADCON0=0x07;
  3229   0016E4  0E07               	movlw	7
  3230   0016E6  6EC2               	movwf	194,c	;volatile
  3231   0016E8                     i2l564:
  3232   0016E8  B2C2               	btfsc	194,1,c	;volatile
  3233   0016EA  D7FE               	goto	i2l564
  3234                           
  3235                           ;T2.c: 44: hy=ADRESH;
  3236   0016EC  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3237                           
  3238                           ;T2.c: 45: ly=ADRESL;
  3239   0016F0  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3240                           
  3241                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3242   0016F4  C011  F008         	movff	tache2@ly,??_tache2
  3243   0016F8  0E0F               	movlw	15
  3244   0016FA  1608               	andwf	??_tache2^0,f,c
  3245   0016FC  B4D8               	btfsc	status,2,c
  3246   0016FE  D004               	goto	i2l4925
  3247   001700  0E00               	movlw	0
  3248   001702  6E10               	movwf	tache2@hy^0,c
  3249   001704  0E00               	movlw	0
  3250   001706  6E11               	movwf	tache2@ly^0,c
  3251   001708                     i2l4925:
  3252                           
  3253                           ;T2.c: 51: if (hy>=20)
  3254   001708  0E13               	movlw	19
  3255   00170A  6410               	cpfsgt	tache2@hy^0,c
  3256   00170C  D7BB               	goto	__ptext11
  3257                           
  3258                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3259   00170E  500E               	movf	tache2@hx^0,w,c
  3260   001710  6E08               	movwf	??_tache2^0,c
  3261   001712  500F               	movf	tache2@lx^0,w,c
  3262   001714  6E0A               	movwf	tache2@ix^0,c
  3263   001716  C008  F00B         	movff	??_tache2,tache2@ix+1
  3264                           
  3265                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3266   00171A  5010               	movf	tache2@hy^0,w,c
  3267   00171C  6E08               	movwf	??_tache2^0,c
  3268   00171E  5011               	movf	tache2@ly^0,w,c
  3269   001720  6E0C               	movwf	tache2@iy^0,c
  3270   001722  C008  F00D         	movff	??_tache2,tache2@iy+1
  3271                           
  3272                           ;T2.c: 55: ix=ix-3150;
  3273   001726  0EB2               	movlw	178
  3274   001728  240A               	addwf	tache2@ix^0,w,c
  3275   00172A  6E0A               	movwf	tache2@ix^0,c
  3276   00172C  0EF3               	movlw	243
  3277   00172E  200B               	addwfc	(tache2@ix+1)^0,w,c
  3278   001730  6E0B               	movwf	(tache2@ix+1)^0,c
  3279                           
  3280                           ;T2.c: 56: iy=iy-6500;
  3281   001732  0E9C               	movlw	156
  3282   001734  240C               	addwf	tache2@iy^0,w,c
  3283   001736  6E0C               	movwf	tache2@iy^0,c
  3284   001738  0EE6               	movlw	230
  3285   00173A  200D               	addwfc	(tache2@iy+1)^0,w,c
  3286   00173C  6E0D               	movwf	(tache2@iy+1)^0,c
  3287                           
  3288                           ;T2.c: 58: TP_x=ix/246;
  3289   00173E  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3290   001742  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3291   001746  0E00               	movlw	0
  3292   001748  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3293   00174A  0EF6               	movlw	246
  3294   00174C  6E03               	movwf	___lwdiv@divisor^0,c
  3295   00174E  ECA8  F00F         	call	___lwdiv	;wreg free
  3296   001752  5001               	movf	?___lwdiv^0,w,c
  3297   001754  0100               	movlb	0	; () banked
  3298   001756  6F67               	movwf	103,b
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;T2.c: 59: TP_y=127-(iy/409);
  3302   001758  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3303   00175C  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3304   001760  0E01               	movlw	1
  3305   001762  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3306   001764  0E99               	movlw	153
  3307   001766  6E03               	movwf	___lwdiv@divisor^0,c
  3308   001768  ECA8  F00F         	call	___lwdiv	;wreg free
  3309   00176C  5001               	movf	?___lwdiv^0,w,c
  3310   00176E  087F               	sublw	127
  3311   001770  0100               	movlb	0	; () banked
  3312   001772  6F68               	movwf	104,b
  3313                           
  3314                           ;T2.c: 68: TP_appui=1;
  3315   001774  0E01               	movlw	1
  3316   001776  D788               	goto	L3
  3317   001778                     __end_of_tache2:
  3318                           	callstack 0
  3319                           
  3320 ;; *************** function _tp_delai *****************
  3321 ;; Defined at:
  3322 ;;		line 87 in file "T2.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  itpd            2    0[COMRAM] unsigned int 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:        2 bytes
  3341 ;; Hardware stack levels used: 1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_tache2
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text12
  3350   002346                     __ptext12:
  3351                           	callstack 0
  3352   002346                     _tp_delai:
  3353                           	callstack 27
  3354                           
  3355                           ;T2.c: 89: while(itpd>0)
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;incstack = 0
  3359   002346  D006               	goto	i2l4477
  3360   002348                     i2l577:
  3361                           
  3362                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3363   002348  F000               	nop	
  3364   00234A  F000               	nop	
  3365   00234C  F000               	nop	
  3366                           
  3367                           ;T2.c: 92: itpd--;
  3368   00234E  0601               	decf	tp_delai@itpd^0,f,c
  3369   002350  A0D8               	btfss	status,0,c
  3370   002352  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3371   002354                     i2l4477:
  3372   002354  5001               	movf	tp_delai@itpd^0,w,c
  3373   002356  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3374   002358  B4D8               	btfsc	status,2,c
  3375   00235A  0012               	return	
  3376   00235C  D7F5               	goto	i2l577
  3377   00235E                     __end_of_tp_delai:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function ___lwdiv *****************
  3381 ;; Defined at:
  3382 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  dividend        2    0[COMRAM] unsigned int 
  3385 ;;  divisor         2    2[COMRAM] unsigned int 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  quotient        2    4[COMRAM] unsigned int 
  3388 ;;  counter         1    6[COMRAM] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  2    0[COMRAM] unsigned int 
  3391 ;; Registers used:
  3392 ;;		wreg, status,2, status,0
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;Total ram usage:        7 bytes
  3403 ;; Hardware stack levels used: 1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_tache2
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text13
  3412   001F50                     __ptext13:
  3413                           	callstack 0
  3414   001F50                     ___lwdiv:
  3415                           	callstack 27
  3416                           
  3417                           ;incstack = 0
  3418   001F50  0E00               	movlw	0
  3419   001F52  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3420   001F54  0E00               	movlw	0
  3421   001F56  6E05               	movwf	___lwdiv@quotient^0,c
  3422   001F58  5003               	movf	___lwdiv@divisor^0,w,c
  3423   001F5A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3424   001F5C  B4D8               	btfsc	status,2,c
  3425   001F5E  D01C               	goto	i2l2237
  3426   001F60  0E01               	movlw	1
  3427   001F62  6E07               	movwf	___lwdiv@counter^0,c
  3428   001F64  D004               	goto	i2l4543
  3429   001F66                     i2l4541:
  3430   001F66  90D8               	bcf	status,0,c
  3431   001F68  3603               	rlcf	___lwdiv@divisor^0,f,c
  3432   001F6A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3433   001F6C  2A07               	incf	___lwdiv@counter^0,f,c
  3434   001F6E                     i2l4543:
  3435   001F6E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3436   001F70  D7FA               	goto	i2l4541
  3437   001F72                     i2u268_40:
  3438   001F72  90D8               	bcf	status,0,c
  3439   001F74  3605               	rlcf	___lwdiv@quotient^0,f,c
  3440   001F76  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3441   001F78  5003               	movf	___lwdiv@divisor^0,w,c
  3442   001F7A  5C01               	subwf	___lwdiv@dividend^0,w,c
  3443   001F7C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3444   001F7E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3445   001F80  A0D8               	btfss	status,0,c
  3446   001F82  D005               	goto	i2l4553
  3447   001F84  5003               	movf	___lwdiv@divisor^0,w,c
  3448   001F86  5E01               	subwf	___lwdiv@dividend^0,f,c
  3449   001F88  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3450   001F8A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3451   001F8C  8005               	bsf	___lwdiv@quotient^0,0,c
  3452   001F8E                     i2l4553:
  3453   001F8E  90D8               	bcf	status,0,c
  3454   001F90  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3455   001F92  3203               	rrcf	___lwdiv@divisor^0,f,c
  3456   001F94  2E07               	decfsz	___lwdiv@counter^0,f,c
  3457   001F96  D7ED               	goto	i2u268_40
  3458   001F98                     i2l2237:
  3459   001F98  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3460   001F9C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3461   001FA0  0012               	return		;funcret
  3462   001FA2                     __end_of___lwdiv:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _tache1 *****************
  3466 ;; Defined at:
  3467 ;;		line 3 in file "T1.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  i               1    0        unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:        0 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 5
  3488 ;; This function calls:
  3489 ;;		_Init
  3490 ;;		_charger
  3491 ;;		_clear_graphics
  3492 ;;		_clear_line
  3493 ;;		_clear_text
  3494 ;;		_draw_char
  3495 ;;		_draw_dec8
  3496 ;;		_draw_hex8
  3497 ;;		_draw_square
  3498 ;;		_draw_string
  3499 ;;		_goto_lico
  3500 ;;		_init_rxtx
  3501 ;;		_initialisation_afficheur
  3502 ;;		_lecture_8bit_analogique
  3503 ;;		_plot1
  3504 ;;		_vide
  3505 ;;		_vitesse1
  3506 ;; This function is called by:
  3507 ;;		_fonction_d_interruption
  3508 ;;		_initialisation_du_systeme
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text14
  3513   0010DA                     __ptext14:
  3514                           	callstack 0
  3515   0010DA                     _tache1:
  3516                           	callstack 23
  3517                           
  3518                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3519                           
  3520                           ;incstack = 0
  3521   0010DA  9EF2               	bcf	242,7,c	;volatile
  3522                           
  3523                           ;T1.c: 8: initialisation_afficheur();
  3524   0010DC  EC05  F00D         	call	_initialisation_afficheur	;wreg free
  3525                           
  3526                           ;T1.c: 9: clear_text();
  3527   0010E0  ECDA  F010         	call	_clear_text	;wreg free
  3528                           
  3529                           ;T1.c: 10: clear_graphics();
  3530   0010E4  ECF2  F010         	call	_clear_graphics	;wreg free
  3531                           
  3532                           ;T1.c: 11: init_rxtx();
  3533   0010E8  EC31  F011         	call	_init_rxtx	;wreg free
  3534                           
  3535                           ;T1.c: 12: Init(2);
  3536   0010EC  0E02               	movlw	2
  3537   0010EE  6EE6               	movwf	postinc1,c
  3538   0010F0  EC20  F011         	call	_Init	;wreg free
  3539                           
  3540                           ;T1.c: 13: RXTX_libre=1;
  3541   0010F4  0E01               	movlw	1
  3542   0010F6  0100               	movlb	0	; () banked
  3543   0010F8  6F80               	movwf	128,b
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;T1.c: 14: TXREG1='R';
  3547   0010FA  0E52               	movlw	82
  3548   0010FC  6EAD               	movwf	173,c	;volatile
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3552   0010FE  8EF2               	bsf	242,7,c	;volatile
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3556   001100  948B               	bcf	139,2,c	;volatile
  3557                           
  3558                           ; BSR set to: 0
  3559   001102  928B               	bcf	139,1,c	;volatile
  3560                           
  3561                           ; BSR set to: 0
  3562   001104  908F               	bcf	143,0,c	;volatile
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;T1.c: 19: vitesse=0;
  3566   001106  0E00               	movlw	0
  3567   001108  6F73               	movwf	115,b
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;T1.c: 20: batterie=15;
  3571   00110A  0E0F               	movlw	15
  3572   00110C  6F74               	movwf	116,b
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;T1.c: 21: n_octet_badge=0;
  3576   00110E  0E00               	movlw	0
  3577   001110  6F7F               	movwf	127,b
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;T1.c: 22: TEST=0;
  3581   001112  0E00               	movlw	0
  3582   001114  6F81               	movwf	129,b
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;T1.c: 23: Operator=0;
  3586   001116  0E00               	movlw	0
  3587   001118  6F82               	movwf	130,b
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3591   00111A  0E22               	movlw	34
  3592   00111C  6E09               	movwf	goto_lico@colonne^0,c
  3593   00111E  0E0D               	movlw	13
  3594   001120  EC7C  F00F         	call	_goto_lico
  3595   001124  0E52               	movlw	82
  3596   001126  ECC1  F010         	call	_draw_char
  3597   00112A  0E20               	movlw	32
  3598   00112C  ECC1  F010         	call	_draw_char
  3599   001130  0E56               	movlw	86
  3600   001132  ECC1  F010         	call	_draw_char
  3601   001136  0E20               	movlw	32
  3602   001138  ECC1  F010         	call	_draw_char
  3603   00113C  0E42               	movlw	66
  3604   00113E  ECC1  F010         	call	_draw_char
  3605                           
  3606                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3607   001142  0E22               	movlw	34
  3608   001144  6E09               	movwf	goto_lico@colonne^0,c
  3609   001146  0E0E               	movlw	14
  3610   001148  EC7C  F00F         	call	_goto_lico
  3611   00114C  0E30               	movlw	48
  3612   00114E  ECC1  F010         	call	_draw_char
  3613   001152  0E20               	movlw	32
  3614   001154  ECC1  F010         	call	_draw_char
  3615   001158  0E30               	movlw	48
  3616   00115A  ECC1  F010         	call	_draw_char
  3617   00115E  0E20               	movlw	32
  3618   001160  ECC1  F010         	call	_draw_char
  3619   001164  0E30               	movlw	48
  3620   001166  ECC1  F010         	call	_draw_char
  3621                           
  3622                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3623   00116A  0E22               	movlw	34
  3624   00116C  6E09               	movwf	goto_lico@colonne^0,c
  3625   00116E  0E0F               	movlw	15
  3626   001170  EC7C  F00F         	call	_goto_lico
  3627   001174  0E31               	movlw	49
  3628   001176  ECC1  F010         	call	_draw_char
  3629   00117A  0E20               	movlw	32
  3630   00117C  ECC1  F010         	call	_draw_char
  3631   001180  0E31               	movlw	49
  3632   001182  ECC1  F010         	call	_draw_char
  3633   001186  0E20               	movlw	32
  3634   001188  ECC1  F010         	call	_draw_char
  3635   00118C  0E31               	movlw	49
  3636   00118E  ECC1  F010         	call	_draw_char
  3637                           
  3638                           ;T1.c: 29: TP_appui=0;
  3639   001192  0E00               	movlw	0
  3640   001194  0100               	movlb	0	; () banked
  3641   001196  6F66               	movwf	102,b
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;T1.c: 30: draw_square(180,20,230,60);
  3645   001198  0E14               	movlw	20
  3646   00119A  6E0F               	movwf	draw_square@y1^0,c
  3647   00119C  0EE6               	movlw	230
  3648   00119E  6E10               	movwf	draw_square@x2^0,c
  3649   0011A0  0E3C               	movlw	60
  3650   0011A2  6E11               	movwf	draw_square@y2^0,c
  3651   0011A4  0EB4               	movlw	180
  3652   0011A6  EC22  F010         	call	_draw_square
  3653                           
  3654                           ;T1.c: 31: draw_square(120,20,170,60);
  3655   0011AA  0E14               	movlw	20
  3656   0011AC  6E0F               	movwf	draw_square@y1^0,c
  3657   0011AE  0EAA               	movlw	170
  3658   0011B0  6E10               	movwf	draw_square@x2^0,c
  3659   0011B2  0E3C               	movlw	60
  3660   0011B4  6E11               	movwf	draw_square@y2^0,c
  3661   0011B6  0E78               	movlw	120
  3662   0011B8  EC22  F010         	call	_draw_square
  3663                           
  3664                           ;T1.c: 33: draw_string(2);
  3665   0011BC  0E02               	movlw	2
  3666   0011BE  6E08               	movwf	draw_string@tableau^0,c
  3667   0011C0  0E00               	movlw	0
  3668   0011C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3669   0011C4  EC61  F00E         	call	_draw_string	;wreg free
  3670   0011C8                     i2l4753:
  3671                           
  3672                           ;T1.c: 36: {;T1.c: 38: goto_lico(0,0);
  3673   0011C8  0E00               	movlw	0
  3674   0011CA  6E09               	movwf	goto_lico@colonne^0,c
  3675   0011CC  0E00               	movlw	0
  3676   0011CE  EC7C  F00F         	call	_goto_lico
  3677                           
  3678                           ;T1.c: 39: draw_string("Marche:");
  3679   0011D2  0E8D               	movlw	low STR_1
  3680   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3681   0011D6  0E10               	movlw	high STR_1
  3682   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3683   0011DA  EC61  F00E         	call	_draw_string	;wreg free
  3684                           
  3685                           ;T1.c: 40: if (PORTBbits.RB0==0)
  3686   0011DE  B081               	btfsc	129,0,c	;volatile
  3687   0011E0  D007               	goto	i2l434
  3688                           
  3689                           ;T1.c: 41: draw_string("AV");
  3690   0011E2  0ED5               	movlw	low STR_2
  3691   0011E4  6E08               	movwf	draw_string@tableau^0,c
  3692   0011E6  0E10               	movlw	high STR_2
  3693   0011E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3694   0011EA  EC61  F00E         	call	_draw_string	;wreg free
  3695   0011EE  D00F               	goto	i2l4765
  3696   0011F0                     i2l434:
  3697                           
  3698                           ;T1.c: 42: else;T1.c: 43: if (PORTBbits.RB1==0)
  3699   0011F0  B281               	btfsc	129,1,c	;volatile
  3700   0011F2  D007               	goto	i2l4763
  3701                           
  3702                           ;T1.c: 44: draw_string("AR");
  3703   0011F4  0ED2               	movlw	low STR_3
  3704   0011F6  6E08               	movwf	draw_string@tableau^0,c
  3705   0011F8  0E10               	movlw	high STR_3
  3706   0011FA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3707   0011FC  EC61  F00E         	call	_draw_string	;wreg free
  3708   001200  D006               	goto	i2l4765
  3709   001202                     i2l4763:
  3710                           
  3711                           ;T1.c: 45: else;T1.c: 46: draw_string("N ");
  3712   001202  0ECC               	movlw	low STR_4
  3713   001204  6E08               	movwf	draw_string@tableau^0,c
  3714   001206  0E10               	movlw	high STR_4
  3715   001208  6E09               	movwf	(draw_string@tableau+1)^0,c
  3716   00120A  EC61  F00E         	call	_draw_string	;wreg free
  3717   00120E                     i2l4765:
  3718                           
  3719                           ;T1.c: 48: goto_lico(1,0);
  3720   00120E  0E00               	movlw	0
  3721   001210  6E09               	movwf	goto_lico@colonne^0,c
  3722   001212  0E01               	movlw	1
  3723   001214  EC7C  F00F         	call	_goto_lico
  3724                           
  3725                           ;T1.c: 49: draw_string("Siege:");
  3726   001218  0E9C               	movlw	low STR_5
  3727   00121A  6E08               	movwf	draw_string@tableau^0,c
  3728   00121C  0E10               	movlw	high STR_5
  3729   00121E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3730   001220  EC61  F00E         	call	_draw_string	;wreg free
  3731                           
  3732                           ;T1.c: 50: if (PORTBbits.RB2==0)
  3733   001224  B481               	btfsc	129,2,c	;volatile
  3734   001226  D004               	goto	i2l4773
  3735                           
  3736                           ;T1.c: 51: {draw_char('1');}
  3737   001228  0E31               	movlw	49
  3738   00122A  ECC1  F010         	call	_draw_char
  3739   00122E  D003               	goto	i2l4775
  3740   001230                     i2l4773:
  3741                           
  3742                           ;T1.c: 52: else;T1.c: 53: {draw_char('0');}
  3743   001230  0E30               	movlw	48
  3744   001232  ECC1  F010         	call	_draw_char
  3745   001236                     i2l4775:
  3746                           
  3747                           ;T1.c: 55: goto_lico(2,0);
  3748   001236  0E00               	movlw	0
  3749   001238  6E09               	movwf	goto_lico@colonne^0,c
  3750   00123A  0E02               	movlw	2
  3751   00123C  EC7C  F00F         	call	_goto_lico
  3752                           
  3753                           ;T1.c: 56: draw_string("Temp. Eau:");
  3754   001240  0E66               	movlw	low STR_6
  3755   001242  6E08               	movwf	draw_string@tableau^0,c
  3756   001244  0E10               	movlw	high STR_6
  3757   001246  6E09               	movwf	(draw_string@tableau+1)^0,c
  3758   001248  EC61  F00E         	call	_draw_string	;wreg free
  3759                           
  3760                           ;T1.c: 57: draw_dec8(lecture_8bit_analogique(2));
  3761   00124C  0E02               	movlw	2
  3762   00124E  ECA6  F010         	call	_lecture_8bit_analogique
  3763   001252  EC13  F00E         	call	_draw_dec8
  3764                           
  3765                           ;T1.c: 59: goto_lico(3,0);
  3766   001256  0E00               	movlw	0
  3767   001258  6E09               	movwf	goto_lico@colonne^0,c
  3768   00125A  0E03               	movlw	3
  3769   00125C  EC7C  F00F         	call	_goto_lico
  3770                           
  3771                           ;T1.c: 60: draw_string("Temp. Huile:");
  3772   001260  0E41               	movlw	low STR_7
  3773   001262  6E08               	movwf	draw_string@tableau^0,c
  3774   001264  0E10               	movlw	high STR_7
  3775   001266  6E09               	movwf	(draw_string@tableau+1)^0,c
  3776   001268  EC61  F00E         	call	_draw_string	;wreg free
  3777                           
  3778                           ;T1.c: 61: draw_dec8(lecture_8bit_analogique(3));
  3779   00126C  0E03               	movlw	3
  3780   00126E  ECA6  F010         	call	_lecture_8bit_analogique
  3781   001272  EC13  F00E         	call	_draw_dec8
  3782                           
  3783                           ;T1.c: 63: goto_lico(4,0);
  3784   001276  0E00               	movlw	0
  3785   001278  6E09               	movwf	goto_lico@colonne^0,c
  3786   00127A  0E04               	movlw	4
  3787   00127C  EC7C  F00F         	call	_goto_lico
  3788                           
  3789                           ;T1.c: 64: draw_string("Choc:");
  3790   001280  0EB7               	movlw	low STR_8
  3791   001282  6E08               	movwf	draw_string@tableau^0,c
  3792   001284  0E10               	movlw	high STR_8
  3793   001286  6E09               	movwf	(draw_string@tableau+1)^0,c
  3794   001288  EC61  F00E         	call	_draw_string	;wreg free
  3795                           
  3796                           ;T1.c: 65: if (PORTBbits.RB3==0)
  3797   00128C  B681               	btfsc	129,3,c	;volatile
  3798   00128E  D004               	goto	i2l4795
  3799                           
  3800                           ;T1.c: 66: draw_char('1');
  3801   001290  0E31               	movlw	49
  3802   001292  ECC1  F010         	call	_draw_char
  3803   001296  D003               	goto	i2l4797
  3804   001298                     i2l4795:
  3805                           
  3806                           ;T1.c: 67: else;T1.c: 68: draw_char('0');
  3807   001298  0E30               	movlw	48
  3808   00129A  ECC1  F010         	call	_draw_char
  3809   00129E                     i2l4797:
  3810                           
  3811                           ;T1.c: 70: if(Operator == 2) {
  3812   00129E  0E02               	movlw	2
  3813   0012A0  0100               	movlb	0	; () banked
  3814   0012A2  1982               	xorwf	130,w,b
  3815   0012A4  A4D8               	btfss	status,2,c
  3816   0012A6  D003               	goto	i2l4801
  3817   0012A8                     i2u274_40:
  3818                           
  3819                           ; BSR set to: 0
  3820                           ;T1.c: 71: vitesse1();
  3821   0012A8  EC4F  F00F         	call	_vitesse1	;wreg free
  3822                           
  3823                           ;T1.c: 73: }
  3824   0012AC  D003               	goto	i2l4805
  3825   0012AE                     i2l4801:
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;T1.c: 74: else if(Operator ==1){
  3829   0012AE  0582               	decf	130,w,b
  3830   0012B0  B4D8               	btfsc	status,2,c
  3831   0012B2  D7FA               	goto	i2u274_40
  3832   0012B4                     i2l4805:
  3833                           
  3834                           ;T1.c: 79: };T1.c: 81: goto_lico(5,0);
  3835   0012B4  0E00               	movlw	0
  3836   0012B6  6E09               	movwf	goto_lico@colonne^0,c
  3837   0012B8  0E05               	movlw	5
  3838   0012BA  EC7C  F00F         	call	_goto_lico
  3839                           
  3840                           ;T1.c: 82: draw_string("Vitesse:");
  3841   0012BE  0E7B               	movlw	low STR_9
  3842   0012C0  6E08               	movwf	draw_string@tableau^0,c
  3843   0012C2  0E10               	movlw	high STR_9
  3844   0012C4  6E09               	movwf	(draw_string@tableau+1)^0,c
  3845   0012C6  EC61  F00E         	call	_draw_string	;wreg free
  3846                           
  3847                           ;T1.c: 84: draw_dec8(vitesse);
  3848   0012CA  0100               	movlb	0	; () banked
  3849   0012CC  5173               	movf	115,w,b
  3850   0012CE  EC13  F00E         	call	_draw_dec8
  3851                           
  3852                           ;T1.c: 86: goto_lico(6,0);
  3853   0012D2  0E00               	movlw	0
  3854   0012D4  6E09               	movwf	goto_lico@colonne^0,c
  3855   0012D6  0E06               	movlw	6
  3856   0012D8  EC7C  F00F         	call	_goto_lico
  3857                           
  3858                           ;T1.c: 87: draw_string("Batterie:");
  3859   0012DC  0E71               	movlw	low STR_10
  3860   0012DE  6E08               	movwf	draw_string@tableau^0,c
  3861   0012E0  0E10               	movlw	high STR_10
  3862   0012E2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3863   0012E4  EC61  F00E         	call	_draw_string	;wreg free
  3864                           
  3865                           ;T1.c: 88: if (PORTEbits.RE2==0 && batterie < 100)
  3866   0012E8  B484               	btfsc	132,2,c	;volatile
  3867   0012EA  D005               	goto	i2l4821
  3868   0012EC  0E64               	movlw	100
  3869   0012EE  0100               	movlb	0	; () banked
  3870   0012F0  6174               	cpfslt	116,b
  3871   0012F2  D001               	goto	i2l4821
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;T1.c: 89: batterie++;
  3875   0012F4  2B74               	incf	116,f,b
  3876   0012F6                     i2l4821:
  3877                           
  3878                           ;T1.c: 90: if (PORTEbits.RE3==0 && batterie > 0)
  3879   0012F6  B684               	btfsc	132,3,c	;volatile
  3880   0012F8  D004               	goto	i2l4827
  3881   0012FA  0100               	movlb	0	; () banked
  3882   0012FC  5174               	movf	116,w,b
  3883   0012FE  A4D8               	btfss	status,2,c
  3884                           
  3885                           ; BSR set to: 0
  3886                           ;T1.c: 91: batterie--;
  3887   001300  0774               	decf	116,f,b
  3888   001302                     i2l4827:
  3889                           
  3890                           ;T1.c: 92: draw_dec8(batterie);
  3891   001302  0100               	movlb	0	; () banked
  3892   001304  5174               	movf	116,w,b
  3893   001306  EC13  F00E         	call	_draw_dec8
  3894                           
  3895                           ;T1.c: 96: goto_lico(8,0);
  3896   00130A  0E00               	movlw	0
  3897   00130C  6E09               	movwf	goto_lico@colonne^0,c
  3898   00130E  0E08               	movlw	8
  3899   001310  EC7C  F00F         	call	_goto_lico
  3900                           
  3901                           ;T1.c: 97: draw_string("Badge:");
  3902   001314  0E95               	movlw	low STR_11
  3903   001316  6E08               	movwf	draw_string@tableau^0,c
  3904   001318  0E10               	movlw	high STR_11
  3905   00131A  6E09               	movwf	(draw_string@tableau+1)^0,c
  3906   00131C  EC61  F00E         	call	_draw_string	;wreg free
  3907                           
  3908                           ;T1.c: 98: if (n_octet_badge==0)
  3909   001320  0100               	movlb	0	; () banked
  3910   001322  517F               	movf	127,w,b
  3911   001324  A4D8               	btfss	status,2,c
  3912   001326  D007               	goto	i2l4837
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;T1.c: 99: draw_string(" AUCUN              ");
  3916   001328  0E1E               	movlw	low STR_12
  3917   00132A  6E08               	movwf	draw_string@tableau^0,c
  3918   00132C  0E10               	movlw	high STR_12
  3919   00132E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3920   001330  EC61  F00E         	call	_draw_string	;wreg free
  3921   001334  D01E               	goto	i2l451
  3922   001336                     i2l4837:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;T1.c: 100: else;T1.c: 101: {;T1.c: 108: if(Operator==2)
  3926   001336  0E02               	movlw	2
  3927   001338  1982               	xorwf	130,w,b
  3928   00133A  A4D8               	btfss	status,2,c
  3929   00133C  D007               	goto	i2l4841
  3930                           
  3931                           ; BSR set to: 0
  3932                           ;T1.c: 109: {;T1.c: 111: draw_string("Operator");
  3933   00133E  0E84               	movlw	low STR_13
  3934   001340  6E08               	movwf	draw_string@tableau^0,c
  3935   001342  0E10               	movlw	high STR_13
  3936   001344  6E09               	movwf	(draw_string@tableau+1)^0,c
  3937   001346  EC61  F00E         	call	_draw_string	;wreg free
  3938                           
  3939                           ;T1.c: 113: }
  3940   00134A  D013               	goto	i2l451
  3941   00134C                     i2l4841:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;T1.c: 114: else if(Operator==1)
  3945   00134C  0582               	decf	130,w,b
  3946   00134E  A4D8               	btfss	status,2,c
  3947   001350  D007               	goto	i2l4845
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;T1.c: 115: {;T1.c: 117: draw_string(" ADMIN");
  3951   001352  0EAA               	movlw	low STR_14
  3952   001354  6E08               	movwf	draw_string@tableau^0,c
  3953   001356  0E10               	movlw	high STR_14
  3954   001358  6E09               	movwf	(draw_string@tableau+1)^0,c
  3955   00135A  EC61  F00E         	call	_draw_string	;wreg free
  3956                           
  3957                           ;T1.c: 118: }
  3958   00135E  D009               	goto	i2l451
  3959   001360                     i2l4845:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;T1.c: 119: else if (Operator==0){
  3963   001360  5182               	movf	130,w,b
  3964   001362  A4D8               	btfss	status,2,c
  3965   001364  D006               	goto	i2l451
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;T1.c: 121: draw_string("AUCUN");
  3969   001366  0EBD               	movlw	low STR_15
  3970   001368  6E08               	movwf	draw_string@tableau^0,c
  3971   00136A  0E10               	movlw	high STR_15
  3972   00136C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3973   00136E  EC61  F00E         	call	_draw_string	;wreg free
  3974   001372                     i2l451:
  3975                           
  3976                           ;T1.c: 122: };T1.c: 123: };T1.c: 131: goto_lico(9,0);
  3977                           
  3978                           ; BSR set to: 0
  3979   001372  0E00               	movlw	0
  3980   001374  6E09               	movwf	goto_lico@colonne^0,c
  3981   001376  0E09               	movlw	9
  3982   001378  EC7C  F00F         	call	_goto_lico
  3983                           
  3984                           ;T1.c: 132: draw_string("X-Joystick:");
  3985   00137C  0E4E               	movlw	low STR_16
  3986   00137E  6E08               	movwf	draw_string@tableau^0,c
  3987   001380  0E10               	movlw	high STR_16
  3988   001382  6E09               	movwf	(draw_string@tableau+1)^0,c
  3989   001384  EC61  F00E         	call	_draw_string	;wreg free
  3990                           
  3991                           ;T1.c: 133: draw_hex8(lecture_8bit_analogique(10));
  3992   001388  0E0A               	movlw	10
  3993   00138A  ECA6  F010         	call	_lecture_8bit_analogique
  3994   00138E  EC21  F00F         	call	_draw_hex8
  3995                           
  3996                           ;T1.c: 135: goto_lico(10,0);
  3997   001392  0E00               	movlw	0
  3998   001394  6E09               	movwf	goto_lico@colonne^0,c
  3999   001396  0E0A               	movlw	10
  4000   001398  EC7C  F00F         	call	_goto_lico
  4001                           
  4002                           ;T1.c: 136: draw_string("Y-Joystick:");
  4003   00139C  0E5A               	movlw	low STR_17
  4004   00139E  6E08               	movwf	draw_string@tableau^0,c
  4005   0013A0  0E10               	movlw	high STR_17
  4006   0013A2  6E09               	movwf	(draw_string@tableau+1)^0,c
  4007   0013A4  EC61  F00E         	call	_draw_string	;wreg free
  4008                           
  4009                           ;T1.c: 137: draw_hex8(lecture_8bit_analogique(11));
  4010   0013A8  0E0B               	movlw	11
  4011   0013AA  ECA6  F010         	call	_lecture_8bit_analogique
  4012   0013AE  EC21  F00F         	call	_draw_hex8
  4013                           
  4014                           ;T1.c: 140: goto_lico(5,22);
  4015   0013B2  0E16               	movlw	22
  4016   0013B4  6E09               	movwf	goto_lico@colonne^0,c
  4017   0013B6  0E05               	movlw	5
  4018   0013B8  EC7C  F00F         	call	_goto_lico
  4019                           
  4020                           ;T1.c: 141: draw_string("VIDE");
  4021   0013BC  0EC3               	movlw	low STR_18
  4022   0013BE  6E08               	movwf	draw_string@tableau^0,c
  4023   0013C0  0E10               	movlw	high STR_18
  4024   0013C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  4025   0013C4  EC61  F00E         	call	_draw_string	;wreg free
  4026                           
  4027                           ;T1.c: 142: goto_lico(5,31);
  4028   0013C8  0E1F               	movlw	31
  4029   0013CA  6E09               	movwf	goto_lico@colonne^0,c
  4030   0013CC  0E05               	movlw	5
  4031   0013CE  EC7C  F00F         	call	_goto_lico
  4032                           
  4033                           ;T1.c: 143: draw_string("CHARGE");
  4034   0013D2  0EA3               	movlw	low STR_19
  4035   0013D4  6E08               	movwf	draw_string@tableau^0,c
  4036   0013D6  0E10               	movlw	high STR_19
  4037   0013D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  4038   0013DA  EC61  F00E         	call	_draw_string	;wreg free
  4039                           
  4040                           ;T1.c: 151: if (TP_appui==1)
  4041   0013DE  0100               	movlb	0	; () banked
  4042   0013E0  0566               	decf	102,w,b
  4043   0013E2  A4D8               	btfss	status,2,c
  4044   0013E4  D020               	goto	i2l455
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;T1.c: 152: {;T1.c: 153: goto_lico(0,20);
  4048   0013E6  0E14               	movlw	20
  4049   0013E8  6E09               	movwf	goto_lico@colonne^0,c
  4050   0013EA  0E00               	movlw	0
  4051   0013EC  EC7C  F00F         	call	_goto_lico
  4052                           
  4053                           ;T1.c: 154: draw_string("x=");
  4054   0013F0  0ECF               	movlw	low STR_20
  4055   0013F2  6E08               	movwf	draw_string@tableau^0,c
  4056   0013F4  0E10               	movlw	high STR_20
  4057   0013F6  6E09               	movwf	(draw_string@tableau+1)^0,c
  4058   0013F8  EC61  F00E         	call	_draw_string	;wreg free
  4059                           
  4060                           ;T1.c: 155: draw_hex8(TP_x);
  4061   0013FC  0100               	movlb	0	; () banked
  4062   0013FE  5167               	movf	103,w,b
  4063   001400  EC21  F00F         	call	_draw_hex8
  4064                           
  4065                           ;T1.c: 156: draw_string(" y=");
  4066   001404  0EC8               	movlw	low STR_21
  4067   001406  6E08               	movwf	draw_string@tableau^0,c
  4068   001408  0E10               	movlw	high STR_21
  4069   00140A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4070   00140C  EC61  F00E         	call	_draw_string	;wreg free
  4071                           
  4072                           ;T1.c: 157: draw_hex8(TP_y);
  4073   001410  0100               	movlb	0	; () banked
  4074   001412  5168               	movf	104,w,b
  4075   001414  EC21  F00F         	call	_draw_hex8
  4076                           
  4077                           ;T1.c: 158: plot1(TP_x,TP_y);
  4078   001418  C068 F009          	movff	104,plot1@y
  4079   00141C  0100               	movlb	0	; () banked
  4080   00141E  5167               	movf	103,w,b
  4081   001420  EC6B  F00D         	call	_plot1
  4082                           
  4083                           ;T1.c: 159: }
  4084   001424  D001               	goto	i2l4879
  4085   001426                     i2l455:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;T1.c: 160: else;T1.c: 161: {;T1.c: 162: __nop();
  4089   001426  F000               	nop	
  4090   001428                     i2l4879:
  4091                           
  4092                           ;T1.c: 163: };T1.c: 164: if (TEST==1){
  4093   001428  0100               	movlb	0	; () banked
  4094   00142A  0581               	decf	129,w,b
  4095   00142C  B4D8               	btfsc	status,2,c
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;T1.c: 165: charger();
  4099   00142E  ECBB  F011         	call	_charger	;wreg free
  4100                           
  4101                           ;T1.c: 166: };T1.c: 167: if(TEST==0){
  4102   001432  0100               	movlb	0	; () banked
  4103   001434  5181               	movf	129,w,b
  4104   001436  A4D8               	btfss	status,2,c
  4105   001438  D6C7               	goto	i2l4753
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;T1.c: 168: clear_line(14);
  4109   00143A  0E0E               	movlw	14
  4110   00143C  EC53  F011         	call	_clear_line
  4111                           
  4112                           ;T1.c: 169: vide();
  4113   001440  ECAF  F011         	call	_vide	;wreg free
  4114                           
  4115                           ;T1.c: 170: TEST=3;
  4116   001444  0E03               	movlw	3
  4117   001446  0100               	movlb	0	; () banked
  4118   001448  6F81               	movwf	129,b
  4119   00144A  D6BE               	goto	i2l4753
  4120   00144C                     __end_of_tache1:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function _vitesse1 *****************
  4124 ;; Defined at:
  4125 ;;		line 444 in file "afficheur.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;		None
  4128 ;; Auto vars:     Size  Location     Type
  4129 ;;		None
  4130 ;; Return value:  Size  Location     Type
  4131 ;;                  1    wreg      void 
  4132 ;; Registers used:
  4133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4134 ;; Tracked objects:
  4135 ;;		On entry : 0/0
  4136 ;;		On exit  : 0/0
  4137 ;;		Unchanged: 0/0
  4138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;Total ram usage:        0 bytes
  4144 ;; Hardware stack levels used: 1
  4145 ;; Hardware stack levels required when called: 4
  4146 ;; This function calls:
  4147 ;;		_draw_string
  4148 ;;		_goto_lico
  4149 ;; This function is called by:
  4150 ;;		_tache1
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text15
  4155   001E9E                     __ptext15:
  4156                           	callstack 0
  4157   001E9E                     _vitesse1:
  4158                           	callstack 23
  4159                           
  4160                           ;afficheur.c: 445: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;incstack = 0
  4164   001E9E  A081               	btfss	129,0,c	;volatile
  4165   001EA0  D002               	goto	i2u244_40
  4166   001EA2  B281               	btfsc	129,1,c	;volatile
  4167   001EA4  0012               	return	
  4168   001EA6                     i2u244_40:
  4169                           
  4170                           ;afficheur.c: 446: goto_lico(7,0);
  4171   001EA6  0E00               	movlw	0
  4172   001EA8  6E09               	movwf	goto_lico@colonne^0,c
  4173   001EAA  0E07               	movlw	7
  4174   001EAC  EC7C  F00F         	call	_goto_lico
  4175                           
  4176                           ;afficheur.c: 447: if (PORTEbits.RE4==0){
  4177   001EB0  B884               	btfsc	132,4,c	;volatile
  4178   001EB2  D007               	goto	i2l4409
  4179                           
  4180                           ;afficheur.c: 448: draw_string("((!))");
  4181   001EB4  0EB1               	movlw	low STR_24
  4182   001EB6  6E08               	movwf	draw_string@tableau^0,c
  4183   001EB8  0E10               	movlw	high STR_24
  4184   001EBA  6E09               	movwf	(draw_string@tableau+1)^0,c
  4185   001EBC  EC61  F00E         	call	_draw_string	;wreg free
  4186                           
  4187                           ;afficheur.c: 449: }
  4188   001EC0  0012               	return	
  4189   001EC2                     i2l4409:
  4190                           
  4191                           ;afficheur.c: 450: else{;afficheur.c: 451: draw_string("     ");
  4192   001EC2  0E2D               	movlw	low (STR_12+15)
  4193   001EC4  6E08               	movwf	draw_string@tableau^0,c
  4194   001EC6  0E10               	movlw	high (STR_12+15)
  4195   001EC8  6E09               	movwf	(draw_string@tableau+1)^0,c
  4196   001ECA  EC61  F00E         	call	_draw_string	;wreg free
  4197                           
  4198                           ;afficheur.c: 452: if(TEST==1){
  4199   001ECE  0100               	movlb	0	; () banked
  4200   001ED0  0581               	decf	129,w,b
  4201   001ED2  A4D8               	btfss	status,2,c
  4202   001ED4  D00D               	goto	i2l1441
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;afficheur.c: 453: if (PORTEbits.RE0==0 && vitesse < 15)
  4206   001ED6  B084               	btfsc	132,0,c	;volatile
  4207   001ED8  D004               	goto	i2l4419
  4208                           
  4209                           ; BSR set to: 0
  4210   001EDA  0E0F               	movlw	15
  4211   001EDC  6173               	cpfslt	115,b
  4212   001EDE  D001               	goto	i2l4419
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;afficheur.c: 454: vitesse++;
  4216   001EE0  2B73               	incf	115,f,b
  4217   001EE2                     i2l4419:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;afficheur.c: 455: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4221   001EE2  B284               	btfsc	132,1,c	;volatile
  4222   001EE4  0012               	return	
  4223                           
  4224                           ; BSR set to: 0
  4225   001EE6  5173               	movf	115,w,b
  4226   001EE8  B4D8               	btfsc	status,2,c
  4227   001EEA  0012               	return	
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;afficheur.c: 456: vitesse--;
  4231   001EEC  0773               	decf	115,f,b
  4232   001EEE  0012               	return	
  4233   001EF0                     i2l1441:
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;afficheur.c: 459: if (PORTEbits.RE0==0 && vitesse < 25)
  4237   001EF0  B084               	btfsc	132,0,c	;volatile
  4238   001EF2  D7F7               	goto	i2l4419
  4239                           
  4240                           ; BSR set to: 0
  4241   001EF4  0E19               	movlw	25
  4242   001EF6  D7F2               	goto	L8
  4243   001EF8                     __end_of_vitesse1:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _vide *****************
  4247 ;; Defined at:
  4248 ;;		line 438 in file "afficheur.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;		None
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;Total ram usage:        0 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 4
  4269 ;; This function calls:
  4270 ;;		_draw_string
  4271 ;;		_goto_lico
  4272 ;; This function is called by:
  4273 ;;		_tache1
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text16
  4278   00235E                     __ptext16:
  4279                           	callstack 0
  4280   00235E                     _vide:
  4281                           	callstack 23
  4282                           
  4283                           ;afficheur.c: 440: goto_lico(14,0);
  4284                           
  4285                           ;incstack = 0
  4286   00235E  0E00               	movlw	0
  4287   002360  6E09               	movwf	goto_lico@colonne^0,c
  4288   002362  0E0E               	movlw	14
  4289   002364  EC7C  F00F         	call	_goto_lico
  4290                           
  4291                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4292   002368  0E33               	movlw	low STR_23
  4293   00236A  6E08               	movwf	draw_string@tableau^0,c
  4294   00236C  0E10               	movlw	high STR_23
  4295   00236E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4296   002370  EC61  F00E         	call	_draw_string	;wreg free
  4297   002374  0012               	return		;funcret
  4298   002376                     __end_of_vide:
  4299                           	callstack 0
  4300                           
  4301 ;; *************** function _lecture_8bit_analogique *****************
  4302 ;; Defined at:
  4303 ;;		line 60 in file "main.c"
  4304 ;; Parameters:    Size  Location     Type
  4305 ;;  channel         1    wreg     unsigned char 
  4306 ;; Auto vars:     Size  Location     Type
  4307 ;;  channel         1    1[COMRAM] unsigned char 
  4308 ;;  ret             1    0[COMRAM] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      unsigned char 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:        2 bytes
  4323 ;; Hardware stack levels used: 1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_tache1
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text17
  4332   00214C                     __ptext17:
  4333                           	callstack 0
  4334   00214C                     _lecture_8bit_analogique:
  4335                           	callstack 27
  4336                           
  4337                           ;incstack = 0
  4338                           ;lecture_8bit_analogique@channel stored from wreg
  4339   00214C  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4340                           
  4341                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4342   00214E  0E00               	movlw	0
  4343   002150  6EC1               	movwf	193,c	;volatile
  4344                           
  4345                           ;main.c: 66: ADCON2=0x16;
  4346   002152  0E16               	movlw	22
  4347   002154  6EC0               	movwf	192,c	;volatile
  4348                           
  4349                           ;main.c: 67: channel=channel&0x1F;
  4350   002156  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4351   002158  0B1F               	andlw	31
  4352   00215A  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4353                           
  4354                           ;main.c: 68: channel=channel<<2;
  4355   00215C  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4356   00215E  46E8               	rlncf	wreg,f,c
  4357   002160  0BFC               	andlw	252
  4358   002162  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4359                           
  4360                           ;main.c: 69: ADCON0=channel|0x01;
  4361   002164  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4362   002166  0901               	iorlw	1
  4363   002168  6EC2               	movwf	194,c	;volatile
  4364                           
  4365                           ;main.c: 71: ADCON0bits.GO=1;
  4366   00216A  82C2               	bsf	194,1,c	;volatile
  4367   00216C                     i2l144:
  4368   00216C  B2C2               	btfsc	194,1,c	;volatile
  4369   00216E  D7FE               	goto	i2l144
  4370                           
  4371                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4372   002170  A0C3               	btfss	195,0,c	;volatile
  4373   002172  D003               	goto	i2l147
  4374                           
  4375                           ;main.c: 76: ret=0;
  4376   002174  0E00               	movlw	0
  4377   002176  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4378   002178  D002               	goto	i2l2801
  4379   00217A                     i2l147:
  4380                           
  4381                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4382   00217A  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4383   00217E                     i2l2801:
  4384                           
  4385                           ;main.c: 82: return ret;
  4386   00217E  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4387   002180  0012               	return		;funcret
  4388   002182                     __end_of_lecture_8bit_analogique:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _initialisation_afficheur *****************
  4392 ;; Defined at:
  4393 ;;		line 164 in file "afficheur.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  error_count     1    8[COMRAM] unsigned char 
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        1 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 3
  4414 ;; This function calls:
  4415 ;;		_check_status_ok
  4416 ;;		_command
  4417 ;;		_d1command
  4418 ;;		_d2command
  4419 ;;		_delai_us_char
  4420 ;; This function is called by:
  4421 ;;		_tache1
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text18
  4426   001A0A                     __ptext18:
  4427                           	callstack 0
  4428   001A0A                     _initialisation_afficheur:
  4429                           	callstack 24
  4430                           
  4431                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4432                           
  4433                           ;incstack = 0
  4434   001A0A  0E00               	movlw	0
  4435   001A0C  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4436                           
  4437                           ;afficheur.c: 172: LATH=0;
  4438   001A0E  0E00               	movlw	0
  4439   001A10  6E90               	movwf	144,c	;volatile
  4440                           
  4441                           ;afficheur.c: 173: LATJ=0x1F;
  4442   001A12  0E1F               	movlw	31
  4443   001A14  6E91               	movwf	145,c	;volatile
  4444                           
  4445                           ;afficheur.c: 176: TRISH=0;
  4446   001A16  0E00               	movlw	0
  4447   001A18  6E99               	movwf	153,c	;volatile
  4448                           
  4449                           ;afficheur.c: 177: TRISJ=0;
  4450   001A1A  0E00               	movlw	0
  4451   001A1C  6E9A               	movwf	154,c	;volatile
  4452                           
  4453                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4454   001A1E  9A91               	bcf	145,5,c	;volatile
  4455                           
  4456                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4457   001A20  8C91               	bsf	145,6,c	;volatile
  4458                           
  4459                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4460   001A22  9891               	bcf	145,4,c	;volatile
  4461                           
  4462                           ;afficheur.c: 185: delai_us_char(4);
  4463   001A24  0E04               	movlw	4
  4464   001A26  EC42  F011         	call	_delai_us_char
  4465                           
  4466                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4467   001A2A  8891               	bsf	145,4,c	;volatile
  4468                           
  4469                           ;afficheur.c: 190: delai_us_char(12);
  4470   001A2C  0E0C               	movlw	12
  4471   001A2E  EC42  F011         	call	_delai_us_char
  4472                           
  4473                           ;afficheur.c: 191: while(check_status_ok()==00)
  4474   001A32  D00C               	goto	i2l4331
  4475   001A34                     i2l4321:
  4476                           
  4477                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4478   001A34  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4479                           
  4480                           ;afficheur.c: 194: delai_us_char(12);
  4481   001A36  0E0C               	movlw	12
  4482   001A38  EC42  F011         	call	_delai_us_char
  4483                           
  4484                           ;afficheur.c: 195: if (error_count>200)
  4485   001A3C  0EC8               	movlw	200
  4486   001A3E  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4487   001A40  D005               	goto	i2l4331
  4488                           
  4489                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4490   001A42  828B               	bsf	139,1,c	;volatile
  4491   001A44  808F               	bsf	143,0,c	;volatile
  4492   001A46  948B               	bcf	139,2,c	;volatile
  4493                           
  4494                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4495   001A48  9EF2               	bcf	242,7,c	;volatile
  4496   001A4A                     i2l1300:
  4497   001A4A  D7FF               	goto	i2l1300
  4498   001A4C                     i2l4331:
  4499   001A4C  EC0A  F011         	call	_check_status_ok	;wreg free
  4500   001A50  0900               	iorlw	0
  4501   001A52  B4D8               	btfsc	status,2,c
  4502   001A54  D7EF               	goto	i2l4321
  4503                           
  4504                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4505   001A56  0E0F               	movlw	15
  4506   001A58  6E05               	movwf	d2command@d2^0,c
  4507   001A5A  0E21               	movlw	33
  4508   001A5C  6E06               	movwf	d2command@cmd^0,c
  4509   001A5E  0E27               	movlw	39
  4510   001A60  ECFA  F00F         	call	_d2command
  4511                           
  4512                           ;afficheur.c: 206: d2command(0,0,0x22);
  4513   001A64  0E00               	movlw	0
  4514   001A66  6E05               	movwf	d2command@d2^0,c
  4515   001A68  0E22               	movlw	34
  4516   001A6A  6E06               	movwf	d2command@cmd^0,c
  4517   001A6C  0E00               	movlw	0
  4518   001A6E  ECFA  F00F         	call	_d2command
  4519                           
  4520                           ;afficheur.c: 207: d2command(0,0,0x24);
  4521   001A72  0E00               	movlw	0
  4522   001A74  6E05               	movwf	d2command@d2^0,c
  4523   001A76  0E24               	movlw	36
  4524   001A78  6E06               	movwf	d2command@cmd^0,c
  4525   001A7A  0E00               	movlw	0
  4526   001A7C  ECFA  F00F         	call	_d2command
  4527                           
  4528                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4529   001A80  0E7B               	movlw	123
  4530   001A82  6E05               	movwf	d2command@d2^0,c
  4531   001A84  0E40               	movlw	64
  4532   001A86  6E06               	movwf	d2command@cmd^0,c
  4533   001A88  0E00               	movlw	0
  4534   001A8A  ECFA  F00F         	call	_d2command
  4535                           
  4536                           ;afficheur.c: 211: d2command(40,0,0x41);
  4537   001A8E  0E00               	movlw	0
  4538   001A90  6E05               	movwf	d2command@d2^0,c
  4539   001A92  0E41               	movlw	65
  4540   001A94  6E06               	movwf	d2command@cmd^0,c
  4541   001A96  0E28               	movlw	40
  4542   001A98  ECFA  F00F         	call	_d2command
  4543                           
  4544                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4545   001A9C  0E80               	movlw	128
  4546   001A9E  6E05               	movwf	d2command@d2^0,c
  4547   001AA0  0E42               	movlw	66
  4548   001AA2  6E06               	movwf	d2command@cmd^0,c
  4549   001AA4  0E00               	movlw	0
  4550   001AA6  ECFA  F00F         	call	_d2command
  4551                           
  4552                           ;afficheur.c: 213: d2command(40,0,0x43);
  4553   001AAA  0E00               	movlw	0
  4554   001AAC  6E05               	movwf	d2command@d2^0,c
  4555   001AAE  0E43               	movlw	67
  4556   001AB0  6E06               	movwf	d2command@cmd^0,c
  4557   001AB2  0E28               	movlw	40
  4558   001AB4  ECFA  F00F         	call	_d2command
  4559                           
  4560                           ;afficheur.c: 216: command(0x80);
  4561   001AB8  0E80               	movlw	128
  4562   001ABA  EC70  F011         	call	_command
  4563                           
  4564                           ;afficheur.c: 219: command(0x9C);
  4565   001ABE  0E9C               	movlw	156
  4566   001AC0  EC70  F011         	call	_command
  4567                           
  4568                           ;afficheur.c: 222: command(0xA0);
  4569   001AC4  0EA0               	movlw	160
  4570   001AC6  EC70  F011         	call	_command
  4571                           
  4572                           ;afficheur.c: 225: d1command(0x02,0x70);
  4573   001ACA  0E70               	movlw	112
  4574   001ACC  6E05               	movwf	d1command@cmd^0,c
  4575   001ACE  0E02               	movlw	2
  4576   001AD0  EC6D  F010         	call	_d1command
  4577   001AD4  0012               	return		;funcret
  4578   001AD6                     __end_of_initialisation_afficheur:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function _check_status_ok *****************
  4582 ;; Defined at:
  4583 ;;		line 30 in file "afficheur.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  res             1    0[COMRAM] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      unsigned char 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;Total ram usage:        1 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_initialisation_afficheur
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text19
  4611   002214                     __ptext19:
  4612                           	callstack 0
  4613   002214                     _check_status_ok:
  4614                           	callstack 26
  4615                           
  4616                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4617                           
  4618                           ;incstack = 0
  4619   002214  6899               	setf	153,c	;volatile
  4620                           
  4621                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4622   002216  8091               	bsf	145,0,c	;volatile
  4623                           
  4624                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4625   002218  9691               	bcf	145,3,c	;volatile
  4626                           
  4627                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4628   00221A  9291               	bcf	145,1,c	;volatile
  4629                           
  4630                           ;afficheur.c: 39: __nop();
  4631   00221C  F000               	nop	
  4632                           
  4633                           ;afficheur.c: 40: __nop();
  4634   00221E  F000               	nop	
  4635                           
  4636                           ;afficheur.c: 41: __nop();
  4637   002220  F000               	nop	
  4638                           
  4639                           ;afficheur.c: 42: res=PORTH;
  4640   002222  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4641                           
  4642                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4643   002226  8291               	bsf	145,1,c	;volatile
  4644                           
  4645                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4646   002228  8691               	bsf	145,3,c	;volatile
  4647                           
  4648                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4649   00222A  5001               	movf	check_status_ok@res^0,w,c
  4650   00222C  0B03               	andlw	3
  4651   00222E  0A03               	xorlw	3
  4652   002230  A4D8               	btfss	status,2,c
  4653   002232  D002               	goto	i2l2771
  4654                           
  4655                           ;afficheur.c: 47: res=1;
  4656   002234  0E01               	movlw	1
  4657   002236  D001               	goto	L4
  4658   002238                     i2l2771:
  4659                           
  4660                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4661   002238  0E00               	movlw	0
  4662   00223A                     L4:
  4663   00223A  6E01               	movwf	check_status_ok@res^0,c
  4664                           
  4665                           ;afficheur.c: 50: return res;
  4666   00223C  5001               	movf	check_status_ok@res^0,w,c
  4667   00223E  0012               	return		;funcret
  4668   002240                     __end_of_check_status_ok:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _init_rxtx *****************
  4672 ;; Defined at:
  4673 ;;		line 4 in file "rxtx.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;Total ram usage:        0 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; This function calls:
  4694 ;;		Nothing
  4695 ;; This function is called by:
  4696 ;;		_tache1
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700                           	psect	text20
  4701   002262                     __ptext20:
  4702                           	callstack 0
  4703   002262                     _init_rxtx:
  4704                           	callstack 27
  4705                           
  4706                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4707                           
  4708                           ;incstack = 0
  4709   002262  9C94               	bcf	148,6,c	;volatile
  4710                           
  4711                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4712   002264  8E94               	bsf	148,7,c	;volatile
  4713                           
  4714                           ;rxtx.c: 8: BAUDCON1=0x08;
  4715   002266  0E08               	movlw	8
  4716   002268  6E65               	movwf	101,c	;volatile
  4717                           
  4718                           ;rxtx.c: 9: SPBRGH1=0x04;
  4719   00226A  0E04               	movlw	4
  4720   00226C  6ED4               	movwf	212,c	;volatile
  4721                           
  4722                           ;rxtx.c: 10: SPBRG1=0xE1;
  4723   00226E  0EE1               	movlw	225
  4724   002270  6EAF               	movwf	175,c	;volatile
  4725                           
  4726                           ;rxtx.c: 11: TXSTA1=0x04;
  4727   002272  0E04               	movlw	4
  4728   002274  6EAC               	movwf	172,c	;volatile
  4729                           
  4730                           ;rxtx.c: 12: RCSTA1=0x80;
  4731   002276  0E80               	movlw	128
  4732   002278  6EAB               	movwf	171,c	;volatile
  4733                           
  4734                           ;rxtx.c: 13: TXSTA1=0x24;
  4735   00227A  0E24               	movlw	36
  4736   00227C  6EAC               	movwf	172,c	;volatile
  4737                           
  4738                           ;rxtx.c: 14: RCSTA1=0x90;
  4739   00227E  0E90               	movlw	144
  4740   002280  6EAB               	movwf	171,c	;volatile
  4741   002282  0012               	return		;funcret
  4742   002284                     __end_of_init_rxtx:
  4743                           	callstack 0
  4744                           
  4745 ;; *************** function _draw_square *****************
  4746 ;; Defined at:
  4747 ;;		line 325 in file "afficheur.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  x1              1    wreg     unsigned char 
  4750 ;;  y1              1   14[COMRAM] unsigned char 
  4751 ;;  x2              1   15[COMRAM] unsigned char 
  4752 ;;  y2              1   16[COMRAM] unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  x1              1   17[COMRAM] unsigned char 
  4755 ;;  y               1   19[COMRAM] unsigned char 
  4756 ;;  x               1   18[COMRAM] unsigned char 
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  1    wreg      void 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;Total ram usage:        6 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; Hardware stack levels required when called: 4
  4773 ;; This function calls:
  4774 ;;		_plot1
  4775 ;; This function is called by:
  4776 ;;		_tache1
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text21
  4781   002044                     __ptext21:
  4782                           	callstack 0
  4783   002044                     _draw_square:
  4784                           	callstack 23
  4785                           
  4786                           ;incstack = 0
  4787                           ;draw_square@x1 stored from wreg
  4788   002044  6E12               	movwf	draw_square@x1^0,c
  4789                           
  4790                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4791   002046  C012  F013         	movff	draw_square@x1,draw_square@x
  4792   00204A  D00B               	goto	i2l4369
  4793   00204C                     i2l4365:
  4794                           
  4795                           ;afficheur.c: 330: plot1(x, y1);
  4796   00204C  C00F  F009         	movff	draw_square@y1,plot1@y
  4797   002050  5013               	movf	draw_square@x^0,w,c
  4798   002052  EC6B  F00D         	call	_plot1
  4799                           
  4800                           ;afficheur.c: 331: plot1(x, y2);
  4801   002056  C011  F009         	movff	draw_square@y2,plot1@y
  4802   00205A  5013               	movf	draw_square@x^0,w,c
  4803   00205C  EC6B  F00D         	call	_plot1
  4804   002060  2A13               	incf	draw_square@x^0,f,c
  4805   002062                     i2l4369:
  4806   002062  5013               	movf	draw_square@x^0,w,c
  4807   002064  5C10               	subwf	draw_square@x2^0,w,c
  4808   002066  B0D8               	btfsc	status,0,c
  4809   002068  D7F1               	goto	i2l4365
  4810                           
  4811                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4812   00206A  C00F  F014         	movff	draw_square@y1,draw_square@y
  4813   00206E  D00B               	goto	i2l4375
  4814   002070                     i2l4371:
  4815                           
  4816                           ;afficheur.c: 336: plot1(x1, y);
  4817   002070  C014  F009         	movff	draw_square@y,plot1@y
  4818   002074  5012               	movf	draw_square@x1^0,w,c
  4819   002076  EC6B  F00D         	call	_plot1
  4820                           
  4821                           ;afficheur.c: 337: plot1(x2, y);
  4822   00207A  C014  F009         	movff	draw_square@y,plot1@y
  4823   00207E  5010               	movf	draw_square@x2^0,w,c
  4824   002080  EC6B  F00D         	call	_plot1
  4825   002084  2A14               	incf	draw_square@y^0,f,c
  4826   002086                     i2l4375:
  4827   002086  5014               	movf	draw_square@y^0,w,c
  4828   002088  5C11               	subwf	draw_square@y2^0,w,c
  4829   00208A  A0D8               	btfss	status,0,c
  4830   00208C  0012               	return	
  4831   00208E  D7F0               	goto	i2l4371
  4832   002090                     __end_of_draw_square:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _plot1 *****************
  4836 ;; Defined at:
  4837 ;;		line 390 in file "afficheur.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  x               1    wreg     unsigned char 
  4840 ;;  y               1    8[COMRAM] unsigned char 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  x               1   13[COMRAM] unsigned char 
  4843 ;;  add             2   11[COMRAM] unsigned int 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;                  1    wreg      void 
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4853 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4857 ;;Total ram usage:        6 bytes
  4858 ;; Hardware stack levels used: 1
  4859 ;; Hardware stack levels required when called: 3
  4860 ;; This function calls:
  4861 ;;		___awdiv
  4862 ;;		___awmod
  4863 ;;		_command
  4864 ;;		_d2command
  4865 ;; This function is called by:
  4866 ;;		_tache1
  4867 ;;		_draw_square
  4868 ;;		_draw_filled_square
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           	psect	text22
  4873   001AD6                     __ptext22:
  4874                           	callstack 0
  4875   001AD6                     _plot1:
  4876                           	callstack 24
  4877                           
  4878                           ;incstack = 0
  4879                           ;plot1@x stored from wreg
  4880   001AD6  6E0E               	movwf	plot1@x^0,c
  4881                           
  4882                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  4883   001AD8  C00E  F001         	movff	plot1@x,___awdiv@dividend
  4884   001ADC  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4885   001ADE  0E00               	movlw	0
  4886   001AE0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4887   001AE2  0E06               	movlw	6
  4888   001AE4  6E03               	movwf	___awdiv@divisor^0,c
  4889   001AE6  ECA7  F00E         	call	___awdiv	;wreg free
  4890   001AEA  5009               	movf	plot1@y^0,w,c
  4891   001AEC  0D28               	mullw	40
  4892   001AEE  CFF3 F00A          	movff	prodl,??_plot1
  4893   001AF2  CFF4 F00B          	movff	prodh,??_plot1+1
  4894   001AF6  5001               	movf	?___awdiv^0,w,c
  4895   001AF8  240A               	addwf	??_plot1^0,w,c
  4896   001AFA  6E0C               	movwf	plot1@add^0,c
  4897   001AFC  5002               	movf	(?___awdiv+1)^0,w,c
  4898   001AFE  200B               	addwfc	(??_plot1+1)^0,w,c
  4899   001B00  6E0D               	movwf	(plot1@add+1)^0,c
  4900                           
  4901                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  4902   001B02  500D               	movf	(plot1@add+1)^0,w,c
  4903   001B04  6E05               	movwf	d2command@d2^0,c
  4904   001B06  0E24               	movlw	36
  4905   001B08  6E06               	movwf	d2command@cmd^0,c
  4906   001B0A  500C               	movf	plot1@add^0,w,c
  4907   001B0C  ECFA  F00F         	call	_d2command
  4908                           
  4909                           ;afficheur.c: 397: switch(x%6)
  4910   001B10  D018               	goto	i2l4295
  4911   001B12                     i2l4281:
  4912   001B12  0EFD               	movlw	253
  4913   001B14  EC70  F011         	call	_command
  4914   001B18  0012               	return	
  4915   001B1A                     i2l4283:
  4916   001B1A  0EFC               	movlw	252
  4917   001B1C  EC70  F011         	call	_command
  4918   001B20  0012               	return	
  4919   001B22                     i2l4285:
  4920   001B22  0EFB               	movlw	251
  4921   001B24  EC70  F011         	call	_command
  4922   001B28  0012               	return	
  4923   001B2A                     i2l4287:
  4924   001B2A  0EFA               	movlw	250
  4925   001B2C  EC70  F011         	call	_command
  4926   001B30  0012               	return	
  4927   001B32                     i2l4289:
  4928   001B32  0EF9               	movlw	249
  4929   001B34  EC70  F011         	call	_command
  4930   001B38  0012               	return	
  4931   001B3A                     i2l4291:
  4932   001B3A  0EF8               	movlw	248
  4933   001B3C  EC70  F011         	call	_command
  4934   001B40  0012               	return	
  4935   001B42                     i2l4295:
  4936   001B42  C00E  F001         	movff	plot1@x,___awmod@dividend
  4937   001B46  6A02               	clrf	(___awmod@dividend+1)^0,c
  4938   001B48  0E00               	movlw	0
  4939   001B4A  6E04               	movwf	(___awmod@divisor+1)^0,c
  4940   001B4C  0E06               	movlw	6
  4941   001B4E  6E03               	movwf	___awmod@divisor^0,c
  4942   001B50  ECE9  F00E         	call	___awmod	;wreg free
  4943                           
  4944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4945                           ; Switch size 1, requested type "simple"
  4946                           ; Number of cases is 1, Range of values is 0 to 0
  4947                           ; switch strategies available:
  4948                           ; Name         Instructions Cycles
  4949                           ; simple_byte            4     3 (average)
  4950                           ;	Chosen strategy is simple_byte
  4951   001B54  5002               	movf	(?___awmod+1)^0,w,c
  4952   001B56  0A00               	xorlw	0	; case 0
  4953   001B58  A4D8               	btfss	status,2,c
  4954   001B5A  0012               	return	
  4955                           
  4956                           ; Switch size 1, requested type "simple"
  4957                           ; Number of cases is 6, Range of values is 0 to 5
  4958                           ; switch strategies available:
  4959                           ; Name         Instructions Cycles
  4960                           ; simple_byte           19    10 (average)
  4961                           ;	Chosen strategy is simple_byte
  4962   001B5C  5001               	movf	?___awmod^0,w,c
  4963   001B5E  0A00               	xorlw	0	; case 0
  4964   001B60  B4D8               	btfsc	status,2,c
  4965   001B62  D7D7               	goto	i2l4281
  4966   001B64  0A01               	xorlw	1	; case 1
  4967   001B66  B4D8               	btfsc	status,2,c
  4968   001B68  D7D8               	goto	i2l4283
  4969   001B6A  0A03               	xorlw	3	; case 2
  4970   001B6C  B4D8               	btfsc	status,2,c
  4971   001B6E  D7D9               	goto	i2l4285
  4972   001B70  0A01               	xorlw	1	; case 3
  4973   001B72  B4D8               	btfsc	status,2,c
  4974   001B74  D7DA               	goto	i2l4287
  4975   001B76  0A07               	xorlw	7	; case 4
  4976   001B78  B4D8               	btfsc	status,2,c
  4977   001B7A  D7DB               	goto	i2l4289
  4978   001B7C  0A01               	xorlw	1	; case 5
  4979   001B7E  A4D8               	btfss	status,2,c
  4980   001B80  0012               	return	
  4981   001B82  D7DB               	goto	i2l4291
  4982   001B84                     __end_of_plot1:
  4983                           	callstack 0
  4984                           
  4985 ;; *************** function _command *****************
  4986 ;; Defined at:
  4987 ;;		line 90 in file "afficheur.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  cmd             1    wreg     unsigned char 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  cmd             1    4[COMRAM] unsigned char 
  4992 ;;  res             1    0        unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      unsigned char 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;Total ram usage:        1 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 2
  5009 ;; This function calls:
  5010 ;;		_delai_us_char
  5011 ;;		_wait_status_ok
  5012 ;;		_write_c_aff
  5013 ;; This function is called by:
  5014 ;;		_initialisation_afficheur
  5015 ;;		_plot1
  5016 ;;		_plot0
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text23
  5021   0022E0                     __ptext23:
  5022                           	callstack 0
  5023   0022E0                     _command:
  5024                           	callstack 24
  5025                           
  5026                           ;incstack = 0
  5027                           ;command@cmd stored from wreg
  5028   0022E0  6E05               	movwf	command@cmd^0,c
  5029                           
  5030                           ;afficheur.c: 96: if(wait_status_ok()==1)
  5031   0022E2  ECD1  F00F         	call	_wait_status_ok	;wreg free
  5032   0022E6  06E8               	decf	wreg,f,c
  5033   0022E8  A4D8               	btfss	status,2,c
  5034   0022EA  0012               	return	
  5035                           
  5036                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  5037   0022EC  0E0C               	movlw	12
  5038   0022EE  EC42  F011         	call	_delai_us_char
  5039                           
  5040                           ;afficheur.c: 99: write_c_aff(cmd);
  5041   0022F2  5005               	movf	command@cmd^0,w,c
  5042   0022F4  EC8A  F011         	call	_write_c_aff
  5043   0022F8  0012               	return		;funcret
  5044   0022FA                     __end_of_command:
  5045                           	callstack 0
  5046                           
  5047 ;; *************** function ___awmod *****************
  5048 ;; Defined at:
  5049 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  dividend        2    0[COMRAM] int 
  5052 ;;  divisor         2    2[COMRAM] int 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  sign            1    5[COMRAM] unsigned char 
  5055 ;;  counter         1    4[COMRAM] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  2    0[COMRAM] int 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;Total ram usage:        6 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_plot1
  5075 ;;		_plot0
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           	psect	text24
  5080   001DD2                     __ptext24:
  5081                           	callstack 0
  5082   001DD2                     ___awmod:
  5083                           	callstack 26
  5084                           
  5085                           ;incstack = 0
  5086   001DD2  0E00               	movlw	0
  5087   001DD4  6E06               	movwf	___awmod@sign^0,c
  5088   001DD6  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5089   001DD8  D006               	goto	i2l4213
  5090   001DDA  6C01               	negf	___awmod@dividend^0,c
  5091   001DDC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5092   001DDE  B0D8               	btfsc	status,0,c
  5093   001DE0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5094   001DE2  0E01               	movlw	1
  5095   001DE4  6E06               	movwf	___awmod@sign^0,c
  5096   001DE6                     i2l4213:
  5097   001DE6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5098   001DE8  D004               	goto	i2l4217
  5099   001DEA  6C03               	negf	___awmod@divisor^0,c
  5100   001DEC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5101   001DEE  B0D8               	btfsc	status,0,c
  5102   001DF0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5103   001DF2                     i2l4217:
  5104   001DF2  5003               	movf	___awmod@divisor^0,w,c
  5105   001DF4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5106   001DF6  B4D8               	btfsc	status,2,c
  5107   001DF8  D018               	goto	i2l4233
  5108   001DFA  0E01               	movlw	1
  5109   001DFC  6E05               	movwf	___awmod@counter^0,c
  5110   001DFE  D004               	goto	i2l4223
  5111   001E00                     i2l4221:
  5112   001E00  90D8               	bcf	status,0,c
  5113   001E02  3603               	rlcf	___awmod@divisor^0,f,c
  5114   001E04  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5115   001E06  2A05               	incf	___awmod@counter^0,f,c
  5116   001E08                     i2l4223:
  5117   001E08  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5118   001E0A  D7FA               	goto	i2l4221
  5119   001E0C                     i2u218_40:
  5120   001E0C  5003               	movf	___awmod@divisor^0,w,c
  5121   001E0E  5C01               	subwf	___awmod@dividend^0,w,c
  5122   001E10  5004               	movf	(___awmod@divisor+1)^0,w,c
  5123   001E12  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5124   001E14  A0D8               	btfss	status,0,c
  5125   001E16  D004               	goto	i2l4229
  5126   001E18  5003               	movf	___awmod@divisor^0,w,c
  5127   001E1A  5E01               	subwf	___awmod@dividend^0,f,c
  5128   001E1C  5004               	movf	(___awmod@divisor+1)^0,w,c
  5129   001E1E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5130   001E20                     i2l4229:
  5131   001E20  90D8               	bcf	status,0,c
  5132   001E22  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5133   001E24  3203               	rrcf	___awmod@divisor^0,f,c
  5134   001E26  2E05               	decfsz	___awmod@counter^0,f,c
  5135   001E28  D7F1               	goto	i2u218_40
  5136   001E2A                     i2l4233:
  5137   001E2A  5006               	movf	___awmod@sign^0,w,c
  5138   001E2C  B4D8               	btfsc	status,2,c
  5139   001E2E  D004               	goto	i2l4237
  5140   001E30  6C01               	negf	___awmod@dividend^0,c
  5141   001E32  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5142   001E34  B0D8               	btfsc	status,0,c
  5143   001E36  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5144   001E38                     i2l4237:
  5145   001E38  C001  F001         	movff	___awmod@dividend,?___awmod
  5146   001E3C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5147   001E40  0012               	return		;funcret
  5148   001E42                     __end_of___awmod:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _draw_hex8 *****************
  5152 ;; Defined at:
  5153 ;;		line 252 in file "afficheur.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  octet           1    wreg     unsigned char 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  octet           1    7[COMRAM] unsigned char 
  5158 ;;  c               1    8[COMRAM] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;Total ram usage:        2 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; Hardware stack levels required when called: 3
  5175 ;; This function calls:
  5176 ;;		_d1command
  5177 ;; This function is called by:
  5178 ;;		_tache1
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text25
  5183   001E42                     __ptext25:
  5184                           	callstack 0
  5185   001E42                     _draw_hex8:
  5186                           	callstack 24
  5187                           
  5188                           ;incstack = 0
  5189                           ;draw_hex8@octet stored from wreg
  5190   001E42  6E08               	movwf	draw_hex8@octet^0,c
  5191                           
  5192                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5193   001E44  3808               	swapf	draw_hex8@octet^0,w,c
  5194   001E46  0B0F               	andlw	15
  5195   001E48  6E09               	movwf	draw_hex8@c^0,c
  5196                           
  5197                           ;afficheur.c: 257: if (c>9)
  5198   001E4A  0E09               	movlw	9
  5199   001E4C  6409               	cpfsgt	draw_hex8@c^0,c
  5200   001E4E  D003               	goto	i2l4439
  5201                           
  5202                           ;afficheur.c: 258: c=c+0x17;
  5203   001E50  5009               	movf	draw_hex8@c^0,w,c
  5204   001E52  0F17               	addlw	23
  5205   001E54  D002               	goto	L5
  5206   001E56                     i2l4439:
  5207                           
  5208                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5209   001E56  5009               	movf	draw_hex8@c^0,w,c
  5210   001E58  0F10               	addlw	16
  5211   001E5A                     L5:
  5212   001E5A  6E09               	movwf	draw_hex8@c^0,c
  5213   001E5C  D001               	goto	i2l4441
  5214   001E5E                     i2l1329:
  5215                           
  5216                           ;afficheur.c: 262: __nop();
  5217   001E5E  F000               	nop	
  5218   001E60                     i2l4441:
  5219   001E60  0EC0               	movlw	192
  5220   001E62  6E05               	movwf	d1command@cmd^0,c
  5221   001E64  5009               	movf	draw_hex8@c^0,w,c
  5222   001E66  EC6D  F010         	call	_d1command
  5223   001E6A  0900               	iorlw	0
  5224   001E6C  B4D8               	btfsc	status,2,c
  5225   001E6E  D7F7               	goto	i2l1329
  5226                           
  5227                           ;afficheur.c: 264: c=(octet&0x0F);
  5228   001E70  5008               	movf	draw_hex8@octet^0,w,c
  5229   001E72  0B0F               	andlw	15
  5230   001E74  6E09               	movwf	draw_hex8@c^0,c
  5231                           
  5232                           ;afficheur.c: 265: if (c>9)
  5233   001E76  0E09               	movlw	9
  5234   001E78  6409               	cpfsgt	draw_hex8@c^0,c
  5235   001E7A  D003               	goto	i2l4447
  5236                           
  5237                           ;afficheur.c: 266: c=c+0x17;
  5238   001E7C  5009               	movf	draw_hex8@c^0,w,c
  5239   001E7E  0F17               	addlw	23
  5240   001E80  D002               	goto	L6
  5241   001E82                     i2l4447:
  5242                           
  5243                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5244   001E82  5009               	movf	draw_hex8@c^0,w,c
  5245   001E84  0F10               	addlw	16
  5246   001E86                     L6:
  5247   001E86  6E09               	movwf	draw_hex8@c^0,c
  5248   001E88  D001               	goto	i2l4449
  5249   001E8A                     i2l1334:
  5250                           
  5251                           ;afficheur.c: 270: __nop();
  5252   001E8A  F000               	nop	
  5253   001E8C                     i2l4449:
  5254   001E8C  0EC0               	movlw	192
  5255   001E8E  6E05               	movwf	d1command@cmd^0,c
  5256   001E90  5009               	movf	draw_hex8@c^0,w,c
  5257   001E92  EC6D  F010         	call	_d1command
  5258   001E96  0900               	iorlw	0
  5259   001E98  A4D8               	btfss	status,2,c
  5260   001E9A  0012               	return	
  5261   001E9C  D7F6               	goto	i2l1334
  5262   001E9E                     __end_of_draw_hex8:
  5263                           	callstack 0
  5264                           
  5265 ;; *************** function _draw_dec8 *****************
  5266 ;; Defined at:
  5267 ;;		line 274 in file "afficheur.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  octet           1    wreg     unsigned char 
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;  octet           1   10[COMRAM] unsigned char 
  5272 ;;  c               1   13[COMRAM] unsigned char 
  5273 ;;  dix             1   12[COMRAM] unsigned char 
  5274 ;;  cent            1   11[COMRAM] unsigned char 
  5275 ;;  unit            1    9[COMRAM] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;Total ram usage:        6 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 3
  5292 ;; This function calls:
  5293 ;;		___awdiv
  5294 ;;		_d1command
  5295 ;; This function is called by:
  5296 ;;		_tache1
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text26
  5301   001C26                     __ptext26:
  5302                           	callstack 0
  5303   001C26                     _draw_dec8:
  5304                           	callstack 24
  5305                           
  5306                           ;incstack = 0
  5307                           ;draw_dec8@octet stored from wreg
  5308   001C26  6E0B               	movwf	draw_dec8@octet^0,c
  5309                           
  5310                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5311   001C28  C00B  F001         	movff	draw_dec8@octet,___awdiv@dividend
  5312   001C2C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5313   001C2E  0E00               	movlw	0
  5314   001C30  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5315   001C32  0E64               	movlw	100
  5316   001C34  6E03               	movwf	___awdiv@divisor^0,c
  5317   001C36  ECA7  F00E         	call	___awdiv	;wreg free
  5318   001C3A  5001               	movf	?___awdiv^0,w,c
  5319   001C3C  6E0C               	movwf	draw_dec8@cent^0,c
  5320                           
  5321                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5322   001C3E  500C               	movf	draw_dec8@cent^0,w,c
  5323   001C40  0D9C               	mullw	156
  5324   001C42  50F3               	movf	243,w,c
  5325   001C44  240B               	addwf	draw_dec8@octet^0,w,c
  5326   001C46  6E0D               	movwf	draw_dec8@dix^0,c
  5327                           
  5328                           ;afficheur.c: 279: dix = dix/10;
  5329   001C48  C00D  F001         	movff	draw_dec8@dix,___awdiv@dividend
  5330   001C4C  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5331   001C4E  0E00               	movlw	0
  5332   001C50  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5333   001C52  0E0A               	movlw	10
  5334   001C54  6E03               	movwf	___awdiv@divisor^0,c
  5335   001C56  ECA7  F00E         	call	___awdiv	;wreg free
  5336   001C5A  5001               	movf	?___awdiv^0,w,c
  5337   001C5C  6E0D               	movwf	draw_dec8@dix^0,c
  5338                           
  5339                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5340   001C5E  500C               	movf	draw_dec8@cent^0,w,c
  5341   001C60  0D9C               	mullw	156
  5342   001C62  CFF3 F009          	movff	prodl,??_draw_dec8
  5343   001C66  500D               	movf	draw_dec8@dix^0,w,c
  5344   001C68  0DF6               	mullw	246
  5345   001C6A  50F3               	movf	243,w,c
  5346   001C6C  2409               	addwf	??_draw_dec8^0,w,c
  5347   001C6E  240B               	addwf	draw_dec8@octet^0,w,c
  5348   001C70  6E0A               	movwf	draw_dec8@unit^0,c
  5349                           
  5350                           ;afficheur.c: 282: c=cent+0x10;
  5351   001C72  500C               	movf	draw_dec8@cent^0,w,c
  5352   001C74  0F10               	addlw	16
  5353   001C76  6E0E               	movwf	draw_dec8@c^0,c
  5354                           
  5355                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5356   001C78  D001               	goto	i2l4389
  5357   001C7A                     i2l1340:
  5358                           
  5359                           ;afficheur.c: 284: __nop();
  5360   001C7A  F000               	nop	
  5361   001C7C                     i2l4389:
  5362   001C7C  0EC0               	movlw	192
  5363   001C7E  6E05               	movwf	d1command@cmd^0,c
  5364   001C80  500E               	movf	draw_dec8@c^0,w,c
  5365   001C82  EC6D  F010         	call	_d1command
  5366   001C86  0900               	iorlw	0
  5367   001C88  B4D8               	btfsc	status,2,c
  5368   001C8A  D7F7               	goto	i2l1340
  5369                           
  5370                           ;afficheur.c: 286: c=dix+0x10;
  5371   001C8C  500D               	movf	draw_dec8@dix^0,w,c
  5372   001C8E  0F10               	addlw	16
  5373   001C90  6E0E               	movwf	draw_dec8@c^0,c
  5374                           
  5375                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5376   001C92  D001               	goto	i2l4393
  5377   001C94                     i2l1343:
  5378                           
  5379                           ;afficheur.c: 288: __nop();
  5380   001C94  F000               	nop	
  5381   001C96                     i2l4393:
  5382   001C96  0EC0               	movlw	192
  5383   001C98  6E05               	movwf	d1command@cmd^0,c
  5384   001C9A  500E               	movf	draw_dec8@c^0,w,c
  5385   001C9C  EC6D  F010         	call	_d1command
  5386   001CA0  0900               	iorlw	0
  5387   001CA2  B4D8               	btfsc	status,2,c
  5388   001CA4  D7F7               	goto	i2l1343
  5389                           
  5390                           ;afficheur.c: 290: c=unit+0x10;
  5391   001CA6  500A               	movf	draw_dec8@unit^0,w,c
  5392   001CA8  0F10               	addlw	16
  5393   001CAA  6E0E               	movwf	draw_dec8@c^0,c
  5394                           
  5395                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5396   001CAC  D001               	goto	i2l4397
  5397   001CAE                     i2l1346:
  5398                           
  5399                           ;afficheur.c: 292: __nop();
  5400   001CAE  F000               	nop	
  5401   001CB0                     i2l4397:
  5402   001CB0  0EC0               	movlw	192
  5403   001CB2  6E05               	movwf	d1command@cmd^0,c
  5404   001CB4  500E               	movf	draw_dec8@c^0,w,c
  5405   001CB6  EC6D  F010         	call	_d1command
  5406   001CBA  0900               	iorlw	0
  5407   001CBC  A4D8               	btfss	status,2,c
  5408   001CBE  0012               	return	
  5409   001CC0  D7F6               	goto	i2l1346
  5410   001CC2                     __end_of_draw_dec8:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function ___awdiv *****************
  5414 ;; Defined at:
  5415 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  dividend        2    0[COMRAM] int 
  5418 ;;  divisor         2    2[COMRAM] int 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  quotient        2    6[COMRAM] int 
  5421 ;;  sign            1    5[COMRAM] unsigned char 
  5422 ;;  counter         1    4[COMRAM] unsigned char 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  2    0[COMRAM] int 
  5425 ;; Registers used:
  5426 ;;		wreg, status,2, status,0
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;Total ram usage:        8 bytes
  5437 ;; Hardware stack levels used: 1
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_draw_dec8
  5442 ;;		_plot1
  5443 ;;		_plot0
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text27
  5448   001D4E                     __ptext27:
  5449                           	callstack 0
  5450   001D4E                     ___awdiv:
  5451                           	callstack 26
  5452                           
  5453                           ;incstack = 0
  5454   001D4E  0E00               	movlw	0
  5455   001D50  6E06               	movwf	___awdiv@sign^0,c
  5456   001D52  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5457   001D54  D006               	goto	i2l4169
  5458   001D56  6C03               	negf	___awdiv@divisor^0,c
  5459   001D58  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5460   001D5A  B0D8               	btfsc	status,0,c
  5461   001D5C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5462   001D5E  0E01               	movlw	1
  5463   001D60  6E06               	movwf	___awdiv@sign^0,c
  5464   001D62                     i2l4169:
  5465   001D62  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5466   001D64  D006               	goto	i2l4175
  5467   001D66  6C01               	negf	___awdiv@dividend^0,c
  5468   001D68  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5469   001D6A  B0D8               	btfsc	status,0,c
  5470   001D6C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5471   001D6E  0E01               	movlw	1
  5472   001D70  1A06               	xorwf	___awdiv@sign^0,f,c
  5473   001D72                     i2l4175:
  5474   001D72  0E00               	movlw	0
  5475   001D74  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5476   001D76  0E00               	movlw	0
  5477   001D78  6E07               	movwf	___awdiv@quotient^0,c
  5478   001D7A  5003               	movf	___awdiv@divisor^0,w,c
  5479   001D7C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5480   001D7E  B4D8               	btfsc	status,2,c
  5481   001D80  D01C               	goto	i2l4197
  5482   001D82  0E01               	movlw	1
  5483   001D84  6E05               	movwf	___awdiv@counter^0,c
  5484   001D86  D004               	goto	i2l4183
  5485   001D88                     i2l4181:
  5486   001D88  90D8               	bcf	status,0,c
  5487   001D8A  3603               	rlcf	___awdiv@divisor^0,f,c
  5488   001D8C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5489   001D8E  2A05               	incf	___awdiv@counter^0,f,c
  5490   001D90                     i2l4183:
  5491   001D90  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5492   001D92  D7FA               	goto	i2l4181
  5493   001D94                     i2u212_40:
  5494   001D94  90D8               	bcf	status,0,c
  5495   001D96  3607               	rlcf	___awdiv@quotient^0,f,c
  5496   001D98  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5497   001D9A  5003               	movf	___awdiv@divisor^0,w,c
  5498   001D9C  5C01               	subwf	___awdiv@dividend^0,w,c
  5499   001D9E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5500   001DA0  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5501   001DA2  A0D8               	btfss	status,0,c
  5502   001DA4  D005               	goto	i2l4193
  5503   001DA6  5003               	movf	___awdiv@divisor^0,w,c
  5504   001DA8  5E01               	subwf	___awdiv@dividend^0,f,c
  5505   001DAA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5506   001DAC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5507   001DAE  8007               	bsf	___awdiv@quotient^0,0,c
  5508   001DB0                     i2l4193:
  5509   001DB0  90D8               	bcf	status,0,c
  5510   001DB2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5511   001DB4  3203               	rrcf	___awdiv@divisor^0,f,c
  5512   001DB6  2E05               	decfsz	___awdiv@counter^0,f,c
  5513   001DB8  D7ED               	goto	i2u212_40
  5514   001DBA                     i2l4197:
  5515   001DBA  5006               	movf	___awdiv@sign^0,w,c
  5516   001DBC  B4D8               	btfsc	status,2,c
  5517   001DBE  D004               	goto	i2l4201
  5518   001DC0  6C07               	negf	___awdiv@quotient^0,c
  5519   001DC2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5520   001DC4  B0D8               	btfsc	status,0,c
  5521   001DC6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5522   001DC8                     i2l4201:
  5523   001DC8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5524   001DCC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5525   001DD0  0012               	return		;funcret
  5526   001DD2                     __end_of___awdiv:
  5527                           	callstack 0
  5528                           
  5529 ;; *************** function _clear_text *****************
  5530 ;; Defined at:
  5531 ;;		line 307 in file "afficheur.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  add             2    8[COMRAM] unsigned int 
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5546 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;Total ram usage:        2 bytes
  5550 ;; Hardware stack levels used: 1
  5551 ;; Hardware stack levels required when called: 3
  5552 ;; This function calls:
  5553 ;;		_d1command
  5554 ;;		_d2command
  5555 ;; This function is called by:
  5556 ;;		_tache1
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text28
  5561   0021B4                     __ptext28:
  5562                           	callstack 0
  5563   0021B4                     _clear_text:
  5564                           	callstack 24
  5565                           
  5566                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5567                           
  5568                           ;incstack = 0
  5569   0021B4  0E00               	movlw	0
  5570   0021B6  6E05               	movwf	d2command@d2^0,c
  5571   0021B8  0E24               	movlw	36
  5572   0021BA  6E06               	movwf	d2command@cmd^0,c
  5573   0021BC  0E00               	movlw	0
  5574   0021BE  ECFA  F00F         	call	_d2command
  5575                           
  5576                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5577   0021C2  0E00               	movlw	0
  5578   0021C4  6E0A               	movwf	(clear_text@add+1)^0,c
  5579   0021C6  0E00               	movlw	0
  5580   0021C8  6E09               	movwf	clear_text@add^0,c
  5581   0021CA                     i2l4343:
  5582                           
  5583                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5584   0021CA  0EC0               	movlw	192
  5585   0021CC  6E05               	movwf	d1command@cmd^0,c
  5586   0021CE  0E00               	movlw	0
  5587   0021D0  EC6D  F010         	call	_d1command
  5588   0021D4  4A09               	infsnz	clear_text@add^0,f,c
  5589   0021D6  2A0A               	incf	(clear_text@add+1)^0,f,c
  5590   0021D8  0E80               	movlw	128
  5591   0021DA  180A               	xorwf	(clear_text@add+1)^0,w,c
  5592   0021DC  1009               	iorwf	clear_text@add^0,w,c
  5593   0021DE  B4D8               	btfsc	status,2,c
  5594   0021E0  0012               	return	
  5595   0021E2  D7F3               	goto	i2l4343
  5596   0021E4                     __end_of_clear_text:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _clear_line *****************
  5600 ;; Defined at:
  5601 ;;		line 318 in file "afficheur.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  line            1    wreg     unsigned char 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  line            1   14[COMRAM] unsigned char 
  5606 ;;  column          1   15[COMRAM] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;Total ram usage:        2 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; Hardware stack levels required when called: 4
  5623 ;; This function calls:
  5624 ;;		_draw_char
  5625 ;;		_goto_lico
  5626 ;; This function is called by:
  5627 ;;		_tache1
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text29
  5632   0022A6                     __ptext29:
  5633                           	callstack 0
  5634   0022A6                     _clear_line:
  5635                           	callstack 23
  5636                           
  5637                           ;incstack = 0
  5638                           ;clear_line@line stored from wreg
  5639   0022A6  6E0F               	movwf	clear_line@line^0,c
  5640                           
  5641                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5642   0022A8  0E00               	movlw	0
  5643   0022AA  6E10               	movwf	clear_line@column^0,c
  5644   0022AC                     i2l4461:
  5645                           
  5646                           ;afficheur.c: 321: goto_lico(line, column);
  5647   0022AC  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5648   0022B0  500F               	movf	clear_line@line^0,w,c
  5649   0022B2  EC7C  F00F         	call	_goto_lico
  5650                           
  5651                           ;afficheur.c: 322: draw_char(' ');
  5652   0022B6  0E20               	movlw	32
  5653   0022B8  ECC1  F010         	call	_draw_char
  5654   0022BC  2A10               	incf	clear_line@column^0,f,c
  5655   0022BE  0E27               	movlw	39
  5656   0022C0  6410               	cpfsgt	clear_line@column^0,c
  5657   0022C2  D7F4               	goto	i2l4461
  5658   0022C4  0012               	return	
  5659   0022C6                     __end_of_clear_line:
  5660                           	callstack 0
  5661                           
  5662 ;; *************** function _draw_char *****************
  5663 ;; Defined at:
  5664 ;;		line 228 in file "afficheur.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  dccar           1    wreg     unsigned char 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  dccar           1    7[COMRAM] unsigned char 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, status,2, status,0, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;Total ram usage:        1 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 3
  5685 ;; This function calls:
  5686 ;;		_d1command
  5687 ;; This function is called by:
  5688 ;;		_tache1
  5689 ;;		_clear_line
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text30
  5694   002182                     __ptext30:
  5695                           	callstack 0
  5696   002182                     _draw_char:
  5697                           	callstack 24
  5698                           
  5699                           ;incstack = 0
  5700                           ;draw_char@dccar stored from wreg
  5701   002182  6E08               	movwf	draw_char@dccar^0,c
  5702                           
  5703                           ;afficheur.c: 230: if (dccar<32)
  5704   002184  0E20               	movlw	32
  5705   002186  6008               	cpfslt	draw_char@dccar^0,c
  5706   002188  D002               	goto	i2l4259
  5707                           
  5708                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5709   00218A  0E3F               	movlw	63
  5710   00218C  6E08               	movwf	draw_char@dccar^0,c
  5711   00218E                     i2l4259:
  5712                           
  5713                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5714   00218E  0E9F               	movlw	159
  5715   002190  6408               	cpfsgt	draw_char@dccar^0,c
  5716   002192  D002               	goto	i2l4263
  5717                           
  5718                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5719   002194  0E3F               	movlw	63
  5720   002196  6E08               	movwf	draw_char@dccar^0,c
  5721   002198                     i2l4263:
  5722                           
  5723                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5724   002198  5008               	movf	draw_char@dccar^0,w,c
  5725   00219A  0FE0               	addlw	224
  5726   00219C  6E08               	movwf	draw_char@dccar^0,c
  5727                           
  5728                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5729   00219E  D001               	goto	i2l4265
  5730   0021A0                     i2l1310:
  5731   0021A0  F000               	nop	
  5732   0021A2                     i2l4265:
  5733   0021A2  0EC0               	movlw	192
  5734   0021A4  6E05               	movwf	d1command@cmd^0,c
  5735   0021A6  5008               	movf	draw_char@dccar^0,w,c
  5736   0021A8  EC6D  F010         	call	_d1command
  5737   0021AC  0900               	iorlw	0
  5738   0021AE  A4D8               	btfss	status,2,c
  5739   0021B0  0012               	return	
  5740   0021B2  D7F6               	goto	i2l1310
  5741   0021B4                     __end_of_draw_char:
  5742                           	callstack 0
  5743                           
  5744 ;; *************** function _clear_graphics *****************
  5745 ;; Defined at:
  5746 ;;		line 368 in file "afficheur.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  add             2    8[COMRAM] unsigned int 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  1    wreg      void 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0, cstack
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;Total ram usage:        2 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 3
  5767 ;; This function calls:
  5768 ;;		_d1command
  5769 ;;		_d2command
  5770 ;; This function is called by:
  5771 ;;		_tache1
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           	psect	text31
  5776   0021E4                     __ptext31:
  5777                           	callstack 0
  5778   0021E4                     _clear_graphics:
  5779                           	callstack 24
  5780                           
  5781                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5782                           
  5783                           ;incstack = 0
  5784   0021E4  0E80               	movlw	128
  5785   0021E6  6E05               	movwf	d2command@d2^0,c
  5786   0021E8  0E24               	movlw	36
  5787   0021EA  6E06               	movwf	d2command@cmd^0,c
  5788   0021EC  0E00               	movlw	0
  5789   0021EE  ECFA  F00F         	call	_d2command
  5790                           
  5791                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5792   0021F2  0E80               	movlw	128
  5793   0021F4  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5794   0021F6  0E00               	movlw	0
  5795   0021F8  6E09               	movwf	clear_graphics@add^0,c
  5796   0021FA                     i2l4357:
  5797                           
  5798                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5799   0021FA  0EC0               	movlw	192
  5800   0021FC  6E05               	movwf	d1command@cmd^0,c
  5801   0021FE  0E00               	movlw	0
  5802   002200  EC6D  F010         	call	_d1command
  5803   002204  4A09               	infsnz	clear_graphics@add^0,f,c
  5804   002206  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5805   002208  0EF8               	movlw	248
  5806   00220A  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5807   00220C  1009               	iorwf	clear_graphics@add^0,w,c
  5808   00220E  B4D8               	btfsc	status,2,c
  5809   002210  0012               	return	
  5810   002212  D7F3               	goto	i2l4357
  5811   002214                     __end_of_clear_graphics:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function _charger *****************
  5815 ;; Defined at:
  5816 ;;		line 432 in file "afficheur.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;		None
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;		None
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;Total ram usage:        0 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 4
  5837 ;; This function calls:
  5838 ;;		_draw_string
  5839 ;;		_goto_lico
  5840 ;; This function is called by:
  5841 ;;		_tache1
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text32
  5846   002376                     __ptext32:
  5847                           	callstack 0
  5848   002376                     _charger:
  5849                           	callstack 23
  5850                           
  5851                           ;afficheur.c: 434: goto_lico(14,0);
  5852                           
  5853                           ;incstack = 0
  5854   002376  0E00               	movlw	0
  5855   002378  6E09               	movwf	goto_lico@colonne^0,c
  5856   00237A  0E0E               	movlw	14
  5857   00237C  EC7C  F00F         	call	_goto_lico
  5858                           
  5859                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5860   002380  0E01               	movlw	low STR_22
  5861   002382  6E08               	movwf	draw_string@tableau^0,c
  5862   002384  0E10               	movlw	high STR_22
  5863   002386  6E09               	movwf	(draw_string@tableau+1)^0,c
  5864   002388  EC61  F00E         	call	_draw_string	;wreg free
  5865   00238C  0012               	return		;funcret
  5866   00238E                     __end_of_charger:
  5867                           	callstack 0
  5868                           
  5869 ;; *************** function _goto_lico *****************
  5870 ;; Defined at:
  5871 ;;		line 295 in file "afficheur.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  ligne           1    wreg     unsigned char 
  5874 ;;  colonne         1    8[COMRAM] unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  ligne           1   11[COMRAM] unsigned char 
  5877 ;;  adr             2   12[COMRAM] unsigned int 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  1    wreg      void 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5887 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;Total ram usage:        6 bytes
  5892 ;; Hardware stack levels used: 1
  5893 ;; Hardware stack levels required when called: 3
  5894 ;; This function calls:
  5895 ;;		_d2command
  5896 ;; This function is called by:
  5897 ;;		_tache1
  5898 ;;		_clear_line
  5899 ;;		_charger
  5900 ;;		_vide
  5901 ;;		_vitesse1
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text33
  5906   001EF8                     __ptext33:
  5907                           	callstack 0
  5908   001EF8                     _goto_lico:
  5909                           	callstack 23
  5910                           
  5911                           ;incstack = 0
  5912                           ;goto_lico@ligne stored from wreg
  5913   001EF8  6E0C               	movwf	goto_lico@ligne^0,c
  5914                           
  5915                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  5916   001EFA  0E7B               	movlw	123
  5917   001EFC  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5918   001EFE  0E00               	movlw	0
  5919   001F00  6E0D               	movwf	goto_lico@adr^0,c
  5920                           
  5921                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  5922   001F02  0E0F               	movlw	15
  5923   001F04  640C               	cpfsgt	goto_lico@ligne^0,c
  5924   001F06  D002               	goto	i2l4247
  5925   001F08  0E00               	movlw	0
  5926   001F0A  6E0C               	movwf	goto_lico@ligne^0,c
  5927   001F0C                     i2l4247:
  5928                           
  5929                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  5930   001F0C  0E27               	movlw	39
  5931   001F0E  6409               	cpfsgt	goto_lico@colonne^0,c
  5932   001F10  D002               	goto	i2l4251
  5933   001F12  0E00               	movlw	0
  5934   001F14  6E09               	movwf	goto_lico@colonne^0,c
  5935   001F16                     i2l4251:
  5936                           
  5937                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  5938   001F16  500C               	movf	goto_lico@ligne^0,w,c
  5939   001F18  0D28               	mullw	40
  5940   001F1A  CFF3 F00A          	movff	prodl,??_goto_lico
  5941   001F1E  CFF4 F00B          	movff	prodh,??_goto_lico+1
  5942   001F22  5009               	movf	goto_lico@colonne^0,w,c
  5943   001F24  260A               	addwf	??_goto_lico^0,f,c
  5944   001F26  0E00               	movlw	0
  5945   001F28  220B               	addwfc	(??_goto_lico+1)^0,f,c
  5946   001F2A  500D               	movf	goto_lico@adr^0,w,c
  5947   001F2C  240A               	addwf	??_goto_lico^0,w,c
  5948   001F2E  6E0D               	movwf	goto_lico@adr^0,c
  5949   001F30  500E               	movf	(goto_lico@adr+1)^0,w,c
  5950   001F32  200B               	addwfc	(??_goto_lico+1)^0,w,c
  5951   001F34  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5952                           
  5953                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  5954   001F36  D001               	goto	i2l4253
  5955   001F38                     i2l1354:
  5956                           
  5957                           ;afficheur.c: 304: __nop();
  5958   001F38  F000               	nop	
  5959   001F3A                     i2l4253:
  5960   001F3A  500E               	movf	(goto_lico@adr+1)^0,w,c
  5961   001F3C  6E05               	movwf	d2command@d2^0,c
  5962   001F3E  0E24               	movlw	36
  5963   001F40  6E06               	movwf	d2command@cmd^0,c
  5964   001F42  500D               	movf	goto_lico@adr^0,w,c
  5965   001F44  ECFA  F00F         	call	_d2command
  5966   001F48  0900               	iorlw	0
  5967   001F4A  A4D8               	btfss	status,2,c
  5968   001F4C  0012               	return	
  5969   001F4E  D7F4               	goto	i2l1354
  5970   001F50                     __end_of_goto_lico:
  5971                           	callstack 0
  5972                           
  5973 ;; *************** function _d2command *****************
  5974 ;; Defined at:
  5975 ;;		line 128 in file "afficheur.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  d1              1    wreg     unsigned char 
  5978 ;;  d2              1    4[COMRAM] unsigned char 
  5979 ;;  cmd             1    5[COMRAM] unsigned char 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  d1              1    6[COMRAM] unsigned char 
  5982 ;;  res             1    7[COMRAM] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      unsigned char 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;Total ram usage:        4 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 2
  5999 ;; This function calls:
  6000 ;;		_delai_us_char
  6001 ;;		_wait_status_ok
  6002 ;;		_write_c_aff
  6003 ;;		_write_d_aff
  6004 ;; This function is called by:
  6005 ;;		_initialisation_afficheur
  6006 ;;		_goto_lico
  6007 ;;		_clear_text
  6008 ;;		_clear_graphics
  6009 ;;		_plot1
  6010 ;;		_clear_cgram
  6011 ;;		_plot0
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text34
  6016   001FF4                     __ptext34:
  6017                           	callstack 0
  6018   001FF4                     _d2command:
  6019                           	callstack 23
  6020                           
  6021                           ;incstack = 0
  6022                           ;d2command@d1 stored from wreg
  6023   001FF4  6E07               	movwf	d2command@d1^0,c
  6024                           
  6025                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6026   001FF6  0E00               	movlw	0
  6027   001FF8  6E08               	movwf	d2command@res^0,c
  6028                           
  6029                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6030   001FFA  ECD1  F00F         	call	_wait_status_ok	;wreg free
  6031   001FFE  06E8               	decf	wreg,f,c
  6032   002000  A4D8               	btfss	status,2,c
  6033   002002  D01E               	goto	i2l4157
  6034                           
  6035                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6036   002004  0E0C               	movlw	12
  6037   002006  EC42  F011         	call	_delai_us_char
  6038                           
  6039                           ;afficheur.c: 137: write_d_aff(d1);
  6040   00200A  5007               	movf	d2command@d1^0,w,c
  6041   00200C  EC7D  F011         	call	_write_d_aff
  6042                           
  6043                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6044   002010  ECD1  F00F         	call	_wait_status_ok	;wreg free
  6045   002014  06E8               	decf	wreg,f,c
  6046   002016  A4D8               	btfss	status,2,c
  6047   002018  D013               	goto	i2l4157
  6048                           
  6049                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6050   00201A  0E0C               	movlw	12
  6051   00201C  EC42  F011         	call	_delai_us_char
  6052                           
  6053                           ;afficheur.c: 141: write_d_aff(d2);
  6054   002020  5005               	movf	d2command@d2^0,w,c
  6055   002022  EC7D  F011         	call	_write_d_aff
  6056                           
  6057                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6058   002026  ECD1  F00F         	call	_wait_status_ok	;wreg free
  6059   00202A  06E8               	decf	wreg,f,c
  6060   00202C  A4D8               	btfss	status,2,c
  6061   00202E  D008               	goto	i2l4157
  6062                           
  6063                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6064   002030  0E0C               	movlw	12
  6065   002032  EC42  F011         	call	_delai_us_char
  6066                           
  6067                           ;afficheur.c: 145: write_c_aff(cmd);
  6068   002036  5006               	movf	d2command@cmd^0,w,c
  6069   002038  EC8A  F011         	call	_write_c_aff
  6070                           
  6071                           ;afficheur.c: 147: res=1;
  6072   00203C  0E01               	movlw	1
  6073   00203E  6E08               	movwf	d2command@res^0,c
  6074   002040                     i2l4157:
  6075                           
  6076                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6077   002040  5008               	movf	d2command@res^0,w,c
  6078   002042  0012               	return		;funcret
  6079   002044                     __end_of_d2command:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _draw_string *****************
  6083 ;; Defined at:
  6084 ;;		line 242 in file "afficheur.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6087 ;;		 -> STR_25(6), STR_24(6), STR_23(14), STR_22(29), 
  6088 ;;		 -> STR_21(4), STR_20(3), STR_19(7), STR_18(5), 
  6089 ;;		 -> STR_17(12), STR_16(12), STR_15(6), STR_14(7), 
  6090 ;;		 -> STR_13(9), STR_12(21), STR_11(7), STR_10(10), 
  6091 ;;		 -> STR_9(9), STR_8(6), STR_7(13), STR_6(11), 
  6092 ;;		 -> STR_5(7), STR_4(3), STR_3(3), STR_2(3), 
  6093 ;;		 -> STR_1(8), RAM(3861), 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;		None
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      void 
  6098 ;; Registers used:
  6099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;Total ram usage:        2 bytes
  6110 ;; Hardware stack levels used: 1
  6111 ;; Hardware stack levels required when called: 3
  6112 ;; This function calls:
  6113 ;;		_d1command
  6114 ;; This function is called by:
  6115 ;;		_tache1
  6116 ;;		_charger
  6117 ;;		_vide
  6118 ;;		_vitesse1
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text35
  6123   001CC2                     __ptext35:
  6124                           	callstack 0
  6125   001CC2                     _draw_string:
  6126                           	callstack 23
  6127                           
  6128                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6129                           
  6130                           ;incstack = 0
  6131   001CC2  D01C               	goto	i2l4273
  6132   001CC4                     i2l1318:
  6133                           
  6134                           ;afficheur.c: 247: __nop();
  6135   001CC4  F000               	nop	
  6136   001CC6                     i2l4269:
  6137   001CC6  0EC0               	movlw	192
  6138   001CC8  6E05               	movwf	d1command@cmd^0,c
  6139   001CCA  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6140   001CCE  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6141   001CD2  0E00               	movlw	low (__smallconst shr (0+16))
  6142   001CD4  6EF8               	movwf	tblptru,c
  6143   001CD6  0E0F               	movlw	(high __ramtop+-1)
  6144   001CD8  64F7               	cpfsgt	tblptrh,c
  6145   001CDA  D003               	bra	i2u227_47
  6146   001CDC  0008               	tblrd		*
  6147   001CDE  50F5               	movf	tablat,w,c
  6148   001CE0  D005               	bra	i2u227_40
  6149   001CE2                     i2u227_47:
  6150   001CE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  6151   001CE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  6152   001CEA  50EF               	movf	indf0,w,c
  6153   001CEC                     i2u227_40:
  6154   001CEC  0FE0               	addlw	224
  6155   001CEE  EC6D  F010         	call	_d1command
  6156   001CF2  0900               	iorlw	0
  6157   001CF4  B4D8               	btfsc	status,2,c
  6158   001CF6  D7E6               	goto	i2l1318
  6159                           
  6160                           ;afficheur.c: 248: tableau++;
  6161   001CF8  4A08               	infsnz	draw_string@tableau^0,f,c
  6162   001CFA  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6163   001CFC                     i2l4273:
  6164   001CFC  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6165   001D00  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6166   001D04  0E00               	movlw	low (__smallconst shr (0+16))
  6167   001D06  6EF8               	movwf	tblptru,c
  6168   001D08  0E0F               	movlw	(high __ramtop+-1)
  6169   001D0A  64F7               	cpfsgt	tblptrh,c
  6170   001D0C  D003               	bra	i2u229_47
  6171   001D0E  0008               	tblrd		*
  6172   001D10  50F5               	movf	tablat,w,c
  6173   001D12  D005               	bra	i2u229_40
  6174   001D14                     i2u229_47:
  6175   001D14  CFF6 FFE9          	movff	tblptrl,fsr0l
  6176   001D18  CFF7 FFEA          	movff	tblptrh,fsr0h
  6177   001D1C  50EF               	movf	indf0,w,c
  6178   001D1E                     i2u229_40:
  6179   001D1E  0900               	iorlw	0
  6180   001D20  B4D8               	btfsc	status,2,c
  6181   001D22  0012               	return	
  6182   001D24  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6183   001D28  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6184   001D2C  0E00               	movlw	low (__smallconst shr (0+16))
  6185   001D2E  6EF8               	movwf	tblptru,c
  6186   001D30  0E0F               	movlw	(high __ramtop+-1)
  6187   001D32  64F7               	cpfsgt	tblptrh,c
  6188   001D34  D003               	bra	i2u231_47
  6189   001D36  0008               	tblrd		*
  6190   001D38  50F5               	movf	tablat,w,c
  6191   001D3A  D005               	bra	i2u231_40
  6192   001D3C                     i2u231_47:
  6193   001D3C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6194   001D40  CFF7 FFEA          	movff	tblptrh,fsr0h
  6195   001D44  50EF               	movf	indf0,w,c
  6196   001D46                     i2u231_40:
  6197   001D46  0900               	iorlw	0
  6198   001D48  B4D8               	btfsc	status,2,c
  6199   001D4A  0012               	return	
  6200   001D4C  D7BC               	goto	i2l4269
  6201   001D4E                     __end_of_draw_string:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function _d1command *****************
  6205 ;; Defined at:
  6206 ;;		line 106 in file "afficheur.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  d1              1    wreg     unsigned char 
  6209 ;;  cmd             1    4[COMRAM] unsigned char 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  d1              1    5[COMRAM] unsigned char 
  6212 ;;  res             1    6[COMRAM] unsigned char 
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      unsigned char 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2, status,0, cstack
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6222 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;Total ram usage:        3 bytes
  6227 ;; Hardware stack levels used: 1
  6228 ;; Hardware stack levels required when called: 2
  6229 ;; This function calls:
  6230 ;;		_delai_us_char
  6231 ;;		_wait_status_ok
  6232 ;;		_write_c_aff
  6233 ;;		_write_d_aff
  6234 ;; This function is called by:
  6235 ;;		_initialisation_afficheur
  6236 ;;		_draw_char
  6237 ;;		_draw_string
  6238 ;;		_draw_hex8
  6239 ;;		_draw_dec8
  6240 ;;		_clear_text
  6241 ;;		_clear_graphics
  6242 ;;		_clear_cgram
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text36
  6247   0020DA                     __ptext36:
  6248                           	callstack 0
  6249   0020DA                     _d1command:
  6250                           	callstack 23
  6251                           
  6252                           ;incstack = 0
  6253                           ;d1command@d1 stored from wreg
  6254   0020DA  6E06               	movwf	d1command@d1^0,c
  6255                           
  6256                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6257   0020DC  0E00               	movlw	0
  6258   0020DE  6E07               	movwf	d1command@res^0,c
  6259                           
  6260                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6261   0020E0  ECD1  F00F         	call	_wait_status_ok	;wreg free
  6262   0020E4  06E8               	decf	wreg,f,c
  6263   0020E6  A4D8               	btfss	status,2,c
  6264   0020E8  D013               	goto	i2l4131
  6265                           
  6266                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6267   0020EA  0E0C               	movlw	12
  6268   0020EC  EC42  F011         	call	_delai_us_char
  6269                           
  6270                           ;afficheur.c: 115: write_d_aff(d1);
  6271   0020F0  5006               	movf	d1command@d1^0,w,c
  6272   0020F2  EC7D  F011         	call	_write_d_aff
  6273                           
  6274                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6275   0020F6  ECD1  F00F         	call	_wait_status_ok	;wreg free
  6276   0020FA  06E8               	decf	wreg,f,c
  6277   0020FC  A4D8               	btfss	status,2,c
  6278   0020FE  D008               	goto	i2l4131
  6279                           
  6280                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6281   002100  0E0C               	movlw	12
  6282   002102  EC42  F011         	call	_delai_us_char
  6283                           
  6284                           ;afficheur.c: 119: write_c_aff(cmd);
  6285   002106  5005               	movf	d1command@cmd^0,w,c
  6286   002108  EC8A  F011         	call	_write_c_aff
  6287                           
  6288                           ;afficheur.c: 121: res=1;
  6289   00210C  0E01               	movlw	1
  6290   00210E  6E07               	movwf	d1command@res^0,c
  6291   002110                     i2l4131:
  6292                           
  6293                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6294   002110  5007               	movf	d1command@res^0,w,c
  6295   002112  0012               	return		;funcret
  6296   002114                     __end_of_d1command:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _write_d_aff *****************
  6300 ;; Defined at:
  6301 ;;		line 4 in file "afficheur.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  data            1    wreg     unsigned char 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  data            1    0[COMRAM] unsigned char 
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;Total ram usage:        1 bytes
  6320 ;; Hardware stack levels used: 1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_d1command
  6325 ;;		_d2command
  6326 ;; This function uses a non-reentrant model
  6327 ;;
  6328                           
  6329                           	psect	text37
  6330   0022FA                     __ptext37:
  6331                           	callstack 0
  6332   0022FA                     _write_d_aff:
  6333                           	callstack 24
  6334                           
  6335                           ;incstack = 0
  6336                           ;write_d_aff@data stored from wreg
  6337   0022FA  6E01               	movwf	write_d_aff@data^0,c
  6338                           
  6339                           ;afficheur.c: 6: LATH=data;
  6340   0022FC  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6341                           
  6342                           ;afficheur.c: 7: TRISH=0x00;
  6343   002300  0E00               	movlw	0
  6344   002302  6E99               	movwf	153,c	;volatile
  6345                           
  6346                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6347   002304  9091               	bcf	145,0,c	;volatile
  6348                           
  6349                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6350   002306  9691               	bcf	145,3,c	;volatile
  6351                           
  6352                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6353   002308  9491               	bcf	145,2,c	;volatile
  6354                           
  6355                           ;afficheur.c: 11: __nop();
  6356   00230A  F000               	nop	
  6357                           
  6358                           ;afficheur.c: 12: __nop();
  6359   00230C  F000               	nop	
  6360                           
  6361                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6362   00230E  8491               	bsf	145,2,c	;volatile
  6363                           
  6364                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6365   002310  8691               	bsf	145,3,c	;volatile
  6366   002312  0012               	return		;funcret
  6367   002314                     __end_of_write_d_aff:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _write_c_aff *****************
  6371 ;; Defined at:
  6372 ;;		line 17 in file "afficheur.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  command         1    wreg     unsigned char 
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;  command         1    0[COMRAM] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  1    wreg      void 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;Total ram usage:        1 bytes
  6391 ;; Hardware stack levels used: 1
  6392 ;; This function calls:
  6393 ;;		Nothing
  6394 ;; This function is called by:
  6395 ;;		_command
  6396 ;;		_d1command
  6397 ;;		_d2command
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text38
  6402   002314                     __ptext38:
  6403                           	callstack 0
  6404   002314                     _write_c_aff:
  6405                           	callstack 24
  6406                           
  6407                           ;incstack = 0
  6408                           ;write_c_aff@command stored from wreg
  6409   002314  6E01               	movwf	write_c_aff@command^0,c
  6410                           
  6411                           ;afficheur.c: 19: LATH=command;
  6412   002316  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6413                           
  6414                           ;afficheur.c: 20: TRISH=0x00;
  6415   00231A  0E00               	movlw	0
  6416   00231C  6E99               	movwf	153,c	;volatile
  6417                           
  6418                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6419   00231E  8091               	bsf	145,0,c	;volatile
  6420                           
  6421                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6422   002320  9691               	bcf	145,3,c	;volatile
  6423                           
  6424                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6425   002322  9491               	bcf	145,2,c	;volatile
  6426                           
  6427                           ;afficheur.c: 24: __nop();
  6428   002324  F000               	nop	
  6429                           
  6430                           ;afficheur.c: 25: __nop();
  6431   002326  F000               	nop	
  6432                           
  6433                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6434   002328  8491               	bsf	145,2,c	;volatile
  6435                           
  6436                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6437   00232A  8691               	bsf	145,3,c	;volatile
  6438   00232C  0012               	return		;funcret
  6439   00232E                     __end_of_write_c_aff:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _wait_status_ok *****************
  6443 ;; Defined at:
  6444 ;;		line 53 in file "afficheur.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;		None
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  res             1    3[COMRAM] unsigned char 
  6449 ;;  status          1    2[COMRAM] unsigned char 
  6450 ;;  err             1    1[COMRAM] unsigned char 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      unsigned char 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0, cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6461 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;Total ram usage:        3 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 1
  6467 ;; This function calls:
  6468 ;;		_delai_us_char
  6469 ;; This function is called by:
  6470 ;;		_command
  6471 ;;		_d1command
  6472 ;;		_d2command
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text39
  6477   001FA2                     __ptext39:
  6478                           	callstack 0
  6479   001FA2                     _wait_status_ok:
  6480                           	callstack 23
  6481                           
  6482                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6483                           
  6484                           ;incstack = 0
  6485   001FA2  0E00               	movlw	0
  6486   001FA4  6E02               	movwf	wait_status_ok@err^0,c
  6487                           
  6488                           ;afficheur.c: 58: res=2;
  6489   001FA6  0E02               	movlw	2
  6490   001FA8  D01E               	goto	L7
  6491   001FAA                     i2l1268:
  6492                           
  6493                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6494   001FAA  6899               	setf	153,c	;volatile
  6495                           
  6496                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6497   001FAC  8091               	bsf	145,0,c	;volatile
  6498                           
  6499                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6500   001FAE  9691               	bcf	145,3,c	;volatile
  6501                           
  6502                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6503   001FB0  9291               	bcf	145,1,c	;volatile
  6504                           
  6505                           ;afficheur.c: 65: __nop();
  6506   001FB2  F000               	nop	
  6507                           
  6508                           ;afficheur.c: 66: status=PORTH;
  6509   001FB4  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6510                           
  6511                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6512   001FB8  8291               	bsf	145,1,c	;volatile
  6513                           
  6514                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6515   001FBA  8691               	bsf	145,3,c	;volatile
  6516                           
  6517                           ;afficheur.c: 70: status=(status&0x03);
  6518   001FBC  5003               	movf	wait_status_ok@status^0,w,c
  6519   001FBE  0B03               	andlw	3
  6520   001FC0  6E03               	movwf	wait_status_ok@status^0,c
  6521                           
  6522                           ;afficheur.c: 71: if (status!=0x03)
  6523   001FC2  0E03               	movlw	3
  6524   001FC4  1803               	xorwf	wait_status_ok@status^0,w,c
  6525   001FC6  B4D8               	btfsc	status,2,c
  6526   001FC8  D00D               	goto	i2l2559
  6527                           
  6528                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6529   001FCA  2A02               	incf	wait_status_ok@err^0,f,c
  6530                           
  6531                           ;afficheur.c: 74: delai_us_char(12);
  6532   001FCC  0E0C               	movlw	12
  6533   001FCE  EC42  F011         	call	_delai_us_char
  6534                           
  6535                           ;afficheur.c: 75: if (err>=250)
  6536   001FD2  0EF9               	movlw	249
  6537   001FD4  6402               	cpfsgt	wait_status_ok@err^0,c
  6538   001FD6  D008               	goto	i2l2561
  6539                           
  6540                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6541   001FD8  9EF2               	bcf	242,7,c	;volatile
  6542                           
  6543                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6544   001FDA  948B               	bcf	139,2,c	;volatile
  6545   001FDC  828B               	bsf	139,1,c	;volatile
  6546   001FDE  808F               	bsf	143,0,c	;volatile
  6547                           
  6548                           ;afficheur.c: 79: res=0;
  6549   001FE0  0E00               	movlw	0
  6550   001FE2  D001               	goto	L7
  6551   001FE4                     i2l2559:
  6552                           
  6553                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6554   001FE4  0E01               	movlw	1
  6555   001FE6                     L7:
  6556   001FE6  6E04               	movwf	wait_status_ok@res^0,c
  6557   001FE8                     i2l2561:
  6558   001FE8  0E02               	movlw	2
  6559   001FEA  1804               	xorwf	wait_status_ok@res^0,w,c
  6560   001FEC  B4D8               	btfsc	status,2,c
  6561   001FEE  D7DD               	goto	i2l1268
  6562                           
  6563                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6564   001FF0  5004               	movf	wait_status_ok@res^0,w,c
  6565   001FF2  0012               	return		;funcret
  6566   001FF4                     __end_of_wait_status_ok:
  6567                           	callstack 0
  6568                           
  6569 ;; *************** function _delai_us_char *****************
  6570 ;; Defined at:
  6571 ;;		line 154 in file "afficheur.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  ucdelai         1    wreg     unsigned char 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;Total ram usage:        1 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_wait_status_ok
  6595 ;;		_command
  6596 ;;		_d1command
  6597 ;;		_d2command
  6598 ;;		_initialisation_afficheur
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           	psect	text40
  6603   002284                     __ptext40:
  6604                           	callstack 0
  6605   002284                     _delai_us_char:
  6606                           	callstack 23
  6607                           
  6608                           ;incstack = 0
  6609                           ;delai_us_char@ucdelai stored from wreg
  6610   002284  6E01               	movwf	delai_us_char@ucdelai^0,c
  6611                           
  6612                           ;afficheur.c: 157: while (ucdelai>0)
  6613   002286  D00B               	goto	i2l2507
  6614   002288                     i2l1292:
  6615                           
  6616                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6617   002288  F000               	nop	
  6618   00228A  F000               	nop	
  6619   00228C  F000               	nop	
  6620   00228E  F000               	nop	
  6621   002290  F000               	nop	
  6622   002292  F000               	nop	
  6623   002294  F000               	nop	
  6624   002296  F000               	nop	
  6625   002298  F000               	nop	
  6626   00229A  F000               	nop	
  6627                           
  6628                           ;afficheur.c: 160: ucdelai--;
  6629   00229C  0601               	decf	delai_us_char@ucdelai^0,f,c
  6630   00229E                     i2l2507:
  6631   00229E  5001               	movf	delai_us_char@ucdelai^0,w,c
  6632   0022A0  B4D8               	btfsc	status,2,c
  6633   0022A2  0012               	return	
  6634   0022A4  D7F1               	goto	i2l1292
  6635   0022A6                     __end_of_delai_us_char:
  6636                           	callstack 0
  6637                           
  6638                           	psect	text41
  6639   000000                     __ptext41:
  6640                           	callstack 0
  6641                           
  6642                           	psect	rparam
  6643   000000                     
  6644                           	psect	temp
  6645   000022                     btemp:
  6646                           	callstack 0
  6647   000022                     	ds	12
  6648   000000                     wtemp0	set	btemp
  6649   000000                     wtemp1	set	btemp+2
  6650   000000                     wtemp2	set	btemp+4
  6651   000000                     wtemp3	set	btemp+6
  6652   000000                     wtemp4	set	btemp+8
  6653   000000                     wtemp5	set	btemp+10
  6654   000000                     wtemp8	set	btemp+1
  6655   000000                     ttemp0	set	btemp
  6656   000000                     ttemp1	set	btemp+3
  6657   000000                     ttemp2	set	btemp+6
  6658   000000                     ttemp3	set	btemp+9
  6659   000000                     ttemp5	set	btemp+1
  6660   000000                     ttemp6	set	btemp+4
  6661   000000                     ttemp7	set	btemp+8
  6662   000000                     ltemp0	set	btemp
  6663   000000                     ltemp1	set	btemp+4
  6664   000000                     ltemp2	set	btemp+8
  6665   000000                     lltemp0	set	btemp
  6666                           
  6667                           	psect	idloc
  6668                           
  6669                           ;Config register IDLOC0 @ 0x200000
  6670                           ;	unspecified, using default values
  6671   200000                     	org	2097152
  6672   200000  FF                 	db	255
  6673                           
  6674                           ;Config register IDLOC1 @ 0x200001
  6675                           ;	unspecified, using default values
  6676   200001                     	org	2097153
  6677   200001  FF                 	db	255
  6678                           
  6679                           ;Config register IDLOC2 @ 0x200002
  6680                           ;	unspecified, using default values
  6681   200002                     	org	2097154
  6682   200002  FF                 	db	255
  6683                           
  6684                           ;Config register IDLOC3 @ 0x200003
  6685                           ;	unspecified, using default values
  6686   200003                     	org	2097155
  6687   200003  FF                 	db	255
  6688                           
  6689                           ;Config register IDLOC4 @ 0x200004
  6690                           ;	unspecified, using default values
  6691   200004                     	org	2097156
  6692   200004  FF                 	db	255
  6693                           
  6694                           ;Config register IDLOC5 @ 0x200005
  6695                           ;	unspecified, using default values
  6696   200005                     	org	2097157
  6697   200005  FF                 	db	255
  6698                           
  6699                           ;Config register IDLOC6 @ 0x200006
  6700                           ;	unspecified, using default values
  6701   200006                     	org	2097158
  6702   200006  FF                 	db	255
  6703                           
  6704                           ;Config register IDLOC7 @ 0x200007
  6705                           ;	unspecified, using default values
  6706   200007                     	org	2097159
  6707   200007  FF                 	db	255
  6708                           
  6709                           	psect	config
  6710                           
  6711                           ;Config register CONFIG1L @ 0x300000
  6712                           ;	VREG Sleep Enable bit
  6713                           ;	RETEN = ON, Enabled
  6714                           ;	LF-INTOSC Low-power Enable bit
  6715                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6716                           ;	SOSC Power Selection and mode Configuration bits
  6717                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6718                           ;	Extended Instruction Set
  6719                           ;	XINST = OFF, Disabled
  6720   300000                     	org	3145728
  6721   300000  15                 	db	21
  6722                           
  6723                           ;Config register CONFIG1H @ 0x300001
  6724                           ;	Oscillator
  6725                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  6726                           ;	PLL x4 Enable bit
  6727                           ;	PLLCFG = ON, Enabled
  6728                           ;	Fail-Safe Clock Monitor
  6729                           ;	FCMEN = OFF, Disabled
  6730                           ;	Internal External Oscillator Switch Over Mode
  6731                           ;	IESO = OFF, Disabled
  6732   300001                     	org	3145729
  6733   300001  13                 	db	19
  6734                           
  6735                           ;Config register CONFIG2L @ 0x300002
  6736                           ;	Power Up Timer
  6737                           ;	PWRTEN = OFF, Disabled
  6738                           ;	Brown Out Detect
  6739                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  6740                           ;	Brown-out Reset Voltage bits
  6741                           ;	BORV = 0, 3.0V
  6742                           ;	BORMV Power level
  6743                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6744   300002                     	org	3145730
  6745   300002  61                 	db	97
  6746                           
  6747                           ;Config register CONFIG2H @ 0x300003
  6748                           ;	Watchdog Timer
  6749                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6750                           ;	Watchdog Postscaler
  6751                           ;	WDTPS = 1, 1:1
  6752   300003                     	org	3145731
  6753   300003  00                 	db	0
  6754                           
  6755                           ;Config register CONFIG3L @ 0x300004
  6756                           ;	RTCC Clock Select
  6757                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  6758                           ;	External Address Shift bit
  6759                           ;	EASHFT = OFF, Address Shifting disabled
  6760                           ;	Address Bus Width Select bits
  6761                           ;	ABW = MM, 8-bit address bus
  6762                           ;	Data Bus Width
  6763                           ;	BW = 8, 8-bit external bus mode
  6764                           ;	External Bus Wait
  6765                           ;	WAIT = ON, Enabled
  6766   300004                     	org	3145732
  6767   300004  30                 	db	48
  6768                           
  6769                           ;Config register CONFIG3H @ 0x300005
  6770                           ;	CCP2 Mux
  6771                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  6772                           ;	ECCP Mux
  6773                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  6774                           ;	MSSP address masking
  6775                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  6776                           ;	Master Clear Enable
  6777                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  6778   300005                     	org	3145733
  6779   300005  80                 	db	128
  6780                           
  6781                           ;Config register CONFIG4L @ 0x300006
  6782                           ;	Stack Overflow Reset
  6783                           ;	STVREN = ON, Enabled
  6784                           ;	Boot Block Size
  6785                           ;	BBSIZ = BB1K, 1K word Boot Block size
  6786                           ;	Background Debug
  6787                           ;	DEBUG = OFF, Disabled
  6788   300006                     	org	3145734
  6789   300006  81                 	db	129
  6790                           
  6791                           ; Padding undefined space
  6792   300007                     	org	3145735
  6793   300007  FF                 	db	255
  6794                           
  6795                           ;Config register CONFIG5L @ 0x300008
  6796                           ;	Code Protect 00800-03FFF
  6797                           ;	CP0 = OFF, Disabled
  6798                           ;	Code Protect 04000-07FFF
  6799                           ;	CP1 = OFF, Disabled
  6800                           ;	Code Protect 08000-0BFFF
  6801                           ;	CP2 = OFF, Disabled
  6802                           ;	Code Protect 0C000-0FFFF
  6803                           ;	CP3 = OFF, Disabled
  6804                           ;	Code Protect 10000-13FFF
  6805                           ;	CP4 = OFF, Disabled
  6806                           ;	Code Protect 14000-17FFF
  6807                           ;	CP5 = OFF, Disabled
  6808                           ;	Code Protect 18000-1BFFF
  6809                           ;	CP6 = OFF, Disabled
  6810                           ;	Code Protect 1C000-1FFFF
  6811                           ;	CP7 = OFF, Disabled
  6812   300008                     	org	3145736
  6813   300008  FF                 	db	255
  6814                           
  6815                           ;Config register CONFIG5H @ 0x300009
  6816                           ;	Code Protect Boot
  6817                           ;	CPB = OFF, Disabled
  6818                           ;	Data EE Read Protect
  6819                           ;	CPD = OFF, Disabled
  6820   300009                     	org	3145737
  6821   300009  C0                 	db	192
  6822                           
  6823                           ;Config register CONFIG6L @ 0x30000A
  6824                           ;	Table Write Protect 00800-03FFF
  6825                           ;	WRT0 = OFF, Disabled
  6826                           ;	Table Write Protect 04000-07FFF
  6827                           ;	WRT1 = OFF, Disabled
  6828                           ;	Table Write Protect 08000-0BFFF
  6829                           ;	WRT2 = OFF, Disabled
  6830                           ;	Table Write Protect 0C000-0FFFF
  6831                           ;	WRT3 = OFF, Disabled
  6832                           ;	Table Write Protect 10000-13FFF
  6833                           ;	WRT4 = OFF, Disabled
  6834                           ;	Table Write Protect 14000-17FFF
  6835                           ;	WRT5 = OFF, Disabled
  6836                           ;	Table Write Protect 18000-1BFFF
  6837                           ;	WRT6 = OFF, Disabled
  6838                           ;	Table Write Protect 1C000-1FFFF
  6839                           ;	WRT7 = OFF, Disabled
  6840   30000A                     	org	3145738
  6841   30000A  FF                 	db	255
  6842                           
  6843                           ;Config register CONFIG6H @ 0x30000B
  6844                           ;	Config. Write Protect
  6845                           ;	WRTC = OFF, Disabled
  6846                           ;	Table Write Protect Boot
  6847                           ;	WRTB = OFF, Disabled
  6848                           ;	Data EE Write Protect
  6849                           ;	WRTD = OFF, Disabled
  6850   30000B                     	org	3145739
  6851   30000B  E0                 	db	224
  6852                           
  6853                           ;Config register CONFIG7L @ 0x30000C
  6854                           ;	Table Read Protect 00800-03FFF
  6855                           ;	EBRT0 = OFF, Disabled
  6856                           ;	Table Read Protect 04000-07FFF
  6857                           ;	EBRT1 = OFF, Disabled
  6858                           ;	Table Read Protect 08000-0BFFF
  6859                           ;	EBRT2 = OFF, Disabled
  6860                           ;	Table Read Protect 0C000-0FFFF
  6861                           ;	EBRT3 = OFF, Disabled
  6862                           ;	Table Read Protect 10000-13FFF
  6863                           ;	EBRT4 = OFF, Disabled
  6864                           ;	Table Read Protect 14000-17FFF
  6865                           ;	EBRT5 = OFF, Disabled
  6866                           ;	Table Read Protect 18000-1BFFF
  6867                           ;	EBRT6 = OFF, Disabled
  6868                           ;	Table Read Protect 1C000-1FFFF
  6869                           ;	EBRT7 = OFF, Disabled
  6870   30000C                     	org	3145740
  6871   30000C  FF                 	db	255
  6872                           
  6873                           ;Config register CONFIG7H @ 0x30000D
  6874                           ;	Table Read Protect Boot
  6875                           ;	EBRTB = OFF, Disabled
  6876   30000D                     	org	3145741
  6877   30000D  40                 	db	64
  6878                           tosu	equ	0xFFF
  6879                           tosh	equ	0xFFE
  6880                           tosl	equ	0xFFD
  6881                           stkptr	equ	0xFFC
  6882                           pclatu	equ	0xFFB
  6883                           pclath	equ	0xFFA
  6884                           pcl	equ	0xFF9
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           indf0	equ	0xFEF
  6892                           postinc0	equ	0xFEE
  6893                           postdec0	equ	0xFED
  6894                           preinc0	equ	0xFEC
  6895                           plusw0	equ	0xFEB
  6896                           fsr0h	equ	0xFEA
  6897                           fsr0l	equ	0xFE9
  6898                           wreg	equ	0xFE8
  6899                           indf1	equ	0xFE7
  6900                           postinc1	equ	0xFE6
  6901                           postdec1	equ	0xFE5
  6902                           preinc1	equ	0xFE4
  6903                           plusw1	equ	0xFE3
  6904                           fsr1h	equ	0xFE2
  6905                           fsr1l	equ	0xFE1
  6906                           bsr	equ	0xFE0
  6907                           indf2	equ	0xFDF
  6908                           postinc2	equ	0xFDE
  6909                           postdec2	equ	0xFDD
  6910                           preinc2	equ	0xFDC
  6911                           plusw2	equ	0xFDB
  6912                           fsr2h	equ	0xFDA
  6913                           fsr2l	equ	0xFD9
  6914                           status	equ	0xFD8

Data Sizes:
    Strings     215
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     33      45
    BANK0           124      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_25(CODE[6]), STR_24(CODE[6]), STR_23(CODE[14]), STR_22(CODE[29]), 
		 -> STR_21(CODE[4]), STR_20(CODE[3]), STR_19(CODE[7]), STR_18(CODE[5]), 
		 -> STR_17(CODE[12]), STR_16(CODE[12]), STR_15(CODE[6]), STR_14(CODE[7]), 
		 -> STR_13(CODE[9]), STR_12(CODE[21]), STR_11(CODE[7]), STR_10(CODE[10]), 
		 -> STR_9(CODE[9]), STR_8(CODE[6]), STR_7(CODE[13]), STR_6(CODE[11]), 
		 -> STR_5(CODE[7]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vitesse1->_goto_lico
    _vide->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   59082
                                             20 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   57276
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
                               _vide
                           _vitesse1
 ---------------------------------------------------------------------------------
 (4) _vitesse1                                             0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5184
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4416
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2241
                                              8 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5099
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3879
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3082
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesse1
       _draw_string
       _goto_lico
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7C      0       0      64        0.0%
BITBANK0            7C      0       0       4        0.0%
BANK0               7C      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     21      2D       1       54.2%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      57        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 23 14:11:03 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0035                         ?_draw_square 000F  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0031                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 232E                                 l1533 225E  
                               l2783 2242                                 l2785 2248  
                               l2787 224E                                 l4973 22DC  
                               STR_1 108D                                 STR_2 10D5  
                               STR_3 10D2                                 STR_4 10CC  
                               STR_5 109C                                 STR_6 1066  
                               STR_7 1041                                 STR_8 10B7  
                               STR_9 107B                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 2240                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 22C6  
                               _fptr 002E                                 _vide 235E  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0022                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                     ?_lecture_normale 0003  
                              ?_main 0001                      __end_of___awdiv 1DD2  
                              STR_10 1071                                STR_11 1095  
                              STR_20 10CF                                STR_12 101E  
                              STR_21 10C8                                STR_13 1084  
                              STR_14 10AA                                STR_22 1001  
                              STR_15 10BD                                STR_23 1033  
                              STR_24 10B1                                STR_16 104E  
                              STR_25 102D                                STR_17 105A  
                              STR_18 10C3                                STR_19 10A3  
                    __end_of___awmod 1E42                                ?_vide 0001  
                              _T0CON 000FD5                      ___awdiv@divisor 0003  
                       draw_dec8@dix 000D                                _FSR0H 000FEA  
                              _FSR1H 000FE2                                _FSR0L 000FE9  
                              _FSR2H 000FDA                                _FSR1L 000FE1  
                              _FSR2L 000FD9                      __end_of___lwdiv 1FA2  
                              i2l144 216C                                i2l147 217A  
                              i2l434 11F0                                i2l451 1372  
                              i2l455 1426                                i2l802 1974  
                              i2l564 16E8                                i2l820 1998  
                              i2l814 198C                                i2l559 16A6  
                              i2l832 19B0                                i2l808 1980  
                              i2l577 2348                                i2l850 19D4  
                              i2l826 19A4                                i2l844 19C8  
                              i2l862 19EC                                i2l838 19BC  
                              i2l790 195C                                i2l856 19E0  
                              i2l784 1950                                i2l960 1780  
                              i2l778 1944                                i2l796 1968  
                              i2l972 1798                      ___awdiv@counter 0005  
                              i2l990 17BC                                i2l966 178C  
                              i2l984 17B0                                i2l978 17A4  
                              i2l996 17C8                                _PRODH 000FF4  
                              _PRODL 000FF3                                _PORTH 000F87  
                              _TRISH 000F99                                _TRISJ 000F9A  
                        _write_c_aff 2314                          _write_d_aff 22FA  
                    __end_of_charger 238E                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                      __end_of_command 22FA  
                              _badge 000075                                _plot1 1AD6  
                              _queue 000069                                tablat 000FF5  
                              ltemp0 0022                                ltemp1 0026  
                              ltemp2 002A                __end_of_delai_us_char 22A6  
                              plusw1 000FE3                      _check_status_ok 2214  
                              ttemp0 0022                                ttemp1 0025  
                              ttemp2 0028                                ttemp3 002B  
                              ttemp5 0023                                ttemp6 0026  
                              ttemp7 002A                                status 000FD8  
                              wtemp0 0022                                wtemp1 0024  
                              wtemp2 0026                                wtemp3 0028  
                              wtemp4 002A                                wtemp5 002C  
                              wtemp8 0023        initialisation_du_systeme@temp 0021  
                    __initialization 238E                         __end_of_Init 2262  
         lecture_8bit_analogique@ret 0001                         __end_of_main 22E0  
                       __end_of_vide 2376                               ??_main 0022  
                             ??_vide 000F                        __activetblptr 000003  
                       draw_square@x 0013                         draw_square@y 0014  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               ?_plot1 0009  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0001  
                      _n_octet_badge 00007F                        draw_dec8@cent 000C  
                             _MEMCON 000F26                               i2l1002 17D4  
                             i2l1020 17F8                               i2l1014 17EC  
                             i2l1032 1810                               i2l1008 17E0  
                             i2l1026 1804                               i2l1300 1A4A  
                             i2l1044 1828                               i2l1310 21A0  
                             i2l1038 181C                               i2l1340 1C7A  
                             i2l1318 1CC4                               i2l1334 1E8A  
                             i2l1343 1C94                               i2l1329 1E5E  
                             i2l1441 1EF0                               i2l1354 1F38  
                             i2l1346 1CAE                               i2l1292 2288  
                             i2l1268 1FAA                               i2l2237 1F98  
                             i2l4201 1DC8                               i2l1650 1BC0  
                             i2l2507 229E                               i2l4131 2110  
                             i2l1651 1BC8                               i2l1660 2330  
                             i2l4221 1E00                               i2l4213 1DE6  
                             i2l1653 1BD2                               i2l4223 1E08  
                             i2l3511 18AE                               i2l2561 1FE8  
                             i2l4233 1E2A                               i2l4217 1DF2  
                             i2l4321 1A34                               i2l2801 217E  
                             i2l4305 233C                               i2l4251 1F16  
                             i2l4331 1A4C                               _PCLATH 000FFA  
                             i2l4157 2040                               i2l4253 1F3A  
                             i2l4181 1D88                               i2l4237 1E38  
                             i2l4229 1E20                               i2l3517 18BC  
                             i2l2559 1FE4                               i2l4247 1F0C  
                             i2l4263 2198                               i2l4343 21CA  
                             i2l4183 1D90                               i2l4175 1D72  
                             i2l3535 18EA                               i2l4273 1CFC  
                             i2l4265 21A2                               i2l4193 1DB0  
                             i2l4169 1D62                               i2l4441 1E60  
                             i2l4281 1B12                               i2l4409 1EC2  
                             i2l3529 18DC                               i2l5137 0198  
                             i2l4259 218E                               i2l4291 1B3A  
                             i2l4283 1B1A                               i2l4371 2070  
                             i2l2771 2238                               i2l4419 1EE2  
                             i2l4531 1C22                               i2l4269 1CC6  
                             i2l4357 21FA                               i2l4461 22AC  
                             i2l4197 1DBA                               i2l4285 1B22  
                             i2l4365 204C                               i2l4541 1F66  
                             i2l3549 1912                               i2l3493 1880  
                             i2l4447 1E82                               i2l4439 1E56  
                             i2l4287 1B2A                               i2l4295 1B42  
                             i2l4375 2086                               i2l4543 1F6E  
                             i2l3639 1834                               i2l4393 1C96  
                             i2l4449 1E8C                               i2l4289 1B32  
                             i2l4369 2062                               i2l4801 12AE  
                             i2l4553 1F8E                               i2l3649 184C  
                             _PCLATU 000FFB                               i2l3499 188E  
                             i2l4397 1CB0                               i2l4389 1C7C  
                             i2l4821 12F6                               i2l4805 12B4  
                             i2l4477 2354                               i2l5293 02DC  
                             i2l3599 19F8                               i2l4495 1BB2  
                             i2l4487 1B9C                               i2l4841 134C  
                             i2l4753 11C8                               i2l4827 1302  
                             i2l4763 1202                               i2l4845 1360  
                             i2l4837 1336                               i2l4773 1230  
                             i2l4765 120E                               i2l4925 1708  
                             i2l4909 16C6                               i2l4775 1236  
                             i2l4951 20B4                               i2l4795 1298  
                             i2l4797 129E                               i2l4957 20C6  
                             _TABLAT 000FF5                               i2l4879 1428  
                             i2l4959 20CE                               i2l4993 0064  
                      draw_dec8@unit 000A                               _RCSTA1 000FAB  
                         _Tick_Count 000071                               _SPBRG1 000FAF  
                   _FSR0L_TEMPORAIRE 000064                               _STATUS 000FD8  
                             _STKPTR 000FFC                               _TXREG1 000FAD  
                     clear_line@line 000F                               _TXSTA1 000FAC  
                             _Valeur 000083                            ??___awdiv 0005  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _tache1 10DA                               _tache2 1684  
                             _tache3 185E                               _tache4 193C  
                             _tache5 1778                               _tache6 2090  
                          ??_charger 000F                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               lltemp0 0022  
                             plot1@x 000E                               plot1@y 0009  
                   __end_of_tp_delai 235E                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 2240  
                   __end_of_vitesse1 1EF8         lecture_normale@temps_attente 0005  
                         __accesstop 0060              __end_of__initialization 2398  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                         ___inthi_sp 0AAC                    __end_of_d1command 2114  
                  __end_of_d2command 2044                        __end_of_plot1 1B84  
                            ??_plot1 000A                        draw_square@x1 0012  
                      draw_square@x2 0010                        draw_square@y1 000F  
                      draw_square@y2 0011                         _W_TEMPORAIRE 000060  
                         __pnvCOMRAM 002E                       _clear_graphics 21E4  
        ??_initialisation_du_systeme 0021                           _clear_line 22A6  
                         _clear_text 21B4             ?_fonction_d_interruption 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                       draw_dec8@octet 000B  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
           _initialisation_afficheur 1A0A                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 0039  
             __end_of_clear_graphics 2214                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 2114                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_dec8 1CC2  
                  __end_of_draw_char 21B4                    __end_of_draw_hex8 1E9E  
                            ___awdiv 1D4E                              ___awmod 1DD2  
                            ___lwdiv 1F50                         __psmallconst 1000  
                          ?_vitesse1 0001                              __pcinit 238E  
                            _charger 2376                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 22C6  
                            __ptext1 144C                              __ptext2 2114  
                            __ptext3 2240                              __ptext5 2090  
                            __ptext6 1B84                              __ptext7 232E  
                            __ptext8 1778                              __ptext9 193C  
                            _command 22E0                            _T0CONbits 000FD5  
                 draw_string@tableau 0008            _initialisation_du_systeme 144C  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 2284  
                  __end_of_goto_lico 1F50                              _val_tos 0033  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 2398                              tache4@a 0001  
                            tache5@a 0001                              tache6@n 0009  
                    ?_clear_graphics 0001                          ?_clear_line 0001  
                        ?_clear_text 0001                           ??_tp_delai 0003  
                            postdec1 000FE5                              postinc1 000FE6  
                         ??_vitesse1 000F                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84              _lecture_8bit_analogique 214C  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                         command@cmd 0005                           draw_dec8@c 000E  
                         draw_hex8@c 0009                   check_status_ok@res 0001  
             lecture_normale@n_octet 0006       lecture_8bit_analogique@channel 0002  
                          _d1command 20DA                            _d2command 1FF4  
                     __end_of_tache1 144C                       __end_of_tache2 1778  
                     __end_of_tache3 193C                       __end_of_tache4 1A0A  
                     __end_of_tache5 185E                       __end_of_tache6 20DA  
                      ??_draw_square 0012                        ??_draw_string 000A  
             lecture_normale@stid_id 0003                __end_of_stid_delai_us 2346  
                start_initialization 238E                    ??_lecture_normale 0005  
                      _delai_us_char 2284                             ??_tache1 0015  
                           ??_tache2 0008                             ??_tache3 0001  
                           ??_tache4 0001                             ??_tache5 0001  
                           ??_tache6 0009           ??_initialisation_afficheur 0009  
          ??_lecture_8bit_analogique 0001                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 0035  
                __end_of_draw_square 2090           ??_initialisation_des_ports 0021  
                __end_of_draw_string 1D4E                       ?_delai_us_char 0001  
                   ___lwdiv@dividend 0001                            __pintcode 0008  
                           ?___awdiv 0001                             ?___awmod 0001  
                           ?___lwdiv 0001                             ?_charger 0001  
                  _pointeur_de_tache 000070                            _draw_dec8 1C26  
                          _draw_char 2182                            _draw_hex8 1E42  
                           ?_command 0001                       _wait_status_ok 1FA2  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 2262  
                 write_c_aff@command 0001                            _goto_lico 1EF8  
    __end_of_lecture_8bit_analogique 2182                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 1684  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u130_40 1948                             i2u212_40 1D94  
                           i2u140_40 1984                             i2u132_40 1954  
                           i2u150_40 19C0                             i2u142_40 1990  
                           i2u134_40 1960                             i2u231_40 1D46  
                           i2u231_47 1D3C                             i2u152_40 19CC  
                           i2u144_40 199C                             i2u136_40 196C  
                           i2u161_40 1784                             i2u218_40 1E0C  
                           i2u154_40 19D8                             i2u146_40 19A8  
                           i2u138_40 1978                             i2u227_40 1CEC  
                           i2u171_40 17C0                             i2u163_40 1790  
                           i2u227_47 1CE2                             i2u244_40 1EA6  
                           i2u156_40 19E4                             i2u148_40 19B4  
                           i2u229_40 1D1E                             i2u181_40 17FC  
                           i2u173_40 17CC                             i2u165_40 179C  
                       ??_clear_line 000F                             i2u229_47 1D14  
                           i2u183_40 1808                             i2u175_40 17D8  
                           i2u167_40 17A8                             i2u185_40 1814  
                           i2u177_40 17E4                             i2u169_40 17B4  
                           _PIR1bits 000F9E                             i2u274_40 12A8  
                           i2u187_40 1820                             i2u179_40 17F0  
                           i2u268_40 1F72                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 1FF4  
                        ??_d1command 0006                           ?_draw_dec8 0001  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                   clear_line@column 0010                          _draw_square 2044  
                        _draw_string 1CC2                         _Val_sem_rxtx 0038  
                           _TP_appui 000066                   __end_of_clear_line 22C6  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 21E4                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           _Operator 000082                             __Lrparam 0000  
   __end_of_initialisation_afficheur 1AD6                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009              _fonction_d_interruption 0008  
                    _lecture_normale 1B84                             _batterie 000074  
                    ___lwdiv@divisor 0003     __end_of_initialisation_des_ports 214C  
                    ___lwdiv@counter 0007                             __ptext10 185E  
                           __ptext11 1684                             __ptext20 2262  
                           __ptext12 2346                             __ptext21 2044  
                           __ptext13 1F50                             __ptext30 2182  
                           __ptext22 1AD6                             __ptext14 10DA  
                           __ptext31 21E4                             __ptext23 22E0  
                           __ptext15 1E9E                             __ptext40 2284  
                           __ptext32 2376                             __ptext24 1DD2  
                           __ptext16 235E                             __ptext41 0000  
                           __ptext33 1EF8                             __ptext25 1E42  
                           __ptext17 214C                             __ptext34 1FF4  
                           __ptext26 1C26                             __ptext18 1A0A  
                           __ptext35 1CC2                             __ptext27 1D4E  
                           __ptext19 2214                             __ptext36 20DA  
                           __ptext28 21B4                             __ptext37 22FA  
                           __ptext29 22A6                             __ptext38 2314  
                           __ptext39 1FA2                             isa$xinst 000000  
                           _tp_delai 2346                    ??_check_status_ok 0001  
                           _vitesse1 1E9E                          ??_draw_dec8 0009  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_init_rxtx 0001  
                        ??_goto_lico 000A                             intlevel2 0000  
                           plot1@add 000C                       goto_lico@ligne 000C  
            __end_of_lecture_normale 1C26                         d1command@cmd 0005  
                       d1command@res 0007            ??_fonction_d_interruption 0015  
                       tp_delai@itpd 0001                          d1command@d1 0006  
                __end_of_write_c_aff 232E                  __end_of_write_d_aff 2314  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
