

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 22 16:26:56 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54                           	dabs	1,0x603,1,_STKPTR_T6
    55                           	dabs	1,0x503,1,_STKPTR_T5
    56                           	dabs	1,0x403,1,_STKPTR_T4
    57                           	dabs	1,0x303,1,_STKPTR_T3
    58                           	dabs	1,0x203,1,_STKPTR_T2
    59                           	dabs	1,0x103,1,_STKPTR_T1
    60                           	dabs	1,0x60,1,_W_TEMPORAIRE
    61                           	dabs	1,0x100,66,_contexte1
    62                           	dabs	1,0x69,6,_queue
    63                           	dabs	1,0x71,2,_Tick_Count
    64                           	dabs	1,0x80,1,_RXTX_libre
    65                           	dabs	1,0x7F,1,_n_octet_badge
    66                           	dabs	1,0x74,1,_batterie
    67                           	dabs	1,0x73,1,_vitesse
    68                           	dabs	1,0x70,1,_pointeur_de_tache
    69                           	dabs	1,0x6F,1,_tache_active
    70                           	dabs	1,0x68,1,_TP_y
    71                           	dabs	1,0x67,1,_TP_x
    72                           	dabs	1,0x66,1,_TP_appui
    73                           	dabs	1,0x65,1,_DEMARRAGE
    74                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    75                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    76                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    77                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    78                           	dabs	1,0x75,10,_badge
    79                           	dabs	1,0x200,66,_contexte2
    80                           	dabs	1,0x300,66,_contexte3
    81                           	dabs	1,0x400,66,_contexte4
    82                           	dabs	1,0x500,66,_contexte5
    83                           	dabs	1,0x600,66,_contexte6
    84   000000                     
    85                           ; Generated 06/04/2022 GMT
    86                           ; 
    87                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution. Publication is not required when
   101                           ;        this file is used in an embedded application.
   102                           ; 
   103                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   104                           ;        software without specific prior written permission.
   105                           ; 
   106                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   107                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   108                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   109                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   110                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   111                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   112                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   113                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   114                           ; 
   115                           ; 
   116                           ; Code-generator required, PIC18F87K22 Definitions
   117                           ; 
   118                           ; SFR Addresses
   119   000000                     
   120 ;;Init@sem	offset=-1 (param)
   121 ;;Init@sem	offset=-1 (param)
   122   000000                     _TMR0	set	4054
   123   000000                     _TOSU	set	4095
   124   000000                     _TOSH	set	4094
   125   000000                     _TOSL	set	4093
   126   000000                     _TABLAT	set	4085
   127   000000                     _TBLPTRL	set	4086
   128   000000                     _TBLPTRH	set	4087
   129   000000                     _TBLPTRU	set	4088
   130   000000                     _PRODL	set	4083
   131   000000                     _PRODH	set	4084
   132   000000                     _FSR2L	set	4057
   133   000000                     _FSR2H	set	4058
   134   000000                     _FSR1L	set	4065
   135   000000                     _FSR1H	set	4066
   136   000000                     _STKPTR	set	4092
   137   000000                     _FSR0L	set	4073
   138   000000                     _FSR0H	set	4074
   139   000000                     _BSR	set	4064
   140   000000                     _WREG	set	4072
   141   000000                     _STATUS	set	4056
   142                           
   143                           ; 1 bytes @ 0x20
   144 ;;
   145 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   146 ;;
   147 ;; *************** function _main *****************
   148 ;; Defined at:
   149 ;;		line 6 in file "main.c"
   150 ;; Parameters:    Size  Location     Type
   151 ;;		None
   152 ;; Auto vars:     Size  Location     Type
   153 ;;		None
   154 ;; Return value:  Size  Location     Type
   155 ;;                  1    wreg      void 
   156 ;; Registers used:
   157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   158 ;; Tracked objects:
   159 ;;		On entry : 0/0
   160 ;;		On exit  : 0/0
   161 ;;		Unchanged: 0/0
   162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   167 ;;Total ram usage:        0 bytes
   168 ;; Hardware stack levels required when called: 8
   169 ;; This function calls:
   170 ;;		_Init
   171 ;;		_initialisation_des_ports
   172 ;;		_initialisation_du_systeme
   173 ;; This function is called by:
   174 ;;		Startup code after reset
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           	psect	text0
   179   002126                     __ptext0:
   180                           	callstack 0
   181   000000                     _T0IF	set	32658
   182   000000                     _INTCON2bits	set	4081
   183   002126                     _main:
   184                           	callstack 23
   185                           
   186                           ;main.c: 8: initialisation_des_ports();
   187                           
   188                           ;incstack = 0
   189   002126  EC8F  F00F         	call	_initialisation_des_ports	;wreg free
   190                           
   191                           ;main.c: 9: initialisation_du_systeme();
   192   00212A  EC0E  F00A         	call	_initialisation_du_systeme	;wreg free
   193                           
   194                           ;main.c: 10: Init(1);
   195   00212E  0E01               	movlw	1
   196   002130  6EE6               	movwf	postinc1,c
   197   002132  EC50  F010         	call	_Init	;wreg free
   198                           
   199                           ;main.c: 13: T0CONbits.TMR0ON=1;
   200   002136  8ED5               	bsf	213,7,c	;volatile
   201                           
   202                           ;main.c: 14: T0IF=1;
   203   002138  84F2               	bsf	4082,2,c	;volatile
   204                           
   205                           ;main.c: 15: (INTCONbits.GIE = 1);
   206   00213A  8EF2               	bsf	242,7,c	;volatile
   207   00213C                     l4705:
   208                           
   209                           ;main.c: 19: __nop();
   210   00213C  F000               	nop	
   211   00213E  D7FE               	goto	l4705
   212   002140                     __end_of_main:
   213                           	callstack 0
   214                           
   215                           	psect	nvCOMRAM
   216   00002D                     __pnvCOMRAM:
   217                           	callstack 0
   218   00002D                     _fptr:
   219                           	callstack 0
   220   00002D                     	ds	3
   221   000030                     _puc:
   222                           	callstack 0
   223   000030                     	ds	2
   224   000032                     _val_tos:
   225                           	callstack 0
   226   000032                     	ds	2
   227   000000                     _ANCON1bits	set	3876
   228   000000                     _ANCON0bits	set	3877
   229   000000                     _TXSTA1	set	4012
   230   000000                     _LATJ	set	3985
   231   000000                     _T0CON	set	4053
   232   000000                     _ADCON0bits	set	4034
   233   000000                     _INTCONbits	set	4082
   234   000000                     _T0IE	set	32661
   235   000000                     _ANCON2	set	3875
   236   000000                     _ANCON1	set	3876
   237   000000                     _ANCON0	set	3877
   238   000000                     _MEMCON	set	3878
   239   000000                     _T0CONbits	set	4053
   240   000000                     _PADCFG1bits	set	3923
   241   000000                     _LATCbits	set	3979
   242   000000                     _LATDbits	set	3980
   243   000000                     _LATGbits	set	3983
   244   000000                     _LATJbits	set	3985
   245   000000                     _LATH	set	3984
   246   000000                     _TRISCbits	set	3988
   247   000000                     _TRISDbits	set	3989
   248   000000                     _TRISGbits	set	3992
   249   000000                     _TRISJ	set	3994
   250   000000                     _TRISH	set	3993
   251   000000                     _PIR1bits	set	3998
   252   000000                     _TXREG1	set	4013
   253   000000                     _ADCON2	set	4032
   254   000000                     _ADCON1	set	4033
   255   000000                     _BAUDCON1	set	3941
   256   000000                     _PORTBbits	set	3969
   257   000000                     _SPBRGH1	set	4052
   258   000000                     _ADRESH	set	4036
   259   000000                     _ADRESL	set	4035
   260   000000                     _ADCON0	set	4034
   261   000000                     _POSTINC0	set	4078
   262   000000                     _POSTINC1	set	4070
   263   000000                     _PCLATH	set	4090
   264   000000                     _PCLATU	set	4091
   265   000000                     _SPBRG1	set	4015
   266   000000                     _PORTDbits	set	3971
   267   000000                     _PORTEbits	set	3972
   268   000000                     _PORTH	set	3975
   269   000000                     _RCSTA1	set	4011
   270   000000                     _TXSTA1bits	set	4012
   271                           
   272                           	psect	smallconst
   273   001000                     __psmallconst:
   274                           	callstack 0
   275   001000  00                 	db	0
   276   001001                     STR_14:
   277   001001  20                 	db	32
   278   001002  41                 	db	65	;'A'
   279   001003  55                 	db	85	;'U'
   280   001004  43                 	db	67	;'C'
   281   001005  55                 	db	85	;'U'
   282   001006  4E                 	db	78	;'N'
   283   001007  20                 	db	32
   284   001008  20                 	db	32
   285   001009  20                 	db	32
   286   00100A  20                 	db	32
   287   00100B  20                 	db	32
   288   00100C  20                 	db	32
   289   00100D  20                 	db	32
   290   00100E  20                 	db	32
   291   00100F  20                 	db	32
   292   001010  20                 	db	32
   293   001011  20                 	db	32
   294   001012  20                 	db	32
   295   001013  20                 	db	32
   296   001014  20                 	db	32
   297   001015  00                 	db	0
   298   001016                     STR_18:
   299   001016  4C                 	db	76	;'L'
   300   001017  55                 	db	85	;'U'
   301   001018  46                 	db	70	;'F'
   302   001019  46                 	db	70	;'F'
   303   00101A  59                 	db	89	;'Y'
   304   00101B  20                 	db	32
   305   00101C  20                 	db	32
   306   00101D  20                 	db	32
   307   00101E  20                 	db	32
   308   00101F  20                 	db	32
   309   001020  20                 	db	32
   310   001021  20                 	db	32
   311   001022  20                 	db	32
   312   001023  20                 	db	32
   313   001024  20                 	db	32
   314   001025  20                 	db	32
   315   001026  20                 	db	32
   316   001027  20                 	db	32
   317   001028  00                 	db	0
   318   001029                     STR_7:
   319   001029  54                 	db	84	;'T'
   320   00102A  65                 	db	101	;'e'
   321   00102B  6D                 	db	109	;'m'
   322   00102C  70                 	db	112	;'p'
   323   00102D  2E                 	db	46
   324   00102E  20                 	db	32
   325   00102F  48                 	db	72	;'H'
   326   001030  75                 	db	117	;'u'
   327   001031  69                 	db	105	;'i'
   328   001032  6C                 	db	108	;'l'
   329   001033  65                 	db	101	;'e'
   330   001034  3A                 	db	58	;':'
   331   001035  00                 	db	0
   332   001036                     STR_15:
   333   001036  58                 	db	88	;'X'
   334   001037  2D                 	db	45
   335   001038  4A                 	db	74	;'J'
   336   001039  6F                 	db	111	;'o'
   337   00103A  79                 	db	121	;'y'
   338   00103B  73                 	db	115	;'s'
   339   00103C  74                 	db	116	;'t'
   340   00103D  69                 	db	105	;'i'
   341   00103E  63                 	db	99	;'c'
   342   00103F  6B                 	db	107	;'k'
   343   001040  3A                 	db	58	;':'
   344   001041  00                 	db	0
   345   001042                     STR_16:
   346   001042  59                 	db	89	;'Y'
   347   001043  2D                 	db	45
   348   001044  4A                 	db	74	;'J'
   349   001045  6F                 	db	111	;'o'
   350   001046  79                 	db	121	;'y'
   351   001047  73                 	db	115	;'s'
   352   001048  74                 	db	116	;'t'
   353   001049  69                 	db	105	;'i'
   354   00104A  63                 	db	99	;'c'
   355   00104B  6B                 	db	107	;'k'
   356   00104C  3A                 	db	58	;':'
   357   00104D  00                 	db	0
   358   00104E                     STR_6:
   359   00104E  54                 	db	84	;'T'
   360   00104F  65                 	db	101	;'e'
   361   001050  6D                 	db	109	;'m'
   362   001051  70                 	db	112	;'p'
   363   001052  2E                 	db	46
   364   001053  20                 	db	32
   365   001054  45                 	db	69	;'E'
   366   001055  61                 	db	97	;'a'
   367   001056  75                 	db	117	;'u'
   368   001057  3A                 	db	58	;':'
   369   001058  00                 	db	0
   370   001059                     STR_10:
   371   001059  42                 	db	66	;'B'
   372   00105A  61                 	db	97	;'a'
   373   00105B  74                 	db	116	;'t'
   374   00105C  74                 	db	116	;'t'
   375   00105D  65                 	db	101	;'e'
   376   00105E  72                 	db	114	;'r'
   377   00105F  69                 	db	105	;'i'
   378   001060  65                 	db	101	;'e'
   379   001061  3A                 	db	58	;':'
   380   001062  00                 	db	0
   381   001063                     STR_9:
   382   001063  56                 	db	86	;'V'
   383   001064  69                 	db	105	;'i'
   384   001065  74                 	db	116	;'t'
   385   001066  65                 	db	101	;'e'
   386   001067  73                 	db	115	;'s'
   387   001068  73                 	db	115	;'s'
   388   001069  65                 	db	101	;'e'
   389   00106A  3A                 	db	58	;':'
   390   00106B  00                 	db	0
   391   00106C                     STR_1:
   392   00106C  4D                 	db	77	;'M'
   393   00106D  61                 	db	97	;'a'
   394   00106E  72                 	db	114	;'r'
   395   00106F  63                 	db	99	;'c'
   396   001070  68                 	db	104	;'h'
   397   001071  65                 	db	101	;'e'
   398   001072  3A                 	db	58	;':'
   399   001073  00                 	db	0
   400   001074                     STR_17:
   401   001074  42                 	db	66	;'B'
   402   001075  49                 	db	73	;'I'
   403   001076  47                 	db	71	;'G'
   404   001077  20                 	db	32
   405   001078  4D                 	db	77	;'M'
   406   001079  55                 	db	85	;'U'
   407   00107A  4D                 	db	77	;'M'
   408   00107B  00                 	db	0
   409   00107C                     STR_13:
   410   00107C  42                 	db	66	;'B'
   411   00107D  61                 	db	97	;'a'
   412   00107E  64                 	db	100	;'d'
   413   00107F  67                 	db	103	;'g'
   414   001080  65                 	db	101	;'e'
   415   001081  3A                 	db	58	;':'
   416   001082  00                 	db	0
   417   001083                     STR_5:
   418   001083  53                 	db	83	;'S'
   419   001084  69                 	db	105	;'i'
   420   001085  65                 	db	101	;'e'
   421   001086  67                 	db	103	;'g'
   422   001087  65                 	db	101	;'e'
   423   001088  3A                 	db	58	;':'
   424   001089  00                 	db	0
   425   00108A                     STR_11:
   426   00108A  28                 	db	40
   427   00108B  28                 	db	40
   428   00108C  21                 	db	33
   429   00108D  29                 	db	41
   430   00108E  29                 	db	41
   431   00108F  00                 	db	0
   432   001090                     STR_8:
   433   001090  43                 	db	67	;'C'
   434   001091  68                 	db	104	;'h'
   435   001092  6F                 	db	111	;'o'
   436   001093  63                 	db	99	;'c'
   437   001094  3A                 	db	58	;':'
   438   001095  00                 	db	0
   439   001096                     STR_20:
   440   001096  20                 	db	32
   441   001097  79                 	db	121	;'y'
   442   001098  3D                 	db	61	;'='
   443   001099  00                 	db	0
   444   00109A                     STR_4:
   445   00109A  4E                 	db	78	;'N'
   446   00109B  20                 	db	32
   447   00109C  00                 	db	0
   448   00109D                     STR_19:
   449   00109D  78                 	db	120	;'x'
   450   00109E  3D                 	db	61	;'='
   451   00109F  00                 	db	0
   452   0010A0                     STR_3:
   453   0010A0  41                 	db	65	;'A'
   454   0010A1  52                 	db	82	;'R'
   455   0010A2  00                 	db	0
   456   0010A3                     STR_2:
   457   0010A3  41                 	db	65	;'A'
   458   0010A4  56                 	db	86	;'V'
   459   0010A5  00                 	db	0
   460   0010A6  00                 	db	0	; dummy byte at the end
   461   000000                     
   462                           ; #config settings
   463                           
   464                           	psect	cinit
   465   0021BE                     __pcinit:
   466                           	callstack 0
   467   0021BE                     start_initialization:
   468                           	callstack 0
   469   0021BE                     __initialization:
   470                           	callstack 0
   471                           
   472                           ; Clear objects allocated to COMRAM (5 bytes)
   473   0021BE  6A38               	clrf	(__pbssCOMRAM+4)& (0+255),c
   474   0021C0  6A37               	clrf	(__pbssCOMRAM+3)& (0+255),c
   475   0021C2  6A36               	clrf	(__pbssCOMRAM+2)& (0+255),c
   476   0021C4  6A35               	clrf	(__pbssCOMRAM+1)& (0+255),c
   477   0021C6  6A34               	clrf	__pbssCOMRAM& (0+255),c
   478   0021C8                     end_of_initialization:
   479                           	callstack 0
   480   0021C8                     __end_of__initialization:
   481                           	callstack 0
   482   0021C8  0100               	movlb	0
   483   0021CA  EF93  F010         	goto	_main	;jump to C main() function
   484                           
   485                           	psect	bssCOMRAM
   486   000034                     __pbssCOMRAM:
   487                           	callstack 0
   488   000034                     _tc:
   489                           	callstack 0
   490   000034                     	ds	3
   491   000037                     _Val_sem_rxtx:
   492                           	callstack 0
   493   000037                     	ds	1
   494   000038                     _Val_sem_cna:
   495                           	callstack 0
   496   000038                     	ds	1
   497                           
   498                           	psect	cstackCOMRAM
   499   000001                     __pcstackCOMRAM:
   500                           	callstack 0
   501   000001                     ?___awdiv:
   502                           	callstack 0
   503   000001                     ?___awmod:
   504                           	callstack 0
   505   000001                     ?___lwdiv:
   506                           	callstack 0
   507   000001                     lecture_8bit_analogique@ret:
   508                           	callstack 0
   509   000001                     write_d_aff@data:
   510                           	callstack 0
   511   000001                     write_c_aff@command:
   512                           	callstack 0
   513   000001                     check_status_ok@res:
   514                           	callstack 0
   515   000001                     delai_us_char@ucdelai:
   516                           	callstack 0
   517   000001                     tp_delai@itpd:
   518                           	callstack 0
   519   000001                     tache4@a:
   520                           	callstack 0
   521   000001                     tache5@a:
   522                           	callstack 0
   523   000001                     stid_delai_us@isdu:
   524                           	callstack 0
   525   000001                     ___awdiv@dividend:
   526                           	callstack 0
   527   000001                     ___awmod@dividend:
   528                           	callstack 0
   529   000001                     ___lwdiv@dividend:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x0
   533   000001                     	ds	1
   534   000002                     lecture_8bit_analogique@channel:
   535                           	callstack 0
   536   000002                     wait_status_ok@err:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x1
   540   000002                     	ds	1
   541   000003                     wait_status_ok@status:
   542                           	callstack 0
   543   000003                     lecture_normale@stid_id:
   544                           	callstack 0
   545   000003                     ___awdiv@divisor:
   546                           	callstack 0
   547   000003                     ___awmod@divisor:
   548                           	callstack 0
   549   000003                     ___lwdiv@divisor:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2
   553   000003                     	ds	1
   554   000004                     wait_status_ok@res:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x3
   558   000004                     	ds	1
   559   000005                     command@cmd:
   560                           	callstack 0
   561   000005                     d1command@cmd:
   562                           	callstack 0
   563   000005                     d2command@d2:
   564                           	callstack 0
   565   000005                     lecture_normale@temps_attente:
   566                           	callstack 0
   567   000005                     ___awdiv@counter:
   568                           	callstack 0
   569   000005                     ___awmod@counter:
   570                           	callstack 0
   571   000005                     ___lwdiv@quotient:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x4
   575   000005                     	ds	1
   576   000006                     d1command@d1:
   577                           	callstack 0
   578   000006                     d2command@cmd:
   579                           	callstack 0
   580   000006                     lecture_normale@n_octet:
   581                           	callstack 0
   582   000006                     ___awdiv@sign:
   583                           	callstack 0
   584   000006                     ___awmod@sign:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x5
   588   000006                     	ds	1
   589   000007                     d1command@res:
   590                           	callstack 0
   591   000007                     d2command@d1:
   592                           	callstack 0
   593   000007                     lecture_normale@n_bit:
   594                           	callstack 0
   595   000007                     ___lwdiv@counter:
   596                           	callstack 0
   597   000007                     ___awdiv@quotient:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x6
   601   000007                     	ds	1
   602   000008                     ??_tache2:
   603   000008                     d2command@res:
   604                           	callstack 0
   605   000008                     draw_char@dccar:
   606                           	callstack 0
   607   000008                     draw_hex8@octet:
   608                           	callstack 0
   609   000008                     lecture_normale@octet:
   610                           	callstack 0
   611   000008                     draw_string@tableau:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x7
   615   000008                     	ds	1
   616   000009                     tache6@n:
   617                           	callstack 0
   618   000009                     initialisation_afficheur@error_count:
   619                           	callstack 0
   620   000009                     draw_hex8@c:
   621                           	callstack 0
   622   000009                     goto_lico@colonne:
   623                           	callstack 0
   624   000009                     plot1@y:
   625                           	callstack 0
   626   000009                     clear_text@add:
   627                           	callstack 0
   628   000009                     clear_graphics@add:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x8
   632   000009                     	ds	1
   633   00000A                     ??_goto_lico:
   634   00000A                     ??_plot1:
   635   00000A                     tache2@ix:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x9
   639   00000A                     	ds	2
   640   00000C                     goto_lico@ligne:
   641                           	callstack 0
   642   00000C                     tache2@iy:
   643                           	callstack 0
   644   00000C                     plot1@add:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0xB
   648   00000C                     	ds	1
   649   00000D                     goto_lico@adr:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xC
   653   00000D                     	ds	1
   654   00000E                     tache2@hx:
   655                           	callstack 0
   656   00000E                     plot1@x:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0xD
   660   00000E                     	ds	1
   661   00000F                     tache2@lx:
   662                           	callstack 0
   663   00000F                     clear_line@line:
   664                           	callstack 0
   665   00000F                     draw_square@y1:
   666                           	callstack 0
   667   00000F                     draw_filled_square@y1:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0xE
   671   00000F                     	ds	1
   672   000010                     tache2@hy:
   673                           	callstack 0
   674   000010                     clear_line@column:
   675                           	callstack 0
   676   000010                     draw_square@x2:
   677                           	callstack 0
   678   000010                     draw_filled_square@x2:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0xF
   682   000010                     	ds	1
   683   000011                     tache2@ly:
   684                           	callstack 0
   685   000011                     draw_square@y2:
   686                           	callstack 0
   687   000011                     draw_filled_square@y2:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x10
   691   000011                     	ds	1
   692   000012                     draw_square@x1:
   693                           	callstack 0
   694   000012                     draw_filled_square@x1:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x11
   698   000012                     	ds	1
   699   000013                     draw_square@x:
   700                           	callstack 0
   701   000013                     draw_filled_square@x:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x12
   705   000013                     	ds	1
   706   000014                     draw_square@y:
   707                           	callstack 0
   708   000014                     draw_filled_square@y:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x13
   712   000014                     	ds	1
   713   000015                     tache1@i:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x14
   717   000015                     	ds	1
   718   000016                     ??_fonction_d_interruption:
   719                           
   720                           ; 1 bytes @ 0x15
   721   000016                     	ds	10
   722   000020                     initialisation_du_systeme@temp:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x1F
   726   000020                     	ds	1
   727   000021                     
   728 ;; *************** function _initialisation_du_systeme *****************
   729 ;; Defined at:
   730 ;;		line 131 in file "systeme.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  temp            1   31[COMRAM] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;Total ram usage:        1 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; Hardware stack levels required when called: 7
   751 ;; This function calls:
   752 ;;		Nothing
   753 ;; This function is called by:
   754 ;;		_main
   755 ;; This function uses a non-reentrant model
   756 ;;
   757                           
   758                           	psect	text1
   759   00141C                     __ptext1:
   760                           	callstack 0
   761   00141C                     _initialisation_du_systeme:
   762                           	callstack 23
   763                           
   764                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   765                           
   766                           ;incstack = 0
   767   00141C  0E01               	movlw	1
   768   00141E  0100               	movlb	0	; () banked
   769   001420  6F65               	movwf	101,b
   770                           
   771                           ;systeme.c: 138: queue[0]=1;
   772   001422  0E01               	movlw	1
   773   001424  6F69               	movwf	105,b
   774                           
   775                           ;systeme.c: 139: queue[1]=2;
   776   001426  0E02               	movlw	2
   777   001428  6F6A               	movwf	106,b
   778                           
   779                           ;systeme.c: 140: queue[2]=3;
   780   00142A  0E03               	movlw	3
   781   00142C  6F6B               	movwf	107,b
   782                           
   783                           ;systeme.c: 141: queue[3]=4;
   784   00142E  0E04               	movlw	4
   785   001430  6F6C               	movwf	108,b
   786                           
   787                           ;systeme.c: 142: queue[4]=5;
   788   001432  0E05               	movlw	5
   789   001434  6F6D               	movwf	109,b
   790                           
   791                           ;systeme.c: 143: queue[5]=6;
   792   001436  0E06               	movlw	6
   793   001438  6F6E               	movwf	110,b
   794                           
   795                           ;systeme.c: 145: pointeur_de_tache=6-1;
   796   00143A  0E05               	movlw	5
   797   00143C  6F70               	movwf	112,b
   798                           
   799                           ; BSR set to: 0
   800                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   801   00143E  0E69               	movlw	105
   802   001440  2570               	addwf	112,w,b
   803   001442  6ED9               	movwf	fsr2l,c
   804   001444  6ADA               	clrf	fsr2h,c
   805   001446  0E00               	movlw	0
   806   001448  22DA               	addwfc	fsr2h,f,c
   807   00144A  50DF               	movf	indf2,w,c
   808   00144C  6F6F               	movwf	111,b
   809                           
   810                           ; BSR set to: 0
   811                           ;systeme.c: 151: temp=STKPTR;
   812   00144E  CFFC F020          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   813                           
   814                           ; BSR set to: 0
   815                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   816   001452  0E02               	movlw	2
   817   001454  6EFC               	movwf	252,c	;volatile
   818                           
   819                           ; BSR set to: 0
   820   001456  0EA8               	movlw	low _tache1
   821   001458  6E2D               	movwf	_fptr^0,c
   822   00145A  0E10               	movlw	high _tache1
   823   00145C  6E2E               	movwf	(_fptr+1)^0,c
   824   00145E  0E00               	movlw	low (_tache1 shr (0+16))
   825   001460  6E2F               	movwf	(_fptr+2)^0,c
   826                           
   827                           ; BSR set to: 0
   828   001462  C02D  F032         	movff	_fptr,_val_tos
   829   001466  C02E  F033         	movff	_fptr+1,_val_tos+1
   830                           
   831                           ; BSR set to: 0
   832   00146A  0E32               	movlw	low _val_tos
   833   00146C  6E30               	movwf	_puc^0,c
   834   00146E  0E00               	movlw	high _val_tos
   835   001470  6E31               	movwf	(_puc+1)^0,c
   836                           
   837                           ; BSR set to: 0
   838   001472  C030  FFD9         	movff	_puc,fsr2l
   839   001476  C031  FFDA         	movff	_puc+1,fsr2h
   840   00147A  50DF               	movf	indf2,w,c
   841   00147C  6EFD               	movwf	253,c	;volatile
   842                           
   843                           ; BSR set to: 0
   844   00147E  4A30               	infsnz	_puc^0,f,c
   845   001480  2A31               	incf	(_puc+1)^0,f,c
   846                           
   847                           ; BSR set to: 0
   848   001482  C030  FFD9         	movff	_puc,fsr2l
   849   001486  C031  FFDA         	movff	_puc+1,fsr2h
   850   00148A  50DF               	movf	indf2,w,c
   851   00148C  6EFE               	movwf	254,c	;volatile
   852                           
   853                           ; BSR set to: 0
   854   00148E  4A30               	infsnz	_puc^0,f,c
   855   001490  2A31               	incf	(_puc+1)^0,f,c
   856                           
   857                           ; BSR set to: 0
   858   001492  C030  FFD9         	movff	_puc,fsr2l
   859   001496  C031  FFDA         	movff	_puc+1,fsr2h
   860   00149A  50DF               	movf	indf2,w,c
   861   00149C  6EFF               	movwf	255,c	;volatile
   862                           
   863                           ; BSR set to: 0
   864                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   865   00149E  0E07               	movlw	7
   866   0014A0  6EFC               	movwf	252,c	;volatile
   867   0014A2  0E54               	movlw	low _tache2
   868   0014A4  6E2D               	movwf	_fptr^0,c
   869   0014A6  0E16               	movlw	high _tache2
   870   0014A8  6E2E               	movwf	(_fptr+1)^0,c
   871   0014AA  0E00               	movlw	low (_tache2 shr (0+16))
   872   0014AC  6E2F               	movwf	(_fptr+2)^0,c
   873                           
   874                           ; BSR set to: 0
   875   0014AE  C02D  F032         	movff	_fptr,_val_tos
   876   0014B2  C02E  F033         	movff	_fptr+1,_val_tos+1
   877   0014B6  0E32               	movlw	low _val_tos
   878   0014B8  6E30               	movwf	_puc^0,c
   879   0014BA  0E00               	movlw	high _val_tos
   880   0014BC  6E31               	movwf	(_puc+1)^0,c
   881                           
   882                           ; BSR set to: 0
   883   0014BE  C030  FFD9         	movff	_puc,fsr2l
   884   0014C2  C031  FFDA         	movff	_puc+1,fsr2h
   885   0014C6  50DF               	movf	indf2,w,c
   886   0014C8  6EFD               	movwf	253,c	;volatile
   887                           
   888                           ; BSR set to: 0
   889   0014CA  4A30               	infsnz	_puc^0,f,c
   890   0014CC  2A31               	incf	(_puc+1)^0,f,c
   891                           
   892                           ; BSR set to: 0
   893   0014CE  C030  FFD9         	movff	_puc,fsr2l
   894   0014D2  C031  FFDA         	movff	_puc+1,fsr2h
   895   0014D6  50DF               	movf	indf2,w,c
   896   0014D8  6EFE               	movwf	254,c	;volatile
   897                           
   898                           ; BSR set to: 0
   899   0014DA  4A30               	infsnz	_puc^0,f,c
   900   0014DC  2A31               	incf	(_puc+1)^0,f,c
   901                           
   902                           ; BSR set to: 0
   903   0014DE  C030  FFD9         	movff	_puc,fsr2l
   904   0014E2  C031  FFDA         	movff	_puc+1,fsr2h
   905   0014E6  50DF               	movf	indf2,w,c
   906   0014E8  6EFF               	movwf	255,c	;volatile
   907                           
   908                           ; BSR set to: 0
   909                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   910   0014EA  0E0C               	movlw	12
   911   0014EC  6EFC               	movwf	252,c	;volatile
   912                           
   913                           ; BSR set to: 0
   914   0014EE  0E18               	movlw	low _tache3
   915   0014F0  6E2D               	movwf	_fptr^0,c
   916   0014F2  0E1B               	movlw	high _tache3
   917   0014F4  6E2E               	movwf	(_fptr+1)^0,c
   918   0014F6  0E00               	movlw	low (_tache3 shr (0+16))
   919   0014F8  6E2F               	movwf	(_fptr+2)^0,c
   920                           
   921                           ; BSR set to: 0
   922   0014FA  C02D  F032         	movff	_fptr,_val_tos
   923   0014FE  C02E  F033         	movff	_fptr+1,_val_tos+1
   924                           
   925                           ; BSR set to: 0
   926   001502  0E32               	movlw	low _val_tos
   927   001504  6E30               	movwf	_puc^0,c
   928   001506  0E00               	movlw	high _val_tos
   929   001508  6E31               	movwf	(_puc+1)^0,c
   930                           
   931                           ; BSR set to: 0
   932   00150A  C030  FFD9         	movff	_puc,fsr2l
   933   00150E  C031  FFDA         	movff	_puc+1,fsr2h
   934   001512  50DF               	movf	indf2,w,c
   935   001514  6EFD               	movwf	253,c	;volatile
   936                           
   937                           ; BSR set to: 0
   938   001516  4A30               	infsnz	_puc^0,f,c
   939   001518  2A31               	incf	(_puc+1)^0,f,c
   940                           
   941                           ; BSR set to: 0
   942   00151A  C030  FFD9         	movff	_puc,fsr2l
   943   00151E  C031  FFDA         	movff	_puc+1,fsr2h
   944   001522  50DF               	movf	indf2,w,c
   945   001524  6EFE               	movwf	254,c	;volatile
   946                           
   947                           ; BSR set to: 0
   948   001526  4A30               	infsnz	_puc^0,f,c
   949   001528  2A31               	incf	(_puc+1)^0,f,c
   950                           
   951                           ; BSR set to: 0
   952   00152A  C030  FFD9         	movff	_puc,fsr2l
   953   00152E  C031  FFDA         	movff	_puc+1,fsr2h
   954   001532  50DF               	movf	indf2,w,c
   955   001534  6EFF               	movwf	255,c	;volatile
   956                           
   957                           ; BSR set to: 0
   958                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   959   001536  0E11               	movlw	17
   960   001538  6EFC               	movwf	252,c	;volatile
   961   00153A  0E2E               	movlw	low _tache4
   962   00153C  6E2D               	movwf	_fptr^0,c
   963   00153E  0E18               	movlw	high _tache4
   964   001540  6E2E               	movwf	(_fptr+1)^0,c
   965   001542  0E00               	movlw	low (_tache4 shr (0+16))
   966   001544  6E2F               	movwf	(_fptr+2)^0,c
   967                           
   968                           ; BSR set to: 0
   969   001546  C02D  F032         	movff	_fptr,_val_tos
   970   00154A  C02E  F033         	movff	_fptr+1,_val_tos+1
   971   00154E  0E32               	movlw	low _val_tos
   972   001550  6E30               	movwf	_puc^0,c
   973   001552  0E00               	movlw	high _val_tos
   974   001554  6E31               	movwf	(_puc+1)^0,c
   975                           
   976                           ; BSR set to: 0
   977   001556  C030  FFD9         	movff	_puc,fsr2l
   978   00155A  C031  FFDA         	movff	_puc+1,fsr2h
   979   00155E  50DF               	movf	indf2,w,c
   980   001560  6EFD               	movwf	253,c	;volatile
   981                           
   982                           ; BSR set to: 0
   983   001562  4A30               	infsnz	_puc^0,f,c
   984   001564  2A31               	incf	(_puc+1)^0,f,c
   985                           
   986                           ; BSR set to: 0
   987   001566  C030  FFD9         	movff	_puc,fsr2l
   988   00156A  C031  FFDA         	movff	_puc+1,fsr2h
   989   00156E  50DF               	movf	indf2,w,c
   990   001570  6EFE               	movwf	254,c	;volatile
   991                           
   992                           ; BSR set to: 0
   993   001572  4A30               	infsnz	_puc^0,f,c
   994   001574  2A31               	incf	(_puc+1)^0,f,c
   995                           
   996                           ; BSR set to: 0
   997   001576  C030  FFD9         	movff	_puc,fsr2l
   998   00157A  C031  FFDA         	movff	_puc+1,fsr2h
   999   00157E  50DF               	movf	indf2,w,c
  1000   001580  6EFF               	movwf	255,c	;volatile
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1004   001582  0E16               	movlw	22
  1005   001584  6EFC               	movwf	252,c	;volatile
  1006                           
  1007                           ; BSR set to: 0
  1008   001586  0E48               	movlw	low _tache5
  1009   001588  6E2D               	movwf	_fptr^0,c
  1010   00158A  0E17               	movlw	high _tache5
  1011   00158C  6E2E               	movwf	(_fptr+1)^0,c
  1012   00158E  0E00               	movlw	low (_tache5 shr (0+16))
  1013   001590  6E2F               	movwf	(_fptr+2)^0,c
  1014                           
  1015                           ; BSR set to: 0
  1016   001592  C02D  F032         	movff	_fptr,_val_tos
  1017   001596  C02E  F033         	movff	_fptr+1,_val_tos+1
  1018                           
  1019                           ; BSR set to: 0
  1020   00159A  0E32               	movlw	low _val_tos
  1021   00159C  6E30               	movwf	_puc^0,c
  1022   00159E  0E00               	movlw	high _val_tos
  1023   0015A0  6E31               	movwf	(_puc+1)^0,c
  1024                           
  1025                           ; BSR set to: 0
  1026   0015A2  C030  FFD9         	movff	_puc,fsr2l
  1027   0015A6  C031  FFDA         	movff	_puc+1,fsr2h
  1028   0015AA  50DF               	movf	indf2,w,c
  1029   0015AC  6EFD               	movwf	253,c	;volatile
  1030                           
  1031                           ; BSR set to: 0
  1032   0015AE  4A30               	infsnz	_puc^0,f,c
  1033   0015B0  2A31               	incf	(_puc+1)^0,f,c
  1034                           
  1035                           ; BSR set to: 0
  1036   0015B2  C030  FFD9         	movff	_puc,fsr2l
  1037   0015B6  C031  FFDA         	movff	_puc+1,fsr2h
  1038   0015BA  50DF               	movf	indf2,w,c
  1039   0015BC  6EFE               	movwf	254,c	;volatile
  1040                           
  1041                           ; BSR set to: 0
  1042   0015BE  4A30               	infsnz	_puc^0,f,c
  1043   0015C0  2A31               	incf	(_puc+1)^0,f,c
  1044                           
  1045                           ; BSR set to: 0
  1046   0015C2  C030  FFD9         	movff	_puc,fsr2l
  1047   0015C6  C031  FFDA         	movff	_puc+1,fsr2h
  1048   0015CA  50DF               	movf	indf2,w,c
  1049   0015CC  6EFF               	movwf	255,c	;volatile
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1053   0015CE  0E1B               	movlw	27
  1054   0015D0  6EFC               	movwf	252,c	;volatile
  1055   0015D2  0E78               	movlw	low _tache6
  1056   0015D4  6E2D               	movwf	_fptr^0,c
  1057   0015D6  0E20               	movlw	high _tache6
  1058   0015D8  6E2E               	movwf	(_fptr+1)^0,c
  1059   0015DA  0E00               	movlw	low (_tache6 shr (0+16))
  1060   0015DC  6E2F               	movwf	(_fptr+2)^0,c
  1061                           
  1062                           ; BSR set to: 0
  1063   0015DE  C02D  F032         	movff	_fptr,_val_tos
  1064   0015E2  C02E  F033         	movff	_fptr+1,_val_tos+1
  1065   0015E6  0E32               	movlw	low _val_tos
  1066   0015E8  6E30               	movwf	_puc^0,c
  1067   0015EA  0E00               	movlw	high _val_tos
  1068   0015EC  6E31               	movwf	(_puc+1)^0,c
  1069                           
  1070                           ; BSR set to: 0
  1071   0015EE  C030  FFD9         	movff	_puc,fsr2l
  1072   0015F2  C031  FFDA         	movff	_puc+1,fsr2h
  1073   0015F6  50DF               	movf	indf2,w,c
  1074   0015F8  6EFD               	movwf	253,c	;volatile
  1075                           
  1076                           ; BSR set to: 0
  1077   0015FA  4A30               	infsnz	_puc^0,f,c
  1078   0015FC  2A31               	incf	(_puc+1)^0,f,c
  1079                           
  1080                           ; BSR set to: 0
  1081   0015FE  C030  FFD9         	movff	_puc,fsr2l
  1082   001602  C031  FFDA         	movff	_puc+1,fsr2h
  1083   001606  50DF               	movf	indf2,w,c
  1084   001608  6EFE               	movwf	254,c	;volatile
  1085                           
  1086                           ; BSR set to: 0
  1087   00160A  4A30               	infsnz	_puc^0,f,c
  1088   00160C  2A31               	incf	(_puc+1)^0,f,c
  1089                           
  1090                           ; BSR set to: 0
  1091   00160E  C030  FFD9         	movff	_puc,fsr2l
  1092   001612  C031  FFDA         	movff	_puc+1,fsr2h
  1093   001616  50DF               	movf	indf2,w,c
  1094   001618  6EFF               	movwf	255,c	;volatile
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;systeme.c: 162: STKPTR=temp;
  1098   00161A  C020  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;systeme.c: 165: STKPTR_T1=2;
  1102   00161E  0E02               	movlw	2
  1103   001620  0101               	movlb	1	; () banked
  1104   001622  6F03               	movwf	3,b
  1105                           
  1106                           ; BSR set to: 1
  1107                           ;systeme.c: 166: STKPTR_T2=7;
  1108   001624  0E07               	movlw	7
  1109   001626  0102               	movlb	2	; () banked
  1110   001628  6F03               	movwf	3,b
  1111                           
  1112                           ; BSR set to: 2
  1113                           ;systeme.c: 167: STKPTR_T3=12;
  1114   00162A  0E0C               	movlw	12
  1115   00162C  0103               	movlb	3	; () banked
  1116   00162E  6F03               	movwf	3,b
  1117                           
  1118                           ; BSR set to: 3
  1119                           ;systeme.c: 168: STKPTR_T4=17;
  1120   001630  0E11               	movlw	17
  1121   001632  0104               	movlb	4	; () banked
  1122   001634  6F03               	movwf	3,b
  1123                           
  1124                           ; BSR set to: 4
  1125                           ;systeme.c: 169: STKPTR_T5=22;
  1126   001636  0E16               	movlw	22
  1127   001638  0105               	movlb	5	; () banked
  1128   00163A  6F03               	movwf	3,b
  1129                           
  1130                           ; BSR set to: 5
  1131                           ;systeme.c: 170: STKPTR_T6=27;
  1132   00163C  0E1B               	movlw	27
  1133   00163E  0106               	movlb	6	; () banked
  1134   001640  6F03               	movwf	3,b
  1135                           
  1136                           ; BSR set to: 6
  1137                           ;systeme.c: 173: Tick_Count=0;
  1138   001642  0E00               	movlw	0
  1139   001644  0100               	movlb	0	; () banked
  1140   001646  6F72               	movwf	114,b
  1141   001648  0E00               	movlw	0
  1142   00164A  6F71               	movwf	113,b
  1143                           
  1144                           ; BSR set to: 0
  1145                           ;systeme.c: 175: T0CON=0x01;
  1146   00164C  0E01               	movlw	1
  1147   00164E  6ED5               	movwf	213,c	;volatile
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;systeme.c: 176: T0IE=1;
  1151   001650  8AF2               	bsf	4082,5,c	;volatile
  1152                           
  1153                           ; BSR set to: 0
  1154   001652  0012               	return		;funcret
  1155   001654                     __end_of_initialisation_du_systeme:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _initialisation_des_ports *****************
  1159 ;; Defined at:
  1160 ;;		line 23 in file "main.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used: 1
  1180 ;; Hardware stack levels required when called: 7
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text2
  1189   001F1E                     __ptext2:
  1190                           	callstack 0
  1191   001F1E                     _initialisation_des_ports:
  1192                           	callstack 23
  1193                           
  1194                           ;main.c: 26: MEMCON=0xA0;
  1195                           
  1196                           ; BSR set to: 0
  1197                           ;incstack = 0
  1198   001F1E  0EA0               	movlw	160
  1199   001F20  010F               	movlb	15	; () banked
  1200   001F22  6F26               	movwf	38,b	;volatile
  1201                           
  1202                           ;main.c: 29: ANCON0=0x00;
  1203   001F24  0E00               	movlw	0
  1204   001F26  6F25               	movwf	37,b	;volatile
  1205                           
  1206                           ;main.c: 30: ANCON1=0x00;
  1207   001F28  0E00               	movlw	0
  1208   001F2A  6F24               	movwf	36,b	;volatile
  1209                           
  1210                           ;main.c: 31: ANCON2=0x00;
  1211   001F2C  0E00               	movlw	0
  1212   001F2E  6F23               	movwf	35,b	;volatile
  1213                           
  1214                           ; BSR set to: 15
  1215                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1216   001F30  8125               	bsf	37,0,b	;volatile
  1217                           
  1218                           ; BSR set to: 15
  1219                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1220   001F32  8325               	bsf	37,1,b	;volatile
  1221                           
  1222                           ; BSR set to: 15
  1223                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1224   001F34  8525               	bsf	37,2,b	;volatile
  1225                           
  1226                           ; BSR set to: 15
  1227                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1228   001F36  8725               	bsf	37,3,b	;volatile
  1229                           
  1230                           ; BSR set to: 15
  1231                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1232   001F38  8524               	bsf	36,2,b	;volatile
  1233                           
  1234                           ; BSR set to: 15
  1235                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1236   001F3A  8724               	bsf	36,3,b	;volatile
  1237                           
  1238                           ; BSR set to: 15
  1239                           ;main.c: 41: LATCbits.LATC2=1;
  1240   001F3C  848B               	bsf	139,2,c	;volatile
  1241                           
  1242                           ; BSR set to: 15
  1243                           ;main.c: 42: LATCbits.LATC1=1;
  1244   001F3E  828B               	bsf	139,1,c	;volatile
  1245                           
  1246                           ; BSR set to: 15
  1247                           ;main.c: 43: LATGbits.LATG0=1;
  1248   001F40  808F               	bsf	143,0,c	;volatile
  1249                           
  1250                           ; BSR set to: 15
  1251                           ;main.c: 46: TRISCbits.TRISC2=0;
  1252   001F42  9494               	bcf	148,2,c	;volatile
  1253                           
  1254                           ; BSR set to: 15
  1255                           ;main.c: 47: TRISCbits.TRISC1=0;
  1256   001F44  9294               	bcf	148,1,c	;volatile
  1257                           
  1258                           ; BSR set to: 15
  1259                           ;main.c: 48: TRISGbits.TRISG0=0;
  1260   001F46  9098               	bcf	152,0,c	;volatile
  1261                           
  1262                           ; BSR set to: 15
  1263                           ;main.c: 49: TRISGbits.TRISG3=0;
  1264   001F48  9698               	bcf	152,3,c	;volatile
  1265                           
  1266                           ; BSR set to: 15
  1267                           ;main.c: 50: TRISGbits.TRISG4=0;
  1268   001F4A  9898               	bcf	152,4,c	;volatile
  1269                           
  1270                           ; BSR set to: 15
  1271                           ;main.c: 51: TRISDbits.TRISD2=0;
  1272   001F4C  9495               	bcf	149,2,c	;volatile
  1273                           
  1274                           ; BSR set to: 15
  1275                           ;main.c: 52: TRISDbits.TRISD3=0;
  1276   001F4E  9695               	bcf	149,3,c	;volatile
  1277                           
  1278                           ; BSR set to: 15
  1279                           ;main.c: 55: INTCON2bits.RBPU=0;
  1280   001F50  9EF1               	bcf	241,7,c	;volatile
  1281                           
  1282                           ; BSR set to: 15
  1283                           ;main.c: 56: PADCFG1bits.REPU=1;
  1284   001F52  8D53               	bsf	83,6,b	;volatile
  1285                           
  1286                           ; BSR set to: 15
  1287   001F54  0012               	return		;funcret
  1288   001F56                     __end_of_initialisation_des_ports:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _Init *****************
  1292 ;; Defined at:
  1293 ;;		line 4 in file "semaphore.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  sem             1  [STACK] unsigned char 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1  [STACK] void 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 7
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;;		_tache1
  1319 ;; This function uses a reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text3
  1323   0020A0                     __ptext3:
  1324                           	callstack 0
  1325   0020A0                     _Init:
  1326                           	callstack 20
  1327                           
  1328                           ;semaphore.c: 6: switch (sem)
  1329                           
  1330                           ; BSR set to: 15
  1331                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1332                           ;incstack = 0
  1333   0020A0  D006               	goto	l2665
  1334   0020A2                     l2661:
  1335                           
  1336                           ;semaphore.c: 9: Val_sem_cna=1;
  1337   0020A2  0E01               	movlw	1
  1338   0020A4  6E38               	movwf	_Val_sem_cna^0,c
  1339                           
  1340                           ;semaphore.c: 10: break;
  1341   0020A6  D00B               	goto	l1433
  1342   0020A8                     l2663:
  1343                           
  1344                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1345   0020A8  0E01               	movlw	1
  1346   0020AA  6E37               	movwf	_Val_sem_rxtx^0,c
  1347                           
  1348                           ;semaphore.c: 13: break;
  1349   0020AC  D008               	goto	l1433
  1350   0020AE                     l2665:
  1351                           
  1352                           ;stkvar	Init@sem @ sp[(0)+-1]
  1353   0020AE  0EFF               	movlw	-1
  1354   0020B0  50E3               	movf	plusw1,w,c
  1355                           
  1356                           ; Switch size 1, requested type "simple"
  1357                           ; Number of cases is 2, Range of values is 1 to 2
  1358                           ; switch strategies available:
  1359                           ; Name         Instructions Cycles
  1360                           ; simple_byte            7     4 (average)
  1361                           ;	Chosen strategy is simple_byte
  1362   0020B2  0A01               	xorlw	1	; case 1
  1363   0020B4  B4D8               	btfsc	status,2,c
  1364   0020B6  D7F5               	goto	l2661
  1365   0020B8  0A03               	xorlw	3	; case 2
  1366   0020BA  B4D8               	btfsc	status,2,c
  1367   0020BC  D7F5               	goto	l2663
  1368   0020BE                     l1433:
  1369                           
  1370                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1371   0020BE  52E5               	movf	postdec1,f,c
  1372   0020C0  0012               	return		;funcret
  1373   0020C2                     __end_of_Init:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function _fonction_d_interruption *****************
  1377 ;; Defined at:
  1378 ;;		line 17 in file "systeme.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;		None
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  1    wreg      void 
  1385 ;; Registers used:
  1386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1395 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;Total ram usage:       10 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; Hardware stack levels required when called: 6
  1399 ;; This function calls:
  1400 ;;		_tache1
  1401 ;;		_tache2
  1402 ;;		_tache3
  1403 ;;		_tache4
  1404 ;;		_tache5
  1405 ;;		_tache6
  1406 ;; This function is called by:
  1407 ;;		Interrupt level 2
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	intcode
  1412   000008                     __pintcode:
  1413                           	callstack 0
  1414   000008                     _fonction_d_interruption:
  1415                           	callstack 23
  1416                           
  1417                           ;incstack = 0
  1418   000008  CFE1 F016          	movff	fsr1l,??_fonction_d_interruption
  1419   00000C  CFE2 F017          	movff	fsr1h,??_fonction_d_interruption+1
  1420   000010  CFD9 F018          	movff	fsr2l,??_fonction_d_interruption+2
  1421   000014  CFDA F019          	movff	fsr2h,??_fonction_d_interruption+3
  1422   000018  CFF3 F01A          	movff	prodl,??_fonction_d_interruption+4
  1423   00001C  CFF4 F01B          	movff	prodh,??_fonction_d_interruption+5
  1424   000020  CFF6 F01C          	movff	tblptrl,??_fonction_d_interruption+6
  1425   000024  CFF7 F01D          	movff	tblptrh,??_fonction_d_interruption+7
  1426   000028  CFF8 F01E          	movff	tblptru,??_fonction_d_interruption+8
  1427   00002C  CFF5 F01F          	movff	tablat,??_fonction_d_interruption+9
  1428   000030  EE1A  F0AC         	lfsr	1,___inthi_sp
  1429                           
  1430                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1431   000034  CFD8 F061          	movff	status,97	;volatile
  1432   000038  0100               	movlb	0	; () banked
  1433   00003A  6F60               	movwf	96,b
  1434                           
  1435                           ; BSR set to: 0
  1436   00003C  CFE0 F062          	movff	bsr,98	;volatile
  1437                           
  1438                           ; BSR set to: 0
  1439                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1440   000040  CFEA F063          	movff	fsr0h,99	;volatile
  1441                           
  1442                           ; BSR set to: 0
  1443   000044  CFE9 F064          	movff	fsr0l,100	;volatile
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;systeme.c: 24: if(T0IE && T0IF)
  1447   000048  BAF2               	btfsc	4082,5,c	;volatile
  1448                           
  1449                           ; BSR set to: 0
  1450   00004A  A4F2               	btfss	4082,2,c	;volatile
  1451   00004C  D143               	goto	i2l5025
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1455   00004E  0565               	decf	101,w,b
  1456   000050  A4D8               	btfss	status,2,c
  1457   000052  D004               	goto	i2l4725
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1461   000054  0E1B               	movlw	27
  1462   000056  6EFC               	movwf	252,c	;volatile
  1463                           
  1464                           ;systeme.c: 29: DEMARRAGE=0;
  1465   000058  0E00               	movlw	0
  1466   00005A  6F65               	movwf	101,b
  1467   00005C                     i2l4725:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1471   00005C  C06F FFEA          	movff	111,fsr0h	;volatile
  1472                           
  1473                           ;systeme.c: 35: FSR0L=0;
  1474   000060  0E00               	movlw	0
  1475   000062  6EE9               	movwf	233,c	;volatile
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1479   000064  C060 FFEE          	movff	96,postinc0	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482   000068  C061 FFEE          	movff	97,postinc0	;volatile
  1483                           
  1484                           ; BSR set to: 0
  1485   00006C  C062 FFEE          	movff	98,postinc0	;volatile
  1486                           
  1487                           ; BSR set to: 0
  1488   000070  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1492   000074  C063 FFEE          	movff	99,postinc0	;volatile
  1493                           
  1494                           ; BSR set to: 0
  1495   000078  C064 FFEE          	movff	100,postinc0	;volatile
  1496                           
  1497                           ; BSR set to: 0
  1498   00007C  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1499                           
  1500                           ; BSR set to: 0
  1501   000080  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1505   000084  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1506                           
  1507                           ; BSR set to: 0
  1508   000088  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1509                           
  1510                           ; BSR set to: 0
  1511   00008C  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1512                           
  1513                           ; BSR set to: 0
  1514   000090  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1518   000094  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1519                           
  1520                           ; BSR set to: 0
  1521   000098  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1522                           
  1523                           ; BSR set to: 0
  1524   00009C  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1525                           
  1526                           ; BSR set to: 0
  1527   0000A0  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1531   0000A4  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1532                           
  1533                           ; BSR set to: 0
  1534   0000A8  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1535                           
  1536                           ;systeme.c: 44: FSR1H=0;
  1537   0000AC  0E00               	movlw	0
  1538   0000AE  6EE2               	movwf	226,c	;volatile
  1539                           
  1540                           ;systeme.c: 45: FSR1L=0;
  1541   0000B0  0E00               	movlw	0
  1542   0000B2  6EE1               	movwf	225,c	;volatile
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1546   0000B4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549   0000B8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1550                           
  1551                           ; BSR set to: 0
  1552   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1553                           
  1554                           ; BSR set to: 0
  1555   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1556                           
  1557                           ; BSR set to: 0
  1558                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1559   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1560                           
  1561                           ; BSR set to: 0
  1562   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1563                           
  1564                           ; BSR set to: 0
  1565   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1566                           
  1567                           ; BSR set to: 0
  1568   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1572   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1573                           
  1574                           ; BSR set to: 0
  1575   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1576                           
  1577                           ; BSR set to: 0
  1578   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1579                           
  1580                           ; BSR set to: 0
  1581   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1582                           
  1583                           ; BSR set to: 0
  1584                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1585   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1586                           
  1587                           ; BSR set to: 0
  1588   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1589                           
  1590                           ; BSR set to: 0
  1591   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1592                           
  1593                           ; BSR set to: 0
  1594   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1598   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1599                           
  1600                           ; BSR set to: 0
  1601   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1602                           
  1603                           ; BSR set to: 0
  1604   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1605                           
  1606                           ; BSR set to: 0
  1607   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1611   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1612                           
  1613                           ; BSR set to: 0
  1614   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1615                           
  1616                           ; BSR set to: 0
  1617   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1624   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1625                           
  1626                           ; BSR set to: 0
  1627   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1628                           
  1629                           ; BSR set to: 0
  1630   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1637   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1638                           
  1639                           ; BSR set to: 0
  1640   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1641                           
  1642                           ; BSR set to: 0
  1643   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1644                           
  1645                           ; BSR set to: 0
  1646   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1647                           
  1648                           ; BSR set to: 0
  1649                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1650   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1651                           
  1652                           ; BSR set to: 0
  1653   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1654                           
  1655                           ; BSR set to: 0
  1656   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1663   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1664                           
  1665                           ; BSR set to: 0
  1666   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1676   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1677                           
  1678                           ; BSR set to: 0
  1679   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1689   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1690                           
  1691                           ; BSR set to: 0
  1692   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1693                           
  1694                           ; BSR set to: 0
  1695   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1699                           
  1700                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1701   000174  0E8A               	movlw	138
  1702   000176  6ED7               	movwf	215,c	;volatile
  1703   000178  0ECF               	movlw	207
  1704   00017A  6ED6               	movwf	214,c	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;systeme.c: 63: T0IF=0;
  1708   00017C  94F2               	bcf	4082,2,c	;volatile
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;systeme.c: 65: Tick_Count++;
  1712   00017E  4B71               	infsnz	113,f,b
  1713   000180  2B72               	incf	114,f,b
  1714                           
  1715                           ; BSR set to: 0
  1716                           ;systeme.c: 67: pointeur_de_tache++;
  1717   000182  2B70               	incf	112,f,b
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1721   000184  0E06               	movlw	6
  1722   000186  1970               	xorwf	112,w,b
  1723   000188  A4D8               	btfss	status,2,c
  1724   00018A  D002               	goto	i2l4869
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;systeme.c: 69: pointeur_de_tache=0;
  1728   00018C  0E00               	movlw	0
  1729   00018E  6F70               	movwf	112,b
  1730   000190                     i2l4869:
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1734   000190  0E69               	movlw	105
  1735   000192  2570               	addwf	112,w,b
  1736   000194  6ED9               	movwf	fsr2l,c
  1737   000196  6ADA               	clrf	fsr2h,c
  1738   000198  0E00               	movlw	0
  1739   00019A  22DA               	addwfc	fsr2h,f,c
  1740   00019C  50DF               	movf	indf2,w,c
  1741   00019E  6F6F               	movwf	111,b
  1742                           
  1743                           ; BSR set to: 0
  1744                           ;systeme.c: 75: FSR1H=0;
  1745   0001A0  0E00               	movlw	0
  1746   0001A2  6EE2               	movwf	226,c	;volatile
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;systeme.c: 76: FSR1L=0;
  1750   0001A4  0E00               	movlw	0
  1751   0001A6  6EE1               	movwf	225,c	;volatile
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;systeme.c: 77: FSR0H=tache_active;
  1755   0001A8  C06F FFEA          	movff	111,fsr0h	;volatile
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;systeme.c: 78: FSR0L=18;
  1759   0001AC  0E12               	movlw	18
  1760   0001AE  6EE9               	movwf	233,c	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1764   0001B0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1765                           
  1766                           ; BSR set to: 0
  1767   0001B4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1768                           
  1769                           ; BSR set to: 0
  1770   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1771                           
  1772                           ; BSR set to: 0
  1773   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1777   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1778                           
  1779                           ; BSR set to: 0
  1780   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1781                           
  1782                           ; BSR set to: 0
  1783   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1784                           
  1785                           ; BSR set to: 0
  1786   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1790   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1791                           
  1792                           ; BSR set to: 0
  1793   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1794                           
  1795                           ; BSR set to: 0
  1796   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1803   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1804                           
  1805                           ; BSR set to: 0
  1806   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1807                           
  1808                           ; BSR set to: 0
  1809   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1810                           
  1811                           ; BSR set to: 0
  1812   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1816   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1817                           
  1818                           ; BSR set to: 0
  1819   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1820                           
  1821                           ; BSR set to: 0
  1822   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1829   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1830                           
  1831                           ; BSR set to: 0
  1832   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1836                           
  1837                           ; BSR set to: 0
  1838   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1842   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1843                           
  1844                           ; BSR set to: 0
  1845   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1846                           
  1847                           ; BSR set to: 0
  1848   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1849                           
  1850                           ; BSR set to: 0
  1851   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1855   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1856                           
  1857                           ; BSR set to: 0
  1858   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1859                           
  1860                           ; BSR set to: 0
  1861   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1862                           
  1863                           ; BSR set to: 0
  1864   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1868   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1869                           
  1870                           ; BSR set to: 0
  1871   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1872                           
  1873                           ; BSR set to: 0
  1874   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1881   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1882                           
  1883                           ; BSR set to: 0
  1884   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1885                           
  1886                           ; BSR set to: 0
  1887   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1888                           
  1889                           ; BSR set to: 0
  1890   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1894   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1895                           
  1896                           ; BSR set to: 0
  1897   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1898                           
  1899                           ; BSR set to: 0
  1900   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1901                           
  1902                           ; BSR set to: 0
  1903   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1907   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1908                           
  1909                           ; BSR set to: 0
  1910   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1911                           
  1912                           ; BSR set to: 0
  1913   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1914                           
  1915                           ; BSR set to: 0
  1916   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;systeme.c: 96: FSR0H=tache_active;
  1920   000270  C06F FFEA          	movff	111,fsr0h	;volatile
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;systeme.c: 97: FSR0L=0;
  1924   000274  0E00               	movlw	0
  1925   000276  6EE9               	movwf	233,c	;volatile
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1929   000278  CFEE F060          	movff	postinc0,96	;volatile
  1930                           
  1931                           ; BSR set to: 0
  1932   00027C  CFEE F061          	movff	postinc0,97	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935   000280  CFEE F062          	movff	postinc0,98	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938   000284  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  1942   000288  CFEE F063          	movff	postinc0,99	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945   00028C  CFEE F064          	movff	postinc0,100	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948   000290  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  1949                           
  1950                           ; BSR set to: 0
  1951   000294  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  1955   000298  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  1956                           
  1957                           ; BSR set to: 0
  1958   00029C  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  1959                           
  1960                           ; BSR set to: 0
  1961   0002A0  CFEE FFF4          	movff	postinc0,prodh	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964   0002A4  CFEE FFF3          	movff	postinc0,prodl	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  1968   0002A8  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  1969                           
  1970                           ; BSR set to: 0
  1971   0002AC  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  1972                           
  1973                           ; BSR set to: 0
  1974   0002B0  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  1975                           
  1976                           ; BSR set to: 0
  1977   0002B4  CFEE FFF5          	movff	postinc0,tablat	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  1981   0002B8  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984   0002BC  CFEE FFFA          	movff	postinc0,pclath	;volatile
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  1988   0002C0  C064 FFE9          	movff	100,fsr0l	;volatile
  1989                           
  1990                           ; BSR set to: 0
  1991   0002C4  C063 FFEA          	movff	99,fsr0h	;volatile
  1992                           
  1993                           ; BSR set to: 0
  1994   0002C8  C062 FFE0          	movff	98,bsr	;volatile
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  1998   0002CC  5160               	movf	96,w,b
  1999                           
  2000                           ; BSR set to: 0
  2001   0002CE  C061 FFD8          	movff	97,status	;volatile
  2002   0002D2  0010               	retfie		;# 
  2003   0002D4                     i2l5025:
  2004                           
  2005                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2006   0002D4  C064 FFE9          	movff	100,fsr0l	;volatile
  2007   0002D8  C063 FFEA          	movff	99,fsr0h	;volatile
  2008   0002DC  C062 FFE0          	movff	98,bsr	;volatile
  2009                           
  2010                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2011   0002E0  0100               	movlb	0	; () banked
  2012   0002E2  5160               	movf	96,w,b
  2013                           
  2014                           ; BSR set to: 0
  2015   0002E4  C061 FFD8          	movff	97,status	;volatile
  2016   0002E8  0010               	retfie		;# 
  2017                           
  2018                           ;systeme.c: 123: tache1();
  2019   0002EA  EC54  F008         	call	_tache1	;wreg free
  2020                           
  2021                           ;systeme.c: 124: tache2();
  2022   0002EE  EC2A  F00B         	call	_tache2	;wreg free
  2023                           
  2024                           ;systeme.c: 125: tache3();
  2025   0002F2  EC8C  F00D         	call	_tache3	;wreg free
  2026                           
  2027                           ;systeme.c: 126: tache4();
  2028   0002F6  EC17  F00C         	call	_tache4	;wreg free
  2029                           
  2030                           ;systeme.c: 127: tache5();
  2031   0002FA  ECA4  F00B         	call	_tache5	;wreg free
  2032                           
  2033                           ;systeme.c: 128: tache6();
  2034   0002FE  EC3C  F010         	call	_tache6	;wreg free
  2035   000302  C01F  FFF5         	movff	??_fonction_d_interruption+9,tablat
  2036   000306  C01E  FFF8         	movff	??_fonction_d_interruption+8,tblptru
  2037   00030A  C01D  FFF7         	movff	??_fonction_d_interruption+7,tblptrh
  2038   00030E  C01C  FFF6         	movff	??_fonction_d_interruption+6,tblptrl
  2039   000312  C01B  FFF4         	movff	??_fonction_d_interruption+5,prodh
  2040   000316  C01A  FFF3         	movff	??_fonction_d_interruption+4,prodl
  2041   00031A  C019  FFDA         	movff	??_fonction_d_interruption+3,fsr2h
  2042   00031E  C018  FFD9         	movff	??_fonction_d_interruption+2,fsr2l
  2043   000322  C017  FFE2         	movff	??_fonction_d_interruption+1,fsr1h
  2044   000326  C016  FFE1         	movff	??_fonction_d_interruption,fsr1l
  2045   00032A  0011               	retfie		f
  2046   00032C                     __end_of_fonction_d_interruption:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _tache6 *****************
  2050 ;; Defined at:
  2051 ;;		line 3 in file "T6.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  n               1    8[COMRAM] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;Total ram usage:        1 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 2
  2072 ;; This function calls:
  2073 ;;		_lecture_normale
  2074 ;; This function is called by:
  2075 ;;		_fonction_d_interruption
  2076 ;;		_initialisation_du_systeme
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text5
  2081   002078                     __ptext5:
  2082                           	callstack 0
  2083   002078                     _tache6:
  2084                           	callstack 26
  2085                           
  2086                           ;T6.c: 7: {;T6.c: 8: n=lecture_normale(badge);
  2087                           
  2088                           ;incstack = 0
  2089                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2090   002078  0E75               	movlw	117
  2091   00207A  6E03               	movwf	lecture_normale@stid_id^0,c
  2092   00207C  0E00               	movlw	0
  2093   00207E  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2094   002080  EC3B  F00D         	call	_lecture_normale	;wreg free
  2095   002084  6E09               	movwf	tache6@n^0,c
  2096                           
  2097                           ;T6.c: 9: if (n>0)
  2098   002086  5009               	movf	tache6@n^0,w,c
  2099   002088  B4D8               	btfsc	status,2,c
  2100   00208A  D006               	goto	i2l4689
  2101                           
  2102                           ;T6.c: 10: {;T6.c: 11: if(n<10)
  2103   00208C  0E0A               	movlw	10
  2104   00208E  6009               	cpfslt	tache6@n^0,c
  2105   002090  D003               	goto	i2l4689
  2106                           
  2107                           ;T6.c: 12: {;T6.c: 13: n_octet_badge=n;
  2108   002092  C009  F07F         	movff	tache6@n,127
  2109                           
  2110                           ;T6.c: 14: }
  2111   002096  D7F0               	goto	__ptext5
  2112   002098                     i2l4689:
  2113                           
  2114                           ;T6.c: 15: else;T6.c: 16: {;T6.c: 17: n_octet_badge=0;
  2115   002098  0E00               	movlw	0
  2116   00209A  0100               	movlb	0	; () banked
  2117   00209C  6F7F               	movwf	127,b
  2118   00209E  D7EC               	goto	__ptext5
  2119   0020A0                     __end_of_tache6:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _lecture_normale *****************
  2123 ;; Defined at:
  2124 ;;		line 5 in file "stid.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2127 ;;		 -> badge(10), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  octet           1    7[COMRAM] unsigned char 
  2130 ;;  n_bit           1    6[COMRAM] unsigned char 
  2131 ;;  n_octet         1    5[COMRAM] unsigned char 
  2132 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      unsigned char 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;Total ram usage:        6 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 1
  2149 ;; This function calls:
  2150 ;;		_stid_delai_us
  2151 ;; This function is called by:
  2152 ;;		_tache6
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text6
  2157   001A76                     __ptext6:
  2158                           	callstack 0
  2159   001A76                     _lecture_normale:
  2160                           	callstack 26
  2161                           
  2162                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;incstack = 0
  2166   001A76  8295               	bsf	149,1,c	;volatile
  2167                           
  2168                           ;stid.c: 10: LATDbits.LATD3=0;
  2169   001A78  968C               	bcf	140,3,c	;volatile
  2170                           
  2171                           ;stid.c: 11: LATDbits.LATD2=0;
  2172   001A7A  948C               	bcf	140,2,c	;volatile
  2173                           
  2174                           ;stid.c: 12: stid_delai_us(100);
  2175   001A7C  0E00               	movlw	0
  2176   001A7E  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2177   001A80  0E64               	movlw	100
  2178   001A82  6E01               	movwf	stid_delai_us@isdu^0,c
  2179   001A84  ECC7  F010         	call	_stid_delai_us	;wreg free
  2180                           
  2181                           ;stid.c: 13: LATDbits.LATD3=1;
  2182   001A88  868C               	bsf	140,3,c	;volatile
  2183                           
  2184                           ;stid.c: 14: temps_attente=0;
  2185   001A8A  0E00               	movlw	0
  2186   001A8C  6E05               	movwf	lecture_normale@temps_attente^0,c
  2187   001A8E                     i2l4235:
  2188                           
  2189                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2190   001A8E  0E03               	movlw	3
  2191   001A90  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2192   001A92  0EE8               	movlw	232
  2193   001A94  6E01               	movwf	stid_delai_us@isdu^0,c
  2194   001A96  ECC7  F010         	call	_stid_delai_us	;wreg free
  2195                           
  2196                           ;stid.c: 18: temps_attente++;
  2197   001A9A  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2198                           
  2199                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2200   001A9C  A083               	btfss	131,0,c	;volatile
  2201   001A9E  D002               	goto	i2l4243
  2202                           
  2203                           ;stid.c: 20: temps_attente=65;
  2204   001AA0  0E41               	movlw	65
  2205   001AA2  6E05               	movwf	lecture_normale@temps_attente^0,c
  2206   001AA4                     i2l4243:
  2207                           
  2208                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2209   001AA4  0E40               	movlw	64
  2210   001AA6  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2211   001AA8  D7F2               	goto	i2l4235
  2212                           
  2213                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2214   001AAA  A083               	btfss	131,0,c	;volatile
  2215   001AAC  D033               	goto	i2l4279
  2216                           
  2217                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2218   001AAE  0E00               	movlw	0
  2219   001AB0  6E06               	movwf	lecture_normale@n_octet^0,c
  2220   001AB2                     i2l1544:
  2221                           
  2222                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2223   001AB2  0E00               	movlw	0
  2224   001AB4  6E08               	movwf	lecture_normale@octet^0,c
  2225                           
  2226                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2227   001AB6  0E00               	movlw	0
  2228   001AB8  6E07               	movwf	lecture_normale@n_bit^0,c
  2229   001ABA                     i2l1545:
  2230                           
  2231                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2232   001ABA  A283               	btfss	131,1,c	;volatile
  2233   001ABC  D003               	goto	i2l1547
  2234                           
  2235                           ;stid.c: 34: octet=(octet|0x01);
  2236   001ABE  5008               	movf	lecture_normale@octet^0,w,c
  2237   001AC0  0901               	iorlw	1
  2238   001AC2  6E08               	movwf	lecture_normale@octet^0,c
  2239   001AC4                     i2l1547:
  2240                           
  2241                           ;stid.c: 35: octet=octet<<1;
  2242   001AC4  5008               	movf	lecture_normale@octet^0,w,c
  2243   001AC6  2408               	addwf	lecture_normale@octet^0,w,c
  2244   001AC8  6E08               	movwf	lecture_normale@octet^0,c
  2245                           
  2246                           ;stid.c: 36: stid_delai_us(100);
  2247   001ACA  0E00               	movlw	0
  2248   001ACC  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2249   001ACE  0E64               	movlw	100
  2250   001AD0  6E01               	movwf	stid_delai_us@isdu^0,c
  2251   001AD2  ECC7  F010         	call	_stid_delai_us	;wreg free
  2252                           
  2253                           ;stid.c: 37: LATDbits.LATD2=1;
  2254   001AD6  848C               	bsf	140,2,c	;volatile
  2255                           
  2256                           ;stid.c: 38: stid_delai_us(500);
  2257   001AD8  0E01               	movlw	1
  2258   001ADA  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2259   001ADC  0EF4               	movlw	244
  2260   001ADE  6E01               	movwf	stid_delai_us@isdu^0,c
  2261   001AE0  ECC7  F010         	call	_stid_delai_us	;wreg free
  2262                           
  2263                           ;stid.c: 39: LATDbits.LATD2=0;
  2264   001AE4  948C               	bcf	140,2,c	;volatile
  2265                           
  2266                           ;stid.c: 40: stid_delai_us(400);
  2267   001AE6  0E01               	movlw	1
  2268   001AE8  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2269   001AEA  0E90               	movlw	144
  2270   001AEC  6E01               	movwf	stid_delai_us@isdu^0,c
  2271   001AEE  ECC7  F010         	call	_stid_delai_us	;wreg free
  2272   001AF2  2A07               	incf	lecture_normale@n_bit^0,f,c
  2273   001AF4  0E07               	movlw	7
  2274   001AF6  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2275   001AF8  D7E0               	goto	i2l1545
  2276                           
  2277                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2278   001AFA  5006               	movf	lecture_normale@n_octet^0,w,c
  2279   001AFC  2403               	addwf	lecture_normale@stid_id^0,w,c
  2280   001AFE  6ED9               	movwf	fsr2l,c
  2281   001B00  0E00               	movlw	0
  2282   001B02  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2283   001B04  6EDA               	movwf	fsr2h,c
  2284   001B06  C008  FFDF         	movff	lecture_normale@octet,indf2
  2285                           
  2286                           ;stid.c: 43: n_octet++;
  2287   001B0A  2A06               	incf	lecture_normale@n_octet^0,f,c
  2288                           
  2289                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2290   001B0C  B083               	btfsc	131,0,c	;volatile
  2291   001B0E  D7D1               	goto	i2l1544
  2292                           
  2293                           ;stid.c: 47: return n_octet;
  2294   001B10  5006               	movf	lecture_normale@n_octet^0,w,c
  2295   001B12  0012               	return	
  2296   001B14                     i2l4279:
  2297                           
  2298                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2299   001B14  0E00               	movlw	0
  2300   001B16  0012               	return		;funcret
  2301   001B18                     __end_of_lecture_normale:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _stid_delai_us *****************
  2305 ;; Defined at:
  2306 ;;		line 56 in file "stid.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  isdu            2    0[COMRAM] unsigned int 
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;Total ram usage:        2 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_lecture_normale
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text7
  2334   00218E                     __ptext7:
  2335                           	callstack 0
  2336   00218E                     _stid_delai_us:
  2337                           	callstack 26
  2338                           
  2339                           ;stid.c: 58: while(isdu>0)
  2340                           
  2341                           ;incstack = 0
  2342   00218E  D006               	goto	i2l4095
  2343   002190                     i2l1554:
  2344                           
  2345                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2346   002190  F000               	nop	
  2347   002192  F000               	nop	
  2348   002194  F000               	nop	
  2349                           
  2350                           ;stid.c: 61: isdu--;
  2351   002196  0601               	decf	stid_delai_us@isdu^0,f,c
  2352   002198  A0D8               	btfss	status,0,c
  2353   00219A  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2354   00219C                     i2l4095:
  2355   00219C  5001               	movf	stid_delai_us@isdu^0,w,c
  2356   00219E  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2357   0021A0  B4D8               	btfsc	status,2,c
  2358   0021A2  0012               	return	
  2359   0021A4  D7F5               	goto	i2l1554
  2360   0021A6                     __end_of_stid_delai_us:
  2361                           	callstack 0
  2362                           
  2363 ;; *************** function _tache5 *****************
  2364 ;; Defined at:
  2365 ;;		line 3 in file "T5.c"
  2366 ;; Parameters:    Size  Location     Type
  2367 ;;		None
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  a               2    0[COMRAM] unsigned int 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;Total ram usage:        2 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_fonction_d_interruption
  2389 ;;		_initialisation_du_systeme
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text8
  2394   001748                     __ptext8:
  2395                           	callstack 0
  2396   001748                     _tache5:
  2397                           	callstack 28
  2398                           
  2399                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2400                           
  2401                           ;incstack = 0
  2402                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2403   001748  A89E               	btfss	158,4,c	;volatile
  2404   00174A  D7FE               	goto	__ptext8
  2405   00174C  0E74               	movlw	116
  2406   00174E  6EAD               	movwf	173,c	;volatile
  2407   001750                     i2l904:
  2408   001750  A2AC               	btfss	172,1,c	;volatile
  2409   001752  D7FE               	goto	i2l904
  2410   001754                     i2u135_40:
  2411   001754  A89E               	btfss	158,4,c	;volatile
  2412   001756  D7FE               	goto	i2u135_40
  2413   001758  0E61               	movlw	97
  2414   00175A  6EAD               	movwf	173,c	;volatile
  2415   00175C                     i2l910:
  2416   00175C  A2AC               	btfss	172,1,c	;volatile
  2417   00175E  D7FE               	goto	i2l910
  2418   001760                     i2u137_40:
  2419   001760  A89E               	btfss	158,4,c	;volatile
  2420   001762  D7FE               	goto	i2u137_40
  2421   001764  0E63               	movlw	99
  2422   001766  6EAD               	movwf	173,c	;volatile
  2423   001768                     i2l916:
  2424   001768  A2AC               	btfss	172,1,c	;volatile
  2425   00176A  D7FE               	goto	i2l916
  2426   00176C                     i2u139_40:
  2427   00176C  A89E               	btfss	158,4,c	;volatile
  2428   00176E  D7FE               	goto	i2u139_40
  2429   001770  0E68               	movlw	104
  2430   001772  6EAD               	movwf	173,c	;volatile
  2431   001774                     i2l922:
  2432   001774  A2AC               	btfss	172,1,c	;volatile
  2433   001776  D7FE               	goto	i2l922
  2434   001778                     i2u141_40:
  2435   001778  A89E               	btfss	158,4,c	;volatile
  2436   00177A  D7FE               	goto	i2u141_40
  2437   00177C  0E65               	movlw	101
  2438   00177E  6EAD               	movwf	173,c	;volatile
  2439   001780                     i2l928:
  2440   001780  A2AC               	btfss	172,1,c	;volatile
  2441   001782  D7FE               	goto	i2l928
  2442   001784                     i2u143_40:
  2443   001784  A89E               	btfss	158,4,c	;volatile
  2444   001786  D7FE               	goto	i2u143_40
  2445   001788  0E35               	movlw	53
  2446   00178A  6EAD               	movwf	173,c	;volatile
  2447   00178C                     i2l934:
  2448   00178C  A2AC               	btfss	172,1,c	;volatile
  2449   00178E  D7FE               	goto	i2l934
  2450   001790                     i2u145_40:
  2451   001790  A89E               	btfss	158,4,c	;volatile
  2452   001792  D7FE               	goto	i2u145_40
  2453   001794  0E5F               	movlw	95
  2454   001796  6EAD               	movwf	173,c	;volatile
  2455   001798                     i2l940:
  2456   001798  A2AC               	btfss	172,1,c	;volatile
  2457   00179A  D7FE               	goto	i2l940
  2458   00179C                     i2u147_40:
  2459   00179C  A89E               	btfss	158,4,c	;volatile
  2460   00179E  D7FE               	goto	i2u147_40
  2461   0017A0  0E65               	movlw	101
  2462   0017A2  6EAD               	movwf	173,c	;volatile
  2463   0017A4                     i2l946:
  2464   0017A4  A2AC               	btfss	172,1,c	;volatile
  2465   0017A6  D7FE               	goto	i2l946
  2466   0017A8                     i2u149_40:
  2467   0017A8  A89E               	btfss	158,4,c	;volatile
  2468   0017AA  D7FE               	goto	i2u149_40
  2469   0017AC  0E6E               	movlw	110
  2470   0017AE  6EAD               	movwf	173,c	;volatile
  2471   0017B0                     i2l952:
  2472   0017B0  A2AC               	btfss	172,1,c	;volatile
  2473   0017B2  D7FE               	goto	i2l952
  2474   0017B4                     i2u151_40:
  2475   0017B4  A89E               	btfss	158,4,c	;volatile
  2476   0017B6  D7FE               	goto	i2u151_40
  2477   0017B8  0E5F               	movlw	95
  2478   0017BA  6EAD               	movwf	173,c	;volatile
  2479   0017BC                     i2l958:
  2480   0017BC  A2AC               	btfss	172,1,c	;volatile
  2481   0017BE  D7FE               	goto	i2l958
  2482   0017C0                     i2u153_40:
  2483   0017C0  A89E               	btfss	158,4,c	;volatile
  2484   0017C2  D7FE               	goto	i2u153_40
  2485   0017C4  0E63               	movlw	99
  2486   0017C6  6EAD               	movwf	173,c	;volatile
  2487   0017C8                     i2l964:
  2488   0017C8  A2AC               	btfss	172,1,c	;volatile
  2489   0017CA  D7FE               	goto	i2l964
  2490   0017CC                     i2u155_40:
  2491   0017CC  A89E               	btfss	158,4,c	;volatile
  2492   0017CE  D7FE               	goto	i2u155_40
  2493   0017D0  0E6F               	movlw	111
  2494   0017D2  6EAD               	movwf	173,c	;volatile
  2495   0017D4                     i2l970:
  2496   0017D4  A2AC               	btfss	172,1,c	;volatile
  2497   0017D6  D7FE               	goto	i2l970
  2498   0017D8                     i2u157_40:
  2499   0017D8  A89E               	btfss	158,4,c	;volatile
  2500   0017DA  D7FE               	goto	i2u157_40
  2501   0017DC  0E75               	movlw	117
  2502   0017DE  6EAD               	movwf	173,c	;volatile
  2503   0017E0                     i2l976:
  2504   0017E0  A2AC               	btfss	172,1,c	;volatile
  2505   0017E2  D7FE               	goto	i2l976
  2506   0017E4                     i2u159_40:
  2507   0017E4  A89E               	btfss	158,4,c	;volatile
  2508   0017E6  D7FE               	goto	i2u159_40
  2509   0017E8  0E72               	movlw	114
  2510   0017EA  6EAD               	movwf	173,c	;volatile
  2511   0017EC                     i2l982:
  2512   0017EC  A2AC               	btfss	172,1,c	;volatile
  2513   0017EE  D7FE               	goto	i2l982
  2514   0017F0                     i2u161_40:
  2515   0017F0  A89E               	btfss	158,4,c	;volatile
  2516   0017F2  D7FE               	goto	i2u161_40
  2517   0017F4  0E73               	movlw	115
  2518   0017F6  6EAD               	movwf	173,c	;volatile
  2519   0017F8                     i2l988:
  2520   0017F8  A2AC               	btfss	172,1,c	;volatile
  2521   0017FA  D7FE               	goto	i2l988
  2522                           
  2523                           ;T5.c: 28: for (a=0;a<65000;a++)
  2524   0017FC  0E00               	movlw	0
  2525   0017FE  6E02               	movwf	(tache5@a+1)^0,c
  2526   001800  0E00               	movlw	0
  2527   001802  6E01               	movwf	tache5@a^0,c
  2528   001804                     i2l3439:
  2529                           
  2530                           ;T5.c: 29: ;
  2531   001804  4A01               	infsnz	tache5@a^0,f,c
  2532   001806  2A02               	incf	(tache5@a+1)^0,f,c
  2533   001808  0EE8               	movlw	232
  2534   00180A  5C01               	subwf	tache5@a^0,w,c
  2535   00180C  0EFD               	movlw	253
  2536   00180E  5802               	subwfb	(tache5@a+1)^0,w,c
  2537   001810  A0D8               	btfss	status,0,c
  2538   001812  D7F8               	goto	i2l3439
  2539                           
  2540                           ;T5.c: 30: for (a=0;a<65000;a++)
  2541   001814  0E00               	movlw	0
  2542   001816  6E02               	movwf	(tache5@a+1)^0,c
  2543   001818  0E00               	movlw	0
  2544   00181A  6E01               	movwf	tache5@a^0,c
  2545   00181C                     i2l3449:
  2546                           
  2547                           ;T5.c: 31: ;
  2548   00181C  4A01               	infsnz	tache5@a^0,f,c
  2549   00181E  2A02               	incf	(tache5@a+1)^0,f,c
  2550   001820  0EE8               	movlw	232
  2551   001822  5C01               	subwf	tache5@a^0,w,c
  2552   001824  0EFD               	movlw	253
  2553   001826  5802               	subwfb	(tache5@a+1)^0,w,c
  2554   001828  B0D8               	btfsc	status,0,c
  2555   00182A  D78E               	goto	__ptext8
  2556   00182C  D7F7               	goto	i2l3449
  2557   00182E                     __end_of_tache5:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _tache4 *****************
  2561 ;; Defined at:
  2562 ;;		line 3 in file "T4.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  a               2    0[COMRAM] unsigned int 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        2 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_fonction_d_interruption
  2586 ;;		_initialisation_du_systeme
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text9
  2591   00182E                     __ptext9:
  2592                           	callstack 0
  2593   00182E                     _tache4:
  2594                           	callstack 28
  2595                           
  2596                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2597                           
  2598                           ;incstack = 0
  2599                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2600   00182E  A89E               	btfss	158,4,c	;volatile
  2601   001830  D7FE               	goto	__ptext9
  2602   001832  0E54               	movlw	84
  2603   001834  6EAD               	movwf	173,c	;volatile
  2604   001836                     i2l728:
  2605   001836  A2AC               	btfss	172,1,c	;volatile
  2606   001838  D7FE               	goto	i2l728
  2607   00183A                     i2u104_40:
  2608   00183A  A89E               	btfss	158,4,c	;volatile
  2609   00183C  D7FE               	goto	i2u104_40
  2610   00183E  0E41               	movlw	65
  2611   001840  6EAD               	movwf	173,c	;volatile
  2612   001842                     i2l734:
  2613   001842  A2AC               	btfss	172,1,c	;volatile
  2614   001844  D7FE               	goto	i2l734
  2615   001846                     i2u106_40:
  2616   001846  A89E               	btfss	158,4,c	;volatile
  2617   001848  D7FE               	goto	i2u106_40
  2618   00184A  0E43               	movlw	67
  2619   00184C  6EAD               	movwf	173,c	;volatile
  2620   00184E                     i2l740:
  2621   00184E  A2AC               	btfss	172,1,c	;volatile
  2622   001850  D7FE               	goto	i2l740
  2623   001852                     i2u108_40:
  2624   001852  A89E               	btfss	158,4,c	;volatile
  2625   001854  D7FE               	goto	i2u108_40
  2626   001856  0E48               	movlw	72
  2627   001858  6EAD               	movwf	173,c	;volatile
  2628   00185A                     i2l746:
  2629   00185A  A2AC               	btfss	172,1,c	;volatile
  2630   00185C  D7FE               	goto	i2l746
  2631   00185E                     i2u110_40:
  2632   00185E  A89E               	btfss	158,4,c	;volatile
  2633   001860  D7FE               	goto	i2u110_40
  2634   001862  0E45               	movlw	69
  2635   001864  6EAD               	movwf	173,c	;volatile
  2636   001866                     i2l752:
  2637   001866  A2AC               	btfss	172,1,c	;volatile
  2638   001868  D7FE               	goto	i2l752
  2639   00186A                     i2u112_40:
  2640   00186A  A89E               	btfss	158,4,c	;volatile
  2641   00186C  D7FE               	goto	i2u112_40
  2642   00186E  0E34               	movlw	52
  2643   001870  6EAD               	movwf	173,c	;volatile
  2644   001872                     i2l758:
  2645   001872  A2AC               	btfss	172,1,c	;volatile
  2646   001874  D7FE               	goto	i2l758
  2647   001876                     i2u114_40:
  2648   001876  A89E               	btfss	158,4,c	;volatile
  2649   001878  D7FE               	goto	i2u114_40
  2650   00187A  0E5F               	movlw	95
  2651   00187C  6EAD               	movwf	173,c	;volatile
  2652   00187E                     i2l764:
  2653   00187E  A2AC               	btfss	172,1,c	;volatile
  2654   001880  D7FE               	goto	i2l764
  2655   001882                     i2u116_40:
  2656   001882  A89E               	btfss	158,4,c	;volatile
  2657   001884  D7FE               	goto	i2u116_40
  2658   001886  0E45               	movlw	69
  2659   001888  6EAD               	movwf	173,c	;volatile
  2660   00188A                     i2l770:
  2661   00188A  A2AC               	btfss	172,1,c	;volatile
  2662   00188C  D7FE               	goto	i2l770
  2663   00188E                     i2u118_40:
  2664   00188E  A89E               	btfss	158,4,c	;volatile
  2665   001890  D7FE               	goto	i2u118_40
  2666   001892  0E4E               	movlw	78
  2667   001894  6EAD               	movwf	173,c	;volatile
  2668   001896                     i2l776:
  2669   001896  A2AC               	btfss	172,1,c	;volatile
  2670   001898  D7FE               	goto	i2l776
  2671   00189A                     i2u120_40:
  2672   00189A  A89E               	btfss	158,4,c	;volatile
  2673   00189C  D7FE               	goto	i2u120_40
  2674   00189E  0E5F               	movlw	95
  2675   0018A0  6EAD               	movwf	173,c	;volatile
  2676   0018A2                     i2l782:
  2677   0018A2  A2AC               	btfss	172,1,c	;volatile
  2678   0018A4  D7FE               	goto	i2l782
  2679   0018A6                     i2u122_40:
  2680   0018A6  A89E               	btfss	158,4,c	;volatile
  2681   0018A8  D7FE               	goto	i2u122_40
  2682   0018AA  0E43               	movlw	67
  2683   0018AC  6EAD               	movwf	173,c	;volatile
  2684   0018AE                     i2l788:
  2685   0018AE  A2AC               	btfss	172,1,c	;volatile
  2686   0018B0  D7FE               	goto	i2l788
  2687   0018B2                     i2u124_40:
  2688   0018B2  A89E               	btfss	158,4,c	;volatile
  2689   0018B4  D7FE               	goto	i2u124_40
  2690   0018B6  0E4F               	movlw	79
  2691   0018B8  6EAD               	movwf	173,c	;volatile
  2692   0018BA                     i2l794:
  2693   0018BA  A2AC               	btfss	172,1,c	;volatile
  2694   0018BC  D7FE               	goto	i2l794
  2695   0018BE                     i2u126_40:
  2696   0018BE  A89E               	btfss	158,4,c	;volatile
  2697   0018C0  D7FE               	goto	i2u126_40
  2698   0018C2  0E55               	movlw	85
  2699   0018C4  6EAD               	movwf	173,c	;volatile
  2700   0018C6                     i2l800:
  2701   0018C6  A2AC               	btfss	172,1,c	;volatile
  2702   0018C8  D7FE               	goto	i2l800
  2703   0018CA                     i2u128_40:
  2704   0018CA  A89E               	btfss	158,4,c	;volatile
  2705   0018CC  D7FE               	goto	i2u128_40
  2706   0018CE  0E52               	movlw	82
  2707   0018D0  6EAD               	movwf	173,c	;volatile
  2708   0018D2                     i2l806:
  2709   0018D2  A2AC               	btfss	172,1,c	;volatile
  2710   0018D4  D7FE               	goto	i2l806
  2711   0018D6                     i2u130_40:
  2712   0018D6  A89E               	btfss	158,4,c	;volatile
  2713   0018D8  D7FE               	goto	i2u130_40
  2714   0018DA  0E53               	movlw	83
  2715   0018DC  6EAD               	movwf	173,c	;volatile
  2716   0018DE                     i2l812:
  2717   0018DE  A2AC               	btfss	172,1,c	;volatile
  2718   0018E0  D7FE               	goto	i2l812
  2719                           
  2720                           ;T4.c: 28: for (a=0;a<65000;a++)
  2721   0018E2  0E00               	movlw	0
  2722   0018E4  6E02               	movwf	(tache4@a+1)^0,c
  2723   0018E6  0E00               	movlw	0
  2724   0018E8  6E01               	movwf	tache4@a^0,c
  2725   0018EA                     i2l3399:
  2726                           
  2727                           ;T4.c: 29: ;
  2728   0018EA  4A01               	infsnz	tache4@a^0,f,c
  2729   0018EC  2A02               	incf	(tache4@a+1)^0,f,c
  2730   0018EE  0EE8               	movlw	232
  2731   0018F0  5C01               	subwf	tache4@a^0,w,c
  2732   0018F2  0EFD               	movlw	253
  2733   0018F4  5802               	subwfb	(tache4@a+1)^0,w,c
  2734   0018F6  B0D8               	btfsc	status,0,c
  2735   0018F8  D79A               	goto	__ptext9
  2736   0018FA  D7F7               	goto	i2l3399
  2737   0018FC                     __end_of_tache4:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _tache3 *****************
  2741 ;; Defined at:
  2742 ;;		line 3 in file "T3.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_fonction_d_interruption
  2766 ;;		_initialisation_du_systeme
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text10
  2771   001B18                     __ptext10:
  2772                           	callstack 0
  2773   001B18                     _tache3:
  2774                           	callstack 28
  2775                           
  2776                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2777                           
  2778                           ;incstack = 0
  2779                           ;T3.c: 5: while(1)
  2780   001B18  0100               	movlb	0	; () banked
  2781   001B1A  0566               	decf	102,w,b
  2782   001B1C  A4D8               	btfss	status,2,c
  2783   001B1E  D014               	goto	i2l3327
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2787   001B20  0ECA               	movlw	202
  2788   001B22  6567               	cpfsgt	103,b
  2789   001B24  D011               	goto	i2l3327
  2790                           
  2791                           ; BSR set to: 0
  2792   001B26  0ED1               	movlw	209
  2793   001B28  6167               	cpfslt	103,b
  2794   001B2A  D00E               	goto	i2l3327
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2798   001B2C  0E70               	movlw	112
  2799   001B2E  6568               	cpfsgt	104,b
  2800   001B30  D004               	goto	i2l3321
  2801                           
  2802                           ; BSR set to: 0
  2803   001B32  0E79               	movlw	121
  2804   001B34  6168               	cpfslt	104,b
  2805   001B36  D001               	goto	i2l3321
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2809   001B38  848B               	bsf	139,2,c	;volatile
  2810   001B3A                     i2l3321:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2814   001B3A  0E78               	movlw	120
  2815   001B3C  6568               	cpfsgt	104,b
  2816   001B3E  D004               	goto	i2l3327
  2817                           
  2818                           ; BSR set to: 0
  2819   001B40  0E7F               	movlw	127
  2820   001B42  6168               	cpfslt	104,b
  2821   001B44  D001               	goto	i2l3327
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2825   001B46  948B               	bcf	139,2,c	;volatile
  2826   001B48                     i2l3327:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2830   001B48  0566               	decf	102,w,b
  2831   001B4A  A4D8               	btfss	status,2,c
  2832   001B4C  D014               	goto	i2l3345
  2833                           
  2834                           ; BSR set to: 0
  2835                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2836   001B4E  0ED6               	movlw	214
  2837   001B50  6567               	cpfsgt	103,b
  2838   001B52  D011               	goto	i2l3345
  2839                           
  2840                           ; BSR set to: 0
  2841   001B54  0EDD               	movlw	221
  2842   001B56  6167               	cpfslt	103,b
  2843   001B58  D00E               	goto	i2l3345
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2847   001B5A  0E70               	movlw	112
  2848   001B5C  6568               	cpfsgt	104,b
  2849   001B5E  D004               	goto	i2l3339
  2850                           
  2851                           ; BSR set to: 0
  2852   001B60  0E79               	movlw	121
  2853   001B62  6168               	cpfslt	104,b
  2854   001B64  D001               	goto	i2l3339
  2855                           
  2856                           ; BSR set to: 0
  2857                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2858   001B66  828B               	bsf	139,1,c	;volatile
  2859   001B68                     i2l3339:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2863   001B68  0E78               	movlw	120
  2864   001B6A  6568               	cpfsgt	104,b
  2865   001B6C  D004               	goto	i2l3345
  2866                           
  2867                           ; BSR set to: 0
  2868   001B6E  0E7F               	movlw	127
  2869   001B70  6168               	cpfslt	104,b
  2870   001B72  D001               	goto	i2l3345
  2871                           
  2872                           ; BSR set to: 0
  2873                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2874   001B74  928B               	bcf	139,1,c	;volatile
  2875   001B76                     i2l3345:
  2876                           
  2877                           ; BSR set to: 0
  2878                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2879   001B76  0566               	decf	102,w,b
  2880   001B78  A4D8               	btfss	status,2,c
  2881   001B7A  D7CE               	goto	__ptext10
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2885   001B7C  0EE2               	movlw	226
  2886   001B7E  6567               	cpfsgt	103,b
  2887   001B80  D7CB               	goto	__ptext10
  2888                           
  2889                           ; BSR set to: 0
  2890   001B82  0EE9               	movlw	233
  2891   001B84  6167               	cpfslt	103,b
  2892   001B86  D7C8               	goto	__ptext10
  2893                           
  2894                           ; BSR set to: 0
  2895                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  2896   001B88  0E70               	movlw	112
  2897   001B8A  6568               	cpfsgt	104,b
  2898   001B8C  D004               	goto	i2l3357
  2899                           
  2900                           ; BSR set to: 0
  2901   001B8E  0E79               	movlw	121
  2902   001B90  6168               	cpfslt	104,b
  2903   001B92  D001               	goto	i2l3357
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  2907   001B94  808F               	bsf	143,0,c	;volatile
  2908   001B96                     i2l3357:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  2912   001B96  0E78               	movlw	120
  2913   001B98  6568               	cpfsgt	104,b
  2914   001B9A  D7BE               	goto	__ptext10
  2915                           
  2916                           ; BSR set to: 0
  2917   001B9C  0E7F               	movlw	127
  2918   001B9E  6168               	cpfslt	104,b
  2919   001BA0  D7BB               	goto	__ptext10
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  2923   001BA2  908F               	bcf	143,0,c	;volatile
  2924                           
  2925                           ; BSR set to: 0
  2926   001BA4  D7B9               	goto	__ptext10
  2927   001BA6                     __end_of_tache3:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _tache2 *****************
  2931 ;; Defined at:
  2932 ;;		line 3 in file "T2.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  iy              2   11[COMRAM] unsigned int 
  2937 ;;  ix              2    9[COMRAM] unsigned int 
  2938 ;;  ly              1   16[COMRAM] unsigned char 
  2939 ;;  hy              1   15[COMRAM] unsigned char 
  2940 ;;  lx              1   14[COMRAM] unsigned char 
  2941 ;;  hx              1   13[COMRAM] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;                  1    wreg      void 
  2944 ;; Registers used:
  2945 ;;		wreg, status,2, status,0, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;Total ram usage:       10 bytes
  2956 ;; Hardware stack levels used: 1
  2957 ;; Hardware stack levels required when called: 1
  2958 ;; This function calls:
  2959 ;;		___lwdiv
  2960 ;;		_tp_delai
  2961 ;; This function is called by:
  2962 ;;		_fonction_d_interruption
  2963 ;;		_initialisation_du_systeme
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text11
  2968   001654                     __ptext11:
  2969                           	callstack 0
  2970   001654                     _tache2:
  2971                           	callstack 27
  2972                           
  2973                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;incstack = 0
  2977   001654  0E00               	movlw	0
  2978   001656  0100               	movlb	0	; () banked
  2979   001658  6F66               	movwf	102,b
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  2983   00165A  868F               	bsf	143,3,c	;volatile
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;T2.c: 13: LATGbits.LATG4=0;
  2987   00165C  988F               	bcf	143,4,c	;volatile
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;T2.c: 14: tp_delai(3000);
  2991   00165E  0E0B               	movlw	11
  2992   001660  6E02               	movwf	(tp_delai@itpd+1)^0,c
  2993   001662  0EB8               	movlw	184
  2994   001664  6E01               	movwf	tp_delai@itpd^0,c
  2995   001666  ECD3  F010         	call	_tp_delai	;wreg free
  2996                           
  2997                           ;T2.c: 18: ADCON2=0x16;
  2998   00166A  0E16               	movlw	22
  2999   00166C  6EC0               	movwf	192,c	;volatile
  3000                           
  3001                           ;T2.c: 19: ADCON0=0x01;
  3002   00166E  0E01               	movlw	1
  3003   001670  6EC2               	movwf	194,c	;volatile
  3004                           
  3005                           ;T2.c: 20: ADCON0=0x03;
  3006   001672  0E03               	movlw	3
  3007   001674  6EC2               	movwf	194,c	;volatile
  3008   001676                     i2l529:
  3009   001676  B2C2               	btfsc	194,1,c	;volatile
  3010   001678  D7FE               	goto	i2l529
  3011                           
  3012                           ;T2.c: 23: hx=ADRESH;
  3013   00167A  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3014                           
  3015                           ;T2.c: 24: lx=ADRESL;
  3016   00167E  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3017                           
  3018                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3019   001682  C00F  F008         	movff	tache2@lx,??_tache2
  3020   001686  0E0F               	movlw	15
  3021   001688  1608               	andwf	??_tache2^0,f,c
  3022   00168A  B4D8               	btfsc	status,2,c
  3023   00168C  D004               	goto	i2l4649
  3024   00168E  0E00               	movlw	0
  3025   001690  6E0E               	movwf	tache2@hx^0,c
  3026   001692  0E00               	movlw	0
  3027   001694  6E0F               	movwf	tache2@lx^0,c
  3028   001696                     i2l4649:
  3029                           
  3030                           ;T2.c: 31: if (hx>=10)
  3031   001696  0E09               	movlw	9
  3032   001698  640E               	cpfsgt	tache2@hx^0,c
  3033   00169A  D7DC               	goto	__ptext11
  3034                           
  3035                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3036   00169C  968F               	bcf	143,3,c	;volatile
  3037                           
  3038                           ;T2.c: 34: LATGbits.LATG4=1;
  3039   00169E  888F               	bsf	143,4,c	;volatile
  3040                           
  3041                           ;T2.c: 35: tp_delai(3000);
  3042   0016A0  0E0B               	movlw	11
  3043   0016A2  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3044   0016A4  0EB8               	movlw	184
  3045   0016A6  6E01               	movwf	tp_delai@itpd^0,c
  3046   0016A8  ECD3  F010         	call	_tp_delai	;wreg free
  3047                           
  3048                           ;T2.c: 39: ADCON2=0x16;
  3049   0016AC  0E16               	movlw	22
  3050   0016AE  6EC0               	movwf	192,c	;volatile
  3051                           
  3052                           ;T2.c: 40: ADCON0=0x05;
  3053   0016B0  0E05               	movlw	5
  3054   0016B2  6EC2               	movwf	194,c	;volatile
  3055                           
  3056                           ;T2.c: 41: ADCON0=0x07;
  3057   0016B4  0E07               	movlw	7
  3058   0016B6  6EC2               	movwf	194,c	;volatile
  3059   0016B8                     i2l534:
  3060   0016B8  B2C2               	btfsc	194,1,c	;volatile
  3061   0016BA  D7FE               	goto	i2l534
  3062                           
  3063                           ;T2.c: 44: hy=ADRESH;
  3064   0016BC  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3065                           
  3066                           ;T2.c: 45: ly=ADRESL;
  3067   0016C0  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3068                           
  3069                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3070   0016C4  C011  F008         	movff	tache2@ly,??_tache2
  3071   0016C8  0E0F               	movlw	15
  3072   0016CA  1608               	andwf	??_tache2^0,f,c
  3073   0016CC  B4D8               	btfsc	status,2,c
  3074   0016CE  D004               	goto	i2l4665
  3075   0016D0  0E00               	movlw	0
  3076   0016D2  6E10               	movwf	tache2@hy^0,c
  3077   0016D4  0E00               	movlw	0
  3078   0016D6  6E11               	movwf	tache2@ly^0,c
  3079   0016D8                     i2l4665:
  3080                           
  3081                           ;T2.c: 51: if (hy>=20)
  3082   0016D8  0E13               	movlw	19
  3083   0016DA  6410               	cpfsgt	tache2@hy^0,c
  3084   0016DC  D7BB               	goto	__ptext11
  3085                           
  3086                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3087   0016DE  500E               	movf	tache2@hx^0,w,c
  3088   0016E0  6E08               	movwf	??_tache2^0,c
  3089   0016E2  500F               	movf	tache2@lx^0,w,c
  3090   0016E4  6E0A               	movwf	tache2@ix^0,c
  3091   0016E6  C008  F00B         	movff	??_tache2,tache2@ix+1
  3092                           
  3093                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3094   0016EA  5010               	movf	tache2@hy^0,w,c
  3095   0016EC  6E08               	movwf	??_tache2^0,c
  3096   0016EE  5011               	movf	tache2@ly^0,w,c
  3097   0016F0  6E0C               	movwf	tache2@iy^0,c
  3098   0016F2  C008  F00D         	movff	??_tache2,tache2@iy+1
  3099                           
  3100                           ;T2.c: 55: ix=ix-3150;
  3101   0016F6  0EB2               	movlw	178
  3102   0016F8  240A               	addwf	tache2@ix^0,w,c
  3103   0016FA  6E0A               	movwf	tache2@ix^0,c
  3104   0016FC  0EF3               	movlw	243
  3105   0016FE  200B               	addwfc	(tache2@ix+1)^0,w,c
  3106   001700  6E0B               	movwf	(tache2@ix+1)^0,c
  3107                           
  3108                           ;T2.c: 56: iy=iy-6500;
  3109   001702  0E9C               	movlw	156
  3110   001704  240C               	addwf	tache2@iy^0,w,c
  3111   001706  6E0C               	movwf	tache2@iy^0,c
  3112   001708  0EE6               	movlw	230
  3113   00170A  200D               	addwfc	(tache2@iy+1)^0,w,c
  3114   00170C  6E0D               	movwf	(tache2@iy+1)^0,c
  3115                           
  3116                           ;T2.c: 58: TP_x=ix/246;
  3117   00170E  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3118   001712  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3119   001716  0E00               	movlw	0
  3120   001718  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3121   00171A  0EF6               	movlw	246
  3122   00171C  6E03               	movwf	___lwdiv@divisor^0,c
  3123   00171E  ECD2  F00E         	call	___lwdiv	;wreg free
  3124   001722  5001               	movf	?___lwdiv^0,w,c
  3125   001724  0100               	movlb	0	; () banked
  3126   001726  6F67               	movwf	103,b
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;T2.c: 59: TP_y=127-(iy/409);
  3130   001728  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3131   00172C  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3132   001730  0E01               	movlw	1
  3133   001732  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3134   001734  0E99               	movlw	153
  3135   001736  6E03               	movwf	___lwdiv@divisor^0,c
  3136   001738  ECD2  F00E         	call	___lwdiv	;wreg free
  3137   00173C  5001               	movf	?___lwdiv^0,w,c
  3138   00173E  087F               	sublw	127
  3139   001740  0100               	movlb	0	; () banked
  3140   001742  6F68               	movwf	104,b
  3141                           
  3142                           ;T2.c: 68: TP_appui=1;
  3143   001744  0E01               	movlw	1
  3144   001746  D788               	goto	L1
  3145   001748                     __end_of_tache2:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _tp_delai *****************
  3149 ;; Defined at:
  3150 ;;		line 82 in file "T2.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  itpd            2    0[COMRAM] unsigned int 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;Total ram usage:        2 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_tache2
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text12
  3178   0021A6                     __ptext12:
  3179                           	callstack 0
  3180   0021A6                     _tp_delai:
  3181                           	callstack 27
  3182                           
  3183                           ;T2.c: 84: while(itpd>0)
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;incstack = 0
  3187   0021A6  D006               	goto	i2l4225
  3188   0021A8                     i2l547:
  3189                           
  3190                           ;T2.c: 85: {;T2.c: 86: __nop();__nop();__nop();
  3191   0021A8  F000               	nop	
  3192   0021AA  F000               	nop	
  3193   0021AC  F000               	nop	
  3194                           
  3195                           ;T2.c: 87: itpd--;
  3196   0021AE  0601               	decf	tp_delai@itpd^0,f,c
  3197   0021B0  A0D8               	btfss	status,0,c
  3198   0021B2  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3199   0021B4                     i2l4225:
  3200   0021B4  5001               	movf	tp_delai@itpd^0,w,c
  3201   0021B6  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3202   0021B8  B4D8               	btfsc	status,2,c
  3203   0021BA  0012               	return	
  3204   0021BC  D7F5               	goto	i2l547
  3205   0021BE                     __end_of_tp_delai:
  3206                           	callstack 0
  3207                           
  3208 ;; *************** function ___lwdiv *****************
  3209 ;; Defined at:
  3210 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  dividend        2    0[COMRAM] unsigned int 
  3213 ;;  divisor         2    2[COMRAM] unsigned int 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  quotient        2    4[COMRAM] unsigned int 
  3216 ;;  counter         1    6[COMRAM] unsigned char 
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  2    0[COMRAM] unsigned int 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2, status,0
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;Total ram usage:        7 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_tache2
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text13
  3240   001DA4                     __ptext13:
  3241                           	callstack 0
  3242   001DA4                     ___lwdiv:
  3243                           	callstack 27
  3244                           
  3245                           ;incstack = 0
  3246   001DA4  0E00               	movlw	0
  3247   001DA6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3248   001DA8  0E00               	movlw	0
  3249   001DAA  6E05               	movwf	___lwdiv@quotient^0,c
  3250   001DAC  5003               	movf	___lwdiv@divisor^0,w,c
  3251   001DAE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3252   001DB0  B4D8               	btfsc	status,2,c
  3253   001DB2  D01C               	goto	i2l2125
  3254   001DB4  0E01               	movlw	1
  3255   001DB6  6E07               	movwf	___lwdiv@counter^0,c
  3256   001DB8  D004               	goto	i2l4291
  3257   001DBA                     i2l4289:
  3258   001DBA  90D8               	bcf	status,0,c
  3259   001DBC  3603               	rlcf	___lwdiv@divisor^0,f,c
  3260   001DBE  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3261   001DC0  2A07               	incf	___lwdiv@counter^0,f,c
  3262   001DC2                     i2l4291:
  3263   001DC2  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3264   001DC4  D7FA               	goto	i2l4289
  3265   001DC6                     i2u226_40:
  3266   001DC6  90D8               	bcf	status,0,c
  3267   001DC8  3605               	rlcf	___lwdiv@quotient^0,f,c
  3268   001DCA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3269   001DCC  5003               	movf	___lwdiv@divisor^0,w,c
  3270   001DCE  5C01               	subwf	___lwdiv@dividend^0,w,c
  3271   001DD0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3272   001DD2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3273   001DD4  A0D8               	btfss	status,0,c
  3274   001DD6  D005               	goto	i2l4301
  3275   001DD8  5003               	movf	___lwdiv@divisor^0,w,c
  3276   001DDA  5E01               	subwf	___lwdiv@dividend^0,f,c
  3277   001DDC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3278   001DDE  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3279   001DE0  8005               	bsf	___lwdiv@quotient^0,0,c
  3280   001DE2                     i2l4301:
  3281   001DE2  90D8               	bcf	status,0,c
  3282   001DE4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3283   001DE6  3203               	rrcf	___lwdiv@divisor^0,f,c
  3284   001DE8  2E07               	decfsz	___lwdiv@counter^0,f,c
  3285   001DEA  D7ED               	goto	i2u226_40
  3286   001DEC                     i2l2125:
  3287   001DEC  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3288   001DF0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3289   001DF4  0012               	return		;funcret
  3290   001DF6                     __end_of___lwdiv:
  3291                           	callstack 0
  3292                           
  3293 ;; *************** function _tache1 *****************
  3294 ;; Defined at:
  3295 ;;		line 3 in file "T1.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  i               1   20[COMRAM] unsigned char 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;Total ram usage:        1 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 5
  3316 ;; This function calls:
  3317 ;;		_Init
  3318 ;;		_clear_graphics
  3319 ;;		_clear_line
  3320 ;;		_clear_text
  3321 ;;		_draw_char
  3322 ;;		_draw_filled_square
  3323 ;;		_draw_hex8
  3324 ;;		_draw_square
  3325 ;;		_draw_string
  3326 ;;		_goto_lico
  3327 ;;		_init_rxtx
  3328 ;;		_initialisation_afficheur
  3329 ;;		_lecture_8bit_analogique
  3330 ;;		_plot1
  3331 ;; This function is called by:
  3332 ;;		_fonction_d_interruption
  3333 ;;		_initialisation_du_systeme
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text14
  3338   0010A8                     __ptext14:
  3339                           	callstack 0
  3340   0010A8                     _tache1:
  3341                           	callstack 23
  3342                           
  3343                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3344                           
  3345                           ;incstack = 0
  3346   0010A8  9EF2               	bcf	242,7,c	;volatile
  3347                           
  3348                           ;T1.c: 8: initialisation_afficheur();
  3349   0010AA  EC7E  F00C         	call	_initialisation_afficheur	;wreg free
  3350                           
  3351                           ;T1.c: 9: clear_text();
  3352   0010AE  ECDF  F00F         	call	_clear_text	;wreg free
  3353                           
  3354                           ;T1.c: 10: clear_graphics();
  3355   0010B2  ECF7  F00F         	call	_clear_graphics	;wreg free
  3356                           
  3357                           ;T1.c: 11: init_rxtx();
  3358   0010B6  EC61  F010         	call	_init_rxtx	;wreg free
  3359                           
  3360                           ;T1.c: 12: Init(2);
  3361   0010BA  0E02               	movlw	2
  3362   0010BC  6EE6               	movwf	postinc1,c
  3363   0010BE  EC50  F010         	call	_Init	;wreg free
  3364                           
  3365                           ;T1.c: 13: RXTX_libre=1;
  3366   0010C2  0E01               	movlw	1
  3367   0010C4  0100               	movlb	0	; () banked
  3368   0010C6  6F80               	movwf	128,b
  3369                           
  3370                           ; BSR set to: 0
  3371                           ;T1.c: 14: TXREG1='R';
  3372   0010C8  0E52               	movlw	82
  3373   0010CA  6EAD               	movwf	173,c	;volatile
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3377   0010CC  8EF2               	bsf	242,7,c	;volatile
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3381   0010CE  948B               	bcf	139,2,c	;volatile
  3382                           
  3383                           ; BSR set to: 0
  3384   0010D0  928B               	bcf	139,1,c	;volatile
  3385                           
  3386                           ; BSR set to: 0
  3387   0010D2  908F               	bcf	143,0,c	;volatile
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;T1.c: 19: vitesse=0;
  3391   0010D4  0E00               	movlw	0
  3392   0010D6  6F73               	movwf	115,b
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;T1.c: 20: batterie=15;
  3396   0010D8  0E0F               	movlw	15
  3397   0010DA  6F74               	movwf	116,b
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;T1.c: 21: n_octet_badge=0;
  3401   0010DC  0E00               	movlw	0
  3402   0010DE  6F7F               	movwf	127,b
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;T1.c: 23: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3406   0010E0  0E22               	movlw	34
  3407   0010E2  6E09               	movwf	goto_lico@colonne^0,c
  3408   0010E4  0E0D               	movlw	13
  3409   0010E6  EC7B  F00E         	call	_goto_lico
  3410   0010EA  0E52               	movlw	82
  3411   0010EC  ECC6  F00F         	call	_draw_char
  3412   0010F0  0E20               	movlw	32
  3413   0010F2  ECC6  F00F         	call	_draw_char
  3414   0010F6  0E56               	movlw	86
  3415   0010F8  ECC6  F00F         	call	_draw_char
  3416   0010FC  0E20               	movlw	32
  3417   0010FE  ECC6  F00F         	call	_draw_char
  3418   001102  0E42               	movlw	66
  3419   001104  ECC6  F00F         	call	_draw_char
  3420                           
  3421                           ;T1.c: 24: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3422   001108  0E22               	movlw	34
  3423   00110A  6E09               	movwf	goto_lico@colonne^0,c
  3424   00110C  0E0E               	movlw	14
  3425   00110E  EC7B  F00E         	call	_goto_lico
  3426   001112  0E30               	movlw	48
  3427   001114  ECC6  F00F         	call	_draw_char
  3428   001118  0E20               	movlw	32
  3429   00111A  ECC6  F00F         	call	_draw_char
  3430   00111E  0E30               	movlw	48
  3431   001120  ECC6  F00F         	call	_draw_char
  3432   001124  0E20               	movlw	32
  3433   001126  ECC6  F00F         	call	_draw_char
  3434   00112A  0E30               	movlw	48
  3435   00112C  ECC6  F00F         	call	_draw_char
  3436                           
  3437                           ;T1.c: 25: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3438   001130  0E22               	movlw	34
  3439   001132  6E09               	movwf	goto_lico@colonne^0,c
  3440   001134  0E0F               	movlw	15
  3441   001136  EC7B  F00E         	call	_goto_lico
  3442   00113A  0E31               	movlw	49
  3443   00113C  ECC6  F00F         	call	_draw_char
  3444   001140  0E20               	movlw	32
  3445   001142  ECC6  F00F         	call	_draw_char
  3446   001146  0E31               	movlw	49
  3447   001148  ECC6  F00F         	call	_draw_char
  3448   00114C  0E20               	movlw	32
  3449   00114E  ECC6  F00F         	call	_draw_char
  3450   001152  0E31               	movlw	49
  3451   001154  ECC6  F00F         	call	_draw_char
  3452                           
  3453                           ;T1.c: 27: TP_appui=0;
  3454   001158  0E00               	movlw	0
  3455   00115A  0100               	movlb	0	; () banked
  3456   00115C  6F66               	movwf	102,b
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;T1.c: 28: draw_square(90,30,190,90);
  3460   00115E  0E1E               	movlw	30
  3461   001160  6E0F               	movwf	draw_square@y1^0,c
  3462   001162  0EBE               	movlw	190
  3463   001164  6E10               	movwf	draw_square@x2^0,c
  3464   001166  0E5A               	movlw	90
  3465   001168  6E11               	movwf	draw_square@y2^0,c
  3466   00116A  0E5A               	movlw	90
  3467   00116C  EC4C  F00F         	call	_draw_square
  3468                           
  3469                           ;T1.c: 29: draw_filled_square(90,30,190,90);
  3470   001170  0E1E               	movlw	30
  3471   001172  6E0F               	movwf	draw_filled_square@y1^0,c
  3472   001174  0EBE               	movlw	190
  3473   001176  6E10               	movwf	draw_filled_square@x2^0,c
  3474   001178  0E5A               	movlw	90
  3475   00117A  6E11               	movwf	draw_filled_square@y2^0,c
  3476   00117C  0E5A               	movlw	90
  3477   00117E  EC0F  F010         	call	_draw_filled_square
  3478   001182                     i2l4495:
  3479                           
  3480                           ;T1.c: 32: {;T1.c: 34: goto_lico(0,0);
  3481   001182  0E00               	movlw	0
  3482   001184  6E09               	movwf	goto_lico@colonne^0,c
  3483   001186  0E00               	movlw	0
  3484   001188  EC7B  F00E         	call	_goto_lico
  3485                           
  3486                           ;T1.c: 35: draw_string("Marche:");
  3487   00118C  0E6C               	movlw	low STR_1
  3488   00118E  6E08               	movwf	draw_string@tableau^0,c
  3489   001190  0E10               	movlw	high STR_1
  3490   001192  6E09               	movwf	(draw_string@tableau+1)^0,c
  3491   001194  ECA7  F00E         	call	_draw_string	;wreg free
  3492                           
  3493                           ;T1.c: 36: if (PORTBbits.RB0==0)
  3494   001198  B081               	btfsc	129,0,c	;volatile
  3495   00119A  D007               	goto	i2l410
  3496                           
  3497                           ;T1.c: 37: draw_string("AV");
  3498   00119C  0EA3               	movlw	low STR_2
  3499   00119E  6E08               	movwf	draw_string@tableau^0,c
  3500   0011A0  0E10               	movlw	high STR_2
  3501   0011A2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3502   0011A4  ECA7  F00E         	call	_draw_string	;wreg free
  3503   0011A8  D00F               	goto	i2l4507
  3504   0011AA                     i2l410:
  3505                           
  3506                           ;T1.c: 38: else;T1.c: 39: if (PORTBbits.RB1==0)
  3507   0011AA  B281               	btfsc	129,1,c	;volatile
  3508   0011AC  D007               	goto	i2l4505
  3509                           
  3510                           ;T1.c: 40: draw_string("AR");
  3511   0011AE  0EA0               	movlw	low STR_3
  3512   0011B0  6E08               	movwf	draw_string@tableau^0,c
  3513   0011B2  0E10               	movlw	high STR_3
  3514   0011B4  6E09               	movwf	(draw_string@tableau+1)^0,c
  3515   0011B6  ECA7  F00E         	call	_draw_string	;wreg free
  3516   0011BA  D006               	goto	i2l4507
  3517   0011BC                     i2l4505:
  3518                           
  3519                           ;T1.c: 41: else;T1.c: 42: draw_string("N ");
  3520   0011BC  0E9A               	movlw	low STR_4
  3521   0011BE  6E08               	movwf	draw_string@tableau^0,c
  3522   0011C0  0E10               	movlw	high STR_4
  3523   0011C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3524   0011C4  ECA7  F00E         	call	_draw_string	;wreg free
  3525   0011C8                     i2l4507:
  3526                           
  3527                           ;T1.c: 44: goto_lico(1,0);
  3528   0011C8  0E00               	movlw	0
  3529   0011CA  6E09               	movwf	goto_lico@colonne^0,c
  3530   0011CC  0E01               	movlw	1
  3531   0011CE  EC7B  F00E         	call	_goto_lico
  3532                           
  3533                           ;T1.c: 45: draw_string("Siege:");
  3534   0011D2  0E83               	movlw	low STR_5
  3535   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3536   0011D6  0E10               	movlw	high STR_5
  3537   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3538   0011DA  ECA7  F00E         	call	_draw_string	;wreg free
  3539                           
  3540                           ;T1.c: 46: if (PORTBbits.RB2==0)
  3541   0011DE  B481               	btfsc	129,2,c	;volatile
  3542   0011E0  D004               	goto	i2l4515
  3543                           
  3544                           ;T1.c: 47: {draw_char('1');}
  3545   0011E2  0E31               	movlw	49
  3546   0011E4  ECC6  F00F         	call	_draw_char
  3547   0011E8  D003               	goto	i2l4517
  3548   0011EA                     i2l4515:
  3549                           
  3550                           ;T1.c: 48: else;T1.c: 49: {draw_char('0');}
  3551   0011EA  0E30               	movlw	48
  3552   0011EC  ECC6  F00F         	call	_draw_char
  3553   0011F0                     i2l4517:
  3554                           
  3555                           ;T1.c: 51: goto_lico(2,0);
  3556   0011F0  0E00               	movlw	0
  3557   0011F2  6E09               	movwf	goto_lico@colonne^0,c
  3558   0011F4  0E02               	movlw	2
  3559   0011F6  EC7B  F00E         	call	_goto_lico
  3560                           
  3561                           ;T1.c: 52: draw_string("Temp. Eau:");
  3562   0011FA  0E4E               	movlw	low STR_6
  3563   0011FC  6E08               	movwf	draw_string@tableau^0,c
  3564   0011FE  0E10               	movlw	high STR_6
  3565   001200  6E09               	movwf	(draw_string@tableau+1)^0,c
  3566   001202  ECA7  F00E         	call	_draw_string	;wreg free
  3567                           
  3568                           ;T1.c: 53: draw_hex8(lecture_8bit_analogique(2));
  3569   001206  0E02               	movlw	2
  3570   001208  ECAB  F00F         	call	_lecture_8bit_analogique
  3571   00120C  EC4D  F00E         	call	_draw_hex8
  3572                           
  3573                           ;T1.c: 55: goto_lico(3,0);
  3574   001210  0E00               	movlw	0
  3575   001212  6E09               	movwf	goto_lico@colonne^0,c
  3576   001214  0E03               	movlw	3
  3577   001216  EC7B  F00E         	call	_goto_lico
  3578                           
  3579                           ;T1.c: 56: draw_string("Temp. Huile:");
  3580   00121A  0E29               	movlw	low STR_7
  3581   00121C  6E08               	movwf	draw_string@tableau^0,c
  3582   00121E  0E10               	movlw	high STR_7
  3583   001220  6E09               	movwf	(draw_string@tableau+1)^0,c
  3584   001222  ECA7  F00E         	call	_draw_string	;wreg free
  3585                           
  3586                           ;T1.c: 57: draw_hex8(lecture_8bit_analogique(3));
  3587   001226  0E03               	movlw	3
  3588   001228  ECAB  F00F         	call	_lecture_8bit_analogique
  3589   00122C  EC4D  F00E         	call	_draw_hex8
  3590                           
  3591                           ;T1.c: 59: goto_lico(4,0);
  3592   001230  0E00               	movlw	0
  3593   001232  6E09               	movwf	goto_lico@colonne^0,c
  3594   001234  0E04               	movlw	4
  3595   001236  EC7B  F00E         	call	_goto_lico
  3596                           
  3597                           ;T1.c: 60: draw_string("Choc:");
  3598   00123A  0E90               	movlw	low STR_8
  3599   00123C  6E08               	movwf	draw_string@tableau^0,c
  3600   00123E  0E10               	movlw	high STR_8
  3601   001240  6E09               	movwf	(draw_string@tableau+1)^0,c
  3602   001242  ECA7  F00E         	call	_draw_string	;wreg free
  3603                           
  3604                           ;T1.c: 61: if (PORTBbits.RB3==0)
  3605   001246  B681               	btfsc	129,3,c	;volatile
  3606   001248  D004               	goto	i2l4535
  3607                           
  3608                           ;T1.c: 62: draw_char('1');
  3609   00124A  0E31               	movlw	49
  3610   00124C  ECC6  F00F         	call	_draw_char
  3611   001250  D003               	goto	i2l4537
  3612   001252                     i2l4535:
  3613                           
  3614                           ;T1.c: 63: else;T1.c: 64: draw_char('0');
  3615   001252  0E30               	movlw	48
  3616   001254  ECC6  F00F         	call	_draw_char
  3617   001258                     i2l4537:
  3618                           
  3619                           ;T1.c: 66: goto_lico(5,0);
  3620   001258  0E00               	movlw	0
  3621   00125A  6E09               	movwf	goto_lico@colonne^0,c
  3622   00125C  0E05               	movlw	5
  3623   00125E  EC7B  F00E         	call	_goto_lico
  3624                           
  3625                           ;T1.c: 67: draw_string("Vitesse:");
  3626   001262  0E63               	movlw	low STR_9
  3627   001264  6E08               	movwf	draw_string@tableau^0,c
  3628   001266  0E10               	movlw	high STR_9
  3629   001268  6E09               	movwf	(draw_string@tableau+1)^0,c
  3630   00126A  ECA7  F00E         	call	_draw_string	;wreg free
  3631                           
  3632                           ;T1.c: 68: if (PORTEbits.RE0==0)
  3633   00126E  B084               	btfsc	132,0,c	;volatile
  3634   001270  D002               	goto	i2l4545
  3635                           
  3636                           ;T1.c: 69: vitesse++;
  3637   001272  0100               	movlb	0	; () banked
  3638   001274  2B73               	incf	115,f,b
  3639   001276                     i2l4545:
  3640                           
  3641                           ;T1.c: 70: if (PORTEbits.RE1==0)
  3642   001276  B284               	btfsc	132,1,c	;volatile
  3643   001278  D002               	goto	i2l4549
  3644                           
  3645                           ;T1.c: 71: vitesse--;
  3646   00127A  0100               	movlb	0	; () banked
  3647   00127C  0773               	decf	115,f,b
  3648   00127E                     i2l4549:
  3649                           
  3650                           ;T1.c: 72: draw_hex8(vitesse);
  3651   00127E  0100               	movlb	0	; () banked
  3652   001280  5173               	movf	115,w,b
  3653   001282  EC4D  F00E         	call	_draw_hex8
  3654                           
  3655                           ;T1.c: 74: goto_lico(6,0);
  3656   001286  0E00               	movlw	0
  3657   001288  6E09               	movwf	goto_lico@colonne^0,c
  3658   00128A  0E06               	movlw	6
  3659   00128C  EC7B  F00E         	call	_goto_lico
  3660                           
  3661                           ;T1.c: 75: draw_string("Batterie:");
  3662   001290  0E59               	movlw	low STR_10
  3663   001292  6E08               	movwf	draw_string@tableau^0,c
  3664   001294  0E10               	movlw	high STR_10
  3665   001296  6E09               	movwf	(draw_string@tableau+1)^0,c
  3666   001298  ECA7  F00E         	call	_draw_string	;wreg free
  3667                           
  3668                           ;T1.c: 76: if (PORTEbits.RE2==0)
  3669   00129C  B484               	btfsc	132,2,c	;volatile
  3670   00129E  D002               	goto	i2l4559
  3671                           
  3672                           ;T1.c: 77: batterie++;
  3673   0012A0  0100               	movlb	0	; () banked
  3674   0012A2  2B74               	incf	116,f,b
  3675   0012A4                     i2l4559:
  3676                           
  3677                           ;T1.c: 78: if (PORTEbits.RE3==0)
  3678   0012A4  B684               	btfsc	132,3,c	;volatile
  3679   0012A6  D002               	goto	i2l4563
  3680                           
  3681                           ;T1.c: 79: batterie--;
  3682   0012A8  0100               	movlb	0	; () banked
  3683   0012AA  0774               	decf	116,f,b
  3684   0012AC                     i2l4563:
  3685                           
  3686                           ;T1.c: 80: draw_hex8(batterie);
  3687   0012AC  0100               	movlb	0	; () banked
  3688   0012AE  5174               	movf	116,w,b
  3689   0012B0  EC4D  F00E         	call	_draw_hex8
  3690                           
  3691                           ;T1.c: 82: goto_lico(7,0);
  3692   0012B4  0E00               	movlw	0
  3693   0012B6  6E09               	movwf	goto_lico@colonne^0,c
  3694   0012B8  0E07               	movlw	7
  3695   0012BA  EC7B  F00E         	call	_goto_lico
  3696                           
  3697                           ;T1.c: 83: if (PORTEbits.RE4==0)
  3698   0012BE  B884               	btfsc	132,4,c	;volatile
  3699   0012C0  D007               	goto	i2l4571
  3700                           
  3701                           ;T1.c: 84: draw_string("((!))");
  3702   0012C2  0E8A               	movlw	low STR_11
  3703   0012C4  6E08               	movwf	draw_string@tableau^0,c
  3704   0012C6  0E10               	movlw	high STR_11
  3705   0012C8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3706   0012CA  ECA7  F00E         	call	_draw_string	;wreg free
  3707   0012CE  D006               	goto	i2l4573
  3708   0012D0                     i2l4571:
  3709                           
  3710                           ;T1.c: 85: else;T1.c: 86: draw_string("     ");
  3711   0012D0  0E10               	movlw	low (STR_14+15)
  3712   0012D2  6E08               	movwf	draw_string@tableau^0,c
  3713   0012D4  0E10               	movlw	high (STR_14+15)
  3714   0012D6  6E09               	movwf	(draw_string@tableau+1)^0,c
  3715   0012D8  ECA7  F00E         	call	_draw_string	;wreg free
  3716   0012DC                     i2l4573:
  3717                           
  3718                           ;T1.c: 88: goto_lico(8,0);
  3719   0012DC  0E00               	movlw	0
  3720   0012DE  6E09               	movwf	goto_lico@colonne^0,c
  3721   0012E0  0E08               	movlw	8
  3722   0012E2  EC7B  F00E         	call	_goto_lico
  3723                           
  3724                           ;T1.c: 89: draw_string("Badge:");
  3725   0012E6  0E7C               	movlw	low STR_13
  3726   0012E8  6E08               	movwf	draw_string@tableau^0,c
  3727   0012EA  0E10               	movlw	high STR_13
  3728   0012EC  6E09               	movwf	(draw_string@tableau+1)^0,c
  3729   0012EE  ECA7  F00E         	call	_draw_string	;wreg free
  3730                           
  3731                           ;T1.c: 90: if (n_octet_badge==0)
  3732   0012F2  0100               	movlb	0	; () banked
  3733   0012F4  517F               	movf	127,w,b
  3734   0012F6  A4D8               	btfss	status,2,c
  3735   0012F8  D007               	goto	i2l4581
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;T1.c: 91: draw_string(" AUCUN              ");
  3739   0012FA  0E01               	movlw	low STR_14
  3740   0012FC  6E08               	movwf	draw_string@tableau^0,c
  3741   0012FE  0E10               	movlw	high STR_14
  3742   001300  6E09               	movwf	(draw_string@tableau+1)^0,c
  3743   001302  ECA7  F00E         	call	_draw_string	;wreg free
  3744   001306  D012               	goto	i2u238_40
  3745   001308                     i2l4581:
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;T1.c: 92: else;T1.c: 93: {;T1.c: 94: for (i=0;i<n_octet_badge;i++)
  3749   001308  0E00               	movlw	0
  3750   00130A  6E15               	movwf	tache1@i^0,c
  3751   00130C  D00A               	goto	i2l4587
  3752   00130E                     i2l4583:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;T1.c: 95: {;T1.c: 96: draw_hex8(badge[i]);
  3756   00130E  0E75               	movlw	117
  3757   001310  2415               	addwf	tache1@i^0,w,c
  3758   001312  6ED9               	movwf	fsr2l,c
  3759   001314  6ADA               	clrf	fsr2h,c
  3760   001316  0E00               	movlw	0
  3761   001318  22DA               	addwfc	fsr2h,f,c
  3762   00131A  50DF               	movf	indf2,w,c
  3763   00131C  EC4D  F00E         	call	_draw_hex8
  3764   001320  2A15               	incf	tache1@i^0,f,c
  3765   001322                     i2l4587:
  3766   001322  0100               	movlb	0	; () banked
  3767   001324  517F               	movf	127,w,b
  3768   001326  5C15               	subwf	tache1@i^0,w,c
  3769   001328  A0D8               	btfss	status,0,c
  3770   00132A  D7F1               	goto	i2l4583
  3771   00132C                     i2u238_40:
  3772                           
  3773                           ;T1.c: 97: };T1.c: 98: };T1.c: 100: goto_lico(9,0);
  3774   00132C  0E00               	movlw	0
  3775   00132E  6E09               	movwf	goto_lico@colonne^0,c
  3776   001330  0E09               	movlw	9
  3777   001332  EC7B  F00E         	call	_goto_lico
  3778                           
  3779                           ;T1.c: 101: draw_string("X-Joystick:");
  3780   001336  0E36               	movlw	low STR_15
  3781   001338  6E08               	movwf	draw_string@tableau^0,c
  3782   00133A  0E10               	movlw	high STR_15
  3783   00133C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3784   00133E  ECA7  F00E         	call	_draw_string	;wreg free
  3785                           
  3786                           ;T1.c: 102: draw_hex8(lecture_8bit_analogique(10));
  3787   001342  0E0A               	movlw	10
  3788   001344  ECAB  F00F         	call	_lecture_8bit_analogique
  3789   001348  EC4D  F00E         	call	_draw_hex8
  3790                           
  3791                           ;T1.c: 104: goto_lico(10,0);
  3792   00134C  0E00               	movlw	0
  3793   00134E  6E09               	movwf	goto_lico@colonne^0,c
  3794   001350  0E0A               	movlw	10
  3795   001352  EC7B  F00E         	call	_goto_lico
  3796                           
  3797                           ;T1.c: 105: draw_string("Y-Joystick:");
  3798   001356  0E42               	movlw	low STR_16
  3799   001358  6E08               	movwf	draw_string@tableau^0,c
  3800   00135A  0E10               	movlw	high STR_16
  3801   00135C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3802   00135E  ECA7  F00E         	call	_draw_string	;wreg free
  3803                           
  3804                           ;T1.c: 106: draw_hex8(lecture_8bit_analogique(11));
  3805   001362  0E0B               	movlw	11
  3806   001364  ECAB  F00F         	call	_lecture_8bit_analogique
  3807   001368  EC4D  F00E         	call	_draw_hex8
  3808                           
  3809                           ;T1.c: 108: goto_lico(13,0);
  3810   00136C  0E00               	movlw	0
  3811   00136E  6E09               	movwf	goto_lico@colonne^0,c
  3812   001370  0E0D               	movlw	13
  3813   001372  EC7B  F00E         	call	_goto_lico
  3814                           
  3815                           ;T1.c: 109: draw_string("BIG MUM");
  3816   001376  0E74               	movlw	low STR_17
  3817   001378  6E08               	movwf	draw_string@tableau^0,c
  3818   00137A  0E10               	movlw	high STR_17
  3819   00137C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3820   00137E  ECA7  F00E         	call	_draw_string	;wreg free
  3821                           
  3822                           ;T1.c: 114: if (TP_appui==1)
  3823   001382  0100               	movlb	0	; () banked
  3824   001384  0566               	decf	102,w,b
  3825   001386  A4D8               	btfss	status,2,c
  3826   001388  D023               	goto	i2l4619
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;T1.c: 115: {;T1.c: 116: if((TP_x>=50)&&(TP_x<150))
  3830   00138A  0E31               	movlw	49
  3831   00138C  6567               	cpfsgt	103,b
  3832   00138E  D018               	goto	i2l4617
  3833                           
  3834                           ; BSR set to: 0
  3835   001390  0E96               	movlw	150
  3836   001392  6167               	cpfslt	103,b
  3837   001394  D015               	goto	i2l4617
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;T1.c: 117: {;T1.c: 118: if ((TP_y>=10)&&(TP_y<50))
  3841   001396  0E09               	movlw	9
  3842   001398  6568               	cpfsgt	104,b
  3843   00139A  D01A               	goto	i2l4619
  3844                           
  3845                           ; BSR set to: 0
  3846   00139C  0E32               	movlw	50
  3847   00139E  6168               	cpfslt	104,b
  3848   0013A0  D017               	goto	i2l4619
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;T1.c: 119: {;T1.c: 121: clear_line(14);
  3852   0013A2  0E0E               	movlw	14
  3853   0013A4  EC83  F010         	call	_clear_line
  3854                           
  3855                           ;T1.c: 122: goto_lico(14,0);
  3856   0013A8  0E00               	movlw	0
  3857   0013AA  6E09               	movwf	goto_lico@colonne^0,c
  3858   0013AC  0E0E               	movlw	14
  3859   0013AE  EC7B  F00E         	call	_goto_lico
  3860                           
  3861                           ;T1.c: 123: draw_string("LUFFY             ");
  3862   0013B2  0E16               	movlw	low STR_18
  3863   0013B4  6E08               	movwf	draw_string@tableau^0,c
  3864   0013B6  0E10               	movlw	high STR_18
  3865   0013B8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3866   0013BA  ECA7  F00E         	call	_draw_string	;wreg free
  3867   0013BE  D008               	goto	i2l4619
  3868   0013C0                     i2l4617:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;T1.c: 127: {;T1.c: 129: clear_line(14);
  3872   0013C0  0E0E               	movlw	14
  3873   0013C2  EC83  F010         	call	_clear_line
  3874                           
  3875                           ;T1.c: 130: goto_lico(14,0);
  3876   0013C6  0E00               	movlw	0
  3877   0013C8  6E09               	movwf	goto_lico@colonne^0,c
  3878   0013CA  0E0E               	movlw	14
  3879   0013CC  EC7B  F00E         	call	_goto_lico
  3880   0013D0                     i2l4619:
  3881                           
  3882                           ;T1.c: 133: };T1.c: 134: };T1.c: 139: if (TP_appui==1)
  3883   0013D0  0100               	movlb	0	; () banked
  3884   0013D2  0566               	decf	102,w,b
  3885   0013D4  A4D8               	btfss	status,2,c
  3886   0013D6  D020               	goto	i2l433
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;T1.c: 140: {;T1.c: 141: goto_lico(0,20);
  3890   0013D8  0E14               	movlw	20
  3891   0013DA  6E09               	movwf	goto_lico@colonne^0,c
  3892   0013DC  0E00               	movlw	0
  3893   0013DE  EC7B  F00E         	call	_goto_lico
  3894                           
  3895                           ;T1.c: 142: draw_string("x=");
  3896   0013E2  0E9D               	movlw	low STR_19
  3897   0013E4  6E08               	movwf	draw_string@tableau^0,c
  3898   0013E6  0E10               	movlw	high STR_19
  3899   0013E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3900   0013EA  ECA7  F00E         	call	_draw_string	;wreg free
  3901                           
  3902                           ;T1.c: 143: draw_hex8(TP_x);
  3903   0013EE  0100               	movlb	0	; () banked
  3904   0013F0  5167               	movf	103,w,b
  3905   0013F2  EC4D  F00E         	call	_draw_hex8
  3906                           
  3907                           ;T1.c: 144: draw_string(" y=");
  3908   0013F6  0E96               	movlw	low STR_20
  3909   0013F8  6E08               	movwf	draw_string@tableau^0,c
  3910   0013FA  0E10               	movlw	high STR_20
  3911   0013FC  6E09               	movwf	(draw_string@tableau+1)^0,c
  3912   0013FE  ECA7  F00E         	call	_draw_string	;wreg free
  3913                           
  3914                           ;T1.c: 145: draw_hex8(TP_y);
  3915   001402  0100               	movlb	0	; () banked
  3916   001404  5168               	movf	104,w,b
  3917   001406  EC4D  F00E         	call	_draw_hex8
  3918                           
  3919                           ;T1.c: 146: plot1(TP_x,TP_y);
  3920   00140A  C068 F009          	movff	104,plot1@y
  3921   00140E  0100               	movlb	0	; () banked
  3922   001410  5167               	movf	103,w,b
  3923   001412  ECE4  F00C         	call	_plot1
  3924                           
  3925                           ;T1.c: 147: }
  3926   001416  D6B5               	goto	i2l4495
  3927   001418                     i2l433:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;T1.c: 148: else;T1.c: 149: {;T1.c: 150: __nop();
  3931   001418  F000               	nop	
  3932   00141A  D6B3               	goto	i2l4495
  3933   00141C                     __end_of_tache1:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function _lecture_8bit_analogique *****************
  3937 ;; Defined at:
  3938 ;;		line 60 in file "main.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  channel         1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  channel         1    1[COMRAM] unsigned char 
  3943 ;;  ret             1    0[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      unsigned char 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:        2 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_tache1
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text15
  3967   001F56                     __ptext15:
  3968                           	callstack 0
  3969   001F56                     _lecture_8bit_analogique:
  3970                           	callstack 27
  3971                           
  3972                           ;incstack = 0
  3973                           ;lecture_8bit_analogique@channel stored from wreg
  3974   001F56  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  3975                           
  3976                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  3977   001F58  0E00               	movlw	0
  3978   001F5A  6EC1               	movwf	193,c	;volatile
  3979                           
  3980                           ;main.c: 66: ADCON2=0x16;
  3981   001F5C  0E16               	movlw	22
  3982   001F5E  6EC0               	movwf	192,c	;volatile
  3983                           
  3984                           ;main.c: 67: channel=channel&0x1F;
  3985   001F60  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  3986   001F62  0B1F               	andlw	31
  3987   001F64  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  3988                           
  3989                           ;main.c: 68: channel=channel<<2;
  3990   001F66  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  3991   001F68  46E8               	rlncf	wreg,f,c
  3992   001F6A  0BFC               	andlw	252
  3993   001F6C  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  3994                           
  3995                           ;main.c: 69: ADCON0=channel|0x01;
  3996   001F6E  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  3997   001F70  0901               	iorlw	1
  3998   001F72  6EC2               	movwf	194,c	;volatile
  3999                           
  4000                           ;main.c: 71: ADCON0bits.GO=1;
  4001   001F74  82C2               	bsf	194,1,c	;volatile
  4002   001F76                     i2l138:
  4003   001F76  B2C2               	btfsc	194,1,c	;volatile
  4004   001F78  D7FE               	goto	i2l138
  4005                           
  4006                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4007   001F7A  A0C3               	btfss	195,0,c	;volatile
  4008   001F7C  D003               	goto	i2l141
  4009                           
  4010                           ;main.c: 76: ret=0;
  4011   001F7E  0E00               	movlw	0
  4012   001F80  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4013   001F82  D002               	goto	i2l2679
  4014   001F84                     i2l141:
  4015                           
  4016                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4017   001F84  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4018   001F88                     i2l2679:
  4019                           
  4020                           ;main.c: 82: return ret;
  4021   001F88  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4022   001F8A  0012               	return		;funcret
  4023   001F8C                     __end_of_lecture_8bit_analogique:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _initialisation_afficheur *****************
  4027 ;; Defined at:
  4028 ;;		line 164 in file "afficheur.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  error_count     1    8[COMRAM] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        1 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 3
  4049 ;; This function calls:
  4050 ;;		_check_status_ok
  4051 ;;		_command
  4052 ;;		_d1command
  4053 ;;		_d2command
  4054 ;;		_delai_us_char
  4055 ;; This function is called by:
  4056 ;;		_tache1
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text16
  4061   0018FC                     __ptext16:
  4062                           	callstack 0
  4063   0018FC                     _initialisation_afficheur:
  4064                           	callstack 24
  4065                           
  4066                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4067                           
  4068                           ;incstack = 0
  4069   0018FC  0E00               	movlw	0
  4070   0018FE  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4071                           
  4072                           ;afficheur.c: 172: LATH=0;
  4073   001900  0E00               	movlw	0
  4074   001902  6E90               	movwf	144,c	;volatile
  4075                           
  4076                           ;afficheur.c: 173: LATJ=0x1F;
  4077   001904  0E1F               	movlw	31
  4078   001906  6E91               	movwf	145,c	;volatile
  4079                           
  4080                           ;afficheur.c: 176: TRISH=0;
  4081   001908  0E00               	movlw	0
  4082   00190A  6E99               	movwf	153,c	;volatile
  4083                           
  4084                           ;afficheur.c: 177: TRISJ=0;
  4085   00190C  0E00               	movlw	0
  4086   00190E  6E9A               	movwf	154,c	;volatile
  4087                           
  4088                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4089   001910  9A91               	bcf	145,5,c	;volatile
  4090                           
  4091                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4092   001912  8C91               	bsf	145,6,c	;volatile
  4093                           
  4094                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4095   001914  9891               	bcf	145,4,c	;volatile
  4096                           
  4097                           ;afficheur.c: 185: delai_us_char(4);
  4098   001916  0E04               	movlw	4
  4099   001918  EC72  F010         	call	_delai_us_char
  4100                           
  4101                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4102   00191C  8891               	bsf	145,4,c	;volatile
  4103                           
  4104                           ;afficheur.c: 190: delai_us_char(12);
  4105   00191E  0E0C               	movlw	12
  4106   001920  EC72  F010         	call	_delai_us_char
  4107                           
  4108                           ;afficheur.c: 191: while(check_status_ok()==00)
  4109   001924  D00C               	goto	i2l4121
  4110   001926                     i2l4111:
  4111                           
  4112                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4113   001926  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4114                           
  4115                           ;afficheur.c: 194: delai_us_char(12);
  4116   001928  0E0C               	movlw	12
  4117   00192A  EC72  F010         	call	_delai_us_char
  4118                           
  4119                           ;afficheur.c: 195: if (error_count>200)
  4120   00192E  0EC8               	movlw	200
  4121   001930  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4122   001932  D005               	goto	i2l4121
  4123                           
  4124                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4125   001934  828B               	bsf	139,1,c	;volatile
  4126   001936  808F               	bsf	143,0,c	;volatile
  4127   001938  948B               	bcf	139,2,c	;volatile
  4128                           
  4129                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4130   00193A  9EF2               	bcf	242,7,c	;volatile
  4131   00193C                     i2l1226:
  4132   00193C  D7FF               	goto	i2l1226
  4133   00193E                     i2l4121:
  4134   00193E  EC26  F010         	call	_check_status_ok	;wreg free
  4135   001942  0900               	iorlw	0
  4136   001944  B4D8               	btfsc	status,2,c
  4137   001946  D7EF               	goto	i2l4111
  4138                           
  4139                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4140   001948  0E0F               	movlw	15
  4141   00194A  6E05               	movwf	d2command@d2^0,c
  4142   00194C  0E21               	movlw	33
  4143   00194E  6E06               	movwf	d2command@cmd^0,c
  4144   001950  0E27               	movlw	39
  4145   001952  EC24  F00F         	call	_d2command
  4146                           
  4147                           ;afficheur.c: 206: d2command(0,0,0x22);
  4148   001956  0E00               	movlw	0
  4149   001958  6E05               	movwf	d2command@d2^0,c
  4150   00195A  0E22               	movlw	34
  4151   00195C  6E06               	movwf	d2command@cmd^0,c
  4152   00195E  0E00               	movlw	0
  4153   001960  EC24  F00F         	call	_d2command
  4154                           
  4155                           ;afficheur.c: 207: d2command(0,0,0x24);
  4156   001964  0E00               	movlw	0
  4157   001966  6E05               	movwf	d2command@d2^0,c
  4158   001968  0E24               	movlw	36
  4159   00196A  6E06               	movwf	d2command@cmd^0,c
  4160   00196C  0E00               	movlw	0
  4161   00196E  EC24  F00F         	call	_d2command
  4162                           
  4163                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4164   001972  0E7B               	movlw	123
  4165   001974  6E05               	movwf	d2command@d2^0,c
  4166   001976  0E40               	movlw	64
  4167   001978  6E06               	movwf	d2command@cmd^0,c
  4168   00197A  0E00               	movlw	0
  4169   00197C  EC24  F00F         	call	_d2command
  4170                           
  4171                           ;afficheur.c: 211: d2command(40,0,0x41);
  4172   001980  0E00               	movlw	0
  4173   001982  6E05               	movwf	d2command@d2^0,c
  4174   001984  0E41               	movlw	65
  4175   001986  6E06               	movwf	d2command@cmd^0,c
  4176   001988  0E28               	movlw	40
  4177   00198A  EC24  F00F         	call	_d2command
  4178                           
  4179                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4180   00198E  0E80               	movlw	128
  4181   001990  6E05               	movwf	d2command@d2^0,c
  4182   001992  0E42               	movlw	66
  4183   001994  6E06               	movwf	d2command@cmd^0,c
  4184   001996  0E00               	movlw	0
  4185   001998  EC24  F00F         	call	_d2command
  4186                           
  4187                           ;afficheur.c: 213: d2command(40,0,0x43);
  4188   00199C  0E00               	movlw	0
  4189   00199E  6E05               	movwf	d2command@d2^0,c
  4190   0019A0  0E43               	movlw	67
  4191   0019A2  6E06               	movwf	d2command@cmd^0,c
  4192   0019A4  0E28               	movlw	40
  4193   0019A6  EC24  F00F         	call	_d2command
  4194                           
  4195                           ;afficheur.c: 216: command(0x80);
  4196   0019AA  0E80               	movlw	128
  4197   0019AC  ECA0  F010         	call	_command
  4198                           
  4199                           ;afficheur.c: 219: command(0x9C);
  4200   0019B0  0E9C               	movlw	156
  4201   0019B2  ECA0  F010         	call	_command
  4202                           
  4203                           ;afficheur.c: 222: command(0xA0);
  4204   0019B6  0EA0               	movlw	160
  4205   0019B8  ECA0  F010         	call	_command
  4206                           
  4207                           ;afficheur.c: 225: d1command(0x02,0x70);
  4208   0019BC  0E70               	movlw	112
  4209   0019BE  6E05               	movwf	d1command@cmd^0,c
  4210   0019C0  0E02               	movlw	2
  4211   0019C2  EC72  F00F         	call	_d1command
  4212   0019C6  0012               	return		;funcret
  4213   0019C8                     __end_of_initialisation_afficheur:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _check_status_ok *****************
  4217 ;; Defined at:
  4218 ;;		line 30 in file "afficheur.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  res             1    0[COMRAM] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;Total ram usage:        1 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; This function calls:
  4239 ;;		Nothing
  4240 ;; This function is called by:
  4241 ;;		_initialisation_afficheur
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text17
  4246   00204C                     __ptext17:
  4247                           	callstack 0
  4248   00204C                     _check_status_ok:
  4249                           	callstack 26
  4250                           
  4251                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4252                           
  4253                           ;incstack = 0
  4254   00204C  6899               	setf	153,c	;volatile
  4255                           
  4256                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4257   00204E  8091               	bsf	145,0,c	;volatile
  4258                           
  4259                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4260   002050  9691               	bcf	145,3,c	;volatile
  4261                           
  4262                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4263   002052  9291               	bcf	145,1,c	;volatile
  4264                           
  4265                           ;afficheur.c: 39: __nop();
  4266   002054  F000               	nop	
  4267                           
  4268                           ;afficheur.c: 40: __nop();
  4269   002056  F000               	nop	
  4270                           
  4271                           ;afficheur.c: 41: __nop();
  4272   002058  F000               	nop	
  4273                           
  4274                           ;afficheur.c: 42: res=PORTH;
  4275   00205A  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4276                           
  4277                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4278   00205E  8291               	bsf	145,1,c	;volatile
  4279                           
  4280                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4281   002060  8691               	bsf	145,3,c	;volatile
  4282                           
  4283                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4284   002062  5001               	movf	check_status_ok@res^0,w,c
  4285   002064  0B03               	andlw	3
  4286   002066  0A03               	xorlw	3
  4287   002068  A4D8               	btfss	status,2,c
  4288   00206A  D002               	goto	i2l2649
  4289                           
  4290                           ;afficheur.c: 47: res=1;
  4291   00206C  0E01               	movlw	1
  4292   00206E  D001               	goto	L2
  4293   002070                     i2l2649:
  4294                           
  4295                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4296   002070  0E00               	movlw	0
  4297   002072                     L2:
  4298   002072  6E01               	movwf	check_status_ok@res^0,c
  4299                           
  4300                           ;afficheur.c: 50: return res;
  4301   002074  5001               	movf	check_status_ok@res^0,w,c
  4302   002076  0012               	return		;funcret
  4303   002078                     __end_of_check_status_ok:
  4304                           	callstack 0
  4305                           
  4306 ;; *************** function _init_rxtx *****************
  4307 ;; Defined at:
  4308 ;;		line 4 in file "rxtx.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;Total ram usage:        0 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_tache1
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text18
  4336   0020C2                     __ptext18:
  4337                           	callstack 0
  4338   0020C2                     _init_rxtx:
  4339                           	callstack 27
  4340                           
  4341                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4342                           
  4343                           ;incstack = 0
  4344   0020C2  9C94               	bcf	148,6,c	;volatile
  4345                           
  4346                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4347   0020C4  8E94               	bsf	148,7,c	;volatile
  4348                           
  4349                           ;rxtx.c: 8: BAUDCON1=0x08;
  4350   0020C6  0E08               	movlw	8
  4351   0020C8  6E65               	movwf	101,c	;volatile
  4352                           
  4353                           ;rxtx.c: 9: SPBRGH1=0x04;
  4354   0020CA  0E04               	movlw	4
  4355   0020CC  6ED4               	movwf	212,c	;volatile
  4356                           
  4357                           ;rxtx.c: 10: SPBRG1=0xE1;
  4358   0020CE  0EE1               	movlw	225
  4359   0020D0  6EAF               	movwf	175,c	;volatile
  4360                           
  4361                           ;rxtx.c: 11: TXSTA1=0x04;
  4362   0020D2  0E04               	movlw	4
  4363   0020D4  6EAC               	movwf	172,c	;volatile
  4364                           
  4365                           ;rxtx.c: 12: RCSTA1=0x80;
  4366   0020D6  0E80               	movlw	128
  4367   0020D8  6EAB               	movwf	171,c	;volatile
  4368                           
  4369                           ;rxtx.c: 13: TXSTA1=0x24;
  4370   0020DA  0E24               	movlw	36
  4371   0020DC  6EAC               	movwf	172,c	;volatile
  4372                           
  4373                           ;rxtx.c: 14: RCSTA1=0x90;
  4374   0020DE  0E90               	movlw	144
  4375   0020E0  6EAB               	movwf	171,c	;volatile
  4376   0020E2  0012               	return		;funcret
  4377   0020E4                     __end_of_init_rxtx:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function _draw_string *****************
  4381 ;; Defined at:
  4382 ;;		line 242 in file "afficheur.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  4385 ;;		 -> STR_20(4), STR_19(3), STR_18(19), STR_17(8), 
  4386 ;;		 -> STR_16(12), STR_15(12), STR_14(21), STR_13(7), 
  4387 ;;		 -> STR_12(6), STR_11(6), STR_10(10), STR_9(9), 
  4388 ;;		 -> STR_8(6), STR_7(13), STR_6(11), STR_5(7), 
  4389 ;;		 -> STR_4(3), STR_3(3), STR_2(3), STR_1(8), 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;Total ram usage:        2 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 3
  4408 ;; This function calls:
  4409 ;;		_d1command
  4410 ;; This function is called by:
  4411 ;;		_tache1
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text19
  4416   001D4E                     __ptext19:
  4417                           	callstack 0
  4418   001D4E                     _draw_string:
  4419                           	callstack 24
  4420                           
  4421                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  4422                           
  4423                           ;incstack = 0
  4424   001D4E  D013               	goto	i2l4187
  4425   001D50                     i2l1244:
  4426                           
  4427                           ;afficheur.c: 247: __nop();
  4428   001D50  F000               	nop	
  4429   001D52                     i2l4183:
  4430   001D52  0EC0               	movlw	192
  4431   001D54  6E05               	movwf	d1command@cmd^0,c
  4432   001D56  C008  FFF6         	movff	draw_string@tableau,tblptrl
  4433   001D5A  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  4434   001D5E                     	if	0	;tblptru may be non-zero
  4435   001D5E                     	endif
  4436   001D5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4437   001D5E  0E00               	movlw	low (__mediumconst shr (0+16))
  4438   001D60  6EF8               	movwf	tblptru,c
  4439   001D62                     	endif
  4440   001D62  0008               	tblrd		*
  4441   001D64  50F5               	movf	tablat,w,c
  4442   001D66  0FE0               	addlw	224
  4443   001D68  EC72  F00F         	call	_d1command
  4444   001D6C  0900               	iorlw	0
  4445   001D6E  B4D8               	btfsc	status,2,c
  4446   001D70  D7EF               	goto	i2l1244
  4447                           
  4448                           ;afficheur.c: 248: tableau++;
  4449   001D72  4A08               	infsnz	draw_string@tableau^0,f,c
  4450   001D74  2A09               	incf	(draw_string@tableau+1)^0,f,c
  4451   001D76                     i2l4187:
  4452   001D76  C008  FFF6         	movff	draw_string@tableau,tblptrl
  4453   001D7A  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  4454   001D7E                     	if	0	;tblptru may be non-zero
  4455   001D7E                     	endif
  4456   001D7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4457   001D7E  0E00               	movlw	low (__mediumconst shr (0+16))
  4458   001D80  6EF8               	movwf	tblptru,c
  4459   001D82                     	endif
  4460   001D82  0008               	tblrd		*
  4461   001D84  50F5               	movf	tablat,w,c
  4462   001D86  0900               	iorlw	0
  4463   001D88  B4D8               	btfsc	status,2,c
  4464   001D8A  0012               	return	
  4465   001D8C  C008  FFF6         	movff	draw_string@tableau,tblptrl
  4466   001D90  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  4467   001D94                     	if	0	;tblptru may be non-zero
  4468   001D94                     	endif
  4469   001D94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4470   001D94  0E00               	movlw	low (__mediumconst shr (0+16))
  4471   001D96  6EF8               	movwf	tblptru,c
  4472   001D98                     	endif
  4473   001D98  0008               	tblrd		*
  4474   001D9A  50F5               	movf	tablat,w,c
  4475   001D9C  0900               	iorlw	0
  4476   001D9E  B4D8               	btfsc	status,2,c
  4477   001DA0  0012               	return	
  4478   001DA2  D7D7               	goto	i2l4183
  4479   001DA4                     __end_of_draw_string:
  4480                           	callstack 0
  4481                           
  4482 ;; *************** function _draw_square *****************
  4483 ;; Defined at:
  4484 ;;		line 325 in file "afficheur.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  x1              1    wreg     unsigned char 
  4487 ;;  y1              1   14[COMRAM] unsigned char 
  4488 ;;  x2              1   15[COMRAM] unsigned char 
  4489 ;;  y2              1   16[COMRAM] unsigned char 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  x1              1   17[COMRAM] unsigned char 
  4492 ;;  y               1   19[COMRAM] unsigned char 
  4493 ;;  x               1   18[COMRAM] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;Total ram usage:        6 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 4
  4510 ;; This function calls:
  4511 ;;		_plot1
  4512 ;; This function is called by:
  4513 ;;		_tache1
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           	psect	text20
  4518   001E98                     __ptext20:
  4519                           	callstack 0
  4520   001E98                     _draw_square:
  4521                           	callstack 23
  4522                           
  4523                           ;incstack = 0
  4524                           ;draw_square@x1 stored from wreg
  4525   001E98  6E12               	movwf	draw_square@x1^0,c
  4526                           
  4527                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4528   001E9A  C012  F013         	movff	draw_square@x1,draw_square@x
  4529   001E9E  D00B               	goto	i2l4159
  4530   001EA0                     i2l4155:
  4531                           
  4532                           ;afficheur.c: 330: plot1(x, y1);
  4533   001EA0  C00F  F009         	movff	draw_square@y1,plot1@y
  4534   001EA4  5013               	movf	draw_square@x^0,w,c
  4535   001EA6  ECE4  F00C         	call	_plot1
  4536                           
  4537                           ;afficheur.c: 331: plot1(x, y2);
  4538   001EAA  C011  F009         	movff	draw_square@y2,plot1@y
  4539   001EAE  5013               	movf	draw_square@x^0,w,c
  4540   001EB0  ECE4  F00C         	call	_plot1
  4541   001EB4  2A13               	incf	draw_square@x^0,f,c
  4542   001EB6                     i2l4159:
  4543   001EB6  5013               	movf	draw_square@x^0,w,c
  4544   001EB8  5C10               	subwf	draw_square@x2^0,w,c
  4545   001EBA  B0D8               	btfsc	status,0,c
  4546   001EBC  D7F1               	goto	i2l4155
  4547                           
  4548                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4549   001EBE  C00F  F014         	movff	draw_square@y1,draw_square@y
  4550   001EC2  D00B               	goto	i2l4165
  4551   001EC4                     i2l4161:
  4552                           
  4553                           ;afficheur.c: 336: plot1(x1, y);
  4554   001EC4  C014  F009         	movff	draw_square@y,plot1@y
  4555   001EC8  5012               	movf	draw_square@x1^0,w,c
  4556   001ECA  ECE4  F00C         	call	_plot1
  4557                           
  4558                           ;afficheur.c: 337: plot1(x2, y);
  4559   001ECE  C014  F009         	movff	draw_square@y,plot1@y
  4560   001ED2  5010               	movf	draw_square@x2^0,w,c
  4561   001ED4  ECE4  F00C         	call	_plot1
  4562   001ED8  2A14               	incf	draw_square@y^0,f,c
  4563   001EDA                     i2l4165:
  4564   001EDA  5014               	movf	draw_square@y^0,w,c
  4565   001EDC  5C11               	subwf	draw_square@y2^0,w,c
  4566   001EDE  A0D8               	btfss	status,0,c
  4567   001EE0  0012               	return	
  4568   001EE2  D7F0               	goto	i2l4161
  4569   001EE4                     __end_of_draw_square:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _draw_hex8 *****************
  4573 ;; Defined at:
  4574 ;;		line 252 in file "afficheur.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  octet           1    wreg     unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  octet           1    7[COMRAM] unsigned char 
  4579 ;;  c               1    8[COMRAM] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      void 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;Total ram usage:        2 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; Hardware stack levels required when called: 3
  4596 ;; This function calls:
  4597 ;;		_d1command
  4598 ;; This function is called by:
  4599 ;;		_tache1
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text21
  4604   001C9A                     __ptext21:
  4605                           	callstack 0
  4606   001C9A                     _draw_hex8:
  4607                           	callstack 24
  4608                           
  4609                           ;incstack = 0
  4610                           ;draw_hex8@octet stored from wreg
  4611   001C9A  6E08               	movwf	draw_hex8@octet^0,c
  4612                           
  4613                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  4614   001C9C  3808               	swapf	draw_hex8@octet^0,w,c
  4615   001C9E  0B0F               	andlw	15
  4616   001CA0  6E09               	movwf	draw_hex8@c^0,c
  4617                           
  4618                           ;afficheur.c: 257: if (c>9)
  4619   001CA2  0E09               	movlw	9
  4620   001CA4  6409               	cpfsgt	draw_hex8@c^0,c
  4621   001CA6  D003               	goto	i2l4195
  4622                           
  4623                           ;afficheur.c: 258: c=c+0x17;
  4624   001CA8  5009               	movf	draw_hex8@c^0,w,c
  4625   001CAA  0F17               	addlw	23
  4626   001CAC  D002               	goto	L3
  4627   001CAE                     i2l4195:
  4628                           
  4629                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  4630   001CAE  5009               	movf	draw_hex8@c^0,w,c
  4631   001CB0  0F10               	addlw	16
  4632   001CB2                     L3:
  4633   001CB2  6E09               	movwf	draw_hex8@c^0,c
  4634   001CB4  D001               	goto	i2l4197
  4635   001CB6                     i2l1255:
  4636                           
  4637                           ;afficheur.c: 262: __nop();
  4638   001CB6  F000               	nop	
  4639   001CB8                     i2l4197:
  4640   001CB8  0EC0               	movlw	192
  4641   001CBA  6E05               	movwf	d1command@cmd^0,c
  4642   001CBC  5009               	movf	draw_hex8@c^0,w,c
  4643   001CBE  EC72  F00F         	call	_d1command
  4644   001CC2  0900               	iorlw	0
  4645   001CC4  B4D8               	btfsc	status,2,c
  4646   001CC6  D7F7               	goto	i2l1255
  4647                           
  4648                           ;afficheur.c: 264: c=(octet&0x0F);
  4649   001CC8  5008               	movf	draw_hex8@octet^0,w,c
  4650   001CCA  0B0F               	andlw	15
  4651   001CCC  6E09               	movwf	draw_hex8@c^0,c
  4652                           
  4653                           ;afficheur.c: 265: if (c>9)
  4654   001CCE  0E09               	movlw	9
  4655   001CD0  6409               	cpfsgt	draw_hex8@c^0,c
  4656   001CD2  D003               	goto	i2l4203
  4657                           
  4658                           ;afficheur.c: 266: c=c+0x17;
  4659   001CD4  5009               	movf	draw_hex8@c^0,w,c
  4660   001CD6  0F17               	addlw	23
  4661   001CD8  D002               	goto	L4
  4662   001CDA                     i2l4203:
  4663                           
  4664                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  4665   001CDA  5009               	movf	draw_hex8@c^0,w,c
  4666   001CDC  0F10               	addlw	16
  4667   001CDE                     L4:
  4668   001CDE  6E09               	movwf	draw_hex8@c^0,c
  4669   001CE0  D001               	goto	i2l4205
  4670   001CE2                     i2l1260:
  4671                           
  4672                           ;afficheur.c: 270: __nop();
  4673   001CE2  F000               	nop	
  4674   001CE4                     i2l4205:
  4675   001CE4  0EC0               	movlw	192
  4676   001CE6  6E05               	movwf	d1command@cmd^0,c
  4677   001CE8  5009               	movf	draw_hex8@c^0,w,c
  4678   001CEA  EC72  F00F         	call	_d1command
  4679   001CEE  0900               	iorlw	0
  4680   001CF0  A4D8               	btfss	status,2,c
  4681   001CF2  0012               	return	
  4682   001CF4  D7F6               	goto	i2l1260
  4683   001CF6                     __end_of_draw_hex8:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _draw_filled_square *****************
  4687 ;; Defined at:
  4688 ;;		line 340 in file "afficheur.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  x1              1    wreg     unsigned char 
  4691 ;;  y1              1   14[COMRAM] unsigned char 
  4692 ;;  x2              1   15[COMRAM] unsigned char 
  4693 ;;  y2              1   16[COMRAM] unsigned char 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  x1              1   17[COMRAM] unsigned char 
  4696 ;;  y               1   19[COMRAM] unsigned char 
  4697 ;;  x               1   18[COMRAM] unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4707 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;Total ram usage:        6 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 4
  4714 ;; This function calls:
  4715 ;;		_plot1
  4716 ;; This function is called by:
  4717 ;;		_tache1
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text22
  4722   00201E                     __ptext22:
  4723                           	callstack 0
  4724   00201E                     _draw_filled_square:
  4725                           	callstack 23
  4726                           
  4727                           ;incstack = 0
  4728                           ;draw_filled_square@x1 stored from wreg
  4729   00201E  6E12               	movwf	draw_filled_square@x1^0,c
  4730                           
  4731                           ;afficheur.c: 341: unsigned char x, y;;afficheur.c: 344: for (y = y1; y <= y2; y++) {
  4732   002020  C00F  F014         	movff	draw_filled_square@y1,draw_filled_square@y
  4733   002024  D00E               	goto	i2l4179
  4734   002026                     i2l4169:
  4735                           
  4736                           ;afficheur.c: 345: for (x = x1; x <= x2; x++) {
  4737   002026  C012  F013         	movff	draw_filled_square@x1,draw_filled_square@x
  4738   00202A  D006               	goto	i2l4175
  4739   00202C                     i2l4171:
  4740                           
  4741                           ;afficheur.c: 346: plot1(x, y);
  4742   00202C  C014  F009         	movff	draw_filled_square@y,plot1@y
  4743   002030  5013               	movf	draw_filled_square@x^0,w,c
  4744   002032  ECE4  F00C         	call	_plot1
  4745   002036  2A13               	incf	draw_filled_square@x^0,f,c
  4746   002038                     i2l4175:
  4747   002038  5013               	movf	draw_filled_square@x^0,w,c
  4748   00203A  5C10               	subwf	draw_filled_square@x2^0,w,c
  4749   00203C  B0D8               	btfsc	status,0,c
  4750   00203E  D7F6               	goto	i2l4171
  4751   002040  2A14               	incf	draw_filled_square@y^0,f,c
  4752   002042                     i2l4179:
  4753   002042  5014               	movf	draw_filled_square@y^0,w,c
  4754   002044  5C11               	subwf	draw_filled_square@y2^0,w,c
  4755   002046  A0D8               	btfss	status,0,c
  4756   002048  0012               	return	
  4757   00204A  D7ED               	goto	i2l4169
  4758   00204C                     __end_of_draw_filled_square:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _plot1 *****************
  4762 ;; Defined at:
  4763 ;;		line 390 in file "afficheur.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  x               1    wreg     unsigned char 
  4766 ;;  y               1    8[COMRAM] unsigned char 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  x               1   13[COMRAM] unsigned char 
  4769 ;;  add             2   11[COMRAM] unsigned int 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;Total ram usage:        6 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 3
  4786 ;; This function calls:
  4787 ;;		___awdiv
  4788 ;;		___awmod
  4789 ;;		_command
  4790 ;;		_d2command
  4791 ;; This function is called by:
  4792 ;;		_tache1
  4793 ;;		_draw_square
  4794 ;;		_draw_filled_square
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text23
  4799   0019C8                     __ptext23:
  4800                           	callstack 0
  4801   0019C8                     _plot1:
  4802                           	callstack 24
  4803                           
  4804                           ;incstack = 0
  4805                           ;plot1@x stored from wreg
  4806   0019C8  6E0E               	movwf	plot1@x^0,c
  4807                           
  4808                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  4809   0019CA  C00E  F001         	movff	plot1@x,___awdiv@dividend
  4810   0019CE  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4811   0019D0  0E00               	movlw	0
  4812   0019D2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4813   0019D4  0E06               	movlw	6
  4814   0019D6  6E03               	movwf	___awdiv@divisor^0,c
  4815   0019D8  ECD3  F00D         	call	___awdiv	;wreg free
  4816   0019DC  5009               	movf	plot1@y^0,w,c
  4817   0019DE  0D28               	mullw	40
  4818   0019E0  CFF3 F00A          	movff	prodl,??_plot1
  4819   0019E4  CFF4 F00B          	movff	prodh,??_plot1+1
  4820   0019E8  5001               	movf	?___awdiv^0,w,c
  4821   0019EA  240A               	addwf	??_plot1^0,w,c
  4822   0019EC  6E0C               	movwf	plot1@add^0,c
  4823   0019EE  5002               	movf	(?___awdiv+1)^0,w,c
  4824   0019F0  200B               	addwfc	(??_plot1+1)^0,w,c
  4825   0019F2  6E0D               	movwf	(plot1@add+1)^0,c
  4826                           
  4827                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  4828   0019F4  500D               	movf	(plot1@add+1)^0,w,c
  4829   0019F6  6E05               	movwf	d2command@d2^0,c
  4830   0019F8  0E24               	movlw	36
  4831   0019FA  6E06               	movwf	d2command@cmd^0,c
  4832   0019FC  500C               	movf	plot1@add^0,w,c
  4833   0019FE  EC24  F00F         	call	_d2command
  4834                           
  4835                           ;afficheur.c: 397: switch(x%6)
  4836   001A02  D018               	goto	i2l4085
  4837   001A04                     i2l4071:
  4838   001A04  0EFD               	movlw	253
  4839   001A06  ECA0  F010         	call	_command
  4840   001A0A  0012               	return	
  4841   001A0C                     i2l4073:
  4842   001A0C  0EFC               	movlw	252
  4843   001A0E  ECA0  F010         	call	_command
  4844   001A12  0012               	return	
  4845   001A14                     i2l4075:
  4846   001A14  0EFB               	movlw	251
  4847   001A16  ECA0  F010         	call	_command
  4848   001A1A  0012               	return	
  4849   001A1C                     i2l4077:
  4850   001A1C  0EFA               	movlw	250
  4851   001A1E  ECA0  F010         	call	_command
  4852   001A22  0012               	return	
  4853   001A24                     i2l4079:
  4854   001A24  0EF9               	movlw	249
  4855   001A26  ECA0  F010         	call	_command
  4856   001A2A  0012               	return	
  4857   001A2C                     i2l4081:
  4858   001A2C  0EF8               	movlw	248
  4859   001A2E  ECA0  F010         	call	_command
  4860   001A32  0012               	return	
  4861   001A34                     i2l4085:
  4862   001A34  C00E  F001         	movff	plot1@x,___awmod@dividend
  4863   001A38  6A02               	clrf	(___awmod@dividend+1)^0,c
  4864   001A3A  0E00               	movlw	0
  4865   001A3C  6E04               	movwf	(___awmod@divisor+1)^0,c
  4866   001A3E  0E06               	movlw	6
  4867   001A40  6E03               	movwf	___awmod@divisor^0,c
  4868   001A42  EC15  F00E         	call	___awmod	;wreg free
  4869                           
  4870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4871                           ; Switch size 1, requested type "simple"
  4872                           ; Number of cases is 1, Range of values is 0 to 0
  4873                           ; switch strategies available:
  4874                           ; Name         Instructions Cycles
  4875                           ; simple_byte            4     3 (average)
  4876                           ;	Chosen strategy is simple_byte
  4877   001A46  5002               	movf	(?___awmod+1)^0,w,c
  4878   001A48  0A00               	xorlw	0	; case 0
  4879   001A4A  A4D8               	btfss	status,2,c
  4880   001A4C  0012               	return	
  4881                           
  4882                           ; Switch size 1, requested type "simple"
  4883                           ; Number of cases is 6, Range of values is 0 to 5
  4884                           ; switch strategies available:
  4885                           ; Name         Instructions Cycles
  4886                           ; simple_byte           19    10 (average)
  4887                           ;	Chosen strategy is simple_byte
  4888   001A4E  5001               	movf	?___awmod^0,w,c
  4889   001A50  0A00               	xorlw	0	; case 0
  4890   001A52  B4D8               	btfsc	status,2,c
  4891   001A54  D7D7               	goto	i2l4071
  4892   001A56  0A01               	xorlw	1	; case 1
  4893   001A58  B4D8               	btfsc	status,2,c
  4894   001A5A  D7D8               	goto	i2l4073
  4895   001A5C  0A03               	xorlw	3	; case 2
  4896   001A5E  B4D8               	btfsc	status,2,c
  4897   001A60  D7D9               	goto	i2l4075
  4898   001A62  0A01               	xorlw	1	; case 3
  4899   001A64  B4D8               	btfsc	status,2,c
  4900   001A66  D7DA               	goto	i2l4077
  4901   001A68  0A07               	xorlw	7	; case 4
  4902   001A6A  B4D8               	btfsc	status,2,c
  4903   001A6C  D7DB               	goto	i2l4079
  4904   001A6E  0A01               	xorlw	1	; case 5
  4905   001A70  A4D8               	btfss	status,2,c
  4906   001A72  0012               	return	
  4907   001A74  D7DB               	goto	i2l4081
  4908   001A76                     __end_of_plot1:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function _command *****************
  4912 ;; Defined at:
  4913 ;;		line 90 in file "afficheur.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;  cmd             1    wreg     unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;  cmd             1    4[COMRAM] unsigned char 
  4918 ;;  res             1    0        unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      unsigned char 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;Total ram usage:        1 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 2
  4935 ;; This function calls:
  4936 ;;		_delai_us_char
  4937 ;;		_wait_status_ok
  4938 ;;		_write_c_aff
  4939 ;; This function is called by:
  4940 ;;		_initialisation_afficheur
  4941 ;;		_plot1
  4942 ;;		_plot0
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text24
  4947   002140                     __ptext24:
  4948                           	callstack 0
  4949   002140                     _command:
  4950                           	callstack 24
  4951                           
  4952                           ;incstack = 0
  4953                           ;command@cmd stored from wreg
  4954   002140  6E05               	movwf	command@cmd^0,c
  4955                           
  4956                           ;afficheur.c: 96: if(wait_status_ok()==1)
  4957   002142  ECFB  F00E         	call	_wait_status_ok	;wreg free
  4958   002146  06E8               	decf	wreg,f,c
  4959   002148  A4D8               	btfss	status,2,c
  4960   00214A  0012               	return	
  4961                           
  4962                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  4963   00214C  0E0C               	movlw	12
  4964   00214E  EC72  F010         	call	_delai_us_char
  4965                           
  4966                           ;afficheur.c: 99: write_c_aff(cmd);
  4967   002152  5005               	movf	command@cmd^0,w,c
  4968   002154  ECBA  F010         	call	_write_c_aff
  4969   002158  0012               	return		;funcret
  4970   00215A                     __end_of_command:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function ___awmod *****************
  4974 ;; Defined at:
  4975 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  dividend        2    0[COMRAM] int 
  4978 ;;  divisor         2    2[COMRAM] int 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  sign            1    5[COMRAM] unsigned char 
  4981 ;;  counter         1    4[COMRAM] unsigned char 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  2    0[COMRAM] int 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;Total ram usage:        6 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; This function calls:
  4998 ;;		Nothing
  4999 ;; This function is called by:
  5000 ;;		_plot1
  5001 ;;		_plot0
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text25
  5006   001C2A                     __ptext25:
  5007                           	callstack 0
  5008   001C2A                     ___awmod:
  5009                           	callstack 26
  5010                           
  5011                           ;incstack = 0
  5012   001C2A  0E00               	movlw	0
  5013   001C2C  6E06               	movwf	___awmod@sign^0,c
  5014   001C2E  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5015   001C30  D006               	goto	i2l4013
  5016   001C32  6C01               	negf	___awmod@dividend^0,c
  5017   001C34  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5018   001C36  B0D8               	btfsc	status,0,c
  5019   001C38  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5020   001C3A  0E01               	movlw	1
  5021   001C3C  6E06               	movwf	___awmod@sign^0,c
  5022   001C3E                     i2l4013:
  5023   001C3E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5024   001C40  D004               	goto	i2l4017
  5025   001C42  6C03               	negf	___awmod@divisor^0,c
  5026   001C44  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5027   001C46  B0D8               	btfsc	status,0,c
  5028   001C48  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5029   001C4A                     i2l4017:
  5030   001C4A  5003               	movf	___awmod@divisor^0,w,c
  5031   001C4C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5032   001C4E  B4D8               	btfsc	status,2,c
  5033   001C50  D018               	goto	i2l4033
  5034   001C52  0E01               	movlw	1
  5035   001C54  6E05               	movwf	___awmod@counter^0,c
  5036   001C56  D004               	goto	i2l4023
  5037   001C58                     i2l4021:
  5038   001C58  90D8               	bcf	status,0,c
  5039   001C5A  3603               	rlcf	___awmod@divisor^0,f,c
  5040   001C5C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5041   001C5E  2A05               	incf	___awmod@counter^0,f,c
  5042   001C60                     i2l4023:
  5043   001C60  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5044   001C62  D7FA               	goto	i2l4021
  5045   001C64                     i2u192_40:
  5046   001C64  5003               	movf	___awmod@divisor^0,w,c
  5047   001C66  5C01               	subwf	___awmod@dividend^0,w,c
  5048   001C68  5004               	movf	(___awmod@divisor+1)^0,w,c
  5049   001C6A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5050   001C6C  A0D8               	btfss	status,0,c
  5051   001C6E  D004               	goto	i2l4029
  5052   001C70  5003               	movf	___awmod@divisor^0,w,c
  5053   001C72  5E01               	subwf	___awmod@dividend^0,f,c
  5054   001C74  5004               	movf	(___awmod@divisor+1)^0,w,c
  5055   001C76  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5056   001C78                     i2l4029:
  5057   001C78  90D8               	bcf	status,0,c
  5058   001C7A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5059   001C7C  3203               	rrcf	___awmod@divisor^0,f,c
  5060   001C7E  2E05               	decfsz	___awmod@counter^0,f,c
  5061   001C80  D7F1               	goto	i2u192_40
  5062   001C82                     i2l4033:
  5063   001C82  5006               	movf	___awmod@sign^0,w,c
  5064   001C84  B4D8               	btfsc	status,2,c
  5065   001C86  D004               	goto	i2l4037
  5066   001C88  6C01               	negf	___awmod@dividend^0,c
  5067   001C8A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5068   001C8C  B0D8               	btfsc	status,0,c
  5069   001C8E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5070   001C90                     i2l4037:
  5071   001C90  C001  F001         	movff	___awmod@dividend,?___awmod
  5072   001C94  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5073   001C98  0012               	return		;funcret
  5074   001C9A                     __end_of___awmod:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function ___awdiv *****************
  5078 ;; Defined at:
  5079 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  dividend        2    0[COMRAM] int 
  5082 ;;  divisor         2    2[COMRAM] int 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  quotient        2    6[COMRAM] int 
  5085 ;;  sign            1    5[COMRAM] unsigned char 
  5086 ;;  counter         1    4[COMRAM] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    0[COMRAM] int 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5099 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5100 ;;Total ram usage:        8 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_plot1
  5106 ;;		_draw_dec8
  5107 ;;		_plot0
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text26
  5112   001BA6                     __ptext26:
  5113                           	callstack 0
  5114   001BA6                     ___awdiv:
  5115                           	callstack 26
  5116                           
  5117                           ;incstack = 0
  5118   001BA6  0E00               	movlw	0
  5119   001BA8  6E06               	movwf	___awdiv@sign^0,c
  5120   001BAA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5121   001BAC  D006               	goto	i2l3969
  5122   001BAE  6C03               	negf	___awdiv@divisor^0,c
  5123   001BB0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5124   001BB2  B0D8               	btfsc	status,0,c
  5125   001BB4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5126   001BB6  0E01               	movlw	1
  5127   001BB8  6E06               	movwf	___awdiv@sign^0,c
  5128   001BBA                     i2l3969:
  5129   001BBA  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5130   001BBC  D006               	goto	i2l3975
  5131   001BBE  6C01               	negf	___awdiv@dividend^0,c
  5132   001BC0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5133   001BC2  B0D8               	btfsc	status,0,c
  5134   001BC4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5135   001BC6  0E01               	movlw	1
  5136   001BC8  1A06               	xorwf	___awdiv@sign^0,f,c
  5137   001BCA                     i2l3975:
  5138   001BCA  0E00               	movlw	0
  5139   001BCC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5140   001BCE  0E00               	movlw	0
  5141   001BD0  6E07               	movwf	___awdiv@quotient^0,c
  5142   001BD2  5003               	movf	___awdiv@divisor^0,w,c
  5143   001BD4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5144   001BD6  B4D8               	btfsc	status,2,c
  5145   001BD8  D01C               	goto	i2l3997
  5146   001BDA  0E01               	movlw	1
  5147   001BDC  6E05               	movwf	___awdiv@counter^0,c
  5148   001BDE  D004               	goto	i2l3983
  5149   001BE0                     i2l3981:
  5150   001BE0  90D8               	bcf	status,0,c
  5151   001BE2  3603               	rlcf	___awdiv@divisor^0,f,c
  5152   001BE4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5153   001BE6  2A05               	incf	___awdiv@counter^0,f,c
  5154   001BE8                     i2l3983:
  5155   001BE8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5156   001BEA  D7FA               	goto	i2l3981
  5157   001BEC                     i2u186_40:
  5158   001BEC  90D8               	bcf	status,0,c
  5159   001BEE  3607               	rlcf	___awdiv@quotient^0,f,c
  5160   001BF0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5161   001BF2  5003               	movf	___awdiv@divisor^0,w,c
  5162   001BF4  5C01               	subwf	___awdiv@dividend^0,w,c
  5163   001BF6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5164   001BF8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5165   001BFA  A0D8               	btfss	status,0,c
  5166   001BFC  D005               	goto	i2l3993
  5167   001BFE  5003               	movf	___awdiv@divisor^0,w,c
  5168   001C00  5E01               	subwf	___awdiv@dividend^0,f,c
  5169   001C02  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5170   001C04  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5171   001C06  8007               	bsf	___awdiv@quotient^0,0,c
  5172   001C08                     i2l3993:
  5173   001C08  90D8               	bcf	status,0,c
  5174   001C0A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5175   001C0C  3203               	rrcf	___awdiv@divisor^0,f,c
  5176   001C0E  2E05               	decfsz	___awdiv@counter^0,f,c
  5177   001C10  D7ED               	goto	i2u186_40
  5178   001C12                     i2l3997:
  5179   001C12  5006               	movf	___awdiv@sign^0,w,c
  5180   001C14  B4D8               	btfsc	status,2,c
  5181   001C16  D004               	goto	i2l4001
  5182   001C18  6C07               	negf	___awdiv@quotient^0,c
  5183   001C1A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5184   001C1C  B0D8               	btfsc	status,0,c
  5185   001C1E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5186   001C20                     i2l4001:
  5187   001C20  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5188   001C24  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5189   001C28  0012               	return		;funcret
  5190   001C2A                     __end_of___awdiv:
  5191                           	callstack 0
  5192                           
  5193 ;; *************** function _clear_text *****************
  5194 ;; Defined at:
  5195 ;;		line 307 in file "afficheur.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  add             2    8[COMRAM] unsigned int 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;Total ram usage:        2 bytes
  5214 ;; Hardware stack levels used: 1
  5215 ;; Hardware stack levels required when called: 3
  5216 ;; This function calls:
  5217 ;;		_d1command
  5218 ;;		_d2command
  5219 ;; This function is called by:
  5220 ;;		_tache1
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text27
  5225   001FBE                     __ptext27:
  5226                           	callstack 0
  5227   001FBE                     _clear_text:
  5228                           	callstack 24
  5229                           
  5230                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5231                           
  5232                           ;incstack = 0
  5233   001FBE  0E00               	movlw	0
  5234   001FC0  6E05               	movwf	d2command@d2^0,c
  5235   001FC2  0E24               	movlw	36
  5236   001FC4  6E06               	movwf	d2command@cmd^0,c
  5237   001FC6  0E00               	movlw	0
  5238   001FC8  EC24  F00F         	call	_d2command
  5239                           
  5240                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5241   001FCC  0E00               	movlw	0
  5242   001FCE  6E0A               	movwf	(clear_text@add+1)^0,c
  5243   001FD0  0E00               	movlw	0
  5244   001FD2  6E09               	movwf	clear_text@add^0,c
  5245   001FD4                     i2l4133:
  5246                           
  5247                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5248   001FD4  0EC0               	movlw	192
  5249   001FD6  6E05               	movwf	d1command@cmd^0,c
  5250   001FD8  0E00               	movlw	0
  5251   001FDA  EC72  F00F         	call	_d1command
  5252   001FDE  4A09               	infsnz	clear_text@add^0,f,c
  5253   001FE0  2A0A               	incf	(clear_text@add+1)^0,f,c
  5254   001FE2  0E80               	movlw	128
  5255   001FE4  180A               	xorwf	(clear_text@add+1)^0,w,c
  5256   001FE6  1009               	iorwf	clear_text@add^0,w,c
  5257   001FE8  B4D8               	btfsc	status,2,c
  5258   001FEA  0012               	return	
  5259   001FEC  D7F3               	goto	i2l4133
  5260   001FEE                     __end_of_clear_text:
  5261                           	callstack 0
  5262                           
  5263 ;; *************** function _clear_line *****************
  5264 ;; Defined at:
  5265 ;;		line 318 in file "afficheur.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;  line            1    wreg     unsigned char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  line            1   14[COMRAM] unsigned char 
  5270 ;;  column          1   15[COMRAM] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        2 bytes
  5285 ;; Hardware stack levels used: 1
  5286 ;; Hardware stack levels required when called: 4
  5287 ;; This function calls:
  5288 ;;		_draw_char
  5289 ;;		_goto_lico
  5290 ;; This function is called by:
  5291 ;;		_tache1
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text28
  5296   002106                     __ptext28:
  5297                           	callstack 0
  5298   002106                     _clear_line:
  5299                           	callstack 23
  5300                           
  5301                           ;incstack = 0
  5302                           ;clear_line@line stored from wreg
  5303   002106  6E0F               	movwf	clear_line@line^0,c
  5304                           
  5305                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5306   002108  0E00               	movlw	0
  5307   00210A  6E10               	movwf	clear_line@column^0,c
  5308   00210C                     i2l4213:
  5309                           
  5310                           ;afficheur.c: 321: goto_lico(line, column);
  5311   00210C  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5312   002110  500F               	movf	clear_line@line^0,w,c
  5313   002112  EC7B  F00E         	call	_goto_lico
  5314                           
  5315                           ;afficheur.c: 322: draw_char(' ');
  5316   002116  0E20               	movlw	32
  5317   002118  ECC6  F00F         	call	_draw_char
  5318   00211C  2A10               	incf	clear_line@column^0,f,c
  5319   00211E  0E27               	movlw	39
  5320   002120  6410               	cpfsgt	clear_line@column^0,c
  5321   002122  D7F4               	goto	i2l4213
  5322   002124  0012               	return	
  5323   002126                     __end_of_clear_line:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function _goto_lico *****************
  5327 ;; Defined at:
  5328 ;;		line 295 in file "afficheur.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  ligne           1    wreg     unsigned char 
  5331 ;;  colonne         1    8[COMRAM] unsigned char 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  ligne           1   11[COMRAM] unsigned char 
  5334 ;;  adr             2   12[COMRAM] unsigned int 
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5344 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;Total ram usage:        6 bytes
  5349 ;; Hardware stack levels used: 1
  5350 ;; Hardware stack levels required when called: 3
  5351 ;; This function calls:
  5352 ;;		_d2command
  5353 ;; This function is called by:
  5354 ;;		_tache1
  5355 ;;		_clear_line
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text29
  5360   001CF6                     __ptext29:
  5361                           	callstack 0
  5362   001CF6                     _goto_lico:
  5363                           	callstack 24
  5364                           
  5365                           ;incstack = 0
  5366                           ;goto_lico@ligne stored from wreg
  5367   001CF6  6E0C               	movwf	goto_lico@ligne^0,c
  5368                           
  5369                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  5370   001CF8  0E7B               	movlw	123
  5371   001CFA  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5372   001CFC  0E00               	movlw	0
  5373   001CFE  6E0D               	movwf	goto_lico@adr^0,c
  5374                           
  5375                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  5376   001D00  0E0F               	movlw	15
  5377   001D02  640C               	cpfsgt	goto_lico@ligne^0,c
  5378   001D04  D002               	goto	i2l4047
  5379   001D06  0E00               	movlw	0
  5380   001D08  6E0C               	movwf	goto_lico@ligne^0,c
  5381   001D0A                     i2l4047:
  5382                           
  5383                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  5384   001D0A  0E27               	movlw	39
  5385   001D0C  6409               	cpfsgt	goto_lico@colonne^0,c
  5386   001D0E  D002               	goto	i2l4051
  5387   001D10  0E00               	movlw	0
  5388   001D12  6E09               	movwf	goto_lico@colonne^0,c
  5389   001D14                     i2l4051:
  5390                           
  5391                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  5392   001D14  500C               	movf	goto_lico@ligne^0,w,c
  5393   001D16  0D28               	mullw	40
  5394   001D18  CFF3 F00A          	movff	prodl,??_goto_lico
  5395   001D1C  CFF4 F00B          	movff	prodh,??_goto_lico+1
  5396   001D20  5009               	movf	goto_lico@colonne^0,w,c
  5397   001D22  260A               	addwf	??_goto_lico^0,f,c
  5398   001D24  0E00               	movlw	0
  5399   001D26  220B               	addwfc	(??_goto_lico+1)^0,f,c
  5400   001D28  500D               	movf	goto_lico@adr^0,w,c
  5401   001D2A  240A               	addwf	??_goto_lico^0,w,c
  5402   001D2C  6E0D               	movwf	goto_lico@adr^0,c
  5403   001D2E  500E               	movf	(goto_lico@adr+1)^0,w,c
  5404   001D30  200B               	addwfc	(??_goto_lico+1)^0,w,c
  5405   001D32  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5406                           
  5407                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  5408   001D34  D001               	goto	i2l4053
  5409   001D36                     i2l1280:
  5410                           
  5411                           ;afficheur.c: 304: __nop();
  5412   001D36  F000               	nop	
  5413   001D38                     i2l4053:
  5414   001D38  500E               	movf	(goto_lico@adr+1)^0,w,c
  5415   001D3A  6E05               	movwf	d2command@d2^0,c
  5416   001D3C  0E24               	movlw	36
  5417   001D3E  6E06               	movwf	d2command@cmd^0,c
  5418   001D40  500D               	movf	goto_lico@adr^0,w,c
  5419   001D42  EC24  F00F         	call	_d2command
  5420   001D46  0900               	iorlw	0
  5421   001D48  A4D8               	btfss	status,2,c
  5422   001D4A  0012               	return	
  5423   001D4C  D7F4               	goto	i2l1280
  5424   001D4E                     __end_of_goto_lico:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function _draw_char *****************
  5428 ;; Defined at:
  5429 ;;		line 228 in file "afficheur.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  dccar           1    wreg     unsigned char 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  dccar           1    7[COMRAM] unsigned char 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, status,2, status,0, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;Total ram usage:        1 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; Hardware stack levels required when called: 3
  5450 ;; This function calls:
  5451 ;;		_d1command
  5452 ;; This function is called by:
  5453 ;;		_tache1
  5454 ;;		_clear_line
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           
  5458                           	psect	text30
  5459   001F8C                     __ptext30:
  5460                           	callstack 0
  5461   001F8C                     _draw_char:
  5462                           	callstack 24
  5463                           
  5464                           ;incstack = 0
  5465                           ;draw_char@dccar stored from wreg
  5466   001F8C  6E08               	movwf	draw_char@dccar^0,c
  5467                           
  5468                           ;afficheur.c: 230: if (dccar<32)
  5469   001F8E  0E20               	movlw	32
  5470   001F90  6008               	cpfslt	draw_char@dccar^0,c
  5471   001F92  D002               	goto	i2l4059
  5472                           
  5473                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5474   001F94  0E3F               	movlw	63
  5475   001F96  6E08               	movwf	draw_char@dccar^0,c
  5476   001F98                     i2l4059:
  5477                           
  5478                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5479   001F98  0E9F               	movlw	159
  5480   001F9A  6408               	cpfsgt	draw_char@dccar^0,c
  5481   001F9C  D002               	goto	i2l4063
  5482                           
  5483                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5484   001F9E  0E3F               	movlw	63
  5485   001FA0  6E08               	movwf	draw_char@dccar^0,c
  5486   001FA2                     i2l4063:
  5487                           
  5488                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5489   001FA2  5008               	movf	draw_char@dccar^0,w,c
  5490   001FA4  0FE0               	addlw	224
  5491   001FA6  6E08               	movwf	draw_char@dccar^0,c
  5492                           
  5493                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5494   001FA8  D001               	goto	i2l4065
  5495   001FAA                     i2l1236:
  5496   001FAA  F000               	nop	
  5497   001FAC                     i2l4065:
  5498   001FAC  0EC0               	movlw	192
  5499   001FAE  6E05               	movwf	d1command@cmd^0,c
  5500   001FB0  5008               	movf	draw_char@dccar^0,w,c
  5501   001FB2  EC72  F00F         	call	_d1command
  5502   001FB6  0900               	iorlw	0
  5503   001FB8  A4D8               	btfss	status,2,c
  5504   001FBA  0012               	return	
  5505   001FBC  D7F6               	goto	i2l1236
  5506   001FBE                     __end_of_draw_char:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _clear_graphics *****************
  5510 ;; Defined at:
  5511 ;;		line 368 in file "afficheur.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  add             2    8[COMRAM] unsigned int 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;Total ram usage:        2 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 3
  5532 ;; This function calls:
  5533 ;;		_d1command
  5534 ;;		_d2command
  5535 ;; This function is called by:
  5536 ;;		_tache1
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text31
  5541   001FEE                     __ptext31:
  5542                           	callstack 0
  5543   001FEE                     _clear_graphics:
  5544                           	callstack 24
  5545                           
  5546                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5547                           
  5548                           ;incstack = 0
  5549   001FEE  0E80               	movlw	128
  5550   001FF0  6E05               	movwf	d2command@d2^0,c
  5551   001FF2  0E24               	movlw	36
  5552   001FF4  6E06               	movwf	d2command@cmd^0,c
  5553   001FF6  0E00               	movlw	0
  5554   001FF8  EC24  F00F         	call	_d2command
  5555                           
  5556                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5557   001FFC  0E80               	movlw	128
  5558   001FFE  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5559   002000  0E00               	movlw	0
  5560   002002  6E09               	movwf	clear_graphics@add^0,c
  5561   002004                     i2l4147:
  5562                           
  5563                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5564   002004  0EC0               	movlw	192
  5565   002006  6E05               	movwf	d1command@cmd^0,c
  5566   002008  0E00               	movlw	0
  5567   00200A  EC72  F00F         	call	_d1command
  5568   00200E  4A09               	infsnz	clear_graphics@add^0,f,c
  5569   002010  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5570   002012  0EF8               	movlw	248
  5571   002014  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5572   002016  1009               	iorwf	clear_graphics@add^0,w,c
  5573   002018  B4D8               	btfsc	status,2,c
  5574   00201A  0012               	return	
  5575   00201C  D7F3               	goto	i2l4147
  5576   00201E                     __end_of_clear_graphics:
  5577                           	callstack 0
  5578                           
  5579 ;; *************** function _d2command *****************
  5580 ;; Defined at:
  5581 ;;		line 128 in file "afficheur.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  d1              1    wreg     unsigned char 
  5584 ;;  d2              1    4[COMRAM] unsigned char 
  5585 ;;  cmd             1    5[COMRAM] unsigned char 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  d1              1    6[COMRAM] unsigned char 
  5588 ;;  res             1    7[COMRAM] unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      unsigned char 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2, status,0, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;Total ram usage:        4 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; Hardware stack levels required when called: 2
  5605 ;; This function calls:
  5606 ;;		_delai_us_char
  5607 ;;		_wait_status_ok
  5608 ;;		_write_c_aff
  5609 ;;		_write_d_aff
  5610 ;; This function is called by:
  5611 ;;		_initialisation_afficheur
  5612 ;;		_goto_lico
  5613 ;;		_clear_text
  5614 ;;		_clear_graphics
  5615 ;;		_plot1
  5616 ;;		_clear_cgram
  5617 ;;		_plot0
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text32
  5622   001E48                     __ptext32:
  5623                           	callstack 0
  5624   001E48                     _d2command:
  5625                           	callstack 24
  5626                           
  5627                           ;incstack = 0
  5628                           ;d2command@d1 stored from wreg
  5629   001E48  6E07               	movwf	d2command@d1^0,c
  5630                           
  5631                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  5632   001E4A  0E00               	movlw	0
  5633   001E4C  6E08               	movwf	d2command@res^0,c
  5634                           
  5635                           ;afficheur.c: 134: if (wait_status_ok()==1)
  5636   001E4E  ECFB  F00E         	call	_wait_status_ok	;wreg free
  5637   001E52  06E8               	decf	wreg,f,c
  5638   001E54  A4D8               	btfss	status,2,c
  5639   001E56  D01E               	goto	i2l3957
  5640                           
  5641                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  5642   001E58  0E0C               	movlw	12
  5643   001E5A  EC72  F010         	call	_delai_us_char
  5644                           
  5645                           ;afficheur.c: 137: write_d_aff(d1);
  5646   001E5E  5007               	movf	d2command@d1^0,w,c
  5647   001E60  ECAD  F010         	call	_write_d_aff
  5648                           
  5649                           ;afficheur.c: 138: if (wait_status_ok()==1)
  5650   001E64  ECFB  F00E         	call	_wait_status_ok	;wreg free
  5651   001E68  06E8               	decf	wreg,f,c
  5652   001E6A  A4D8               	btfss	status,2,c
  5653   001E6C  D013               	goto	i2l3957
  5654                           
  5655                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  5656   001E6E  0E0C               	movlw	12
  5657   001E70  EC72  F010         	call	_delai_us_char
  5658                           
  5659                           ;afficheur.c: 141: write_d_aff(d2);
  5660   001E74  5005               	movf	d2command@d2^0,w,c
  5661   001E76  ECAD  F010         	call	_write_d_aff
  5662                           
  5663                           ;afficheur.c: 142: if (wait_status_ok()==1)
  5664   001E7A  ECFB  F00E         	call	_wait_status_ok	;wreg free
  5665   001E7E  06E8               	decf	wreg,f,c
  5666   001E80  A4D8               	btfss	status,2,c
  5667   001E82  D008               	goto	i2l3957
  5668                           
  5669                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  5670   001E84  0E0C               	movlw	12
  5671   001E86  EC72  F010         	call	_delai_us_char
  5672                           
  5673                           ;afficheur.c: 145: write_c_aff(cmd);
  5674   001E8A  5006               	movf	d2command@cmd^0,w,c
  5675   001E8C  ECBA  F010         	call	_write_c_aff
  5676                           
  5677                           ;afficheur.c: 147: res=1;
  5678   001E90  0E01               	movlw	1
  5679   001E92  6E08               	movwf	d2command@res^0,c
  5680   001E94                     i2l3957:
  5681                           
  5682                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  5683   001E94  5008               	movf	d2command@res^0,w,c
  5684   001E96  0012               	return		;funcret
  5685   001E98                     __end_of_d2command:
  5686                           	callstack 0
  5687                           
  5688 ;; *************** function _d1command *****************
  5689 ;; Defined at:
  5690 ;;		line 106 in file "afficheur.c"
  5691 ;; Parameters:    Size  Location     Type
  5692 ;;  d1              1    wreg     unsigned char 
  5693 ;;  cmd             1    4[COMRAM] unsigned char 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  d1              1    5[COMRAM] unsigned char 
  5696 ;;  res             1    6[COMRAM] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      unsigned char 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5706 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;Total ram usage:        3 bytes
  5711 ;; Hardware stack levels used: 1
  5712 ;; Hardware stack levels required when called: 2
  5713 ;; This function calls:
  5714 ;;		_delai_us_char
  5715 ;;		_wait_status_ok
  5716 ;;		_write_c_aff
  5717 ;;		_write_d_aff
  5718 ;; This function is called by:
  5719 ;;		_initialisation_afficheur
  5720 ;;		_draw_char
  5721 ;;		_draw_string
  5722 ;;		_draw_hex8
  5723 ;;		_clear_text
  5724 ;;		_clear_graphics
  5725 ;;		_draw_dec8
  5726 ;;		_clear_cgram
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text33
  5731   001EE4                     __ptext33:
  5732                           	callstack 0
  5733   001EE4                     _d1command:
  5734                           	callstack 24
  5735                           
  5736                           ;incstack = 0
  5737                           ;d1command@d1 stored from wreg
  5738   001EE4  6E06               	movwf	d1command@d1^0,c
  5739                           
  5740                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  5741   001EE6  0E00               	movlw	0
  5742   001EE8  6E07               	movwf	d1command@res^0,c
  5743                           
  5744                           ;afficheur.c: 112: if (wait_status_ok()==1)
  5745   001EEA  ECFB  F00E         	call	_wait_status_ok	;wreg free
  5746   001EEE  06E8               	decf	wreg,f,c
  5747   001EF0  A4D8               	btfss	status,2,c
  5748   001EF2  D013               	goto	i2l3931
  5749                           
  5750                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  5751   001EF4  0E0C               	movlw	12
  5752   001EF6  EC72  F010         	call	_delai_us_char
  5753                           
  5754                           ;afficheur.c: 115: write_d_aff(d1);
  5755   001EFA  5006               	movf	d1command@d1^0,w,c
  5756   001EFC  ECAD  F010         	call	_write_d_aff
  5757                           
  5758                           ;afficheur.c: 116: if (wait_status_ok()==1)
  5759   001F00  ECFB  F00E         	call	_wait_status_ok	;wreg free
  5760   001F04  06E8               	decf	wreg,f,c
  5761   001F06  A4D8               	btfss	status,2,c
  5762   001F08  D008               	goto	i2l3931
  5763                           
  5764                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  5765   001F0A  0E0C               	movlw	12
  5766   001F0C  EC72  F010         	call	_delai_us_char
  5767                           
  5768                           ;afficheur.c: 119: write_c_aff(cmd);
  5769   001F10  5005               	movf	d1command@cmd^0,w,c
  5770   001F12  ECBA  F010         	call	_write_c_aff
  5771                           
  5772                           ;afficheur.c: 121: res=1;
  5773   001F16  0E01               	movlw	1
  5774   001F18  6E07               	movwf	d1command@res^0,c
  5775   001F1A                     i2l3931:
  5776                           
  5777                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  5778   001F1A  5007               	movf	d1command@res^0,w,c
  5779   001F1C  0012               	return		;funcret
  5780   001F1E                     __end_of_d1command:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function _write_d_aff *****************
  5784 ;; Defined at:
  5785 ;;		line 4 in file "afficheur.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  data            1    wreg     unsigned char 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  data            1    0[COMRAM] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;Total ram usage:        1 bytes
  5804 ;; Hardware stack levels used: 1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_d1command
  5809 ;;		_d2command
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text34
  5814   00215A                     __ptext34:
  5815                           	callstack 0
  5816   00215A                     _write_d_aff:
  5817                           	callstack 25
  5818                           
  5819                           ;incstack = 0
  5820                           ;write_d_aff@data stored from wreg
  5821   00215A  6E01               	movwf	write_d_aff@data^0,c
  5822                           
  5823                           ;afficheur.c: 6: LATH=data;
  5824   00215C  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  5825                           
  5826                           ;afficheur.c: 7: TRISH=0x00;
  5827   002160  0E00               	movlw	0
  5828   002162  6E99               	movwf	153,c	;volatile
  5829                           
  5830                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  5831   002164  9091               	bcf	145,0,c	;volatile
  5832                           
  5833                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  5834   002166  9691               	bcf	145,3,c	;volatile
  5835                           
  5836                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  5837   002168  9491               	bcf	145,2,c	;volatile
  5838                           
  5839                           ;afficheur.c: 11: __nop();
  5840   00216A  F000               	nop	
  5841                           
  5842                           ;afficheur.c: 12: __nop();
  5843   00216C  F000               	nop	
  5844                           
  5845                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  5846   00216E  8491               	bsf	145,2,c	;volatile
  5847                           
  5848                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  5849   002170  8691               	bsf	145,3,c	;volatile
  5850   002172  0012               	return		;funcret
  5851   002174                     __end_of_write_d_aff:
  5852                           	callstack 0
  5853                           
  5854 ;; *************** function _write_c_aff *****************
  5855 ;; Defined at:
  5856 ;;		line 17 in file "afficheur.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  command         1    wreg     unsigned char 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  command         1    0[COMRAM] unsigned char 
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg, status,2
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5874 ;;Total ram usage:        1 bytes
  5875 ;; Hardware stack levels used: 1
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_command
  5880 ;;		_d1command
  5881 ;;		_d2command
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text35
  5886   002174                     __ptext35:
  5887                           	callstack 0
  5888   002174                     _write_c_aff:
  5889                           	callstack 25
  5890                           
  5891                           ;incstack = 0
  5892                           ;write_c_aff@command stored from wreg
  5893   002174  6E01               	movwf	write_c_aff@command^0,c
  5894                           
  5895                           ;afficheur.c: 19: LATH=command;
  5896   002176  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  5897                           
  5898                           ;afficheur.c: 20: TRISH=0x00;
  5899   00217A  0E00               	movlw	0
  5900   00217C  6E99               	movwf	153,c	;volatile
  5901                           
  5902                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  5903   00217E  8091               	bsf	145,0,c	;volatile
  5904                           
  5905                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  5906   002180  9691               	bcf	145,3,c	;volatile
  5907                           
  5908                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  5909   002182  9491               	bcf	145,2,c	;volatile
  5910                           
  5911                           ;afficheur.c: 24: __nop();
  5912   002184  F000               	nop	
  5913                           
  5914                           ;afficheur.c: 25: __nop();
  5915   002186  F000               	nop	
  5916                           
  5917                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  5918   002188  8491               	bsf	145,2,c	;volatile
  5919                           
  5920                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  5921   00218A  8691               	bsf	145,3,c	;volatile
  5922   00218C  0012               	return		;funcret
  5923   00218E                     __end_of_write_c_aff:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _wait_status_ok *****************
  5927 ;; Defined at:
  5928 ;;		line 53 in file "afficheur.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  res             1    3[COMRAM] unsigned char 
  5933 ;;  status          1    2[COMRAM] unsigned char 
  5934 ;;  err             1    1[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      unsigned char 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;Total ram usage:        3 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 1
  5951 ;; This function calls:
  5952 ;;		_delai_us_char
  5953 ;; This function is called by:
  5954 ;;		_command
  5955 ;;		_d1command
  5956 ;;		_d2command
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text36
  5961   001DF6                     __ptext36:
  5962                           	callstack 0
  5963   001DF6                     _wait_status_ok:
  5964                           	callstack 24
  5965                           
  5966                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  5967                           
  5968                           ;incstack = 0
  5969   001DF6  0E00               	movlw	0
  5970   001DF8  6E02               	movwf	wait_status_ok@err^0,c
  5971                           
  5972                           ;afficheur.c: 58: res=2;
  5973   001DFA  0E02               	movlw	2
  5974   001DFC  D01E               	goto	L5
  5975   001DFE                     i2l1194:
  5976                           
  5977                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  5978   001DFE  6899               	setf	153,c	;volatile
  5979                           
  5980                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  5981   001E00  8091               	bsf	145,0,c	;volatile
  5982                           
  5983                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  5984   001E02  9691               	bcf	145,3,c	;volatile
  5985                           
  5986                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  5987   001E04  9291               	bcf	145,1,c	;volatile
  5988                           
  5989                           ;afficheur.c: 65: __nop();
  5990   001E06  F000               	nop	
  5991                           
  5992                           ;afficheur.c: 66: status=PORTH;
  5993   001E08  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  5994                           
  5995                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  5996   001E0C  8291               	bsf	145,1,c	;volatile
  5997                           
  5998                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  5999   001E0E  8691               	bsf	145,3,c	;volatile
  6000                           
  6001                           ;afficheur.c: 70: status=(status&0x03);
  6002   001E10  5003               	movf	wait_status_ok@status^0,w,c
  6003   001E12  0B03               	andlw	3
  6004   001E14  6E03               	movwf	wait_status_ok@status^0,c
  6005                           
  6006                           ;afficheur.c: 71: if (status!=0x03)
  6007   001E16  0E03               	movlw	3
  6008   001E18  1803               	xorwf	wait_status_ok@status^0,w,c
  6009   001E1A  B4D8               	btfsc	status,2,c
  6010   001E1C  D00D               	goto	i2l2447
  6011                           
  6012                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6013   001E1E  2A02               	incf	wait_status_ok@err^0,f,c
  6014                           
  6015                           ;afficheur.c: 74: delai_us_char(12);
  6016   001E20  0E0C               	movlw	12
  6017   001E22  EC72  F010         	call	_delai_us_char
  6018                           
  6019                           ;afficheur.c: 75: if (err>=250)
  6020   001E26  0EF9               	movlw	249
  6021   001E28  6402               	cpfsgt	wait_status_ok@err^0,c
  6022   001E2A  D008               	goto	i2l2449
  6023                           
  6024                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6025   001E2C  9EF2               	bcf	242,7,c	;volatile
  6026                           
  6027                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6028   001E2E  948B               	bcf	139,2,c	;volatile
  6029   001E30  828B               	bsf	139,1,c	;volatile
  6030   001E32  808F               	bsf	143,0,c	;volatile
  6031                           
  6032                           ;afficheur.c: 79: res=0;
  6033   001E34  0E00               	movlw	0
  6034   001E36  D001               	goto	L5
  6035   001E38                     i2l2447:
  6036                           
  6037                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6038   001E38  0E01               	movlw	1
  6039   001E3A                     L5:
  6040   001E3A  6E04               	movwf	wait_status_ok@res^0,c
  6041   001E3C                     i2l2449:
  6042   001E3C  0E02               	movlw	2
  6043   001E3E  1804               	xorwf	wait_status_ok@res^0,w,c
  6044   001E40  B4D8               	btfsc	status,2,c
  6045   001E42  D7DD               	goto	i2l1194
  6046                           
  6047                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6048   001E44  5004               	movf	wait_status_ok@res^0,w,c
  6049   001E46  0012               	return		;funcret
  6050   001E48                     __end_of_wait_status_ok:
  6051                           	callstack 0
  6052                           
  6053 ;; *************** function _delai_us_char *****************
  6054 ;; Defined at:
  6055 ;;		line 154 in file "afficheur.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  ucdelai         1    wreg     unsigned char 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;Total ram usage:        1 bytes
  6074 ;; Hardware stack levels used: 1
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_wait_status_ok
  6079 ;;		_command
  6080 ;;		_d1command
  6081 ;;		_d2command
  6082 ;;		_initialisation_afficheur
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text37
  6087   0020E4                     __ptext37:
  6088                           	callstack 0
  6089   0020E4                     _delai_us_char:
  6090                           	callstack 24
  6091                           
  6092                           ;incstack = 0
  6093                           ;delai_us_char@ucdelai stored from wreg
  6094   0020E4  6E01               	movwf	delai_us_char@ucdelai^0,c
  6095                           
  6096                           ;afficheur.c: 157: while (ucdelai>0)
  6097   0020E6  D00B               	goto	i2l2395
  6098   0020E8                     i2l1218:
  6099                           
  6100                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6101   0020E8  F000               	nop	
  6102   0020EA  F000               	nop	
  6103   0020EC  F000               	nop	
  6104   0020EE  F000               	nop	
  6105   0020F0  F000               	nop	
  6106   0020F2  F000               	nop	
  6107   0020F4  F000               	nop	
  6108   0020F6  F000               	nop	
  6109   0020F8  F000               	nop	
  6110   0020FA  F000               	nop	
  6111                           
  6112                           ;afficheur.c: 160: ucdelai--;
  6113   0020FC  0601               	decf	delai_us_char@ucdelai^0,f,c
  6114   0020FE                     i2l2395:
  6115   0020FE  5001               	movf	delai_us_char@ucdelai^0,w,c
  6116   002100  B4D8               	btfsc	status,2,c
  6117   002102  0012               	return	
  6118   002104  D7F1               	goto	i2l1218
  6119   002106                     __end_of_delai_us_char:
  6120                           	callstack 0
  6121                           
  6122                           	psect	text38
  6123   000000                     __ptext38:
  6124                           	callstack 0
  6125                           
  6126                           	psect	rparam
  6127   000000                     
  6128                           	psect	temp
  6129   000021                     btemp:
  6130                           	callstack 0
  6131   000021                     	ds	12
  6132   000000                     wtemp0	set	btemp
  6133   000000                     wtemp1	set	btemp+2
  6134   000000                     wtemp2	set	btemp+4
  6135   000000                     wtemp3	set	btemp+6
  6136   000000                     wtemp4	set	btemp+8
  6137   000000                     wtemp5	set	btemp+10
  6138   000000                     wtemp8	set	btemp+1
  6139   000000                     ttemp0	set	btemp
  6140   000000                     ttemp1	set	btemp+3
  6141   000000                     ttemp2	set	btemp+6
  6142   000000                     ttemp3	set	btemp+9
  6143   000000                     ttemp5	set	btemp+1
  6144   000000                     ttemp6	set	btemp+4
  6145   000000                     ttemp7	set	btemp+8
  6146   000000                     ltemp0	set	btemp
  6147   000000                     ltemp1	set	btemp+4
  6148   000000                     ltemp2	set	btemp+8
  6149   000000                     lltemp0	set	btemp
  6150                           
  6151                           	psect	idloc
  6152                           
  6153                           ;Config register IDLOC0 @ 0x200000
  6154                           ;	unspecified, using default values
  6155   200000                     	org	2097152
  6156   200000  FF                 	db	255
  6157                           
  6158                           ;Config register IDLOC1 @ 0x200001
  6159                           ;	unspecified, using default values
  6160   200001                     	org	2097153
  6161   200001  FF                 	db	255
  6162                           
  6163                           ;Config register IDLOC2 @ 0x200002
  6164                           ;	unspecified, using default values
  6165   200002                     	org	2097154
  6166   200002  FF                 	db	255
  6167                           
  6168                           ;Config register IDLOC3 @ 0x200003
  6169                           ;	unspecified, using default values
  6170   200003                     	org	2097155
  6171   200003  FF                 	db	255
  6172                           
  6173                           ;Config register IDLOC4 @ 0x200004
  6174                           ;	unspecified, using default values
  6175   200004                     	org	2097156
  6176   200004  FF                 	db	255
  6177                           
  6178                           ;Config register IDLOC5 @ 0x200005
  6179                           ;	unspecified, using default values
  6180   200005                     	org	2097157
  6181   200005  FF                 	db	255
  6182                           
  6183                           ;Config register IDLOC6 @ 0x200006
  6184                           ;	unspecified, using default values
  6185   200006                     	org	2097158
  6186   200006  FF                 	db	255
  6187                           
  6188                           ;Config register IDLOC7 @ 0x200007
  6189                           ;	unspecified, using default values
  6190   200007                     	org	2097159
  6191   200007  FF                 	db	255
  6192                           
  6193                           	psect	config
  6194                           
  6195                           ;Config register CONFIG1L @ 0x300000
  6196                           ;	VREG Sleep Enable bit
  6197                           ;	RETEN = ON, Enabled
  6198                           ;	LF-INTOSC Low-power Enable bit
  6199                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6200                           ;	SOSC Power Selection and mode Configuration bits
  6201                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6202                           ;	Extended Instruction Set
  6203                           ;	XINST = OFF, Disabled
  6204   300000                     	org	3145728
  6205   300000  15                 	db	21
  6206                           
  6207                           ;Config register CONFIG1H @ 0x300001
  6208                           ;	Oscillator
  6209                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  6210                           ;	PLL x4 Enable bit
  6211                           ;	PLLCFG = ON, Enabled
  6212                           ;	Fail-Safe Clock Monitor
  6213                           ;	FCMEN = OFF, Disabled
  6214                           ;	Internal External Oscillator Switch Over Mode
  6215                           ;	IESO = OFF, Disabled
  6216   300001                     	org	3145729
  6217   300001  13                 	db	19
  6218                           
  6219                           ;Config register CONFIG2L @ 0x300002
  6220                           ;	Power Up Timer
  6221                           ;	PWRTEN = OFF, Disabled
  6222                           ;	Brown Out Detect
  6223                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  6224                           ;	Brown-out Reset Voltage bits
  6225                           ;	BORV = 0, 3.0V
  6226                           ;	BORMV Power level
  6227                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6228   300002                     	org	3145730
  6229   300002  61                 	db	97
  6230                           
  6231                           ;Config register CONFIG2H @ 0x300003
  6232                           ;	Watchdog Timer
  6233                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6234                           ;	Watchdog Postscaler
  6235                           ;	WDTPS = 1, 1:1
  6236   300003                     	org	3145731
  6237   300003  00                 	db	0
  6238                           
  6239                           ;Config register CONFIG3L @ 0x300004
  6240                           ;	RTCC Clock Select
  6241                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  6242                           ;	External Address Shift bit
  6243                           ;	EASHFT = OFF, Address Shifting disabled
  6244                           ;	Address Bus Width Select bits
  6245                           ;	ABW = MM, 8-bit address bus
  6246                           ;	Data Bus Width
  6247                           ;	BW = 8, 8-bit external bus mode
  6248                           ;	External Bus Wait
  6249                           ;	WAIT = ON, Enabled
  6250   300004                     	org	3145732
  6251   300004  30                 	db	48
  6252                           
  6253                           ;Config register CONFIG3H @ 0x300005
  6254                           ;	CCP2 Mux
  6255                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  6256                           ;	ECCP Mux
  6257                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  6258                           ;	MSSP address masking
  6259                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  6260                           ;	Master Clear Enable
  6261                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  6262   300005                     	org	3145733
  6263   300005  80                 	db	128
  6264                           
  6265                           ;Config register CONFIG4L @ 0x300006
  6266                           ;	Stack Overflow Reset
  6267                           ;	STVREN = ON, Enabled
  6268                           ;	Boot Block Size
  6269                           ;	BBSIZ = BB1K, 1K word Boot Block size
  6270                           ;	Background Debug
  6271                           ;	DEBUG = OFF, Disabled
  6272   300006                     	org	3145734
  6273   300006  81                 	db	129
  6274                           
  6275                           ; Padding undefined space
  6276   300007                     	org	3145735
  6277   300007  FF                 	db	255
  6278                           
  6279                           ;Config register CONFIG5L @ 0x300008
  6280                           ;	Code Protect 00800-03FFF
  6281                           ;	CP0 = OFF, Disabled
  6282                           ;	Code Protect 04000-07FFF
  6283                           ;	CP1 = OFF, Disabled
  6284                           ;	Code Protect 08000-0BFFF
  6285                           ;	CP2 = OFF, Disabled
  6286                           ;	Code Protect 0C000-0FFFF
  6287                           ;	CP3 = OFF, Disabled
  6288                           ;	Code Protect 10000-13FFF
  6289                           ;	CP4 = OFF, Disabled
  6290                           ;	Code Protect 14000-17FFF
  6291                           ;	CP5 = OFF, Disabled
  6292                           ;	Code Protect 18000-1BFFF
  6293                           ;	CP6 = OFF, Disabled
  6294                           ;	Code Protect 1C000-1FFFF
  6295                           ;	CP7 = OFF, Disabled
  6296   300008                     	org	3145736
  6297   300008  FF                 	db	255
  6298                           
  6299                           ;Config register CONFIG5H @ 0x300009
  6300                           ;	Code Protect Boot
  6301                           ;	CPB = OFF, Disabled
  6302                           ;	Data EE Read Protect
  6303                           ;	CPD = OFF, Disabled
  6304   300009                     	org	3145737
  6305   300009  C0                 	db	192
  6306                           
  6307                           ;Config register CONFIG6L @ 0x30000A
  6308                           ;	Table Write Protect 00800-03FFF
  6309                           ;	WRT0 = OFF, Disabled
  6310                           ;	Table Write Protect 04000-07FFF
  6311                           ;	WRT1 = OFF, Disabled
  6312                           ;	Table Write Protect 08000-0BFFF
  6313                           ;	WRT2 = OFF, Disabled
  6314                           ;	Table Write Protect 0C000-0FFFF
  6315                           ;	WRT3 = OFF, Disabled
  6316                           ;	Table Write Protect 10000-13FFF
  6317                           ;	WRT4 = OFF, Disabled
  6318                           ;	Table Write Protect 14000-17FFF
  6319                           ;	WRT5 = OFF, Disabled
  6320                           ;	Table Write Protect 18000-1BFFF
  6321                           ;	WRT6 = OFF, Disabled
  6322                           ;	Table Write Protect 1C000-1FFFF
  6323                           ;	WRT7 = OFF, Disabled
  6324   30000A                     	org	3145738
  6325   30000A  FF                 	db	255
  6326                           
  6327                           ;Config register CONFIG6H @ 0x30000B
  6328                           ;	Config. Write Protect
  6329                           ;	WRTC = OFF, Disabled
  6330                           ;	Table Write Protect Boot
  6331                           ;	WRTB = OFF, Disabled
  6332                           ;	Data EE Write Protect
  6333                           ;	WRTD = OFF, Disabled
  6334   30000B                     	org	3145739
  6335   30000B  E0                 	db	224
  6336                           
  6337                           ;Config register CONFIG7L @ 0x30000C
  6338                           ;	Table Read Protect 00800-03FFF
  6339                           ;	EBRT0 = OFF, Disabled
  6340                           ;	Table Read Protect 04000-07FFF
  6341                           ;	EBRT1 = OFF, Disabled
  6342                           ;	Table Read Protect 08000-0BFFF
  6343                           ;	EBRT2 = OFF, Disabled
  6344                           ;	Table Read Protect 0C000-0FFFF
  6345                           ;	EBRT3 = OFF, Disabled
  6346                           ;	Table Read Protect 10000-13FFF
  6347                           ;	EBRT4 = OFF, Disabled
  6348                           ;	Table Read Protect 14000-17FFF
  6349                           ;	EBRT5 = OFF, Disabled
  6350                           ;	Table Read Protect 18000-1BFFF
  6351                           ;	EBRT6 = OFF, Disabled
  6352                           ;	Table Read Protect 1C000-1FFFF
  6353                           ;	EBRT7 = OFF, Disabled
  6354   30000C                     	org	3145740
  6355   30000C  FF                 	db	255
  6356                           
  6357                           ;Config register CONFIG7H @ 0x30000D
  6358                           ;	Table Read Protect Boot
  6359                           ;	EBRTB = OFF, Disabled
  6360   30000D                     	org	3145741
  6361   30000D  40                 	db	64
  6362                           tosu	equ	0xFFF
  6363                           tosh	equ	0xFFE
  6364                           tosl	equ	0xFFD
  6365                           stkptr	equ	0xFFC
  6366                           pclatu	equ	0xFFB
  6367                           pclath	equ	0xFFA
  6368                           pcl	equ	0xFF9
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           indf0	equ	0xFEF
  6376                           postinc0	equ	0xFEE
  6377                           postdec0	equ	0xFED
  6378                           preinc0	equ	0xFEC
  6379                           plusw0	equ	0xFEB
  6380                           fsr0h	equ	0xFEA
  6381                           fsr0l	equ	0xFE9
  6382                           wreg	equ	0xFE8
  6383                           indf1	equ	0xFE7
  6384                           postinc1	equ	0xFE6
  6385                           postdec1	equ	0xFE5
  6386                           preinc1	equ	0xFE4
  6387                           plusw1	equ	0xFE3
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           bsr	equ	0xFE0
  6391                           indf2	equ	0xFDF
  6392                           postinc2	equ	0xFDE
  6393                           postdec2	equ	0xFDD
  6394                           preinc2	equ	0xFDC
  6395                           plusw2	equ	0xFDB
  6396                           fsr2h	equ	0xFDA
  6397                           fsr2l	equ	0xFD9
  6398                           status	equ	0xFD8

Data Sizes:
    Strings     165
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     32      44
    BANK0           127      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 21
		 -> STR_20(CODE[4]), STR_19(CODE[3]), STR_18(CODE[19]), STR_17(CODE[8]), 
		 -> STR_16(CODE[12]), STR_15(CODE[12]), STR_14(CODE[21]), STR_13(CODE[7]), 
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_10(CODE[10]), STR_9(CODE[9]), 
		 -> STR_8(CODE[6]), STR_7(CODE[13]), STR_6(CODE[11]), STR_5(CODE[7]), 
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[8]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_filled_square
    _tache1->_draw_square
    _initialisation_afficheur->_d2command
    _draw_string->_d1command
    _draw_square->_plot1
    _draw_hex8->_d1command
    _draw_filled_square->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _clear_text->_d2command
    _clear_line->_goto_lico
    _goto_lico->_d2command
    _draw_char->_d1command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             10    10      0   39948
                                             21 COMRAM    10    10      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     755
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   38186
                                             20 COMRAM     1     1      0
                               _Init
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                 _draw_filled_square
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_string                                          2     0      2    2626
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    4956
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_filled_square                                   6     3      3    4824
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4416
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5023
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _goto_lico                                            6     5      1    3803
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (6) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (7) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _clear_graphics
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
       _d2command
         _delai_us_char
         _wait_status_ok
         _write_c_aff
         _write_d_aff
     _clear_line
       _draw_char
         _d1command
       _goto_lico
         _d2command
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_filled_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
     _draw_string
       _d1command
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7F      0       0      64        0.0%
BITBANK0            7F      0       0       4        0.0%
BANK0               7F      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     20      2C       1       53.0%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      57        0.0%
DATA                 0      0      32       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 22 16:26:56 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0034                 draw_filled_square@x1 0012  
               draw_filled_square@x2 0010                 draw_filled_square@y1 000F  
               draw_filled_square@y2 0011                         ?_draw_square 000F  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0030                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 218E                                 l1433 20BE  
                               l2661 20A2                                 l2663 20A8  
                               l2665 20AE                                 l4705 213C  
                               STR_1 106C                                 STR_2 10A3  
                               STR_3 10A0                                 STR_4 109A  
                               STR_5 1083                                 STR_6 104E  
                               STR_7 1029                                 STR_8 1090  
                               STR_9 1063                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
    __end_of_fonction_d_interruption 032C                                 _TOSH 000FFE  
                               _TOSL 000FFD                                 _WREG 000FE8  
                               _TOSU 000FFF                                 _TP_x 000067  
                               _TP_y 000068                                 _Init 20A0  
                   _FSR0H_TEMPORAIRE 000063                           _RXTX_libre 000080  
                               _main 2126                                 _fptr 002D  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 0021  
                               prodh 000FF4                                 prodl 000FF3  
                               start 032C           ?_initialisation_du_systeme 0001  
                       ___param_bank 000000                     ??_wait_status_ok 0002  
                   ?_lecture_normale 0003                                ?_main 0001  
                    __end_of___awdiv 1C2A                                STR_10 1059  
                              STR_11 108A                                STR_12 1010  
                              STR_20 1096                                STR_13 107C  
                              STR_14 1001                                STR_15 1036  
                              STR_16 1042                                STR_17 1074  
                              STR_18 1016                                STR_19 109D  
                    __end_of___awmod 1C9A                                _T0CON 000FD5  
                    ___awdiv@divisor 0003                                _FSR0H 000FEA  
                              _FSR1H 000FE2                                _FSR0L 000FE9  
                              _FSR2H 000FDA                                _FSR1L 000FE1  
                              _FSR2L 000FD9                      __end_of___lwdiv 1DF6  
                              i2l141 1F84                                i2l138 1F76  
                              i2l410 11AA                                i2l433 1418  
                              i2l534 16B8                                i2l800 18C6  
                              i2l529 1676                                i2l547 21A8  
                              i2l812 18DE                                i2l740 184E  
                              i2l806 18D2                                i2l734 1842  
                              i2l910 175C                                i2l752 1866  
                              i2l728 1836                                i2l904 1750  
                              i2l770 188A                                i2l746 185A  
                              i2l922 1774                                i2l764 187E  
                              i2l940 1798                                i2l916 1768  
                              i2l782 18A2                                i2l758 1872  
                              i2l934 178C                                i2l776 1896  
                              i2l952 17B0                                i2l928 1780  
                              i2l794 18BA                                i2l970 17D4  
                              i2l946 17A4                                i2l788 18AE  
                              i2l964 17C8                      ___awdiv@counter 0005  
                              i2l982 17EC                                i2l958 17BC  
                              i2l976 17E0                                i2l988 17F8  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 2174  
                        _write_d_aff 215A                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                      __end_of_command 215A  
                              _badge 000075                                _plot1 19C8  
                              _queue 000069                                tablat 000FF5  
                              ltemp0 0021                                ltemp1 0025  
                              ltemp2 0029                __end_of_delai_us_char 2106  
                              plusw1 000FE3                      _check_status_ok 204C  
                              ttemp0 0021                                ttemp1 0024  
                              ttemp2 0027                                ttemp3 002A  
                              ttemp5 0022                                ttemp6 0025  
                              ttemp7 0029                                status 000FD8  
                              wtemp0 0021                                wtemp1 0023  
                              wtemp2 0025                                wtemp3 0027  
                              wtemp4 0029                                wtemp5 002B  
                              wtemp8 0022        initialisation_du_systeme@temp 0020  
                    __initialization 21BE                         __end_of_Init 20C2  
         lecture_8bit_analogique@ret 0001                         __end_of_main 2140  
                             ??_main 0021                        __activetblptr 000003  
                       draw_square@x 0013                         draw_square@y 0014  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               ?_plot1 0009  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0001  
                      _n_octet_badge 00007F                               _MEMCON 000F26  
                             i2l1218 20E8                               i2l1226 193C  
                             i2l1236 1FAA                               i2l1260 1CE2  
                             i2l1244 1D50                               i2l2125 1DEC  
                             i2l1255 1CB6                               i2l1280 1D36  
                             i2l4001 1C20                               i2l1194 1DFE  
                             i2l4021 1C58                               i2l4013 1C3E  
                             i2l4023 1C60                               i2l4111 1926  
                             i2l1544 1AB2                               i2l4033 1C82  
                             i2l4017 1C4A                               i2l4121 193E  
                             i2l3321 1B3A                               i2l1545 1ABA  
                             i2l1554 2190                               i2l4051 1D14  
                             i2l4203 1CDA                               i2l1547 1AC4  
                             i2l4053 1D38                               i2l4213 210C  
                             i2l4133 1FD4                               i2l4037 1C90  
                             i2l4029 1C78                               i2l4205 1CE4  
                             i2l4301 1DE2                               i2l2447 1E38  
                             i2l4063 1FA2                               i2l4047 1D0A  
                             i2l4071 1A04                               i2l3327 1B48  
                             i2l2449 1E3C                               i2l4065 1FAC  
                             i2l4081 1A2C                               i2l4073 1A0C  
                             i2l4161 1EC4                               i2l4225 21B4  
                             i2l3345 1B76                               i2l5025 02D4  
                             i2l2395 20FE                               i2l4147 2004  
                             i2l4059 1F98                               i2l4075 1A14  
                             i2l4171 202C                               i2l4155 1EA0  
                             i2l3339 1B68                               i2l4243 1AA4  
                             i2l4235 1A8E                               _PCLATH 000FFA  
                             i2l4077 1A1C                               i2l4085 1A34  
                             i2l4165 1EDA                               i2l3357 1B96  
                             i2l4079 1A24                               i2l4175 2038  
                             i2l4159 1EB6                               i2l4183 1D52  
                             i2l3439 1804                               i2l4095 219C  
                             i2l4169 2026                               i2l2649 2070  
                             i2l4505 11BC                               i2l3449 181C  
                             i2l4179 2042                               i2l4195 1CAE  
                             i2l4187 1D76                               i2l4515 11EA  
                             i2l4507 11C8                               i2l4291 1DC2  
                             i2l4197 1CB8                               i2l4517 11F0  
                             i2l2679 1F88                               i2l4535 1252  
                             i2l3399 18EA                               i2l4279 1B14  
                             i2l4617 13C0                               i2l4545 1276  
                             i2l4537 1258                               i2l4289 1DBA  
                             _PCLATU 000FFB                               i2l3931 1F1A  
                             i2l4619 13D0                               i2l4571 12D0  
                             i2l4563 12AC                               i2l4581 1308  
                             i2l4573 12DC                               i2l4549 127E  
                             i2l4725 005C                               i2l4583 130E  
                             i2l4559 12A4                               i2l4495 1182  
                             i2l4665 16D8                               i2l4649 1696  
                             i2l4587 1322                               i2l3957 1E94  
                             i2l3981 1BE0                               i2l3983 1BE8  
                             i2l3975 1BCA                               i2l3993 1C08  
                             i2l3969 1BBA                               i2l4689 2098  
                             i2l3997 1C12                               i2l4869 0190  
                             _TABLAT 000FF5                               _RCSTA1 000FAB  
                         _Tick_Count 000071                               _SPBRG1 000FAF  
                   _FSR0L_TEMPORAIRE 000064                               _STATUS 000FD8  
                             _STKPTR 000FFC                               _TXREG1 000FAD  
                     clear_line@line 000F                               _TXSTA1 000FAC  
                          ??___awdiv 0005                            ??___awmod 0005  
                          ??___lwdiv 0005                               _tache1 10A8  
                             _tache2 1654                               _tache3 1B18  
                             _tache4 182E                               _tache5 1748  
                             _tache6 2078                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               lltemp0 0021  
                             plot1@x 000E                               plot1@y 0009  
                   __end_of_tp_delai 21BE                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 2078  
       lecture_normale@temps_attente 0005                           __accesstop 0060  
            __end_of__initialization 21C8                        ___rparam_used 000001  
         __end_of_draw_filled_square 204C                       __pcstackCOMRAM 0001  
                         ___inthi_sp 0AAC                    __end_of_d1command 1F1E  
                  __end_of_d2command 1E98                        __end_of_plot1 1A76  
                            ??_plot1 000A                        draw_square@x1 0012  
                      draw_square@x2 0010                        draw_square@y1 000F  
                      draw_square@y2 0011                         _W_TEMPORAIRE 000060  
                         __pnvCOMRAM 002D                       _clear_graphics 1FEE  
        ??_initialisation_du_systeme 0020                           _clear_line 2106  
                         _clear_text 1FBE             ?_fonction_d_interruption 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                         ?_write_d_aff 0001  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8             _initialisation_afficheur 18FC  
                            _SPBRGH1 000FD4                     ?_check_status_ok 0001  
                  wait_status_ok@err 0002                    wait_status_ok@res 0004  
                        _Val_sem_cna 0038               __end_of_clear_graphics 201E  
                  stid_delai_us@isdu 0001                 lecture_normale@n_bit 0007  
               lecture_normale@octet 0008             _initialisation_des_ports 1F1E  
                          _DEMARRAGE 000065                              __Hparam 0000  
                            __Lparam 0000                            ?_tp_delai 0001  
                  __end_of_draw_char 1FBE                    __end_of_draw_hex8 1CF6  
                            ___awdiv 1BA6                              ___awmod 1C2A  
                            ___lwdiv 1DA4                         __psmallconst 1000  
                            __pcinit 21BE                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 2126  
                            __ptext1 141C                              __ptext2 1F1E  
                            __ptext3 20A0                              __ptext5 2078  
                            __ptext6 1A76                              __ptext7 218E  
                            __ptext8 1748                              __ptext9 182E  
                            _command 2140                            _T0CONbits 000FD5  
                 draw_string@tableau 0008            _initialisation_du_systeme 141C  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 20E4  
                  __end_of_goto_lico 1D4E                              _val_tos 0032  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 21C8                              tache1@i 0015  
                            tache4@a 0001                              tache5@a 0001  
                            tache6@n 0009                      ?_clear_graphics 0001  
                        ?_clear_line 0001                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84              _lecture_8bit_analogique 1F56  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                draw_filled_square@x 0013                  draw_filled_square@y 0014  
                         command@cmd 0005                           draw_hex8@c 0009  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
     lecture_8bit_analogique@channel 0002                            _d1command 1EE4  
                          _d2command 1E48                       __end_of_tache1 141C  
                     __end_of_tache2 1748                       __end_of_tache3 1BA6  
                     __end_of_tache4 18FC                       __end_of_tache5 182E  
                     __end_of_tache6 20A0                        ??_draw_square 0012  
                      ??_draw_string 000A                   _draw_filled_square 201E  
             lecture_normale@stid_id 0003                __end_of_stid_delai_us 21A6  
                start_initialization 21BE                  ?_draw_filled_square 000F  
                  ??_lecture_normale 0005                        _delai_us_char 20E4  
               ??_draw_filled_square 0012                             ??_tache1 0015  
                           ??_tache2 0008                             ??_tache3 0001  
                           ??_tache4 0001                             ??_tache5 0001  
                           ??_tache6 0009           ??_initialisation_afficheur 0009  
          ??_lecture_8bit_analogique 0001                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 0034  
                __end_of_draw_square 1EE4           ??_initialisation_des_ports 0020  
                __end_of_draw_string 1DA4                       ?_delai_us_char 0001  
                   ___lwdiv@dividend 0001                            __pintcode 0008  
                           ?___awdiv 0001                             ?___awmod 0001  
                           ?___lwdiv 0001                    _pointeur_de_tache 000070  
                          _draw_char 1F8C                            _draw_hex8 1C9A  
                           ?_command 0001                       _wait_status_ok 1DF6  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 20C2  
                 write_c_aff@command 0001                            _goto_lico 1CF6  
    __end_of_lecture_8bit_analogique 1F8C                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 1654  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u110_40 185E                             i2u120_40 189A  
                           i2u112_40 186A                             i2u104_40 183A  
                           i2u130_40 18D6                             i2u122_40 18A6  
                           i2u114_40 1876                             i2u106_40 1846  
                           i2u124_40 18B2                             i2u116_40 1882  
                           i2u108_40 1852                             i2u141_40 1778  
                           i2u126_40 18BE                             i2u118_40 188E  
                           i2u151_40 17B4                             i2u143_40 1784  
                           i2u135_40 1754                             i2u128_40 18CA  
                           i2u161_40 17F0                             i2u153_40 17C0  
                           i2u145_40 1790                             i2u137_40 1760  
                           i2u226_40 1DC6                             i2u155_40 17CC  
                           i2u147_40 179C                             i2u139_40 176C  
                           i2u157_40 17D8                             i2u149_40 17A8  
                       ??_clear_line 000F                             i2u238_40 132C  
                           i2u159_40 17E4                             i2u192_40 1C64  
                           _PIR1bits 000F9E                             i2u186_40 1BEC  
                       ??_clear_text 0009                             _POSTINC0 000FEE  
                           _POSTINC1 000FE6                    _STATUS_TEMPORAIRE 000061  
             __end_of_wait_status_ok 1E48                          ??_d1command 0006  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                   clear_line@column 0010                          _draw_square 1E98  
                        _draw_string 1D4E                         _Val_sem_rxtx 0037  
                           _TP_appui 000066                   __end_of_clear_line 2126  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 1FEE                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           __Lrparam 0000     __end_of_initialisation_afficheur 19C8  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
            _fonction_d_interruption 0008                      _lecture_normale 1A76  
                           _batterie 000074                      ___lwdiv@divisor 0003  
   __end_of_initialisation_des_ports 1F56                      ___lwdiv@counter 0007  
                           __ptext10 1B18                             __ptext11 1654  
                           __ptext20 1E98                             __ptext12 21A6  
                           __ptext21 1C9A                             __ptext13 1DA4  
                           __ptext30 1F8C                             __ptext22 201E  
                           __ptext14 10A8                             __ptext31 1FEE  
                           __ptext23 19C8                             __ptext15 1F56  
                           __ptext32 1E48                             __ptext24 2140  
                           __ptext16 18FC                             __ptext33 1EE4  
                           __ptext25 1C2A                             __ptext17 204C  
                           __ptext34 215A                             __ptext26 1BA6  
                           __ptext18 20C2                             __ptext35 2174  
                           __ptext27 1FBE                             __ptext19 1D4E  
                           __ptext36 1DF6                             __ptext28 2106  
                           __ptext37 20E4                             __ptext29 1CF6  
                           __ptext38 0000                             isa$xinst 000000  
                           _tp_delai 21A6                    ??_check_status_ok 0001  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_init_rxtx 0001  
                        ??_goto_lico 000A                             intlevel2 0000  
                           plot1@add 000C                       goto_lico@ligne 000C  
            __end_of_lecture_normale 1B18                         d1command@cmd 0005  
                       d1command@res 0007            ??_fonction_d_interruption 0016  
                       tp_delai@itpd 0001                          d1command@d1 0006  
                __end_of_write_c_aff 218E                  __end_of_write_d_aff 2174  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
