

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 23 14:44:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57                           	dabs	1,0x82,1,_Personne
    58                           	dabs	1,0x603,1,_STKPTR_T6
    59                           	dabs	1,0x503,1,_STKPTR_T5
    60                           	dabs	1,0x403,1,_STKPTR_T4
    61                           	dabs	1,0x303,1,_STKPTR_T3
    62                           	dabs	1,0x203,1,_STKPTR_T2
    63                           	dabs	1,0x103,1,_STKPTR_T1
    64                           	dabs	1,0x60,1,_W_TEMPORAIRE
    65                           	dabs	1,0x100,66,_contexte1
    66                           	dabs	1,0x69,6,_queue
    67                           	dabs	1,0x71,2,_Tick_Count
    68                           	dabs	1,0x83,1,_Valeur
    69                           	dabs	1,0x82,1,_Operator
    70                           	dabs	1,0x81,1,_TEST
    71                           	dabs	1,0x80,1,_RXTX_libre
    72                           	dabs	1,0x7F,1,_n_octet_badge
    73                           	dabs	1,0x74,1,_batterie
    74                           	dabs	1,0x73,1,_vitesse
    75                           	dabs	1,0x70,1,_pointeur_de_tache
    76                           	dabs	1,0x6F,1,_tache_active
    77                           	dabs	1,0x68,1,_TP_y
    78                           	dabs	1,0x67,1,_TP_x
    79                           	dabs	1,0x66,1,_TP_appui
    80                           	dabs	1,0x65,1,_DEMARRAGE
    81                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    82                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    83                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    84                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    85                           	dabs	1,0x75,10,_badge
    86                           	dabs	1,0x200,66,_contexte2
    87                           	dabs	1,0x300,66,_contexte3
    88                           	dabs	1,0x400,66,_contexte4
    89                           	dabs	1,0x500,66,_contexte5
    90                           	dabs	1,0x600,66,_contexte6
    91   000000                     
    92                           ; Generated 06/04/2022 GMT
    93                           ; 
    94                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F87K22 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126   000000                     
   127 ;;Init@sem	offset=-1 (param)
   128 ;;Init@sem	offset=-1 (param)
   129   000000                     _TMR0	set	4054
   130                           
   131                           ; 1 bytes @ 0x21
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 6 in file "main.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called: 8
   157 ;; This function calls:
   158 ;;		_Init
   159 ;;		_initialisation_des_ports
   160 ;;		_initialisation_du_systeme
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167   002324                     __ptext0:
   168                           	callstack 0
   169   000000                     _T0IF	set	32658
   170   000000                     _INTCON2bits	set	4081
   171   000000                     _STATUS	set	4056
   172   000000                     _WREG	set	4072
   173   000000                     _BSR	set	4064
   174   000000                     _FSR0H	set	4074
   175   000000                     _FSR0L	set	4073
   176   000000                     _STKPTR	set	4092
   177   000000                     _FSR1H	set	4066
   178   000000                     _FSR1L	set	4065
   179   000000                     _FSR2H	set	4058
   180   000000                     _FSR2L	set	4057
   181   000000                     _PRODH	set	4084
   182   000000                     _PRODL	set	4083
   183   000000                     _TBLPTRU	set	4088
   184   000000                     _TBLPTRH	set	4087
   185   000000                     _TBLPTRL	set	4086
   186   000000                     _TABLAT	set	4085
   187   000000                     _TOSL	set	4093
   188   000000                     _TOSH	set	4094
   189   000000                     _TOSU	set	4095
   190   002324                     _main:
   191                           	callstack 23
   192                           
   193                           ;main.c: 8: initialisation_des_ports();
   194                           
   195                           ;incstack = 0
   196   002324  ECB9  F010         	call	_initialisation_des_ports	;wreg free
   197                           
   198                           ;main.c: 9: initialisation_du_systeme();
   199   002328  EC3D  F00A         	call	_initialisation_du_systeme	;wreg free
   200                           
   201                           ;main.c: 10: Init(1);
   202   00232C  0E01               	movlw	1
   203   00232E  6EE6               	movwf	postinc1,c
   204   002330  EC4F  F011         	call	_Init	;wreg free
   205                           
   206                           ;main.c: 13: T0CONbits.TMR0ON=1;
   207   002334  8ED5               	bsf	213,7,c	;volatile
   208                           
   209                           ;main.c: 14: T0IF=1;
   210   002336  84F2               	bsf	4082,2,c	;volatile
   211                           
   212                           ;main.c: 15: (INTCONbits.GIE = 1);
   213   002338  8EF2               	bsf	242,7,c	;volatile
   214   00233A                     l4992:
   215                           
   216                           ;main.c: 19: __nop();
   217   00233A  F000               	nop	
   218   00233C  D7FE               	goto	l4992
   219   00233E                     __end_of_main:
   220                           	callstack 0
   221                           
   222                           	psect	nvCOMRAM
   223   00002E                     __pnvCOMRAM:
   224                           	callstack 0
   225   00002E                     _fptr:
   226                           	callstack 0
   227   00002E                     	ds	3
   228   000031                     _puc:
   229                           	callstack 0
   230   000031                     	ds	2
   231   000033                     _val_tos:
   232                           	callstack 0
   233   000033                     	ds	2
   234   000000                     _ANCON1bits	set	3876
   235   000000                     _ANCON0bits	set	3877
   236   000000                     _TXSTA1	set	4012
   237   000000                     _LATJ	set	3985
   238   000000                     _T0CON	set	4053
   239   000000                     _ADCON0bits	set	4034
   240   000000                     _INTCONbits	set	4082
   241   000000                     _T0IE	set	32661
   242   000000                     _ANCON2	set	3875
   243   000000                     _ANCON1	set	3876
   244   000000                     _ANCON0	set	3877
   245   000000                     _MEMCON	set	3878
   246   000000                     _T0CONbits	set	4053
   247   000000                     _PADCFG1bits	set	3923
   248   000000                     _LATCbits	set	3979
   249   000000                     _LATDbits	set	3980
   250   000000                     _LATGbits	set	3983
   251   000000                     _LATJbits	set	3985
   252   000000                     _LATH	set	3984
   253   000000                     _TRISCbits	set	3988
   254   000000                     _TRISDbits	set	3989
   255   000000                     _TRISGbits	set	3992
   256   000000                     _TRISJ	set	3994
   257   000000                     _TRISH	set	3993
   258   000000                     _PIR1bits	set	3998
   259   000000                     _TXREG1	set	4013
   260   000000                     _ADCON2	set	4032
   261   000000                     _ADCON1	set	4033
   262   000000                     _BAUDCON1	set	3941
   263   000000                     _PORTBbits	set	3969
   264   000000                     _SPBRGH1	set	4052
   265   000000                     _ADRESH	set	4036
   266   000000                     _ADRESL	set	4035
   267   000000                     _ADCON0	set	4034
   268   000000                     _POSTINC0	set	4078
   269   000000                     _POSTINC1	set	4070
   270   000000                     _PCLATH	set	4090
   271   000000                     _PCLATU	set	4091
   272   000000                     _SPBRG1	set	4015
   273   000000                     _PORTDbits	set	3971
   274   000000                     _PORTEbits	set	3972
   275   000000                     _PORTH	set	3975
   276   000000                     _RCSTA1	set	4011
   277   000000                     _TXSTA1bits	set	4012
   278                           
   279                           	psect	smallconst
   280   001000                     __psmallconst:
   281                           	callstack 0
   282   001000  00                 	db	0
   283   001001                     STR_24:
   284   001001  41                 	db	65	;'A'
   285   001002  54                 	db	84	;'T'
   286   001003  54                 	db	84	;'T'
   287   001004  45                 	db	69	;'E'
   288   001005  4E                 	db	78	;'N'
   289   001006  54                 	db	84	;'T'
   290   001007  49                 	db	73	;'I'
   291   001008  4F                 	db	79	;'O'
   292   001009  4E                 	db	78	;'N'
   293   00100A  20                 	db	32
   294   00100B  76                 	db	118	;'v'
   295   00100C  6F                 	db	111	;'o'
   296   00100D  75                 	db	117	;'u'
   297   00100E  73                 	db	115	;'s'
   298   00100F  20                 	db	32
   299   001010  65                 	db	101	;'e'
   300   001011  74                 	db	116	;'t'
   301   001012  65                 	db	101	;'e'
   302   001013  73                 	db	115	;'s'
   303   001014  20                 	db	32
   304   001015  70                 	db	112	;'p'
   305   001016  6C                 	db	108	;'l'
   306   001017  65                 	db	101	;'e'
   307   001018  69                 	db	105	;'i'
   308   001019  6E                 	db	110	;'n'
   309   00101A  21                 	db	33
   310   00101B  21                 	db	33
   311   00101C  21                 	db	33
   312   00101D  00                 	db	0
   313   00101E                     STR_14:
   314   00101E  20                 	db	32
   315   00101F  41                 	db	65	;'A'
   316   001020  55                 	db	85	;'U'
   317   001021  43                 	db	67	;'C'
   318   001022  55                 	db	85	;'U'
   319   001023  4E                 	db	78	;'N'
   320   001024  20                 	db	32
   321   001025  20                 	db	32
   322   001026  20                 	db	32
   323   001027  20                 	db	32
   324   001028  20                 	db	32
   325   001029  20                 	db	32
   326   00102A  20                 	db	32
   327   00102B  20                 	db	32
   328   00102C  20                 	db	32
   329   00102D  20                 	db	32
   330   00102E  20                 	db	32
   331   00102F  20                 	db	32
   332   001030  20                 	db	32
   333   001031  20                 	db	32
   334   001032  00                 	db	0
   335   001033                     STR_25:
   336   001033  52                 	db	82	;'R'
   337   001034  4F                 	db	79	;'O'
   338   001035  55                 	db	85	;'U'
   339   001036  45                 	db	69	;'E'
   340   001037  53                 	db	83	;'S'
   341   001038  42                 	db	66	;'B'
   342   001039  59                 	db	89	;'Y'
   343   00103A  47                 	db	71	;'G'
   344   00103B  4E                 	db	78	;'N'
   345   00103C  4F                 	db	79	;'O'
   346   00103D  4C                 	db	76	;'L'
   347   00103E  45                 	db	69	;'E'
   348   00103F  53                 	db	83	;'S'
   349   001040  00                 	db	0
   350   001041                     STR_9:
   351   001041  54                 	db	84	;'T'
   352   001042  65                 	db	101	;'e'
   353   001043  6D                 	db	109	;'m'
   354   001044  70                 	db	112	;'p'
   355   001045  2E                 	db	46
   356   001046  20                 	db	32
   357   001047  48                 	db	72	;'H'
   358   001048  75                 	db	117	;'u'
   359   001049  69                 	db	105	;'i'
   360   00104A  6C                 	db	108	;'l'
   361   00104B  65                 	db	101	;'e'
   362   00104C  3A                 	db	58	;':'
   363   00104D  00                 	db	0
   364   00104E                     STR_18:
   365   00104E  58                 	db	88	;'X'
   366   00104F  2D                 	db	45
   367   001050  4A                 	db	74	;'J'
   368   001051  6F                 	db	111	;'o'
   369   001052  79                 	db	121	;'y'
   370   001053  73                 	db	115	;'s'
   371   001054  74                 	db	116	;'t'
   372   001055  69                 	db	105	;'i'
   373   001056  63                 	db	99	;'c'
   374   001057  6B                 	db	107	;'k'
   375   001058  3A                 	db	58	;':'
   376   001059  00                 	db	0
   377   00105A                     STR_19:
   378   00105A  59                 	db	89	;'Y'
   379   00105B  2D                 	db	45
   380   00105C  4A                 	db	74	;'J'
   381   00105D  6F                 	db	111	;'o'
   382   00105E  79                 	db	121	;'y'
   383   00105F  73                 	db	115	;'s'
   384   001060  74                 	db	116	;'t'
   385   001061  69                 	db	105	;'i'
   386   001062  63                 	db	99	;'c'
   387   001063  6B                 	db	107	;'k'
   388   001064  3A                 	db	58	;':'
   389   001065  00                 	db	0
   390   001066                     STR_8:
   391   001066  54                 	db	84	;'T'
   392   001067  65                 	db	101	;'e'
   393   001068  6D                 	db	109	;'m'
   394   001069  70                 	db	112	;'p'
   395   00106A  2E                 	db	46
   396   00106B  20                 	db	32
   397   00106C  45                 	db	69	;'E'
   398   00106D  61                 	db	97	;'a'
   399   00106E  75                 	db	117	;'u'
   400   00106F  3A                 	db	58	;':'
   401   001070  00                 	db	0
   402   001071                     STR_12:
   403   001071  42                 	db	66	;'B'
   404   001072  61                 	db	97	;'a'
   405   001073  74                 	db	116	;'t'
   406   001074  74                 	db	116	;'t'
   407   001075  65                 	db	101	;'e'
   408   001076  72                 	db	114	;'r'
   409   001077  69                 	db	105	;'i'
   410   001078  65                 	db	101	;'e'
   411   001079  3A                 	db	58	;':'
   412   00107A  00                 	db	0
   413   00107B                     STR_11:
   414   00107B  56                 	db	86	;'V'
   415   00107C  69                 	db	105	;'i'
   416   00107D  74                 	db	116	;'t'
   417   00107E  65                 	db	101	;'e'
   418   00107F  73                 	db	115	;'s'
   419   001080  73                 	db	115	;'s'
   420   001081  65                 	db	101	;'e'
   421   001082  3A                 	db	58	;':'
   422   001083  00                 	db	0
   423   001084                     STR_15:
   424   001084  4F                 	db	79	;'O'
   425   001085  70                 	db	112	;'p'
   426   001086  65                 	db	101	;'e'
   427   001087  72                 	db	114	;'r'
   428   001088  61                 	db	97	;'a'
   429   001089  74                 	db	116	;'t'
   430   00108A  6F                 	db	111	;'o'
   431   00108B  72                 	db	114	;'r'
   432   00108C  00                 	db	0
   433   00108D                     STR_1:
   434   00108D  4D                 	db	77	;'M'
   435   00108E  61                 	db	97	;'a'
   436   00108F  72                 	db	114	;'r'
   437   001090  63                 	db	99	;'c'
   438   001091  68                 	db	104	;'h'
   439   001092  65                 	db	101	;'e'
   440   001093  3A                 	db	58	;':'
   441   001094  00                 	db	0
   442   001095                     STR_13:
   443   001095  42                 	db	66	;'B'
   444   001096  61                 	db	97	;'a'
   445   001097  64                 	db	100	;'d'
   446   001098  67                 	db	103	;'g'
   447   001099  65                 	db	101	;'e'
   448   00109A  3A                 	db	58	;':'
   449   00109B  00                 	db	0
   450   00109C                     STR_7:
   451   00109C  53                 	db	83	;'S'
   452   00109D  69                 	db	105	;'i'
   453   00109E  65                 	db	101	;'e'
   454   00109F  67                 	db	103	;'g'
   455   0010A0  65                 	db	101	;'e'
   456   0010A1  3A                 	db	58	;':'
   457   0010A2  00                 	db	0
   458   0010A3                     STR_21:
   459   0010A3  43                 	db	67	;'C'
   460   0010A4  48                 	db	72	;'H'
   461   0010A5  41                 	db	65	;'A'
   462   0010A6  52                 	db	82	;'R'
   463   0010A7  47                 	db	71	;'G'
   464   0010A8  45                 	db	69	;'E'
   465   0010A9  00                 	db	0
   466   0010AA                     STR_16:
   467   0010AA  20                 	db	32
   468   0010AB  41                 	db	65	;'A'
   469   0010AC  44                 	db	68	;'D'
   470   0010AD  4D                 	db	77	;'M'
   471   0010AE  49                 	db	73	;'I'
   472   0010AF  4E                 	db	78	;'N'
   473   0010B0  00                 	db	0
   474   0010B1                     STR_5:
   475   0010B1  28                 	db	40
   476   0010B2  28                 	db	40
   477   0010B3  21                 	db	33
   478   0010B4  29                 	db	41
   479   0010B5  29                 	db	41
   480   0010B6  00                 	db	0
   481   0010B7                     STR_10:
   482   0010B7  43                 	db	67	;'C'
   483   0010B8  68                 	db	104	;'h'
   484   0010B9  6F                 	db	111	;'o'
   485   0010BA  63                 	db	99	;'c'
   486   0010BB  3A                 	db	58	;':'
   487   0010BC  00                 	db	0
   488   0010BD                     STR_17:
   489   0010BD  41                 	db	65	;'A'
   490   0010BE  55                 	db	85	;'U'
   491   0010BF  43                 	db	67	;'C'
   492   0010C0  55                 	db	85	;'U'
   493   0010C1  4E                 	db	78	;'N'
   494   0010C2  00                 	db	0
   495   0010C3                     STR_20:
   496   0010C3  56                 	db	86	;'V'
   497   0010C4  49                 	db	73	;'I'
   498   0010C5  44                 	db	68	;'D'
   499   0010C6  45                 	db	69	;'E'
   500   0010C7  00                 	db	0
   501   0010C8                     STR_23:
   502   0010C8  20                 	db	32
   503   0010C9  79                 	db	121	;'y'
   504   0010CA  3D                 	db	61	;'='
   505   0010CB  00                 	db	0
   506   0010CC                     STR_4:
   507   0010CC  4E                 	db	78	;'N'
   508   0010CD  20                 	db	32
   509   0010CE  00                 	db	0
   510   0010CF                     STR_22:
   511   0010CF  78                 	db	120	;'x'
   512   0010D0  3D                 	db	61	;'='
   513   0010D1  00                 	db	0
   514   0010D2                     STR_3:
   515   0010D2  41                 	db	65	;'A'
   516   0010D3  52                 	db	82	;'R'
   517   0010D4  00                 	db	0
   518   0010D5                     STR_2:
   519   0010D5  41                 	db	65	;'A'
   520   0010D6  56                 	db	86	;'V'
   521   0010D7  00                 	db	0
   522   0010D8  00                 	db	0	; dummy byte at the end
   523   000000                     
   524                           ; #config settings
   525                           
   526                           	psect	cinit
   527   0023EC                     __pcinit:
   528                           	callstack 0
   529   0023EC                     start_initialization:
   530                           	callstack 0
   531   0023EC                     __initialization:
   532                           	callstack 0
   533                           
   534                           ; Clear objects allocated to COMRAM (5 bytes)
   535   0023EC  6A39               	clrf	(__pbssCOMRAM+4)& (0+255),c
   536   0023EE  6A38               	clrf	(__pbssCOMRAM+3)& (0+255),c
   537   0023F0  6A37               	clrf	(__pbssCOMRAM+2)& (0+255),c
   538   0023F2  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   539   0023F4  6A35               	clrf	__pbssCOMRAM& (0+255),c
   540   0023F6                     end_of_initialization:
   541                           	callstack 0
   542   0023F6                     __end_of__initialization:
   543                           	callstack 0
   544   0023F6  0100               	movlb	0
   545   0023F8  EF92  F011         	goto	_main	;jump to C main() function
   546                           
   547                           	psect	bssCOMRAM
   548   000035                     __pbssCOMRAM:
   549                           	callstack 0
   550   000035                     _tc:
   551                           	callstack 0
   552   000035                     	ds	3
   553   000038                     _Val_sem_rxtx:
   554                           	callstack 0
   555   000038                     	ds	1
   556   000039                     _Val_sem_cna:
   557                           	callstack 0
   558   000039                     	ds	1
   559                           
   560                           	psect	cstackCOMRAM
   561   000001                     __pcstackCOMRAM:
   562                           	callstack 0
   563   000001                     ?___awdiv:
   564                           	callstack 0
   565   000001                     ?___awmod:
   566                           	callstack 0
   567   000001                     ?___lwdiv:
   568                           	callstack 0
   569   000001                     lecture_8bit_analogique@ret:
   570                           	callstack 0
   571   000001                     write_d_aff@data:
   572                           	callstack 0
   573   000001                     write_c_aff@command:
   574                           	callstack 0
   575   000001                     check_status_ok@res:
   576                           	callstack 0
   577   000001                     delai_us_char@ucdelai:
   578                           	callstack 0
   579   000001                     tp_delai@itpd:
   580                           	callstack 0
   581   000001                     tache4@a:
   582                           	callstack 0
   583   000001                     tache5@a:
   584                           	callstack 0
   585   000001                     vitesseAdmin@a:
   586                           	callstack 0
   587   000001                     stid_delai_us@isdu:
   588                           	callstack 0
   589   000001                     ___awdiv@dividend:
   590                           	callstack 0
   591   000001                     ___awmod@dividend:
   592                           	callstack 0
   593   000001                     ___lwdiv@dividend:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x0
   597   000001                     	ds	1
   598   000002                     lecture_8bit_analogique@channel:
   599                           	callstack 0
   600   000002                     wait_status_ok@err:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x1
   604   000002                     	ds	1
   605   000003                     ??_vitesseAdmin:
   606   000003                     wait_status_ok@status:
   607                           	callstack 0
   608   000003                     lecture_normale@stid_id:
   609                           	callstack 0
   610   000003                     ___awdiv@divisor:
   611                           	callstack 0
   612   000003                     ___awmod@divisor:
   613                           	callstack 0
   614   000003                     ___lwdiv@divisor:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x2
   618   000003                     	ds	1
   619   000004                     wait_status_ok@res:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x3
   623   000004                     	ds	1
   624   000005                     command@cmd:
   625                           	callstack 0
   626   000005                     d1command@cmd:
   627                           	callstack 0
   628   000005                     d2command@d2:
   629                           	callstack 0
   630   000005                     lecture_normale@temps_attente:
   631                           	callstack 0
   632   000005                     ___awdiv@counter:
   633                           	callstack 0
   634   000005                     ___awmod@counter:
   635                           	callstack 0
   636   000005                     ___lwdiv@quotient:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x4
   640   000005                     	ds	1
   641   000006                     d1command@d1:
   642                           	callstack 0
   643   000006                     d2command@cmd:
   644                           	callstack 0
   645   000006                     lecture_normale@n_octet:
   646                           	callstack 0
   647   000006                     ___awdiv@sign:
   648                           	callstack 0
   649   000006                     ___awmod@sign:
   650                           	callstack 0
   651   000006                     vitesseAdmin@b:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x5
   655   000006                     	ds	1
   656   000007                     d1command@res:
   657                           	callstack 0
   658   000007                     d2command@d1:
   659                           	callstack 0
   660   000007                     lecture_normale@n_bit:
   661                           	callstack 0
   662   000007                     ___lwdiv@counter:
   663                           	callstack 0
   664   000007                     ___awdiv@quotient:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x6
   668   000007                     	ds	1
   669   000008                     ??_tache2:
   670   000008                     d2command@res:
   671                           	callstack 0
   672   000008                     draw_char@dccar:
   673                           	callstack 0
   674   000008                     draw_hex8@octet:
   675                           	callstack 0
   676   000008                     lecture_normale@octet:
   677                           	callstack 0
   678   000008                     draw_string@tableau:
   679                           	callstack 0
   680   000008                     vitesseAdmin@c:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x7
   684   000008                     	ds	1
   685   000009                     ??_draw_dec8:
   686   000009                     tache6@n:
   687                           	callstack 0
   688   000009                     initialisation_afficheur@error_count:
   689                           	callstack 0
   690   000009                     draw_hex8@c:
   691                           	callstack 0
   692   000009                     goto_lico@colonne:
   693                           	callstack 0
   694   000009                     plot1@y:
   695                           	callstack 0
   696   000009                     clear_text@add:
   697                           	callstack 0
   698   000009                     clear_graphics@add:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x8
   702   000009                     	ds	1
   703   00000A                     ??_goto_lico:
   704   00000A                     ??_plot1:
   705   00000A                     draw_dec8@unit:
   706                           	callstack 0
   707   00000A                     tache2@ix:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x9
   711   00000A                     	ds	1
   712   00000B                     draw_dec8@octet:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0xA
   716   00000B                     	ds	1
   717   00000C                     draw_dec8@cent:
   718                           	callstack 0
   719   00000C                     goto_lico@ligne:
   720                           	callstack 0
   721   00000C                     tache2@iy:
   722                           	callstack 0
   723   00000C                     plot1@add:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0xB
   727   00000C                     	ds	1
   728   00000D                     draw_dec8@dix:
   729                           	callstack 0
   730   00000D                     goto_lico@adr:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0xC
   734   00000D                     	ds	1
   735   00000E                     tache2@hx:
   736                           	callstack 0
   737   00000E                     draw_dec8@c:
   738                           	callstack 0
   739   00000E                     plot1@x:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0xD
   743   00000E                     	ds	1
   744   00000F                     tache2@lx:
   745                           	callstack 0
   746   00000F                     clear_line@line:
   747                           	callstack 0
   748   00000F                     draw_square@y1:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0xE
   752   00000F                     	ds	1
   753   000010                     tache2@hy:
   754                           	callstack 0
   755   000010                     clear_line@column:
   756                           	callstack 0
   757   000010                     draw_square@x2:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0xF
   761   000010                     	ds	1
   762   000011                     tache2@ly:
   763                           	callstack 0
   764   000011                     draw_square@y2:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x10
   768   000011                     	ds	1
   769   000012                     draw_square@x1:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x11
   773   000012                     	ds	1
   774   000013                     draw_square@x:
   775                           	callstack 0
   776                           
   777                           ; 1 bytes @ 0x12
   778   000013                     	ds	1
   779   000014                     draw_square@y:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x13
   783   000014                     	ds	1
   784   000015                     ??_fonction_d_interruption:
   785                           
   786                           ; 1 bytes @ 0x14
   787   000015                     	ds	12
   788   000021                     initialisation_du_systeme@temp:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x20
   792   000021                     	ds	1
   793   000022                     
   794 ;; *************** function _initialisation_du_systeme *****************
   795 ;; Defined at:
   796 ;;		line 131 in file "systeme.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;		None
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  temp            1   32[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:        1 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 7
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text1
   825   00147A                     __ptext1:
   826                           	callstack 0
   827   00147A                     _initialisation_du_systeme:
   828                           	callstack 23
   829                           
   830                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   831                           
   832                           ;incstack = 0
   833   00147A  0E01               	movlw	1
   834   00147C  0100               	movlb	0	; () banked
   835   00147E  6F65               	movwf	101,b
   836                           
   837                           ;systeme.c: 138: queue[0]=1;
   838   001480  0E01               	movlw	1
   839   001482  6F69               	movwf	105,b
   840                           
   841                           ;systeme.c: 139: queue[1]=2;
   842   001484  0E02               	movlw	2
   843   001486  6F6A               	movwf	106,b
   844                           
   845                           ;systeme.c: 140: queue[2]=3;
   846   001488  0E03               	movlw	3
   847   00148A  6F6B               	movwf	107,b
   848                           
   849                           ;systeme.c: 141: queue[3]=4;
   850   00148C  0E04               	movlw	4
   851   00148E  6F6C               	movwf	108,b
   852                           
   853                           ;systeme.c: 142: queue[4]=5;
   854   001490  0E05               	movlw	5
   855   001492  6F6D               	movwf	109,b
   856                           
   857                           ;systeme.c: 143: queue[5]=6;
   858   001494  0E06               	movlw	6
   859   001496  6F6E               	movwf	110,b
   860                           
   861                           ;systeme.c: 145: pointeur_de_tache=6-1;
   862   001498  0E05               	movlw	5
   863   00149A  6F70               	movwf	112,b
   864                           
   865                           ; BSR set to: 0
   866                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   867   00149C  0E69               	movlw	105
   868   00149E  2570               	addwf	112,w,b
   869   0014A0  6ED9               	movwf	fsr2l,c
   870   0014A2  6ADA               	clrf	fsr2h,c
   871   0014A4  0E00               	movlw	0
   872   0014A6  22DA               	addwfc	fsr2h,f,c
   873   0014A8  50DF               	movf	indf2,w,c
   874   0014AA  6F6F               	movwf	111,b
   875                           
   876                           ; BSR set to: 0
   877                           ;systeme.c: 151: temp=STKPTR;
   878   0014AC  CFFC F021          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   879                           
   880                           ; BSR set to: 0
   881                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   882   0014B0  0E02               	movlw	2
   883   0014B2  6EFC               	movwf	252,c	;volatile
   884                           
   885                           ; BSR set to: 0
   886   0014B4  0EDA               	movlw	low _tache1
   887   0014B6  6E2E               	movwf	_fptr^0,c
   888   0014B8  0E10               	movlw	high _tache1
   889   0014BA  6E2F               	movwf	(_fptr+1)^0,c
   890   0014BC  0E00               	movlw	low (_tache1 shr (0+16))
   891   0014BE  6E30               	movwf	(_fptr+2)^0,c
   892                           
   893                           ; BSR set to: 0
   894   0014C0  C02E  F033         	movff	_fptr,_val_tos
   895   0014C4  C02F  F034         	movff	_fptr+1,_val_tos+1
   896                           
   897                           ; BSR set to: 0
   898   0014C8  0E33               	movlw	low _val_tos
   899   0014CA  6E31               	movwf	_puc^0,c
   900   0014CC  0E00               	movlw	high _val_tos
   901   0014CE  6E32               	movwf	(_puc+1)^0,c
   902                           
   903                           ; BSR set to: 0
   904   0014D0  C031  FFD9         	movff	_puc,fsr2l
   905   0014D4  C032  FFDA         	movff	_puc+1,fsr2h
   906   0014D8  50DF               	movf	indf2,w,c
   907   0014DA  6EFD               	movwf	253,c	;volatile
   908                           
   909                           ; BSR set to: 0
   910   0014DC  4A31               	infsnz	_puc^0,f,c
   911   0014DE  2A32               	incf	(_puc+1)^0,f,c
   912                           
   913                           ; BSR set to: 0
   914   0014E0  C031  FFD9         	movff	_puc,fsr2l
   915   0014E4  C032  FFDA         	movff	_puc+1,fsr2h
   916   0014E8  50DF               	movf	indf2,w,c
   917   0014EA  6EFE               	movwf	254,c	;volatile
   918                           
   919                           ; BSR set to: 0
   920   0014EC  4A31               	infsnz	_puc^0,f,c
   921   0014EE  2A32               	incf	(_puc+1)^0,f,c
   922                           
   923                           ; BSR set to: 0
   924   0014F0  C031  FFD9         	movff	_puc,fsr2l
   925   0014F4  C032  FFDA         	movff	_puc+1,fsr2h
   926   0014F8  50DF               	movf	indf2,w,c
   927   0014FA  6EFF               	movwf	255,c	;volatile
   928                           
   929                           ; BSR set to: 0
   930                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   931   0014FC  0E07               	movlw	7
   932   0014FE  6EFC               	movwf	252,c	;volatile
   933   001500  0EB2               	movlw	low _tache2
   934   001502  6E2E               	movwf	_fptr^0,c
   935   001504  0E16               	movlw	high _tache2
   936   001506  6E2F               	movwf	(_fptr+1)^0,c
   937   001508  0E00               	movlw	low (_tache2 shr (0+16))
   938   00150A  6E30               	movwf	(_fptr+2)^0,c
   939                           
   940                           ; BSR set to: 0
   941   00150C  C02E  F033         	movff	_fptr,_val_tos
   942   001510  C02F  F034         	movff	_fptr+1,_val_tos+1
   943   001514  0E33               	movlw	low _val_tos
   944   001516  6E31               	movwf	_puc^0,c
   945   001518  0E00               	movlw	high _val_tos
   946   00151A  6E32               	movwf	(_puc+1)^0,c
   947                           
   948                           ; BSR set to: 0
   949   00151C  C031  FFD9         	movff	_puc,fsr2l
   950   001520  C032  FFDA         	movff	_puc+1,fsr2h
   951   001524  50DF               	movf	indf2,w,c
   952   001526  6EFD               	movwf	253,c	;volatile
   953                           
   954                           ; BSR set to: 0
   955   001528  4A31               	infsnz	_puc^0,f,c
   956   00152A  2A32               	incf	(_puc+1)^0,f,c
   957                           
   958                           ; BSR set to: 0
   959   00152C  C031  FFD9         	movff	_puc,fsr2l
   960   001530  C032  FFDA         	movff	_puc+1,fsr2h
   961   001534  50DF               	movf	indf2,w,c
   962   001536  6EFE               	movwf	254,c	;volatile
   963                           
   964                           ; BSR set to: 0
   965   001538  4A31               	infsnz	_puc^0,f,c
   966   00153A  2A32               	incf	(_puc+1)^0,f,c
   967                           
   968                           ; BSR set to: 0
   969   00153C  C031  FFD9         	movff	_puc,fsr2l
   970   001540  C032  FFDA         	movff	_puc+1,fsr2h
   971   001544  50DF               	movf	indf2,w,c
   972   001546  6EFF               	movwf	255,c	;volatile
   973                           
   974                           ; BSR set to: 0
   975                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   976   001548  0E0C               	movlw	12
   977   00154A  6EFC               	movwf	252,c	;volatile
   978                           
   979                           ; BSR set to: 0
   980   00154C  0E8C               	movlw	low _tache3
   981   00154E  6E2E               	movwf	_fptr^0,c
   982   001550  0E18               	movlw	high _tache3
   983   001552  6E2F               	movwf	(_fptr+1)^0,c
   984   001554  0E00               	movlw	low (_tache3 shr (0+16))
   985   001556  6E30               	movwf	(_fptr+2)^0,c
   986                           
   987                           ; BSR set to: 0
   988   001558  C02E  F033         	movff	_fptr,_val_tos
   989   00155C  C02F  F034         	movff	_fptr+1,_val_tos+1
   990                           
   991                           ; BSR set to: 0
   992   001560  0E33               	movlw	low _val_tos
   993   001562  6E31               	movwf	_puc^0,c
   994   001564  0E00               	movlw	high _val_tos
   995   001566  6E32               	movwf	(_puc+1)^0,c
   996                           
   997                           ; BSR set to: 0
   998   001568  C031  FFD9         	movff	_puc,fsr2l
   999   00156C  C032  FFDA         	movff	_puc+1,fsr2h
  1000   001570  50DF               	movf	indf2,w,c
  1001   001572  6EFD               	movwf	253,c	;volatile
  1002                           
  1003                           ; BSR set to: 0
  1004   001574  4A31               	infsnz	_puc^0,f,c
  1005   001576  2A32               	incf	(_puc+1)^0,f,c
  1006                           
  1007                           ; BSR set to: 0
  1008   001578  C031  FFD9         	movff	_puc,fsr2l
  1009   00157C  C032  FFDA         	movff	_puc+1,fsr2h
  1010   001580  50DF               	movf	indf2,w,c
  1011   001582  6EFE               	movwf	254,c	;volatile
  1012                           
  1013                           ; BSR set to: 0
  1014   001584  4A31               	infsnz	_puc^0,f,c
  1015   001586  2A32               	incf	(_puc+1)^0,f,c
  1016                           
  1017                           ; BSR set to: 0
  1018   001588  C031  FFD9         	movff	_puc,fsr2l
  1019   00158C  C032  FFDA         	movff	_puc+1,fsr2h
  1020   001590  50DF               	movf	indf2,w,c
  1021   001592  6EFF               	movwf	255,c	;volatile
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1025   001594  0E11               	movlw	17
  1026   001596  6EFC               	movwf	252,c	;volatile
  1027   001598  0E6A               	movlw	low _tache4
  1028   00159A  6E2E               	movwf	_fptr^0,c
  1029   00159C  0E19               	movlw	high _tache4
  1030   00159E  6E2F               	movwf	(_fptr+1)^0,c
  1031   0015A0  0E00               	movlw	low (_tache4 shr (0+16))
  1032   0015A2  6E30               	movwf	(_fptr+2)^0,c
  1033                           
  1034                           ; BSR set to: 0
  1035   0015A4  C02E  F033         	movff	_fptr,_val_tos
  1036   0015A8  C02F  F034         	movff	_fptr+1,_val_tos+1
  1037   0015AC  0E33               	movlw	low _val_tos
  1038   0015AE  6E31               	movwf	_puc^0,c
  1039   0015B0  0E00               	movlw	high _val_tos
  1040   0015B2  6E32               	movwf	(_puc+1)^0,c
  1041                           
  1042                           ; BSR set to: 0
  1043   0015B4  C031  FFD9         	movff	_puc,fsr2l
  1044   0015B8  C032  FFDA         	movff	_puc+1,fsr2h
  1045   0015BC  50DF               	movf	indf2,w,c
  1046   0015BE  6EFD               	movwf	253,c	;volatile
  1047                           
  1048                           ; BSR set to: 0
  1049   0015C0  4A31               	infsnz	_puc^0,f,c
  1050   0015C2  2A32               	incf	(_puc+1)^0,f,c
  1051                           
  1052                           ; BSR set to: 0
  1053   0015C4  C031  FFD9         	movff	_puc,fsr2l
  1054   0015C8  C032  FFDA         	movff	_puc+1,fsr2h
  1055   0015CC  50DF               	movf	indf2,w,c
  1056   0015CE  6EFE               	movwf	254,c	;volatile
  1057                           
  1058                           ; BSR set to: 0
  1059   0015D0  4A31               	infsnz	_puc^0,f,c
  1060   0015D2  2A32               	incf	(_puc+1)^0,f,c
  1061                           
  1062                           ; BSR set to: 0
  1063   0015D4  C031  FFD9         	movff	_puc,fsr2l
  1064   0015D8  C032  FFDA         	movff	_puc+1,fsr2h
  1065   0015DC  50DF               	movf	indf2,w,c
  1066   0015DE  6EFF               	movwf	255,c	;volatile
  1067                           
  1068                           ; BSR set to: 0
  1069                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1070   0015E0  0E16               	movlw	22
  1071   0015E2  6EFC               	movwf	252,c	;volatile
  1072                           
  1073                           ; BSR set to: 0
  1074   0015E4  0EA6               	movlw	low _tache5
  1075   0015E6  6E2E               	movwf	_fptr^0,c
  1076   0015E8  0E17               	movlw	high _tache5
  1077   0015EA  6E2F               	movwf	(_fptr+1)^0,c
  1078   0015EC  0E00               	movlw	low (_tache5 shr (0+16))
  1079   0015EE  6E30               	movwf	(_fptr+2)^0,c
  1080                           
  1081                           ; BSR set to: 0
  1082   0015F0  C02E  F033         	movff	_fptr,_val_tos
  1083   0015F4  C02F  F034         	movff	_fptr+1,_val_tos+1
  1084                           
  1085                           ; BSR set to: 0
  1086   0015F8  0E33               	movlw	low _val_tos
  1087   0015FA  6E31               	movwf	_puc^0,c
  1088   0015FC  0E00               	movlw	high _val_tos
  1089   0015FE  6E32               	movwf	(_puc+1)^0,c
  1090                           
  1091                           ; BSR set to: 0
  1092   001600  C031  FFD9         	movff	_puc,fsr2l
  1093   001604  C032  FFDA         	movff	_puc+1,fsr2h
  1094   001608  50DF               	movf	indf2,w,c
  1095   00160A  6EFD               	movwf	253,c	;volatile
  1096                           
  1097                           ; BSR set to: 0
  1098   00160C  4A31               	infsnz	_puc^0,f,c
  1099   00160E  2A32               	incf	(_puc+1)^0,f,c
  1100                           
  1101                           ; BSR set to: 0
  1102   001610  C031  FFD9         	movff	_puc,fsr2l
  1103   001614  C032  FFDA         	movff	_puc+1,fsr2h
  1104   001618  50DF               	movf	indf2,w,c
  1105   00161A  6EFE               	movwf	254,c	;volatile
  1106                           
  1107                           ; BSR set to: 0
  1108   00161C  4A31               	infsnz	_puc^0,f,c
  1109   00161E  2A32               	incf	(_puc+1)^0,f,c
  1110                           
  1111                           ; BSR set to: 0
  1112   001620  C031  FFD9         	movff	_puc,fsr2l
  1113   001624  C032  FFDA         	movff	_puc+1,fsr2h
  1114   001628  50DF               	movf	indf2,w,c
  1115   00162A  6EFF               	movwf	255,c	;volatile
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1119   00162C  0E1B               	movlw	27
  1120   00162E  6EFC               	movwf	252,c	;volatile
  1121   001630  0EEE               	movlw	low _tache6
  1122   001632  6E2E               	movwf	_fptr^0,c
  1123   001634  0E20               	movlw	high _tache6
  1124   001636  6E2F               	movwf	(_fptr+1)^0,c
  1125   001638  0E00               	movlw	low (_tache6 shr (0+16))
  1126   00163A  6E30               	movwf	(_fptr+2)^0,c
  1127                           
  1128                           ; BSR set to: 0
  1129   00163C  C02E  F033         	movff	_fptr,_val_tos
  1130   001640  C02F  F034         	movff	_fptr+1,_val_tos+1
  1131   001644  0E33               	movlw	low _val_tos
  1132   001646  6E31               	movwf	_puc^0,c
  1133   001648  0E00               	movlw	high _val_tos
  1134   00164A  6E32               	movwf	(_puc+1)^0,c
  1135                           
  1136                           ; BSR set to: 0
  1137   00164C  C031  FFD9         	movff	_puc,fsr2l
  1138   001650  C032  FFDA         	movff	_puc+1,fsr2h
  1139   001654  50DF               	movf	indf2,w,c
  1140   001656  6EFD               	movwf	253,c	;volatile
  1141                           
  1142                           ; BSR set to: 0
  1143   001658  4A31               	infsnz	_puc^0,f,c
  1144   00165A  2A32               	incf	(_puc+1)^0,f,c
  1145                           
  1146                           ; BSR set to: 0
  1147   00165C  C031  FFD9         	movff	_puc,fsr2l
  1148   001660  C032  FFDA         	movff	_puc+1,fsr2h
  1149   001664  50DF               	movf	indf2,w,c
  1150   001666  6EFE               	movwf	254,c	;volatile
  1151                           
  1152                           ; BSR set to: 0
  1153   001668  4A31               	infsnz	_puc^0,f,c
  1154   00166A  2A32               	incf	(_puc+1)^0,f,c
  1155                           
  1156                           ; BSR set to: 0
  1157   00166C  C031  FFD9         	movff	_puc,fsr2l
  1158   001670  C032  FFDA         	movff	_puc+1,fsr2h
  1159   001674  50DF               	movf	indf2,w,c
  1160   001676  6EFF               	movwf	255,c	;volatile
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;systeme.c: 162: STKPTR=temp;
  1164   001678  C021  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1165                           
  1166                           ; BSR set to: 0
  1167                           ;systeme.c: 165: STKPTR_T1=2;
  1168   00167C  0E02               	movlw	2
  1169   00167E  0101               	movlb	1	; () banked
  1170   001680  6F03               	movwf	3,b
  1171                           
  1172                           ; BSR set to: 1
  1173                           ;systeme.c: 166: STKPTR_T2=7;
  1174   001682  0E07               	movlw	7
  1175   001684  0102               	movlb	2	; () banked
  1176   001686  6F03               	movwf	3,b
  1177                           
  1178                           ; BSR set to: 2
  1179                           ;systeme.c: 167: STKPTR_T3=12;
  1180   001688  0E0C               	movlw	12
  1181   00168A  0103               	movlb	3	; () banked
  1182   00168C  6F03               	movwf	3,b
  1183                           
  1184                           ; BSR set to: 3
  1185                           ;systeme.c: 168: STKPTR_T4=17;
  1186   00168E  0E11               	movlw	17
  1187   001690  0104               	movlb	4	; () banked
  1188   001692  6F03               	movwf	3,b
  1189                           
  1190                           ; BSR set to: 4
  1191                           ;systeme.c: 169: STKPTR_T5=22;
  1192   001694  0E16               	movlw	22
  1193   001696  0105               	movlb	5	; () banked
  1194   001698  6F03               	movwf	3,b
  1195                           
  1196                           ; BSR set to: 5
  1197                           ;systeme.c: 170: STKPTR_T6=27;
  1198   00169A  0E1B               	movlw	27
  1199   00169C  0106               	movlb	6	; () banked
  1200   00169E  6F03               	movwf	3,b
  1201                           
  1202                           ; BSR set to: 6
  1203                           ;systeme.c: 173: Tick_Count=0;
  1204   0016A0  0E00               	movlw	0
  1205   0016A2  0100               	movlb	0	; () banked
  1206   0016A4  6F72               	movwf	114,b
  1207   0016A6  0E00               	movlw	0
  1208   0016A8  6F71               	movwf	113,b
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;systeme.c: 175: T0CON=0x01;
  1212   0016AA  0E01               	movlw	1
  1213   0016AC  6ED5               	movwf	213,c	;volatile
  1214                           
  1215                           ; BSR set to: 0
  1216                           ;systeme.c: 176: T0IE=1;
  1217   0016AE  8AF2               	bsf	4082,5,c	;volatile
  1218                           
  1219                           ; BSR set to: 0
  1220   0016B0  0012               	return		;funcret
  1221   0016B2                     __end_of_initialisation_du_systeme:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function _initialisation_des_ports *****************
  1225 ;; Defined at:
  1226 ;;		line 23 in file "main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 7
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_main
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text2
  1255   002172                     __ptext2:
  1256                           	callstack 0
  1257   002172                     _initialisation_des_ports:
  1258                           	callstack 23
  1259                           
  1260                           ;main.c: 26: MEMCON=0xA0;
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;incstack = 0
  1264   002172  0EA0               	movlw	160
  1265   002174  010F               	movlb	15	; () banked
  1266   002176  6F26               	movwf	38,b	;volatile
  1267                           
  1268                           ;main.c: 29: ANCON0=0x00;
  1269   002178  0E00               	movlw	0
  1270   00217A  6F25               	movwf	37,b	;volatile
  1271                           
  1272                           ;main.c: 30: ANCON1=0x00;
  1273   00217C  0E00               	movlw	0
  1274   00217E  6F24               	movwf	36,b	;volatile
  1275                           
  1276                           ;main.c: 31: ANCON2=0x00;
  1277   002180  0E00               	movlw	0
  1278   002182  6F23               	movwf	35,b	;volatile
  1279                           
  1280                           ; BSR set to: 15
  1281                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1282   002184  8125               	bsf	37,0,b	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1286   002186  8325               	bsf	37,1,b	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1290   002188  8525               	bsf	37,2,b	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1294   00218A  8725               	bsf	37,3,b	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1298   00218C  8524               	bsf	36,2,b	;volatile
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1302   00218E  8724               	bsf	36,3,b	;volatile
  1303                           
  1304                           ; BSR set to: 15
  1305                           ;main.c: 41: LATCbits.LATC2=1;
  1306   002190  848B               	bsf	139,2,c	;volatile
  1307                           
  1308                           ; BSR set to: 15
  1309                           ;main.c: 42: LATCbits.LATC1=1;
  1310   002192  828B               	bsf	139,1,c	;volatile
  1311                           
  1312                           ; BSR set to: 15
  1313                           ;main.c: 43: LATGbits.LATG0=1;
  1314   002194  808F               	bsf	143,0,c	;volatile
  1315                           
  1316                           ; BSR set to: 15
  1317                           ;main.c: 46: TRISCbits.TRISC2=0;
  1318   002196  9494               	bcf	148,2,c	;volatile
  1319                           
  1320                           ; BSR set to: 15
  1321                           ;main.c: 47: TRISCbits.TRISC1=0;
  1322   002198  9294               	bcf	148,1,c	;volatile
  1323                           
  1324                           ; BSR set to: 15
  1325                           ;main.c: 48: TRISGbits.TRISG0=0;
  1326   00219A  9098               	bcf	152,0,c	;volatile
  1327                           
  1328                           ; BSR set to: 15
  1329                           ;main.c: 49: TRISGbits.TRISG3=0;
  1330   00219C  9698               	bcf	152,3,c	;volatile
  1331                           
  1332                           ; BSR set to: 15
  1333                           ;main.c: 50: TRISGbits.TRISG4=0;
  1334   00219E  9898               	bcf	152,4,c	;volatile
  1335                           
  1336                           ; BSR set to: 15
  1337                           ;main.c: 51: TRISDbits.TRISD2=0;
  1338   0021A0  9495               	bcf	149,2,c	;volatile
  1339                           
  1340                           ; BSR set to: 15
  1341                           ;main.c: 52: TRISDbits.TRISD3=0;
  1342   0021A2  9695               	bcf	149,3,c	;volatile
  1343                           
  1344                           ; BSR set to: 15
  1345                           ;main.c: 55: INTCON2bits.RBPU=0;
  1346   0021A4  9EF1               	bcf	241,7,c	;volatile
  1347                           
  1348                           ; BSR set to: 15
  1349                           ;main.c: 56: PADCFG1bits.REPU=1;
  1350   0021A6  8D53               	bsf	83,6,b	;volatile
  1351                           
  1352                           ; BSR set to: 15
  1353   0021A8  0012               	return		;funcret
  1354   0021AA                     __end_of_initialisation_des_ports:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _Init *****************
  1358 ;; Defined at:
  1359 ;;		line 4 in file "semaphore.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  sem             1  [STACK] unsigned char 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1  [STACK] void 
  1366 ;; Registers used:
  1367 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 7
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;;		_tache1
  1385 ;; This function uses a reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text3
  1389   00229E                     __ptext3:
  1390                           	callstack 0
  1391   00229E                     _Init:
  1392                           	callstack 20
  1393                           
  1394                           ;semaphore.c: 6: switch (sem)
  1395                           
  1396                           ; BSR set to: 15
  1397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1398                           ;incstack = 0
  1399   00229E  D006               	goto	l2790
  1400   0022A0                     l2786:
  1401                           
  1402                           ;semaphore.c: 9: Val_sem_cna=1;
  1403   0022A0  0E01               	movlw	1
  1404   0022A2  6E39               	movwf	_Val_sem_cna^0,c
  1405                           
  1406                           ;semaphore.c: 10: break;
  1407   0022A4  D00B               	goto	l1536
  1408   0022A6                     l2788:
  1409                           
  1410                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1411   0022A6  0E01               	movlw	1
  1412   0022A8  6E38               	movwf	_Val_sem_rxtx^0,c
  1413                           
  1414                           ;semaphore.c: 13: break;
  1415   0022AA  D008               	goto	l1536
  1416   0022AC                     l2790:
  1417                           
  1418                           ;stkvar	Init@sem @ sp[(0)+-1]
  1419   0022AC  0EFF               	movlw	-1
  1420   0022AE  50E3               	movf	plusw1,w,c
  1421                           
  1422                           ; Switch size 1, requested type "simple"
  1423                           ; Number of cases is 2, Range of values is 1 to 2
  1424                           ; switch strategies available:
  1425                           ; Name         Instructions Cycles
  1426                           ; simple_byte            7     4 (average)
  1427                           ;	Chosen strategy is simple_byte
  1428   0022B0  0A01               	xorlw	1	; case 1
  1429   0022B2  B4D8               	btfsc	status,2,c
  1430   0022B4  D7F5               	goto	l2786
  1431   0022B6  0A03               	xorlw	3	; case 2
  1432   0022B8  B4D8               	btfsc	status,2,c
  1433   0022BA  D7F5               	goto	l2788
  1434   0022BC                     l1536:
  1435                           
  1436                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1437   0022BC  52E5               	movf	postdec1,f,c
  1438   0022BE  0012               	return		;funcret
  1439   0022C0                     __end_of_Init:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _fonction_d_interruption *****************
  1443 ;; Defined at:
  1444 ;;		line 17 in file "systeme.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;Total ram usage:       12 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 6
  1465 ;; This function calls:
  1466 ;;		_tache1
  1467 ;;		_tache2
  1468 ;;		_tache3
  1469 ;;		_tache4
  1470 ;;		_tache5
  1471 ;;		_tache6
  1472 ;; This function is called by:
  1473 ;;		Interrupt level 2
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	intcode
  1478   000008                     __pintcode:
  1479                           	callstack 0
  1480   000008                     _fonction_d_interruption:
  1481                           	callstack 23
  1482                           
  1483                           ;incstack = 0
  1484   000008  CFE9 F015          	movff	fsr0l,??_fonction_d_interruption
  1485   00000C  CFEA F016          	movff	fsr0h,??_fonction_d_interruption+1
  1486   000010  CFE1 F017          	movff	fsr1l,??_fonction_d_interruption+2
  1487   000014  CFE2 F018          	movff	fsr1h,??_fonction_d_interruption+3
  1488   000018  CFD9 F019          	movff	fsr2l,??_fonction_d_interruption+4
  1489   00001C  CFDA F01A          	movff	fsr2h,??_fonction_d_interruption+5
  1490   000020  CFF3 F01B          	movff	prodl,??_fonction_d_interruption+6
  1491   000024  CFF4 F01C          	movff	prodh,??_fonction_d_interruption+7
  1492   000028  CFF6 F01D          	movff	tblptrl,??_fonction_d_interruption+8
  1493   00002C  CFF7 F01E          	movff	tblptrh,??_fonction_d_interruption+9
  1494   000030  CFF8 F01F          	movff	tblptru,??_fonction_d_interruption+10
  1495   000034  CFF5 F020          	movff	tablat,??_fonction_d_interruption+11
  1496   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1497                           
  1498                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1499   00003C  CFD8 F061          	movff	status,97	;volatile
  1500   000040  0100               	movlb	0	; () banked
  1501   000042  6F60               	movwf	96,b
  1502                           
  1503                           ; BSR set to: 0
  1504   000044  CFE0 F062          	movff	bsr,98	;volatile
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1508   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1509                           
  1510                           ; BSR set to: 0
  1511   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1512                           
  1513                           ; BSR set to: 0
  1514                           ;systeme.c: 24: if(T0IE && T0IF)
  1515   000050  BAF2               	btfsc	4082,5,c	;volatile
  1516                           
  1517                           ; BSR set to: 0
  1518   000052  A4F2               	btfss	4082,2,c	;volatile
  1519   000054  D143               	goto	i2l5312
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1523   000056  0565               	decf	101,w,b
  1524   000058  A4D8               	btfss	status,2,c
  1525   00005A  D004               	goto	i2l5012
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1529   00005C  0E1B               	movlw	27
  1530   00005E  6EFC               	movwf	252,c	;volatile
  1531                           
  1532                           ;systeme.c: 29: DEMARRAGE=0;
  1533   000060  0E00               	movlw	0
  1534   000062  6F65               	movwf	101,b
  1535   000064                     i2l5012:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1539   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1540                           
  1541                           ;systeme.c: 35: FSR0L=0;
  1542   000068  0E00               	movlw	0
  1543   00006A  6EE9               	movwf	233,c	;volatile
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1547   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1548                           
  1549                           ; BSR set to: 0
  1550   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1551                           
  1552                           ; BSR set to: 0
  1553   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1554                           
  1555                           ; BSR set to: 0
  1556   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1557                           
  1558                           ; BSR set to: 0
  1559                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1560   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1561                           
  1562                           ; BSR set to: 0
  1563   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1564                           
  1565                           ; BSR set to: 0
  1566   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1567                           
  1568                           ; BSR set to: 0
  1569   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1573   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1574                           
  1575                           ; BSR set to: 0
  1576   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1577                           
  1578                           ; BSR set to: 0
  1579   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1586   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1587                           
  1588                           ; BSR set to: 0
  1589   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1590                           
  1591                           ; BSR set to: 0
  1592   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1593                           
  1594                           ; BSR set to: 0
  1595   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1599   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1603                           
  1604                           ;systeme.c: 44: FSR1H=0;
  1605   0000B4  0E00               	movlw	0
  1606   0000B6  6EE2               	movwf	226,c	;volatile
  1607                           
  1608                           ;systeme.c: 45: FSR1L=0;
  1609   0000B8  0E00               	movlw	0
  1610   0000BA  6EE1               	movwf	225,c	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1614   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1615                           
  1616                           ; BSR set to: 0
  1617   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1627   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1628                           
  1629                           ; BSR set to: 0
  1630   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1634                           
  1635                           ; BSR set to: 0
  1636   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1640   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1641                           
  1642                           ; BSR set to: 0
  1643   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1644                           
  1645                           ; BSR set to: 0
  1646   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1647                           
  1648                           ; BSR set to: 0
  1649   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1650                           
  1651                           ; BSR set to: 0
  1652                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1653   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1654                           
  1655                           ; BSR set to: 0
  1656   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1666   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1679   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1680                           
  1681                           ; BSR set to: 0
  1682   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1692   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1693                           
  1694                           ; BSR set to: 0
  1695   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1699                           
  1700                           ; BSR set to: 0
  1701   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1705   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1706                           
  1707                           ; BSR set to: 0
  1708   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1709                           
  1710                           ; BSR set to: 0
  1711   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1718   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1719                           
  1720                           ; BSR set to: 0
  1721   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1722                           
  1723                           ; BSR set to: 0
  1724   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1731   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1732                           
  1733                           ; BSR set to: 0
  1734   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1735                           
  1736                           ; BSR set to: 0
  1737   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1744   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1745                           
  1746                           ; BSR set to: 0
  1747   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1757   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1758                           
  1759                           ; BSR set to: 0
  1760   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1764                           
  1765                           ; BSR set to: 0
  1766   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1767                           
  1768                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1769   00017C  0E8A               	movlw	138
  1770   00017E  6ED7               	movwf	215,c	;volatile
  1771   000180  0ECF               	movlw	207
  1772   000182  6ED6               	movwf	214,c	;volatile
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;systeme.c: 63: T0IF=0;
  1776   000184  94F2               	bcf	4082,2,c	;volatile
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;systeme.c: 65: Tick_Count++;
  1780   000186  4B71               	infsnz	113,f,b
  1781   000188  2B72               	incf	114,f,b
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;systeme.c: 67: pointeur_de_tache++;
  1785   00018A  2B70               	incf	112,f,b
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1789   00018C  0E06               	movlw	6
  1790   00018E  1970               	xorwf	112,w,b
  1791   000190  A4D8               	btfss	status,2,c
  1792   000192  D002               	goto	i2l5156
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;systeme.c: 69: pointeur_de_tache=0;
  1796   000194  0E00               	movlw	0
  1797   000196  6F70               	movwf	112,b
  1798   000198                     i2l5156:
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1802   000198  0E69               	movlw	105
  1803   00019A  2570               	addwf	112,w,b
  1804   00019C  6ED9               	movwf	fsr2l,c
  1805   00019E  6ADA               	clrf	fsr2h,c
  1806   0001A0  0E00               	movlw	0
  1807   0001A2  22DA               	addwfc	fsr2h,f,c
  1808   0001A4  50DF               	movf	indf2,w,c
  1809   0001A6  6F6F               	movwf	111,b
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;systeme.c: 75: FSR1H=0;
  1813   0001A8  0E00               	movlw	0
  1814   0001AA  6EE2               	movwf	226,c	;volatile
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;systeme.c: 76: FSR1L=0;
  1818   0001AC  0E00               	movlw	0
  1819   0001AE  6EE1               	movwf	225,c	;volatile
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;systeme.c: 77: FSR0H=tache_active;
  1823   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;systeme.c: 78: FSR0L=18;
  1827   0001B4  0E12               	movlw	18
  1828   0001B6  6EE9               	movwf	233,c	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1832   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1833                           
  1834                           ; BSR set to: 0
  1835   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1836                           
  1837                           ; BSR set to: 0
  1838   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1845   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1846                           
  1847                           ; BSR set to: 0
  1848   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1849                           
  1850                           ; BSR set to: 0
  1851   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1852                           
  1853                           ; BSR set to: 0
  1854   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1858   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1859                           
  1860                           ; BSR set to: 0
  1861   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1862                           
  1863                           ; BSR set to: 0
  1864   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1865                           
  1866                           ; BSR set to: 0
  1867   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1871   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1872                           
  1873                           ; BSR set to: 0
  1874   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1878                           
  1879                           ; BSR set to: 0
  1880   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1884   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1885                           
  1886                           ; BSR set to: 0
  1887   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1888                           
  1889                           ; BSR set to: 0
  1890   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1897   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1898                           
  1899                           ; BSR set to: 0
  1900   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1901                           
  1902                           ; BSR set to: 0
  1903   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1904                           
  1905                           ; BSR set to: 0
  1906   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1910   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1911                           
  1912                           ; BSR set to: 0
  1913   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1914                           
  1915                           ; BSR set to: 0
  1916   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1920                           
  1921                           ; BSR set to: 0
  1922                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1923   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1924                           
  1925                           ; BSR set to: 0
  1926   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1927                           
  1928                           ; BSR set to: 0
  1929   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1930                           
  1931                           ; BSR set to: 0
  1932   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1936   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1937                           
  1938                           ; BSR set to: 0
  1939   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1940                           
  1941                           ; BSR set to: 0
  1942   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1949   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1950                           
  1951                           ; BSR set to: 0
  1952   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1953                           
  1954                           ; BSR set to: 0
  1955   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1956                           
  1957                           ; BSR set to: 0
  1958   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1962   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1963                           
  1964                           ; BSR set to: 0
  1965   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1966                           
  1967                           ; BSR set to: 0
  1968   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1969                           
  1970                           ; BSR set to: 0
  1971   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1975   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1976                           
  1977                           ; BSR set to: 0
  1978   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1979                           
  1980                           ; BSR set to: 0
  1981   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;systeme.c: 96: FSR0H=tache_active;
  1988   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;systeme.c: 97: FSR0L=0;
  1992   00027C  0E00               	movlw	0
  1993   00027E  6EE9               	movwf	233,c	;volatile
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1997   000280  CFEE F060          	movff	postinc0,96	;volatile
  1998                           
  1999                           ; BSR set to: 0
  2000   000284  CFEE F061          	movff	postinc0,97	;volatile
  2001                           
  2002                           ; BSR set to: 0
  2003   000288  CFEE F062          	movff	postinc0,98	;volatile
  2004                           
  2005                           ; BSR set to: 0
  2006   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2010   000290  CFEE F063          	movff	postinc0,99	;volatile
  2011                           
  2012                           ; BSR set to: 0
  2013   000294  CFEE F064          	movff	postinc0,100	;volatile
  2014                           
  2015                           ; BSR set to: 0
  2016   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2017                           
  2018                           ; BSR set to: 0
  2019   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2023   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2027                           
  2028                           ; BSR set to: 0
  2029   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2030                           
  2031                           ; BSR set to: 0
  2032   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2033                           
  2034                           ; BSR set to: 0
  2035                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2036   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2037                           
  2038                           ; BSR set to: 0
  2039   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2040                           
  2041                           ; BSR set to: 0
  2042   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2043                           
  2044                           ; BSR set to: 0
  2045   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2049   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2050                           
  2051                           ; BSR set to: 0
  2052   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2056   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2057                           
  2058                           ; BSR set to: 0
  2059   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2060                           
  2061                           ; BSR set to: 0
  2062   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2066   0002D4  5160               	movf	96,w,b
  2067                           
  2068                           ; BSR set to: 0
  2069   0002D6  C061 FFD8          	movff	97,status	;volatile
  2070   0002DA  0010               	retfie		;# 
  2071   0002DC                     i2l5312:
  2072                           
  2073                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2074   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2075   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2076   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2077                           
  2078                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2079   0002E8  0100               	movlb	0	; () banked
  2080   0002EA  5160               	movf	96,w,b
  2081                           
  2082                           ; BSR set to: 0
  2083   0002EC  C061 FFD8          	movff	97,status	;volatile
  2084   0002F0  0010               	retfie		;# 
  2085                           
  2086                           ;systeme.c: 123: tache1();
  2087   0002F2  EC6D  F008         	call	_tache1	;wreg free
  2088                           
  2089                           ;systeme.c: 124: tache2();
  2090   0002F6  EC59  F00B         	call	_tache2	;wreg free
  2091                           
  2092                           ;systeme.c: 125: tache3();
  2093   0002FA  EC46  F00C         	call	_tache3	;wreg free
  2094                           
  2095                           ;systeme.c: 126: tache4();
  2096   0002FE  ECB5  F00C         	call	_tache4	;wreg free
  2097                           
  2098                           ;systeme.c: 127: tache5();
  2099   000302  ECD3  F00B         	call	_tache5	;wreg free
  2100                           
  2101                           ;systeme.c: 128: tache6();
  2102   000306  EC77  F010         	call	_tache6	;wreg free
  2103   00030A  C020  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2104   00030E  C01F  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2105   000312  C01E  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2106   000316  C01D  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2107   00031A  C01C  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2108   00031E  C01B  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2109   000322  C01A  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2110   000326  C019  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2111   00032A  C018  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2112   00032E  C017  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2113   000332  C016  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2114   000336  C015  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2115   00033A  0011               	retfie		f
  2116   00033C                     __end_of_fonction_d_interruption:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _tache6 *****************
  2120 ;; Defined at:
  2121 ;;		line 3 in file "T6.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  n               1    8[COMRAM] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;Total ram usage:        1 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 2
  2142 ;; This function calls:
  2143 ;;		_lecture_normale
  2144 ;; This function is called by:
  2145 ;;		_fonction_d_interruption
  2146 ;;		_initialisation_du_systeme
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text5
  2151   0020EE                     __ptext5:
  2152                           	callstack 0
  2153   0020EE                     _tache6:
  2154                           	callstack 26
  2155                           
  2156                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2157                           
  2158                           ;incstack = 0
  2159                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2160   0020EE  0E75               	movlw	117
  2161   0020F0  6E03               	movwf	lecture_normale@stid_id^0,c
  2162   0020F2  0E00               	movlw	0
  2163   0020F4  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2164   0020F6  ECD9  F00D         	call	_lecture_normale	;wreg free
  2165   0020FA  6E09               	movwf	tache6@n^0,c
  2166                           
  2167                           ;T6.c: 9: if (n > 0)
  2168   0020FC  5009               	movf	tache6@n^0,w,c
  2169   0020FE  B4D8               	btfsc	status,2,c
  2170   002100  D015               	goto	i2l4978
  2171                           
  2172                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2173   002102  0E04               	movlw	4
  2174   002104  1809               	xorwf	tache6@n^0,w,c
  2175   002106  A4D8               	btfss	status,2,c
  2176   002108  D004               	goto	i2l4970
  2177                           
  2178                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2179   00210A  C009  F07F         	movff	tache6@n,127
  2180                           
  2181                           ;T6.c: 16: Personne = 2;
  2182   00210E  0E02               	movlw	2
  2183   002110  D007               	goto	L1
  2184   002112                     i2l4970:
  2185                           
  2186                           ;T6.c: 18: else if (n == 8)
  2187   002112  0E08               	movlw	8
  2188   002114  1809               	xorwf	tache6@n^0,w,c
  2189   002116  A4D8               	btfss	status,2,c
  2190   002118  D005               	goto	i2l4976
  2191                           
  2192                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2193   00211A  C009  F07F         	movff	tache6@n,127
  2194                           
  2195                           ;T6.c: 21: Personne = 1;
  2196   00211E  0E01               	movlw	1
  2197   002120                     L1:
  2198   002120  0100               	movlb	0	; () banked
  2199   002122  D008               	goto	L2
  2200   002124                     i2l4976:
  2201                           
  2202                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2203   002124  0E00               	movlw	0
  2204   002126  0100               	movlb	0	; () banked
  2205   002128  6F7F               	movwf	127,b
  2206   00212A  D7E1               	goto	__ptext5
  2207   00212C                     i2l4978:
  2208                           
  2209                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2210   00212C  0E00               	movlw	0
  2211   00212E  0100               	movlb	0	; () banked
  2212   002130  6F7F               	movwf	127,b
  2213                           
  2214                           ;T6.c: 33: Personne = 0;
  2215   002132  0E00               	movlw	0
  2216   002134                     L2:
  2217   002134  6F82               	movwf	130,b
  2218   002136  D7DB               	goto	__ptext5
  2219   002138                     __end_of_tache6:
  2220                           	callstack 0
  2221                           
  2222 ;; *************** function _lecture_normale *****************
  2223 ;; Defined at:
  2224 ;;		line 5 in file "stid.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2227 ;;		 -> badge(10), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  octet           1    7[COMRAM] unsigned char 
  2230 ;;  n_bit           1    6[COMRAM] unsigned char 
  2231 ;;  n_octet         1    5[COMRAM] unsigned char 
  2232 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      unsigned char 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;Total ram usage:        6 bytes
  2247 ;; Hardware stack levels used: 1
  2248 ;; Hardware stack levels required when called: 1
  2249 ;; This function calls:
  2250 ;;		_stid_delai_us
  2251 ;; This function is called by:
  2252 ;;		_tache6
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text6
  2257   001BB2                     __ptext6:
  2258                           	callstack 0
  2259   001BB2                     _lecture_normale:
  2260                           	callstack 26
  2261                           
  2262                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;incstack = 0
  2266   001BB2  8295               	bsf	149,1,c	;volatile
  2267                           
  2268                           ;stid.c: 10: LATDbits.LATD3=0;
  2269   001BB4  968C               	bcf	140,3,c	;volatile
  2270                           
  2271                           ;stid.c: 11: LATDbits.LATD2=0;
  2272   001BB6  948C               	bcf	140,2,c	;volatile
  2273                           
  2274                           ;stid.c: 12: stid_delai_us(100);
  2275   001BB8  0E00               	movlw	0
  2276   001BBA  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2277   001BBC  0E64               	movlw	100
  2278   001BBE  6E01               	movwf	stid_delai_us@isdu^0,c
  2279   001BC0  ECC6  F011         	call	_stid_delai_us	;wreg free
  2280                           
  2281                           ;stid.c: 13: LATDbits.LATD3=1;
  2282   001BC4  868C               	bsf	140,3,c	;volatile
  2283                           
  2284                           ;stid.c: 14: temps_attente=0;
  2285   001BC6  0E00               	movlw	0
  2286   001BC8  6E05               	movwf	lecture_normale@temps_attente^0,c
  2287   001BCA                     i2l4498:
  2288                           
  2289                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2290   001BCA  0E03               	movlw	3
  2291   001BCC  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2292   001BCE  0EE8               	movlw	232
  2293   001BD0  6E01               	movwf	stid_delai_us@isdu^0,c
  2294   001BD2  ECC6  F011         	call	_stid_delai_us	;wreg free
  2295                           
  2296                           ;stid.c: 18: temps_attente++;
  2297   001BD6  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2298                           
  2299                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2300   001BD8  A083               	btfss	131,0,c	;volatile
  2301   001BDA  D002               	goto	i2l4506
  2302                           
  2303                           ;stid.c: 20: temps_attente=65;
  2304   001BDC  0E41               	movlw	65
  2305   001BDE  6E05               	movwf	lecture_normale@temps_attente^0,c
  2306   001BE0                     i2l4506:
  2307                           
  2308                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2309   001BE0  0E40               	movlw	64
  2310   001BE2  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2311   001BE4  D7F2               	goto	i2l4498
  2312                           
  2313                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2314   001BE6  A083               	btfss	131,0,c	;volatile
  2315   001BE8  D033               	goto	i2l4542
  2316                           
  2317                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2318   001BEA  0E00               	movlw	0
  2319   001BEC  6E06               	movwf	lecture_normale@n_octet^0,c
  2320   001BEE                     i2l1653:
  2321                           
  2322                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2323   001BEE  0E00               	movlw	0
  2324   001BF0  6E08               	movwf	lecture_normale@octet^0,c
  2325                           
  2326                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2327   001BF2  0E00               	movlw	0
  2328   001BF4  6E07               	movwf	lecture_normale@n_bit^0,c
  2329   001BF6                     i2l1654:
  2330                           
  2331                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2332   001BF6  A283               	btfss	131,1,c	;volatile
  2333   001BF8  D003               	goto	i2l1656
  2334                           
  2335                           ;stid.c: 34: octet=(octet|0x01);
  2336   001BFA  5008               	movf	lecture_normale@octet^0,w,c
  2337   001BFC  0901               	iorlw	1
  2338   001BFE  6E08               	movwf	lecture_normale@octet^0,c
  2339   001C00                     i2l1656:
  2340                           
  2341                           ;stid.c: 35: octet=octet<<1;
  2342   001C00  5008               	movf	lecture_normale@octet^0,w,c
  2343   001C02  2408               	addwf	lecture_normale@octet^0,w,c
  2344   001C04  6E08               	movwf	lecture_normale@octet^0,c
  2345                           
  2346                           ;stid.c: 36: stid_delai_us(100);
  2347   001C06  0E00               	movlw	0
  2348   001C08  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2349   001C0A  0E64               	movlw	100
  2350   001C0C  6E01               	movwf	stid_delai_us@isdu^0,c
  2351   001C0E  ECC6  F011         	call	_stid_delai_us	;wreg free
  2352                           
  2353                           ;stid.c: 37: LATDbits.LATD2=1;
  2354   001C12  848C               	bsf	140,2,c	;volatile
  2355                           
  2356                           ;stid.c: 38: stid_delai_us(500);
  2357   001C14  0E01               	movlw	1
  2358   001C16  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2359   001C18  0EF4               	movlw	244
  2360   001C1A  6E01               	movwf	stid_delai_us@isdu^0,c
  2361   001C1C  ECC6  F011         	call	_stid_delai_us	;wreg free
  2362                           
  2363                           ;stid.c: 39: LATDbits.LATD2=0;
  2364   001C20  948C               	bcf	140,2,c	;volatile
  2365                           
  2366                           ;stid.c: 40: stid_delai_us(400);
  2367   001C22  0E01               	movlw	1
  2368   001C24  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2369   001C26  0E90               	movlw	144
  2370   001C28  6E01               	movwf	stid_delai_us@isdu^0,c
  2371   001C2A  ECC6  F011         	call	_stid_delai_us	;wreg free
  2372   001C2E  2A07               	incf	lecture_normale@n_bit^0,f,c
  2373   001C30  0E07               	movlw	7
  2374   001C32  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2375   001C34  D7E0               	goto	i2l1654
  2376                           
  2377                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2378   001C36  5006               	movf	lecture_normale@n_octet^0,w,c
  2379   001C38  2403               	addwf	lecture_normale@stid_id^0,w,c
  2380   001C3A  6ED9               	movwf	fsr2l,c
  2381   001C3C  0E00               	movlw	0
  2382   001C3E  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2383   001C40  6EDA               	movwf	fsr2h,c
  2384   001C42  C008  FFDF         	movff	lecture_normale@octet,indf2
  2385                           
  2386                           ;stid.c: 43: n_octet++;
  2387   001C46  2A06               	incf	lecture_normale@n_octet^0,f,c
  2388                           
  2389                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2390   001C48  B083               	btfsc	131,0,c	;volatile
  2391   001C4A  D7D1               	goto	i2l1653
  2392                           
  2393                           ;stid.c: 47: return n_octet;
  2394   001C4C  5006               	movf	lecture_normale@n_octet^0,w,c
  2395   001C4E  0012               	return	
  2396   001C50                     i2l4542:
  2397                           
  2398                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2399   001C50  0E00               	movlw	0
  2400   001C52  0012               	return		;funcret
  2401   001C54                     __end_of_lecture_normale:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _stid_delai_us *****************
  2405 ;; Defined at:
  2406 ;;		line 56 in file "stid.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  isdu            2    0[COMRAM] unsigned int 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        2 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_lecture_normale
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text7
  2434   00238C                     __ptext7:
  2435                           	callstack 0
  2436   00238C                     _stid_delai_us:
  2437                           	callstack 26
  2438                           
  2439                           ;stid.c: 58: while(isdu>0)
  2440                           
  2441                           ;incstack = 0
  2442   00238C  D006               	goto	i2l4316
  2443   00238E                     i2l1663:
  2444                           
  2445                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2446   00238E  F000               	nop	
  2447   002390  F000               	nop	
  2448   002392  F000               	nop	
  2449                           
  2450                           ;stid.c: 61: isdu--;
  2451   002394  0601               	decf	stid_delai_us@isdu^0,f,c
  2452   002396  A0D8               	btfss	status,0,c
  2453   002398  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2454   00239A                     i2l4316:
  2455   00239A  5001               	movf	stid_delai_us@isdu^0,w,c
  2456   00239C  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2457   00239E  B4D8               	btfsc	status,2,c
  2458   0023A0  0012               	return	
  2459   0023A2  D7F5               	goto	i2l1663
  2460   0023A4                     __end_of_stid_delai_us:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _tache5 *****************
  2464 ;; Defined at:
  2465 ;;		line 3 in file "T5.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  a               2    0[COMRAM] unsigned int 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2483 ;;Total ram usage:        2 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_fonction_d_interruption
  2489 ;;		_initialisation_du_systeme
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text8
  2494   0017A6                     __ptext8:
  2495                           	callstack 0
  2496   0017A6                     _tache5:
  2497                           	callstack 28
  2498                           
  2499                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2500                           
  2501                           ;incstack = 0
  2502                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2503   0017A6  A89E               	btfss	158,4,c	;volatile
  2504   0017A8  D7FE               	goto	__ptext8
  2505   0017AA  0E74               	movlw	116
  2506   0017AC  6EAD               	movwf	173,c	;volatile
  2507   0017AE                     i2l962:
  2508   0017AE  A2AC               	btfss	172,1,c	;volatile
  2509   0017B0  D7FE               	goto	i2l962
  2510   0017B2                     i2u164_40:
  2511   0017B2  A89E               	btfss	158,4,c	;volatile
  2512   0017B4  D7FE               	goto	i2u164_40
  2513   0017B6  0E61               	movlw	97
  2514   0017B8  6EAD               	movwf	173,c	;volatile
  2515   0017BA                     i2l968:
  2516   0017BA  A2AC               	btfss	172,1,c	;volatile
  2517   0017BC  D7FE               	goto	i2l968
  2518   0017BE                     i2u166_40:
  2519   0017BE  A89E               	btfss	158,4,c	;volatile
  2520   0017C0  D7FE               	goto	i2u166_40
  2521   0017C2  0E63               	movlw	99
  2522   0017C4  6EAD               	movwf	173,c	;volatile
  2523   0017C6                     i2l974:
  2524   0017C6  A2AC               	btfss	172,1,c	;volatile
  2525   0017C8  D7FE               	goto	i2l974
  2526   0017CA                     i2u168_40:
  2527   0017CA  A89E               	btfss	158,4,c	;volatile
  2528   0017CC  D7FE               	goto	i2u168_40
  2529   0017CE  0E68               	movlw	104
  2530   0017D0  6EAD               	movwf	173,c	;volatile
  2531   0017D2                     i2l980:
  2532   0017D2  A2AC               	btfss	172,1,c	;volatile
  2533   0017D4  D7FE               	goto	i2l980
  2534   0017D6                     i2u170_40:
  2535   0017D6  A89E               	btfss	158,4,c	;volatile
  2536   0017D8  D7FE               	goto	i2u170_40
  2537   0017DA  0E65               	movlw	101
  2538   0017DC  6EAD               	movwf	173,c	;volatile
  2539   0017DE                     i2l986:
  2540   0017DE  A2AC               	btfss	172,1,c	;volatile
  2541   0017E0  D7FE               	goto	i2l986
  2542   0017E2                     i2u172_40:
  2543   0017E2  A89E               	btfss	158,4,c	;volatile
  2544   0017E4  D7FE               	goto	i2u172_40
  2545   0017E6  0E35               	movlw	53
  2546   0017E8  6EAD               	movwf	173,c	;volatile
  2547   0017EA                     i2l992:
  2548   0017EA  A2AC               	btfss	172,1,c	;volatile
  2549   0017EC  D7FE               	goto	i2l992
  2550   0017EE                     i2u174_40:
  2551   0017EE  A89E               	btfss	158,4,c	;volatile
  2552   0017F0  D7FE               	goto	i2u174_40
  2553   0017F2  0E5F               	movlw	95
  2554   0017F4  6EAD               	movwf	173,c	;volatile
  2555   0017F6                     i2l998:
  2556   0017F6  A2AC               	btfss	172,1,c	;volatile
  2557   0017F8  D7FE               	goto	i2l998
  2558   0017FA                     i2u176_40:
  2559   0017FA  A89E               	btfss	158,4,c	;volatile
  2560   0017FC  D7FE               	goto	i2u176_40
  2561   0017FE  0E65               	movlw	101
  2562   001800  6EAD               	movwf	173,c	;volatile
  2563   001802                     i2l1004:
  2564   001802  A2AC               	btfss	172,1,c	;volatile
  2565   001804  D7FE               	goto	i2l1004
  2566   001806                     i2u178_40:
  2567   001806  A89E               	btfss	158,4,c	;volatile
  2568   001808  D7FE               	goto	i2u178_40
  2569   00180A  0E6E               	movlw	110
  2570   00180C  6EAD               	movwf	173,c	;volatile
  2571   00180E                     i2l1010:
  2572   00180E  A2AC               	btfss	172,1,c	;volatile
  2573   001810  D7FE               	goto	i2l1010
  2574   001812                     i2u180_40:
  2575   001812  A89E               	btfss	158,4,c	;volatile
  2576   001814  D7FE               	goto	i2u180_40
  2577   001816  0E5F               	movlw	95
  2578   001818  6EAD               	movwf	173,c	;volatile
  2579   00181A                     i2l1016:
  2580   00181A  A2AC               	btfss	172,1,c	;volatile
  2581   00181C  D7FE               	goto	i2l1016
  2582   00181E                     i2u182_40:
  2583   00181E  A89E               	btfss	158,4,c	;volatile
  2584   001820  D7FE               	goto	i2u182_40
  2585   001822  0E63               	movlw	99
  2586   001824  6EAD               	movwf	173,c	;volatile
  2587   001826                     i2l1022:
  2588   001826  A2AC               	btfss	172,1,c	;volatile
  2589   001828  D7FE               	goto	i2l1022
  2590   00182A                     i2u184_40:
  2591   00182A  A89E               	btfss	158,4,c	;volatile
  2592   00182C  D7FE               	goto	i2u184_40
  2593   00182E  0E6F               	movlw	111
  2594   001830  6EAD               	movwf	173,c	;volatile
  2595   001832                     i2l1028:
  2596   001832  A2AC               	btfss	172,1,c	;volatile
  2597   001834  D7FE               	goto	i2l1028
  2598   001836                     i2u186_40:
  2599   001836  A89E               	btfss	158,4,c	;volatile
  2600   001838  D7FE               	goto	i2u186_40
  2601   00183A  0E75               	movlw	117
  2602   00183C  6EAD               	movwf	173,c	;volatile
  2603   00183E                     i2l1034:
  2604   00183E  A2AC               	btfss	172,1,c	;volatile
  2605   001840  D7FE               	goto	i2l1034
  2606   001842                     i2u188_40:
  2607   001842  A89E               	btfss	158,4,c	;volatile
  2608   001844  D7FE               	goto	i2u188_40
  2609   001846  0E72               	movlw	114
  2610   001848  6EAD               	movwf	173,c	;volatile
  2611   00184A                     i2l1040:
  2612   00184A  A2AC               	btfss	172,1,c	;volatile
  2613   00184C  D7FE               	goto	i2l1040
  2614   00184E                     i2u190_40:
  2615   00184E  A89E               	btfss	158,4,c	;volatile
  2616   001850  D7FE               	goto	i2u190_40
  2617   001852  0E73               	movlw	115
  2618   001854  6EAD               	movwf	173,c	;volatile
  2619   001856                     i2l1046:
  2620   001856  A2AC               	btfss	172,1,c	;volatile
  2621   001858  D7FE               	goto	i2l1046
  2622                           
  2623                           ;T5.c: 28: for (a=0;a<65000;a++)
  2624   00185A  0E00               	movlw	0
  2625   00185C  6E02               	movwf	(tache5@a+1)^0,c
  2626   00185E  0E00               	movlw	0
  2627   001860  6E01               	movwf	tache5@a^0,c
  2628   001862                     i2l3650:
  2629                           
  2630                           ;T5.c: 29: ;
  2631   001862  4A01               	infsnz	tache5@a^0,f,c
  2632   001864  2A02               	incf	(tache5@a+1)^0,f,c
  2633   001866  0EE8               	movlw	232
  2634   001868  5C01               	subwf	tache5@a^0,w,c
  2635   00186A  0EFD               	movlw	253
  2636   00186C  5802               	subwfb	(tache5@a+1)^0,w,c
  2637   00186E  A0D8               	btfss	status,0,c
  2638   001870  D7F8               	goto	i2l3650
  2639                           
  2640                           ;T5.c: 30: for (a=0;a<65000;a++)
  2641   001872  0E00               	movlw	0
  2642   001874  6E02               	movwf	(tache5@a+1)^0,c
  2643   001876  0E00               	movlw	0
  2644   001878  6E01               	movwf	tache5@a^0,c
  2645   00187A                     i2l3660:
  2646                           
  2647                           ;T5.c: 31: ;
  2648   00187A  4A01               	infsnz	tache5@a^0,f,c
  2649   00187C  2A02               	incf	(tache5@a+1)^0,f,c
  2650   00187E  0EE8               	movlw	232
  2651   001880  5C01               	subwf	tache5@a^0,w,c
  2652   001882  0EFD               	movlw	253
  2653   001884  5802               	subwfb	(tache5@a+1)^0,w,c
  2654   001886  B0D8               	btfsc	status,0,c
  2655   001888  D78E               	goto	__ptext8
  2656   00188A  D7F7               	goto	i2l3660
  2657   00188C                     __end_of_tache5:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _tache4 *****************
  2661 ;; Defined at:
  2662 ;;		line 3 in file "T4.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  a               2    0[COMRAM] unsigned int 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;Total ram usage:        2 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_fonction_d_interruption
  2686 ;;		_initialisation_du_systeme
  2687 ;; This function uses a non-reentrant model
  2688 ;;
  2689                           
  2690                           	psect	text9
  2691   00196A                     __ptext9:
  2692                           	callstack 0
  2693   00196A                     _tache4:
  2694                           	callstack 28
  2695                           
  2696                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2697                           
  2698                           ;incstack = 0
  2699                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2700   00196A  A89E               	btfss	158,4,c	;volatile
  2701   00196C  D7FE               	goto	__ptext9
  2702   00196E  0E54               	movlw	84
  2703   001970  6EAD               	movwf	173,c	;volatile
  2704   001972                     i2l780:
  2705   001972  A2AC               	btfss	172,1,c	;volatile
  2706   001974  D7FE               	goto	i2l780
  2707   001976                     i2u133_40:
  2708   001976  A89E               	btfss	158,4,c	;volatile
  2709   001978  D7FE               	goto	i2u133_40
  2710   00197A  0E41               	movlw	65
  2711   00197C  6EAD               	movwf	173,c	;volatile
  2712   00197E                     i2l786:
  2713   00197E  A2AC               	btfss	172,1,c	;volatile
  2714   001980  D7FE               	goto	i2l786
  2715   001982                     i2u135_40:
  2716   001982  A89E               	btfss	158,4,c	;volatile
  2717   001984  D7FE               	goto	i2u135_40
  2718   001986  0E43               	movlw	67
  2719   001988  6EAD               	movwf	173,c	;volatile
  2720   00198A                     i2l792:
  2721   00198A  A2AC               	btfss	172,1,c	;volatile
  2722   00198C  D7FE               	goto	i2l792
  2723   00198E                     i2u137_40:
  2724   00198E  A89E               	btfss	158,4,c	;volatile
  2725   001990  D7FE               	goto	i2u137_40
  2726   001992  0E48               	movlw	72
  2727   001994  6EAD               	movwf	173,c	;volatile
  2728   001996                     i2l798:
  2729   001996  A2AC               	btfss	172,1,c	;volatile
  2730   001998  D7FE               	goto	i2l798
  2731   00199A                     i2u139_40:
  2732   00199A  A89E               	btfss	158,4,c	;volatile
  2733   00199C  D7FE               	goto	i2u139_40
  2734   00199E  0E45               	movlw	69
  2735   0019A0  6EAD               	movwf	173,c	;volatile
  2736   0019A2                     i2l804:
  2737   0019A2  A2AC               	btfss	172,1,c	;volatile
  2738   0019A4  D7FE               	goto	i2l804
  2739   0019A6                     i2u141_40:
  2740   0019A6  A89E               	btfss	158,4,c	;volatile
  2741   0019A8  D7FE               	goto	i2u141_40
  2742   0019AA  0E34               	movlw	52
  2743   0019AC  6EAD               	movwf	173,c	;volatile
  2744   0019AE                     i2l810:
  2745   0019AE  A2AC               	btfss	172,1,c	;volatile
  2746   0019B0  D7FE               	goto	i2l810
  2747   0019B2                     i2u143_40:
  2748   0019B2  A89E               	btfss	158,4,c	;volatile
  2749   0019B4  D7FE               	goto	i2u143_40
  2750   0019B6  0E5F               	movlw	95
  2751   0019B8  6EAD               	movwf	173,c	;volatile
  2752   0019BA                     i2l816:
  2753   0019BA  A2AC               	btfss	172,1,c	;volatile
  2754   0019BC  D7FE               	goto	i2l816
  2755   0019BE                     i2u145_40:
  2756   0019BE  A89E               	btfss	158,4,c	;volatile
  2757   0019C0  D7FE               	goto	i2u145_40
  2758   0019C2  0E45               	movlw	69
  2759   0019C4  6EAD               	movwf	173,c	;volatile
  2760   0019C6                     i2l822:
  2761   0019C6  A2AC               	btfss	172,1,c	;volatile
  2762   0019C8  D7FE               	goto	i2l822
  2763   0019CA                     i2u147_40:
  2764   0019CA  A89E               	btfss	158,4,c	;volatile
  2765   0019CC  D7FE               	goto	i2u147_40
  2766   0019CE  0E4E               	movlw	78
  2767   0019D0  6EAD               	movwf	173,c	;volatile
  2768   0019D2                     i2l828:
  2769   0019D2  A2AC               	btfss	172,1,c	;volatile
  2770   0019D4  D7FE               	goto	i2l828
  2771   0019D6                     i2u149_40:
  2772   0019D6  A89E               	btfss	158,4,c	;volatile
  2773   0019D8  D7FE               	goto	i2u149_40
  2774   0019DA  0E5F               	movlw	95
  2775   0019DC  6EAD               	movwf	173,c	;volatile
  2776   0019DE                     i2l834:
  2777   0019DE  A2AC               	btfss	172,1,c	;volatile
  2778   0019E0  D7FE               	goto	i2l834
  2779   0019E2                     i2u151_40:
  2780   0019E2  A89E               	btfss	158,4,c	;volatile
  2781   0019E4  D7FE               	goto	i2u151_40
  2782   0019E6  0E43               	movlw	67
  2783   0019E8  6EAD               	movwf	173,c	;volatile
  2784   0019EA                     i2l840:
  2785   0019EA  A2AC               	btfss	172,1,c	;volatile
  2786   0019EC  D7FE               	goto	i2l840
  2787   0019EE                     i2u153_40:
  2788   0019EE  A89E               	btfss	158,4,c	;volatile
  2789   0019F0  D7FE               	goto	i2u153_40
  2790   0019F2  0E4F               	movlw	79
  2791   0019F4  6EAD               	movwf	173,c	;volatile
  2792   0019F6                     i2l846:
  2793   0019F6  A2AC               	btfss	172,1,c	;volatile
  2794   0019F8  D7FE               	goto	i2l846
  2795   0019FA                     i2u155_40:
  2796   0019FA  A89E               	btfss	158,4,c	;volatile
  2797   0019FC  D7FE               	goto	i2u155_40
  2798   0019FE  0E55               	movlw	85
  2799   001A00  6EAD               	movwf	173,c	;volatile
  2800   001A02                     i2l852:
  2801   001A02  A2AC               	btfss	172,1,c	;volatile
  2802   001A04  D7FE               	goto	i2l852
  2803   001A06                     i2u157_40:
  2804   001A06  A89E               	btfss	158,4,c	;volatile
  2805   001A08  D7FE               	goto	i2u157_40
  2806   001A0A  0E52               	movlw	82
  2807   001A0C  6EAD               	movwf	173,c	;volatile
  2808   001A0E                     i2l858:
  2809   001A0E  A2AC               	btfss	172,1,c	;volatile
  2810   001A10  D7FE               	goto	i2l858
  2811   001A12                     i2u159_40:
  2812   001A12  A89E               	btfss	158,4,c	;volatile
  2813   001A14  D7FE               	goto	i2u159_40
  2814   001A16  0E53               	movlw	83
  2815   001A18  6EAD               	movwf	173,c	;volatile
  2816   001A1A                     i2l864:
  2817   001A1A  A2AC               	btfss	172,1,c	;volatile
  2818   001A1C  D7FE               	goto	i2l864
  2819                           
  2820                           ;T4.c: 28: for (a=0;a<65000;a++)
  2821   001A1E  0E00               	movlw	0
  2822   001A20  6E02               	movwf	(tache4@a+1)^0,c
  2823   001A22  0E00               	movlw	0
  2824   001A24  6E01               	movwf	tache4@a^0,c
  2825   001A26                     i2l3610:
  2826                           
  2827                           ;T4.c: 29: ;
  2828   001A26  4A01               	infsnz	tache4@a^0,f,c
  2829   001A28  2A02               	incf	(tache4@a+1)^0,f,c
  2830   001A2A  0EE8               	movlw	232
  2831   001A2C  5C01               	subwf	tache4@a^0,w,c
  2832   001A2E  0EFD               	movlw	253
  2833   001A30  5802               	subwfb	(tache4@a+1)^0,w,c
  2834   001A32  B0D8               	btfsc	status,0,c
  2835   001A34  D79A               	goto	__ptext9
  2836   001A36  D7F7               	goto	i2l3610
  2837   001A38                     __end_of_tache4:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _tache3 *****************
  2841 ;; Defined at:
  2842 ;;		line 3 in file "T3.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;		None
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;Total ram usage:        0 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_fonction_d_interruption
  2866 ;;		_initialisation_du_systeme
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text10
  2871   00188C                     __ptext10:
  2872                           	callstack 0
  2873   00188C                     _tache3:
  2874                           	callstack 28
  2875                           
  2876                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2877                           
  2878                           ;incstack = 0
  2879                           ;T3.c: 5: while(1)
  2880   00188C  0100               	movlb	0	; () banked
  2881   00188E  0566               	decf	102,w,b
  2882   001890  A4D8               	btfss	status,2,c
  2883   001892  D014               	goto	i2l3510
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2887   001894  0ECA               	movlw	202
  2888   001896  6567               	cpfsgt	103,b
  2889   001898  D011               	goto	i2l3510
  2890                           
  2891                           ; BSR set to: 0
  2892   00189A  0ED1               	movlw	209
  2893   00189C  6167               	cpfslt	103,b
  2894   00189E  D00E               	goto	i2l3510
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2898   0018A0  0E70               	movlw	112
  2899   0018A2  6568               	cpfsgt	104,b
  2900   0018A4  D004               	goto	i2l3504
  2901                           
  2902                           ; BSR set to: 0
  2903   0018A6  0E79               	movlw	121
  2904   0018A8  6168               	cpfslt	104,b
  2905   0018AA  D001               	goto	i2l3504
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2909   0018AC  848B               	bsf	139,2,c	;volatile
  2910   0018AE                     i2l3504:
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2914   0018AE  0E78               	movlw	120
  2915   0018B0  6568               	cpfsgt	104,b
  2916   0018B2  D004               	goto	i2l3510
  2917                           
  2918                           ; BSR set to: 0
  2919   0018B4  0E7F               	movlw	127
  2920   0018B6  6168               	cpfslt	104,b
  2921   0018B8  D001               	goto	i2l3510
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2925   0018BA  948B               	bcf	139,2,c	;volatile
  2926   0018BC                     i2l3510:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2930   0018BC  0566               	decf	102,w,b
  2931   0018BE  A4D8               	btfss	status,2,c
  2932   0018C0  D014               	goto	i2l3528
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2936   0018C2  0ED6               	movlw	214
  2937   0018C4  6567               	cpfsgt	103,b
  2938   0018C6  D011               	goto	i2l3528
  2939                           
  2940                           ; BSR set to: 0
  2941   0018C8  0EDD               	movlw	221
  2942   0018CA  6167               	cpfslt	103,b
  2943   0018CC  D00E               	goto	i2l3528
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2947   0018CE  0E70               	movlw	112
  2948   0018D0  6568               	cpfsgt	104,b
  2949   0018D2  D004               	goto	i2l3522
  2950                           
  2951                           ; BSR set to: 0
  2952   0018D4  0E79               	movlw	121
  2953   0018D6  6168               	cpfslt	104,b
  2954   0018D8  D001               	goto	i2l3522
  2955                           
  2956                           ; BSR set to: 0
  2957                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2958   0018DA  828B               	bsf	139,1,c	;volatile
  2959   0018DC                     i2l3522:
  2960                           
  2961                           ; BSR set to: 0
  2962                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2963   0018DC  0E78               	movlw	120
  2964   0018DE  6568               	cpfsgt	104,b
  2965   0018E0  D004               	goto	i2l3528
  2966                           
  2967                           ; BSR set to: 0
  2968   0018E2  0E7F               	movlw	127
  2969   0018E4  6168               	cpfslt	104,b
  2970   0018E6  D001               	goto	i2l3528
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2974   0018E8  928B               	bcf	139,1,c	;volatile
  2975   0018EA                     i2l3528:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2979   0018EA  0566               	decf	102,w,b
  2980   0018EC  A4D8               	btfss	status,2,c
  2981   0018EE  D014               	goto	i2l3546
  2982                           
  2983                           ; BSR set to: 0
  2984                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2985   0018F0  0EE2               	movlw	226
  2986   0018F2  6567               	cpfsgt	103,b
  2987   0018F4  D011               	goto	i2l3546
  2988                           
  2989                           ; BSR set to: 0
  2990   0018F6  0EE9               	movlw	233
  2991   0018F8  6167               	cpfslt	103,b
  2992   0018FA  D00E               	goto	i2l3546
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  2996   0018FC  0E70               	movlw	112
  2997   0018FE  6568               	cpfsgt	104,b
  2998   001900  D004               	goto	i2l3540
  2999                           
  3000                           ; BSR set to: 0
  3001   001902  0E79               	movlw	121
  3002   001904  6168               	cpfslt	104,b
  3003   001906  D001               	goto	i2l3540
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  3007   001908  808F               	bsf	143,0,c	;volatile
  3008   00190A                     i2l3540:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  3012   00190A  0E78               	movlw	120
  3013   00190C  6568               	cpfsgt	104,b
  3014   00190E  D004               	goto	i2l3546
  3015                           
  3016                           ; BSR set to: 0
  3017   001910  0E7F               	movlw	127
  3018   001912  6168               	cpfslt	104,b
  3019   001914  D001               	goto	i2l3546
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  3023   001916  908F               	bcf	143,0,c	;volatile
  3024   001918                     i2l3546:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  3028   001918  0566               	decf	102,w,b
  3029   00191A  A4D8               	btfss	status,2,c
  3030   00191C  D011               	goto	i2l3560
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  3034   00191E  0EB3               	movlw	179
  3035   001920  6567               	cpfsgt	103,b
  3036   001922  D00E               	goto	i2l3560
  3037                           
  3038                           ; BSR set to: 0
  3039   001924  0EE6               	movlw	230
  3040   001926  6167               	cpfslt	103,b
  3041   001928  D00B               	goto	i2l3560
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  3045   00192A  0E13               	movlw	19
  3046   00192C  6568               	cpfsgt	104,b
  3047   00192E  D008               	goto	i2l3560
  3048                           
  3049                           ; BSR set to: 0
  3050   001930  0E3C               	movlw	60
  3051   001932  6168               	cpfslt	104,b
  3052   001934  D005               	goto	i2l3560
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3056   001936  948B               	bcf	139,2,c	;volatile
  3057   001938  828B               	bsf	139,1,c	;volatile
  3058   00193A  808F               	bsf	143,0,c	;volatile
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;T3.c: 62: TEST = 1;
  3062   00193C  0E01               	movlw	1
  3063   00193E  6F81               	movwf	129,b
  3064   001940                     i2l3560:
  3065                           
  3066                           ; BSR set to: 0
  3067                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3068   001940  0566               	decf	102,w,b
  3069   001942  A4D8               	btfss	status,2,c
  3070   001944  D7A3               	goto	__ptext10
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3074   001946  0E77               	movlw	119
  3075   001948  6567               	cpfsgt	103,b
  3076   00194A  D7A0               	goto	__ptext10
  3077                           
  3078                           ; BSR set to: 0
  3079   00194C  0EAA               	movlw	170
  3080   00194E  6167               	cpfslt	103,b
  3081   001950  D79D               	goto	__ptext10
  3082                           
  3083                           ; BSR set to: 0
  3084                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3085   001952  0E13               	movlw	19
  3086   001954  6568               	cpfsgt	104,b
  3087   001956  D79A               	goto	__ptext10
  3088                           
  3089                           ; BSR set to: 0
  3090   001958  0E3C               	movlw	60
  3091   00195A  6168               	cpfslt	104,b
  3092   00195C  D797               	goto	__ptext10
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3096   00195E  948B               	bcf	139,2,c	;volatile
  3097   001960  928B               	bcf	139,1,c	;volatile
  3098   001962  908F               	bcf	143,0,c	;volatile
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;T3.c: 74: TEST = 0;
  3102   001964  0E00               	movlw	0
  3103   001966  6F81               	movwf	129,b
  3104                           
  3105                           ; BSR set to: 0
  3106   001968  D791               	goto	__ptext10
  3107   00196A                     __end_of_tache3:
  3108                           	callstack 0
  3109                           
  3110 ;; *************** function _tache2 *****************
  3111 ;; Defined at:
  3112 ;;		line 3 in file "T2.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  iy              2   11[COMRAM] unsigned int 
  3117 ;;  ix              2    9[COMRAM] unsigned int 
  3118 ;;  ly              1   16[COMRAM] unsigned char 
  3119 ;;  hy              1   15[COMRAM] unsigned char 
  3120 ;;  lx              1   14[COMRAM] unsigned char 
  3121 ;;  hx              1   13[COMRAM] unsigned char 
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;Total ram usage:       10 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 1
  3138 ;; This function calls:
  3139 ;;		___lwdiv
  3140 ;;		_tp_delai
  3141 ;; This function is called by:
  3142 ;;		_fonction_d_interruption
  3143 ;;		_initialisation_du_systeme
  3144 ;; This function uses a non-reentrant model
  3145 ;;
  3146                           
  3147                           	psect	text11
  3148   0016B2                     __ptext11:
  3149                           	callstack 0
  3150   0016B2                     _tache2:
  3151                           	callstack 27
  3152                           
  3153                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;incstack = 0
  3157   0016B2  0E00               	movlw	0
  3158   0016B4  0100               	movlb	0	; () banked
  3159   0016B6  6F66               	movwf	102,b
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3163   0016B8  868F               	bsf	143,3,c	;volatile
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;T2.c: 13: LATGbits.LATG4=0;
  3167   0016BA  988F               	bcf	143,4,c	;volatile
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;T2.c: 14: tp_delai(3000);
  3171   0016BC  0E0B               	movlw	11
  3172   0016BE  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3173   0016C0  0EB8               	movlw	184
  3174   0016C2  6E01               	movwf	tp_delai@itpd^0,c
  3175   0016C4  ECD2  F011         	call	_tp_delai	;wreg free
  3176                           
  3177                           ;T2.c: 18: ADCON2=0x16;
  3178   0016C8  0E16               	movlw	22
  3179   0016CA  6EC0               	movwf	192,c	;volatile
  3180                           
  3181                           ;T2.c: 19: ADCON0=0x01;
  3182   0016CC  0E01               	movlw	1
  3183   0016CE  6EC2               	movwf	194,c	;volatile
  3184                           
  3185                           ;T2.c: 20: ADCON0=0x03;
  3186   0016D0  0E03               	movlw	3
  3187   0016D2  6EC2               	movwf	194,c	;volatile
  3188   0016D4                     i2l561:
  3189   0016D4  B2C2               	btfsc	194,1,c	;volatile
  3190   0016D6  D7FE               	goto	i2l561
  3191                           
  3192                           ;T2.c: 23: hx=ADRESH;
  3193   0016D8  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3194                           
  3195                           ;T2.c: 24: lx=ADRESL;
  3196   0016DC  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3197                           
  3198                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3199   0016E0  C00F  F008         	movff	tache2@lx,??_tache2
  3200   0016E4  0E0F               	movlw	15
  3201   0016E6  1608               	andwf	??_tache2^0,f,c
  3202   0016E8  B4D8               	btfsc	status,2,c
  3203   0016EA  D004               	goto	i2l4928
  3204   0016EC  0E00               	movlw	0
  3205   0016EE  6E0E               	movwf	tache2@hx^0,c
  3206   0016F0  0E00               	movlw	0
  3207   0016F2  6E0F               	movwf	tache2@lx^0,c
  3208   0016F4                     i2l4928:
  3209                           
  3210                           ;T2.c: 31: if (hx>=10)
  3211   0016F4  0E09               	movlw	9
  3212   0016F6  640E               	cpfsgt	tache2@hx^0,c
  3213   0016F8  D7DC               	goto	__ptext11
  3214                           
  3215                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3216   0016FA  968F               	bcf	143,3,c	;volatile
  3217                           
  3218                           ;T2.c: 34: LATGbits.LATG4=1;
  3219   0016FC  888F               	bsf	143,4,c	;volatile
  3220                           
  3221                           ;T2.c: 35: tp_delai(3000);
  3222   0016FE  0E0B               	movlw	11
  3223   001700  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3224   001702  0EB8               	movlw	184
  3225   001704  6E01               	movwf	tp_delai@itpd^0,c
  3226   001706  ECD2  F011         	call	_tp_delai	;wreg free
  3227                           
  3228                           ;T2.c: 39: ADCON2=0x16;
  3229   00170A  0E16               	movlw	22
  3230   00170C  6EC0               	movwf	192,c	;volatile
  3231                           
  3232                           ;T2.c: 40: ADCON0=0x05;
  3233   00170E  0E05               	movlw	5
  3234   001710  6EC2               	movwf	194,c	;volatile
  3235                           
  3236                           ;T2.c: 41: ADCON0=0x07;
  3237   001712  0E07               	movlw	7
  3238   001714  6EC2               	movwf	194,c	;volatile
  3239   001716                     i2l566:
  3240   001716  B2C2               	btfsc	194,1,c	;volatile
  3241   001718  D7FE               	goto	i2l566
  3242                           
  3243                           ;T2.c: 44: hy=ADRESH;
  3244   00171A  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3245                           
  3246                           ;T2.c: 45: ly=ADRESL;
  3247   00171E  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3248                           
  3249                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3250   001722  C011  F008         	movff	tache2@ly,??_tache2
  3251   001726  0E0F               	movlw	15
  3252   001728  1608               	andwf	??_tache2^0,f,c
  3253   00172A  B4D8               	btfsc	status,2,c
  3254   00172C  D004               	goto	i2l4944
  3255   00172E  0E00               	movlw	0
  3256   001730  6E10               	movwf	tache2@hy^0,c
  3257   001732  0E00               	movlw	0
  3258   001734  6E11               	movwf	tache2@ly^0,c
  3259   001736                     i2l4944:
  3260                           
  3261                           ;T2.c: 51: if (hy>=20)
  3262   001736  0E13               	movlw	19
  3263   001738  6410               	cpfsgt	tache2@hy^0,c
  3264   00173A  D7BB               	goto	__ptext11
  3265                           
  3266                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3267   00173C  500E               	movf	tache2@hx^0,w,c
  3268   00173E  6E08               	movwf	??_tache2^0,c
  3269   001740  500F               	movf	tache2@lx^0,w,c
  3270   001742  6E0A               	movwf	tache2@ix^0,c
  3271   001744  C008  F00B         	movff	??_tache2,tache2@ix+1
  3272                           
  3273                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3274   001748  5010               	movf	tache2@hy^0,w,c
  3275   00174A  6E08               	movwf	??_tache2^0,c
  3276   00174C  5011               	movf	tache2@ly^0,w,c
  3277   00174E  6E0C               	movwf	tache2@iy^0,c
  3278   001750  C008  F00D         	movff	??_tache2,tache2@iy+1
  3279                           
  3280                           ;T2.c: 55: ix=ix-3150;
  3281   001754  0EB2               	movlw	178
  3282   001756  240A               	addwf	tache2@ix^0,w,c
  3283   001758  6E0A               	movwf	tache2@ix^0,c
  3284   00175A  0EF3               	movlw	243
  3285   00175C  200B               	addwfc	(tache2@ix+1)^0,w,c
  3286   00175E  6E0B               	movwf	(tache2@ix+1)^0,c
  3287                           
  3288                           ;T2.c: 56: iy=iy-6500;
  3289   001760  0E9C               	movlw	156
  3290   001762  240C               	addwf	tache2@iy^0,w,c
  3291   001764  6E0C               	movwf	tache2@iy^0,c
  3292   001766  0EE6               	movlw	230
  3293   001768  200D               	addwfc	(tache2@iy+1)^0,w,c
  3294   00176A  6E0D               	movwf	(tache2@iy+1)^0,c
  3295                           
  3296                           ;T2.c: 58: TP_x=ix/246;
  3297   00176C  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3298   001770  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3299   001774  0E00               	movlw	0
  3300   001776  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3301   001778  0EF6               	movlw	246
  3302   00177A  6E03               	movwf	___lwdiv@divisor^0,c
  3303   00177C  ECD7  F00F         	call	___lwdiv	;wreg free
  3304   001780  5001               	movf	?___lwdiv^0,w,c
  3305   001782  0100               	movlb	0	; () banked
  3306   001784  6F67               	movwf	103,b
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;T2.c: 59: TP_y=127-(iy/409);
  3310   001786  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3311   00178A  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3312   00178E  0E01               	movlw	1
  3313   001790  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3314   001792  0E99               	movlw	153
  3315   001794  6E03               	movwf	___lwdiv@divisor^0,c
  3316   001796  ECD7  F00F         	call	___lwdiv	;wreg free
  3317   00179A  5001               	movf	?___lwdiv^0,w,c
  3318   00179C  087F               	sublw	127
  3319   00179E  0100               	movlb	0	; () banked
  3320   0017A0  6F68               	movwf	104,b
  3321                           
  3322                           ;T2.c: 68: TP_appui=1;
  3323   0017A2  0E01               	movlw	1
  3324   0017A4  D788               	goto	L3
  3325   0017A6                     __end_of_tache2:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function _tp_delai *****************
  3329 ;; Defined at:
  3330 ;;		line 87 in file "T2.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  itpd            2    0[COMRAM] unsigned int 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;Total ram usage:        2 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; This function calls:
  3351 ;;		Nothing
  3352 ;; This function is called by:
  3353 ;;		_tache2
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text12
  3358   0023A4                     __ptext12:
  3359                           	callstack 0
  3360   0023A4                     _tp_delai:
  3361                           	callstack 27
  3362                           
  3363                           ;T2.c: 89: while(itpd>0)
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;incstack = 0
  3367   0023A4  D006               	goto	i2l4488
  3368   0023A6                     i2l579:
  3369                           
  3370                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3371   0023A6  F000               	nop	
  3372   0023A8  F000               	nop	
  3373   0023AA  F000               	nop	
  3374                           
  3375                           ;T2.c: 92: itpd--;
  3376   0023AC  0601               	decf	tp_delai@itpd^0,f,c
  3377   0023AE  A0D8               	btfss	status,0,c
  3378   0023B0  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3379   0023B2                     i2l4488:
  3380   0023B2  5001               	movf	tp_delai@itpd^0,w,c
  3381   0023B4  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3382   0023B6  B4D8               	btfsc	status,2,c
  3383   0023B8  0012               	return	
  3384   0023BA  D7F5               	goto	i2l579
  3385   0023BC                     __end_of_tp_delai:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function ___lwdiv *****************
  3389 ;; Defined at:
  3390 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  dividend        2    0[COMRAM] unsigned int 
  3393 ;;  divisor         2    2[COMRAM] unsigned int 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  quotient        2    4[COMRAM] unsigned int 
  3396 ;;  counter         1    6[COMRAM] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  2    0[COMRAM] unsigned int 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3407 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;Total ram usage:        7 bytes
  3411 ;; Hardware stack levels used: 1
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_tache2
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text13
  3420   001FAE                     __ptext13:
  3421                           	callstack 0
  3422   001FAE                     ___lwdiv:
  3423                           	callstack 27
  3424                           
  3425                           ;incstack = 0
  3426   001FAE  0E00               	movlw	0
  3427   001FB0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3428   001FB2  0E00               	movlw	0
  3429   001FB4  6E05               	movwf	___lwdiv@quotient^0,c
  3430   001FB6  5003               	movf	___lwdiv@divisor^0,w,c
  3431   001FB8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3432   001FBA  B4D8               	btfsc	status,2,c
  3433   001FBC  D01C               	goto	i2l2240
  3434   001FBE  0E01               	movlw	1
  3435   001FC0  6E07               	movwf	___lwdiv@counter^0,c
  3436   001FC2  D004               	goto	i2l4554
  3437   001FC4                     i2l4552:
  3438   001FC4  90D8               	bcf	status,0,c
  3439   001FC6  3603               	rlcf	___lwdiv@divisor^0,f,c
  3440   001FC8  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3441   001FCA  2A07               	incf	___lwdiv@counter^0,f,c
  3442   001FCC                     i2l4554:
  3443   001FCC  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3444   001FCE  D7FA               	goto	i2l4552
  3445   001FD0                     i2u273_40:
  3446   001FD0  90D8               	bcf	status,0,c
  3447   001FD2  3605               	rlcf	___lwdiv@quotient^0,f,c
  3448   001FD4  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3449   001FD6  5003               	movf	___lwdiv@divisor^0,w,c
  3450   001FD8  5C01               	subwf	___lwdiv@dividend^0,w,c
  3451   001FDA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3452   001FDC  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3453   001FDE  A0D8               	btfss	status,0,c
  3454   001FE0  D005               	goto	i2l4564
  3455   001FE2  5003               	movf	___lwdiv@divisor^0,w,c
  3456   001FE4  5E01               	subwf	___lwdiv@dividend^0,f,c
  3457   001FE6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3458   001FE8  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3459   001FEA  8005               	bsf	___lwdiv@quotient^0,0,c
  3460   001FEC                     i2l4564:
  3461   001FEC  90D8               	bcf	status,0,c
  3462   001FEE  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3463   001FF0  3203               	rrcf	___lwdiv@divisor^0,f,c
  3464   001FF2  2E07               	decfsz	___lwdiv@counter^0,f,c
  3465   001FF4  D7ED               	goto	i2u273_40
  3466   001FF6                     i2l2240:
  3467   001FF6  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3468   001FFA  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3469   001FFE  0012               	return		;funcret
  3470   002000                     __end_of___lwdiv:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _tache1 *****************
  3474 ;; Defined at:
  3475 ;;		line 3 in file "T1.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  i               1    0        unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;Total ram usage:        0 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 5
  3496 ;; This function calls:
  3497 ;;		_Init
  3498 ;;		_charger
  3499 ;;		_clear_graphics
  3500 ;;		_clear_line
  3501 ;;		_clear_text
  3502 ;;		_draw_char
  3503 ;;		_draw_dec8
  3504 ;;		_draw_hex8
  3505 ;;		_draw_square
  3506 ;;		_draw_string
  3507 ;;		_goto_lico
  3508 ;;		_init_rxtx
  3509 ;;		_initialisation_afficheur
  3510 ;;		_lecture_8bit_analogique
  3511 ;;		_plot1
  3512 ;;		_vide
  3513 ;;		_vitesseAdmin
  3514 ;; This function is called by:
  3515 ;;		_fonction_d_interruption
  3516 ;;		_initialisation_du_systeme
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520                           	psect	text14
  3521   0010DA                     __ptext14:
  3522                           	callstack 0
  3523   0010DA                     _tache1:
  3524                           	callstack 23
  3525                           
  3526                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3527                           
  3528                           ;incstack = 0
  3529   0010DA  9EF2               	bcf	242,7,c	;volatile
  3530                           
  3531                           ;T1.c: 8: initialisation_afficheur();
  3532   0010DC  EC1C  F00D         	call	_initialisation_afficheur	;wreg free
  3533                           
  3534                           ;T1.c: 9: clear_text();
  3535   0010E0  EC09  F011         	call	_clear_text	;wreg free
  3536                           
  3537                           ;T1.c: 10: clear_graphics();
  3538   0010E4  EC21  F011         	call	_clear_graphics	;wreg free
  3539                           
  3540                           ;T1.c: 11: init_rxtx();
  3541   0010E8  EC60  F011         	call	_init_rxtx	;wreg free
  3542                           
  3543                           ;T1.c: 12: Init(2);
  3544   0010EC  0E02               	movlw	2
  3545   0010EE  6EE6               	movwf	postinc1,c
  3546   0010F0  EC4F  F011         	call	_Init	;wreg free
  3547                           
  3548                           ;T1.c: 13: RXTX_libre=1;
  3549   0010F4  0E01               	movlw	1
  3550   0010F6  0100               	movlb	0	; () banked
  3551   0010F8  6F80               	movwf	128,b
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;T1.c: 14: TXREG1='R';
  3555   0010FA  0E52               	movlw	82
  3556   0010FC  6EAD               	movwf	173,c	;volatile
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3560   0010FE  8EF2               	bsf	242,7,c	;volatile
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3564   001100  948B               	bcf	139,2,c	;volatile
  3565                           
  3566                           ; BSR set to: 0
  3567   001102  928B               	bcf	139,1,c	;volatile
  3568                           
  3569                           ; BSR set to: 0
  3570   001104  908F               	bcf	143,0,c	;volatile
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;T1.c: 19: vitesse=0;
  3574   001106  0E00               	movlw	0
  3575   001108  6F73               	movwf	115,b
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;T1.c: 20: batterie=15;
  3579   00110A  0E0F               	movlw	15
  3580   00110C  6F74               	movwf	116,b
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;T1.c: 21: n_octet_badge=0;
  3584   00110E  0E00               	movlw	0
  3585   001110  6F7F               	movwf	127,b
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;T1.c: 22: TEST=0;
  3589   001112  0E00               	movlw	0
  3590   001114  6F81               	movwf	129,b
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;T1.c: 23: Personne=0;
  3594   001116  0E00               	movlw	0
  3595   001118  6F82               	movwf	130,b
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3599   00111A  0E22               	movlw	34
  3600   00111C  6E09               	movwf	goto_lico@colonne^0,c
  3601   00111E  0E0D               	movlw	13
  3602   001120  ECAB  F00F         	call	_goto_lico
  3603   001124  0E52               	movlw	82
  3604   001126  ECF0  F010         	call	_draw_char
  3605   00112A  0E20               	movlw	32
  3606   00112C  ECF0  F010         	call	_draw_char
  3607   001130  0E56               	movlw	86
  3608   001132  ECF0  F010         	call	_draw_char
  3609   001136  0E20               	movlw	32
  3610   001138  ECF0  F010         	call	_draw_char
  3611   00113C  0E42               	movlw	66
  3612   00113E  ECF0  F010         	call	_draw_char
  3613                           
  3614                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3615   001142  0E22               	movlw	34
  3616   001144  6E09               	movwf	goto_lico@colonne^0,c
  3617   001146  0E0E               	movlw	14
  3618   001148  ECAB  F00F         	call	_goto_lico
  3619   00114C  0E30               	movlw	48
  3620   00114E  ECF0  F010         	call	_draw_char
  3621   001152  0E20               	movlw	32
  3622   001154  ECF0  F010         	call	_draw_char
  3623   001158  0E30               	movlw	48
  3624   00115A  ECF0  F010         	call	_draw_char
  3625   00115E  0E20               	movlw	32
  3626   001160  ECF0  F010         	call	_draw_char
  3627   001164  0E30               	movlw	48
  3628   001166  ECF0  F010         	call	_draw_char
  3629                           
  3630                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3631   00116A  0E22               	movlw	34
  3632   00116C  6E09               	movwf	goto_lico@colonne^0,c
  3633   00116E  0E0F               	movlw	15
  3634   001170  ECAB  F00F         	call	_goto_lico
  3635   001174  0E31               	movlw	49
  3636   001176  ECF0  F010         	call	_draw_char
  3637   00117A  0E20               	movlw	32
  3638   00117C  ECF0  F010         	call	_draw_char
  3639   001180  0E31               	movlw	49
  3640   001182  ECF0  F010         	call	_draw_char
  3641   001186  0E20               	movlw	32
  3642   001188  ECF0  F010         	call	_draw_char
  3643   00118C  0E31               	movlw	49
  3644   00118E  ECF0  F010         	call	_draw_char
  3645                           
  3646                           ;T1.c: 29: TP_appui=0;
  3647   001192  0E00               	movlw	0
  3648   001194  0100               	movlb	0	; () banked
  3649   001196  6F66               	movwf	102,b
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;T1.c: 30: draw_square(180,20,230,60);
  3653   001198  0E14               	movlw	20
  3654   00119A  6E0F               	movwf	draw_square@y1^0,c
  3655   00119C  0EE6               	movlw	230
  3656   00119E  6E10               	movwf	draw_square@x2^0,c
  3657   0011A0  0E3C               	movlw	60
  3658   0011A2  6E11               	movwf	draw_square@y2^0,c
  3659   0011A4  0EB4               	movlw	180
  3660   0011A6  EC51  F010         	call	_draw_square
  3661                           
  3662                           ;T1.c: 31: draw_square(120,20,170,60);
  3663   0011AA  0E14               	movlw	20
  3664   0011AC  6E0F               	movwf	draw_square@y1^0,c
  3665   0011AE  0EAA               	movlw	170
  3666   0011B0  6E10               	movwf	draw_square@x2^0,c
  3667   0011B2  0E3C               	movlw	60
  3668   0011B4  6E11               	movwf	draw_square@y2^0,c
  3669   0011B6  0E78               	movlw	120
  3670   0011B8  EC51  F010         	call	_draw_square
  3671                           
  3672                           ;T1.c: 33: draw_string(2);
  3673   0011BC  0E02               	movlw	2
  3674   0011BE  6E08               	movwf	draw_string@tableau^0,c
  3675   0011C0  0E00               	movlw	0
  3676   0011C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3677   0011C4  EC78  F00E         	call	_draw_string	;wreg free
  3678   0011C8                     i2l4764:
  3679                           
  3680                           ;T1.c: 36: {;T1.c: 38: goto_lico(0,0);
  3681   0011C8  0E00               	movlw	0
  3682   0011CA  6E09               	movwf	goto_lico@colonne^0,c
  3683   0011CC  0E00               	movlw	0
  3684   0011CE  ECAB  F00F         	call	_goto_lico
  3685                           
  3686                           ;T1.c: 39: draw_string("Marche:");
  3687   0011D2  0E8D               	movlw	low STR_1
  3688   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3689   0011D6  0E10               	movlw	high STR_1
  3690   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3691   0011DA  EC78  F00E         	call	_draw_string	;wreg free
  3692                           
  3693                           ;T1.c: 40: if (PORTBbits.RB0==0)
  3694   0011DE  B081               	btfsc	129,0,c	;volatile
  3695   0011E0  D007               	goto	i2l434
  3696                           
  3697                           ;T1.c: 41: draw_string("AV");
  3698   0011E2  0ED5               	movlw	low STR_2
  3699   0011E4  6E08               	movwf	draw_string@tableau^0,c
  3700   0011E6  0E10               	movlw	high STR_2
  3701   0011E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3702   0011EA  EC78  F00E         	call	_draw_string	;wreg free
  3703   0011EE  D00F               	goto	i2l4776
  3704   0011F0                     i2l434:
  3705                           
  3706                           ;T1.c: 42: else;T1.c: 43: if (PORTBbits.RB1==0)
  3707   0011F0  B281               	btfsc	129,1,c	;volatile
  3708   0011F2  D007               	goto	i2l4774
  3709                           
  3710                           ;T1.c: 44: draw_string("AR");
  3711   0011F4  0ED2               	movlw	low STR_3
  3712   0011F6  6E08               	movwf	draw_string@tableau^0,c
  3713   0011F8  0E10               	movlw	high STR_3
  3714   0011FA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3715   0011FC  EC78  F00E         	call	_draw_string	;wreg free
  3716   001200  D006               	goto	i2l4776
  3717   001202                     i2l4774:
  3718                           
  3719                           ;T1.c: 45: else{;T1.c: 46: draw_string("N ");
  3720   001202  0ECC               	movlw	low STR_4
  3721   001204  6E08               	movwf	draw_string@tableau^0,c
  3722   001206  0E10               	movlw	high STR_4
  3723   001208  6E09               	movwf	(draw_string@tableau+1)^0,c
  3724   00120A  EC78  F00E         	call	_draw_string	;wreg free
  3725   00120E                     i2l4776:
  3726                           
  3727                           ;T1.c: 48: };T1.c: 49: goto_lico(7,0);
  3728   00120E  0E00               	movlw	0
  3729   001210  6E09               	movwf	goto_lico@colonne^0,c
  3730   001212  0E07               	movlw	7
  3731   001214  ECAB  F00F         	call	_goto_lico
  3732                           
  3733                           ;T1.c: 50: if (PORTEbits.RE4==0){
  3734   001218  B884               	btfsc	132,4,c	;volatile
  3735   00121A  D007               	goto	i2l4782
  3736                           
  3737                           ;T1.c: 51: draw_string("((!))");
  3738   00121C  0EB1               	movlw	low STR_5
  3739   00121E  6E08               	movwf	draw_string@tableau^0,c
  3740   001220  0E10               	movlw	high STR_5
  3741   001222  6E09               	movwf	(draw_string@tableau+1)^0,c
  3742   001224  EC78  F00E         	call	_draw_string	;wreg free
  3743                           
  3744                           ;T1.c: 52: }
  3745   001228  D006               	goto	i2l4784
  3746   00122A                     i2l4782:
  3747                           
  3748                           ;T1.c: 53: else{;T1.c: 54: draw_string("     ");
  3749   00122A  0E2D               	movlw	low (STR_14+15)
  3750   00122C  6E08               	movwf	draw_string@tableau^0,c
  3751   00122E  0E10               	movlw	high (STR_14+15)
  3752   001230  6E09               	movwf	(draw_string@tableau+1)^0,c
  3753   001232  EC78  F00E         	call	_draw_string	;wreg free
  3754   001236                     i2l4784:
  3755                           
  3756                           ;T1.c: 55: };T1.c: 57: goto_lico(1,0);
  3757   001236  0E00               	movlw	0
  3758   001238  6E09               	movwf	goto_lico@colonne^0,c
  3759   00123A  0E01               	movlw	1
  3760   00123C  ECAB  F00F         	call	_goto_lico
  3761                           
  3762                           ;T1.c: 58: draw_string("Siege:");
  3763   001240  0E9C               	movlw	low STR_7
  3764   001242  6E08               	movwf	draw_string@tableau^0,c
  3765   001244  0E10               	movlw	high STR_7
  3766   001246  6E09               	movwf	(draw_string@tableau+1)^0,c
  3767   001248  EC78  F00E         	call	_draw_string	;wreg free
  3768                           
  3769                           ;T1.c: 59: if (PORTBbits.RB2==0)
  3770   00124C  B481               	btfsc	129,2,c	;volatile
  3771   00124E  D004               	goto	i2l4792
  3772                           
  3773                           ;T1.c: 60: {draw_char('1');}
  3774   001250  0E31               	movlw	49
  3775   001252  ECF0  F010         	call	_draw_char
  3776   001256  D003               	goto	i2l4794
  3777   001258                     i2l4792:
  3778                           
  3779                           ;T1.c: 61: else;T1.c: 62: {draw_char('0');}
  3780   001258  0E30               	movlw	48
  3781   00125A  ECF0  F010         	call	_draw_char
  3782   00125E                     i2l4794:
  3783                           
  3784                           ;T1.c: 64: goto_lico(2,0);
  3785   00125E  0E00               	movlw	0
  3786   001260  6E09               	movwf	goto_lico@colonne^0,c
  3787   001262  0E02               	movlw	2
  3788   001264  ECAB  F00F         	call	_goto_lico
  3789                           
  3790                           ;T1.c: 65: draw_string("Temp. Eau:");
  3791   001268  0E66               	movlw	low STR_8
  3792   00126A  6E08               	movwf	draw_string@tableau^0,c
  3793   00126C  0E10               	movlw	high STR_8
  3794   00126E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3795   001270  EC78  F00E         	call	_draw_string	;wreg free
  3796                           
  3797                           ;T1.c: 66: draw_dec8(lecture_8bit_analogique(2));
  3798   001274  0E02               	movlw	2
  3799   001276  ECD5  F010         	call	_lecture_8bit_analogique
  3800   00127A  EC2A  F00E         	call	_draw_dec8
  3801                           
  3802                           ;T1.c: 68: goto_lico(3,0);
  3803   00127E  0E00               	movlw	0
  3804   001280  6E09               	movwf	goto_lico@colonne^0,c
  3805   001282  0E03               	movlw	3
  3806   001284  ECAB  F00F         	call	_goto_lico
  3807                           
  3808                           ;T1.c: 69: draw_string("Temp. Huile:");
  3809   001288  0E41               	movlw	low STR_9
  3810   00128A  6E08               	movwf	draw_string@tableau^0,c
  3811   00128C  0E10               	movlw	high STR_9
  3812   00128E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3813   001290  EC78  F00E         	call	_draw_string	;wreg free
  3814                           
  3815                           ;T1.c: 70: draw_dec8(lecture_8bit_analogique(3));
  3816   001294  0E03               	movlw	3
  3817   001296  ECD5  F010         	call	_lecture_8bit_analogique
  3818   00129A  EC2A  F00E         	call	_draw_dec8
  3819                           
  3820                           ;T1.c: 72: goto_lico(4,0);
  3821   00129E  0E00               	movlw	0
  3822   0012A0  6E09               	movwf	goto_lico@colonne^0,c
  3823   0012A2  0E04               	movlw	4
  3824   0012A4  ECAB  F00F         	call	_goto_lico
  3825                           
  3826                           ;T1.c: 73: draw_string("Choc:");
  3827   0012A8  0EB7               	movlw	low STR_10
  3828   0012AA  6E08               	movwf	draw_string@tableau^0,c
  3829   0012AC  0E10               	movlw	high STR_10
  3830   0012AE  6E09               	movwf	(draw_string@tableau+1)^0,c
  3831   0012B0  EC78  F00E         	call	_draw_string	;wreg free
  3832                           
  3833                           ;T1.c: 74: if (PORTBbits.RB3==0)
  3834   0012B4  B681               	btfsc	129,3,c	;volatile
  3835   0012B6  D004               	goto	i2l4814
  3836                           
  3837                           ;T1.c: 75: draw_char('1');
  3838   0012B8  0E31               	movlw	49
  3839   0012BA  ECF0  F010         	call	_draw_char
  3840   0012BE  D003               	goto	i2l4816
  3841   0012C0                     i2l4814:
  3842                           
  3843                           ;T1.c: 76: else;T1.c: 77: draw_char('0');
  3844   0012C0  0E30               	movlw	48
  3845   0012C2  ECF0  F010         	call	_draw_char
  3846   0012C6                     i2l4816:
  3847                           
  3848                           ;T1.c: 79: if(Personne == 2) {
  3849   0012C6  0E02               	movlw	2
  3850   0012C8  0100               	movlb	0	; () banked
  3851   0012CA  1982               	xorwf	130,w,b
  3852   0012CC  A4D8               	btfss	status,2,c
  3853   0012CE  D006               	goto	i2l4820
  3854   0012D0                     i2u280_40:
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;T1.c: 80: vitesseAdmin(Personne);
  3858   0012D0  C082 F001          	movff	130,vitesseAdmin@a
  3859   0012D4  6A02               	clrf	(vitesseAdmin@a+1)^0,c
  3860   0012D6  ECBE  F00E         	call	_vitesseAdmin	;wreg free
  3861                           
  3862                           ;T1.c: 82: }
  3863   0012DA  D003               	goto	i2l4824
  3864   0012DC                     i2l4820:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;T1.c: 83: else if(Personne ==1){
  3868   0012DC  0582               	decf	130,w,b
  3869   0012DE  B4D8               	btfsc	status,2,c
  3870   0012E0  D7F7               	goto	i2u280_40
  3871   0012E2                     i2l4824:
  3872                           
  3873                           ;T1.c: 88: };T1.c: 90: goto_lico(5,0);
  3874   0012E2  0E00               	movlw	0
  3875   0012E4  6E09               	movwf	goto_lico@colonne^0,c
  3876   0012E6  0E05               	movlw	5
  3877   0012E8  ECAB  F00F         	call	_goto_lico
  3878                           
  3879                           ;T1.c: 91: draw_string("Vitesse:");
  3880   0012EC  0E7B               	movlw	low STR_11
  3881   0012EE  6E08               	movwf	draw_string@tableau^0,c
  3882   0012F0  0E10               	movlw	high STR_11
  3883   0012F2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3884   0012F4  EC78  F00E         	call	_draw_string	;wreg free
  3885                           
  3886                           ;T1.c: 93: draw_dec8(vitesse);
  3887   0012F8  0100               	movlb	0	; () banked
  3888   0012FA  5173               	movf	115,w,b
  3889   0012FC  EC2A  F00E         	call	_draw_dec8
  3890                           
  3891                           ;T1.c: 95: goto_lico(6,0);
  3892   001300  0E00               	movlw	0
  3893   001302  6E09               	movwf	goto_lico@colonne^0,c
  3894   001304  0E06               	movlw	6
  3895   001306  ECAB  F00F         	call	_goto_lico
  3896                           
  3897                           ;T1.c: 96: draw_string("Batterie:");
  3898   00130A  0E71               	movlw	low STR_12
  3899   00130C  6E08               	movwf	draw_string@tableau^0,c
  3900   00130E  0E10               	movlw	high STR_12
  3901   001310  6E09               	movwf	(draw_string@tableau+1)^0,c
  3902   001312  EC78  F00E         	call	_draw_string	;wreg free
  3903                           
  3904                           ;T1.c: 97: if (PORTEbits.RE2==0 && batterie < 100)
  3905   001316  B484               	btfsc	132,2,c	;volatile
  3906   001318  D005               	goto	i2l4840
  3907   00131A  0E64               	movlw	100
  3908   00131C  0100               	movlb	0	; () banked
  3909   00131E  6174               	cpfslt	116,b
  3910   001320  D001               	goto	i2l4840
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;T1.c: 98: batterie++;
  3914   001322  2B74               	incf	116,f,b
  3915   001324                     i2l4840:
  3916                           
  3917                           ;T1.c: 99: if (PORTEbits.RE3==0 && batterie > 0)
  3918   001324  B684               	btfsc	132,3,c	;volatile
  3919   001326  D004               	goto	i2l4846
  3920   001328  0100               	movlb	0	; () banked
  3921   00132A  5174               	movf	116,w,b
  3922   00132C  A4D8               	btfss	status,2,c
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;T1.c: 100: batterie--;
  3926   00132E  0774               	decf	116,f,b
  3927   001330                     i2l4846:
  3928                           
  3929                           ;T1.c: 101: draw_dec8(batterie);
  3930   001330  0100               	movlb	0	; () banked
  3931   001332  5174               	movf	116,w,b
  3932   001334  EC2A  F00E         	call	_draw_dec8
  3933                           
  3934                           ;T1.c: 105: goto_lico(8,0);
  3935   001338  0E00               	movlw	0
  3936   00133A  6E09               	movwf	goto_lico@colonne^0,c
  3937   00133C  0E08               	movlw	8
  3938   00133E  ECAB  F00F         	call	_goto_lico
  3939                           
  3940                           ;T1.c: 106: draw_string("Badge:");
  3941   001342  0E95               	movlw	low STR_13
  3942   001344  6E08               	movwf	draw_string@tableau^0,c
  3943   001346  0E10               	movlw	high STR_13
  3944   001348  6E09               	movwf	(draw_string@tableau+1)^0,c
  3945   00134A  EC78  F00E         	call	_draw_string	;wreg free
  3946                           
  3947                           ;T1.c: 107: if (n_octet_badge==0)
  3948   00134E  0100               	movlb	0	; () banked
  3949   001350  517F               	movf	127,w,b
  3950   001352  A4D8               	btfss	status,2,c
  3951   001354  D007               	goto	i2l4856
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;T1.c: 108: draw_string(" AUCUN              ");
  3955   001356  0E1E               	movlw	low STR_14
  3956   001358  6E08               	movwf	draw_string@tableau^0,c
  3957   00135A  0E10               	movlw	high STR_14
  3958   00135C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3959   00135E  EC78  F00E         	call	_draw_string	;wreg free
  3960   001362  D01E               	goto	i2l453
  3961   001364                     i2l4856:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;T1.c: 109: else;T1.c: 110: {;T1.c: 117: if(Personne==2)
  3965   001364  0E02               	movlw	2
  3966   001366  1982               	xorwf	130,w,b
  3967   001368  A4D8               	btfss	status,2,c
  3968   00136A  D007               	goto	i2l4860
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;T1.c: 118: {;T1.c: 120: draw_string("Operator");
  3972   00136C  0E84               	movlw	low STR_15
  3973   00136E  6E08               	movwf	draw_string@tableau^0,c
  3974   001370  0E10               	movlw	high STR_15
  3975   001372  6E09               	movwf	(draw_string@tableau+1)^0,c
  3976   001374  EC78  F00E         	call	_draw_string	;wreg free
  3977                           
  3978                           ;T1.c: 122: }
  3979   001378  D013               	goto	i2l453
  3980   00137A                     i2l4860:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;T1.c: 123: else if(Personne==1)
  3984   00137A  0582               	decf	130,w,b
  3985   00137C  A4D8               	btfss	status,2,c
  3986   00137E  D007               	goto	i2l4864
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;T1.c: 124: {;T1.c: 126: draw_string(" ADMIN");
  3990   001380  0EAA               	movlw	low STR_16
  3991   001382  6E08               	movwf	draw_string@tableau^0,c
  3992   001384  0E10               	movlw	high STR_16
  3993   001386  6E09               	movwf	(draw_string@tableau+1)^0,c
  3994   001388  EC78  F00E         	call	_draw_string	;wreg free
  3995                           
  3996                           ;T1.c: 127: }
  3997   00138C  D009               	goto	i2l453
  3998   00138E                     i2l4864:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;T1.c: 128: else if (Personne==0){
  4002   00138E  5182               	movf	130,w,b
  4003   001390  A4D8               	btfss	status,2,c
  4004   001392  D006               	goto	i2l453
  4005                           
  4006                           ; BSR set to: 0
  4007                           ;T1.c: 130: draw_string("AUCUN");
  4008   001394  0EBD               	movlw	low STR_17
  4009   001396  6E08               	movwf	draw_string@tableau^0,c
  4010   001398  0E10               	movlw	high STR_17
  4011   00139A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4012   00139C  EC78  F00E         	call	_draw_string	;wreg free
  4013   0013A0                     i2l453:
  4014                           
  4015                           ;T1.c: 131: };T1.c: 132: };T1.c: 140: goto_lico(9,0);
  4016                           
  4017                           ; BSR set to: 0
  4018   0013A0  0E00               	movlw	0
  4019   0013A2  6E09               	movwf	goto_lico@colonne^0,c
  4020   0013A4  0E09               	movlw	9
  4021   0013A6  ECAB  F00F         	call	_goto_lico
  4022                           
  4023                           ;T1.c: 141: draw_string("X-Joystick:");
  4024   0013AA  0E4E               	movlw	low STR_18
  4025   0013AC  6E08               	movwf	draw_string@tableau^0,c
  4026   0013AE  0E10               	movlw	high STR_18
  4027   0013B0  6E09               	movwf	(draw_string@tableau+1)^0,c
  4028   0013B2  EC78  F00E         	call	_draw_string	;wreg free
  4029                           
  4030                           ;T1.c: 142: draw_hex8(lecture_8bit_analogique(10));
  4031   0013B6  0E0A               	movlw	10
  4032   0013B8  ECD5  F010         	call	_lecture_8bit_analogique
  4033   0013BC  EC7D  F00F         	call	_draw_hex8
  4034                           
  4035                           ;T1.c: 144: goto_lico(10,0);
  4036   0013C0  0E00               	movlw	0
  4037   0013C2  6E09               	movwf	goto_lico@colonne^0,c
  4038   0013C4  0E0A               	movlw	10
  4039   0013C6  ECAB  F00F         	call	_goto_lico
  4040                           
  4041                           ;T1.c: 145: draw_string("Y-Joystick:");
  4042   0013CA  0E5A               	movlw	low STR_19
  4043   0013CC  6E08               	movwf	draw_string@tableau^0,c
  4044   0013CE  0E10               	movlw	high STR_19
  4045   0013D0  6E09               	movwf	(draw_string@tableau+1)^0,c
  4046   0013D2  EC78  F00E         	call	_draw_string	;wreg free
  4047                           
  4048                           ;T1.c: 146: draw_hex8(lecture_8bit_analogique(11));
  4049   0013D6  0E0B               	movlw	11
  4050   0013D8  ECD5  F010         	call	_lecture_8bit_analogique
  4051   0013DC  EC7D  F00F         	call	_draw_hex8
  4052                           
  4053                           ;T1.c: 149: goto_lico(5,22);
  4054   0013E0  0E16               	movlw	22
  4055   0013E2  6E09               	movwf	goto_lico@colonne^0,c
  4056   0013E4  0E05               	movlw	5
  4057   0013E6  ECAB  F00F         	call	_goto_lico
  4058                           
  4059                           ;T1.c: 150: draw_string("VIDE");
  4060   0013EA  0EC3               	movlw	low STR_20
  4061   0013EC  6E08               	movwf	draw_string@tableau^0,c
  4062   0013EE  0E10               	movlw	high STR_20
  4063   0013F0  6E09               	movwf	(draw_string@tableau+1)^0,c
  4064   0013F2  EC78  F00E         	call	_draw_string	;wreg free
  4065                           
  4066                           ;T1.c: 151: goto_lico(5,31);
  4067   0013F6  0E1F               	movlw	31
  4068   0013F8  6E09               	movwf	goto_lico@colonne^0,c
  4069   0013FA  0E05               	movlw	5
  4070   0013FC  ECAB  F00F         	call	_goto_lico
  4071                           
  4072                           ;T1.c: 152: draw_string("CHARGE");
  4073   001400  0EA3               	movlw	low STR_21
  4074   001402  6E08               	movwf	draw_string@tableau^0,c
  4075   001404  0E10               	movlw	high STR_21
  4076   001406  6E09               	movwf	(draw_string@tableau+1)^0,c
  4077   001408  EC78  F00E         	call	_draw_string	;wreg free
  4078                           
  4079                           ;T1.c: 160: if (TP_appui==1)
  4080   00140C  0100               	movlb	0	; () banked
  4081   00140E  0566               	decf	102,w,b
  4082   001410  A4D8               	btfss	status,2,c
  4083   001412  D020               	goto	i2l457
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;T1.c: 161: {;T1.c: 162: goto_lico(0,20);
  4087   001414  0E14               	movlw	20
  4088   001416  6E09               	movwf	goto_lico@colonne^0,c
  4089   001418  0E00               	movlw	0
  4090   00141A  ECAB  F00F         	call	_goto_lico
  4091                           
  4092                           ;T1.c: 163: draw_string("x=");
  4093   00141E  0ECF               	movlw	low STR_22
  4094   001420  6E08               	movwf	draw_string@tableau^0,c
  4095   001422  0E10               	movlw	high STR_22
  4096   001424  6E09               	movwf	(draw_string@tableau+1)^0,c
  4097   001426  EC78  F00E         	call	_draw_string	;wreg free
  4098                           
  4099                           ;T1.c: 164: draw_hex8(TP_x);
  4100   00142A  0100               	movlb	0	; () banked
  4101   00142C  5167               	movf	103,w,b
  4102   00142E  EC7D  F00F         	call	_draw_hex8
  4103                           
  4104                           ;T1.c: 165: draw_string(" y=");
  4105   001432  0EC8               	movlw	low STR_23
  4106   001434  6E08               	movwf	draw_string@tableau^0,c
  4107   001436  0E10               	movlw	high STR_23
  4108   001438  6E09               	movwf	(draw_string@tableau+1)^0,c
  4109   00143A  EC78  F00E         	call	_draw_string	;wreg free
  4110                           
  4111                           ;T1.c: 166: draw_hex8(TP_y);
  4112   00143E  0100               	movlb	0	; () banked
  4113   001440  5168               	movf	104,w,b
  4114   001442  EC7D  F00F         	call	_draw_hex8
  4115                           
  4116                           ;T1.c: 167: plot1(TP_x,TP_y);
  4117   001446  C068 F009          	movff	104,plot1@y
  4118   00144A  0100               	movlb	0	; () banked
  4119   00144C  5167               	movf	103,w,b
  4120   00144E  EC82  F00D         	call	_plot1
  4121                           
  4122                           ;T1.c: 168: }
  4123   001452  D001               	goto	i2l4898
  4124   001454                     i2l457:
  4125                           
  4126                           ; BSR set to: 0
  4127                           ;T1.c: 169: else;T1.c: 170: {;T1.c: 171: __nop();
  4128   001454  F000               	nop	
  4129   001456                     i2l4898:
  4130                           
  4131                           ;T1.c: 172: };T1.c: 173: if (TEST==1){
  4132   001456  0100               	movlb	0	; () banked
  4133   001458  0581               	decf	129,w,b
  4134   00145A  B4D8               	btfsc	status,2,c
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;T1.c: 174: charger();
  4138   00145C  ECEA  F011         	call	_charger	;wreg free
  4139                           
  4140                           ;T1.c: 175: };T1.c: 176: if(TEST==0){
  4141   001460  0100               	movlb	0	; () banked
  4142   001462  5181               	movf	129,w,b
  4143   001464  A4D8               	btfss	status,2,c
  4144   001466  D6B0               	goto	i2l4764
  4145                           
  4146                           ; BSR set to: 0
  4147                           ;T1.c: 177: clear_line(14);
  4148   001468  0E0E               	movlw	14
  4149   00146A  EC82  F011         	call	_clear_line
  4150                           
  4151                           ;T1.c: 178: vide();
  4152   00146E  ECDE  F011         	call	_vide	;wreg free
  4153                           
  4154                           ;T1.c: 179: TEST=3;
  4155   001472  0E03               	movlw	3
  4156   001474  0100               	movlb	0	; () banked
  4157   001476  6F81               	movwf	129,b
  4158   001478  D6A7               	goto	i2l4764
  4159   00147A                     __end_of_tache1:
  4160                           	callstack 0
  4161                           
  4162 ;; *************** function _vitesseAdmin *****************
  4163 ;; Defined at:
  4164 ;;		line 445 in file "afficheur.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  a               2    0[COMRAM] unsigned int 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;  c               2    7[COMRAM] int 
  4169 ;;  b               2    5[COMRAM] int 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;Total ram usage:        9 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_tache1
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text15
  4193   001D7C                     __ptext15:
  4194                           	callstack 0
  4195   001D7C                     _vitesseAdmin:
  4196                           	callstack 27
  4197                           
  4198                           ;afficheur.c: 446: int b ;;afficheur.c: 447: int c;;afficheur.c: 448: if (a==1){
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;incstack = 0
  4202   001D7C  0401               	decf	vitesseAdmin@a^0,w,c
  4203   001D7E  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4204   001D80  A4D8               	btfss	status,2,c
  4205   001D82  D008               	goto	i2l4414
  4206                           
  4207                           ;afficheur.c: 449: b =50;
  4208   001D84  0E00               	movlw	0
  4209   001D86  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4210   001D88  0E32               	movlw	50
  4211   001D8A  6E06               	movwf	vitesseAdmin@b^0,c
  4212                           
  4213                           ;afficheur.c: 450: c = 80;
  4214   001D8C  0E00               	movlw	0
  4215   001D8E  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4216   001D90  0E50               	movlw	80
  4217   001D92  6E08               	movwf	vitesseAdmin@c^0,c
  4218   001D94                     i2l4414:
  4219                           
  4220                           ;afficheur.c: 451: };afficheur.c: 452: if(a==2){
  4221   001D94  0E02               	movlw	2
  4222   001D96  1801               	xorwf	vitesseAdmin@a^0,w,c
  4223   001D98  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4224   001D9A  A4D8               	btfss	status,2,c
  4225   001D9C  D008               	goto	i2l4418
  4226                           
  4227                           ;afficheur.c: 453: b =15;
  4228   001D9E  0E00               	movlw	0
  4229   001DA0  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4230   001DA2  0E0F               	movlw	15
  4231   001DA4  6E06               	movwf	vitesseAdmin@b^0,c
  4232                           
  4233                           ;afficheur.c: 454: c = 25;
  4234   001DA6  0E00               	movlw	0
  4235   001DA8  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4236   001DAA  0E19               	movlw	25
  4237   001DAC  6E08               	movwf	vitesseAdmin@c^0,c
  4238   001DAE                     i2l4418:
  4239                           
  4240                           ;afficheur.c: 455: };afficheur.c: 456: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4241   001DAE  A081               	btfss	129,0,c	;volatile
  4242   001DB0  D002               	goto	i2u249_40
  4243   001DB2  B281               	btfsc	129,1,c	;volatile
  4244   001DB4  0012               	return	
  4245   001DB6                     i2u249_40:
  4246                           
  4247                           ;afficheur.c: 459: if (PORTEbits.RE4==1){
  4248   001DB6  A884               	btfss	132,4,c	;volatile
  4249   001DB8  0012               	return	
  4250                           
  4251                           ;afficheur.c: 460: if(TEST==1){
  4252   001DBA  0100               	movlb	0	; () banked
  4253   001DBC  0581               	decf	129,w,b
  4254   001DBE  A4D8               	btfss	status,2,c
  4255   001DC0  D016               	goto	i2l1444
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;afficheur.c: 462: if (PORTEbits.RE0==0 && vitesse < b)
  4259   001DC2  B084               	btfsc	132,0,c	;volatile
  4260   001DC4  D00D               	goto	i2l4430
  4261                           
  4262                           ; BSR set to: 0
  4263   001DC6  5173               	movf	115,w,b
  4264   001DC8  6E03               	movwf	??_vitesseAdmin^0,c
  4265   001DCA  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4266   001DCC  5006               	movf	vitesseAdmin@b^0,w,c
  4267   001DCE  5C03               	subwf	??_vitesseAdmin^0,w,c
  4268   001DD0  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4269   001DD2  0A80               	xorlw	128
  4270   001DD4  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4271   001DD6  5007               	movf	(vitesseAdmin@b+1)^0,w,c
  4272   001DD8  0A80               	xorlw	128
  4273   001DDA  5805               	subwfb	(??_vitesseAdmin+2)^0,w,c
  4274   001DDC  A0D8               	btfss	status,0,c
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;afficheur.c: 463: vitesse++;
  4278   001DDE  2B73               	incf	115,f,b
  4279   001DE0                     i2l4430:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;afficheur.c: 464: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4283   001DE0  B284               	btfsc	132,1,c	;volatile
  4284   001DE2  0012               	return	
  4285                           
  4286                           ; BSR set to: 0
  4287   001DE4  5173               	movf	115,w,b
  4288   001DE6  B4D8               	btfsc	status,2,c
  4289   001DE8  0012               	return	
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;afficheur.c: 465: vitesse--;
  4293   001DEA  0773               	decf	115,f,b
  4294   001DEC  0012               	return	
  4295   001DEE                     i2l1444:
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;afficheur.c: 468: if (PORTEbits.RE0==0 && vitesse < c)
  4299   001DEE  B084               	btfsc	132,0,c	;volatile
  4300   001DF0  D7F7               	goto	i2l4430
  4301                           
  4302                           ; BSR set to: 0
  4303   001DF2  5173               	movf	115,w,b
  4304   001DF4  6E03               	movwf	??_vitesseAdmin^0,c
  4305   001DF6  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4306   001DF8  5008               	movf	vitesseAdmin@c^0,w,c
  4307   001DFA  5C03               	subwf	??_vitesseAdmin^0,w,c
  4308   001DFC  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4309   001DFE  0A80               	xorlw	128
  4310   001E00  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4311   001E02  5009               	movf	(vitesseAdmin@c+1)^0,w,c
  4312   001E04  D7E9               	goto	L8
  4313   001E06                     __end_of_vitesseAdmin:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function _vide *****************
  4317 ;; Defined at:
  4318 ;;		line 438 in file "afficheur.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        0 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; Hardware stack levels required when called: 4
  4339 ;; This function calls:
  4340 ;;		_draw_string
  4341 ;;		_goto_lico
  4342 ;; This function is called by:
  4343 ;;		_tache1
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text16
  4348   0023BC                     __ptext16:
  4349                           	callstack 0
  4350   0023BC                     _vide:
  4351                           	callstack 23
  4352                           
  4353                           ;afficheur.c: 440: goto_lico(14,0);
  4354                           
  4355                           ;incstack = 0
  4356   0023BC  0E00               	movlw	0
  4357   0023BE  6E09               	movwf	goto_lico@colonne^0,c
  4358   0023C0  0E0E               	movlw	14
  4359   0023C2  ECAB  F00F         	call	_goto_lico
  4360                           
  4361                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4362   0023C6  0E33               	movlw	low STR_25
  4363   0023C8  6E08               	movwf	draw_string@tableau^0,c
  4364   0023CA  0E10               	movlw	high STR_25
  4365   0023CC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4366   0023CE  EC78  F00E         	call	_draw_string	;wreg free
  4367   0023D2  0012               	return		;funcret
  4368   0023D4                     __end_of_vide:
  4369                           	callstack 0
  4370                           
  4371 ;; *************** function _lecture_8bit_analogique *****************
  4372 ;; Defined at:
  4373 ;;		line 60 in file "main.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  channel         1    wreg     unsigned char 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  channel         1    1[COMRAM] unsigned char 
  4378 ;;  ret             1    0[COMRAM] unsigned char 
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      unsigned char 
  4381 ;; Registers used:
  4382 ;;		wreg, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:        2 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_tache1
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text17
  4402   0021AA                     __ptext17:
  4403                           	callstack 0
  4404   0021AA                     _lecture_8bit_analogique:
  4405                           	callstack 27
  4406                           
  4407                           ;incstack = 0
  4408                           ;lecture_8bit_analogique@channel stored from wreg
  4409   0021AA  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4410                           
  4411                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4412   0021AC  0E00               	movlw	0
  4413   0021AE  6EC1               	movwf	193,c	;volatile
  4414                           
  4415                           ;main.c: 66: ADCON2=0x16;
  4416   0021B0  0E16               	movlw	22
  4417   0021B2  6EC0               	movwf	192,c	;volatile
  4418                           
  4419                           ;main.c: 67: channel=channel&0x1F;
  4420   0021B4  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4421   0021B6  0B1F               	andlw	31
  4422   0021B8  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4423                           
  4424                           ;main.c: 68: channel=channel<<2;
  4425   0021BA  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4426   0021BC  46E8               	rlncf	wreg,f,c
  4427   0021BE  0BFC               	andlw	252
  4428   0021C0  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4429                           
  4430                           ;main.c: 69: ADCON0=channel|0x01;
  4431   0021C2  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4432   0021C4  0901               	iorlw	1
  4433   0021C6  6EC2               	movwf	194,c	;volatile
  4434                           
  4435                           ;main.c: 71: ADCON0bits.GO=1;
  4436   0021C8  82C2               	bsf	194,1,c	;volatile
  4437   0021CA                     i2l144:
  4438   0021CA  B2C2               	btfsc	194,1,c	;volatile
  4439   0021CC  D7FE               	goto	i2l144
  4440                           
  4441                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4442   0021CE  A0C3               	btfss	195,0,c	;volatile
  4443   0021D0  D003               	goto	i2l147
  4444                           
  4445                           ;main.c: 76: ret=0;
  4446   0021D2  0E00               	movlw	0
  4447   0021D4  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4448   0021D6  D002               	goto	i2l2804
  4449   0021D8                     i2l147:
  4450                           
  4451                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4452   0021D8  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4453   0021DC                     i2l2804:
  4454                           
  4455                           ;main.c: 82: return ret;
  4456   0021DC  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4457   0021DE  0012               	return		;funcret
  4458   0021E0                     __end_of_lecture_8bit_analogique:
  4459                           	callstack 0
  4460                           
  4461 ;; *************** function _initialisation_afficheur *****************
  4462 ;; Defined at:
  4463 ;;		line 164 in file "afficheur.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;		None
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  error_count     1    8[COMRAM] unsigned char 
  4468 ;; Return value:  Size  Location     Type
  4469 ;;                  1    wreg      void 
  4470 ;; Registers used:
  4471 ;;		wreg, status,2, status,0, cstack
  4472 ;; Tracked objects:
  4473 ;;		On entry : 0/0
  4474 ;;		On exit  : 0/0
  4475 ;;		Unchanged: 0/0
  4476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;Total ram usage:        1 bytes
  4482 ;; Hardware stack levels used: 1
  4483 ;; Hardware stack levels required when called: 3
  4484 ;; This function calls:
  4485 ;;		_check_status_ok
  4486 ;;		_command
  4487 ;;		_d1command
  4488 ;;		_d2command
  4489 ;;		_delai_us_char
  4490 ;; This function is called by:
  4491 ;;		_tache1
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text18
  4496   001A38                     __ptext18:
  4497                           	callstack 0
  4498   001A38                     _initialisation_afficheur:
  4499                           	callstack 24
  4500                           
  4501                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4502                           
  4503                           ;incstack = 0
  4504   001A38  0E00               	movlw	0
  4505   001A3A  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4506                           
  4507                           ;afficheur.c: 172: LATH=0;
  4508   001A3C  0E00               	movlw	0
  4509   001A3E  6E90               	movwf	144,c	;volatile
  4510                           
  4511                           ;afficheur.c: 173: LATJ=0x1F;
  4512   001A40  0E1F               	movlw	31
  4513   001A42  6E91               	movwf	145,c	;volatile
  4514                           
  4515                           ;afficheur.c: 176: TRISH=0;
  4516   001A44  0E00               	movlw	0
  4517   001A46  6E99               	movwf	153,c	;volatile
  4518                           
  4519                           ;afficheur.c: 177: TRISJ=0;
  4520   001A48  0E00               	movlw	0
  4521   001A4A  6E9A               	movwf	154,c	;volatile
  4522                           
  4523                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4524   001A4C  9A91               	bcf	145,5,c	;volatile
  4525                           
  4526                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4527   001A4E  8C91               	bsf	145,6,c	;volatile
  4528                           
  4529                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4530   001A50  9891               	bcf	145,4,c	;volatile
  4531                           
  4532                           ;afficheur.c: 185: delai_us_char(4);
  4533   001A52  0E04               	movlw	4
  4534   001A54  EC71  F011         	call	_delai_us_char
  4535                           
  4536                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4537   001A58  8891               	bsf	145,4,c	;volatile
  4538                           
  4539                           ;afficheur.c: 190: delai_us_char(12);
  4540   001A5A  0E0C               	movlw	12
  4541   001A5C  EC71  F011         	call	_delai_us_char
  4542                           
  4543                           ;afficheur.c: 191: while(check_status_ok()==00)
  4544   001A60  D00C               	goto	i2l4342
  4545   001A62                     i2l4332:
  4546                           
  4547                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4548   001A62  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4549                           
  4550                           ;afficheur.c: 194: delai_us_char(12);
  4551   001A64  0E0C               	movlw	12
  4552   001A66  EC71  F011         	call	_delai_us_char
  4553                           
  4554                           ;afficheur.c: 195: if (error_count>200)
  4555   001A6A  0EC8               	movlw	200
  4556   001A6C  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4557   001A6E  D005               	goto	i2l4342
  4558                           
  4559                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4560   001A70  828B               	bsf	139,1,c	;volatile
  4561   001A72  808F               	bsf	143,0,c	;volatile
  4562   001A74  948B               	bcf	139,2,c	;volatile
  4563                           
  4564                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4565   001A76  9EF2               	bcf	242,7,c	;volatile
  4566   001A78                     i2l1302:
  4567   001A78  D7FF               	goto	i2l1302
  4568   001A7A                     i2l4342:
  4569   001A7A  EC39  F011         	call	_check_status_ok	;wreg free
  4570   001A7E  0900               	iorlw	0
  4571   001A80  B4D8               	btfsc	status,2,c
  4572   001A82  D7EF               	goto	i2l4332
  4573                           
  4574                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4575   001A84  0E0F               	movlw	15
  4576   001A86  6E05               	movwf	d2command@d2^0,c
  4577   001A88  0E21               	movlw	33
  4578   001A8A  6E06               	movwf	d2command@cmd^0,c
  4579   001A8C  0E27               	movlw	39
  4580   001A8E  EC29  F010         	call	_d2command
  4581                           
  4582                           ;afficheur.c: 206: d2command(0,0,0x22);
  4583   001A92  0E00               	movlw	0
  4584   001A94  6E05               	movwf	d2command@d2^0,c
  4585   001A96  0E22               	movlw	34
  4586   001A98  6E06               	movwf	d2command@cmd^0,c
  4587   001A9A  0E00               	movlw	0
  4588   001A9C  EC29  F010         	call	_d2command
  4589                           
  4590                           ;afficheur.c: 207: d2command(0,0,0x24);
  4591   001AA0  0E00               	movlw	0
  4592   001AA2  6E05               	movwf	d2command@d2^0,c
  4593   001AA4  0E24               	movlw	36
  4594   001AA6  6E06               	movwf	d2command@cmd^0,c
  4595   001AA8  0E00               	movlw	0
  4596   001AAA  EC29  F010         	call	_d2command
  4597                           
  4598                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4599   001AAE  0E7B               	movlw	123
  4600   001AB0  6E05               	movwf	d2command@d2^0,c
  4601   001AB2  0E40               	movlw	64
  4602   001AB4  6E06               	movwf	d2command@cmd^0,c
  4603   001AB6  0E00               	movlw	0
  4604   001AB8  EC29  F010         	call	_d2command
  4605                           
  4606                           ;afficheur.c: 211: d2command(40,0,0x41);
  4607   001ABC  0E00               	movlw	0
  4608   001ABE  6E05               	movwf	d2command@d2^0,c
  4609   001AC0  0E41               	movlw	65
  4610   001AC2  6E06               	movwf	d2command@cmd^0,c
  4611   001AC4  0E28               	movlw	40
  4612   001AC6  EC29  F010         	call	_d2command
  4613                           
  4614                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4615   001ACA  0E80               	movlw	128
  4616   001ACC  6E05               	movwf	d2command@d2^0,c
  4617   001ACE  0E42               	movlw	66
  4618   001AD0  6E06               	movwf	d2command@cmd^0,c
  4619   001AD2  0E00               	movlw	0
  4620   001AD4  EC29  F010         	call	_d2command
  4621                           
  4622                           ;afficheur.c: 213: d2command(40,0,0x43);
  4623   001AD8  0E00               	movlw	0
  4624   001ADA  6E05               	movwf	d2command@d2^0,c
  4625   001ADC  0E43               	movlw	67
  4626   001ADE  6E06               	movwf	d2command@cmd^0,c
  4627   001AE0  0E28               	movlw	40
  4628   001AE2  EC29  F010         	call	_d2command
  4629                           
  4630                           ;afficheur.c: 216: command(0x80);
  4631   001AE6  0E80               	movlw	128
  4632   001AE8  EC9F  F011         	call	_command
  4633                           
  4634                           ;afficheur.c: 219: command(0x9C);
  4635   001AEC  0E9C               	movlw	156
  4636   001AEE  EC9F  F011         	call	_command
  4637                           
  4638                           ;afficheur.c: 222: command(0xA0);
  4639   001AF2  0EA0               	movlw	160
  4640   001AF4  EC9F  F011         	call	_command
  4641                           
  4642                           ;afficheur.c: 225: d1command(0x02,0x70);
  4643   001AF8  0E70               	movlw	112
  4644   001AFA  6E05               	movwf	d1command@cmd^0,c
  4645   001AFC  0E02               	movlw	2
  4646   001AFE  EC9C  F010         	call	_d1command
  4647   001B02  0012               	return		;funcret
  4648   001B04                     __end_of_initialisation_afficheur:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function _check_status_ok *****************
  4652 ;; Defined at:
  4653 ;;		line 30 in file "afficheur.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  res             1    0[COMRAM] unsigned char 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      unsigned char 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;Total ram usage:        1 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; This function calls:
  4674 ;;		Nothing
  4675 ;; This function is called by:
  4676 ;;		_initialisation_afficheur
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text19
  4681   002272                     __ptext19:
  4682                           	callstack 0
  4683   002272                     _check_status_ok:
  4684                           	callstack 26
  4685                           
  4686                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4687                           
  4688                           ;incstack = 0
  4689   002272  6899               	setf	153,c	;volatile
  4690                           
  4691                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4692   002274  8091               	bsf	145,0,c	;volatile
  4693                           
  4694                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4695   002276  9691               	bcf	145,3,c	;volatile
  4696                           
  4697                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4698   002278  9291               	bcf	145,1,c	;volatile
  4699                           
  4700                           ;afficheur.c: 39: __nop();
  4701   00227A  F000               	nop	
  4702                           
  4703                           ;afficheur.c: 40: __nop();
  4704   00227C  F000               	nop	
  4705                           
  4706                           ;afficheur.c: 41: __nop();
  4707   00227E  F000               	nop	
  4708                           
  4709                           ;afficheur.c: 42: res=PORTH;
  4710   002280  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4711                           
  4712                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4713   002284  8291               	bsf	145,1,c	;volatile
  4714                           
  4715                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4716   002286  8691               	bsf	145,3,c	;volatile
  4717                           
  4718                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4719   002288  5001               	movf	check_status_ok@res^0,w,c
  4720   00228A  0B03               	andlw	3
  4721   00228C  0A03               	xorlw	3
  4722   00228E  A4D8               	btfss	status,2,c
  4723   002290  D002               	goto	i2l2774
  4724                           
  4725                           ;afficheur.c: 47: res=1;
  4726   002292  0E01               	movlw	1
  4727   002294  D001               	goto	L4
  4728   002296                     i2l2774:
  4729                           
  4730                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4731   002296  0E00               	movlw	0
  4732   002298                     L4:
  4733   002298  6E01               	movwf	check_status_ok@res^0,c
  4734                           
  4735                           ;afficheur.c: 50: return res;
  4736   00229A  5001               	movf	check_status_ok@res^0,w,c
  4737   00229C  0012               	return		;funcret
  4738   00229E                     __end_of_check_status_ok:
  4739                           	callstack 0
  4740                           
  4741 ;; *************** function _init_rxtx *****************
  4742 ;; Defined at:
  4743 ;;		line 4 in file "rxtx.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;Total ram usage:        0 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_tache1
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text20
  4771   0022C0                     __ptext20:
  4772                           	callstack 0
  4773   0022C0                     _init_rxtx:
  4774                           	callstack 27
  4775                           
  4776                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4777                           
  4778                           ;incstack = 0
  4779   0022C0  9C94               	bcf	148,6,c	;volatile
  4780                           
  4781                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4782   0022C2  8E94               	bsf	148,7,c	;volatile
  4783                           
  4784                           ;rxtx.c: 8: BAUDCON1=0x08;
  4785   0022C4  0E08               	movlw	8
  4786   0022C6  6E65               	movwf	101,c	;volatile
  4787                           
  4788                           ;rxtx.c: 9: SPBRGH1=0x04;
  4789   0022C8  0E04               	movlw	4
  4790   0022CA  6ED4               	movwf	212,c	;volatile
  4791                           
  4792                           ;rxtx.c: 10: SPBRG1=0xE1;
  4793   0022CC  0EE1               	movlw	225
  4794   0022CE  6EAF               	movwf	175,c	;volatile
  4795                           
  4796                           ;rxtx.c: 11: TXSTA1=0x04;
  4797   0022D0  0E04               	movlw	4
  4798   0022D2  6EAC               	movwf	172,c	;volatile
  4799                           
  4800                           ;rxtx.c: 12: RCSTA1=0x80;
  4801   0022D4  0E80               	movlw	128
  4802   0022D6  6EAB               	movwf	171,c	;volatile
  4803                           
  4804                           ;rxtx.c: 13: TXSTA1=0x24;
  4805   0022D8  0E24               	movlw	36
  4806   0022DA  6EAC               	movwf	172,c	;volatile
  4807                           
  4808                           ;rxtx.c: 14: RCSTA1=0x90;
  4809   0022DC  0E90               	movlw	144
  4810   0022DE  6EAB               	movwf	171,c	;volatile
  4811   0022E0  0012               	return		;funcret
  4812   0022E2                     __end_of_init_rxtx:
  4813                           	callstack 0
  4814                           
  4815 ;; *************** function _draw_square *****************
  4816 ;; Defined at:
  4817 ;;		line 325 in file "afficheur.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  x1              1    wreg     unsigned char 
  4820 ;;  y1              1   14[COMRAM] unsigned char 
  4821 ;;  x2              1   15[COMRAM] unsigned char 
  4822 ;;  y2              1   16[COMRAM] unsigned char 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;  x1              1   17[COMRAM] unsigned char 
  4825 ;;  y               1   19[COMRAM] unsigned char 
  4826 ;;  x               1   18[COMRAM] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4836 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;Total ram usage:        6 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 4
  4843 ;; This function calls:
  4844 ;;		_plot1
  4845 ;; This function is called by:
  4846 ;;		_tache1
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text21
  4851   0020A2                     __ptext21:
  4852                           	callstack 0
  4853   0020A2                     _draw_square:
  4854                           	callstack 23
  4855                           
  4856                           ;incstack = 0
  4857                           ;draw_square@x1 stored from wreg
  4858   0020A2  6E12               	movwf	draw_square@x1^0,c
  4859                           
  4860                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4861   0020A4  C012  F013         	movff	draw_square@x1,draw_square@x
  4862   0020A8  D00B               	goto	i2l4380
  4863   0020AA                     i2l4376:
  4864                           
  4865                           ;afficheur.c: 330: plot1(x, y1);
  4866   0020AA  C00F  F009         	movff	draw_square@y1,plot1@y
  4867   0020AE  5013               	movf	draw_square@x^0,w,c
  4868   0020B0  EC82  F00D         	call	_plot1
  4869                           
  4870                           ;afficheur.c: 331: plot1(x, y2);
  4871   0020B4  C011  F009         	movff	draw_square@y2,plot1@y
  4872   0020B8  5013               	movf	draw_square@x^0,w,c
  4873   0020BA  EC82  F00D         	call	_plot1
  4874   0020BE  2A13               	incf	draw_square@x^0,f,c
  4875   0020C0                     i2l4380:
  4876   0020C0  5013               	movf	draw_square@x^0,w,c
  4877   0020C2  5C10               	subwf	draw_square@x2^0,w,c
  4878   0020C4  B0D8               	btfsc	status,0,c
  4879   0020C6  D7F1               	goto	i2l4376
  4880                           
  4881                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4882   0020C8  C00F  F014         	movff	draw_square@y1,draw_square@y
  4883   0020CC  D00B               	goto	i2l4386
  4884   0020CE                     i2l4382:
  4885                           
  4886                           ;afficheur.c: 336: plot1(x1, y);
  4887   0020CE  C014  F009         	movff	draw_square@y,plot1@y
  4888   0020D2  5012               	movf	draw_square@x1^0,w,c
  4889   0020D4  EC82  F00D         	call	_plot1
  4890                           
  4891                           ;afficheur.c: 337: plot1(x2, y);
  4892   0020D8  C014  F009         	movff	draw_square@y,plot1@y
  4893   0020DC  5010               	movf	draw_square@x2^0,w,c
  4894   0020DE  EC82  F00D         	call	_plot1
  4895   0020E2  2A14               	incf	draw_square@y^0,f,c
  4896   0020E4                     i2l4386:
  4897   0020E4  5014               	movf	draw_square@y^0,w,c
  4898   0020E6  5C11               	subwf	draw_square@y2^0,w,c
  4899   0020E8  A0D8               	btfss	status,0,c
  4900   0020EA  0012               	return	
  4901   0020EC  D7F0               	goto	i2l4382
  4902   0020EE                     __end_of_draw_square:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _plot1 *****************
  4906 ;; Defined at:
  4907 ;;		line 390 in file "afficheur.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  x               1    wreg     unsigned char 
  4910 ;;  y               1    8[COMRAM] unsigned char 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  x               1   13[COMRAM] unsigned char 
  4913 ;;  add             2   11[COMRAM] unsigned int 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4923 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4927 ;;Total ram usage:        6 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 3
  4930 ;; This function calls:
  4931 ;;		___awdiv
  4932 ;;		___awmod
  4933 ;;		_command
  4934 ;;		_d2command
  4935 ;; This function is called by:
  4936 ;;		_tache1
  4937 ;;		_draw_square
  4938 ;;		_draw_filled_square
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           	psect	text22
  4943   001B04                     __ptext22:
  4944                           	callstack 0
  4945   001B04                     _plot1:
  4946                           	callstack 24
  4947                           
  4948                           ;incstack = 0
  4949                           ;plot1@x stored from wreg
  4950   001B04  6E0E               	movwf	plot1@x^0,c
  4951                           
  4952                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  4953   001B06  C00E  F001         	movff	plot1@x,___awdiv@dividend
  4954   001B0A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4955   001B0C  0E00               	movlw	0
  4956   001B0E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4957   001B10  0E06               	movlw	6
  4958   001B12  6E03               	movwf	___awdiv@divisor^0,c
  4959   001B14  EC03  F00F         	call	___awdiv	;wreg free
  4960   001B18  5009               	movf	plot1@y^0,w,c
  4961   001B1A  0D28               	mullw	40
  4962   001B1C  CFF3 F00A          	movff	prodl,??_plot1
  4963   001B20  CFF4 F00B          	movff	prodh,??_plot1+1
  4964   001B24  5001               	movf	?___awdiv^0,w,c
  4965   001B26  240A               	addwf	??_plot1^0,w,c
  4966   001B28  6E0C               	movwf	plot1@add^0,c
  4967   001B2A  5002               	movf	(?___awdiv+1)^0,w,c
  4968   001B2C  200B               	addwfc	(??_plot1+1)^0,w,c
  4969   001B2E  6E0D               	movwf	(plot1@add+1)^0,c
  4970                           
  4971                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  4972   001B30  500D               	movf	(plot1@add+1)^0,w,c
  4973   001B32  6E05               	movwf	d2command@d2^0,c
  4974   001B34  0E24               	movlw	36
  4975   001B36  6E06               	movwf	d2command@cmd^0,c
  4976   001B38  500C               	movf	plot1@add^0,w,c
  4977   001B3A  EC29  F010         	call	_d2command
  4978                           
  4979                           ;afficheur.c: 397: switch(x%6)
  4980   001B3E  D018               	goto	i2l4306
  4981   001B40                     i2l4292:
  4982   001B40  0EFD               	movlw	253
  4983   001B42  EC9F  F011         	call	_command
  4984   001B46  0012               	return	
  4985   001B48                     i2l4294:
  4986   001B48  0EFC               	movlw	252
  4987   001B4A  EC9F  F011         	call	_command
  4988   001B4E  0012               	return	
  4989   001B50                     i2l4296:
  4990   001B50  0EFB               	movlw	251
  4991   001B52  EC9F  F011         	call	_command
  4992   001B56  0012               	return	
  4993   001B58                     i2l4298:
  4994   001B58  0EFA               	movlw	250
  4995   001B5A  EC9F  F011         	call	_command
  4996   001B5E  0012               	return	
  4997   001B60                     i2l4300:
  4998   001B60  0EF9               	movlw	249
  4999   001B62  EC9F  F011         	call	_command
  5000   001B66  0012               	return	
  5001   001B68                     i2l4302:
  5002   001B68  0EF8               	movlw	248
  5003   001B6A  EC9F  F011         	call	_command
  5004   001B6E  0012               	return	
  5005   001B70                     i2l4306:
  5006   001B70  C00E  F001         	movff	plot1@x,___awmod@dividend
  5007   001B74  6A02               	clrf	(___awmod@dividend+1)^0,c
  5008   001B76  0E00               	movlw	0
  5009   001B78  6E04               	movwf	(___awmod@divisor+1)^0,c
  5010   001B7A  0E06               	movlw	6
  5011   001B7C  6E03               	movwf	___awmod@divisor^0,c
  5012   001B7E  EC45  F00F         	call	___awmod	;wreg free
  5013                           
  5014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5015                           ; Switch size 1, requested type "simple"
  5016                           ; Number of cases is 1, Range of values is 0 to 0
  5017                           ; switch strategies available:
  5018                           ; Name         Instructions Cycles
  5019                           ; simple_byte            4     3 (average)
  5020                           ;	Chosen strategy is simple_byte
  5021   001B82  5002               	movf	(?___awmod+1)^0,w,c
  5022   001B84  0A00               	xorlw	0	; case 0
  5023   001B86  A4D8               	btfss	status,2,c
  5024   001B88  0012               	return	
  5025                           
  5026                           ; Switch size 1, requested type "simple"
  5027                           ; Number of cases is 6, Range of values is 0 to 5
  5028                           ; switch strategies available:
  5029                           ; Name         Instructions Cycles
  5030                           ; simple_byte           19    10 (average)
  5031                           ;	Chosen strategy is simple_byte
  5032   001B8A  5001               	movf	?___awmod^0,w,c
  5033   001B8C  0A00               	xorlw	0	; case 0
  5034   001B8E  B4D8               	btfsc	status,2,c
  5035   001B90  D7D7               	goto	i2l4292
  5036   001B92  0A01               	xorlw	1	; case 1
  5037   001B94  B4D8               	btfsc	status,2,c
  5038   001B96  D7D8               	goto	i2l4294
  5039   001B98  0A03               	xorlw	3	; case 2
  5040   001B9A  B4D8               	btfsc	status,2,c
  5041   001B9C  D7D9               	goto	i2l4296
  5042   001B9E  0A01               	xorlw	1	; case 3
  5043   001BA0  B4D8               	btfsc	status,2,c
  5044   001BA2  D7DA               	goto	i2l4298
  5045   001BA4  0A07               	xorlw	7	; case 4
  5046   001BA6  B4D8               	btfsc	status,2,c
  5047   001BA8  D7DB               	goto	i2l4300
  5048   001BAA  0A01               	xorlw	1	; case 5
  5049   001BAC  A4D8               	btfss	status,2,c
  5050   001BAE  0012               	return	
  5051   001BB0  D7DB               	goto	i2l4302
  5052   001BB2                     __end_of_plot1:
  5053                           	callstack 0
  5054                           
  5055 ;; *************** function _command *****************
  5056 ;; Defined at:
  5057 ;;		line 90 in file "afficheur.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  cmd             1    wreg     unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  cmd             1    4[COMRAM] unsigned char 
  5062 ;;  res             1    0        unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      unsigned char 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;Total ram usage:        1 bytes
  5077 ;; Hardware stack levels used: 1
  5078 ;; Hardware stack levels required when called: 2
  5079 ;; This function calls:
  5080 ;;		_delai_us_char
  5081 ;;		_wait_status_ok
  5082 ;;		_write_c_aff
  5083 ;; This function is called by:
  5084 ;;		_initialisation_afficheur
  5085 ;;		_plot1
  5086 ;;		_plot0
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text23
  5091   00233E                     __ptext23:
  5092                           	callstack 0
  5093   00233E                     _command:
  5094                           	callstack 24
  5095                           
  5096                           ;incstack = 0
  5097                           ;command@cmd stored from wreg
  5098   00233E  6E05               	movwf	command@cmd^0,c
  5099                           
  5100                           ;afficheur.c: 96: if(wait_status_ok()==1)
  5101   002340  EC00  F010         	call	_wait_status_ok	;wreg free
  5102   002344  06E8               	decf	wreg,f,c
  5103   002346  A4D8               	btfss	status,2,c
  5104   002348  0012               	return	
  5105                           
  5106                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  5107   00234A  0E0C               	movlw	12
  5108   00234C  EC71  F011         	call	_delai_us_char
  5109                           
  5110                           ;afficheur.c: 99: write_c_aff(cmd);
  5111   002350  5005               	movf	command@cmd^0,w,c
  5112   002352  ECB9  F011         	call	_write_c_aff
  5113   002356  0012               	return		;funcret
  5114   002358                     __end_of_command:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function ___awmod *****************
  5118 ;; Defined at:
  5119 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  dividend        2    0[COMRAM] int 
  5122 ;;  divisor         2    2[COMRAM] int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  sign            1    5[COMRAM] unsigned char 
  5125 ;;  counter         1    4[COMRAM] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2    0[COMRAM] int 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5135 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;Total ram usage:        6 bytes
  5140 ;; Hardware stack levels used: 1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_plot1
  5145 ;;		_plot0
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text24
  5150   001E8A                     __ptext24:
  5151                           	callstack 0
  5152   001E8A                     ___awmod:
  5153                           	callstack 26
  5154                           
  5155                           ;incstack = 0
  5156   001E8A  0E00               	movlw	0
  5157   001E8C  6E06               	movwf	___awmod@sign^0,c
  5158   001E8E  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5159   001E90  D006               	goto	i2l4224
  5160   001E92  6C01               	negf	___awmod@dividend^0,c
  5161   001E94  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5162   001E96  B0D8               	btfsc	status,0,c
  5163   001E98  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5164   001E9A  0E01               	movlw	1
  5165   001E9C  6E06               	movwf	___awmod@sign^0,c
  5166   001E9E                     i2l4224:
  5167   001E9E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5168   001EA0  D004               	goto	i2l4228
  5169   001EA2  6C03               	negf	___awmod@divisor^0,c
  5170   001EA4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5171   001EA6  B0D8               	btfsc	status,0,c
  5172   001EA8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5173   001EAA                     i2l4228:
  5174   001EAA  5003               	movf	___awmod@divisor^0,w,c
  5175   001EAC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5176   001EAE  B4D8               	btfsc	status,2,c
  5177   001EB0  D018               	goto	i2l4244
  5178   001EB2  0E01               	movlw	1
  5179   001EB4  6E05               	movwf	___awmod@counter^0,c
  5180   001EB6  D004               	goto	i2l4234
  5181   001EB8                     i2l4232:
  5182   001EB8  90D8               	bcf	status,0,c
  5183   001EBA  3603               	rlcf	___awmod@divisor^0,f,c
  5184   001EBC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5185   001EBE  2A05               	incf	___awmod@counter^0,f,c
  5186   001EC0                     i2l4234:
  5187   001EC0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5188   001EC2  D7FA               	goto	i2l4232
  5189   001EC4                     i2u221_40:
  5190   001EC4  5003               	movf	___awmod@divisor^0,w,c
  5191   001EC6  5C01               	subwf	___awmod@dividend^0,w,c
  5192   001EC8  5004               	movf	(___awmod@divisor+1)^0,w,c
  5193   001ECA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5194   001ECC  A0D8               	btfss	status,0,c
  5195   001ECE  D004               	goto	i2l4240
  5196   001ED0  5003               	movf	___awmod@divisor^0,w,c
  5197   001ED2  5E01               	subwf	___awmod@dividend^0,f,c
  5198   001ED4  5004               	movf	(___awmod@divisor+1)^0,w,c
  5199   001ED6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5200   001ED8                     i2l4240:
  5201   001ED8  90D8               	bcf	status,0,c
  5202   001EDA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5203   001EDC  3203               	rrcf	___awmod@divisor^0,f,c
  5204   001EDE  2E05               	decfsz	___awmod@counter^0,f,c
  5205   001EE0  D7F1               	goto	i2u221_40
  5206   001EE2                     i2l4244:
  5207   001EE2  5006               	movf	___awmod@sign^0,w,c
  5208   001EE4  B4D8               	btfsc	status,2,c
  5209   001EE6  D004               	goto	i2l4248
  5210   001EE8  6C01               	negf	___awmod@dividend^0,c
  5211   001EEA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5212   001EEC  B0D8               	btfsc	status,0,c
  5213   001EEE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5214   001EF0                     i2l4248:
  5215   001EF0  C001  F001         	movff	___awmod@dividend,?___awmod
  5216   001EF4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5217   001EF8  0012               	return		;funcret
  5218   001EFA                     __end_of___awmod:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function _draw_hex8 *****************
  5222 ;; Defined at:
  5223 ;;		line 252 in file "afficheur.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  octet           1    wreg     unsigned char 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  octet           1    7[COMRAM] unsigned char 
  5228 ;;  c               1    8[COMRAM] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      void 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;Total ram usage:        2 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; Hardware stack levels required when called: 3
  5245 ;; This function calls:
  5246 ;;		_d1command
  5247 ;; This function is called by:
  5248 ;;		_tache1
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text25
  5253   001EFA                     __ptext25:
  5254                           	callstack 0
  5255   001EFA                     _draw_hex8:
  5256                           	callstack 24
  5257                           
  5258                           ;incstack = 0
  5259                           ;draw_hex8@octet stored from wreg
  5260   001EFA  6E08               	movwf	draw_hex8@octet^0,c
  5261                           
  5262                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5263   001EFC  3808               	swapf	draw_hex8@octet^0,w,c
  5264   001EFE  0B0F               	andlw	15
  5265   001F00  6E09               	movwf	draw_hex8@c^0,c
  5266                           
  5267                           ;afficheur.c: 257: if (c>9)
  5268   001F02  0E09               	movlw	9
  5269   001F04  6409               	cpfsgt	draw_hex8@c^0,c
  5270   001F06  D003               	goto	i2l4450
  5271                           
  5272                           ;afficheur.c: 258: c=c+0x17;
  5273   001F08  5009               	movf	draw_hex8@c^0,w,c
  5274   001F0A  0F17               	addlw	23
  5275   001F0C  D002               	goto	L5
  5276   001F0E                     i2l4450:
  5277                           
  5278                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5279   001F0E  5009               	movf	draw_hex8@c^0,w,c
  5280   001F10  0F10               	addlw	16
  5281   001F12                     L5:
  5282   001F12  6E09               	movwf	draw_hex8@c^0,c
  5283   001F14  D001               	goto	i2l4452
  5284   001F16                     i2l1331:
  5285                           
  5286                           ;afficheur.c: 262: __nop();
  5287   001F16  F000               	nop	
  5288   001F18                     i2l4452:
  5289   001F18  0EC0               	movlw	192
  5290   001F1A  6E05               	movwf	d1command@cmd^0,c
  5291   001F1C  5009               	movf	draw_hex8@c^0,w,c
  5292   001F1E  EC9C  F010         	call	_d1command
  5293   001F22  0900               	iorlw	0
  5294   001F24  B4D8               	btfsc	status,2,c
  5295   001F26  D7F7               	goto	i2l1331
  5296                           
  5297                           ;afficheur.c: 264: c=(octet&0x0F);
  5298   001F28  5008               	movf	draw_hex8@octet^0,w,c
  5299   001F2A  0B0F               	andlw	15
  5300   001F2C  6E09               	movwf	draw_hex8@c^0,c
  5301                           
  5302                           ;afficheur.c: 265: if (c>9)
  5303   001F2E  0E09               	movlw	9
  5304   001F30  6409               	cpfsgt	draw_hex8@c^0,c
  5305   001F32  D003               	goto	i2l4458
  5306                           
  5307                           ;afficheur.c: 266: c=c+0x17;
  5308   001F34  5009               	movf	draw_hex8@c^0,w,c
  5309   001F36  0F17               	addlw	23
  5310   001F38  D002               	goto	L6
  5311   001F3A                     i2l4458:
  5312                           
  5313                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5314   001F3A  5009               	movf	draw_hex8@c^0,w,c
  5315   001F3C  0F10               	addlw	16
  5316   001F3E                     L6:
  5317   001F3E  6E09               	movwf	draw_hex8@c^0,c
  5318   001F40  D001               	goto	i2l4460
  5319   001F42                     i2l1336:
  5320                           
  5321                           ;afficheur.c: 270: __nop();
  5322   001F42  F000               	nop	
  5323   001F44                     i2l4460:
  5324   001F44  0EC0               	movlw	192
  5325   001F46  6E05               	movwf	d1command@cmd^0,c
  5326   001F48  5009               	movf	draw_hex8@c^0,w,c
  5327   001F4A  EC9C  F010         	call	_d1command
  5328   001F4E  0900               	iorlw	0
  5329   001F50  A4D8               	btfss	status,2,c
  5330   001F52  0012               	return	
  5331   001F54  D7F6               	goto	i2l1336
  5332   001F56                     __end_of_draw_hex8:
  5333                           	callstack 0
  5334                           
  5335 ;; *************** function _draw_dec8 *****************
  5336 ;; Defined at:
  5337 ;;		line 274 in file "afficheur.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;  octet           1    wreg     unsigned char 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  octet           1   10[COMRAM] unsigned char 
  5342 ;;  c               1   13[COMRAM] unsigned char 
  5343 ;;  dix             1   12[COMRAM] unsigned char 
  5344 ;;  cent            1   11[COMRAM] unsigned char 
  5345 ;;  unit            1    9[COMRAM] unsigned char 
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;Total ram usage:        6 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; Hardware stack levels required when called: 3
  5362 ;; This function calls:
  5363 ;;		___awdiv
  5364 ;;		_d1command
  5365 ;; This function is called by:
  5366 ;;		_tache1
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text26
  5371   001C54                     __ptext26:
  5372                           	callstack 0
  5373   001C54                     _draw_dec8:
  5374                           	callstack 24
  5375                           
  5376                           ;incstack = 0
  5377                           ;draw_dec8@octet stored from wreg
  5378   001C54  6E0B               	movwf	draw_dec8@octet^0,c
  5379                           
  5380                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5381   001C56  C00B  F001         	movff	draw_dec8@octet,___awdiv@dividend
  5382   001C5A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5383   001C5C  0E00               	movlw	0
  5384   001C5E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5385   001C60  0E64               	movlw	100
  5386   001C62  6E03               	movwf	___awdiv@divisor^0,c
  5387   001C64  EC03  F00F         	call	___awdiv	;wreg free
  5388   001C68  5001               	movf	?___awdiv^0,w,c
  5389   001C6A  6E0C               	movwf	draw_dec8@cent^0,c
  5390                           
  5391                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5392   001C6C  500C               	movf	draw_dec8@cent^0,w,c
  5393   001C6E  0D9C               	mullw	156
  5394   001C70  50F3               	movf	243,w,c
  5395   001C72  240B               	addwf	draw_dec8@octet^0,w,c
  5396   001C74  6E0D               	movwf	draw_dec8@dix^0,c
  5397                           
  5398                           ;afficheur.c: 279: dix = dix/10;
  5399   001C76  C00D  F001         	movff	draw_dec8@dix,___awdiv@dividend
  5400   001C7A  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5401   001C7C  0E00               	movlw	0
  5402   001C7E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5403   001C80  0E0A               	movlw	10
  5404   001C82  6E03               	movwf	___awdiv@divisor^0,c
  5405   001C84  EC03  F00F         	call	___awdiv	;wreg free
  5406   001C88  5001               	movf	?___awdiv^0,w,c
  5407   001C8A  6E0D               	movwf	draw_dec8@dix^0,c
  5408                           
  5409                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5410   001C8C  500C               	movf	draw_dec8@cent^0,w,c
  5411   001C8E  0D9C               	mullw	156
  5412   001C90  CFF3 F009          	movff	prodl,??_draw_dec8
  5413   001C94  500D               	movf	draw_dec8@dix^0,w,c
  5414   001C96  0DF6               	mullw	246
  5415   001C98  50F3               	movf	243,w,c
  5416   001C9A  2409               	addwf	??_draw_dec8^0,w,c
  5417   001C9C  240B               	addwf	draw_dec8@octet^0,w,c
  5418   001C9E  6E0A               	movwf	draw_dec8@unit^0,c
  5419                           
  5420                           ;afficheur.c: 282: c=cent+0x10;
  5421   001CA0  500C               	movf	draw_dec8@cent^0,w,c
  5422   001CA2  0F10               	addlw	16
  5423   001CA4  6E0E               	movwf	draw_dec8@c^0,c
  5424                           
  5425                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5426   001CA6  D001               	goto	i2l4400
  5427   001CA8                     i2l1342:
  5428                           
  5429                           ;afficheur.c: 284: __nop();
  5430   001CA8  F000               	nop	
  5431   001CAA                     i2l4400:
  5432   001CAA  0EC0               	movlw	192
  5433   001CAC  6E05               	movwf	d1command@cmd^0,c
  5434   001CAE  500E               	movf	draw_dec8@c^0,w,c
  5435   001CB0  EC9C  F010         	call	_d1command
  5436   001CB4  0900               	iorlw	0
  5437   001CB6  B4D8               	btfsc	status,2,c
  5438   001CB8  D7F7               	goto	i2l1342
  5439                           
  5440                           ;afficheur.c: 286: c=dix+0x10;
  5441   001CBA  500D               	movf	draw_dec8@dix^0,w,c
  5442   001CBC  0F10               	addlw	16
  5443   001CBE  6E0E               	movwf	draw_dec8@c^0,c
  5444                           
  5445                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5446   001CC0  D001               	goto	i2l4404
  5447   001CC2                     i2l1345:
  5448                           
  5449                           ;afficheur.c: 288: __nop();
  5450   001CC2  F000               	nop	
  5451   001CC4                     i2l4404:
  5452   001CC4  0EC0               	movlw	192
  5453   001CC6  6E05               	movwf	d1command@cmd^0,c
  5454   001CC8  500E               	movf	draw_dec8@c^0,w,c
  5455   001CCA  EC9C  F010         	call	_d1command
  5456   001CCE  0900               	iorlw	0
  5457   001CD0  B4D8               	btfsc	status,2,c
  5458   001CD2  D7F7               	goto	i2l1345
  5459                           
  5460                           ;afficheur.c: 290: c=unit+0x10;
  5461   001CD4  500A               	movf	draw_dec8@unit^0,w,c
  5462   001CD6  0F10               	addlw	16
  5463   001CD8  6E0E               	movwf	draw_dec8@c^0,c
  5464                           
  5465                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5466   001CDA  D001               	goto	i2l4408
  5467   001CDC                     i2l1348:
  5468                           
  5469                           ;afficheur.c: 292: __nop();
  5470   001CDC  F000               	nop	
  5471   001CDE                     i2l4408:
  5472   001CDE  0EC0               	movlw	192
  5473   001CE0  6E05               	movwf	d1command@cmd^0,c
  5474   001CE2  500E               	movf	draw_dec8@c^0,w,c
  5475   001CE4  EC9C  F010         	call	_d1command
  5476   001CE8  0900               	iorlw	0
  5477   001CEA  A4D8               	btfss	status,2,c
  5478   001CEC  0012               	return	
  5479   001CEE  D7F6               	goto	i2l1348
  5480   001CF0                     __end_of_draw_dec8:
  5481                           	callstack 0
  5482                           
  5483 ;; *************** function ___awdiv *****************
  5484 ;; Defined at:
  5485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  dividend        2    0[COMRAM] int 
  5488 ;;  divisor         2    2[COMRAM] int 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  quotient        2    6[COMRAM] int 
  5491 ;;  sign            1    5[COMRAM] unsigned char 
  5492 ;;  counter         1    4[COMRAM] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  2    0[COMRAM] int 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;Total ram usage:        8 bytes
  5507 ;; Hardware stack levels used: 1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_draw_dec8
  5512 ;;		_plot1
  5513 ;;		_plot0
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text27
  5518   001E06                     __ptext27:
  5519                           	callstack 0
  5520   001E06                     ___awdiv:
  5521                           	callstack 26
  5522                           
  5523                           ;incstack = 0
  5524   001E06  0E00               	movlw	0
  5525   001E08  6E06               	movwf	___awdiv@sign^0,c
  5526   001E0A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5527   001E0C  D006               	goto	i2l4180
  5528   001E0E  6C03               	negf	___awdiv@divisor^0,c
  5529   001E10  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5530   001E12  B0D8               	btfsc	status,0,c
  5531   001E14  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5532   001E16  0E01               	movlw	1
  5533   001E18  6E06               	movwf	___awdiv@sign^0,c
  5534   001E1A                     i2l4180:
  5535   001E1A  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5536   001E1C  D006               	goto	i2l4186
  5537   001E1E  6C01               	negf	___awdiv@dividend^0,c
  5538   001E20  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5539   001E22  B0D8               	btfsc	status,0,c
  5540   001E24  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5541   001E26  0E01               	movlw	1
  5542   001E28  1A06               	xorwf	___awdiv@sign^0,f,c
  5543   001E2A                     i2l4186:
  5544   001E2A  0E00               	movlw	0
  5545   001E2C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5546   001E2E  0E00               	movlw	0
  5547   001E30  6E07               	movwf	___awdiv@quotient^0,c
  5548   001E32  5003               	movf	___awdiv@divisor^0,w,c
  5549   001E34  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5550   001E36  B4D8               	btfsc	status,2,c
  5551   001E38  D01C               	goto	i2l4208
  5552   001E3A  0E01               	movlw	1
  5553   001E3C  6E05               	movwf	___awdiv@counter^0,c
  5554   001E3E  D004               	goto	i2l4194
  5555   001E40                     i2l4192:
  5556   001E40  90D8               	bcf	status,0,c
  5557   001E42  3603               	rlcf	___awdiv@divisor^0,f,c
  5558   001E44  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5559   001E46  2A05               	incf	___awdiv@counter^0,f,c
  5560   001E48                     i2l4194:
  5561   001E48  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5562   001E4A  D7FA               	goto	i2l4192
  5563   001E4C                     i2u215_40:
  5564   001E4C  90D8               	bcf	status,0,c
  5565   001E4E  3607               	rlcf	___awdiv@quotient^0,f,c
  5566   001E50  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5567   001E52  5003               	movf	___awdiv@divisor^0,w,c
  5568   001E54  5C01               	subwf	___awdiv@dividend^0,w,c
  5569   001E56  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5570   001E58  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5571   001E5A  A0D8               	btfss	status,0,c
  5572   001E5C  D005               	goto	i2l4204
  5573   001E5E  5003               	movf	___awdiv@divisor^0,w,c
  5574   001E60  5E01               	subwf	___awdiv@dividend^0,f,c
  5575   001E62  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5576   001E64  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5577   001E66  8007               	bsf	___awdiv@quotient^0,0,c
  5578   001E68                     i2l4204:
  5579   001E68  90D8               	bcf	status,0,c
  5580   001E6A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5581   001E6C  3203               	rrcf	___awdiv@divisor^0,f,c
  5582   001E6E  2E05               	decfsz	___awdiv@counter^0,f,c
  5583   001E70  D7ED               	goto	i2u215_40
  5584   001E72                     i2l4208:
  5585   001E72  5006               	movf	___awdiv@sign^0,w,c
  5586   001E74  B4D8               	btfsc	status,2,c
  5587   001E76  D004               	goto	i2l4212
  5588   001E78  6C07               	negf	___awdiv@quotient^0,c
  5589   001E7A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5590   001E7C  B0D8               	btfsc	status,0,c
  5591   001E7E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5592   001E80                     i2l4212:
  5593   001E80  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5594   001E84  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5595   001E88  0012               	return		;funcret
  5596   001E8A                     __end_of___awdiv:
  5597                           	callstack 0
  5598                           
  5599 ;; *************** function _clear_text *****************
  5600 ;; Defined at:
  5601 ;;		line 307 in file "afficheur.c"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;		None
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  add             2    8[COMRAM] unsigned int 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, status,2, status,0, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;Total ram usage:        2 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; Hardware stack levels required when called: 3
  5622 ;; This function calls:
  5623 ;;		_d1command
  5624 ;;		_d2command
  5625 ;; This function is called by:
  5626 ;;		_tache1
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text28
  5631   002212                     __ptext28:
  5632                           	callstack 0
  5633   002212                     _clear_text:
  5634                           	callstack 24
  5635                           
  5636                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5637                           
  5638                           ;incstack = 0
  5639   002212  0E00               	movlw	0
  5640   002214  6E05               	movwf	d2command@d2^0,c
  5641   002216  0E24               	movlw	36
  5642   002218  6E06               	movwf	d2command@cmd^0,c
  5643   00221A  0E00               	movlw	0
  5644   00221C  EC29  F010         	call	_d2command
  5645                           
  5646                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5647   002220  0E00               	movlw	0
  5648   002222  6E0A               	movwf	(clear_text@add+1)^0,c
  5649   002224  0E00               	movlw	0
  5650   002226  6E09               	movwf	clear_text@add^0,c
  5651   002228                     i2l4354:
  5652                           
  5653                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5654   002228  0EC0               	movlw	192
  5655   00222A  6E05               	movwf	d1command@cmd^0,c
  5656   00222C  0E00               	movlw	0
  5657   00222E  EC9C  F010         	call	_d1command
  5658   002232  4A09               	infsnz	clear_text@add^0,f,c
  5659   002234  2A0A               	incf	(clear_text@add+1)^0,f,c
  5660   002236  0E80               	movlw	128
  5661   002238  180A               	xorwf	(clear_text@add+1)^0,w,c
  5662   00223A  1009               	iorwf	clear_text@add^0,w,c
  5663   00223C  B4D8               	btfsc	status,2,c
  5664   00223E  0012               	return	
  5665   002240  D7F3               	goto	i2l4354
  5666   002242                     __end_of_clear_text:
  5667                           	callstack 0
  5668                           
  5669 ;; *************** function _clear_line *****************
  5670 ;; Defined at:
  5671 ;;		line 318 in file "afficheur.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;  line            1    wreg     unsigned char 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  line            1   14[COMRAM] unsigned char 
  5676 ;;  column          1   15[COMRAM] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  1    wreg      void 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5687 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;Total ram usage:        2 bytes
  5691 ;; Hardware stack levels used: 1
  5692 ;; Hardware stack levels required when called: 4
  5693 ;; This function calls:
  5694 ;;		_draw_char
  5695 ;;		_goto_lico
  5696 ;; This function is called by:
  5697 ;;		_tache1
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text29
  5702   002304                     __ptext29:
  5703                           	callstack 0
  5704   002304                     _clear_line:
  5705                           	callstack 23
  5706                           
  5707                           ;incstack = 0
  5708                           ;clear_line@line stored from wreg
  5709   002304  6E0F               	movwf	clear_line@line^0,c
  5710                           
  5711                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5712   002306  0E00               	movlw	0
  5713   002308  6E10               	movwf	clear_line@column^0,c
  5714   00230A                     i2l4472:
  5715                           
  5716                           ;afficheur.c: 321: goto_lico(line, column);
  5717   00230A  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5718   00230E  500F               	movf	clear_line@line^0,w,c
  5719   002310  ECAB  F00F         	call	_goto_lico
  5720                           
  5721                           ;afficheur.c: 322: draw_char(' ');
  5722   002314  0E20               	movlw	32
  5723   002316  ECF0  F010         	call	_draw_char
  5724   00231A  2A10               	incf	clear_line@column^0,f,c
  5725   00231C  0E27               	movlw	39
  5726   00231E  6410               	cpfsgt	clear_line@column^0,c
  5727   002320  D7F4               	goto	i2l4472
  5728   002322  0012               	return	
  5729   002324                     __end_of_clear_line:
  5730                           	callstack 0
  5731                           
  5732 ;; *************** function _draw_char *****************
  5733 ;; Defined at:
  5734 ;;		line 228 in file "afficheur.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  dccar           1    wreg     unsigned char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  dccar           1    7[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  1    wreg      void 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;Total ram usage:        1 bytes
  5753 ;; Hardware stack levels used: 1
  5754 ;; Hardware stack levels required when called: 3
  5755 ;; This function calls:
  5756 ;;		_d1command
  5757 ;; This function is called by:
  5758 ;;		_tache1
  5759 ;;		_clear_line
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           	psect	text30
  5764   0021E0                     __ptext30:
  5765                           	callstack 0
  5766   0021E0                     _draw_char:
  5767                           	callstack 24
  5768                           
  5769                           ;incstack = 0
  5770                           ;draw_char@dccar stored from wreg
  5771   0021E0  6E08               	movwf	draw_char@dccar^0,c
  5772                           
  5773                           ;afficheur.c: 230: if (dccar<32)
  5774   0021E2  0E20               	movlw	32
  5775   0021E4  6008               	cpfslt	draw_char@dccar^0,c
  5776   0021E6  D002               	goto	i2l4270
  5777                           
  5778                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5779   0021E8  0E3F               	movlw	63
  5780   0021EA  6E08               	movwf	draw_char@dccar^0,c
  5781   0021EC                     i2l4270:
  5782                           
  5783                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5784   0021EC  0E9F               	movlw	159
  5785   0021EE  6408               	cpfsgt	draw_char@dccar^0,c
  5786   0021F0  D002               	goto	i2l4274
  5787                           
  5788                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5789   0021F2  0E3F               	movlw	63
  5790   0021F4  6E08               	movwf	draw_char@dccar^0,c
  5791   0021F6                     i2l4274:
  5792                           
  5793                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5794   0021F6  5008               	movf	draw_char@dccar^0,w,c
  5795   0021F8  0FE0               	addlw	224
  5796   0021FA  6E08               	movwf	draw_char@dccar^0,c
  5797                           
  5798                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5799   0021FC  D001               	goto	i2l4276
  5800   0021FE                     i2l1312:
  5801   0021FE  F000               	nop	
  5802   002200                     i2l4276:
  5803   002200  0EC0               	movlw	192
  5804   002202  6E05               	movwf	d1command@cmd^0,c
  5805   002204  5008               	movf	draw_char@dccar^0,w,c
  5806   002206  EC9C  F010         	call	_d1command
  5807   00220A  0900               	iorlw	0
  5808   00220C  A4D8               	btfss	status,2,c
  5809   00220E  0012               	return	
  5810   002210  D7F6               	goto	i2l1312
  5811   002212                     __end_of_draw_char:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function _clear_graphics *****************
  5815 ;; Defined at:
  5816 ;;		line 368 in file "afficheur.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;		None
  5819 ;; Auto vars:     Size  Location     Type
  5820 ;;  add             2    8[COMRAM] unsigned int 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  1    wreg      void 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;Total ram usage:        2 bytes
  5835 ;; Hardware stack levels used: 1
  5836 ;; Hardware stack levels required when called: 3
  5837 ;; This function calls:
  5838 ;;		_d1command
  5839 ;;		_d2command
  5840 ;; This function is called by:
  5841 ;;		_tache1
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text31
  5846   002242                     __ptext31:
  5847                           	callstack 0
  5848   002242                     _clear_graphics:
  5849                           	callstack 24
  5850                           
  5851                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5852                           
  5853                           ;incstack = 0
  5854   002242  0E80               	movlw	128
  5855   002244  6E05               	movwf	d2command@d2^0,c
  5856   002246  0E24               	movlw	36
  5857   002248  6E06               	movwf	d2command@cmd^0,c
  5858   00224A  0E00               	movlw	0
  5859   00224C  EC29  F010         	call	_d2command
  5860                           
  5861                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5862   002250  0E80               	movlw	128
  5863   002252  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5864   002254  0E00               	movlw	0
  5865   002256  6E09               	movwf	clear_graphics@add^0,c
  5866   002258                     i2l4368:
  5867                           
  5868                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5869   002258  0EC0               	movlw	192
  5870   00225A  6E05               	movwf	d1command@cmd^0,c
  5871   00225C  0E00               	movlw	0
  5872   00225E  EC9C  F010         	call	_d1command
  5873   002262  4A09               	infsnz	clear_graphics@add^0,f,c
  5874   002264  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5875   002266  0EF8               	movlw	248
  5876   002268  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5877   00226A  1009               	iorwf	clear_graphics@add^0,w,c
  5878   00226C  B4D8               	btfsc	status,2,c
  5879   00226E  0012               	return	
  5880   002270  D7F3               	goto	i2l4368
  5881   002272                     __end_of_clear_graphics:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function _charger *****************
  5885 ;; Defined at:
  5886 ;;		line 432 in file "afficheur.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;		None
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;		None
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  1    wreg      void 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;Total ram usage:        0 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 4
  5907 ;; This function calls:
  5908 ;;		_draw_string
  5909 ;;		_goto_lico
  5910 ;; This function is called by:
  5911 ;;		_tache1
  5912 ;; This function uses a non-reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text32
  5916   0023D4                     __ptext32:
  5917                           	callstack 0
  5918   0023D4                     _charger:
  5919                           	callstack 23
  5920                           
  5921                           ;afficheur.c: 434: goto_lico(14,0);
  5922                           
  5923                           ;incstack = 0
  5924   0023D4  0E00               	movlw	0
  5925   0023D6  6E09               	movwf	goto_lico@colonne^0,c
  5926   0023D8  0E0E               	movlw	14
  5927   0023DA  ECAB  F00F         	call	_goto_lico
  5928                           
  5929                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5930   0023DE  0E01               	movlw	low STR_24
  5931   0023E0  6E08               	movwf	draw_string@tableau^0,c
  5932   0023E2  0E10               	movlw	high STR_24
  5933   0023E4  6E09               	movwf	(draw_string@tableau+1)^0,c
  5934   0023E6  EC78  F00E         	call	_draw_string	;wreg free
  5935   0023EA  0012               	return		;funcret
  5936   0023EC                     __end_of_charger:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function _goto_lico *****************
  5940 ;; Defined at:
  5941 ;;		line 295 in file "afficheur.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  ligne           1    wreg     unsigned char 
  5944 ;;  colonne         1    8[COMRAM] unsigned char 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  ligne           1   11[COMRAM] unsigned char 
  5947 ;;  adr             2   12[COMRAM] unsigned int 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  1    wreg      void 
  5950 ;; Registers used:
  5951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5957 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;Total ram usage:        6 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 3
  5964 ;; This function calls:
  5965 ;;		_d2command
  5966 ;; This function is called by:
  5967 ;;		_tache1
  5968 ;;		_clear_line
  5969 ;;		_charger
  5970 ;;		_vide
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text33
  5975   001F56                     __ptext33:
  5976                           	callstack 0
  5977   001F56                     _goto_lico:
  5978                           	callstack 23
  5979                           
  5980                           ;incstack = 0
  5981                           ;goto_lico@ligne stored from wreg
  5982   001F56  6E0C               	movwf	goto_lico@ligne^0,c
  5983                           
  5984                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  5985   001F58  0E7B               	movlw	123
  5986   001F5A  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5987   001F5C  0E00               	movlw	0
  5988   001F5E  6E0D               	movwf	goto_lico@adr^0,c
  5989                           
  5990                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  5991   001F60  0E0F               	movlw	15
  5992   001F62  640C               	cpfsgt	goto_lico@ligne^0,c
  5993   001F64  D002               	goto	i2l4258
  5994   001F66  0E00               	movlw	0
  5995   001F68  6E0C               	movwf	goto_lico@ligne^0,c
  5996   001F6A                     i2l4258:
  5997                           
  5998                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  5999   001F6A  0E27               	movlw	39
  6000   001F6C  6409               	cpfsgt	goto_lico@colonne^0,c
  6001   001F6E  D002               	goto	i2l4262
  6002   001F70  0E00               	movlw	0
  6003   001F72  6E09               	movwf	goto_lico@colonne^0,c
  6004   001F74                     i2l4262:
  6005                           
  6006                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  6007   001F74  500C               	movf	goto_lico@ligne^0,w,c
  6008   001F76  0D28               	mullw	40
  6009   001F78  CFF3 F00A          	movff	prodl,??_goto_lico
  6010   001F7C  CFF4 F00B          	movff	prodh,??_goto_lico+1
  6011   001F80  5009               	movf	goto_lico@colonne^0,w,c
  6012   001F82  260A               	addwf	??_goto_lico^0,f,c
  6013   001F84  0E00               	movlw	0
  6014   001F86  220B               	addwfc	(??_goto_lico+1)^0,f,c
  6015   001F88  500D               	movf	goto_lico@adr^0,w,c
  6016   001F8A  240A               	addwf	??_goto_lico^0,w,c
  6017   001F8C  6E0D               	movwf	goto_lico@adr^0,c
  6018   001F8E  500E               	movf	(goto_lico@adr+1)^0,w,c
  6019   001F90  200B               	addwfc	(??_goto_lico+1)^0,w,c
  6020   001F92  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6021                           
  6022                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  6023   001F94  D001               	goto	i2l4264
  6024   001F96                     i2l1356:
  6025                           
  6026                           ;afficheur.c: 304: __nop();
  6027   001F96  F000               	nop	
  6028   001F98                     i2l4264:
  6029   001F98  500E               	movf	(goto_lico@adr+1)^0,w,c
  6030   001F9A  6E05               	movwf	d2command@d2^0,c
  6031   001F9C  0E24               	movlw	36
  6032   001F9E  6E06               	movwf	d2command@cmd^0,c
  6033   001FA0  500D               	movf	goto_lico@adr^0,w,c
  6034   001FA2  EC29  F010         	call	_d2command
  6035   001FA6  0900               	iorlw	0
  6036   001FA8  A4D8               	btfss	status,2,c
  6037   001FAA  0012               	return	
  6038   001FAC  D7F4               	goto	i2l1356
  6039   001FAE                     __end_of_goto_lico:
  6040                           	callstack 0
  6041                           
  6042 ;; *************** function _d2command *****************
  6043 ;; Defined at:
  6044 ;;		line 128 in file "afficheur.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;  d1              1    wreg     unsigned char 
  6047 ;;  d2              1    4[COMRAM] unsigned char 
  6048 ;;  cmd             1    5[COMRAM] unsigned char 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  d1              1    6[COMRAM] unsigned char 
  6051 ;;  res             1    7[COMRAM] unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      unsigned char 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;Total ram usage:        4 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; Hardware stack levels required when called: 2
  6068 ;; This function calls:
  6069 ;;		_delai_us_char
  6070 ;;		_wait_status_ok
  6071 ;;		_write_c_aff
  6072 ;;		_write_d_aff
  6073 ;; This function is called by:
  6074 ;;		_initialisation_afficheur
  6075 ;;		_goto_lico
  6076 ;;		_clear_text
  6077 ;;		_clear_graphics
  6078 ;;		_plot1
  6079 ;;		_clear_cgram
  6080 ;;		_plot0
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text34
  6085   002052                     __ptext34:
  6086                           	callstack 0
  6087   002052                     _d2command:
  6088                           	callstack 23
  6089                           
  6090                           ;incstack = 0
  6091                           ;d2command@d1 stored from wreg
  6092   002052  6E07               	movwf	d2command@d1^0,c
  6093                           
  6094                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6095   002054  0E00               	movlw	0
  6096   002056  6E08               	movwf	d2command@res^0,c
  6097                           
  6098                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6099   002058  EC00  F010         	call	_wait_status_ok	;wreg free
  6100   00205C  06E8               	decf	wreg,f,c
  6101   00205E  A4D8               	btfss	status,2,c
  6102   002060  D01E               	goto	i2l4168
  6103                           
  6104                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6105   002062  0E0C               	movlw	12
  6106   002064  EC71  F011         	call	_delai_us_char
  6107                           
  6108                           ;afficheur.c: 137: write_d_aff(d1);
  6109   002068  5007               	movf	d2command@d1^0,w,c
  6110   00206A  ECAC  F011         	call	_write_d_aff
  6111                           
  6112                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6113   00206E  EC00  F010         	call	_wait_status_ok	;wreg free
  6114   002072  06E8               	decf	wreg,f,c
  6115   002074  A4D8               	btfss	status,2,c
  6116   002076  D013               	goto	i2l4168
  6117                           
  6118                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6119   002078  0E0C               	movlw	12
  6120   00207A  EC71  F011         	call	_delai_us_char
  6121                           
  6122                           ;afficheur.c: 141: write_d_aff(d2);
  6123   00207E  5005               	movf	d2command@d2^0,w,c
  6124   002080  ECAC  F011         	call	_write_d_aff
  6125                           
  6126                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6127   002084  EC00  F010         	call	_wait_status_ok	;wreg free
  6128   002088  06E8               	decf	wreg,f,c
  6129   00208A  A4D8               	btfss	status,2,c
  6130   00208C  D008               	goto	i2l4168
  6131                           
  6132                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6133   00208E  0E0C               	movlw	12
  6134   002090  EC71  F011         	call	_delai_us_char
  6135                           
  6136                           ;afficheur.c: 145: write_c_aff(cmd);
  6137   002094  5006               	movf	d2command@cmd^0,w,c
  6138   002096  ECB9  F011         	call	_write_c_aff
  6139                           
  6140                           ;afficheur.c: 147: res=1;
  6141   00209A  0E01               	movlw	1
  6142   00209C  6E08               	movwf	d2command@res^0,c
  6143   00209E                     i2l4168:
  6144                           
  6145                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6146   00209E  5008               	movf	d2command@res^0,w,c
  6147   0020A0  0012               	return		;funcret
  6148   0020A2                     __end_of_d2command:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _draw_string *****************
  6152 ;; Defined at:
  6153 ;;		line 242 in file "afficheur.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6156 ;;		 -> STR_25(14), STR_24(29), STR_23(4), STR_22(3), 
  6157 ;;		 -> STR_21(7), STR_20(5), STR_19(12), STR_18(12), 
  6158 ;;		 -> STR_17(6), STR_16(7), STR_15(9), STR_14(21), 
  6159 ;;		 -> STR_13(7), STR_12(10), STR_11(9), STR_10(6), 
  6160 ;;		 -> STR_9(13), STR_8(11), STR_7(7), STR_6(6), 
  6161 ;;		 -> STR_5(6), STR_4(3), STR_3(3), STR_2(3), 
  6162 ;;		 -> STR_1(8), RAM(3861), 
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        2 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 3
  6181 ;; This function calls:
  6182 ;;		_d1command
  6183 ;; This function is called by:
  6184 ;;		_tache1
  6185 ;;		_charger
  6186 ;;		_vide
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text35
  6191   001CF0                     __ptext35:
  6192                           	callstack 0
  6193   001CF0                     _draw_string:
  6194                           	callstack 23
  6195                           
  6196                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6197                           
  6198                           ;incstack = 0
  6199   001CF0  D01C               	goto	i2l4284
  6200   001CF2                     i2l1320:
  6201                           
  6202                           ;afficheur.c: 247: __nop();
  6203   001CF2  F000               	nop	
  6204   001CF4                     i2l4280:
  6205   001CF4  0EC0               	movlw	192
  6206   001CF6  6E05               	movwf	d1command@cmd^0,c
  6207   001CF8  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6208   001CFC  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6209   001D00  0E00               	movlw	low (__smallconst shr (0+16))
  6210   001D02  6EF8               	movwf	tblptru,c
  6211   001D04  0E0F               	movlw	(high __ramtop+-1)
  6212   001D06  64F7               	cpfsgt	tblptrh,c
  6213   001D08  D003               	bra	i2u230_47
  6214   001D0A  0008               	tblrd		*
  6215   001D0C  50F5               	movf	tablat,w,c
  6216   001D0E  D005               	bra	i2u230_40
  6217   001D10                     i2u230_47:
  6218   001D10  CFF6 FFE9          	movff	tblptrl,fsr0l
  6219   001D14  CFF7 FFEA          	movff	tblptrh,fsr0h
  6220   001D18  50EF               	movf	indf0,w,c
  6221   001D1A                     i2u230_40:
  6222   001D1A  0FE0               	addlw	224
  6223   001D1C  EC9C  F010         	call	_d1command
  6224   001D20  0900               	iorlw	0
  6225   001D22  B4D8               	btfsc	status,2,c
  6226   001D24  D7E6               	goto	i2l1320
  6227                           
  6228                           ;afficheur.c: 248: tableau++;
  6229   001D26  4A08               	infsnz	draw_string@tableau^0,f,c
  6230   001D28  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6231   001D2A                     i2l4284:
  6232   001D2A  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6233   001D2E  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6234   001D32  0E00               	movlw	low (__smallconst shr (0+16))
  6235   001D34  6EF8               	movwf	tblptru,c
  6236   001D36  0E0F               	movlw	(high __ramtop+-1)
  6237   001D38  64F7               	cpfsgt	tblptrh,c
  6238   001D3A  D003               	bra	i2u232_47
  6239   001D3C  0008               	tblrd		*
  6240   001D3E  50F5               	movf	tablat,w,c
  6241   001D40  D005               	bra	i2u232_40
  6242   001D42                     i2u232_47:
  6243   001D42  CFF6 FFE9          	movff	tblptrl,fsr0l
  6244   001D46  CFF7 FFEA          	movff	tblptrh,fsr0h
  6245   001D4A  50EF               	movf	indf0,w,c
  6246   001D4C                     i2u232_40:
  6247   001D4C  0900               	iorlw	0
  6248   001D4E  B4D8               	btfsc	status,2,c
  6249   001D50  0012               	return	
  6250   001D52  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6251   001D56  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6252   001D5A  0E00               	movlw	low (__smallconst shr (0+16))
  6253   001D5C  6EF8               	movwf	tblptru,c
  6254   001D5E  0E0F               	movlw	(high __ramtop+-1)
  6255   001D60  64F7               	cpfsgt	tblptrh,c
  6256   001D62  D003               	bra	i2u234_47
  6257   001D64  0008               	tblrd		*
  6258   001D66  50F5               	movf	tablat,w,c
  6259   001D68  D005               	bra	i2u234_40
  6260   001D6A                     i2u234_47:
  6261   001D6A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6262   001D6E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6263   001D72  50EF               	movf	indf0,w,c
  6264   001D74                     i2u234_40:
  6265   001D74  0900               	iorlw	0
  6266   001D76  B4D8               	btfsc	status,2,c
  6267   001D78  0012               	return	
  6268   001D7A  D7BC               	goto	i2l4280
  6269   001D7C                     __end_of_draw_string:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _d1command *****************
  6273 ;; Defined at:
  6274 ;;		line 106 in file "afficheur.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  d1              1    wreg     unsigned char 
  6277 ;;  cmd             1    4[COMRAM] unsigned char 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  d1              1    5[COMRAM] unsigned char 
  6280 ;;  res             1    6[COMRAM] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      unsigned char 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2, status,0, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6290 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;Total ram usage:        3 bytes
  6295 ;; Hardware stack levels used: 1
  6296 ;; Hardware stack levels required when called: 2
  6297 ;; This function calls:
  6298 ;;		_delai_us_char
  6299 ;;		_wait_status_ok
  6300 ;;		_write_c_aff
  6301 ;;		_write_d_aff
  6302 ;; This function is called by:
  6303 ;;		_initialisation_afficheur
  6304 ;;		_draw_char
  6305 ;;		_draw_string
  6306 ;;		_draw_hex8
  6307 ;;		_draw_dec8
  6308 ;;		_clear_text
  6309 ;;		_clear_graphics
  6310 ;;		_clear_cgram
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314                           	psect	text36
  6315   002138                     __ptext36:
  6316                           	callstack 0
  6317   002138                     _d1command:
  6318                           	callstack 23
  6319                           
  6320                           ;incstack = 0
  6321                           ;d1command@d1 stored from wreg
  6322   002138  6E06               	movwf	d1command@d1^0,c
  6323                           
  6324                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6325   00213A  0E00               	movlw	0
  6326   00213C  6E07               	movwf	d1command@res^0,c
  6327                           
  6328                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6329   00213E  EC00  F010         	call	_wait_status_ok	;wreg free
  6330   002142  06E8               	decf	wreg,f,c
  6331   002144  A4D8               	btfss	status,2,c
  6332   002146  D013               	goto	i2l4142
  6333                           
  6334                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6335   002148  0E0C               	movlw	12
  6336   00214A  EC71  F011         	call	_delai_us_char
  6337                           
  6338                           ;afficheur.c: 115: write_d_aff(d1);
  6339   00214E  5006               	movf	d1command@d1^0,w,c
  6340   002150  ECAC  F011         	call	_write_d_aff
  6341                           
  6342                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6343   002154  EC00  F010         	call	_wait_status_ok	;wreg free
  6344   002158  06E8               	decf	wreg,f,c
  6345   00215A  A4D8               	btfss	status,2,c
  6346   00215C  D008               	goto	i2l4142
  6347                           
  6348                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6349   00215E  0E0C               	movlw	12
  6350   002160  EC71  F011         	call	_delai_us_char
  6351                           
  6352                           ;afficheur.c: 119: write_c_aff(cmd);
  6353   002164  5005               	movf	d1command@cmd^0,w,c
  6354   002166  ECB9  F011         	call	_write_c_aff
  6355                           
  6356                           ;afficheur.c: 121: res=1;
  6357   00216A  0E01               	movlw	1
  6358   00216C  6E07               	movwf	d1command@res^0,c
  6359   00216E                     i2l4142:
  6360                           
  6361                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6362   00216E  5007               	movf	d1command@res^0,w,c
  6363   002170  0012               	return		;funcret
  6364   002172                     __end_of_d1command:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _write_d_aff *****************
  6368 ;; Defined at:
  6369 ;;		line 4 in file "afficheur.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  data            1    wreg     unsigned char 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  data            1    0[COMRAM] unsigned char 
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, status,2
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;Total ram usage:        1 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_d1command
  6393 ;;		_d2command
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text37
  6398   002358                     __ptext37:
  6399                           	callstack 0
  6400   002358                     _write_d_aff:
  6401                           	callstack 24
  6402                           
  6403                           ;incstack = 0
  6404                           ;write_d_aff@data stored from wreg
  6405   002358  6E01               	movwf	write_d_aff@data^0,c
  6406                           
  6407                           ;afficheur.c: 6: LATH=data;
  6408   00235A  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6409                           
  6410                           ;afficheur.c: 7: TRISH=0x00;
  6411   00235E  0E00               	movlw	0
  6412   002360  6E99               	movwf	153,c	;volatile
  6413                           
  6414                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6415   002362  9091               	bcf	145,0,c	;volatile
  6416                           
  6417                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6418   002364  9691               	bcf	145,3,c	;volatile
  6419                           
  6420                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6421   002366  9491               	bcf	145,2,c	;volatile
  6422                           
  6423                           ;afficheur.c: 11: __nop();
  6424   002368  F000               	nop	
  6425                           
  6426                           ;afficheur.c: 12: __nop();
  6427   00236A  F000               	nop	
  6428                           
  6429                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6430   00236C  8491               	bsf	145,2,c	;volatile
  6431                           
  6432                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6433   00236E  8691               	bsf	145,3,c	;volatile
  6434   002370  0012               	return		;funcret
  6435   002372                     __end_of_write_d_aff:
  6436                           	callstack 0
  6437                           
  6438 ;; *************** function _write_c_aff *****************
  6439 ;; Defined at:
  6440 ;;		line 17 in file "afficheur.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  command         1    wreg     unsigned char 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  command         1    0[COMRAM] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  1    wreg      void 
  6447 ;; Registers used:
  6448 ;;		wreg, status,2
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;Total ram usage:        1 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; This function calls:
  6461 ;;		Nothing
  6462 ;; This function is called by:
  6463 ;;		_command
  6464 ;;		_d1command
  6465 ;;		_d2command
  6466 ;; This function uses a non-reentrant model
  6467 ;;
  6468                           
  6469                           	psect	text38
  6470   002372                     __ptext38:
  6471                           	callstack 0
  6472   002372                     _write_c_aff:
  6473                           	callstack 24
  6474                           
  6475                           ;incstack = 0
  6476                           ;write_c_aff@command stored from wreg
  6477   002372  6E01               	movwf	write_c_aff@command^0,c
  6478                           
  6479                           ;afficheur.c: 19: LATH=command;
  6480   002374  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6481                           
  6482                           ;afficheur.c: 20: TRISH=0x00;
  6483   002378  0E00               	movlw	0
  6484   00237A  6E99               	movwf	153,c	;volatile
  6485                           
  6486                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6487   00237C  8091               	bsf	145,0,c	;volatile
  6488                           
  6489                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6490   00237E  9691               	bcf	145,3,c	;volatile
  6491                           
  6492                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6493   002380  9491               	bcf	145,2,c	;volatile
  6494                           
  6495                           ;afficheur.c: 24: __nop();
  6496   002382  F000               	nop	
  6497                           
  6498                           ;afficheur.c: 25: __nop();
  6499   002384  F000               	nop	
  6500                           
  6501                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6502   002386  8491               	bsf	145,2,c	;volatile
  6503                           
  6504                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6505   002388  8691               	bsf	145,3,c	;volatile
  6506   00238A  0012               	return		;funcret
  6507   00238C                     __end_of_write_c_aff:
  6508                           	callstack 0
  6509                           
  6510 ;; *************** function _wait_status_ok *****************
  6511 ;; Defined at:
  6512 ;;		line 53 in file "afficheur.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;		None
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  res             1    3[COMRAM] unsigned char 
  6517 ;;  status          1    2[COMRAM] unsigned char 
  6518 ;;  err             1    1[COMRAM] unsigned char 
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      unsigned char 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6529 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6531 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6532 ;;Total ram usage:        3 bytes
  6533 ;; Hardware stack levels used: 1
  6534 ;; Hardware stack levels required when called: 1
  6535 ;; This function calls:
  6536 ;;		_delai_us_char
  6537 ;; This function is called by:
  6538 ;;		_command
  6539 ;;		_d1command
  6540 ;;		_d2command
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text39
  6545   002000                     __ptext39:
  6546                           	callstack 0
  6547   002000                     _wait_status_ok:
  6548                           	callstack 23
  6549                           
  6550                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6551                           
  6552                           ;incstack = 0
  6553   002000  0E00               	movlw	0
  6554   002002  6E02               	movwf	wait_status_ok@err^0,c
  6555                           
  6556                           ;afficheur.c: 58: res=2;
  6557   002004  0E02               	movlw	2
  6558   002006  D01E               	goto	L7
  6559   002008                     i2l1270:
  6560                           
  6561                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6562   002008  6899               	setf	153,c	;volatile
  6563                           
  6564                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6565   00200A  8091               	bsf	145,0,c	;volatile
  6566                           
  6567                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6568   00200C  9691               	bcf	145,3,c	;volatile
  6569                           
  6570                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6571   00200E  9291               	bcf	145,1,c	;volatile
  6572                           
  6573                           ;afficheur.c: 65: __nop();
  6574   002010  F000               	nop	
  6575                           
  6576                           ;afficheur.c: 66: status=PORTH;
  6577   002012  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6578                           
  6579                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6580   002016  8291               	bsf	145,1,c	;volatile
  6581                           
  6582                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6583   002018  8691               	bsf	145,3,c	;volatile
  6584                           
  6585                           ;afficheur.c: 70: status=(status&0x03);
  6586   00201A  5003               	movf	wait_status_ok@status^0,w,c
  6587   00201C  0B03               	andlw	3
  6588   00201E  6E03               	movwf	wait_status_ok@status^0,c
  6589                           
  6590                           ;afficheur.c: 71: if (status!=0x03)
  6591   002020  0E03               	movlw	3
  6592   002022  1803               	xorwf	wait_status_ok@status^0,w,c
  6593   002024  B4D8               	btfsc	status,2,c
  6594   002026  D00D               	goto	i2l2562
  6595                           
  6596                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6597   002028  2A02               	incf	wait_status_ok@err^0,f,c
  6598                           
  6599                           ;afficheur.c: 74: delai_us_char(12);
  6600   00202A  0E0C               	movlw	12
  6601   00202C  EC71  F011         	call	_delai_us_char
  6602                           
  6603                           ;afficheur.c: 75: if (err>=250)
  6604   002030  0EF9               	movlw	249
  6605   002032  6402               	cpfsgt	wait_status_ok@err^0,c
  6606   002034  D008               	goto	i2l2564
  6607                           
  6608                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6609   002036  9EF2               	bcf	242,7,c	;volatile
  6610                           
  6611                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6612   002038  948B               	bcf	139,2,c	;volatile
  6613   00203A  828B               	bsf	139,1,c	;volatile
  6614   00203C  808F               	bsf	143,0,c	;volatile
  6615                           
  6616                           ;afficheur.c: 79: res=0;
  6617   00203E  0E00               	movlw	0
  6618   002040  D001               	goto	L7
  6619   002042                     i2l2562:
  6620                           
  6621                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6622   002042  0E01               	movlw	1
  6623   002044                     L7:
  6624   002044  6E04               	movwf	wait_status_ok@res^0,c
  6625   002046                     i2l2564:
  6626   002046  0E02               	movlw	2
  6627   002048  1804               	xorwf	wait_status_ok@res^0,w,c
  6628   00204A  B4D8               	btfsc	status,2,c
  6629   00204C  D7DD               	goto	i2l1270
  6630                           
  6631                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6632   00204E  5004               	movf	wait_status_ok@res^0,w,c
  6633   002050  0012               	return		;funcret
  6634   002052                     __end_of_wait_status_ok:
  6635                           	callstack 0
  6636                           
  6637 ;; *************** function _delai_us_char *****************
  6638 ;; Defined at:
  6639 ;;		line 154 in file "afficheur.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  ucdelai         1    wreg     unsigned char 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6657 ;;Total ram usage:        1 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; This function calls:
  6660 ;;		Nothing
  6661 ;; This function is called by:
  6662 ;;		_wait_status_ok
  6663 ;;		_command
  6664 ;;		_d1command
  6665 ;;		_d2command
  6666 ;;		_initialisation_afficheur
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text40
  6671   0022E2                     __ptext40:
  6672                           	callstack 0
  6673   0022E2                     _delai_us_char:
  6674                           	callstack 23
  6675                           
  6676                           ;incstack = 0
  6677                           ;delai_us_char@ucdelai stored from wreg
  6678   0022E2  6E01               	movwf	delai_us_char@ucdelai^0,c
  6679                           
  6680                           ;afficheur.c: 157: while (ucdelai>0)
  6681   0022E4  D00B               	goto	i2l2510
  6682   0022E6                     i2l1294:
  6683                           
  6684                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6685   0022E6  F000               	nop	
  6686   0022E8  F000               	nop	
  6687   0022EA  F000               	nop	
  6688   0022EC  F000               	nop	
  6689   0022EE  F000               	nop	
  6690   0022F0  F000               	nop	
  6691   0022F2  F000               	nop	
  6692   0022F4  F000               	nop	
  6693   0022F6  F000               	nop	
  6694   0022F8  F000               	nop	
  6695                           
  6696                           ;afficheur.c: 160: ucdelai--;
  6697   0022FA  0601               	decf	delai_us_char@ucdelai^0,f,c
  6698   0022FC                     i2l2510:
  6699   0022FC  5001               	movf	delai_us_char@ucdelai^0,w,c
  6700   0022FE  B4D8               	btfsc	status,2,c
  6701   002300  0012               	return	
  6702   002302  D7F1               	goto	i2l1294
  6703   002304                     __end_of_delai_us_char:
  6704                           	callstack 0
  6705                           
  6706                           	psect	text41
  6707   000000                     __ptext41:
  6708                           	callstack 0
  6709                           
  6710                           	psect	rparam
  6711   000000                     
  6712                           	psect	temp
  6713   000022                     btemp:
  6714                           	callstack 0
  6715   000022                     	ds	12
  6716   000000                     wtemp0	set	btemp
  6717   000000                     wtemp1	set	btemp+2
  6718   000000                     wtemp2	set	btemp+4
  6719   000000                     wtemp3	set	btemp+6
  6720   000000                     wtemp4	set	btemp+8
  6721   000000                     wtemp5	set	btemp+10
  6722   000000                     wtemp8	set	btemp+1
  6723   000000                     ttemp0	set	btemp
  6724   000000                     ttemp1	set	btemp+3
  6725   000000                     ttemp2	set	btemp+6
  6726   000000                     ttemp3	set	btemp+9
  6727   000000                     ttemp5	set	btemp+1
  6728   000000                     ttemp6	set	btemp+4
  6729   000000                     ttemp7	set	btemp+8
  6730   000000                     ltemp0	set	btemp
  6731   000000                     ltemp1	set	btemp+4
  6732   000000                     ltemp2	set	btemp+8
  6733   000000                     lltemp0	set	btemp
  6734                           
  6735                           	psect	idloc
  6736                           
  6737                           ;Config register IDLOC0 @ 0x200000
  6738                           ;	unspecified, using default values
  6739   200000                     	org	2097152
  6740   200000  FF                 	db	255
  6741                           
  6742                           ;Config register IDLOC1 @ 0x200001
  6743                           ;	unspecified, using default values
  6744   200001                     	org	2097153
  6745   200001  FF                 	db	255
  6746                           
  6747                           ;Config register IDLOC2 @ 0x200002
  6748                           ;	unspecified, using default values
  6749   200002                     	org	2097154
  6750   200002  FF                 	db	255
  6751                           
  6752                           ;Config register IDLOC3 @ 0x200003
  6753                           ;	unspecified, using default values
  6754   200003                     	org	2097155
  6755   200003  FF                 	db	255
  6756                           
  6757                           ;Config register IDLOC4 @ 0x200004
  6758                           ;	unspecified, using default values
  6759   200004                     	org	2097156
  6760   200004  FF                 	db	255
  6761                           
  6762                           ;Config register IDLOC5 @ 0x200005
  6763                           ;	unspecified, using default values
  6764   200005                     	org	2097157
  6765   200005  FF                 	db	255
  6766                           
  6767                           ;Config register IDLOC6 @ 0x200006
  6768                           ;	unspecified, using default values
  6769   200006                     	org	2097158
  6770   200006  FF                 	db	255
  6771                           
  6772                           ;Config register IDLOC7 @ 0x200007
  6773                           ;	unspecified, using default values
  6774   200007                     	org	2097159
  6775   200007  FF                 	db	255
  6776                           
  6777                           	psect	config
  6778                           
  6779                           ;Config register CONFIG1L @ 0x300000
  6780                           ;	VREG Sleep Enable bit
  6781                           ;	RETEN = ON, Enabled
  6782                           ;	LF-INTOSC Low-power Enable bit
  6783                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6784                           ;	SOSC Power Selection and mode Configuration bits
  6785                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6786                           ;	Extended Instruction Set
  6787                           ;	XINST = OFF, Disabled
  6788   300000                     	org	3145728
  6789   300000  15                 	db	21
  6790                           
  6791                           ;Config register CONFIG1H @ 0x300001
  6792                           ;	Oscillator
  6793                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  6794                           ;	PLL x4 Enable bit
  6795                           ;	PLLCFG = ON, Enabled
  6796                           ;	Fail-Safe Clock Monitor
  6797                           ;	FCMEN = OFF, Disabled
  6798                           ;	Internal External Oscillator Switch Over Mode
  6799                           ;	IESO = OFF, Disabled
  6800   300001                     	org	3145729
  6801   300001  13                 	db	19
  6802                           
  6803                           ;Config register CONFIG2L @ 0x300002
  6804                           ;	Power Up Timer
  6805                           ;	PWRTEN = OFF, Disabled
  6806                           ;	Brown Out Detect
  6807                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  6808                           ;	Brown-out Reset Voltage bits
  6809                           ;	BORV = 0, 3.0V
  6810                           ;	BORMV Power level
  6811                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6812   300002                     	org	3145730
  6813   300002  61                 	db	97
  6814                           
  6815                           ;Config register CONFIG2H @ 0x300003
  6816                           ;	Watchdog Timer
  6817                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6818                           ;	Watchdog Postscaler
  6819                           ;	WDTPS = 1, 1:1
  6820   300003                     	org	3145731
  6821   300003  00                 	db	0
  6822                           
  6823                           ;Config register CONFIG3L @ 0x300004
  6824                           ;	RTCC Clock Select
  6825                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  6826                           ;	External Address Shift bit
  6827                           ;	EASHFT = OFF, Address Shifting disabled
  6828                           ;	Address Bus Width Select bits
  6829                           ;	ABW = MM, 8-bit address bus
  6830                           ;	Data Bus Width
  6831                           ;	BW = 8, 8-bit external bus mode
  6832                           ;	External Bus Wait
  6833                           ;	WAIT = ON, Enabled
  6834   300004                     	org	3145732
  6835   300004  30                 	db	48
  6836                           
  6837                           ;Config register CONFIG3H @ 0x300005
  6838                           ;	CCP2 Mux
  6839                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  6840                           ;	ECCP Mux
  6841                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  6842                           ;	MSSP address masking
  6843                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  6844                           ;	Master Clear Enable
  6845                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  6846   300005                     	org	3145733
  6847   300005  80                 	db	128
  6848                           
  6849                           ;Config register CONFIG4L @ 0x300006
  6850                           ;	Stack Overflow Reset
  6851                           ;	STVREN = ON, Enabled
  6852                           ;	Boot Block Size
  6853                           ;	BBSIZ = BB1K, 1K word Boot Block size
  6854                           ;	Background Debug
  6855                           ;	DEBUG = OFF, Disabled
  6856   300006                     	org	3145734
  6857   300006  81                 	db	129
  6858                           
  6859                           ; Padding undefined space
  6860   300007                     	org	3145735
  6861   300007  FF                 	db	255
  6862                           
  6863                           ;Config register CONFIG5L @ 0x300008
  6864                           ;	Code Protect 00800-03FFF
  6865                           ;	CP0 = OFF, Disabled
  6866                           ;	Code Protect 04000-07FFF
  6867                           ;	CP1 = OFF, Disabled
  6868                           ;	Code Protect 08000-0BFFF
  6869                           ;	CP2 = OFF, Disabled
  6870                           ;	Code Protect 0C000-0FFFF
  6871                           ;	CP3 = OFF, Disabled
  6872                           ;	Code Protect 10000-13FFF
  6873                           ;	CP4 = OFF, Disabled
  6874                           ;	Code Protect 14000-17FFF
  6875                           ;	CP5 = OFF, Disabled
  6876                           ;	Code Protect 18000-1BFFF
  6877                           ;	CP6 = OFF, Disabled
  6878                           ;	Code Protect 1C000-1FFFF
  6879                           ;	CP7 = OFF, Disabled
  6880   300008                     	org	3145736
  6881   300008  FF                 	db	255
  6882                           
  6883                           ;Config register CONFIG5H @ 0x300009
  6884                           ;	Code Protect Boot
  6885                           ;	CPB = OFF, Disabled
  6886                           ;	Data EE Read Protect
  6887                           ;	CPD = OFF, Disabled
  6888   300009                     	org	3145737
  6889   300009  C0                 	db	192
  6890                           
  6891                           ;Config register CONFIG6L @ 0x30000A
  6892                           ;	Table Write Protect 00800-03FFF
  6893                           ;	WRT0 = OFF, Disabled
  6894                           ;	Table Write Protect 04000-07FFF
  6895                           ;	WRT1 = OFF, Disabled
  6896                           ;	Table Write Protect 08000-0BFFF
  6897                           ;	WRT2 = OFF, Disabled
  6898                           ;	Table Write Protect 0C000-0FFFF
  6899                           ;	WRT3 = OFF, Disabled
  6900                           ;	Table Write Protect 10000-13FFF
  6901                           ;	WRT4 = OFF, Disabled
  6902                           ;	Table Write Protect 14000-17FFF
  6903                           ;	WRT5 = OFF, Disabled
  6904                           ;	Table Write Protect 18000-1BFFF
  6905                           ;	WRT6 = OFF, Disabled
  6906                           ;	Table Write Protect 1C000-1FFFF
  6907                           ;	WRT7 = OFF, Disabled
  6908   30000A                     	org	3145738
  6909   30000A  FF                 	db	255
  6910                           
  6911                           ;Config register CONFIG6H @ 0x30000B
  6912                           ;	Config. Write Protect
  6913                           ;	WRTC = OFF, Disabled
  6914                           ;	Table Write Protect Boot
  6915                           ;	WRTB = OFF, Disabled
  6916                           ;	Data EE Write Protect
  6917                           ;	WRTD = OFF, Disabled
  6918   30000B                     	org	3145739
  6919   30000B  E0                 	db	224
  6920                           
  6921                           ;Config register CONFIG7L @ 0x30000C
  6922                           ;	Table Read Protect 00800-03FFF
  6923                           ;	EBRT0 = OFF, Disabled
  6924                           ;	Table Read Protect 04000-07FFF
  6925                           ;	EBRT1 = OFF, Disabled
  6926                           ;	Table Read Protect 08000-0BFFF
  6927                           ;	EBRT2 = OFF, Disabled
  6928                           ;	Table Read Protect 0C000-0FFFF
  6929                           ;	EBRT3 = OFF, Disabled
  6930                           ;	Table Read Protect 10000-13FFF
  6931                           ;	EBRT4 = OFF, Disabled
  6932                           ;	Table Read Protect 14000-17FFF
  6933                           ;	EBRT5 = OFF, Disabled
  6934                           ;	Table Read Protect 18000-1BFFF
  6935                           ;	EBRT6 = OFF, Disabled
  6936                           ;	Table Read Protect 1C000-1FFFF
  6937                           ;	EBRT7 = OFF, Disabled
  6938   30000C                     	org	3145740
  6939   30000C  FF                 	db	255
  6940                           
  6941                           ;Config register CONFIG7H @ 0x30000D
  6942                           ;	Table Read Protect Boot
  6943                           ;	EBRTB = OFF, Disabled
  6944   30000D                     	org	3145741
  6945   30000D  40                 	db	64
  6946                           tosu	equ	0xFFF
  6947                           tosh	equ	0xFFE
  6948                           tosl	equ	0xFFD
  6949                           stkptr	equ	0xFFC
  6950                           pclatu	equ	0xFFB
  6951                           pclath	equ	0xFFA
  6952                           pcl	equ	0xFF9
  6953                           tblptru	equ	0xFF8
  6954                           tblptrh	equ	0xFF7
  6955                           tblptrl	equ	0xFF6
  6956                           tablat	equ	0xFF5
  6957                           prodh	equ	0xFF4
  6958                           prodl	equ	0xFF3
  6959                           indf0	equ	0xFEF
  6960                           postinc0	equ	0xFEE
  6961                           postdec0	equ	0xFED
  6962                           preinc0	equ	0xFEC
  6963                           plusw0	equ	0xFEB
  6964                           fsr0h	equ	0xFEA
  6965                           fsr0l	equ	0xFE9
  6966                           wreg	equ	0xFE8
  6967                           indf1	equ	0xFE7
  6968                           postinc1	equ	0xFE6
  6969                           postdec1	equ	0xFE5
  6970                           preinc1	equ	0xFE4
  6971                           plusw1	equ	0xFE3
  6972                           fsr1h	equ	0xFE2
  6973                           fsr1l	equ	0xFE1
  6974                           bsr	equ	0xFE0
  6975                           indf2	equ	0xFDF
  6976                           postinc2	equ	0xFDE
  6977                           postdec2	equ	0xFDD
  6978                           preinc2	equ	0xFDC
  6979                           plusw2	equ	0xFDB
  6980                           fsr2h	equ	0xFDA
  6981                           fsr2l	equ	0xFD9
  6982                           status	equ	0xFD8

Data Sizes:
    Strings     215
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     33      45
    BANK0           124      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_25(CODE[14]), STR_24(CODE[29]), STR_23(CODE[4]), STR_22(CODE[3]), 
		 -> STR_21(CODE[7]), STR_20(CODE[5]), STR_19(CODE[12]), STR_18(CODE[12]), 
		 -> STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[9]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[6]), 
		 -> STR_9(CODE[13]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   52365
                                             20 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   50559
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
                               _vide
                       _vitesseAdmin
 ---------------------------------------------------------------------------------
 (4) _vitesseAdmin                                         9     7      2     244
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5184
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4416
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2241
                                              8 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5099
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3879
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3082
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesseAdmin
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7C      0       0      64        0.0%
BITBANK0            7C      0       0       4        0.0%
BANK0               7C      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     21      2D       1       54.2%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      57        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 23 14:44:50 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0035                         ?_draw_square 000F  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0031                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 238C                                 l1536 22BC  
                               l2790 22AC                                 l2786 22A0  
                               l2788 22A6                                 l4992 233A  
                               STR_1 108D                                 STR_2 10D5  
                               STR_3 10D2                                 STR_4 10CC  
                               STR_5 10B1                                 STR_6 102D  
                               STR_7 109C                                 STR_8 1066  
                               STR_9 1041                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 229E                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 2324  
                               _fptr 002E                                 _vide 23BC  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0022                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                         _vitesseAdmin 1D7C  
                   ?_lecture_normale 0003                                ?_main 0001  
                    __end_of___awdiv 1E8A                                STR_10 10B7  
                              STR_11 107B                                STR_20 10C3  
                              STR_12 1071                                STR_21 10A3  
                              STR_13 1095                                STR_22 10CF  
                              STR_14 101E                                STR_23 10C8  
                              STR_15 1084                                STR_16 10AA  
                              STR_24 1001                                STR_17 10BD  
                              STR_25 1033                                STR_18 104E  
                              STR_19 105A                      __end_of___awmod 1EFA  
                              ?_vide 0001                                _T0CON 000FD5  
                    ___awdiv@divisor 0003                         draw_dec8@dix 000D  
                              _FSR0H 000FEA                                _FSR1H 000FE2  
                              _FSR0L 000FE9                                _FSR2H 000FDA  
                              _FSR1L 000FE1                                _FSR2L 000FD9  
                    __end_of___lwdiv 2000                                i2l144 21CA  
                              i2l147 21D8                                i2l434 11F0  
                              i2l453 13A0                                i2l457 1454  
                              i2l561 16D4                                i2l810 19AE  
                              i2l804 19A2                                i2l566 1716  
                              i2l822 19C6                                i2l840 19EA  
                              i2l816 19BA                                i2l834 19DE  
                              i2l579 23A6                                i2l852 1A02  
                              i2l828 19D2                                i2l780 1972  
                              i2l846 19F6                                i2l864 1A1A  
                              i2l792 198A                                i2l858 1A0E  
                              i2l786 197E                                i2l962 17AE  
                              i2l980 17D2                      ___awdiv@counter 0005  
                              i2l798 1996                                i2l974 17C6  
                              i2l992 17EA                                i2l968 17BA  
                              i2l986 17DE                                i2l998 17F6  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 2372  
                        _write_d_aff 2358                      __end_of_charger 23EC  
                    write_d_aff@data 0001                       ?_stid_delai_us 0001  
                    __end_of_command 2358                                _badge 000075  
                              _plot1 1B04                                _queue 000069  
                              tablat 000FF5                                ltemp0 0022  
                              ltemp1 0026                                ltemp2 002A  
              __end_of_delai_us_char 2304                                plusw1 000FE3  
                    _check_status_ok 2272                                ttemp0 0022  
                              ttemp1 0025                                ttemp2 0028  
                              ttemp3 002B                                ttemp5 0023  
                              ttemp6 0026                                ttemp7 002A  
                              status 000FD8                                wtemp0 0022  
                              wtemp1 0024                                wtemp2 0026  
                              wtemp3 0028                                wtemp4 002A  
                              wtemp5 002C                                wtemp8 0023  
      initialisation_du_systeme@temp 0021                      __initialization 23EC  
                       __end_of_Init 22C0           lecture_8bit_analogique@ret 0001  
                       __end_of_main 233E                         __end_of_vide 23D4  
                             ??_main 0022                               ??_vide 000F  
                      __activetblptr 000003                         draw_square@x 0013  
                       draw_square@y 0014                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             ?_plot1 0009                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0001                        _n_octet_badge 00007F  
                      draw_dec8@cent 000C                               _MEMCON 000F26  
                             i2l1010 180E                               i2l1004 1802  
                             i2l1022 1826                               i2l1040 184A  
                             i2l1016 181A                               i2l1034 183E  
                             i2l1028 1832                               i2l1302 1A78  
                             i2l1046 1856                               i2l1320 1CF2  
                             i2l1312 21FE                               i2l1331 1F16  
                             i2l1270 2008                               i2l1342 1CA8  
                             i2l1336 1F42                               i2l2240 1FF6  
                             i2l1345 1CC2                               i2l1356 1F96  
                             i2l1348 1CDC                               i2l1444 1DEE  
                             i2l1294 22E6                               i2l2510 22FC  
                             i2l4212 1E80                               i2l4204 1E68  
                             i2l4300 1B60                               i2l5012 0064  
                             i2l1653 1BEE                               i2l4142 216E  
                             i2l4302 1B68                               i2l3510 18BC  
                             i2l1654 1BF6                               i2l1663 238E  
                             i2l4208 1E72                               i2l4400 1CAA  
                             i2l4240 1ED8                               i2l4232 1EB8  
                             i2l4224 1E9E                               i2l3504 18AE  
                             i2l1656 1C00                               i2l2562 2042  
                             i2l4234 1EC0                               i2l4306 1B70  
                             i2l3522 18DC                               i2l3610 1A26  
                             i2l2564 2046                               i2l4180 1E1A  
                             i2l4404 1CC4                               i2l4244 1EE2  
                             i2l4228 1EAA                               i2l4332 1A62  
                             i2l2804 21DC                               i2l3540 190A  
                             i2l4316 239A                               _PCLATH 000FFA  
                             i2l4262 1F74                               i2l4270 21EC  
                             i2l4342 1A7A                               i2l4430 1DE0  
                             i2l4414 1D94                               i2l4280 1CF4  
                             i2l4168 209E                               i2l4264 1F98  
                             i2l4192 1E40                               i2l4408 1CDE  
                             i2l4248 1EF0                               i2l3560 1940  
                             i2l3528 18EA                               i2l5312 02DC  
                             i2l4258 1F6A                               i2l4274 21F6  
                             i2l4354 2228                               i2l4194 1E48  
                             i2l4186 1E2A                               i2l4450 1F0E  
                             i2l4418 1DAE                               i2l3546 1918  
                             i2l3650 1862                               i2l4506 1BE0  
                             i2l4284 1D2A                               i2l4276 2200  
                             i2l4460 1F44                               i2l4452 1F18  
                             i2l4292 1B40                               i2l4380 20C0  
                             i2l3660 187A                               i2l5156 0198  
                             i2l4294 1B48                               i2l4382 20CE  
                             i2l2774 2296                               i2l4542 1C50  
                             i2l4368 2258                               i2l4472 230A  
                             i2l4296 1B50                               i2l4376 20AA  
                             i2l4552 1FC4                               _PCLATU 000FFB  
                             i2l4458 1F3A                               i2l4298 1B58  
                             i2l4386 20E4                               i2l4554 1FCC  
                             i2l4820 12DC                               i2l4564 1FEC  
                             i2l4814 12C0                               i2l4840 1324  
                             i2l4824 12E2                               i2l4816 12C6  
                             i2l4488 23B2                               i2l4498 1BCA  
                             i2l4860 137A                               i2l4764 11C8  
                             i2l4846 1330                               i2l4782 122A  
                             i2l4774 1202                               i2l4864 138E  
                             i2l4856 1364                               i2l4792 1258  
                             i2l4784 1236                               i2l4776 120E  
                             i2l4944 1736                               i2l4928 16F4  
                             i2l4794 125E                               i2l4970 2112  
                             _TABLAT 000FF5                               i2l4976 2124  
                             i2l4898 1456                               i2l4978 212C  
                      draw_dec8@unit 000A                               _RCSTA1 000FAB  
                         _Tick_Count 000071                               _SPBRG1 000FAF  
                   _FSR0L_TEMPORAIRE 000064                               _STATUS 000FD8  
                             _STKPTR 000FFC                               _TXREG1 000FAD  
                     clear_line@line 000F                               _TXSTA1 000FAC  
                             _Valeur 000083                            ??___awdiv 0005  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _tache1 10DA                               _tache2 16B2  
                             _tache3 188C                               _tache4 196A  
                             _tache5 17A6                               _tache6 20EE  
                          ??_charger 000F                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               lltemp0 0022  
                             plot1@x 000E                               plot1@y 0009  
                   __end_of_tp_delai 23BC                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 229E  
       lecture_normale@temps_attente 0005                           __accesstop 0060  
            __end_of__initialization 23F6                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                           ___inthi_sp 0AAC  
                  __end_of_d1command 2172                    __end_of_d2command 20A2  
                      __end_of_plot1 1BB2                              ??_plot1 000A  
                      draw_square@x1 0012                        draw_square@x2 0010  
                      draw_square@y1 000F                        draw_square@y2 0011  
                       _W_TEMPORAIRE 000060                           __pnvCOMRAM 002E  
                     _clear_graphics 2242          ??_initialisation_du_systeme 0021  
                         _clear_line 2304                           _clear_text 2212  
           ?_fonction_d_interruption 0001                              ?_tache1 0001  
                            ?_tache2 0001                              ?_tache3 0001  
                            ?_tache4 0001                              ?_tache5 0001  
                            ?_tache6 0001                         ?_write_c_aff 0001  
                     draw_dec8@octet 000B                         ?_write_d_aff 0001  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8             _initialisation_afficheur 1A38  
                            _SPBRGH1 000FD4                     ?_check_status_ok 0001  
                  wait_status_ok@err 0002                    wait_status_ok@res 0004  
                        _Val_sem_cna 0039               __end_of_clear_graphics 2272  
                  stid_delai_us@isdu 0001                 lecture_normale@n_bit 0007  
               lecture_normale@octet 0008             _initialisation_des_ports 2172  
                          _DEMARRAGE 000065                              __Hparam 0000  
                            __Lparam 0000                            ?_tp_delai 0001  
                  __end_of_draw_dec8 1CF0                    __end_of_draw_char 2212  
                  __end_of_draw_hex8 1F56                              ___awdiv 1E06  
                            ___awmod 1E8A                              ___lwdiv 1FAE  
                       __psmallconst 1000                              __pcinit 23EC  
                            _charger 23D4                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 2324  
                            __ptext1 147A                              __ptext2 2172  
                            __ptext3 229E                              __ptext5 20EE  
                            __ptext6 1BB2                              __ptext7 238C  
                            __ptext8 17A6                              __ptext9 196A  
                            _command 233E                            _T0CONbits 000FD5  
                 draw_string@tableau 0008            _initialisation_du_systeme 147A  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 22E2  
                  __end_of_goto_lico 1FAE                              _val_tos 0033  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 23F6                              tache4@a 0001  
                            tache5@a 0001                              tache6@n 0009  
                    ?_clear_graphics 0001                          ?_clear_line 0001  
                        ?_clear_text 0001                           ??_tp_delai 0003  
                            postdec1 000FE5                              postinc1 000FE6  
                       goto_lico@adr 000D                            _PORTBbits 000F81  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
            _lecture_8bit_analogique 21AA                            _TRISCbits 000F94  
                          _STKPTR_T1 000103                            _STKPTR_T2 000203  
                          _STKPTR_T3 000303                            _STKPTR_T4 000403  
                          _STKPTR_T5 000503                            _STKPTR_T6 000603  
                          _TRISDbits 000F95                            _TRISGbits 000F98  
                  clear_graphics@add 0009                           command@cmd 0005  
                         draw_dec8@c 000E                           draw_hex8@c 0009  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
     lecture_8bit_analogique@channel 0002                            _d1command 2138  
                          _d2command 2052                       __end_of_tache1 147A  
                     __end_of_tache2 17A6                       __end_of_tache3 196A  
                     __end_of_tache4 1A38                       __end_of_tache5 188C  
                     __end_of_tache6 2138                        ??_draw_square 0012  
                      ??_draw_string 000A               lecture_normale@stid_id 0003  
              __end_of_stid_delai_us 23A4                  start_initialization 23EC  
                      vitesseAdmin@a 0001                        vitesseAdmin@b 0006  
                      vitesseAdmin@c 0008                    ??_lecture_normale 0005  
                      _delai_us_char 22E2                        ?_vitesseAdmin 0001  
                           ??_tache1 0015                             ??_tache2 0008  
                           ??_tache3 0001                             ??_tache4 0001  
                           ??_tache5 0001                             ??_tache6 0009  
         ??_initialisation_afficheur 0009            ??_lecture_8bit_analogique 0001  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                        __pbssCOMRAM 0035                  __end_of_draw_square 20EE  
         ??_initialisation_des_ports 0021                  __end_of_draw_string 1D7C  
                     ?_delai_us_char 0001                     ___lwdiv@dividend 0001  
                          __pintcode 0008                       ??_vitesseAdmin 0003  
                           ?___awdiv 0001                             ?___awmod 0001  
                           ?___lwdiv 0001                             ?_charger 0001  
                  _pointeur_de_tache 000070                            _draw_dec8 1C54  
                          _draw_char 21E0                            _draw_hex8 1EFA  
                           ?_command 0001                       _wait_status_ok 2000  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 22C0  
                 write_c_aff@command 0001                            _goto_lico 1F56  
    __end_of_lecture_8bit_analogique 21E0                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 16B2  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u221_40 1EC4                             i2u141_40 19A6  
                           i2u133_40 1976                             i2u230_40 1D1A  
                           i2u230_47 1D10                             i2u215_40 1E4C  
                           i2u151_40 19E2                             i2u143_40 19B2  
                           i2u135_40 1982                             i2u232_40 1D4C  
                           i2u232_47 1D42                             i2u153_40 19EE  
                           i2u145_40 19BE                             i2u137_40 198E  
                           i2u234_40 1D74                             i2u170_40 17D6  
                           i2u234_47 1D6A                             i2u155_40 19FA  
                           i2u147_40 19CA                             i2u139_40 199A  
                           i2u180_40 1812                             i2u172_40 17E2  
                           i2u164_40 17B2                             i2u157_40 1A06  
                           i2u149_40 19D6                         ??_clear_line 000F  
                           i2u190_40 184E                             i2u182_40 181E  
                           i2u174_40 17EE                             i2u166_40 17BE  
                           i2u159_40 1A12                             i2u280_40 12D0  
                           i2u184_40 182A                             i2u176_40 17FA  
                           i2u168_40 17CA                             i2u249_40 1DB6  
                           i2u273_40 1FD0                             _PIR1bits 000F9E  
                           i2u186_40 1836                             i2u178_40 1806  
                           i2u188_40 1842                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 2052  
                        ??_d1command 0006                           ?_draw_dec8 0001  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                   clear_line@column 0010                          _draw_square 20A2  
                        _draw_string 1CF0                         _Val_sem_rxtx 0038  
                           _TP_appui 000066                   __end_of_clear_line 2324  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 2242                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           _Personne 000082                             _Operator 000082  
                           __Lrparam 0000     __end_of_initialisation_afficheur 1B04  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
            _fonction_d_interruption 0008                      _lecture_normale 1BB2  
                           _batterie 000074                      ___lwdiv@divisor 0003  
   __end_of_initialisation_des_ports 21AA                      ___lwdiv@counter 0007  
                           __ptext10 188C                             __ptext11 16B2  
                           __ptext20 22C0                             __ptext12 23A4  
                           __ptext21 20A2                             __ptext13 1FAE  
                           __ptext30 21E0                             __ptext22 1B04  
                           __ptext14 10DA                             __ptext31 2242  
                           __ptext23 233E                             __ptext15 1D7C  
                           __ptext40 22E2                             __ptext32 23D4  
                           __ptext24 1E8A                             __ptext16 23BC  
                           __ptext41 0000                             __ptext33 1F56  
                           __ptext25 1EFA                             __ptext17 21AA  
                           __ptext34 2052                             __ptext26 1C54  
                           __ptext18 1A38                             __ptext35 1CF0  
                           __ptext27 1E06                             __ptext19 2272  
                           __ptext36 2138                             __ptext28 2212  
                           __ptext37 2358                             __ptext29 2304  
                           __ptext38 2372                             __ptext39 2000  
               __end_of_vitesseAdmin 1E06                             isa$xinst 000000  
                           _tp_delai 23A4                    ??_check_status_ok 0001  
                        ??_draw_dec8 0009                          ??_draw_char 0008  
                        ??_draw_hex8 0008                        ??_write_c_aff 0001  
                      ??_write_d_aff 0001                           _INTCONbits 000FF2  
                           tache2@hx 000E                             tache2@hy 0010  
                           tache2@ix 000A                             tache2@iy 000C  
                           tache2@lx 000F                             tache2@ly 0011  
                        ??_init_rxtx 0001                          ??_goto_lico 000A  
                           intlevel2 0000                             plot1@add 000C  
                     goto_lico@ligne 000C              __end_of_lecture_normale 1C54  
                       d1command@cmd 0005                         d1command@res 0007  
          ??_fonction_d_interruption 0015                         tp_delai@itpd 0001  
                        d1command@d1 0006                  __end_of_write_c_aff 238C  
                __end_of_write_d_aff 2372                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
