

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 23 11:28:24 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55                           	dabs	1,0x603,1,_STKPTR_T6
    56                           	dabs	1,0x503,1,_STKPTR_T5
    57                           	dabs	1,0x403,1,_STKPTR_T4
    58                           	dabs	1,0x303,1,_STKPTR_T3
    59                           	dabs	1,0x203,1,_STKPTR_T2
    60                           	dabs	1,0x103,1,_STKPTR_T1
    61                           	dabs	1,0x60,1,_W_TEMPORAIRE
    62                           	dabs	1,0x100,66,_contexte1
    63                           	dabs	1,0x69,6,_queue
    64                           	dabs	1,0x71,2,_Tick_Count
    65                           	dabs	1,0x81,1,_TEST
    66                           	dabs	1,0x80,1,_RXTX_libre
    67                           	dabs	1,0x7F,1,_n_octet_badge
    68                           	dabs	1,0x74,1,_batterie
    69                           	dabs	1,0x73,1,_vitesse
    70                           	dabs	1,0x70,1,_pointeur_de_tache
    71                           	dabs	1,0x6F,1,_tache_active
    72                           	dabs	1,0x68,1,_TP_y
    73                           	dabs	1,0x67,1,_TP_x
    74                           	dabs	1,0x66,1,_TP_appui
    75                           	dabs	1,0x65,1,_DEMARRAGE
    76                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    77                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    78                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    79                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    80                           	dabs	1,0x75,10,_badge
    81                           	dabs	1,0x200,66,_contexte2
    82                           	dabs	1,0x300,66,_contexte3
    83                           	dabs	1,0x400,66,_contexte4
    84                           	dabs	1,0x500,66,_contexte5
    85                           	dabs	1,0x600,66,_contexte6
    86   000000                     
    87                           ; Generated 06/04/2022 GMT
    88                           ; 
    89                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F87K22 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122 ;;Init@sem	offset=-1 (param)
   123 ;;Init@sem	offset=-1 (param)
   124   000000                     _TMR0	set	4054
   125   000000                     _TOSU	set	4095
   126   000000                     _TOSH	set	4094
   127   000000                     _TOSL	set	4093
   128   000000                     _TABLAT	set	4085
   129   000000                     _TBLPTRL	set	4086
   130   000000                     _TBLPTRH	set	4087
   131   000000                     _TBLPTRU	set	4088
   132   000000                     _PRODL	set	4083
   133   000000                     _PRODH	set	4084
   134   000000                     _FSR2L	set	4057
   135   000000                     _FSR2H	set	4058
   136   000000                     _FSR1L	set	4065
   137   000000                     _FSR1H	set	4066
   138   000000                     _STKPTR	set	4092
   139   000000                     _FSR0L	set	4073
   140   000000                     _FSR0H	set	4074
   141   000000                     _BSR	set	4064
   142   000000                     _WREG	set	4072
   143   000000                     _STATUS	set	4056
   144                           
   145                           ; 1 bytes @ 0x22
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 6 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels required when called: 8
   171 ;; This function calls:
   172 ;;		_Init
   173 ;;		_initialisation_des_ports
   174 ;;		_initialisation_du_systeme
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text0
   181   0021B2                     __ptext0:
   182                           	callstack 0
   183   000000                     _T0IF	set	32658
   184   000000                     _INTCON2bits	set	4081
   185   0021B2                     _main:
   186                           	callstack 23
   187                           
   188                           ;main.c: 8: initialisation_des_ports();
   189                           
   190                           ;incstack = 0
   191   0021B2  ECEC  F00F         	call	_initialisation_des_ports	;wreg free
   192                           
   193                           ;main.c: 9: initialisation_du_systeme();
   194   0021B6  EC28  F00A         	call	_initialisation_du_systeme	;wreg free
   195                           
   196                           ;main.c: 10: Init(1);
   197   0021BA  0E01               	movlw	1
   198   0021BC  6EE6               	movwf	postinc1,c
   199   0021BE  EC96  F010         	call	_Init	;wreg free
   200                           
   201                           ;main.c: 13: T0CONbits.TMR0ON=1;
   202   0021C2  8ED5               	bsf	213,7,c	;volatile
   203                           
   204                           ;main.c: 14: T0IF=1;
   205   0021C4  84F2               	bsf	4082,2,c	;volatile
   206                           
   207                           ;main.c: 15: (INTCONbits.GIE = 1);
   208   0021C6  8EF2               	bsf	242,7,c	;volatile
   209   0021C8                     l4798:
   210                           
   211                           ;main.c: 19: __nop();
   212   0021C8  F000               	nop	
   213   0021CA  D7FE               	goto	l4798
   214   0021CC                     __end_of_main:
   215                           	callstack 0
   216                           
   217                           	psect	nvCOMRAM
   218   00002F                     __pnvCOMRAM:
   219                           	callstack 0
   220   00002F                     _fptr:
   221                           	callstack 0
   222   00002F                     	ds	3
   223   000032                     _puc:
   224                           	callstack 0
   225   000032                     	ds	2
   226   000034                     _val_tos:
   227                           	callstack 0
   228   000034                     	ds	2
   229   000000                     _ANCON1bits	set	3876
   230   000000                     _ANCON0bits	set	3877
   231   000000                     _TXSTA1	set	4012
   232   000000                     _LATJ	set	3985
   233   000000                     _T0CON	set	4053
   234   000000                     _ADCON0bits	set	4034
   235   000000                     _INTCONbits	set	4082
   236   000000                     _T0IE	set	32661
   237   000000                     _ANCON2	set	3875
   238   000000                     _ANCON1	set	3876
   239   000000                     _ANCON0	set	3877
   240   000000                     _MEMCON	set	3878
   241   000000                     _T0CONbits	set	4053
   242   000000                     _PADCFG1bits	set	3923
   243   000000                     _LATCbits	set	3979
   244   000000                     _LATDbits	set	3980
   245   000000                     _LATGbits	set	3983
   246   000000                     _LATJbits	set	3985
   247   000000                     _LATH	set	3984
   248   000000                     _TRISCbits	set	3988
   249   000000                     _TRISDbits	set	3989
   250   000000                     _TRISGbits	set	3992
   251   000000                     _TRISJ	set	3994
   252   000000                     _TRISH	set	3993
   253   000000                     _PIR1bits	set	3998
   254   000000                     _TXREG1	set	4013
   255   000000                     _ADCON2	set	4032
   256   000000                     _ADCON1	set	4033
   257   000000                     _BAUDCON1	set	3941
   258   000000                     _PORTBbits	set	3969
   259   000000                     _SPBRGH1	set	4052
   260   000000                     _ADRESH	set	4036
   261   000000                     _ADRESL	set	4035
   262   000000                     _ADCON0	set	4034
   263   000000                     _POSTINC0	set	4078
   264   000000                     _POSTINC1	set	4070
   265   000000                     _PCLATH	set	4090
   266   000000                     _PCLATU	set	4091
   267   000000                     _SPBRG1	set	4015
   268   000000                     _PORTDbits	set	3971
   269   000000                     _PORTEbits	set	3972
   270   000000                     _PORTH	set	3975
   271   000000                     _RCSTA1	set	4011
   272   000000                     _TXSTA1bits	set	4012
   273                           
   274                           	psect	smallconst
   275   001000                     __psmallconst:
   276                           	callstack 0
   277   001000  00                 	db	0
   278   001001                     STR_22:
   279   001001  41                 	db	65	;'A'
   280   001002  54                 	db	84	;'T'
   281   001003  54                 	db	84	;'T'
   282   001004  45                 	db	69	;'E'
   283   001005  4E                 	db	78	;'N'
   284   001006  54                 	db	84	;'T'
   285   001007  49                 	db	73	;'I'
   286   001008  4F                 	db	79	;'O'
   287   001009  4E                 	db	78	;'N'
   288   00100A  20                 	db	32
   289   00100B  76                 	db	118	;'v'
   290   00100C  6F                 	db	111	;'o'
   291   00100D  75                 	db	117	;'u'
   292   00100E  73                 	db	115	;'s'
   293   00100F  20                 	db	32
   294   001010  65                 	db	101	;'e'
   295   001011  74                 	db	116	;'t'
   296   001012  65                 	db	101	;'e'
   297   001013  73                 	db	115	;'s'
   298   001014  20                 	db	32
   299   001015  70                 	db	112	;'p'
   300   001016  6C                 	db	108	;'l'
   301   001017  65                 	db	101	;'e'
   302   001018  69                 	db	105	;'i'
   303   001019  6E                 	db	110	;'n'
   304   00101A  21                 	db	33
   305   00101B  21                 	db	33
   306   00101C  21                 	db	33
   307   00101D  00                 	db	0
   308   00101E                     STR_14:
   309   00101E  20                 	db	32
   310   00101F  41                 	db	65	;'A'
   311   001020  55                 	db	85	;'U'
   312   001021  43                 	db	67	;'C'
   313   001022  55                 	db	85	;'U'
   314   001023  4E                 	db	78	;'N'
   315   001024  20                 	db	32
   316   001025  20                 	db	32
   317   001026  20                 	db	32
   318   001027  20                 	db	32
   319   001028  20                 	db	32
   320   001029  20                 	db	32
   321   00102A  20                 	db	32
   322   00102B  20                 	db	32
   323   00102C  20                 	db	32
   324   00102D  20                 	db	32
   325   00102E  20                 	db	32
   326   00102F  20                 	db	32
   327   001030  20                 	db	32
   328   001031  20                 	db	32
   329   001032  00                 	db	0
   330   001033                     STR_23:
   331   001033  52                 	db	82	;'R'
   332   001034  4F                 	db	79	;'O'
   333   001035  55                 	db	85	;'U'
   334   001036  45                 	db	69	;'E'
   335   001037  53                 	db	83	;'S'
   336   001038  42                 	db	66	;'B'
   337   001039  59                 	db	89	;'Y'
   338   00103A  47                 	db	71	;'G'
   339   00103B  4E                 	db	78	;'N'
   340   00103C  4F                 	db	79	;'O'
   341   00103D  4C                 	db	76	;'L'
   342   00103E  45                 	db	69	;'E'
   343   00103F  53                 	db	83	;'S'
   344   001040  00                 	db	0
   345   001041                     STR_7:
   346   001041  54                 	db	84	;'T'
   347   001042  65                 	db	101	;'e'
   348   001043  6D                 	db	109	;'m'
   349   001044  70                 	db	112	;'p'
   350   001045  2E                 	db	46
   351   001046  20                 	db	32
   352   001047  48                 	db	72	;'H'
   353   001048  75                 	db	117	;'u'
   354   001049  69                 	db	105	;'i'
   355   00104A  6C                 	db	108	;'l'
   356   00104B  65                 	db	101	;'e'
   357   00104C  3A                 	db	58	;':'
   358   00104D  00                 	db	0
   359   00104E                     STR_15:
   360   00104E  58                 	db	88	;'X'
   361   00104F  2D                 	db	45
   362   001050  4A                 	db	74	;'J'
   363   001051  6F                 	db	111	;'o'
   364   001052  79                 	db	121	;'y'
   365   001053  73                 	db	115	;'s'
   366   001054  74                 	db	116	;'t'
   367   001055  69                 	db	105	;'i'
   368   001056  63                 	db	99	;'c'
   369   001057  6B                 	db	107	;'k'
   370   001058  3A                 	db	58	;':'
   371   001059  00                 	db	0
   372   00105A                     STR_16:
   373   00105A  59                 	db	89	;'Y'
   374   00105B  2D                 	db	45
   375   00105C  4A                 	db	74	;'J'
   376   00105D  6F                 	db	111	;'o'
   377   00105E  79                 	db	121	;'y'
   378   00105F  73                 	db	115	;'s'
   379   001060  74                 	db	116	;'t'
   380   001061  69                 	db	105	;'i'
   381   001062  63                 	db	99	;'c'
   382   001063  6B                 	db	107	;'k'
   383   001064  3A                 	db	58	;':'
   384   001065  00                 	db	0
   385   001066                     STR_6:
   386   001066  54                 	db	84	;'T'
   387   001067  65                 	db	101	;'e'
   388   001068  6D                 	db	109	;'m'
   389   001069  70                 	db	112	;'p'
   390   00106A  2E                 	db	46
   391   00106B  20                 	db	32
   392   00106C  45                 	db	69	;'E'
   393   00106D  61                 	db	97	;'a'
   394   00106E  75                 	db	117	;'u'
   395   00106F  3A                 	db	58	;':'
   396   001070  00                 	db	0
   397   001071                     STR_10:
   398   001071  42                 	db	66	;'B'
   399   001072  61                 	db	97	;'a'
   400   001073  74                 	db	116	;'t'
   401   001074  74                 	db	116	;'t'
   402   001075  65                 	db	101	;'e'
   403   001076  72                 	db	114	;'r'
   404   001077  69                 	db	105	;'i'
   405   001078  65                 	db	101	;'e'
   406   001079  3A                 	db	58	;':'
   407   00107A  00                 	db	0
   408   00107B                     STR_9:
   409   00107B  56                 	db	86	;'V'
   410   00107C  69                 	db	105	;'i'
   411   00107D  74                 	db	116	;'t'
   412   00107E  65                 	db	101	;'e'
   413   00107F  73                 	db	115	;'s'
   414   001080  73                 	db	115	;'s'
   415   001081  65                 	db	101	;'e'
   416   001082  3A                 	db	58	;':'
   417   001083  00                 	db	0
   418   001084                     STR_1:
   419   001084  4D                 	db	77	;'M'
   420   001085  61                 	db	97	;'a'
   421   001086  72                 	db	114	;'r'
   422   001087  63                 	db	99	;'c'
   423   001088  68                 	db	104	;'h'
   424   001089  65                 	db	101	;'e'
   425   00108A  3A                 	db	58	;':'
   426   00108B  00                 	db	0
   427   00108C                     STR_17:
   428   00108C  42                 	db	66	;'B'
   429   00108D  49                 	db	73	;'I'
   430   00108E  47                 	db	71	;'G'
   431   00108F  20                 	db	32
   432   001090  4D                 	db	77	;'M'
   433   001091  55                 	db	85	;'U'
   434   001092  4D                 	db	77	;'M'
   435   001093  00                 	db	0
   436   001094                     STR_19:
   437   001094  43                 	db	67	;'C'
   438   001095  48                 	db	72	;'H'
   439   001096  41                 	db	65	;'A'
   440   001097  52                 	db	82	;'R'
   441   001098  47                 	db	71	;'G'
   442   001099  45                 	db	69	;'E'
   443   00109A  52                 	db	82	;'R'
   444   00109B  00                 	db	0
   445   00109C                     STR_13:
   446   00109C  42                 	db	66	;'B'
   447   00109D  61                 	db	97	;'a'
   448   00109E  64                 	db	100	;'d'
   449   00109F  67                 	db	103	;'g'
   450   0010A0  65                 	db	101	;'e'
   451   0010A1  3A                 	db	58	;':'
   452   0010A2  00                 	db	0
   453   0010A3                     STR_5:
   454   0010A3  53                 	db	83	;'S'
   455   0010A4  69                 	db	105	;'i'
   456   0010A5  65                 	db	101	;'e'
   457   0010A6  67                 	db	103	;'g'
   458   0010A7  65                 	db	101	;'e'
   459   0010A8  3A                 	db	58	;':'
   460   0010A9  00                 	db	0
   461   0010AA                     STR_11:
   462   0010AA  28                 	db	40
   463   0010AB  28                 	db	40
   464   0010AC  21                 	db	33
   465   0010AD  29                 	db	41
   466   0010AE  29                 	db	41
   467   0010AF  00                 	db	0
   468   0010B0                     STR_8:
   469   0010B0  43                 	db	67	;'C'
   470   0010B1  68                 	db	104	;'h'
   471   0010B2  6F                 	db	111	;'o'
   472   0010B3  63                 	db	99	;'c'
   473   0010B4  3A                 	db	58	;':'
   474   0010B5  00                 	db	0
   475   0010B6                     STR_18:
   476   0010B6  56                 	db	86	;'V'
   477   0010B7  49                 	db	73	;'I'
   478   0010B8  44                 	db	68	;'D'
   479   0010B9  45                 	db	69	;'E'
   480   0010BA  00                 	db	0
   481   0010BB                     STR_21:
   482   0010BB  20                 	db	32
   483   0010BC  79                 	db	121	;'y'
   484   0010BD  3D                 	db	61	;'='
   485   0010BE  00                 	db	0
   486   0010BF                     STR_4:
   487   0010BF  4E                 	db	78	;'N'
   488   0010C0  20                 	db	32
   489   0010C1  00                 	db	0
   490   0010C2                     STR_20:
   491   0010C2  78                 	db	120	;'x'
   492   0010C3  3D                 	db	61	;'='
   493   0010C4  00                 	db	0
   494   0010C5                     STR_3:
   495   0010C5  41                 	db	65	;'A'
   496   0010C6  52                 	db	82	;'R'
   497   0010C7  00                 	db	0
   498   0010C8                     STR_2:
   499   0010C8  41                 	db	65	;'A'
   500   0010C9  56                 	db	86	;'V'
   501   0010CA  00                 	db	0
   502   0010CB  00                 	db	0	; dummy byte at the end
   503   000000                     
   504                           ; #config settings
   505                           
   506                           	psect	cinit
   507   00227A                     __pcinit:
   508                           	callstack 0
   509   00227A                     start_initialization:
   510                           	callstack 0
   511   00227A                     __initialization:
   512                           	callstack 0
   513                           
   514                           ; Clear objects allocated to COMRAM (5 bytes)
   515   00227A  6A3A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   516   00227C  6A39               	clrf	(__pbssCOMRAM+3)& (0+255),c
   517   00227E  6A38               	clrf	(__pbssCOMRAM+2)& (0+255),c
   518   002280  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
   519   002282  6A36               	clrf	__pbssCOMRAM& (0+255),c
   520   002284                     end_of_initialization:
   521                           	callstack 0
   522   002284                     __end_of__initialization:
   523                           	callstack 0
   524   002284  0100               	movlb	0
   525   002286  EFD9  F010         	goto	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMRAM
   528   000036                     __pbssCOMRAM:
   529                           	callstack 0
   530   000036                     _tc:
   531                           	callstack 0
   532   000036                     	ds	3
   533   000039                     _Val_sem_rxtx:
   534                           	callstack 0
   535   000039                     	ds	1
   536   00003A                     _Val_sem_cna:
   537                           	callstack 0
   538   00003A                     	ds	1
   539                           
   540                           	psect	cstackCOMRAM
   541   000001                     __pcstackCOMRAM:
   542                           	callstack 0
   543   000001                     ?___awdiv:
   544                           	callstack 0
   545   000001                     ?___awmod:
   546                           	callstack 0
   547   000001                     ?___lwdiv:
   548                           	callstack 0
   549   000001                     lecture_8bit_analogique@ret:
   550                           	callstack 0
   551   000001                     write_d_aff@data:
   552                           	callstack 0
   553   000001                     write_c_aff@command:
   554                           	callstack 0
   555   000001                     check_status_ok@res:
   556                           	callstack 0
   557   000001                     delai_us_char@ucdelai:
   558                           	callstack 0
   559   000001                     tp_delai@itpd:
   560                           	callstack 0
   561   000001                     tache4@a:
   562                           	callstack 0
   563   000001                     tache5@a:
   564                           	callstack 0
   565   000001                     stid_delai_us@isdu:
   566                           	callstack 0
   567   000001                     ___awdiv@dividend:
   568                           	callstack 0
   569   000001                     ___awmod@dividend:
   570                           	callstack 0
   571   000001                     ___lwdiv@dividend:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x0
   575   000001                     	ds	1
   576   000002                     lecture_8bit_analogique@channel:
   577                           	callstack 0
   578   000002                     wait_status_ok@err:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x1
   582   000002                     	ds	1
   583   000003                     wait_status_ok@status:
   584                           	callstack 0
   585   000003                     lecture_normale@stid_id:
   586                           	callstack 0
   587   000003                     ___awdiv@divisor:
   588                           	callstack 0
   589   000003                     ___awmod@divisor:
   590                           	callstack 0
   591   000003                     ___lwdiv@divisor:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x2
   595   000003                     	ds	1
   596   000004                     wait_status_ok@res:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x3
   600   000004                     	ds	1
   601   000005                     command@cmd:
   602                           	callstack 0
   603   000005                     d1command@cmd:
   604                           	callstack 0
   605   000005                     d2command@d2:
   606                           	callstack 0
   607   000005                     lecture_normale@temps_attente:
   608                           	callstack 0
   609   000005                     ___awdiv@counter:
   610                           	callstack 0
   611   000005                     ___awmod@counter:
   612                           	callstack 0
   613   000005                     ___lwdiv@quotient:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x4
   617   000005                     	ds	1
   618   000006                     d1command@d1:
   619                           	callstack 0
   620   000006                     d2command@cmd:
   621                           	callstack 0
   622   000006                     lecture_normale@n_octet:
   623                           	callstack 0
   624   000006                     ___awdiv@sign:
   625                           	callstack 0
   626   000006                     ___awmod@sign:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x5
   630   000006                     	ds	1
   631   000007                     d1command@res:
   632                           	callstack 0
   633   000007                     d2command@d1:
   634                           	callstack 0
   635   000007                     lecture_normale@n_bit:
   636                           	callstack 0
   637   000007                     ___lwdiv@counter:
   638                           	callstack 0
   639   000007                     ___awdiv@quotient:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x6
   643   000007                     	ds	1
   644   000008                     ??_tache2:
   645   000008                     d2command@res:
   646                           	callstack 0
   647   000008                     draw_char@dccar:
   648                           	callstack 0
   649   000008                     draw_hex8@octet:
   650                           	callstack 0
   651   000008                     lecture_normale@octet:
   652                           	callstack 0
   653   000008                     draw_string@tableau:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x7
   657   000008                     	ds	1
   658   000009                     tache6@n:
   659                           	callstack 0
   660   000009                     initialisation_afficheur@error_count:
   661                           	callstack 0
   662   000009                     draw_hex8@c:
   663                           	callstack 0
   664   000009                     goto_lico@colonne:
   665                           	callstack 0
   666   000009                     plot1@y:
   667                           	callstack 0
   668   000009                     clear_text@add:
   669                           	callstack 0
   670   000009                     clear_graphics@add:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x8
   674   000009                     	ds	1
   675   00000A                     ??_goto_lico:
   676   00000A                     ??_plot1:
   677   00000A                     tache2@ix:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x9
   681   00000A                     	ds	2
   682   00000C                     goto_lico@ligne:
   683                           	callstack 0
   684   00000C                     tache2@iy:
   685                           	callstack 0
   686   00000C                     plot1@add:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xB
   690   00000C                     	ds	1
   691   00000D                     goto_lico@adr:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0xC
   695   00000D                     	ds	1
   696   00000E                     tache2@hx:
   697                           	callstack 0
   698   00000E                     plot1@x:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0xD
   702   00000E                     	ds	1
   703   00000F                     tache2@lx:
   704                           	callstack 0
   705   00000F                     clear_line@line:
   706                           	callstack 0
   707   00000F                     draw_square@y1:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0xE
   711   00000F                     	ds	1
   712   000010                     tache2@hy:
   713                           	callstack 0
   714   000010                     clear_line@column:
   715                           	callstack 0
   716   000010                     draw_square@x2:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0xF
   720   000010                     	ds	1
   721   000011                     tache2@ly:
   722                           	callstack 0
   723   000011                     draw_square@y2:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x10
   727   000011                     	ds	1
   728   000012                     draw_square@x1:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x11
   732   000012                     	ds	1
   733   000013                     draw_square@x:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x12
   737   000013                     	ds	1
   738   000014                     draw_square@y:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x13
   742   000014                     	ds	1
   743   000015                     tache1@i:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x14
   747   000015                     	ds	1
   748   000016                     ??_fonction_d_interruption:
   749                           
   750                           ; 1 bytes @ 0x15
   751   000016                     	ds	12
   752   000022                     initialisation_du_systeme@temp:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x21
   756   000022                     	ds	1
   757   000023                     
   758 ;; *************** function _initialisation_du_systeme *****************
   759 ;; Defined at:
   760 ;;		line 131 in file "systeme.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  temp            1   33[COMRAM] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;Total ram usage:        1 bytes
   779 ;; Hardware stack levels used: 1
   780 ;; Hardware stack levels required when called: 7
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text1
   789   001450                     __ptext1:
   790                           	callstack 0
   791   001450                     _initialisation_du_systeme:
   792                           	callstack 23
   793                           
   794                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   795                           
   796                           ;incstack = 0
   797   001450  0E01               	movlw	1
   798   001452  0100               	movlb	0	; () banked
   799   001454  6F65               	movwf	101,b
   800                           
   801                           ;systeme.c: 138: queue[0]=1;
   802   001456  0E01               	movlw	1
   803   001458  6F69               	movwf	105,b
   804                           
   805                           ;systeme.c: 139: queue[1]=2;
   806   00145A  0E02               	movlw	2
   807   00145C  6F6A               	movwf	106,b
   808                           
   809                           ;systeme.c: 140: queue[2]=3;
   810   00145E  0E03               	movlw	3
   811   001460  6F6B               	movwf	107,b
   812                           
   813                           ;systeme.c: 141: queue[3]=4;
   814   001462  0E04               	movlw	4
   815   001464  6F6C               	movwf	108,b
   816                           
   817                           ;systeme.c: 142: queue[4]=5;
   818   001466  0E05               	movlw	5
   819   001468  6F6D               	movwf	109,b
   820                           
   821                           ;systeme.c: 143: queue[5]=6;
   822   00146A  0E06               	movlw	6
   823   00146C  6F6E               	movwf	110,b
   824                           
   825                           ;systeme.c: 145: pointeur_de_tache=6-1;
   826   00146E  0E05               	movlw	5
   827   001470  6F70               	movwf	112,b
   828                           
   829                           ; BSR set to: 0
   830                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   831   001472  0E69               	movlw	105
   832   001474  2570               	addwf	112,w,b
   833   001476  6ED9               	movwf	fsr2l,c
   834   001478  6ADA               	clrf	fsr2h,c
   835   00147A  0E00               	movlw	0
   836   00147C  22DA               	addwfc	fsr2h,f,c
   837   00147E  50DF               	movf	indf2,w,c
   838   001480  6F6F               	movwf	111,b
   839                           
   840                           ; BSR set to: 0
   841                           ;systeme.c: 151: temp=STKPTR;
   842   001482  CFFC F022          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   843                           
   844                           ; BSR set to: 0
   845                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   846   001486  0E02               	movlw	2
   847   001488  6EFC               	movwf	252,c	;volatile
   848                           
   849                           ; BSR set to: 0
   850   00148A  0ECC               	movlw	low _tache1
   851   00148C  6E2F               	movwf	_fptr^0,c
   852   00148E  0E10               	movlw	high _tache1
   853   001490  6E30               	movwf	(_fptr+1)^0,c
   854   001492  0E00               	movlw	low (_tache1 shr (0+16))
   855   001494  6E31               	movwf	(_fptr+2)^0,c
   856                           
   857                           ; BSR set to: 0
   858   001496  C02F  F034         	movff	_fptr,_val_tos
   859   00149A  C030  F035         	movff	_fptr+1,_val_tos+1
   860                           
   861                           ; BSR set to: 0
   862   00149E  0E34               	movlw	low _val_tos
   863   0014A0  6E32               	movwf	_puc^0,c
   864   0014A2  0E00               	movlw	high _val_tos
   865   0014A4  6E33               	movwf	(_puc+1)^0,c
   866                           
   867                           ; BSR set to: 0
   868   0014A6  C032  FFD9         	movff	_puc,fsr2l
   869   0014AA  C033  FFDA         	movff	_puc+1,fsr2h
   870   0014AE  50DF               	movf	indf2,w,c
   871   0014B0  6EFD               	movwf	253,c	;volatile
   872                           
   873                           ; BSR set to: 0
   874   0014B2  4A32               	infsnz	_puc^0,f,c
   875   0014B4  2A33               	incf	(_puc+1)^0,f,c
   876                           
   877                           ; BSR set to: 0
   878   0014B6  C032  FFD9         	movff	_puc,fsr2l
   879   0014BA  C033  FFDA         	movff	_puc+1,fsr2h
   880   0014BE  50DF               	movf	indf2,w,c
   881   0014C0  6EFE               	movwf	254,c	;volatile
   882                           
   883                           ; BSR set to: 0
   884   0014C2  4A32               	infsnz	_puc^0,f,c
   885   0014C4  2A33               	incf	(_puc+1)^0,f,c
   886                           
   887                           ; BSR set to: 0
   888   0014C6  C032  FFD9         	movff	_puc,fsr2l
   889   0014CA  C033  FFDA         	movff	_puc+1,fsr2h
   890   0014CE  50DF               	movf	indf2,w,c
   891   0014D0  6EFF               	movwf	255,c	;volatile
   892                           
   893                           ; BSR set to: 0
   894                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   895   0014D2  0E07               	movlw	7
   896   0014D4  6EFC               	movwf	252,c	;volatile
   897   0014D6  0E88               	movlw	low _tache2
   898   0014D8  6E2F               	movwf	_fptr^0,c
   899   0014DA  0E16               	movlw	high _tache2
   900   0014DC  6E30               	movwf	(_fptr+1)^0,c
   901   0014DE  0E00               	movlw	low (_tache2 shr (0+16))
   902   0014E0  6E31               	movwf	(_fptr+2)^0,c
   903                           
   904                           ; BSR set to: 0
   905   0014E2  C02F  F034         	movff	_fptr,_val_tos
   906   0014E6  C030  F035         	movff	_fptr+1,_val_tos+1
   907   0014EA  0E34               	movlw	low _val_tos
   908   0014EC  6E32               	movwf	_puc^0,c
   909   0014EE  0E00               	movlw	high _val_tos
   910   0014F0  6E33               	movwf	(_puc+1)^0,c
   911                           
   912                           ; BSR set to: 0
   913   0014F2  C032  FFD9         	movff	_puc,fsr2l
   914   0014F6  C033  FFDA         	movff	_puc+1,fsr2h
   915   0014FA  50DF               	movf	indf2,w,c
   916   0014FC  6EFD               	movwf	253,c	;volatile
   917                           
   918                           ; BSR set to: 0
   919   0014FE  4A32               	infsnz	_puc^0,f,c
   920   001500  2A33               	incf	(_puc+1)^0,f,c
   921                           
   922                           ; BSR set to: 0
   923   001502  C032  FFD9         	movff	_puc,fsr2l
   924   001506  C033  FFDA         	movff	_puc+1,fsr2h
   925   00150A  50DF               	movf	indf2,w,c
   926   00150C  6EFE               	movwf	254,c	;volatile
   927                           
   928                           ; BSR set to: 0
   929   00150E  4A32               	infsnz	_puc^0,f,c
   930   001510  2A33               	incf	(_puc+1)^0,f,c
   931                           
   932                           ; BSR set to: 0
   933   001512  C032  FFD9         	movff	_puc,fsr2l
   934   001516  C033  FFDA         	movff	_puc+1,fsr2h
   935   00151A  50DF               	movf	indf2,w,c
   936   00151C  6EFF               	movwf	255,c	;volatile
   937                           
   938                           ; BSR set to: 0
   939                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   940   00151E  0E0C               	movlw	12
   941   001520  6EFC               	movwf	252,c	;volatile
   942                           
   943                           ; BSR set to: 0
   944   001522  0E62               	movlw	low _tache3
   945   001524  6E2F               	movwf	_fptr^0,c
   946   001526  0E18               	movlw	high _tache3
   947   001528  6E30               	movwf	(_fptr+1)^0,c
   948   00152A  0E00               	movlw	low (_tache3 shr (0+16))
   949   00152C  6E31               	movwf	(_fptr+2)^0,c
   950                           
   951                           ; BSR set to: 0
   952   00152E  C02F  F034         	movff	_fptr,_val_tos
   953   001532  C030  F035         	movff	_fptr+1,_val_tos+1
   954                           
   955                           ; BSR set to: 0
   956   001536  0E34               	movlw	low _val_tos
   957   001538  6E32               	movwf	_puc^0,c
   958   00153A  0E00               	movlw	high _val_tos
   959   00153C  6E33               	movwf	(_puc+1)^0,c
   960                           
   961                           ; BSR set to: 0
   962   00153E  C032  FFD9         	movff	_puc,fsr2l
   963   001542  C033  FFDA         	movff	_puc+1,fsr2h
   964   001546  50DF               	movf	indf2,w,c
   965   001548  6EFD               	movwf	253,c	;volatile
   966                           
   967                           ; BSR set to: 0
   968   00154A  4A32               	infsnz	_puc^0,f,c
   969   00154C  2A33               	incf	(_puc+1)^0,f,c
   970                           
   971                           ; BSR set to: 0
   972   00154E  C032  FFD9         	movff	_puc,fsr2l
   973   001552  C033  FFDA         	movff	_puc+1,fsr2h
   974   001556  50DF               	movf	indf2,w,c
   975   001558  6EFE               	movwf	254,c	;volatile
   976                           
   977                           ; BSR set to: 0
   978   00155A  4A32               	infsnz	_puc^0,f,c
   979   00155C  2A33               	incf	(_puc+1)^0,f,c
   980                           
   981                           ; BSR set to: 0
   982   00155E  C032  FFD9         	movff	_puc,fsr2l
   983   001562  C033  FFDA         	movff	_puc+1,fsr2h
   984   001566  50DF               	movf	indf2,w,c
   985   001568  6EFF               	movwf	255,c	;volatile
   986                           
   987                           ; BSR set to: 0
   988                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   989   00156A  0E11               	movlw	17
   990   00156C  6EFC               	movwf	252,c	;volatile
   991   00156E  0E40               	movlw	low _tache4
   992   001570  6E2F               	movwf	_fptr^0,c
   993   001572  0E19               	movlw	high _tache4
   994   001574  6E30               	movwf	(_fptr+1)^0,c
   995   001576  0E00               	movlw	low (_tache4 shr (0+16))
   996   001578  6E31               	movwf	(_fptr+2)^0,c
   997                           
   998                           ; BSR set to: 0
   999   00157A  C02F  F034         	movff	_fptr,_val_tos
  1000   00157E  C030  F035         	movff	_fptr+1,_val_tos+1
  1001   001582  0E34               	movlw	low _val_tos
  1002   001584  6E32               	movwf	_puc^0,c
  1003   001586  0E00               	movlw	high _val_tos
  1004   001588  6E33               	movwf	(_puc+1)^0,c
  1005                           
  1006                           ; BSR set to: 0
  1007   00158A  C032  FFD9         	movff	_puc,fsr2l
  1008   00158E  C033  FFDA         	movff	_puc+1,fsr2h
  1009   001592  50DF               	movf	indf2,w,c
  1010   001594  6EFD               	movwf	253,c	;volatile
  1011                           
  1012                           ; BSR set to: 0
  1013   001596  4A32               	infsnz	_puc^0,f,c
  1014   001598  2A33               	incf	(_puc+1)^0,f,c
  1015                           
  1016                           ; BSR set to: 0
  1017   00159A  C032  FFD9         	movff	_puc,fsr2l
  1018   00159E  C033  FFDA         	movff	_puc+1,fsr2h
  1019   0015A2  50DF               	movf	indf2,w,c
  1020   0015A4  6EFE               	movwf	254,c	;volatile
  1021                           
  1022                           ; BSR set to: 0
  1023   0015A6  4A32               	infsnz	_puc^0,f,c
  1024   0015A8  2A33               	incf	(_puc+1)^0,f,c
  1025                           
  1026                           ; BSR set to: 0
  1027   0015AA  C032  FFD9         	movff	_puc,fsr2l
  1028   0015AE  C033  FFDA         	movff	_puc+1,fsr2h
  1029   0015B2  50DF               	movf	indf2,w,c
  1030   0015B4  6EFF               	movwf	255,c	;volatile
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1034   0015B6  0E16               	movlw	22
  1035   0015B8  6EFC               	movwf	252,c	;volatile
  1036                           
  1037                           ; BSR set to: 0
  1038   0015BA  0E7C               	movlw	low _tache5
  1039   0015BC  6E2F               	movwf	_fptr^0,c
  1040   0015BE  0E17               	movlw	high _tache5
  1041   0015C0  6E30               	movwf	(_fptr+1)^0,c
  1042   0015C2  0E00               	movlw	low (_tache5 shr (0+16))
  1043   0015C4  6E31               	movwf	(_fptr+2)^0,c
  1044                           
  1045                           ; BSR set to: 0
  1046   0015C6  C02F  F034         	movff	_fptr,_val_tos
  1047   0015CA  C030  F035         	movff	_fptr+1,_val_tos+1
  1048                           
  1049                           ; BSR set to: 0
  1050   0015CE  0E34               	movlw	low _val_tos
  1051   0015D0  6E32               	movwf	_puc^0,c
  1052   0015D2  0E00               	movlw	high _val_tos
  1053   0015D4  6E33               	movwf	(_puc+1)^0,c
  1054                           
  1055                           ; BSR set to: 0
  1056   0015D6  C032  FFD9         	movff	_puc,fsr2l
  1057   0015DA  C033  FFDA         	movff	_puc+1,fsr2h
  1058   0015DE  50DF               	movf	indf2,w,c
  1059   0015E0  6EFD               	movwf	253,c	;volatile
  1060                           
  1061                           ; BSR set to: 0
  1062   0015E2  4A32               	infsnz	_puc^0,f,c
  1063   0015E4  2A33               	incf	(_puc+1)^0,f,c
  1064                           
  1065                           ; BSR set to: 0
  1066   0015E6  C032  FFD9         	movff	_puc,fsr2l
  1067   0015EA  C033  FFDA         	movff	_puc+1,fsr2h
  1068   0015EE  50DF               	movf	indf2,w,c
  1069   0015F0  6EFE               	movwf	254,c	;volatile
  1070                           
  1071                           ; BSR set to: 0
  1072   0015F2  4A32               	infsnz	_puc^0,f,c
  1073   0015F4  2A33               	incf	(_puc+1)^0,f,c
  1074                           
  1075                           ; BSR set to: 0
  1076   0015F6  C032  FFD9         	movff	_puc,fsr2l
  1077   0015FA  C033  FFDA         	movff	_puc+1,fsr2h
  1078   0015FE  50DF               	movf	indf2,w,c
  1079   001600  6EFF               	movwf	255,c	;volatile
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1083   001602  0E1B               	movlw	27
  1084   001604  6EFC               	movwf	252,c	;volatile
  1085   001606  0E04               	movlw	low _tache6
  1086   001608  6E2F               	movwf	_fptr^0,c
  1087   00160A  0E21               	movlw	high _tache6
  1088   00160C  6E30               	movwf	(_fptr+1)^0,c
  1089   00160E  0E00               	movlw	low (_tache6 shr (0+16))
  1090   001610  6E31               	movwf	(_fptr+2)^0,c
  1091                           
  1092                           ; BSR set to: 0
  1093   001612  C02F  F034         	movff	_fptr,_val_tos
  1094   001616  C030  F035         	movff	_fptr+1,_val_tos+1
  1095   00161A  0E34               	movlw	low _val_tos
  1096   00161C  6E32               	movwf	_puc^0,c
  1097   00161E  0E00               	movlw	high _val_tos
  1098   001620  6E33               	movwf	(_puc+1)^0,c
  1099                           
  1100                           ; BSR set to: 0
  1101   001622  C032  FFD9         	movff	_puc,fsr2l
  1102   001626  C033  FFDA         	movff	_puc+1,fsr2h
  1103   00162A  50DF               	movf	indf2,w,c
  1104   00162C  6EFD               	movwf	253,c	;volatile
  1105                           
  1106                           ; BSR set to: 0
  1107   00162E  4A32               	infsnz	_puc^0,f,c
  1108   001630  2A33               	incf	(_puc+1)^0,f,c
  1109                           
  1110                           ; BSR set to: 0
  1111   001632  C032  FFD9         	movff	_puc,fsr2l
  1112   001636  C033  FFDA         	movff	_puc+1,fsr2h
  1113   00163A  50DF               	movf	indf2,w,c
  1114   00163C  6EFE               	movwf	254,c	;volatile
  1115                           
  1116                           ; BSR set to: 0
  1117   00163E  4A32               	infsnz	_puc^0,f,c
  1118   001640  2A33               	incf	(_puc+1)^0,f,c
  1119                           
  1120                           ; BSR set to: 0
  1121   001642  C032  FFD9         	movff	_puc,fsr2l
  1122   001646  C033  FFDA         	movff	_puc+1,fsr2h
  1123   00164A  50DF               	movf	indf2,w,c
  1124   00164C  6EFF               	movwf	255,c	;volatile
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;systeme.c: 162: STKPTR=temp;
  1128   00164E  C022  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;systeme.c: 165: STKPTR_T1=2;
  1132   001652  0E02               	movlw	2
  1133   001654  0101               	movlb	1	; () banked
  1134   001656  6F03               	movwf	3,b
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;systeme.c: 166: STKPTR_T2=7;
  1138   001658  0E07               	movlw	7
  1139   00165A  0102               	movlb	2	; () banked
  1140   00165C  6F03               	movwf	3,b
  1141                           
  1142                           ; BSR set to: 2
  1143                           ;systeme.c: 167: STKPTR_T3=12;
  1144   00165E  0E0C               	movlw	12
  1145   001660  0103               	movlb	3	; () banked
  1146   001662  6F03               	movwf	3,b
  1147                           
  1148                           ; BSR set to: 3
  1149                           ;systeme.c: 168: STKPTR_T4=17;
  1150   001664  0E11               	movlw	17
  1151   001666  0104               	movlb	4	; () banked
  1152   001668  6F03               	movwf	3,b
  1153                           
  1154                           ; BSR set to: 4
  1155                           ;systeme.c: 169: STKPTR_T5=22;
  1156   00166A  0E16               	movlw	22
  1157   00166C  0105               	movlb	5	; () banked
  1158   00166E  6F03               	movwf	3,b
  1159                           
  1160                           ; BSR set to: 5
  1161                           ;systeme.c: 170: STKPTR_T6=27;
  1162   001670  0E1B               	movlw	27
  1163   001672  0106               	movlb	6	; () banked
  1164   001674  6F03               	movwf	3,b
  1165                           
  1166                           ; BSR set to: 6
  1167                           ;systeme.c: 173: Tick_Count=0;
  1168   001676  0E00               	movlw	0
  1169   001678  0100               	movlb	0	; () banked
  1170   00167A  6F72               	movwf	114,b
  1171   00167C  0E00               	movlw	0
  1172   00167E  6F71               	movwf	113,b
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;systeme.c: 175: T0CON=0x01;
  1176   001680  0E01               	movlw	1
  1177   001682  6ED5               	movwf	213,c	;volatile
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;systeme.c: 176: T0IE=1;
  1181   001684  8AF2               	bsf	4082,5,c	;volatile
  1182                           
  1183                           ; BSR set to: 0
  1184   001686  0012               	return		;funcret
  1185   001688                     __end_of_initialisation_du_systeme:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _initialisation_des_ports *****************
  1189 ;; Defined at:
  1190 ;;		line 23 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 7
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text2
  1219   001FD8                     __ptext2:
  1220                           	callstack 0
  1221   001FD8                     _initialisation_des_ports:
  1222                           	callstack 23
  1223                           
  1224                           ;main.c: 26: MEMCON=0xA0;
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;incstack = 0
  1228   001FD8  0EA0               	movlw	160
  1229   001FDA  010F               	movlb	15	; () banked
  1230   001FDC  6F26               	movwf	38,b	;volatile
  1231                           
  1232                           ;main.c: 29: ANCON0=0x00;
  1233   001FDE  0E00               	movlw	0
  1234   001FE0  6F25               	movwf	37,b	;volatile
  1235                           
  1236                           ;main.c: 30: ANCON1=0x00;
  1237   001FE2  0E00               	movlw	0
  1238   001FE4  6F24               	movwf	36,b	;volatile
  1239                           
  1240                           ;main.c: 31: ANCON2=0x00;
  1241   001FE6  0E00               	movlw	0
  1242   001FE8  6F23               	movwf	35,b	;volatile
  1243                           
  1244                           ; BSR set to: 15
  1245                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1246   001FEA  8125               	bsf	37,0,b	;volatile
  1247                           
  1248                           ; BSR set to: 15
  1249                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1250   001FEC  8325               	bsf	37,1,b	;volatile
  1251                           
  1252                           ; BSR set to: 15
  1253                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1254   001FEE  8525               	bsf	37,2,b	;volatile
  1255                           
  1256                           ; BSR set to: 15
  1257                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1258   001FF0  8725               	bsf	37,3,b	;volatile
  1259                           
  1260                           ; BSR set to: 15
  1261                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1262   001FF2  8524               	bsf	36,2,b	;volatile
  1263                           
  1264                           ; BSR set to: 15
  1265                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1266   001FF4  8724               	bsf	36,3,b	;volatile
  1267                           
  1268                           ; BSR set to: 15
  1269                           ;main.c: 41: LATCbits.LATC2=1;
  1270   001FF6  848B               	bsf	139,2,c	;volatile
  1271                           
  1272                           ; BSR set to: 15
  1273                           ;main.c: 42: LATCbits.LATC1=1;
  1274   001FF8  828B               	bsf	139,1,c	;volatile
  1275                           
  1276                           ; BSR set to: 15
  1277                           ;main.c: 43: LATGbits.LATG0=1;
  1278   001FFA  808F               	bsf	143,0,c	;volatile
  1279                           
  1280                           ; BSR set to: 15
  1281                           ;main.c: 46: TRISCbits.TRISC2=0;
  1282   001FFC  9494               	bcf	148,2,c	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;main.c: 47: TRISCbits.TRISC1=0;
  1286   001FFE  9294               	bcf	148,1,c	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;main.c: 48: TRISGbits.TRISG0=0;
  1290   002000  9098               	bcf	152,0,c	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;main.c: 49: TRISGbits.TRISG3=0;
  1294   002002  9698               	bcf	152,3,c	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;main.c: 50: TRISGbits.TRISG4=0;
  1298   002004  9898               	bcf	152,4,c	;volatile
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;main.c: 51: TRISDbits.TRISD2=0;
  1302   002006  9495               	bcf	149,2,c	;volatile
  1303                           
  1304                           ; BSR set to: 15
  1305                           ;main.c: 52: TRISDbits.TRISD3=0;
  1306   002008  9695               	bcf	149,3,c	;volatile
  1307                           
  1308                           ; BSR set to: 15
  1309                           ;main.c: 55: INTCON2bits.RBPU=0;
  1310   00200A  9EF1               	bcf	241,7,c	;volatile
  1311                           
  1312                           ; BSR set to: 15
  1313                           ;main.c: 56: PADCFG1bits.REPU=1;
  1314   00200C  8D53               	bsf	83,6,b	;volatile
  1315                           
  1316                           ; BSR set to: 15
  1317   00200E  0012               	return		;funcret
  1318   002010                     __end_of_initialisation_des_ports:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _Init *****************
  1322 ;; Defined at:
  1323 ;;		line 4 in file "semaphore.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  sem             1  [STACK] unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1  [STACK] void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 7
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;;		_tache1
  1349 ;; This function uses a reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text3
  1353   00212C                     __ptext3:
  1354                           	callstack 0
  1355   00212C                     _Init:
  1356                           	callstack 20
  1357                           
  1358                           ;semaphore.c: 6: switch (sem)
  1359                           
  1360                           ; BSR set to: 15
  1361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1362                           ;incstack = 0
  1363   00212C  D006               	goto	l2714
  1364   00212E                     l2710:
  1365                           
  1366                           ;semaphore.c: 9: Val_sem_cna=1;
  1367   00212E  0E01               	movlw	1
  1368   002130  6E3A               	movwf	_Val_sem_cna^0,c
  1369                           
  1370                           ;semaphore.c: 10: break;
  1371   002132  D00B               	goto	l1468
  1372   002134                     l2712:
  1373                           
  1374                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1375   002134  0E01               	movlw	1
  1376   002136  6E39               	movwf	_Val_sem_rxtx^0,c
  1377                           
  1378                           ;semaphore.c: 13: break;
  1379   002138  D008               	goto	l1468
  1380   00213A                     l2714:
  1381                           
  1382                           ;stkvar	Init@sem @ sp[(0)+-1]
  1383   00213A  0EFF               	movlw	-1
  1384   00213C  50E3               	movf	plusw1,w,c
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 2, Range of values is 1 to 2
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte            7     4 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392   00213E  0A01               	xorlw	1	; case 1
  1393   002140  B4D8               	btfsc	status,2,c
  1394   002142  D7F5               	goto	l2710
  1395   002144  0A03               	xorlw	3	; case 2
  1396   002146  B4D8               	btfsc	status,2,c
  1397   002148  D7F5               	goto	l2712
  1398   00214A                     l1468:
  1399                           
  1400                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1401   00214A  52E5               	movf	postdec1,f,c
  1402   00214C  0012               	return		;funcret
  1403   00214E                     __end_of_Init:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _fonction_d_interruption *****************
  1407 ;; Defined at:
  1408 ;;		line 17 in file "systeme.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;Total ram usage:       12 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 6
  1429 ;; This function calls:
  1430 ;;		_tache1
  1431 ;;		_tache2
  1432 ;;		_tache3
  1433 ;;		_tache4
  1434 ;;		_tache5
  1435 ;;		_tache6
  1436 ;; This function is called by:
  1437 ;;		Interrupt level 2
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	intcode
  1442   000008                     __pintcode:
  1443                           	callstack 0
  1444   000008                     _fonction_d_interruption:
  1445                           	callstack 23
  1446                           
  1447                           ;incstack = 0
  1448   000008  CFE9 F016          	movff	fsr0l,??_fonction_d_interruption
  1449   00000C  CFEA F017          	movff	fsr0h,??_fonction_d_interruption+1
  1450   000010  CFE1 F018          	movff	fsr1l,??_fonction_d_interruption+2
  1451   000014  CFE2 F019          	movff	fsr1h,??_fonction_d_interruption+3
  1452   000018  CFD9 F01A          	movff	fsr2l,??_fonction_d_interruption+4
  1453   00001C  CFDA F01B          	movff	fsr2h,??_fonction_d_interruption+5
  1454   000020  CFF3 F01C          	movff	prodl,??_fonction_d_interruption+6
  1455   000024  CFF4 F01D          	movff	prodh,??_fonction_d_interruption+7
  1456   000028  CFF6 F01E          	movff	tblptrl,??_fonction_d_interruption+8
  1457   00002C  CFF7 F01F          	movff	tblptrh,??_fonction_d_interruption+9
  1458   000030  CFF8 F020          	movff	tblptru,??_fonction_d_interruption+10
  1459   000034  CFF5 F021          	movff	tablat,??_fonction_d_interruption+11
  1460   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1461                           
  1462                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1463   00003C  CFD8 F061          	movff	status,97	;volatile
  1464   000040  0100               	movlb	0	; () banked
  1465   000042  6F60               	movwf	96,b
  1466                           
  1467                           ; BSR set to: 0
  1468   000044  CFE0 F062          	movff	bsr,98	;volatile
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1472   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1473                           
  1474                           ; BSR set to: 0
  1475   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;systeme.c: 24: if(T0IE && T0IF)
  1479   000050  BAF2               	btfsc	4082,5,c	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482   000052  A4F2               	btfss	4082,2,c	;volatile
  1483   000054  D143               	goto	i2l5118
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1487   000056  0565               	decf	101,w,b
  1488   000058  A4D8               	btfss	status,2,c
  1489   00005A  D004               	goto	i2l4818
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1493   00005C  0E1B               	movlw	27
  1494   00005E  6EFC               	movwf	252,c	;volatile
  1495                           
  1496                           ;systeme.c: 29: DEMARRAGE=0;
  1497   000060  0E00               	movlw	0
  1498   000062  6F65               	movwf	101,b
  1499   000064                     i2l4818:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1503   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1504                           
  1505                           ;systeme.c: 35: FSR0L=0;
  1506   000068  0E00               	movlw	0
  1507   00006A  6EE9               	movwf	233,c	;volatile
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1511   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1512                           
  1513                           ; BSR set to: 0
  1514   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1515                           
  1516                           ; BSR set to: 0
  1517   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1518                           
  1519                           ; BSR set to: 0
  1520   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1524   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1525                           
  1526                           ; BSR set to: 0
  1527   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1528                           
  1529                           ; BSR set to: 0
  1530   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1531                           
  1532                           ; BSR set to: 0
  1533   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1537   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1538                           
  1539                           ; BSR set to: 0
  1540   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1541                           
  1542                           ; BSR set to: 0
  1543   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1544                           
  1545                           ; BSR set to: 0
  1546   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1550   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1551                           
  1552                           ; BSR set to: 0
  1553   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1554                           
  1555                           ; BSR set to: 0
  1556   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1557                           
  1558                           ; BSR set to: 0
  1559   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1563   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1564                           
  1565                           ; BSR set to: 0
  1566   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1567                           
  1568                           ;systeme.c: 44: FSR1H=0;
  1569   0000B4  0E00               	movlw	0
  1570   0000B6  6EE2               	movwf	226,c	;volatile
  1571                           
  1572                           ;systeme.c: 45: FSR1L=0;
  1573   0000B8  0E00               	movlw	0
  1574   0000BA  6EE1               	movwf	225,c	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1578   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1579                           
  1580                           ; BSR set to: 0
  1581   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1582                           
  1583                           ; BSR set to: 0
  1584   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1585                           
  1586                           ; BSR set to: 0
  1587   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1591   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1592                           
  1593                           ; BSR set to: 0
  1594   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1595                           
  1596                           ; BSR set to: 0
  1597   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1598                           
  1599                           ; BSR set to: 0
  1600   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1604   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1605                           
  1606                           ; BSR set to: 0
  1607   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1608                           
  1609                           ; BSR set to: 0
  1610   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1617   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1630   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1634                           
  1635                           ; BSR set to: 0
  1636   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1643   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1644                           
  1645                           ; BSR set to: 0
  1646   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1647                           
  1648                           ; BSR set to: 0
  1649   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1650                           
  1651                           ; BSR set to: 0
  1652   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1656   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1669   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1676                           
  1677                           ; BSR set to: 0
  1678   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1682   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1695   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1699                           
  1700                           ; BSR set to: 0
  1701   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1708   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1709                           
  1710                           ; BSR set to: 0
  1711   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1715                           
  1716                           ; BSR set to: 0
  1717   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1721   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1722                           
  1723                           ; BSR set to: 0
  1724   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1731                           
  1732                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1733   00017C  0E8A               	movlw	138
  1734   00017E  6ED7               	movwf	215,c	;volatile
  1735   000180  0ECF               	movlw	207
  1736   000182  6ED6               	movwf	214,c	;volatile
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;systeme.c: 63: T0IF=0;
  1740   000184  94F2               	bcf	4082,2,c	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;systeme.c: 65: Tick_Count++;
  1744   000186  4B71               	infsnz	113,f,b
  1745   000188  2B72               	incf	114,f,b
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;systeme.c: 67: pointeur_de_tache++;
  1749   00018A  2B70               	incf	112,f,b
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1753   00018C  0E06               	movlw	6
  1754   00018E  1970               	xorwf	112,w,b
  1755   000190  A4D8               	btfss	status,2,c
  1756   000192  D002               	goto	i2l4962
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;systeme.c: 69: pointeur_de_tache=0;
  1760   000194  0E00               	movlw	0
  1761   000196  6F70               	movwf	112,b
  1762   000198                     i2l4962:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1766   000198  0E69               	movlw	105
  1767   00019A  2570               	addwf	112,w,b
  1768   00019C  6ED9               	movwf	fsr2l,c
  1769   00019E  6ADA               	clrf	fsr2h,c
  1770   0001A0  0E00               	movlw	0
  1771   0001A2  22DA               	addwfc	fsr2h,f,c
  1772   0001A4  50DF               	movf	indf2,w,c
  1773   0001A6  6F6F               	movwf	111,b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;systeme.c: 75: FSR1H=0;
  1777   0001A8  0E00               	movlw	0
  1778   0001AA  6EE2               	movwf	226,c	;volatile
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;systeme.c: 76: FSR1L=0;
  1782   0001AC  0E00               	movlw	0
  1783   0001AE  6EE1               	movwf	225,c	;volatile
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;systeme.c: 77: FSR0H=tache_active;
  1787   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;systeme.c: 78: FSR0L=18;
  1791   0001B4  0E12               	movlw	18
  1792   0001B6  6EE9               	movwf	233,c	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1796   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1800                           
  1801                           ; BSR set to: 0
  1802   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1803                           
  1804                           ; BSR set to: 0
  1805   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1809   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1810                           
  1811                           ; BSR set to: 0
  1812   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1813                           
  1814                           ; BSR set to: 0
  1815   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1816                           
  1817                           ; BSR set to: 0
  1818   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1822   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1835   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1836                           
  1837                           ; BSR set to: 0
  1838   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1848   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1849                           
  1850                           ; BSR set to: 0
  1851   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1852                           
  1853                           ; BSR set to: 0
  1854   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1855                           
  1856                           ; BSR set to: 0
  1857   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1861   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1862                           
  1863                           ; BSR set to: 0
  1864   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1865                           
  1866                           ; BSR set to: 0
  1867   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1874   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1878                           
  1879                           ; BSR set to: 0
  1880   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1887   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1888                           
  1889                           ; BSR set to: 0
  1890   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1894                           
  1895                           ; BSR set to: 0
  1896   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1900   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1901                           
  1902                           ; BSR set to: 0
  1903   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1904                           
  1905                           ; BSR set to: 0
  1906   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1913   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1914                           
  1915                           ; BSR set to: 0
  1916   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1920                           
  1921                           ; BSR set to: 0
  1922   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1926   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1927                           
  1928                           ; BSR set to: 0
  1929   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1930                           
  1931                           ; BSR set to: 0
  1932   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1939   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1940                           
  1941                           ; BSR set to: 0
  1942   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;systeme.c: 96: FSR0H=tache_active;
  1952   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;systeme.c: 97: FSR0L=0;
  1956   00027C  0E00               	movlw	0
  1957   00027E  6EE9               	movwf	233,c	;volatile
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1961   000280  CFEE F060          	movff	postinc0,96	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964   000284  CFEE F061          	movff	postinc0,97	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967   000288  CFEE F062          	movff	postinc0,98	;volatile
  1968                           
  1969                           ; BSR set to: 0
  1970   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  1974   000290  CFEE F063          	movff	postinc0,99	;volatile
  1975                           
  1976                           ; BSR set to: 0
  1977   000294  CFEE F064          	movff	postinc0,100	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  1981                           
  1982                           ; BSR set to: 0
  1983   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  1987   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  1988                           
  1989                           ; BSR set to: 0
  1990   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  1991                           
  1992                           ; BSR set to: 0
  1993   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  1994                           
  1995                           ; BSR set to: 0
  1996   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2000   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2001                           
  2002                           ; BSR set to: 0
  2003   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2004                           
  2005                           ; BSR set to: 0
  2006   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2007                           
  2008                           ; BSR set to: 0
  2009   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2013   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2014                           
  2015                           ; BSR set to: 0
  2016   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2020   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2021                           
  2022                           ; BSR set to: 0
  2023   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2030   0002D4  5160               	movf	96,w,b
  2031                           
  2032                           ; BSR set to: 0
  2033   0002D6  C061 FFD8          	movff	97,status	;volatile
  2034   0002DA  0010               	retfie		;# 
  2035   0002DC                     i2l5118:
  2036                           
  2037                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2038   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2039   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2040   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2041                           
  2042                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2043   0002E8  0100               	movlb	0	; () banked
  2044   0002EA  5160               	movf	96,w,b
  2045                           
  2046                           ; BSR set to: 0
  2047   0002EC  C061 FFD8          	movff	97,status	;volatile
  2048   0002F0  0010               	retfie		;# 
  2049                           
  2050                           ;systeme.c: 123: tache1();
  2051   0002F2  EC66  F008         	call	_tache1	;wreg free
  2052                           
  2053                           ;systeme.c: 124: tache2();
  2054   0002F6  EC44  F00B         	call	_tache2	;wreg free
  2055                           
  2056                           ;systeme.c: 125: tache3();
  2057   0002FA  EC31  F00C         	call	_tache3	;wreg free
  2058                           
  2059                           ;systeme.c: 126: tache4();
  2060   0002FE  ECA0  F00C         	call	_tache4	;wreg free
  2061                           
  2062                           ;systeme.c: 127: tache5();
  2063   000302  ECBE  F00B         	call	_tache5	;wreg free
  2064                           
  2065                           ;systeme.c: 128: tache6();
  2066   000306  EC82  F010         	call	_tache6	;wreg free
  2067   00030A  C021  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2068   00030E  C020  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2069   000312  C01F  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2070   000316  C01E  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2071   00031A  C01D  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2072   00031E  C01C  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2073   000322  C01B  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2074   000326  C01A  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2075   00032A  C019  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2076   00032E  C018  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2077   000332  C017  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2078   000336  C016  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2079   00033A  0011               	retfie		f
  2080   00033C                     __end_of_fonction_d_interruption:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _tache6 *****************
  2084 ;; Defined at:
  2085 ;;		line 3 in file "T6.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  n               1    8[COMRAM] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:        1 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 2
  2106 ;; This function calls:
  2107 ;;		_lecture_normale
  2108 ;; This function is called by:
  2109 ;;		_fonction_d_interruption
  2110 ;;		_initialisation_du_systeme
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text5
  2115   002104                     __ptext5:
  2116                           	callstack 0
  2117   002104                     _tache6:
  2118                           	callstack 26
  2119                           
  2120                           ;T6.c: 7: {;T6.c: 8: n=lecture_normale(badge);
  2121                           
  2122                           ;incstack = 0
  2123                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2124   002104  0E75               	movlw	117
  2125   002106  6E03               	movwf	lecture_normale@stid_id^0,c
  2126   002108  0E00               	movlw	0
  2127   00210A  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2128   00210C  ECC4  F00D         	call	_lecture_normale	;wreg free
  2129   002110  6E09               	movwf	tache6@n^0,c
  2130                           
  2131                           ;T6.c: 9: if (n>0)
  2132   002112  5009               	movf	tache6@n^0,w,c
  2133   002114  B4D8               	btfsc	status,2,c
  2134   002116  D006               	goto	i2l4782
  2135                           
  2136                           ;T6.c: 10: {;T6.c: 11: if(n<10)
  2137   002118  0E0A               	movlw	10
  2138   00211A  6009               	cpfslt	tache6@n^0,c
  2139   00211C  D003               	goto	i2l4782
  2140                           
  2141                           ;T6.c: 12: {;T6.c: 13: n_octet_badge=n;
  2142   00211E  C009  F07F         	movff	tache6@n,127
  2143                           
  2144                           ;T6.c: 14: }
  2145   002122  D7F0               	goto	__ptext5
  2146   002124                     i2l4782:
  2147                           
  2148                           ;T6.c: 15: else;T6.c: 16: {;T6.c: 17: n_octet_badge=0;
  2149   002124  0E00               	movlw	0
  2150   002126  0100               	movlb	0	; () banked
  2151   002128  6F7F               	movwf	127,b
  2152   00212A  D7EC               	goto	__ptext5
  2153   00212C                     __end_of_tache6:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _lecture_normale *****************
  2157 ;; Defined at:
  2158 ;;		line 5 in file "stid.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2161 ;;		 -> badge(10), 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  octet           1    7[COMRAM] unsigned char 
  2164 ;;  n_bit           1    6[COMRAM] unsigned char 
  2165 ;;  n_octet         1    5[COMRAM] unsigned char 
  2166 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      unsigned char 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        6 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 1
  2183 ;; This function calls:
  2184 ;;		_stid_delai_us
  2185 ;; This function is called by:
  2186 ;;		_tache6
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text6
  2191   001B88                     __ptext6:
  2192                           	callstack 0
  2193   001B88                     _lecture_normale:
  2194                           	callstack 26
  2195                           
  2196                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;incstack = 0
  2200   001B88  8295               	bsf	149,1,c	;volatile
  2201                           
  2202                           ;stid.c: 10: LATDbits.LATD3=0;
  2203   001B8A  968C               	bcf	140,3,c	;volatile
  2204                           
  2205                           ;stid.c: 11: LATDbits.LATD2=0;
  2206   001B8C  948C               	bcf	140,2,c	;volatile
  2207                           
  2208                           ;stid.c: 12: stid_delai_us(100);
  2209   001B8E  0E00               	movlw	0
  2210   001B90  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2211   001B92  0E64               	movlw	100
  2212   001B94  6E01               	movwf	stid_delai_us@isdu^0,c
  2213   001B96  EC0D  F011         	call	_stid_delai_us	;wreg free
  2214                           
  2215                           ;stid.c: 13: LATDbits.LATD3=1;
  2216   001B9A  868C               	bsf	140,3,c	;volatile
  2217                           
  2218                           ;stid.c: 14: temps_attente=0;
  2219   001B9C  0E00               	movlw	0
  2220   001B9E  6E05               	movwf	lecture_normale@temps_attente^0,c
  2221   001BA0                     i2l4316:
  2222                           
  2223                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2224   001BA0  0E03               	movlw	3
  2225   001BA2  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2226   001BA4  0EE8               	movlw	232
  2227   001BA6  6E01               	movwf	stid_delai_us@isdu^0,c
  2228   001BA8  EC0D  F011         	call	_stid_delai_us	;wreg free
  2229                           
  2230                           ;stid.c: 18: temps_attente++;
  2231   001BAC  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2232                           
  2233                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2234   001BAE  A083               	btfss	131,0,c	;volatile
  2235   001BB0  D002               	goto	i2l4324
  2236                           
  2237                           ;stid.c: 20: temps_attente=65;
  2238   001BB2  0E41               	movlw	65
  2239   001BB4  6E05               	movwf	lecture_normale@temps_attente^0,c
  2240   001BB6                     i2l4324:
  2241                           
  2242                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2243   001BB6  0E40               	movlw	64
  2244   001BB8  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2245   001BBA  D7F2               	goto	i2l4316
  2246                           
  2247                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2248   001BBC  A083               	btfss	131,0,c	;volatile
  2249   001BBE  D033               	goto	i2l4360
  2250                           
  2251                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2252   001BC0  0E00               	movlw	0
  2253   001BC2  6E06               	movwf	lecture_normale@n_octet^0,c
  2254   001BC4                     i2l1581:
  2255                           
  2256                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2257   001BC4  0E00               	movlw	0
  2258   001BC6  6E08               	movwf	lecture_normale@octet^0,c
  2259                           
  2260                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2261   001BC8  0E00               	movlw	0
  2262   001BCA  6E07               	movwf	lecture_normale@n_bit^0,c
  2263   001BCC                     i2l1582:
  2264                           
  2265                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2266   001BCC  A283               	btfss	131,1,c	;volatile
  2267   001BCE  D003               	goto	i2l1584
  2268                           
  2269                           ;stid.c: 34: octet=(octet|0x01);
  2270   001BD0  5008               	movf	lecture_normale@octet^0,w,c
  2271   001BD2  0901               	iorlw	1
  2272   001BD4  6E08               	movwf	lecture_normale@octet^0,c
  2273   001BD6                     i2l1584:
  2274                           
  2275                           ;stid.c: 35: octet=octet<<1;
  2276   001BD6  5008               	movf	lecture_normale@octet^0,w,c
  2277   001BD8  2408               	addwf	lecture_normale@octet^0,w,c
  2278   001BDA  6E08               	movwf	lecture_normale@octet^0,c
  2279                           
  2280                           ;stid.c: 36: stid_delai_us(100);
  2281   001BDC  0E00               	movlw	0
  2282   001BDE  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2283   001BE0  0E64               	movlw	100
  2284   001BE2  6E01               	movwf	stid_delai_us@isdu^0,c
  2285   001BE4  EC0D  F011         	call	_stid_delai_us	;wreg free
  2286                           
  2287                           ;stid.c: 37: LATDbits.LATD2=1;
  2288   001BE8  848C               	bsf	140,2,c	;volatile
  2289                           
  2290                           ;stid.c: 38: stid_delai_us(500);
  2291   001BEA  0E01               	movlw	1
  2292   001BEC  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2293   001BEE  0EF4               	movlw	244
  2294   001BF0  6E01               	movwf	stid_delai_us@isdu^0,c
  2295   001BF2  EC0D  F011         	call	_stid_delai_us	;wreg free
  2296                           
  2297                           ;stid.c: 39: LATDbits.LATD2=0;
  2298   001BF6  948C               	bcf	140,2,c	;volatile
  2299                           
  2300                           ;stid.c: 40: stid_delai_us(400);
  2301   001BF8  0E01               	movlw	1
  2302   001BFA  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2303   001BFC  0E90               	movlw	144
  2304   001BFE  6E01               	movwf	stid_delai_us@isdu^0,c
  2305   001C00  EC0D  F011         	call	_stid_delai_us	;wreg free
  2306   001C04  2A07               	incf	lecture_normale@n_bit^0,f,c
  2307   001C06  0E07               	movlw	7
  2308   001C08  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2309   001C0A  D7E0               	goto	i2l1582
  2310                           
  2311                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2312   001C0C  5006               	movf	lecture_normale@n_octet^0,w,c
  2313   001C0E  2403               	addwf	lecture_normale@stid_id^0,w,c
  2314   001C10  6ED9               	movwf	fsr2l,c
  2315   001C12  0E00               	movlw	0
  2316   001C14  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2317   001C16  6EDA               	movwf	fsr2h,c
  2318   001C18  C008  FFDF         	movff	lecture_normale@octet,indf2
  2319                           
  2320                           ;stid.c: 43: n_octet++;
  2321   001C1C  2A06               	incf	lecture_normale@n_octet^0,f,c
  2322                           
  2323                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2324   001C1E  B083               	btfsc	131,0,c	;volatile
  2325   001C20  D7D1               	goto	i2l1581
  2326                           
  2327                           ;stid.c: 47: return n_octet;
  2328   001C22  5006               	movf	lecture_normale@n_octet^0,w,c
  2329   001C24  0012               	return	
  2330   001C26                     i2l4360:
  2331                           
  2332                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2333   001C26  0E00               	movlw	0
  2334   001C28  0012               	return		;funcret
  2335   001C2A                     __end_of_lecture_normale:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _stid_delai_us *****************
  2339 ;; Defined at:
  2340 ;;		line 56 in file "stid.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  isdu            2    0[COMRAM] unsigned int 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:        2 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_lecture_normale
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text7
  2368   00221A                     __ptext7:
  2369                           	callstack 0
  2370   00221A                     _stid_delai_us:
  2371                           	callstack 26
  2372                           
  2373                           ;stid.c: 58: while(isdu>0)
  2374                           
  2375                           ;incstack = 0
  2376   00221A  D006               	goto	i2l4192
  2377   00221C                     i2l1591:
  2378                           
  2379                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2380   00221C  F000               	nop	
  2381   00221E  F000               	nop	
  2382   002220  F000               	nop	
  2383                           
  2384                           ;stid.c: 61: isdu--;
  2385   002222  0601               	decf	stid_delai_us@isdu^0,f,c
  2386   002224  A0D8               	btfss	status,0,c
  2387   002226  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2388   002228                     i2l4192:
  2389   002228  5001               	movf	stid_delai_us@isdu^0,w,c
  2390   00222A  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2391   00222C  B4D8               	btfsc	status,2,c
  2392   00222E  0012               	return	
  2393   002230  D7F5               	goto	i2l1591
  2394   002232                     __end_of_stid_delai_us:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _tache5 *****************
  2398 ;; Defined at:
  2399 ;;		line 3 in file "T5.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  a               2    0[COMRAM] unsigned int 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_fonction_d_interruption
  2423 ;;		_initialisation_du_systeme
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text8
  2428   00177C                     __ptext8:
  2429                           	callstack 0
  2430   00177C                     _tache5:
  2431                           	callstack 28
  2432                           
  2433                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2434                           
  2435                           ;incstack = 0
  2436                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2437   00177C  A89E               	btfss	158,4,c	;volatile
  2438   00177E  D7FE               	goto	__ptext8
  2439   001780  0E74               	movlw	116
  2440   001782  6EAD               	movwf	173,c	;volatile
  2441   001784                     i2l927:
  2442   001784  A2AC               	btfss	172,1,c	;volatile
  2443   001786  D7FE               	goto	i2l927
  2444   001788                     i2u144_40:
  2445   001788  A89E               	btfss	158,4,c	;volatile
  2446   00178A  D7FE               	goto	i2u144_40
  2447   00178C  0E61               	movlw	97
  2448   00178E  6EAD               	movwf	173,c	;volatile
  2449   001790                     i2l933:
  2450   001790  A2AC               	btfss	172,1,c	;volatile
  2451   001792  D7FE               	goto	i2l933
  2452   001794                     i2u146_40:
  2453   001794  A89E               	btfss	158,4,c	;volatile
  2454   001796  D7FE               	goto	i2u146_40
  2455   001798  0E63               	movlw	99
  2456   00179A  6EAD               	movwf	173,c	;volatile
  2457   00179C                     i2l939:
  2458   00179C  A2AC               	btfss	172,1,c	;volatile
  2459   00179E  D7FE               	goto	i2l939
  2460   0017A0                     i2u148_40:
  2461   0017A0  A89E               	btfss	158,4,c	;volatile
  2462   0017A2  D7FE               	goto	i2u148_40
  2463   0017A4  0E68               	movlw	104
  2464   0017A6  6EAD               	movwf	173,c	;volatile
  2465   0017A8                     i2l945:
  2466   0017A8  A2AC               	btfss	172,1,c	;volatile
  2467   0017AA  D7FE               	goto	i2l945
  2468   0017AC                     i2u150_40:
  2469   0017AC  A89E               	btfss	158,4,c	;volatile
  2470   0017AE  D7FE               	goto	i2u150_40
  2471   0017B0  0E65               	movlw	101
  2472   0017B2  6EAD               	movwf	173,c	;volatile
  2473   0017B4                     i2l951:
  2474   0017B4  A2AC               	btfss	172,1,c	;volatile
  2475   0017B6  D7FE               	goto	i2l951
  2476   0017B8                     i2u152_40:
  2477   0017B8  A89E               	btfss	158,4,c	;volatile
  2478   0017BA  D7FE               	goto	i2u152_40
  2479   0017BC  0E35               	movlw	53
  2480   0017BE  6EAD               	movwf	173,c	;volatile
  2481   0017C0                     i2l957:
  2482   0017C0  A2AC               	btfss	172,1,c	;volatile
  2483   0017C2  D7FE               	goto	i2l957
  2484   0017C4                     i2u154_40:
  2485   0017C4  A89E               	btfss	158,4,c	;volatile
  2486   0017C6  D7FE               	goto	i2u154_40
  2487   0017C8  0E5F               	movlw	95
  2488   0017CA  6EAD               	movwf	173,c	;volatile
  2489   0017CC                     i2l963:
  2490   0017CC  A2AC               	btfss	172,1,c	;volatile
  2491   0017CE  D7FE               	goto	i2l963
  2492   0017D0                     i2u156_40:
  2493   0017D0  A89E               	btfss	158,4,c	;volatile
  2494   0017D2  D7FE               	goto	i2u156_40
  2495   0017D4  0E65               	movlw	101
  2496   0017D6  6EAD               	movwf	173,c	;volatile
  2497   0017D8                     i2l969:
  2498   0017D8  A2AC               	btfss	172,1,c	;volatile
  2499   0017DA  D7FE               	goto	i2l969
  2500   0017DC                     i2u158_40:
  2501   0017DC  A89E               	btfss	158,4,c	;volatile
  2502   0017DE  D7FE               	goto	i2u158_40
  2503   0017E0  0E6E               	movlw	110
  2504   0017E2  6EAD               	movwf	173,c	;volatile
  2505   0017E4                     i2l975:
  2506   0017E4  A2AC               	btfss	172,1,c	;volatile
  2507   0017E6  D7FE               	goto	i2l975
  2508   0017E8                     i2u160_40:
  2509   0017E8  A89E               	btfss	158,4,c	;volatile
  2510   0017EA  D7FE               	goto	i2u160_40
  2511   0017EC  0E5F               	movlw	95
  2512   0017EE  6EAD               	movwf	173,c	;volatile
  2513   0017F0                     i2l981:
  2514   0017F0  A2AC               	btfss	172,1,c	;volatile
  2515   0017F2  D7FE               	goto	i2l981
  2516   0017F4                     i2u162_40:
  2517   0017F4  A89E               	btfss	158,4,c	;volatile
  2518   0017F6  D7FE               	goto	i2u162_40
  2519   0017F8  0E63               	movlw	99
  2520   0017FA  6EAD               	movwf	173,c	;volatile
  2521   0017FC                     i2l987:
  2522   0017FC  A2AC               	btfss	172,1,c	;volatile
  2523   0017FE  D7FE               	goto	i2l987
  2524   001800                     i2u164_40:
  2525   001800  A89E               	btfss	158,4,c	;volatile
  2526   001802  D7FE               	goto	i2u164_40
  2527   001804  0E6F               	movlw	111
  2528   001806  6EAD               	movwf	173,c	;volatile
  2529   001808                     i2l993:
  2530   001808  A2AC               	btfss	172,1,c	;volatile
  2531   00180A  D7FE               	goto	i2l993
  2532   00180C                     i2u166_40:
  2533   00180C  A89E               	btfss	158,4,c	;volatile
  2534   00180E  D7FE               	goto	i2u166_40
  2535   001810  0E75               	movlw	117
  2536   001812  6EAD               	movwf	173,c	;volatile
  2537   001814                     i2l999:
  2538   001814  A2AC               	btfss	172,1,c	;volatile
  2539   001816  D7FE               	goto	i2l999
  2540   001818                     i2u168_40:
  2541   001818  A89E               	btfss	158,4,c	;volatile
  2542   00181A  D7FE               	goto	i2u168_40
  2543   00181C  0E72               	movlw	114
  2544   00181E  6EAD               	movwf	173,c	;volatile
  2545   001820                     i2l1005:
  2546   001820  A2AC               	btfss	172,1,c	;volatile
  2547   001822  D7FE               	goto	i2l1005
  2548   001824                     i2u170_40:
  2549   001824  A89E               	btfss	158,4,c	;volatile
  2550   001826  D7FE               	goto	i2u170_40
  2551   001828  0E73               	movlw	115
  2552   00182A  6EAD               	movwf	173,c	;volatile
  2553   00182C                     i2l1011:
  2554   00182C  A2AC               	btfss	172,1,c	;volatile
  2555   00182E  D7FE               	goto	i2l1011
  2556                           
  2557                           ;T5.c: 28: for (a=0;a<65000;a++)
  2558   001830  0E00               	movlw	0
  2559   001832  6E02               	movwf	(tache5@a+1)^0,c
  2560   001834  0E00               	movlw	0
  2561   001836  6E01               	movwf	tache5@a^0,c
  2562   001838                     i2l3512:
  2563                           
  2564                           ;T5.c: 29: ;
  2565   001838  4A01               	infsnz	tache5@a^0,f,c
  2566   00183A  2A02               	incf	(tache5@a+1)^0,f,c
  2567   00183C  0EE8               	movlw	232
  2568   00183E  5C01               	subwf	tache5@a^0,w,c
  2569   001840  0EFD               	movlw	253
  2570   001842  5802               	subwfb	(tache5@a+1)^0,w,c
  2571   001844  A0D8               	btfss	status,0,c
  2572   001846  D7F8               	goto	i2l3512
  2573                           
  2574                           ;T5.c: 30: for (a=0;a<65000;a++)
  2575   001848  0E00               	movlw	0
  2576   00184A  6E02               	movwf	(tache5@a+1)^0,c
  2577   00184C  0E00               	movlw	0
  2578   00184E  6E01               	movwf	tache5@a^0,c
  2579   001850                     i2l3522:
  2580                           
  2581                           ;T5.c: 31: ;
  2582   001850  4A01               	infsnz	tache5@a^0,f,c
  2583   001852  2A02               	incf	(tache5@a+1)^0,f,c
  2584   001854  0EE8               	movlw	232
  2585   001856  5C01               	subwf	tache5@a^0,w,c
  2586   001858  0EFD               	movlw	253
  2587   00185A  5802               	subwfb	(tache5@a+1)^0,w,c
  2588   00185C  B0D8               	btfsc	status,0,c
  2589   00185E  D78E               	goto	__ptext8
  2590   001860  D7F7               	goto	i2l3522
  2591   001862                     __end_of_tache5:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _tache4 *****************
  2595 ;; Defined at:
  2596 ;;		line 3 in file "T4.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  a               2    0[COMRAM] unsigned int 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_fonction_d_interruption
  2620 ;;		_initialisation_du_systeme
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text9
  2625   001940                     __ptext9:
  2626                           	callstack 0
  2627   001940                     _tache4:
  2628                           	callstack 28
  2629                           
  2630                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2631                           
  2632                           ;incstack = 0
  2633                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2634   001940  A89E               	btfss	158,4,c	;volatile
  2635   001942  D7FE               	goto	__ptext9
  2636   001944  0E54               	movlw	84
  2637   001946  6EAD               	movwf	173,c	;volatile
  2638   001948                     i2l749:
  2639   001948  A2AC               	btfss	172,1,c	;volatile
  2640   00194A  D7FE               	goto	i2l749
  2641   00194C                     i2u113_40:
  2642   00194C  A89E               	btfss	158,4,c	;volatile
  2643   00194E  D7FE               	goto	i2u113_40
  2644   001950  0E41               	movlw	65
  2645   001952  6EAD               	movwf	173,c	;volatile
  2646   001954                     i2l755:
  2647   001954  A2AC               	btfss	172,1,c	;volatile
  2648   001956  D7FE               	goto	i2l755
  2649   001958                     i2u115_40:
  2650   001958  A89E               	btfss	158,4,c	;volatile
  2651   00195A  D7FE               	goto	i2u115_40
  2652   00195C  0E43               	movlw	67
  2653   00195E  6EAD               	movwf	173,c	;volatile
  2654   001960                     i2l761:
  2655   001960  A2AC               	btfss	172,1,c	;volatile
  2656   001962  D7FE               	goto	i2l761
  2657   001964                     i2u117_40:
  2658   001964  A89E               	btfss	158,4,c	;volatile
  2659   001966  D7FE               	goto	i2u117_40
  2660   001968  0E48               	movlw	72
  2661   00196A  6EAD               	movwf	173,c	;volatile
  2662   00196C                     i2l767:
  2663   00196C  A2AC               	btfss	172,1,c	;volatile
  2664   00196E  D7FE               	goto	i2l767
  2665   001970                     i2u119_40:
  2666   001970  A89E               	btfss	158,4,c	;volatile
  2667   001972  D7FE               	goto	i2u119_40
  2668   001974  0E45               	movlw	69
  2669   001976  6EAD               	movwf	173,c	;volatile
  2670   001978                     i2l773:
  2671   001978  A2AC               	btfss	172,1,c	;volatile
  2672   00197A  D7FE               	goto	i2l773
  2673   00197C                     i2u121_40:
  2674   00197C  A89E               	btfss	158,4,c	;volatile
  2675   00197E  D7FE               	goto	i2u121_40
  2676   001980  0E34               	movlw	52
  2677   001982  6EAD               	movwf	173,c	;volatile
  2678   001984                     i2l779:
  2679   001984  A2AC               	btfss	172,1,c	;volatile
  2680   001986  D7FE               	goto	i2l779
  2681   001988                     i2u123_40:
  2682   001988  A89E               	btfss	158,4,c	;volatile
  2683   00198A  D7FE               	goto	i2u123_40
  2684   00198C  0E5F               	movlw	95
  2685   00198E  6EAD               	movwf	173,c	;volatile
  2686   001990                     i2l785:
  2687   001990  A2AC               	btfss	172,1,c	;volatile
  2688   001992  D7FE               	goto	i2l785
  2689   001994                     i2u125_40:
  2690   001994  A89E               	btfss	158,4,c	;volatile
  2691   001996  D7FE               	goto	i2u125_40
  2692   001998  0E45               	movlw	69
  2693   00199A  6EAD               	movwf	173,c	;volatile
  2694   00199C                     i2l791:
  2695   00199C  A2AC               	btfss	172,1,c	;volatile
  2696   00199E  D7FE               	goto	i2l791
  2697   0019A0                     i2u127_40:
  2698   0019A0  A89E               	btfss	158,4,c	;volatile
  2699   0019A2  D7FE               	goto	i2u127_40
  2700   0019A4  0E4E               	movlw	78
  2701   0019A6  6EAD               	movwf	173,c	;volatile
  2702   0019A8                     i2l797:
  2703   0019A8  A2AC               	btfss	172,1,c	;volatile
  2704   0019AA  D7FE               	goto	i2l797
  2705   0019AC                     i2u129_40:
  2706   0019AC  A89E               	btfss	158,4,c	;volatile
  2707   0019AE  D7FE               	goto	i2u129_40
  2708   0019B0  0E5F               	movlw	95
  2709   0019B2  6EAD               	movwf	173,c	;volatile
  2710   0019B4                     i2l803:
  2711   0019B4  A2AC               	btfss	172,1,c	;volatile
  2712   0019B6  D7FE               	goto	i2l803
  2713   0019B8                     i2u131_40:
  2714   0019B8  A89E               	btfss	158,4,c	;volatile
  2715   0019BA  D7FE               	goto	i2u131_40
  2716   0019BC  0E43               	movlw	67
  2717   0019BE  6EAD               	movwf	173,c	;volatile
  2718   0019C0                     i2l809:
  2719   0019C0  A2AC               	btfss	172,1,c	;volatile
  2720   0019C2  D7FE               	goto	i2l809
  2721   0019C4                     i2u133_40:
  2722   0019C4  A89E               	btfss	158,4,c	;volatile
  2723   0019C6  D7FE               	goto	i2u133_40
  2724   0019C8  0E4F               	movlw	79
  2725   0019CA  6EAD               	movwf	173,c	;volatile
  2726   0019CC                     i2l815:
  2727   0019CC  A2AC               	btfss	172,1,c	;volatile
  2728   0019CE  D7FE               	goto	i2l815
  2729   0019D0                     i2u135_40:
  2730   0019D0  A89E               	btfss	158,4,c	;volatile
  2731   0019D2  D7FE               	goto	i2u135_40
  2732   0019D4  0E55               	movlw	85
  2733   0019D6  6EAD               	movwf	173,c	;volatile
  2734   0019D8                     i2l821:
  2735   0019D8  A2AC               	btfss	172,1,c	;volatile
  2736   0019DA  D7FE               	goto	i2l821
  2737   0019DC                     i2u137_40:
  2738   0019DC  A89E               	btfss	158,4,c	;volatile
  2739   0019DE  D7FE               	goto	i2u137_40
  2740   0019E0  0E52               	movlw	82
  2741   0019E2  6EAD               	movwf	173,c	;volatile
  2742   0019E4                     i2l827:
  2743   0019E4  A2AC               	btfss	172,1,c	;volatile
  2744   0019E6  D7FE               	goto	i2l827
  2745   0019E8                     i2u139_40:
  2746   0019E8  A89E               	btfss	158,4,c	;volatile
  2747   0019EA  D7FE               	goto	i2u139_40
  2748   0019EC  0E53               	movlw	83
  2749   0019EE  6EAD               	movwf	173,c	;volatile
  2750   0019F0                     i2l833:
  2751   0019F0  A2AC               	btfss	172,1,c	;volatile
  2752   0019F2  D7FE               	goto	i2l833
  2753                           
  2754                           ;T4.c: 28: for (a=0;a<65000;a++)
  2755   0019F4  0E00               	movlw	0
  2756   0019F6  6E02               	movwf	(tache4@a+1)^0,c
  2757   0019F8  0E00               	movlw	0
  2758   0019FA  6E01               	movwf	tache4@a^0,c
  2759   0019FC                     i2l3472:
  2760                           
  2761                           ;T4.c: 29: ;
  2762   0019FC  4A01               	infsnz	tache4@a^0,f,c
  2763   0019FE  2A02               	incf	(tache4@a+1)^0,f,c
  2764   001A00  0EE8               	movlw	232
  2765   001A02  5C01               	subwf	tache4@a^0,w,c
  2766   001A04  0EFD               	movlw	253
  2767   001A06  5802               	subwfb	(tache4@a+1)^0,w,c
  2768   001A08  B0D8               	btfsc	status,0,c
  2769   001A0A  D79A               	goto	__ptext9
  2770   001A0C  D7F7               	goto	i2l3472
  2771   001A0E                     __end_of_tache4:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _tache3 *****************
  2775 ;; Defined at:
  2776 ;;		line 3 in file "T3.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_fonction_d_interruption
  2800 ;;		_initialisation_du_systeme
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text10
  2805   001862                     __ptext10:
  2806                           	callstack 0
  2807   001862                     _tache3:
  2808                           	callstack 28
  2809                           
  2810                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2811                           
  2812                           ;incstack = 0
  2813                           ;T3.c: 5: while(1)
  2814   001862  0100               	movlb	0	; () banked
  2815   001864  0566               	decf	102,w,b
  2816   001866  A4D8               	btfss	status,2,c
  2817   001868  D014               	goto	i2l3372
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2821   00186A  0ECA               	movlw	202
  2822   00186C  6567               	cpfsgt	103,b
  2823   00186E  D011               	goto	i2l3372
  2824                           
  2825                           ; BSR set to: 0
  2826   001870  0ED1               	movlw	209
  2827   001872  6167               	cpfslt	103,b
  2828   001874  D00E               	goto	i2l3372
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2832   001876  0E70               	movlw	112
  2833   001878  6568               	cpfsgt	104,b
  2834   00187A  D004               	goto	i2l3366
  2835                           
  2836                           ; BSR set to: 0
  2837   00187C  0E79               	movlw	121
  2838   00187E  6168               	cpfslt	104,b
  2839   001880  D001               	goto	i2l3366
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2843   001882  848B               	bsf	139,2,c	;volatile
  2844   001884                     i2l3366:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2848   001884  0E78               	movlw	120
  2849   001886  6568               	cpfsgt	104,b
  2850   001888  D004               	goto	i2l3372
  2851                           
  2852                           ; BSR set to: 0
  2853   00188A  0E7F               	movlw	127
  2854   00188C  6168               	cpfslt	104,b
  2855   00188E  D001               	goto	i2l3372
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2859   001890  948B               	bcf	139,2,c	;volatile
  2860   001892                     i2l3372:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2864   001892  0566               	decf	102,w,b
  2865   001894  A4D8               	btfss	status,2,c
  2866   001896  D014               	goto	i2l3390
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2870   001898  0ED6               	movlw	214
  2871   00189A  6567               	cpfsgt	103,b
  2872   00189C  D011               	goto	i2l3390
  2873                           
  2874                           ; BSR set to: 0
  2875   00189E  0EDD               	movlw	221
  2876   0018A0  6167               	cpfslt	103,b
  2877   0018A2  D00E               	goto	i2l3390
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2881   0018A4  0E70               	movlw	112
  2882   0018A6  6568               	cpfsgt	104,b
  2883   0018A8  D004               	goto	i2l3384
  2884                           
  2885                           ; BSR set to: 0
  2886   0018AA  0E79               	movlw	121
  2887   0018AC  6168               	cpfslt	104,b
  2888   0018AE  D001               	goto	i2l3384
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2892   0018B0  828B               	bsf	139,1,c	;volatile
  2893   0018B2                     i2l3384:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2897   0018B2  0E78               	movlw	120
  2898   0018B4  6568               	cpfsgt	104,b
  2899   0018B6  D004               	goto	i2l3390
  2900                           
  2901                           ; BSR set to: 0
  2902   0018B8  0E7F               	movlw	127
  2903   0018BA  6168               	cpfslt	104,b
  2904   0018BC  D001               	goto	i2l3390
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2908   0018BE  928B               	bcf	139,1,c	;volatile
  2909   0018C0                     i2l3390:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2913   0018C0  0566               	decf	102,w,b
  2914   0018C2  A4D8               	btfss	status,2,c
  2915   0018C4  D014               	goto	i2l3408
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2919   0018C6  0EE2               	movlw	226
  2920   0018C8  6567               	cpfsgt	103,b
  2921   0018CA  D011               	goto	i2l3408
  2922                           
  2923                           ; BSR set to: 0
  2924   0018CC  0EE9               	movlw	233
  2925   0018CE  6167               	cpfslt	103,b
  2926   0018D0  D00E               	goto	i2l3408
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  2930   0018D2  0E70               	movlw	112
  2931   0018D4  6568               	cpfsgt	104,b
  2932   0018D6  D004               	goto	i2l3402
  2933                           
  2934                           ; BSR set to: 0
  2935   0018D8  0E79               	movlw	121
  2936   0018DA  6168               	cpfslt	104,b
  2937   0018DC  D001               	goto	i2l3402
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  2941   0018DE  808F               	bsf	143,0,c	;volatile
  2942   0018E0                     i2l3402:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  2946   0018E0  0E78               	movlw	120
  2947   0018E2  6568               	cpfsgt	104,b
  2948   0018E4  D004               	goto	i2l3408
  2949                           
  2950                           ; BSR set to: 0
  2951   0018E6  0E7F               	movlw	127
  2952   0018E8  6168               	cpfslt	104,b
  2953   0018EA  D001               	goto	i2l3408
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  2957   0018EC  908F               	bcf	143,0,c	;volatile
  2958   0018EE                     i2l3408:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  2962   0018EE  0566               	decf	102,w,b
  2963   0018F0  A4D8               	btfss	status,2,c
  2964   0018F2  D011               	goto	i2l3422
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  2968   0018F4  0EB3               	movlw	179
  2969   0018F6  6567               	cpfsgt	103,b
  2970   0018F8  D00E               	goto	i2l3422
  2971                           
  2972                           ; BSR set to: 0
  2973   0018FA  0EE6               	movlw	230
  2974   0018FC  6167               	cpfslt	103,b
  2975   0018FE  D00B               	goto	i2l3422
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  2979   001900  0E13               	movlw	19
  2980   001902  6568               	cpfsgt	104,b
  2981   001904  D008               	goto	i2l3422
  2982                           
  2983                           ; BSR set to: 0
  2984   001906  0E3C               	movlw	60
  2985   001908  6168               	cpfslt	104,b
  2986   00190A  D005               	goto	i2l3422
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  2990   00190C  948B               	bcf	139,2,c	;volatile
  2991   00190E  828B               	bsf	139,1,c	;volatile
  2992   001910  808F               	bsf	143,0,c	;volatile
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;T3.c: 62: TEST = 1;
  2996   001912  0E01               	movlw	1
  2997   001914  6F81               	movwf	129,b
  2998   001916                     i2l3422:
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3002   001916  0566               	decf	102,w,b
  3003   001918  A4D8               	btfss	status,2,c
  3004   00191A  D7A3               	goto	__ptext10
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3008   00191C  0E77               	movlw	119
  3009   00191E  6567               	cpfsgt	103,b
  3010   001920  D7A0               	goto	__ptext10
  3011                           
  3012                           ; BSR set to: 0
  3013   001922  0EAA               	movlw	170
  3014   001924  6167               	cpfslt	103,b
  3015   001926  D79D               	goto	__ptext10
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3019   001928  0E13               	movlw	19
  3020   00192A  6568               	cpfsgt	104,b
  3021   00192C  D79A               	goto	__ptext10
  3022                           
  3023                           ; BSR set to: 0
  3024   00192E  0E3C               	movlw	60
  3025   001930  6168               	cpfslt	104,b
  3026   001932  D797               	goto	__ptext10
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3030   001934  948B               	bcf	139,2,c	;volatile
  3031   001936  928B               	bcf	139,1,c	;volatile
  3032   001938  908F               	bcf	143,0,c	;volatile
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;T3.c: 74: TEST = 0;
  3036   00193A  0E00               	movlw	0
  3037   00193C  6F81               	movwf	129,b
  3038                           
  3039                           ; BSR set to: 0
  3040   00193E  D791               	goto	__ptext10
  3041   001940                     __end_of_tache3:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _tache2 *****************
  3045 ;; Defined at:
  3046 ;;		line 3 in file "T2.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  iy              2   11[COMRAM] unsigned int 
  3051 ;;  ix              2    9[COMRAM] unsigned int 
  3052 ;;  ly              1   16[COMRAM] unsigned char 
  3053 ;;  hy              1   15[COMRAM] unsigned char 
  3054 ;;  lx              1   14[COMRAM] unsigned char 
  3055 ;;  hx              1   13[COMRAM] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:       10 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 1
  3072 ;; This function calls:
  3073 ;;		___lwdiv
  3074 ;;		_tp_delai
  3075 ;; This function is called by:
  3076 ;;		_fonction_d_interruption
  3077 ;;		_initialisation_du_systeme
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text11
  3082   001688                     __ptext11:
  3083                           	callstack 0
  3084   001688                     _tache2:
  3085                           	callstack 27
  3086                           
  3087                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;incstack = 0
  3091   001688  0E00               	movlw	0
  3092   00168A  0100               	movlb	0	; () banked
  3093   00168C  6F66               	movwf	102,b
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3097   00168E  868F               	bsf	143,3,c	;volatile
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;T2.c: 13: LATGbits.LATG4=0;
  3101   001690  988F               	bcf	143,4,c	;volatile
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;T2.c: 14: tp_delai(3000);
  3105   001692  0E0B               	movlw	11
  3106   001694  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3107   001696  0EB8               	movlw	184
  3108   001698  6E01               	movwf	tp_delai@itpd^0,c
  3109   00169A  EC19  F011         	call	_tp_delai	;wreg free
  3110                           
  3111                           ;T2.c: 18: ADCON2=0x16;
  3112   00169E  0E16               	movlw	22
  3113   0016A0  6EC0               	movwf	192,c	;volatile
  3114                           
  3115                           ;T2.c: 19: ADCON0=0x01;
  3116   0016A2  0E01               	movlw	1
  3117   0016A4  6EC2               	movwf	194,c	;volatile
  3118                           
  3119                           ;T2.c: 20: ADCON0=0x03;
  3120   0016A6  0E03               	movlw	3
  3121   0016A8  6EC2               	movwf	194,c	;volatile
  3122   0016AA                     i2l538:
  3123   0016AA  B2C2               	btfsc	194,1,c	;volatile
  3124   0016AC  D7FE               	goto	i2l538
  3125                           
  3126                           ;T2.c: 23: hx=ADRESH;
  3127   0016AE  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3128                           
  3129                           ;T2.c: 24: lx=ADRESL;
  3130   0016B2  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3131                           
  3132                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3133   0016B6  C00F  F008         	movff	tache2@lx,??_tache2
  3134   0016BA  0E0F               	movlw	15
  3135   0016BC  1608               	andwf	??_tache2^0,f,c
  3136   0016BE  B4D8               	btfsc	status,2,c
  3137   0016C0  D004               	goto	i2l4742
  3138   0016C2  0E00               	movlw	0
  3139   0016C4  6E0E               	movwf	tache2@hx^0,c
  3140   0016C6  0E00               	movlw	0
  3141   0016C8  6E0F               	movwf	tache2@lx^0,c
  3142   0016CA                     i2l4742:
  3143                           
  3144                           ;T2.c: 31: if (hx>=10)
  3145   0016CA  0E09               	movlw	9
  3146   0016CC  640E               	cpfsgt	tache2@hx^0,c
  3147   0016CE  D7DC               	goto	__ptext11
  3148                           
  3149                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3150   0016D0  968F               	bcf	143,3,c	;volatile
  3151                           
  3152                           ;T2.c: 34: LATGbits.LATG4=1;
  3153   0016D2  888F               	bsf	143,4,c	;volatile
  3154                           
  3155                           ;T2.c: 35: tp_delai(3000);
  3156   0016D4  0E0B               	movlw	11
  3157   0016D6  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3158   0016D8  0EB8               	movlw	184
  3159   0016DA  6E01               	movwf	tp_delai@itpd^0,c
  3160   0016DC  EC19  F011         	call	_tp_delai	;wreg free
  3161                           
  3162                           ;T2.c: 39: ADCON2=0x16;
  3163   0016E0  0E16               	movlw	22
  3164   0016E2  6EC0               	movwf	192,c	;volatile
  3165                           
  3166                           ;T2.c: 40: ADCON0=0x05;
  3167   0016E4  0E05               	movlw	5
  3168   0016E6  6EC2               	movwf	194,c	;volatile
  3169                           
  3170                           ;T2.c: 41: ADCON0=0x07;
  3171   0016E8  0E07               	movlw	7
  3172   0016EA  6EC2               	movwf	194,c	;volatile
  3173   0016EC                     i2l543:
  3174   0016EC  B2C2               	btfsc	194,1,c	;volatile
  3175   0016EE  D7FE               	goto	i2l543
  3176                           
  3177                           ;T2.c: 44: hy=ADRESH;
  3178   0016F0  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3179                           
  3180                           ;T2.c: 45: ly=ADRESL;
  3181   0016F4  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3182                           
  3183                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3184   0016F8  C011  F008         	movff	tache2@ly,??_tache2
  3185   0016FC  0E0F               	movlw	15
  3186   0016FE  1608               	andwf	??_tache2^0,f,c
  3187   001700  B4D8               	btfsc	status,2,c
  3188   001702  D004               	goto	i2l4758
  3189   001704  0E00               	movlw	0
  3190   001706  6E10               	movwf	tache2@hy^0,c
  3191   001708  0E00               	movlw	0
  3192   00170A  6E11               	movwf	tache2@ly^0,c
  3193   00170C                     i2l4758:
  3194                           
  3195                           ;T2.c: 51: if (hy>=20)
  3196   00170C  0E13               	movlw	19
  3197   00170E  6410               	cpfsgt	tache2@hy^0,c
  3198   001710  D7BB               	goto	__ptext11
  3199                           
  3200                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3201   001712  500E               	movf	tache2@hx^0,w,c
  3202   001714  6E08               	movwf	??_tache2^0,c
  3203   001716  500F               	movf	tache2@lx^0,w,c
  3204   001718  6E0A               	movwf	tache2@ix^0,c
  3205   00171A  C008  F00B         	movff	??_tache2,tache2@ix+1
  3206                           
  3207                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3208   00171E  5010               	movf	tache2@hy^0,w,c
  3209   001720  6E08               	movwf	??_tache2^0,c
  3210   001722  5011               	movf	tache2@ly^0,w,c
  3211   001724  6E0C               	movwf	tache2@iy^0,c
  3212   001726  C008  F00D         	movff	??_tache2,tache2@iy+1
  3213                           
  3214                           ;T2.c: 55: ix=ix-3150;
  3215   00172A  0EB2               	movlw	178
  3216   00172C  240A               	addwf	tache2@ix^0,w,c
  3217   00172E  6E0A               	movwf	tache2@ix^0,c
  3218   001730  0EF3               	movlw	243
  3219   001732  200B               	addwfc	(tache2@ix+1)^0,w,c
  3220   001734  6E0B               	movwf	(tache2@ix+1)^0,c
  3221                           
  3222                           ;T2.c: 56: iy=iy-6500;
  3223   001736  0E9C               	movlw	156
  3224   001738  240C               	addwf	tache2@iy^0,w,c
  3225   00173A  6E0C               	movwf	tache2@iy^0,c
  3226   00173C  0EE6               	movlw	230
  3227   00173E  200D               	addwfc	(tache2@iy+1)^0,w,c
  3228   001740  6E0D               	movwf	(tache2@iy+1)^0,c
  3229                           
  3230                           ;T2.c: 58: TP_x=ix/246;
  3231   001742  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3232   001746  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3233   00174A  0E00               	movlw	0
  3234   00174C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3235   00174E  0EF6               	movlw	246
  3236   001750  6E03               	movwf	___lwdiv@divisor^0,c
  3237   001752  EC2F  F00F         	call	___lwdiv	;wreg free
  3238   001756  5001               	movf	?___lwdiv^0,w,c
  3239   001758  0100               	movlb	0	; () banked
  3240   00175A  6F67               	movwf	103,b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;T2.c: 59: TP_y=127-(iy/409);
  3244   00175C  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3245   001760  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3246   001764  0E01               	movlw	1
  3247   001766  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3248   001768  0E99               	movlw	153
  3249   00176A  6E03               	movwf	___lwdiv@divisor^0,c
  3250   00176C  EC2F  F00F         	call	___lwdiv	;wreg free
  3251   001770  5001               	movf	?___lwdiv^0,w,c
  3252   001772  087F               	sublw	127
  3253   001774  0100               	movlb	0	; () banked
  3254   001776  6F68               	movwf	104,b
  3255                           
  3256                           ;T2.c: 68: TP_appui=1;
  3257   001778  0E01               	movlw	1
  3258   00177A  D788               	goto	L1
  3259   00177C                     __end_of_tache2:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _tp_delai *****************
  3263 ;; Defined at:
  3264 ;;		line 87 in file "T2.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  itpd            2    0[COMRAM] unsigned int 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        2 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_tache2
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text12
  3292   002232                     __ptext12:
  3293                           	callstack 0
  3294   002232                     _tp_delai:
  3295                           	callstack 27
  3296                           
  3297                           ;T2.c: 89: while(itpd>0)
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;incstack = 0
  3301   002232  D006               	goto	i2l4306
  3302   002234                     i2l556:
  3303                           
  3304                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3305   002234  F000               	nop	
  3306   002236  F000               	nop	
  3307   002238  F000               	nop	
  3308                           
  3309                           ;T2.c: 92: itpd--;
  3310   00223A  0601               	decf	tp_delai@itpd^0,f,c
  3311   00223C  A0D8               	btfss	status,0,c
  3312   00223E  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3313   002240                     i2l4306:
  3314   002240  5001               	movf	tp_delai@itpd^0,w,c
  3315   002242  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3316   002244  B4D8               	btfsc	status,2,c
  3317   002246  0012               	return	
  3318   002248  D7F5               	goto	i2l556
  3319   00224A                     __end_of_tp_delai:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function ___lwdiv *****************
  3323 ;; Defined at:
  3324 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  dividend        2    0[COMRAM] unsigned int 
  3327 ;;  divisor         2    2[COMRAM] unsigned int 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  quotient        2    4[COMRAM] unsigned int 
  3330 ;;  counter         1    6[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2    0[COMRAM] unsigned int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        7 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_tache2
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text13
  3354   001E5E                     __ptext13:
  3355                           	callstack 0
  3356   001E5E                     ___lwdiv:
  3357                           	callstack 27
  3358                           
  3359                           ;incstack = 0
  3360   001E5E  0E00               	movlw	0
  3361   001E60  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3362   001E62  0E00               	movlw	0
  3363   001E64  6E05               	movwf	___lwdiv@quotient^0,c
  3364   001E66  5003               	movf	___lwdiv@divisor^0,w,c
  3365   001E68  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3366   001E6A  B4D8               	btfsc	status,2,c
  3367   001E6C  D01C               	goto	i2l2164
  3368   001E6E  0E01               	movlw	1
  3369   001E70  6E07               	movwf	___lwdiv@counter^0,c
  3370   001E72  D004               	goto	i2l4372
  3371   001E74                     i2l4370:
  3372   001E74  90D8               	bcf	status,0,c
  3373   001E76  3603               	rlcf	___lwdiv@divisor^0,f,c
  3374   001E78  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3375   001E7A  2A07               	incf	___lwdiv@counter^0,f,c
  3376   001E7C                     i2l4372:
  3377   001E7C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3378   001E7E  D7FA               	goto	i2l4370
  3379   001E80                     i2u238_40:
  3380   001E80  90D8               	bcf	status,0,c
  3381   001E82  3605               	rlcf	___lwdiv@quotient^0,f,c
  3382   001E84  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3383   001E86  5003               	movf	___lwdiv@divisor^0,w,c
  3384   001E88  5C01               	subwf	___lwdiv@dividend^0,w,c
  3385   001E8A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3386   001E8C  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3387   001E8E  A0D8               	btfss	status,0,c
  3388   001E90  D005               	goto	i2l4382
  3389   001E92  5003               	movf	___lwdiv@divisor^0,w,c
  3390   001E94  5E01               	subwf	___lwdiv@dividend^0,f,c
  3391   001E96  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3392   001E98  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3393   001E9A  8005               	bsf	___lwdiv@quotient^0,0,c
  3394   001E9C                     i2l4382:
  3395   001E9C  90D8               	bcf	status,0,c
  3396   001E9E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3397   001EA0  3203               	rrcf	___lwdiv@divisor^0,f,c
  3398   001EA2  2E07               	decfsz	___lwdiv@counter^0,f,c
  3399   001EA4  D7ED               	goto	i2u238_40
  3400   001EA6                     i2l2164:
  3401   001EA6  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3402   001EAA  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3403   001EAE  0012               	return		;funcret
  3404   001EB0                     __end_of___lwdiv:
  3405                           	callstack 0
  3406                           
  3407 ;; *************** function _tache1 *****************
  3408 ;; Defined at:
  3409 ;;		line 3 in file "T1.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  i               1   20[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        1 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 5
  3430 ;; This function calls:
  3431 ;;		_Init
  3432 ;;		_charger
  3433 ;;		_clear_graphics
  3434 ;;		_clear_line
  3435 ;;		_clear_text
  3436 ;;		_draw_char
  3437 ;;		_draw_hex8
  3438 ;;		_draw_square
  3439 ;;		_draw_string
  3440 ;;		_goto_lico
  3441 ;;		_init_rxtx
  3442 ;;		_initialisation_afficheur
  3443 ;;		_lecture_8bit_analogique
  3444 ;;		_plot1
  3445 ;;		_vide
  3446 ;; This function is called by:
  3447 ;;		_fonction_d_interruption
  3448 ;;		_initialisation_du_systeme
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text14
  3453   0010CC                     __ptext14:
  3454                           	callstack 0
  3455   0010CC                     _tache1:
  3456                           	callstack 23
  3457                           
  3458                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3459                           
  3460                           ;incstack = 0
  3461   0010CC  9EF2               	bcf	242,7,c	;volatile
  3462                           
  3463                           ;T1.c: 8: initialisation_afficheur();
  3464   0010CE  EC07  F00D         	call	_initialisation_afficheur	;wreg free
  3465                           
  3466                           ;T1.c: 9: clear_text();
  3467   0010D2  EC3C  F010         	call	_clear_text	;wreg free
  3468                           
  3469                           ;T1.c: 10: clear_graphics();
  3470   0010D6  EC54  F010         	call	_clear_graphics	;wreg free
  3471                           
  3472                           ;T1.c: 11: init_rxtx();
  3473   0010DA  ECA7  F010         	call	_init_rxtx	;wreg free
  3474                           
  3475                           ;T1.c: 12: Init(2);
  3476   0010DE  0E02               	movlw	2
  3477   0010E0  6EE6               	movwf	postinc1,c
  3478   0010E2  EC96  F010         	call	_Init	;wreg free
  3479                           
  3480                           ;T1.c: 13: RXTX_libre=1;
  3481   0010E6  0E01               	movlw	1
  3482   0010E8  0100               	movlb	0	; () banked
  3483   0010EA  6F80               	movwf	128,b
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;T1.c: 14: TXREG1='R';
  3487   0010EC  0E52               	movlw	82
  3488   0010EE  6EAD               	movwf	173,c	;volatile
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3492   0010F0  8EF2               	bsf	242,7,c	;volatile
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3496   0010F2  948B               	bcf	139,2,c	;volatile
  3497                           
  3498                           ; BSR set to: 0
  3499   0010F4  928B               	bcf	139,1,c	;volatile
  3500                           
  3501                           ; BSR set to: 0
  3502   0010F6  908F               	bcf	143,0,c	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;T1.c: 19: vitesse=0;
  3506   0010F8  0E00               	movlw	0
  3507   0010FA  6F73               	movwf	115,b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;T1.c: 20: batterie=15;
  3511   0010FC  0E0F               	movlw	15
  3512   0010FE  6F74               	movwf	116,b
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;T1.c: 21: n_octet_badge=0;
  3516   001100  0E00               	movlw	0
  3517   001102  6F7F               	movwf	127,b
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;T1.c: 23: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3521   001104  0E22               	movlw	34
  3522   001106  6E09               	movwf	goto_lico@colonne^0,c
  3523   001108  0E0D               	movlw	13
  3524   00110A  EC03  F00F         	call	_goto_lico
  3525   00110E  0E52               	movlw	82
  3526   001110  EC23  F010         	call	_draw_char
  3527   001114  0E20               	movlw	32
  3528   001116  EC23  F010         	call	_draw_char
  3529   00111A  0E56               	movlw	86
  3530   00111C  EC23  F010         	call	_draw_char
  3531   001120  0E20               	movlw	32
  3532   001122  EC23  F010         	call	_draw_char
  3533   001126  0E42               	movlw	66
  3534   001128  EC23  F010         	call	_draw_char
  3535                           
  3536                           ;T1.c: 24: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3537   00112C  0E22               	movlw	34
  3538   00112E  6E09               	movwf	goto_lico@colonne^0,c
  3539   001130  0E0E               	movlw	14
  3540   001132  EC03  F00F         	call	_goto_lico
  3541   001136  0E30               	movlw	48
  3542   001138  EC23  F010         	call	_draw_char
  3543   00113C  0E20               	movlw	32
  3544   00113E  EC23  F010         	call	_draw_char
  3545   001142  0E30               	movlw	48
  3546   001144  EC23  F010         	call	_draw_char
  3547   001148  0E20               	movlw	32
  3548   00114A  EC23  F010         	call	_draw_char
  3549   00114E  0E30               	movlw	48
  3550   001150  EC23  F010         	call	_draw_char
  3551                           
  3552                           ;T1.c: 25: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3553   001154  0E22               	movlw	34
  3554   001156  6E09               	movwf	goto_lico@colonne^0,c
  3555   001158  0E0F               	movlw	15
  3556   00115A  EC03  F00F         	call	_goto_lico
  3557   00115E  0E31               	movlw	49
  3558   001160  EC23  F010         	call	_draw_char
  3559   001164  0E20               	movlw	32
  3560   001166  EC23  F010         	call	_draw_char
  3561   00116A  0E31               	movlw	49
  3562   00116C  EC23  F010         	call	_draw_char
  3563   001170  0E20               	movlw	32
  3564   001172  EC23  F010         	call	_draw_char
  3565   001176  0E31               	movlw	49
  3566   001178  EC23  F010         	call	_draw_char
  3567                           
  3568                           ;T1.c: 27: TP_appui=0;
  3569   00117C  0E00               	movlw	0
  3570   00117E  0100               	movlb	0	; () banked
  3571   001180  6F66               	movwf	102,b
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;T1.c: 28: draw_square(180,20,230,60);
  3575   001182  0E14               	movlw	20
  3576   001184  6E0F               	movwf	draw_square@y1^0,c
  3577   001186  0EE6               	movlw	230
  3578   001188  6E10               	movwf	draw_square@x2^0,c
  3579   00118A  0E3C               	movlw	60
  3580   00118C  6E11               	movwf	draw_square@y2^0,c
  3581   00118E  0EB4               	movlw	180
  3582   001190  ECA9  F00F         	call	_draw_square
  3583                           
  3584                           ;T1.c: 29: draw_square(120,20,170,60);
  3585   001194  0E14               	movlw	20
  3586   001196  6E0F               	movwf	draw_square@y1^0,c
  3587   001198  0EAA               	movlw	170
  3588   00119A  6E10               	movwf	draw_square@x2^0,c
  3589   00119C  0E3C               	movlw	60
  3590   00119E  6E11               	movwf	draw_square@y2^0,c
  3591   0011A0  0E78               	movlw	120
  3592   0011A2  ECA9  F00F         	call	_draw_square
  3593                           
  3594                           ;T1.c: 31: draw_string(2);
  3595   0011A6  0E02               	movlw	2
  3596   0011A8  6E08               	movwf	draw_string@tableau^0,c
  3597   0011AA  0E00               	movlw	0
  3598   0011AC  6E09               	movwf	(draw_string@tableau+1)^0,c
  3599   0011AE  EC15  F00E         	call	_draw_string	;wreg free
  3600                           
  3601                           ;T1.c: 32: TEST=0;
  3602   0011B2  0E00               	movlw	0
  3603   0011B4  0100               	movlb	0	; () banked
  3604   0011B6  6F81               	movwf	129,b
  3605   0011B8                     i2l4580:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;T1.c: 34: {;T1.c: 36: goto_lico(0,0);
  3609   0011B8  0E00               	movlw	0
  3610   0011BA  6E09               	movwf	goto_lico@colonne^0,c
  3611   0011BC  0E00               	movlw	0
  3612   0011BE  EC03  F00F         	call	_goto_lico
  3613                           
  3614                           ;T1.c: 37: draw_string("Marche:");
  3615   0011C2  0E84               	movlw	low STR_1
  3616   0011C4  6E08               	movwf	draw_string@tableau^0,c
  3617   0011C6  0E10               	movlw	high STR_1
  3618   0011C8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3619   0011CA  EC15  F00E         	call	_draw_string	;wreg free
  3620                           
  3621                           ;T1.c: 38: if (PORTBbits.RB0==0)
  3622   0011CE  B081               	btfsc	129,0,c	;volatile
  3623   0011D0  D007               	goto	i2l418
  3624                           
  3625                           ;T1.c: 39: draw_string("AV");
  3626   0011D2  0EC8               	movlw	low STR_2
  3627   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3628   0011D6  0E10               	movlw	high STR_2
  3629   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3630   0011DA  EC15  F00E         	call	_draw_string	;wreg free
  3631   0011DE  D00F               	goto	i2l4592
  3632   0011E0                     i2l418:
  3633                           
  3634                           ;T1.c: 40: else;T1.c: 41: if (PORTBbits.RB1==0)
  3635   0011E0  B281               	btfsc	129,1,c	;volatile
  3636   0011E2  D007               	goto	i2l4590
  3637                           
  3638                           ;T1.c: 42: draw_string("AR");
  3639   0011E4  0EC5               	movlw	low STR_3
  3640   0011E6  6E08               	movwf	draw_string@tableau^0,c
  3641   0011E8  0E10               	movlw	high STR_3
  3642   0011EA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3643   0011EC  EC15  F00E         	call	_draw_string	;wreg free
  3644   0011F0  D006               	goto	i2l4592
  3645   0011F2                     i2l4590:
  3646                           
  3647                           ;T1.c: 43: else;T1.c: 44: draw_string("N ");
  3648   0011F2  0EBF               	movlw	low STR_4
  3649   0011F4  6E08               	movwf	draw_string@tableau^0,c
  3650   0011F6  0E10               	movlw	high STR_4
  3651   0011F8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3652   0011FA  EC15  F00E         	call	_draw_string	;wreg free
  3653   0011FE                     i2l4592:
  3654                           
  3655                           ;T1.c: 46: goto_lico(1,0);
  3656   0011FE  0E00               	movlw	0
  3657   001200  6E09               	movwf	goto_lico@colonne^0,c
  3658   001202  0E01               	movlw	1
  3659   001204  EC03  F00F         	call	_goto_lico
  3660                           
  3661                           ;T1.c: 47: draw_string("Siege:");
  3662   001208  0EA3               	movlw	low STR_5
  3663   00120A  6E08               	movwf	draw_string@tableau^0,c
  3664   00120C  0E10               	movlw	high STR_5
  3665   00120E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3666   001210  EC15  F00E         	call	_draw_string	;wreg free
  3667                           
  3668                           ;T1.c: 48: if (PORTBbits.RB2==0)
  3669   001214  B481               	btfsc	129,2,c	;volatile
  3670   001216  D004               	goto	i2l4600
  3671                           
  3672                           ;T1.c: 49: {draw_char('1');}
  3673   001218  0E31               	movlw	49
  3674   00121A  EC23  F010         	call	_draw_char
  3675   00121E  D003               	goto	i2l4602
  3676   001220                     i2l4600:
  3677                           
  3678                           ;T1.c: 50: else;T1.c: 51: {draw_char('0');}
  3679   001220  0E30               	movlw	48
  3680   001222  EC23  F010         	call	_draw_char
  3681   001226                     i2l4602:
  3682                           
  3683                           ;T1.c: 53: goto_lico(2,0);
  3684   001226  0E00               	movlw	0
  3685   001228  6E09               	movwf	goto_lico@colonne^0,c
  3686   00122A  0E02               	movlw	2
  3687   00122C  EC03  F00F         	call	_goto_lico
  3688                           
  3689                           ;T1.c: 54: draw_string("Temp. Eau:");
  3690   001230  0E66               	movlw	low STR_6
  3691   001232  6E08               	movwf	draw_string@tableau^0,c
  3692   001234  0E10               	movlw	high STR_6
  3693   001236  6E09               	movwf	(draw_string@tableau+1)^0,c
  3694   001238  EC15  F00E         	call	_draw_string	;wreg free
  3695                           
  3696                           ;T1.c: 55: draw_hex8(lecture_8bit_analogique(2));
  3697   00123C  0E02               	movlw	2
  3698   00123E  EC08  F010         	call	_lecture_8bit_analogique
  3699   001242  ECD5  F00E         	call	_draw_hex8
  3700                           
  3701                           ;T1.c: 57: goto_lico(3,0);
  3702   001246  0E00               	movlw	0
  3703   001248  6E09               	movwf	goto_lico@colonne^0,c
  3704   00124A  0E03               	movlw	3
  3705   00124C  EC03  F00F         	call	_goto_lico
  3706                           
  3707                           ;T1.c: 58: draw_string("Temp. Huile:");
  3708   001250  0E41               	movlw	low STR_7
  3709   001252  6E08               	movwf	draw_string@tableau^0,c
  3710   001254  0E10               	movlw	high STR_7
  3711   001256  6E09               	movwf	(draw_string@tableau+1)^0,c
  3712   001258  EC15  F00E         	call	_draw_string	;wreg free
  3713                           
  3714                           ;T1.c: 59: draw_hex8(lecture_8bit_analogique(3));
  3715   00125C  0E03               	movlw	3
  3716   00125E  EC08  F010         	call	_lecture_8bit_analogique
  3717   001262  ECD5  F00E         	call	_draw_hex8
  3718                           
  3719                           ;T1.c: 61: goto_lico(4,0);
  3720   001266  0E00               	movlw	0
  3721   001268  6E09               	movwf	goto_lico@colonne^0,c
  3722   00126A  0E04               	movlw	4
  3723   00126C  EC03  F00F         	call	_goto_lico
  3724                           
  3725                           ;T1.c: 62: draw_string("Choc:");
  3726   001270  0EB0               	movlw	low STR_8
  3727   001272  6E08               	movwf	draw_string@tableau^0,c
  3728   001274  0E10               	movlw	high STR_8
  3729   001276  6E09               	movwf	(draw_string@tableau+1)^0,c
  3730   001278  EC15  F00E         	call	_draw_string	;wreg free
  3731                           
  3732                           ;T1.c: 63: if (PORTBbits.RB3==0)
  3733   00127C  B681               	btfsc	129,3,c	;volatile
  3734   00127E  D004               	goto	i2l4620
  3735                           
  3736                           ;T1.c: 64: draw_char('1');
  3737   001280  0E31               	movlw	49
  3738   001282  EC23  F010         	call	_draw_char
  3739   001286  D003               	goto	i2l4622
  3740   001288                     i2l4620:
  3741                           
  3742                           ;T1.c: 65: else;T1.c: 66: draw_char('0');
  3743   001288  0E30               	movlw	48
  3744   00128A  EC23  F010         	call	_draw_char
  3745   00128E                     i2l4622:
  3746                           
  3747                           ;T1.c: 68: goto_lico(5,0);
  3748   00128E  0E00               	movlw	0
  3749   001290  6E09               	movwf	goto_lico@colonne^0,c
  3750   001292  0E05               	movlw	5
  3751   001294  EC03  F00F         	call	_goto_lico
  3752                           
  3753                           ;T1.c: 69: draw_string("Vitesse:");
  3754   001298  0E7B               	movlw	low STR_9
  3755   00129A  6E08               	movwf	draw_string@tableau^0,c
  3756   00129C  0E10               	movlw	high STR_9
  3757   00129E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3758   0012A0  EC15  F00E         	call	_draw_string	;wreg free
  3759                           
  3760                           ;T1.c: 70: if (PORTEbits.RE0==0)
  3761   0012A4  B084               	btfsc	132,0,c	;volatile
  3762   0012A6  D002               	goto	i2l4630
  3763                           
  3764                           ;T1.c: 71: vitesse++;
  3765   0012A8  0100               	movlb	0	; () banked
  3766   0012AA  2B73               	incf	115,f,b
  3767   0012AC                     i2l4630:
  3768                           
  3769                           ;T1.c: 72: if (PORTEbits.RE1==0)
  3770   0012AC  B284               	btfsc	132,1,c	;volatile
  3771   0012AE  D002               	goto	i2l4634
  3772                           
  3773                           ;T1.c: 73: vitesse--;
  3774   0012B0  0100               	movlb	0	; () banked
  3775   0012B2  0773               	decf	115,f,b
  3776   0012B4                     i2l4634:
  3777                           
  3778                           ;T1.c: 74: if(vitesse <=0){
  3779   0012B4  0100               	movlb	0	; () banked
  3780   0012B6  5173               	movf	115,w,b
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;T1.c: 76: };T1.c: 77: draw_hex8(vitesse);
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;T1.c: 75: vitesse ==0;
  3787   0012B8  5173               	movf	115,w,b
  3788   0012BA  ECD5  F00E         	call	_draw_hex8
  3789                           
  3790                           ;T1.c: 79: goto_lico(6,0);
  3791   0012BE  0E00               	movlw	0
  3792   0012C0  6E09               	movwf	goto_lico@colonne^0,c
  3793   0012C2  0E06               	movlw	6
  3794   0012C4  EC03  F00F         	call	_goto_lico
  3795                           
  3796                           ;T1.c: 80: draw_string("Batterie:");
  3797   0012C8  0E71               	movlw	low STR_10
  3798   0012CA  6E08               	movwf	draw_string@tableau^0,c
  3799   0012CC  0E10               	movlw	high STR_10
  3800   0012CE  6E09               	movwf	(draw_string@tableau+1)^0,c
  3801   0012D0  EC15  F00E         	call	_draw_string	;wreg free
  3802                           
  3803                           ;T1.c: 81: if (PORTEbits.RE2==0)
  3804   0012D4  B484               	btfsc	132,2,c	;volatile
  3805   0012D6  D002               	goto	i2l4648
  3806                           
  3807                           ;T1.c: 82: batterie++;
  3808   0012D8  0100               	movlb	0	; () banked
  3809   0012DA  2B74               	incf	116,f,b
  3810   0012DC                     i2l4648:
  3811                           
  3812                           ;T1.c: 83: if (PORTEbits.RE3==0)
  3813   0012DC  B684               	btfsc	132,3,c	;volatile
  3814   0012DE  D002               	goto	i2l4652
  3815                           
  3816                           ;T1.c: 84: batterie--;
  3817   0012E0  0100               	movlb	0	; () banked
  3818   0012E2  0774               	decf	116,f,b
  3819   0012E4                     i2l4652:
  3820                           
  3821                           ;T1.c: 85: draw_hex8(batterie);
  3822   0012E4  0100               	movlb	0	; () banked
  3823   0012E6  5174               	movf	116,w,b
  3824   0012E8  ECD5  F00E         	call	_draw_hex8
  3825                           
  3826                           ;T1.c: 87: goto_lico(7,0);
  3827   0012EC  0E00               	movlw	0
  3828   0012EE  6E09               	movwf	goto_lico@colonne^0,c
  3829   0012F0  0E07               	movlw	7
  3830   0012F2  EC03  F00F         	call	_goto_lico
  3831                           
  3832                           ;T1.c: 88: if (PORTEbits.RE4==0)
  3833   0012F6  B884               	btfsc	132,4,c	;volatile
  3834   0012F8  D007               	goto	i2l4660
  3835                           
  3836                           ;T1.c: 89: draw_string("((!))");
  3837   0012FA  0EAA               	movlw	low STR_11
  3838   0012FC  6E08               	movwf	draw_string@tableau^0,c
  3839   0012FE  0E10               	movlw	high STR_11
  3840   001300  6E09               	movwf	(draw_string@tableau+1)^0,c
  3841   001302  EC15  F00E         	call	_draw_string	;wreg free
  3842   001306  D006               	goto	i2l4662
  3843   001308                     i2l4660:
  3844                           
  3845                           ;T1.c: 90: else;T1.c: 91: draw_string("     ");
  3846   001308  0E2D               	movlw	low (STR_14+15)
  3847   00130A  6E08               	movwf	draw_string@tableau^0,c
  3848   00130C  0E10               	movlw	high (STR_14+15)
  3849   00130E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3850   001310  EC15  F00E         	call	_draw_string	;wreg free
  3851   001314                     i2l4662:
  3852                           
  3853                           ;T1.c: 93: goto_lico(8,0);
  3854   001314  0E00               	movlw	0
  3855   001316  6E09               	movwf	goto_lico@colonne^0,c
  3856   001318  0E08               	movlw	8
  3857   00131A  EC03  F00F         	call	_goto_lico
  3858                           
  3859                           ;T1.c: 94: draw_string("Badge:");
  3860   00131E  0E9C               	movlw	low STR_13
  3861   001320  6E08               	movwf	draw_string@tableau^0,c
  3862   001322  0E10               	movlw	high STR_13
  3863   001324  6E09               	movwf	(draw_string@tableau+1)^0,c
  3864   001326  EC15  F00E         	call	_draw_string	;wreg free
  3865                           
  3866                           ;T1.c: 95: if (n_octet_badge==0)
  3867   00132A  0100               	movlb	0	; () banked
  3868   00132C  517F               	movf	127,w,b
  3869   00132E  A4D8               	btfss	status,2,c
  3870   001330  D007               	goto	i2l4670
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;T1.c: 96: draw_string(" AUCUN              ");
  3874   001332  0E1E               	movlw	low STR_14
  3875   001334  6E08               	movwf	draw_string@tableau^0,c
  3876   001336  0E10               	movlw	high STR_14
  3877   001338  6E09               	movwf	(draw_string@tableau+1)^0,c
  3878   00133A  EC15  F00E         	call	_draw_string	;wreg free
  3879   00133E  D012               	goto	i2u251_40
  3880   001340                     i2l4670:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;T1.c: 97: else;T1.c: 98: {;T1.c: 99: for (i=0;i<n_octet_badge;i++)
  3884   001340  0E00               	movlw	0
  3885   001342  6E15               	movwf	tache1@i^0,c
  3886   001344  D00A               	goto	i2l4676
  3887   001346                     i2l4672:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;T1.c: 100: {;T1.c: 101: draw_hex8(badge[i]);
  3891   001346  0E75               	movlw	117
  3892   001348  2415               	addwf	tache1@i^0,w,c
  3893   00134A  6ED9               	movwf	fsr2l,c
  3894   00134C  6ADA               	clrf	fsr2h,c
  3895   00134E  0E00               	movlw	0
  3896   001350  22DA               	addwfc	fsr2h,f,c
  3897   001352  50DF               	movf	indf2,w,c
  3898   001354  ECD5  F00E         	call	_draw_hex8
  3899   001358  2A15               	incf	tache1@i^0,f,c
  3900   00135A                     i2l4676:
  3901   00135A  0100               	movlb	0	; () banked
  3902   00135C  517F               	movf	127,w,b
  3903   00135E  5C15               	subwf	tache1@i^0,w,c
  3904   001360  A0D8               	btfss	status,0,c
  3905   001362  D7F1               	goto	i2l4672
  3906   001364                     i2u251_40:
  3907                           
  3908                           ;T1.c: 102: };T1.c: 103: };T1.c: 105: goto_lico(9,0);
  3909   001364  0E00               	movlw	0
  3910   001366  6E09               	movwf	goto_lico@colonne^0,c
  3911   001368  0E09               	movlw	9
  3912   00136A  EC03  F00F         	call	_goto_lico
  3913                           
  3914                           ;T1.c: 106: draw_string("X-Joystick:");
  3915   00136E  0E4E               	movlw	low STR_15
  3916   001370  6E08               	movwf	draw_string@tableau^0,c
  3917   001372  0E10               	movlw	high STR_15
  3918   001374  6E09               	movwf	(draw_string@tableau+1)^0,c
  3919   001376  EC15  F00E         	call	_draw_string	;wreg free
  3920                           
  3921                           ;T1.c: 107: draw_hex8(lecture_8bit_analogique(10));
  3922   00137A  0E0A               	movlw	10
  3923   00137C  EC08  F010         	call	_lecture_8bit_analogique
  3924   001380  ECD5  F00E         	call	_draw_hex8
  3925                           
  3926                           ;T1.c: 109: goto_lico(10,0);
  3927   001384  0E00               	movlw	0
  3928   001386  6E09               	movwf	goto_lico@colonne^0,c
  3929   001388  0E0A               	movlw	10
  3930   00138A  EC03  F00F         	call	_goto_lico
  3931                           
  3932                           ;T1.c: 110: draw_string("Y-Joystick:");
  3933   00138E  0E5A               	movlw	low STR_16
  3934   001390  6E08               	movwf	draw_string@tableau^0,c
  3935   001392  0E10               	movlw	high STR_16
  3936   001394  6E09               	movwf	(draw_string@tableau+1)^0,c
  3937   001396  EC15  F00E         	call	_draw_string	;wreg free
  3938                           
  3939                           ;T1.c: 111: draw_hex8(lecture_8bit_analogique(11));
  3940   00139A  0E0B               	movlw	11
  3941   00139C  EC08  F010         	call	_lecture_8bit_analogique
  3942   0013A0  ECD5  F00E         	call	_draw_hex8
  3943                           
  3944                           ;T1.c: 113: goto_lico(13,0);
  3945   0013A4  0E00               	movlw	0
  3946   0013A6  6E09               	movwf	goto_lico@colonne^0,c
  3947   0013A8  0E0D               	movlw	13
  3948   0013AA  EC03  F00F         	call	_goto_lico
  3949                           
  3950                           ;T1.c: 114: draw_string("BIG MUM");
  3951   0013AE  0E8C               	movlw	low STR_17
  3952   0013B0  6E08               	movwf	draw_string@tableau^0,c
  3953   0013B2  0E10               	movlw	high STR_17
  3954   0013B4  6E09               	movwf	(draw_string@tableau+1)^0,c
  3955   0013B6  EC15  F00E         	call	_draw_string	;wreg free
  3956                           
  3957                           ;T1.c: 115: goto_lico(5,22);
  3958   0013BA  0E16               	movlw	22
  3959   0013BC  6E09               	movwf	goto_lico@colonne^0,c
  3960   0013BE  0E05               	movlw	5
  3961   0013C0  EC03  F00F         	call	_goto_lico
  3962                           
  3963                           ;T1.c: 116: draw_string("VIDE");
  3964   0013C4  0EB6               	movlw	low STR_18
  3965   0013C6  6E08               	movwf	draw_string@tableau^0,c
  3966   0013C8  0E10               	movlw	high STR_18
  3967   0013CA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3968   0013CC  EC15  F00E         	call	_draw_string	;wreg free
  3969                           
  3970                           ;T1.c: 117: goto_lico(5,31);
  3971   0013D0  0E1F               	movlw	31
  3972   0013D2  6E09               	movwf	goto_lico@colonne^0,c
  3973   0013D4  0E05               	movlw	5
  3974   0013D6  EC03  F00F         	call	_goto_lico
  3975                           
  3976                           ;T1.c: 118: draw_string("CHARGER");
  3977   0013DA  0E94               	movlw	low STR_19
  3978   0013DC  6E08               	movwf	draw_string@tableau^0,c
  3979   0013DE  0E10               	movlw	high STR_19
  3980   0013E0  6E09               	movwf	(draw_string@tableau+1)^0,c
  3981   0013E2  EC15  F00E         	call	_draw_string	;wreg free
  3982                           
  3983                           ;T1.c: 126: if (TP_appui==1)
  3984   0013E6  0100               	movlb	0	; () banked
  3985   0013E8  0566               	decf	102,w,b
  3986   0013EA  A4D8               	btfss	status,2,c
  3987   0013EC  D020               	goto	i2l438
  3988                           
  3989                           ; BSR set to: 0
  3990                           ;T1.c: 127: {;T1.c: 128: goto_lico(0,20);
  3991   0013EE  0E14               	movlw	20
  3992   0013F0  6E09               	movwf	goto_lico@colonne^0,c
  3993   0013F2  0E00               	movlw	0
  3994   0013F4  EC03  F00F         	call	_goto_lico
  3995                           
  3996                           ;T1.c: 129: draw_string("x=");
  3997   0013F8  0EC2               	movlw	low STR_20
  3998   0013FA  6E08               	movwf	draw_string@tableau^0,c
  3999   0013FC  0E10               	movlw	high STR_20
  4000   0013FE  6E09               	movwf	(draw_string@tableau+1)^0,c
  4001   001400  EC15  F00E         	call	_draw_string	;wreg free
  4002                           
  4003                           ;T1.c: 130: draw_hex8(TP_x);
  4004   001404  0100               	movlb	0	; () banked
  4005   001406  5167               	movf	103,w,b
  4006   001408  ECD5  F00E         	call	_draw_hex8
  4007                           
  4008                           ;T1.c: 131: draw_string(" y=");
  4009   00140C  0EBB               	movlw	low STR_21
  4010   00140E  6E08               	movwf	draw_string@tableau^0,c
  4011   001410  0E10               	movlw	high STR_21
  4012   001412  6E09               	movwf	(draw_string@tableau+1)^0,c
  4013   001414  EC15  F00E         	call	_draw_string	;wreg free
  4014                           
  4015                           ;T1.c: 132: draw_hex8(TP_y);
  4016   001418  0100               	movlb	0	; () banked
  4017   00141A  5168               	movf	104,w,b
  4018   00141C  ECD5  F00E         	call	_draw_hex8
  4019                           
  4020                           ;T1.c: 133: plot1(TP_x,TP_y);
  4021   001420  C068 F009          	movff	104,plot1@y
  4022   001424  0100               	movlb	0	; () banked
  4023   001426  5167               	movf	103,w,b
  4024   001428  EC6D  F00D         	call	_plot1
  4025                           
  4026                           ;T1.c: 134: }
  4027   00142C  D001               	goto	i2l4712
  4028   00142E                     i2l438:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;T1.c: 135: else;T1.c: 136: {;T1.c: 137: __nop();
  4032   00142E  F000               	nop	
  4033   001430                     i2l4712:
  4034                           
  4035                           ;T1.c: 138: };T1.c: 139: if (TEST==1){
  4036   001430  0100               	movlb	0	; () banked
  4037   001432  0581               	decf	129,w,b
  4038   001434  B4D8               	btfsc	status,2,c
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;T1.c: 140: charger();
  4042   001436  EC31  F011         	call	_charger	;wreg free
  4043                           
  4044                           ;T1.c: 141: };T1.c: 142: if(TEST==0){
  4045   00143A  0100               	movlb	0	; () banked
  4046   00143C  5181               	movf	129,w,b
  4047   00143E  A4D8               	btfss	status,2,c
  4048   001440  D6BB               	goto	i2l4580
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;T1.c: 143: clear_line(14);
  4052   001442  0E0E               	movlw	14
  4053   001444  ECC9  F010         	call	_clear_line
  4054                           
  4055                           ;T1.c: 144: vide();
  4056   001448  EC25  F011         	call	_vide	;wreg free
  4057                           
  4058                           ;T1.c: 145: TEST=3;
  4059   00144C  0E03               	movlw	3
  4060   00144E  D6B2               	goto	L2
  4061   001450                     __end_of_tache1:
  4062                           	callstack 0
  4063                           
  4064 ;; *************** function _vide *****************
  4065 ;; Defined at:
  4066 ;;		line 438 in file "afficheur.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      void 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:        0 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 4
  4087 ;; This function calls:
  4088 ;;		_draw_string
  4089 ;;		_goto_lico
  4090 ;; This function is called by:
  4091 ;;		_tache1
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text15
  4096   00224A                     __ptext15:
  4097                           	callstack 0
  4098   00224A                     _vide:
  4099                           	callstack 23
  4100                           
  4101                           ;afficheur.c: 440: goto_lico(14,0);
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;incstack = 0
  4105   00224A  0E00               	movlw	0
  4106   00224C  6E09               	movwf	goto_lico@colonne^0,c
  4107   00224E  0E0E               	movlw	14
  4108   002250  EC03  F00F         	call	_goto_lico
  4109                           
  4110                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4111   002254  0E33               	movlw	low STR_23
  4112   002256  6E08               	movwf	draw_string@tableau^0,c
  4113   002258  0E10               	movlw	high STR_23
  4114   00225A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4115   00225C  EC15  F00E         	call	_draw_string	;wreg free
  4116   002260  0012               	return		;funcret
  4117   002262                     __end_of_vide:
  4118                           	callstack 0
  4119                           
  4120 ;; *************** function _lecture_8bit_analogique *****************
  4121 ;; Defined at:
  4122 ;;		line 60 in file "main.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  channel         1    wreg     unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  channel         1    1[COMRAM] unsigned char 
  4127 ;;  ret             1    0[COMRAM] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;Total ram usage:        2 bytes
  4142 ;; Hardware stack levels used: 1
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_tache1
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text16
  4151   002010                     __ptext16:
  4152                           	callstack 0
  4153   002010                     _lecture_8bit_analogique:
  4154                           	callstack 27
  4155                           
  4156                           ;incstack = 0
  4157                           ;lecture_8bit_analogique@channel stored from wreg
  4158   002010  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4159                           
  4160                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4161   002012  0E00               	movlw	0
  4162   002014  6EC1               	movwf	193,c	;volatile
  4163                           
  4164                           ;main.c: 66: ADCON2=0x16;
  4165   002016  0E16               	movlw	22
  4166   002018  6EC0               	movwf	192,c	;volatile
  4167                           
  4168                           ;main.c: 67: channel=channel&0x1F;
  4169   00201A  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4170   00201C  0B1F               	andlw	31
  4171   00201E  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4172                           
  4173                           ;main.c: 68: channel=channel<<2;
  4174   002020  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4175   002022  46E8               	rlncf	wreg,f,c
  4176   002024  0BFC               	andlw	252
  4177   002026  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4178                           
  4179                           ;main.c: 69: ADCON0=channel|0x01;
  4180   002028  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4181   00202A  0901               	iorlw	1
  4182   00202C  6EC2               	movwf	194,c	;volatile
  4183                           
  4184                           ;main.c: 71: ADCON0bits.GO=1;
  4185   00202E  82C2               	bsf	194,1,c	;volatile
  4186   002030                     i2l140:
  4187   002030  B2C2               	btfsc	194,1,c	;volatile
  4188   002032  D7FE               	goto	i2l140
  4189                           
  4190                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4191   002034  A0C3               	btfss	195,0,c	;volatile
  4192   002036  D003               	goto	i2l143
  4193                           
  4194                           ;main.c: 76: ret=0;
  4195   002038  0E00               	movlw	0
  4196   00203A  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4197   00203C  D002               	goto	i2l2728
  4198   00203E                     i2l143:
  4199                           
  4200                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4201   00203E  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4202   002042                     i2l2728:
  4203                           
  4204                           ;main.c: 82: return ret;
  4205   002042  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4206   002044  0012               	return		;funcret
  4207   002046                     __end_of_lecture_8bit_analogique:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _initialisation_afficheur *****************
  4211 ;; Defined at:
  4212 ;;		line 164 in file "afficheur.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;		None
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  error_count     1    8[COMRAM] unsigned char 
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2, status,0, cstack
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;Total ram usage:        1 bytes
  4231 ;; Hardware stack levels used: 1
  4232 ;; Hardware stack levels required when called: 3
  4233 ;; This function calls:
  4234 ;;		_check_status_ok
  4235 ;;		_command
  4236 ;;		_d1command
  4237 ;;		_d2command
  4238 ;;		_delai_us_char
  4239 ;; This function is called by:
  4240 ;;		_tache1
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           	psect	text17
  4245   001A0E                     __ptext17:
  4246                           	callstack 0
  4247   001A0E                     _initialisation_afficheur:
  4248                           	callstack 24
  4249                           
  4250                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4251                           
  4252                           ;incstack = 0
  4253   001A0E  0E00               	movlw	0
  4254   001A10  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4255                           
  4256                           ;afficheur.c: 172: LATH=0;
  4257   001A12  0E00               	movlw	0
  4258   001A14  6E90               	movwf	144,c	;volatile
  4259                           
  4260                           ;afficheur.c: 173: LATJ=0x1F;
  4261   001A16  0E1F               	movlw	31
  4262   001A18  6E91               	movwf	145,c	;volatile
  4263                           
  4264                           ;afficheur.c: 176: TRISH=0;
  4265   001A1A  0E00               	movlw	0
  4266   001A1C  6E99               	movwf	153,c	;volatile
  4267                           
  4268                           ;afficheur.c: 177: TRISJ=0;
  4269   001A1E  0E00               	movlw	0
  4270   001A20  6E9A               	movwf	154,c	;volatile
  4271                           
  4272                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4273   001A22  9A91               	bcf	145,5,c	;volatile
  4274                           
  4275                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4276   001A24  8C91               	bsf	145,6,c	;volatile
  4277                           
  4278                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4279   001A26  9891               	bcf	145,4,c	;volatile
  4280                           
  4281                           ;afficheur.c: 185: delai_us_char(4);
  4282   001A28  0E04               	movlw	4
  4283   001A2A  ECB8  F010         	call	_delai_us_char
  4284                           
  4285                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4286   001A2E  8891               	bsf	145,4,c	;volatile
  4287                           
  4288                           ;afficheur.c: 190: delai_us_char(12);
  4289   001A30  0E0C               	movlw	12
  4290   001A32  ECB8  F010         	call	_delai_us_char
  4291                           
  4292                           ;afficheur.c: 191: while(check_status_ok()==00)
  4293   001A36  D00C               	goto	i2l4218
  4294   001A38                     i2l4208:
  4295                           
  4296                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4297   001A38  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4298                           
  4299                           ;afficheur.c: 194: delai_us_char(12);
  4300   001A3A  0E0C               	movlw	12
  4301   001A3C  ECB8  F010         	call	_delai_us_char
  4302                           
  4303                           ;afficheur.c: 195: if (error_count>200)
  4304   001A40  0EC8               	movlw	200
  4305   001A42  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4306   001A44  D005               	goto	i2l4218
  4307                           
  4308                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4309   001A46  828B               	bsf	139,1,c	;volatile
  4310   001A48  808F               	bsf	143,0,c	;volatile
  4311   001A4A  948B               	bcf	139,2,c	;volatile
  4312                           
  4313                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4314   001A4C  9EF2               	bcf	242,7,c	;volatile
  4315   001A4E                     i2l1253:
  4316   001A4E  D7FF               	goto	i2l1253
  4317   001A50                     i2l4218:
  4318   001A50  EC6C  F010         	call	_check_status_ok	;wreg free
  4319   001A54  0900               	iorlw	0
  4320   001A56  B4D8               	btfsc	status,2,c
  4321   001A58  D7EF               	goto	i2l4208
  4322                           
  4323                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4324   001A5A  0E0F               	movlw	15
  4325   001A5C  6E05               	movwf	d2command@d2^0,c
  4326   001A5E  0E21               	movlw	33
  4327   001A60  6E06               	movwf	d2command@cmd^0,c
  4328   001A62  0E27               	movlw	39
  4329   001A64  EC81  F00F         	call	_d2command
  4330                           
  4331                           ;afficheur.c: 206: d2command(0,0,0x22);
  4332   001A68  0E00               	movlw	0
  4333   001A6A  6E05               	movwf	d2command@d2^0,c
  4334   001A6C  0E22               	movlw	34
  4335   001A6E  6E06               	movwf	d2command@cmd^0,c
  4336   001A70  0E00               	movlw	0
  4337   001A72  EC81  F00F         	call	_d2command
  4338                           
  4339                           ;afficheur.c: 207: d2command(0,0,0x24);
  4340   001A76  0E00               	movlw	0
  4341   001A78  6E05               	movwf	d2command@d2^0,c
  4342   001A7A  0E24               	movlw	36
  4343   001A7C  6E06               	movwf	d2command@cmd^0,c
  4344   001A7E  0E00               	movlw	0
  4345   001A80  EC81  F00F         	call	_d2command
  4346                           
  4347                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4348   001A84  0E7B               	movlw	123
  4349   001A86  6E05               	movwf	d2command@d2^0,c
  4350   001A88  0E40               	movlw	64
  4351   001A8A  6E06               	movwf	d2command@cmd^0,c
  4352   001A8C  0E00               	movlw	0
  4353   001A8E  EC81  F00F         	call	_d2command
  4354                           
  4355                           ;afficheur.c: 211: d2command(40,0,0x41);
  4356   001A92  0E00               	movlw	0
  4357   001A94  6E05               	movwf	d2command@d2^0,c
  4358   001A96  0E41               	movlw	65
  4359   001A98  6E06               	movwf	d2command@cmd^0,c
  4360   001A9A  0E28               	movlw	40
  4361   001A9C  EC81  F00F         	call	_d2command
  4362                           
  4363                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4364   001AA0  0E80               	movlw	128
  4365   001AA2  6E05               	movwf	d2command@d2^0,c
  4366   001AA4  0E42               	movlw	66
  4367   001AA6  6E06               	movwf	d2command@cmd^0,c
  4368   001AA8  0E00               	movlw	0
  4369   001AAA  EC81  F00F         	call	_d2command
  4370                           
  4371                           ;afficheur.c: 213: d2command(40,0,0x43);
  4372   001AAE  0E00               	movlw	0
  4373   001AB0  6E05               	movwf	d2command@d2^0,c
  4374   001AB2  0E43               	movlw	67
  4375   001AB4  6E06               	movwf	d2command@cmd^0,c
  4376   001AB6  0E28               	movlw	40
  4377   001AB8  EC81  F00F         	call	_d2command
  4378                           
  4379                           ;afficheur.c: 216: command(0x80);
  4380   001ABC  0E80               	movlw	128
  4381   001ABE  ECE6  F010         	call	_command
  4382                           
  4383                           ;afficheur.c: 219: command(0x9C);
  4384   001AC2  0E9C               	movlw	156
  4385   001AC4  ECE6  F010         	call	_command
  4386                           
  4387                           ;afficheur.c: 222: command(0xA0);
  4388   001AC8  0EA0               	movlw	160
  4389   001ACA  ECE6  F010         	call	_command
  4390                           
  4391                           ;afficheur.c: 225: d1command(0x02,0x70);
  4392   001ACE  0E70               	movlw	112
  4393   001AD0  6E05               	movwf	d1command@cmd^0,c
  4394   001AD2  0E02               	movlw	2
  4395   001AD4  ECCF  F00F         	call	_d1command
  4396   001AD8  0012               	return		;funcret
  4397   001ADA                     __end_of_initialisation_afficheur:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function _check_status_ok *****************
  4401 ;; Defined at:
  4402 ;;		line 30 in file "afficheur.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  res             1    0[COMRAM] unsigned char 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      unsigned char 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;Total ram usage:        1 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_initialisation_afficheur
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text18
  4430   0020D8                     __ptext18:
  4431                           	callstack 0
  4432   0020D8                     _check_status_ok:
  4433                           	callstack 26
  4434                           
  4435                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4436                           
  4437                           ;incstack = 0
  4438   0020D8  6899               	setf	153,c	;volatile
  4439                           
  4440                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4441   0020DA  8091               	bsf	145,0,c	;volatile
  4442                           
  4443                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4444   0020DC  9691               	bcf	145,3,c	;volatile
  4445                           
  4446                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4447   0020DE  9291               	bcf	145,1,c	;volatile
  4448                           
  4449                           ;afficheur.c: 39: __nop();
  4450   0020E0  F000               	nop	
  4451                           
  4452                           ;afficheur.c: 40: __nop();
  4453   0020E2  F000               	nop	
  4454                           
  4455                           ;afficheur.c: 41: __nop();
  4456   0020E4  F000               	nop	
  4457                           
  4458                           ;afficheur.c: 42: res=PORTH;
  4459   0020E6  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4460                           
  4461                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4462   0020EA  8291               	bsf	145,1,c	;volatile
  4463                           
  4464                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4465   0020EC  8691               	bsf	145,3,c	;volatile
  4466                           
  4467                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4468   0020EE  5001               	movf	check_status_ok@res^0,w,c
  4469   0020F0  0B03               	andlw	3
  4470   0020F2  0A03               	xorlw	3
  4471   0020F4  A4D8               	btfss	status,2,c
  4472   0020F6  D002               	goto	i2l2698
  4473                           
  4474                           ;afficheur.c: 47: res=1;
  4475   0020F8  0E01               	movlw	1
  4476   0020FA  D001               	goto	L3
  4477   0020FC                     i2l2698:
  4478                           
  4479                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4480   0020FC  0E00               	movlw	0
  4481   0020FE                     L3:
  4482   0020FE  6E01               	movwf	check_status_ok@res^0,c
  4483                           
  4484                           ;afficheur.c: 50: return res;
  4485   002100  5001               	movf	check_status_ok@res^0,w,c
  4486   002102  0012               	return		;funcret
  4487   002104                     __end_of_check_status_ok:
  4488                           	callstack 0
  4489                           
  4490 ;; *************** function _init_rxtx *****************
  4491 ;; Defined at:
  4492 ;;		line 4 in file "rxtx.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;		None
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;		None
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  1    wreg      void 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;Total ram usage:        0 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_tache1
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           	psect	text19
  4520   00214E                     __ptext19:
  4521                           	callstack 0
  4522   00214E                     _init_rxtx:
  4523                           	callstack 27
  4524                           
  4525                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4526                           
  4527                           ;incstack = 0
  4528   00214E  9C94               	bcf	148,6,c	;volatile
  4529                           
  4530                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4531   002150  8E94               	bsf	148,7,c	;volatile
  4532                           
  4533                           ;rxtx.c: 8: BAUDCON1=0x08;
  4534   002152  0E08               	movlw	8
  4535   002154  6E65               	movwf	101,c	;volatile
  4536                           
  4537                           ;rxtx.c: 9: SPBRGH1=0x04;
  4538   002156  0E04               	movlw	4
  4539   002158  6ED4               	movwf	212,c	;volatile
  4540                           
  4541                           ;rxtx.c: 10: SPBRG1=0xE1;
  4542   00215A  0EE1               	movlw	225
  4543   00215C  6EAF               	movwf	175,c	;volatile
  4544                           
  4545                           ;rxtx.c: 11: TXSTA1=0x04;
  4546   00215E  0E04               	movlw	4
  4547   002160  6EAC               	movwf	172,c	;volatile
  4548                           
  4549                           ;rxtx.c: 12: RCSTA1=0x80;
  4550   002162  0E80               	movlw	128
  4551   002164  6EAB               	movwf	171,c	;volatile
  4552                           
  4553                           ;rxtx.c: 13: TXSTA1=0x24;
  4554   002166  0E24               	movlw	36
  4555   002168  6EAC               	movwf	172,c	;volatile
  4556                           
  4557                           ;rxtx.c: 14: RCSTA1=0x90;
  4558   00216A  0E90               	movlw	144
  4559   00216C  6EAB               	movwf	171,c	;volatile
  4560   00216E  0012               	return		;funcret
  4561   002170                     __end_of_init_rxtx:
  4562                           	callstack 0
  4563                           
  4564 ;; *************** function _draw_square *****************
  4565 ;; Defined at:
  4566 ;;		line 325 in file "afficheur.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  x1              1    wreg     unsigned char 
  4569 ;;  y1              1   14[COMRAM] unsigned char 
  4570 ;;  x2              1   15[COMRAM] unsigned char 
  4571 ;;  y2              1   16[COMRAM] unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  x1              1   17[COMRAM] unsigned char 
  4574 ;;  y               1   19[COMRAM] unsigned char 
  4575 ;;  x               1   18[COMRAM] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4589 ;;Total ram usage:        6 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 4
  4592 ;; This function calls:
  4593 ;;		_plot1
  4594 ;; This function is called by:
  4595 ;;		_tache1
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text20
  4600   001F52                     __ptext20:
  4601                           	callstack 0
  4602   001F52                     _draw_square:
  4603                           	callstack 23
  4604                           
  4605                           ;incstack = 0
  4606                           ;draw_square@x1 stored from wreg
  4607   001F52  6E12               	movwf	draw_square@x1^0,c
  4608                           
  4609                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4610   001F54  C012  F013         	movff	draw_square@x1,draw_square@x
  4611   001F58  D00B               	goto	i2l4256
  4612   001F5A                     i2l4252:
  4613                           
  4614                           ;afficheur.c: 330: plot1(x, y1);
  4615   001F5A  C00F  F009         	movff	draw_square@y1,plot1@y
  4616   001F5E  5013               	movf	draw_square@x^0,w,c
  4617   001F60  EC6D  F00D         	call	_plot1
  4618                           
  4619                           ;afficheur.c: 331: plot1(x, y2);
  4620   001F64  C011  F009         	movff	draw_square@y2,plot1@y
  4621   001F68  5013               	movf	draw_square@x^0,w,c
  4622   001F6A  EC6D  F00D         	call	_plot1
  4623   001F6E  2A13               	incf	draw_square@x^0,f,c
  4624   001F70                     i2l4256:
  4625   001F70  5013               	movf	draw_square@x^0,w,c
  4626   001F72  5C10               	subwf	draw_square@x2^0,w,c
  4627   001F74  B0D8               	btfsc	status,0,c
  4628   001F76  D7F1               	goto	i2l4252
  4629                           
  4630                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4631   001F78  C00F  F014         	movff	draw_square@y1,draw_square@y
  4632   001F7C  D00B               	goto	i2l4262
  4633   001F7E                     i2l4258:
  4634                           
  4635                           ;afficheur.c: 336: plot1(x1, y);
  4636   001F7E  C014  F009         	movff	draw_square@y,plot1@y
  4637   001F82  5012               	movf	draw_square@x1^0,w,c
  4638   001F84  EC6D  F00D         	call	_plot1
  4639                           
  4640                           ;afficheur.c: 337: plot1(x2, y);
  4641   001F88  C014  F009         	movff	draw_square@y,plot1@y
  4642   001F8C  5010               	movf	draw_square@x2^0,w,c
  4643   001F8E  EC6D  F00D         	call	_plot1
  4644   001F92  2A14               	incf	draw_square@y^0,f,c
  4645   001F94                     i2l4262:
  4646   001F94  5014               	movf	draw_square@y^0,w,c
  4647   001F96  5C11               	subwf	draw_square@y2^0,w,c
  4648   001F98  A0D8               	btfss	status,0,c
  4649   001F9A  0012               	return	
  4650   001F9C  D7F0               	goto	i2l4258
  4651   001F9E                     __end_of_draw_square:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _plot1 *****************
  4655 ;; Defined at:
  4656 ;;		line 390 in file "afficheur.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  x               1    wreg     unsigned char 
  4659 ;;  y               1    8[COMRAM] unsigned char 
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  x               1   13[COMRAM] unsigned char 
  4662 ;;  add             2   11[COMRAM] unsigned int 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  1    wreg      void 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4672 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4673 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;Total ram usage:        6 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; Hardware stack levels required when called: 3
  4679 ;; This function calls:
  4680 ;;		___awdiv
  4681 ;;		___awmod
  4682 ;;		_command
  4683 ;;		_d2command
  4684 ;; This function is called by:
  4685 ;;		_tache1
  4686 ;;		_draw_square
  4687 ;;		_draw_filled_square
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text21
  4692   001ADA                     __ptext21:
  4693                           	callstack 0
  4694   001ADA                     _plot1:
  4695                           	callstack 24
  4696                           
  4697                           ;incstack = 0
  4698                           ;plot1@x stored from wreg
  4699   001ADA  6E0E               	movwf	plot1@x^0,c
  4700                           
  4701                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  4702   001ADC  C00E  F001         	movff	plot1@x,___awdiv@dividend
  4703   001AE0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4704   001AE2  0E00               	movlw	0
  4705   001AE4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4706   001AE6  0E06               	movlw	6
  4707   001AE8  6E03               	movwf	___awdiv@divisor^0,c
  4708   001AEA  EC5B  F00E         	call	___awdiv	;wreg free
  4709   001AEE  5009               	movf	plot1@y^0,w,c
  4710   001AF0  0D28               	mullw	40
  4711   001AF2  CFF3 F00A          	movff	prodl,??_plot1
  4712   001AF6  CFF4 F00B          	movff	prodh,??_plot1+1
  4713   001AFA  5001               	movf	?___awdiv^0,w,c
  4714   001AFC  240A               	addwf	??_plot1^0,w,c
  4715   001AFE  6E0C               	movwf	plot1@add^0,c
  4716   001B00  5002               	movf	(?___awdiv+1)^0,w,c
  4717   001B02  200B               	addwfc	(??_plot1+1)^0,w,c
  4718   001B04  6E0D               	movwf	(plot1@add+1)^0,c
  4719                           
  4720                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  4721   001B06  500D               	movf	(plot1@add+1)^0,w,c
  4722   001B08  6E05               	movwf	d2command@d2^0,c
  4723   001B0A  0E24               	movlw	36
  4724   001B0C  6E06               	movwf	d2command@cmd^0,c
  4725   001B0E  500C               	movf	plot1@add^0,w,c
  4726   001B10  EC81  F00F         	call	_d2command
  4727                           
  4728                           ;afficheur.c: 397: switch(x%6)
  4729   001B14  D018               	goto	i2l4182
  4730   001B16                     i2l4168:
  4731   001B16  0EFD               	movlw	253
  4732   001B18  ECE6  F010         	call	_command
  4733   001B1C  0012               	return	
  4734   001B1E                     i2l4170:
  4735   001B1E  0EFC               	movlw	252
  4736   001B20  ECE6  F010         	call	_command
  4737   001B24  0012               	return	
  4738   001B26                     i2l4172:
  4739   001B26  0EFB               	movlw	251
  4740   001B28  ECE6  F010         	call	_command
  4741   001B2C  0012               	return	
  4742   001B2E                     i2l4174:
  4743   001B2E  0EFA               	movlw	250
  4744   001B30  ECE6  F010         	call	_command
  4745   001B34  0012               	return	
  4746   001B36                     i2l4176:
  4747   001B36  0EF9               	movlw	249
  4748   001B38  ECE6  F010         	call	_command
  4749   001B3C  0012               	return	
  4750   001B3E                     i2l4178:
  4751   001B3E  0EF8               	movlw	248
  4752   001B40  ECE6  F010         	call	_command
  4753   001B44  0012               	return	
  4754   001B46                     i2l4182:
  4755   001B46  C00E  F001         	movff	plot1@x,___awmod@dividend
  4756   001B4A  6A02               	clrf	(___awmod@dividend+1)^0,c
  4757   001B4C  0E00               	movlw	0
  4758   001B4E  6E04               	movwf	(___awmod@divisor+1)^0,c
  4759   001B50  0E06               	movlw	6
  4760   001B52  6E03               	movwf	___awmod@divisor^0,c
  4761   001B54  EC9D  F00E         	call	___awmod	;wreg free
  4762                           
  4763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4764                           ; Switch size 1, requested type "simple"
  4765                           ; Number of cases is 1, Range of values is 0 to 0
  4766                           ; switch strategies available:
  4767                           ; Name         Instructions Cycles
  4768                           ; simple_byte            4     3 (average)
  4769                           ;	Chosen strategy is simple_byte
  4770   001B58  5002               	movf	(?___awmod+1)^0,w,c
  4771   001B5A  0A00               	xorlw	0	; case 0
  4772   001B5C  A4D8               	btfss	status,2,c
  4773   001B5E  0012               	return	
  4774                           
  4775                           ; Switch size 1, requested type "simple"
  4776                           ; Number of cases is 6, Range of values is 0 to 5
  4777                           ; switch strategies available:
  4778                           ; Name         Instructions Cycles
  4779                           ; simple_byte           19    10 (average)
  4780                           ;	Chosen strategy is simple_byte
  4781   001B60  5001               	movf	?___awmod^0,w,c
  4782   001B62  0A00               	xorlw	0	; case 0
  4783   001B64  B4D8               	btfsc	status,2,c
  4784   001B66  D7D7               	goto	i2l4168
  4785   001B68  0A01               	xorlw	1	; case 1
  4786   001B6A  B4D8               	btfsc	status,2,c
  4787   001B6C  D7D8               	goto	i2l4170
  4788   001B6E  0A03               	xorlw	3	; case 2
  4789   001B70  B4D8               	btfsc	status,2,c
  4790   001B72  D7D9               	goto	i2l4172
  4791   001B74  0A01               	xorlw	1	; case 3
  4792   001B76  B4D8               	btfsc	status,2,c
  4793   001B78  D7DA               	goto	i2l4174
  4794   001B7A  0A07               	xorlw	7	; case 4
  4795   001B7C  B4D8               	btfsc	status,2,c
  4796   001B7E  D7DB               	goto	i2l4176
  4797   001B80  0A01               	xorlw	1	; case 5
  4798   001B82  A4D8               	btfss	status,2,c
  4799   001B84  0012               	return	
  4800   001B86  D7DB               	goto	i2l4178
  4801   001B88                     __end_of_plot1:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _command *****************
  4805 ;; Defined at:
  4806 ;;		line 90 in file "afficheur.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  cmd             1    wreg     unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  cmd             1    4[COMRAM] unsigned char 
  4811 ;;  res             1    0        unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      unsigned char 
  4814 ;; Registers used:
  4815 ;;		wreg, status,2, status,0, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;Total ram usage:        1 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 2
  4828 ;; This function calls:
  4829 ;;		_delai_us_char
  4830 ;;		_wait_status_ok
  4831 ;;		_write_c_aff
  4832 ;; This function is called by:
  4833 ;;		_initialisation_afficheur
  4834 ;;		_plot1
  4835 ;;		_plot0
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text22
  4840   0021CC                     __ptext22:
  4841                           	callstack 0
  4842   0021CC                     _command:
  4843                           	callstack 24
  4844                           
  4845                           ;incstack = 0
  4846                           ;command@cmd stored from wreg
  4847   0021CC  6E05               	movwf	command@cmd^0,c
  4848                           
  4849                           ;afficheur.c: 96: if(wait_status_ok()==1)
  4850   0021CE  EC58  F00F         	call	_wait_status_ok	;wreg free
  4851   0021D2  06E8               	decf	wreg,f,c
  4852   0021D4  A4D8               	btfss	status,2,c
  4853   0021D6  0012               	return	
  4854                           
  4855                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  4856   0021D8  0E0C               	movlw	12
  4857   0021DA  ECB8  F010         	call	_delai_us_char
  4858                           
  4859                           ;afficheur.c: 99: write_c_aff(cmd);
  4860   0021DE  5005               	movf	command@cmd^0,w,c
  4861   0021E0  EC00  F011         	call	_write_c_aff
  4862   0021E4  0012               	return		;funcret
  4863   0021E6                     __end_of_command:
  4864                           	callstack 0
  4865                           
  4866 ;; *************** function ___awmod *****************
  4867 ;; Defined at:
  4868 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  dividend        2    0[COMRAM] int 
  4871 ;;  divisor         2    2[COMRAM] int 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  sign            1    5[COMRAM] unsigned char 
  4874 ;;  counter         1    4[COMRAM] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2    0[COMRAM] int 
  4877 ;; Registers used:
  4878 ;;		wreg, status,2, status,0
  4879 ;; Tracked objects:
  4880 ;;		On entry : 0/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;Total ram usage:        6 bytes
  4889 ;; Hardware stack levels used: 1
  4890 ;; This function calls:
  4891 ;;		Nothing
  4892 ;; This function is called by:
  4893 ;;		_plot1
  4894 ;;		_plot0
  4895 ;; This function uses a non-reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text23
  4899   001D3A                     __ptext23:
  4900                           	callstack 0
  4901   001D3A                     ___awmod:
  4902                           	callstack 26
  4903                           
  4904                           ;incstack = 0
  4905   001D3A  0E00               	movlw	0
  4906   001D3C  6E06               	movwf	___awmod@sign^0,c
  4907   001D3E  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  4908   001D40  D006               	goto	i2l4100
  4909   001D42  6C01               	negf	___awmod@dividend^0,c
  4910   001D44  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4911   001D46  B0D8               	btfsc	status,0,c
  4912   001D48  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4913   001D4A  0E01               	movlw	1
  4914   001D4C  6E06               	movwf	___awmod@sign^0,c
  4915   001D4E                     i2l4100:
  4916   001D4E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4917   001D50  D004               	goto	i2l4104
  4918   001D52  6C03               	negf	___awmod@divisor^0,c
  4919   001D54  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4920   001D56  B0D8               	btfsc	status,0,c
  4921   001D58  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4922   001D5A                     i2l4104:
  4923   001D5A  5003               	movf	___awmod@divisor^0,w,c
  4924   001D5C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4925   001D5E  B4D8               	btfsc	status,2,c
  4926   001D60  D018               	goto	i2l4120
  4927   001D62  0E01               	movlw	1
  4928   001D64  6E05               	movwf	___awmod@counter^0,c
  4929   001D66  D004               	goto	i2l4110
  4930   001D68                     i2l4108:
  4931   001D68  90D8               	bcf	status,0,c
  4932   001D6A  3603               	rlcf	___awmod@divisor^0,f,c
  4933   001D6C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4934   001D6E  2A05               	incf	___awmod@counter^0,f,c
  4935   001D70                     i2l4110:
  4936   001D70  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4937   001D72  D7FA               	goto	i2l4108
  4938   001D74                     i2u203_40:
  4939   001D74  5003               	movf	___awmod@divisor^0,w,c
  4940   001D76  5C01               	subwf	___awmod@dividend^0,w,c
  4941   001D78  5004               	movf	(___awmod@divisor+1)^0,w,c
  4942   001D7A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4943   001D7C  A0D8               	btfss	status,0,c
  4944   001D7E  D004               	goto	i2l4116
  4945   001D80  5003               	movf	___awmod@divisor^0,w,c
  4946   001D82  5E01               	subwf	___awmod@dividend^0,f,c
  4947   001D84  5004               	movf	(___awmod@divisor+1)^0,w,c
  4948   001D86  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4949   001D88                     i2l4116:
  4950   001D88  90D8               	bcf	status,0,c
  4951   001D8A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4952   001D8C  3203               	rrcf	___awmod@divisor^0,f,c
  4953   001D8E  2E05               	decfsz	___awmod@counter^0,f,c
  4954   001D90  D7F1               	goto	i2u203_40
  4955   001D92                     i2l4120:
  4956   001D92  5006               	movf	___awmod@sign^0,w,c
  4957   001D94  B4D8               	btfsc	status,2,c
  4958   001D96  D004               	goto	i2l4124
  4959   001D98  6C01               	negf	___awmod@dividend^0,c
  4960   001D9A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4961   001D9C  B0D8               	btfsc	status,0,c
  4962   001D9E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4963   001DA0                     i2l4124:
  4964   001DA0  C001  F001         	movff	___awmod@dividend,?___awmod
  4965   001DA4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4966   001DA8  0012               	return		;funcret
  4967   001DAA                     __end_of___awmod:
  4968                           	callstack 0
  4969                           
  4970 ;; *************** function ___awdiv *****************
  4971 ;; Defined at:
  4972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  dividend        2    0[COMRAM] int 
  4975 ;;  divisor         2    2[COMRAM] int 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  quotient        2    6[COMRAM] int 
  4978 ;;  sign            1    5[COMRAM] unsigned char 
  4979 ;;  counter         1    4[COMRAM] unsigned char 
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  2    0[COMRAM] int 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;Total ram usage:        8 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_plot1
  4999 ;;		_draw_dec8
  5000 ;;		_plot0
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           	psect	text24
  5005   001CB6                     __ptext24:
  5006                           	callstack 0
  5007   001CB6                     ___awdiv:
  5008                           	callstack 26
  5009                           
  5010                           ;incstack = 0
  5011   001CB6  0E00               	movlw	0
  5012   001CB8  6E06               	movwf	___awdiv@sign^0,c
  5013   001CBA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5014   001CBC  D006               	goto	i2l4056
  5015   001CBE  6C03               	negf	___awdiv@divisor^0,c
  5016   001CC0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5017   001CC2  B0D8               	btfsc	status,0,c
  5018   001CC4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5019   001CC6  0E01               	movlw	1
  5020   001CC8  6E06               	movwf	___awdiv@sign^0,c
  5021   001CCA                     i2l4056:
  5022   001CCA  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5023   001CCC  D006               	goto	i2l4062
  5024   001CCE  6C01               	negf	___awdiv@dividend^0,c
  5025   001CD0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5026   001CD2  B0D8               	btfsc	status,0,c
  5027   001CD4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5028   001CD6  0E01               	movlw	1
  5029   001CD8  1A06               	xorwf	___awdiv@sign^0,f,c
  5030   001CDA                     i2l4062:
  5031   001CDA  0E00               	movlw	0
  5032   001CDC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5033   001CDE  0E00               	movlw	0
  5034   001CE0  6E07               	movwf	___awdiv@quotient^0,c
  5035   001CE2  5003               	movf	___awdiv@divisor^0,w,c
  5036   001CE4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5037   001CE6  B4D8               	btfsc	status,2,c
  5038   001CE8  D01C               	goto	i2l4084
  5039   001CEA  0E01               	movlw	1
  5040   001CEC  6E05               	movwf	___awdiv@counter^0,c
  5041   001CEE  D004               	goto	i2l4070
  5042   001CF0                     i2l4068:
  5043   001CF0  90D8               	bcf	status,0,c
  5044   001CF2  3603               	rlcf	___awdiv@divisor^0,f,c
  5045   001CF4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5046   001CF6  2A05               	incf	___awdiv@counter^0,f,c
  5047   001CF8                     i2l4070:
  5048   001CF8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5049   001CFA  D7FA               	goto	i2l4068
  5050   001CFC                     i2u197_40:
  5051   001CFC  90D8               	bcf	status,0,c
  5052   001CFE  3607               	rlcf	___awdiv@quotient^0,f,c
  5053   001D00  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5054   001D02  5003               	movf	___awdiv@divisor^0,w,c
  5055   001D04  5C01               	subwf	___awdiv@dividend^0,w,c
  5056   001D06  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5057   001D08  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5058   001D0A  A0D8               	btfss	status,0,c
  5059   001D0C  D005               	goto	i2l4080
  5060   001D0E  5003               	movf	___awdiv@divisor^0,w,c
  5061   001D10  5E01               	subwf	___awdiv@dividend^0,f,c
  5062   001D12  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5063   001D14  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5064   001D16  8007               	bsf	___awdiv@quotient^0,0,c
  5065   001D18                     i2l4080:
  5066   001D18  90D8               	bcf	status,0,c
  5067   001D1A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5068   001D1C  3203               	rrcf	___awdiv@divisor^0,f,c
  5069   001D1E  2E05               	decfsz	___awdiv@counter^0,f,c
  5070   001D20  D7ED               	goto	i2u197_40
  5071   001D22                     i2l4084:
  5072   001D22  5006               	movf	___awdiv@sign^0,w,c
  5073   001D24  B4D8               	btfsc	status,2,c
  5074   001D26  D004               	goto	i2l4088
  5075   001D28  6C07               	negf	___awdiv@quotient^0,c
  5076   001D2A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5077   001D2C  B0D8               	btfsc	status,0,c
  5078   001D2E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5079   001D30                     i2l4088:
  5080   001D30  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5081   001D34  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5082   001D38  0012               	return		;funcret
  5083   001D3A                     __end_of___awdiv:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function _draw_hex8 *****************
  5087 ;; Defined at:
  5088 ;;		line 252 in file "afficheur.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  octet           1    wreg     unsigned char 
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  octet           1    7[COMRAM] unsigned char 
  5093 ;;  c               1    8[COMRAM] unsigned char 
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0, cstack
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;Total ram usage:        2 bytes
  5108 ;; Hardware stack levels used: 1
  5109 ;; Hardware stack levels required when called: 3
  5110 ;; This function calls:
  5111 ;;		_d1command
  5112 ;; This function is called by:
  5113 ;;		_tache1
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text25
  5118   001DAA                     __ptext25:
  5119                           	callstack 0
  5120   001DAA                     _draw_hex8:
  5121                           	callstack 24
  5122                           
  5123                           ;incstack = 0
  5124                           ;draw_hex8@octet stored from wreg
  5125   001DAA  6E08               	movwf	draw_hex8@octet^0,c
  5126                           
  5127                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5128   001DAC  3808               	swapf	draw_hex8@octet^0,w,c
  5129   001DAE  0B0F               	andlw	15
  5130   001DB0  6E09               	movwf	draw_hex8@c^0,c
  5131                           
  5132                           ;afficheur.c: 257: if (c>9)
  5133   001DB2  0E09               	movlw	9
  5134   001DB4  6409               	cpfsgt	draw_hex8@c^0,c
  5135   001DB6  D003               	goto	i2l4268
  5136                           
  5137                           ;afficheur.c: 258: c=c+0x17;
  5138   001DB8  5009               	movf	draw_hex8@c^0,w,c
  5139   001DBA  0F17               	addlw	23
  5140   001DBC  D002               	goto	L4
  5141   001DBE                     i2l4268:
  5142                           
  5143                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5144   001DBE  5009               	movf	draw_hex8@c^0,w,c
  5145   001DC0  0F10               	addlw	16
  5146   001DC2                     L4:
  5147   001DC2  6E09               	movwf	draw_hex8@c^0,c
  5148   001DC4  D001               	goto	i2l4270
  5149   001DC6                     i2l1282:
  5150                           
  5151                           ;afficheur.c: 262: __nop();
  5152   001DC6  F000               	nop	
  5153   001DC8                     i2l4270:
  5154   001DC8  0EC0               	movlw	192
  5155   001DCA  6E05               	movwf	d1command@cmd^0,c
  5156   001DCC  5009               	movf	draw_hex8@c^0,w,c
  5157   001DCE  ECCF  F00F         	call	_d1command
  5158   001DD2  0900               	iorlw	0
  5159   001DD4  B4D8               	btfsc	status,2,c
  5160   001DD6  D7F7               	goto	i2l1282
  5161                           
  5162                           ;afficheur.c: 264: c=(octet&0x0F);
  5163   001DD8  5008               	movf	draw_hex8@octet^0,w,c
  5164   001DDA  0B0F               	andlw	15
  5165   001DDC  6E09               	movwf	draw_hex8@c^0,c
  5166                           
  5167                           ;afficheur.c: 265: if (c>9)
  5168   001DDE  0E09               	movlw	9
  5169   001DE0  6409               	cpfsgt	draw_hex8@c^0,c
  5170   001DE2  D003               	goto	i2l4276
  5171                           
  5172                           ;afficheur.c: 266: c=c+0x17;
  5173   001DE4  5009               	movf	draw_hex8@c^0,w,c
  5174   001DE6  0F17               	addlw	23
  5175   001DE8  D002               	goto	L5
  5176   001DEA                     i2l4276:
  5177                           
  5178                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5179   001DEA  5009               	movf	draw_hex8@c^0,w,c
  5180   001DEC  0F10               	addlw	16
  5181   001DEE                     L5:
  5182   001DEE  6E09               	movwf	draw_hex8@c^0,c
  5183   001DF0  D001               	goto	i2l4278
  5184   001DF2                     i2l1287:
  5185                           
  5186                           ;afficheur.c: 270: __nop();
  5187   001DF2  F000               	nop	
  5188   001DF4                     i2l4278:
  5189   001DF4  0EC0               	movlw	192
  5190   001DF6  6E05               	movwf	d1command@cmd^0,c
  5191   001DF8  5009               	movf	draw_hex8@c^0,w,c
  5192   001DFA  ECCF  F00F         	call	_d1command
  5193   001DFE  0900               	iorlw	0
  5194   001E00  A4D8               	btfss	status,2,c
  5195   001E02  0012               	return	
  5196   001E04  D7F6               	goto	i2l1287
  5197   001E06                     __end_of_draw_hex8:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function _clear_text *****************
  5201 ;; Defined at:
  5202 ;;		line 307 in file "afficheur.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;		None
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  add             2    8[COMRAM] unsigned int 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:        2 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; Hardware stack levels required when called: 3
  5223 ;; This function calls:
  5224 ;;		_d1command
  5225 ;;		_d2command
  5226 ;; This function is called by:
  5227 ;;		_tache1
  5228 ;; This function uses a non-reentrant model
  5229 ;;
  5230                           
  5231                           	psect	text26
  5232   002078                     __ptext26:
  5233                           	callstack 0
  5234   002078                     _clear_text:
  5235                           	callstack 24
  5236                           
  5237                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5238                           
  5239                           ;incstack = 0
  5240   002078  0E00               	movlw	0
  5241   00207A  6E05               	movwf	d2command@d2^0,c
  5242   00207C  0E24               	movlw	36
  5243   00207E  6E06               	movwf	d2command@cmd^0,c
  5244   002080  0E00               	movlw	0
  5245   002082  EC81  F00F         	call	_d2command
  5246                           
  5247                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5248   002086  0E00               	movlw	0
  5249   002088  6E0A               	movwf	(clear_text@add+1)^0,c
  5250   00208A  0E00               	movlw	0
  5251   00208C  6E09               	movwf	clear_text@add^0,c
  5252   00208E                     i2l4230:
  5253                           
  5254                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5255   00208E  0EC0               	movlw	192
  5256   002090  6E05               	movwf	d1command@cmd^0,c
  5257   002092  0E00               	movlw	0
  5258   002094  ECCF  F00F         	call	_d1command
  5259   002098  4A09               	infsnz	clear_text@add^0,f,c
  5260   00209A  2A0A               	incf	(clear_text@add+1)^0,f,c
  5261   00209C  0E80               	movlw	128
  5262   00209E  180A               	xorwf	(clear_text@add+1)^0,w,c
  5263   0020A0  1009               	iorwf	clear_text@add^0,w,c
  5264   0020A2  B4D8               	btfsc	status,2,c
  5265   0020A4  0012               	return	
  5266   0020A6  D7F3               	goto	i2l4230
  5267   0020A8                     __end_of_clear_text:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function _clear_line *****************
  5271 ;; Defined at:
  5272 ;;		line 318 in file "afficheur.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  line            1    wreg     unsigned char 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  line            1   14[COMRAM] unsigned char 
  5277 ;;  column          1   15[COMRAM] unsigned char 
  5278 ;; Return value:  Size  Location     Type
  5279 ;;                  1    wreg      void 
  5280 ;; Registers used:
  5281 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5282 ;; Tracked objects:
  5283 ;;		On entry : 0/0
  5284 ;;		On exit  : 0/0
  5285 ;;		Unchanged: 0/0
  5286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5291 ;;Total ram usage:        2 bytes
  5292 ;; Hardware stack levels used: 1
  5293 ;; Hardware stack levels required when called: 4
  5294 ;; This function calls:
  5295 ;;		_draw_char
  5296 ;;		_goto_lico
  5297 ;; This function is called by:
  5298 ;;		_tache1
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text27
  5303   002192                     __ptext27:
  5304                           	callstack 0
  5305   002192                     _clear_line:
  5306                           	callstack 23
  5307                           
  5308                           ;incstack = 0
  5309                           ;clear_line@line stored from wreg
  5310   002192  6E0F               	movwf	clear_line@line^0,c
  5311                           
  5312                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5313   002194  0E00               	movlw	0
  5314   002196  6E10               	movwf	clear_line@column^0,c
  5315   002198                     i2l4290:
  5316                           
  5317                           ;afficheur.c: 321: goto_lico(line, column);
  5318   002198  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5319   00219C  500F               	movf	clear_line@line^0,w,c
  5320   00219E  EC03  F00F         	call	_goto_lico
  5321                           
  5322                           ;afficheur.c: 322: draw_char(' ');
  5323   0021A2  0E20               	movlw	32
  5324   0021A4  EC23  F010         	call	_draw_char
  5325   0021A8  2A10               	incf	clear_line@column^0,f,c
  5326   0021AA  0E27               	movlw	39
  5327   0021AC  6410               	cpfsgt	clear_line@column^0,c
  5328   0021AE  D7F4               	goto	i2l4290
  5329   0021B0  0012               	return	
  5330   0021B2                     __end_of_clear_line:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function _draw_char *****************
  5334 ;; Defined at:
  5335 ;;		line 228 in file "afficheur.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  dccar           1    wreg     unsigned char 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  dccar           1    7[COMRAM] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  1    wreg      void 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0, cstack
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;Total ram usage:        1 bytes
  5354 ;; Hardware stack levels used: 1
  5355 ;; Hardware stack levels required when called: 3
  5356 ;; This function calls:
  5357 ;;		_d1command
  5358 ;; This function is called by:
  5359 ;;		_tache1
  5360 ;;		_clear_line
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text28
  5365   002046                     __ptext28:
  5366                           	callstack 0
  5367   002046                     _draw_char:
  5368                           	callstack 24
  5369                           
  5370                           ;incstack = 0
  5371                           ;draw_char@dccar stored from wreg
  5372   002046  6E08               	movwf	draw_char@dccar^0,c
  5373                           
  5374                           ;afficheur.c: 230: if (dccar<32)
  5375   002048  0E20               	movlw	32
  5376   00204A  6008               	cpfslt	draw_char@dccar^0,c
  5377   00204C  D002               	goto	i2l4146
  5378                           
  5379                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5380   00204E  0E3F               	movlw	63
  5381   002050  6E08               	movwf	draw_char@dccar^0,c
  5382   002052                     i2l4146:
  5383                           
  5384                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5385   002052  0E9F               	movlw	159
  5386   002054  6408               	cpfsgt	draw_char@dccar^0,c
  5387   002056  D002               	goto	i2l4150
  5388                           
  5389                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5390   002058  0E3F               	movlw	63
  5391   00205A  6E08               	movwf	draw_char@dccar^0,c
  5392   00205C                     i2l4150:
  5393                           
  5394                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5395   00205C  5008               	movf	draw_char@dccar^0,w,c
  5396   00205E  0FE0               	addlw	224
  5397   002060  6E08               	movwf	draw_char@dccar^0,c
  5398                           
  5399                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5400   002062  D001               	goto	i2l4152
  5401   002064                     i2l1263:
  5402   002064  F000               	nop	
  5403   002066                     i2l4152:
  5404   002066  0EC0               	movlw	192
  5405   002068  6E05               	movwf	d1command@cmd^0,c
  5406   00206A  5008               	movf	draw_char@dccar^0,w,c
  5407   00206C  ECCF  F00F         	call	_d1command
  5408   002070  0900               	iorlw	0
  5409   002072  A4D8               	btfss	status,2,c
  5410   002074  0012               	return	
  5411   002076  D7F6               	goto	i2l1263
  5412   002078                     __end_of_draw_char:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function _clear_graphics *****************
  5416 ;; Defined at:
  5417 ;;		line 368 in file "afficheur.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;		None
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  add             2    8[COMRAM] unsigned int 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      void 
  5424 ;; Registers used:
  5425 ;;		wreg, status,2, status,0, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;Total ram usage:        2 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; Hardware stack levels required when called: 3
  5438 ;; This function calls:
  5439 ;;		_d1command
  5440 ;;		_d2command
  5441 ;; This function is called by:
  5442 ;;		_tache1
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text29
  5447   0020A8                     __ptext29:
  5448                           	callstack 0
  5449   0020A8                     _clear_graphics:
  5450                           	callstack 24
  5451                           
  5452                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5453                           
  5454                           ;incstack = 0
  5455   0020A8  0E80               	movlw	128
  5456   0020AA  6E05               	movwf	d2command@d2^0,c
  5457   0020AC  0E24               	movlw	36
  5458   0020AE  6E06               	movwf	d2command@cmd^0,c
  5459   0020B0  0E00               	movlw	0
  5460   0020B2  EC81  F00F         	call	_d2command
  5461                           
  5462                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5463   0020B6  0E80               	movlw	128
  5464   0020B8  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5465   0020BA  0E00               	movlw	0
  5466   0020BC  6E09               	movwf	clear_graphics@add^0,c
  5467   0020BE                     i2l4244:
  5468                           
  5469                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5470   0020BE  0EC0               	movlw	192
  5471   0020C0  6E05               	movwf	d1command@cmd^0,c
  5472   0020C2  0E00               	movlw	0
  5473   0020C4  ECCF  F00F         	call	_d1command
  5474   0020C8  4A09               	infsnz	clear_graphics@add^0,f,c
  5475   0020CA  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5476   0020CC  0EF8               	movlw	248
  5477   0020CE  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5478   0020D0  1009               	iorwf	clear_graphics@add^0,w,c
  5479   0020D2  B4D8               	btfsc	status,2,c
  5480   0020D4  0012               	return	
  5481   0020D6  D7F3               	goto	i2l4244
  5482   0020D8                     __end_of_clear_graphics:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function _charger *****************
  5486 ;; Defined at:
  5487 ;;		line 432 in file "afficheur.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;Total ram usage:        0 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; Hardware stack levels required when called: 4
  5508 ;; This function calls:
  5509 ;;		_draw_string
  5510 ;;		_goto_lico
  5511 ;; This function is called by:
  5512 ;;		_tache1
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text30
  5517   002262                     __ptext30:
  5518                           	callstack 0
  5519   002262                     _charger:
  5520                           	callstack 23
  5521                           
  5522                           ;afficheur.c: 434: goto_lico(14,0);
  5523                           
  5524                           ;incstack = 0
  5525   002262  0E00               	movlw	0
  5526   002264  6E09               	movwf	goto_lico@colonne^0,c
  5527   002266  0E0E               	movlw	14
  5528   002268  EC03  F00F         	call	_goto_lico
  5529                           
  5530                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5531   00226C  0E01               	movlw	low STR_22
  5532   00226E  6E08               	movwf	draw_string@tableau^0,c
  5533   002270  0E10               	movlw	high STR_22
  5534   002272  6E09               	movwf	(draw_string@tableau+1)^0,c
  5535   002274  EC15  F00E         	call	_draw_string	;wreg free
  5536   002278  0012               	return		;funcret
  5537   00227A                     __end_of_charger:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _goto_lico *****************
  5541 ;; Defined at:
  5542 ;;		line 295 in file "afficheur.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  ligne           1    wreg     unsigned char 
  5545 ;;  colonne         1    8[COMRAM] unsigned char 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  ligne           1   11[COMRAM] unsigned char 
  5548 ;;  adr             2   12[COMRAM] unsigned int 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;Total ram usage:        6 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 3
  5565 ;; This function calls:
  5566 ;;		_d2command
  5567 ;; This function is called by:
  5568 ;;		_tache1
  5569 ;;		_clear_line
  5570 ;;		_charger
  5571 ;;		_vide
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text31
  5576   001E06                     __ptext31:
  5577                           	callstack 0
  5578   001E06                     _goto_lico:
  5579                           	callstack 23
  5580                           
  5581                           ;incstack = 0
  5582                           ;goto_lico@ligne stored from wreg
  5583   001E06  6E0C               	movwf	goto_lico@ligne^0,c
  5584                           
  5585                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  5586   001E08  0E7B               	movlw	123
  5587   001E0A  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5588   001E0C  0E00               	movlw	0
  5589   001E0E  6E0D               	movwf	goto_lico@adr^0,c
  5590                           
  5591                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  5592   001E10  0E0F               	movlw	15
  5593   001E12  640C               	cpfsgt	goto_lico@ligne^0,c
  5594   001E14  D002               	goto	i2l4134
  5595   001E16  0E00               	movlw	0
  5596   001E18  6E0C               	movwf	goto_lico@ligne^0,c
  5597   001E1A                     i2l4134:
  5598                           
  5599                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  5600   001E1A  0E27               	movlw	39
  5601   001E1C  6409               	cpfsgt	goto_lico@colonne^0,c
  5602   001E1E  D002               	goto	i2l4138
  5603   001E20  0E00               	movlw	0
  5604   001E22  6E09               	movwf	goto_lico@colonne^0,c
  5605   001E24                     i2l4138:
  5606                           
  5607                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  5608   001E24  500C               	movf	goto_lico@ligne^0,w,c
  5609   001E26  0D28               	mullw	40
  5610   001E28  CFF3 F00A          	movff	prodl,??_goto_lico
  5611   001E2C  CFF4 F00B          	movff	prodh,??_goto_lico+1
  5612   001E30  5009               	movf	goto_lico@colonne^0,w,c
  5613   001E32  260A               	addwf	??_goto_lico^0,f,c
  5614   001E34  0E00               	movlw	0
  5615   001E36  220B               	addwfc	(??_goto_lico+1)^0,f,c
  5616   001E38  500D               	movf	goto_lico@adr^0,w,c
  5617   001E3A  240A               	addwf	??_goto_lico^0,w,c
  5618   001E3C  6E0D               	movwf	goto_lico@adr^0,c
  5619   001E3E  500E               	movf	(goto_lico@adr+1)^0,w,c
  5620   001E40  200B               	addwfc	(??_goto_lico+1)^0,w,c
  5621   001E42  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5622                           
  5623                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  5624   001E44  D001               	goto	i2l4140
  5625   001E46                     i2l1307:
  5626                           
  5627                           ;afficheur.c: 304: __nop();
  5628   001E46  F000               	nop	
  5629   001E48                     i2l4140:
  5630   001E48  500E               	movf	(goto_lico@adr+1)^0,w,c
  5631   001E4A  6E05               	movwf	d2command@d2^0,c
  5632   001E4C  0E24               	movlw	36
  5633   001E4E  6E06               	movwf	d2command@cmd^0,c
  5634   001E50  500D               	movf	goto_lico@adr^0,w,c
  5635   001E52  EC81  F00F         	call	_d2command
  5636   001E56  0900               	iorlw	0
  5637   001E58  A4D8               	btfss	status,2,c
  5638   001E5A  0012               	return	
  5639   001E5C  D7F4               	goto	i2l1307
  5640   001E5E                     __end_of_goto_lico:
  5641                           	callstack 0
  5642                           
  5643 ;; *************** function _d2command *****************
  5644 ;; Defined at:
  5645 ;;		line 128 in file "afficheur.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  d1              1    wreg     unsigned char 
  5648 ;;  d2              1    4[COMRAM] unsigned char 
  5649 ;;  cmd             1    5[COMRAM] unsigned char 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  d1              1    6[COMRAM] unsigned char 
  5652 ;;  res             1    7[COMRAM] unsigned char 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      unsigned char 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;Total ram usage:        4 bytes
  5667 ;; Hardware stack levels used: 1
  5668 ;; Hardware stack levels required when called: 2
  5669 ;; This function calls:
  5670 ;;		_delai_us_char
  5671 ;;		_wait_status_ok
  5672 ;;		_write_c_aff
  5673 ;;		_write_d_aff
  5674 ;; This function is called by:
  5675 ;;		_initialisation_afficheur
  5676 ;;		_goto_lico
  5677 ;;		_clear_text
  5678 ;;		_clear_graphics
  5679 ;;		_plot1
  5680 ;;		_clear_cgram
  5681 ;;		_plot0
  5682 ;; This function uses a non-reentrant model
  5683 ;;
  5684                           
  5685                           	psect	text32
  5686   001F02                     __ptext32:
  5687                           	callstack 0
  5688   001F02                     _d2command:
  5689                           	callstack 23
  5690                           
  5691                           ;incstack = 0
  5692                           ;d2command@d1 stored from wreg
  5693   001F02  6E07               	movwf	d2command@d1^0,c
  5694                           
  5695                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  5696   001F04  0E00               	movlw	0
  5697   001F06  6E08               	movwf	d2command@res^0,c
  5698                           
  5699                           ;afficheur.c: 134: if (wait_status_ok()==1)
  5700   001F08  EC58  F00F         	call	_wait_status_ok	;wreg free
  5701   001F0C  06E8               	decf	wreg,f,c
  5702   001F0E  A4D8               	btfss	status,2,c
  5703   001F10  D01E               	goto	i2l4044
  5704                           
  5705                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  5706   001F12  0E0C               	movlw	12
  5707   001F14  ECB8  F010         	call	_delai_us_char
  5708                           
  5709                           ;afficheur.c: 137: write_d_aff(d1);
  5710   001F18  5007               	movf	d2command@d1^0,w,c
  5711   001F1A  ECF3  F010         	call	_write_d_aff
  5712                           
  5713                           ;afficheur.c: 138: if (wait_status_ok()==1)
  5714   001F1E  EC58  F00F         	call	_wait_status_ok	;wreg free
  5715   001F22  06E8               	decf	wreg,f,c
  5716   001F24  A4D8               	btfss	status,2,c
  5717   001F26  D013               	goto	i2l4044
  5718                           
  5719                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  5720   001F28  0E0C               	movlw	12
  5721   001F2A  ECB8  F010         	call	_delai_us_char
  5722                           
  5723                           ;afficheur.c: 141: write_d_aff(d2);
  5724   001F2E  5005               	movf	d2command@d2^0,w,c
  5725   001F30  ECF3  F010         	call	_write_d_aff
  5726                           
  5727                           ;afficheur.c: 142: if (wait_status_ok()==1)
  5728   001F34  EC58  F00F         	call	_wait_status_ok	;wreg free
  5729   001F38  06E8               	decf	wreg,f,c
  5730   001F3A  A4D8               	btfss	status,2,c
  5731   001F3C  D008               	goto	i2l4044
  5732                           
  5733                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  5734   001F3E  0E0C               	movlw	12
  5735   001F40  ECB8  F010         	call	_delai_us_char
  5736                           
  5737                           ;afficheur.c: 145: write_c_aff(cmd);
  5738   001F44  5006               	movf	d2command@cmd^0,w,c
  5739   001F46  EC00  F011         	call	_write_c_aff
  5740                           
  5741                           ;afficheur.c: 147: res=1;
  5742   001F4A  0E01               	movlw	1
  5743   001F4C  6E08               	movwf	d2command@res^0,c
  5744   001F4E                     i2l4044:
  5745                           
  5746                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  5747   001F4E  5008               	movf	d2command@res^0,w,c
  5748   001F50  0012               	return		;funcret
  5749   001F52                     __end_of_d2command:
  5750                           	callstack 0
  5751                           
  5752 ;; *************** function _draw_string *****************
  5753 ;; Defined at:
  5754 ;;		line 242 in file "afficheur.c"
  5755 ;; Parameters:    Size  Location     Type
  5756 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  5757 ;;		 -> STR_23(14), STR_22(29), STR_21(4), STR_20(3), 
  5758 ;;		 -> STR_19(8), STR_18(5), STR_17(8), STR_16(12), 
  5759 ;;		 -> STR_15(12), STR_14(21), STR_13(7), STR_12(6), 
  5760 ;;		 -> STR_11(6), STR_10(10), STR_9(9), STR_8(6), 
  5761 ;;		 -> STR_7(13), STR_6(11), STR_5(7), STR_4(3), 
  5762 ;;		 -> STR_3(3), STR_2(3), STR_1(8), RAM(3861), 
  5763 ;; Auto vars:     Size  Location     Type
  5764 ;;		None
  5765 ;; Return value:  Size  Location     Type
  5766 ;;                  1    wreg      void 
  5767 ;; Registers used:
  5768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5769 ;; Tracked objects:
  5770 ;;		On entry : 0/0
  5771 ;;		On exit  : 0/0
  5772 ;;		Unchanged: 0/0
  5773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5774 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;Total ram usage:        2 bytes
  5779 ;; Hardware stack levels used: 1
  5780 ;; Hardware stack levels required when called: 3
  5781 ;; This function calls:
  5782 ;;		_d1command
  5783 ;; This function is called by:
  5784 ;;		_tache1
  5785 ;;		_charger
  5786 ;;		_vide
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text33
  5791   001C2A                     __ptext33:
  5792                           	callstack 0
  5793   001C2A                     _draw_string:
  5794                           	callstack 23
  5795                           
  5796                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  5797                           
  5798                           ;incstack = 0
  5799   001C2A  D01C               	goto	i2l4160
  5800   001C2C                     i2l1271:
  5801                           
  5802                           ;afficheur.c: 247: __nop();
  5803   001C2C  F000               	nop	
  5804   001C2E                     i2l4156:
  5805   001C2E  0EC0               	movlw	192
  5806   001C30  6E05               	movwf	d1command@cmd^0,c
  5807   001C32  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5808   001C36  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5809   001C3A  0E00               	movlw	low (__smallconst shr (0+16))
  5810   001C3C  6EF8               	movwf	tblptru,c
  5811   001C3E  0E0F               	movlw	(high __ramtop+-1)
  5812   001C40  64F7               	cpfsgt	tblptrh,c
  5813   001C42  D003               	bra	i2u212_47
  5814   001C44  0008               	tblrd		*
  5815   001C46  50F5               	movf	tablat,w,c
  5816   001C48  D005               	bra	i2u212_40
  5817   001C4A                     i2u212_47:
  5818   001C4A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5819   001C4E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5820   001C52  50EF               	movf	indf0,w,c
  5821   001C54                     i2u212_40:
  5822   001C54  0FE0               	addlw	224
  5823   001C56  ECCF  F00F         	call	_d1command
  5824   001C5A  0900               	iorlw	0
  5825   001C5C  B4D8               	btfsc	status,2,c
  5826   001C5E  D7E6               	goto	i2l1271
  5827                           
  5828                           ;afficheur.c: 248: tableau++;
  5829   001C60  4A08               	infsnz	draw_string@tableau^0,f,c
  5830   001C62  2A09               	incf	(draw_string@tableau+1)^0,f,c
  5831   001C64                     i2l4160:
  5832   001C64  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5833   001C68  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5834   001C6C  0E00               	movlw	low (__smallconst shr (0+16))
  5835   001C6E  6EF8               	movwf	tblptru,c
  5836   001C70  0E0F               	movlw	(high __ramtop+-1)
  5837   001C72  64F7               	cpfsgt	tblptrh,c
  5838   001C74  D003               	bra	i2u214_47
  5839   001C76  0008               	tblrd		*
  5840   001C78  50F5               	movf	tablat,w,c
  5841   001C7A  D005               	bra	i2u214_40
  5842   001C7C                     i2u214_47:
  5843   001C7C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5844   001C80  CFF7 FFEA          	movff	tblptrh,fsr0h
  5845   001C84  50EF               	movf	indf0,w,c
  5846   001C86                     i2u214_40:
  5847   001C86  0900               	iorlw	0
  5848   001C88  B4D8               	btfsc	status,2,c
  5849   001C8A  0012               	return	
  5850   001C8C  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5851   001C90  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5852   001C94  0E00               	movlw	low (__smallconst shr (0+16))
  5853   001C96  6EF8               	movwf	tblptru,c
  5854   001C98  0E0F               	movlw	(high __ramtop+-1)
  5855   001C9A  64F7               	cpfsgt	tblptrh,c
  5856   001C9C  D003               	bra	i2u216_47
  5857   001C9E  0008               	tblrd		*
  5858   001CA0  50F5               	movf	tablat,w,c
  5859   001CA2  D005               	bra	i2u216_40
  5860   001CA4                     i2u216_47:
  5861   001CA4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5862   001CA8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5863   001CAC  50EF               	movf	indf0,w,c
  5864   001CAE                     i2u216_40:
  5865   001CAE  0900               	iorlw	0
  5866   001CB0  B4D8               	btfsc	status,2,c
  5867   001CB2  0012               	return	
  5868   001CB4  D7BC               	goto	i2l4156
  5869   001CB6                     __end_of_draw_string:
  5870                           	callstack 0
  5871                           
  5872 ;; *************** function _d1command *****************
  5873 ;; Defined at:
  5874 ;;		line 106 in file "afficheur.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  d1              1    wreg     unsigned char 
  5877 ;;  cmd             1    4[COMRAM] unsigned char 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  d1              1    5[COMRAM] unsigned char 
  5880 ;;  res             1    6[COMRAM] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      unsigned char 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0, cstack
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5890 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;Total ram usage:        3 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 2
  5897 ;; This function calls:
  5898 ;;		_delai_us_char
  5899 ;;		_wait_status_ok
  5900 ;;		_write_c_aff
  5901 ;;		_write_d_aff
  5902 ;; This function is called by:
  5903 ;;		_initialisation_afficheur
  5904 ;;		_draw_char
  5905 ;;		_draw_string
  5906 ;;		_draw_hex8
  5907 ;;		_clear_text
  5908 ;;		_clear_graphics
  5909 ;;		_draw_dec8
  5910 ;;		_clear_cgram
  5911 ;; This function uses a non-reentrant model
  5912 ;;
  5913                           
  5914                           	psect	text34
  5915   001F9E                     __ptext34:
  5916                           	callstack 0
  5917   001F9E                     _d1command:
  5918                           	callstack 23
  5919                           
  5920                           ;incstack = 0
  5921                           ;d1command@d1 stored from wreg
  5922   001F9E  6E06               	movwf	d1command@d1^0,c
  5923                           
  5924                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  5925   001FA0  0E00               	movlw	0
  5926   001FA2  6E07               	movwf	d1command@res^0,c
  5927                           
  5928                           ;afficheur.c: 112: if (wait_status_ok()==1)
  5929   001FA4  EC58  F00F         	call	_wait_status_ok	;wreg free
  5930   001FA8  06E8               	decf	wreg,f,c
  5931   001FAA  A4D8               	btfss	status,2,c
  5932   001FAC  D013               	goto	i2l4018
  5933                           
  5934                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  5935   001FAE  0E0C               	movlw	12
  5936   001FB0  ECB8  F010         	call	_delai_us_char
  5937                           
  5938                           ;afficheur.c: 115: write_d_aff(d1);
  5939   001FB4  5006               	movf	d1command@d1^0,w,c
  5940   001FB6  ECF3  F010         	call	_write_d_aff
  5941                           
  5942                           ;afficheur.c: 116: if (wait_status_ok()==1)
  5943   001FBA  EC58  F00F         	call	_wait_status_ok	;wreg free
  5944   001FBE  06E8               	decf	wreg,f,c
  5945   001FC0  A4D8               	btfss	status,2,c
  5946   001FC2  D008               	goto	i2l4018
  5947                           
  5948                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  5949   001FC4  0E0C               	movlw	12
  5950   001FC6  ECB8  F010         	call	_delai_us_char
  5951                           
  5952                           ;afficheur.c: 119: write_c_aff(cmd);
  5953   001FCA  5005               	movf	d1command@cmd^0,w,c
  5954   001FCC  EC00  F011         	call	_write_c_aff
  5955                           
  5956                           ;afficheur.c: 121: res=1;
  5957   001FD0  0E01               	movlw	1
  5958   001FD2  6E07               	movwf	d1command@res^0,c
  5959   001FD4                     i2l4018:
  5960                           
  5961                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  5962   001FD4  5007               	movf	d1command@res^0,w,c
  5963   001FD6  0012               	return		;funcret
  5964   001FD8                     __end_of_d1command:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _write_d_aff *****************
  5968 ;; Defined at:
  5969 ;;		line 4 in file "afficheur.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  data            1    wreg     unsigned char 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  data            1    0[COMRAM] unsigned char 
  5974 ;; Return value:  Size  Location     Type
  5975 ;;                  1    wreg      void 
  5976 ;; Registers used:
  5977 ;;		wreg, status,2
  5978 ;; Tracked objects:
  5979 ;;		On entry : 0/0
  5980 ;;		On exit  : 0/0
  5981 ;;		Unchanged: 0/0
  5982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;Total ram usage:        1 bytes
  5988 ;; Hardware stack levels used: 1
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_d1command
  5993 ;;		_d2command
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text35
  5998   0021E6                     __ptext35:
  5999                           	callstack 0
  6000   0021E6                     _write_d_aff:
  6001                           	callstack 24
  6002                           
  6003                           ;incstack = 0
  6004                           ;write_d_aff@data stored from wreg
  6005   0021E6  6E01               	movwf	write_d_aff@data^0,c
  6006                           
  6007                           ;afficheur.c: 6: LATH=data;
  6008   0021E8  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6009                           
  6010                           ;afficheur.c: 7: TRISH=0x00;
  6011   0021EC  0E00               	movlw	0
  6012   0021EE  6E99               	movwf	153,c	;volatile
  6013                           
  6014                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6015   0021F0  9091               	bcf	145,0,c	;volatile
  6016                           
  6017                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6018   0021F2  9691               	bcf	145,3,c	;volatile
  6019                           
  6020                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6021   0021F4  9491               	bcf	145,2,c	;volatile
  6022                           
  6023                           ;afficheur.c: 11: __nop();
  6024   0021F6  F000               	nop	
  6025                           
  6026                           ;afficheur.c: 12: __nop();
  6027   0021F8  F000               	nop	
  6028                           
  6029                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6030   0021FA  8491               	bsf	145,2,c	;volatile
  6031                           
  6032                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6033   0021FC  8691               	bsf	145,3,c	;volatile
  6034   0021FE  0012               	return		;funcret
  6035   002200                     __end_of_write_d_aff:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function _write_c_aff *****************
  6039 ;; Defined at:
  6040 ;;		line 17 in file "afficheur.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  command         1    wreg     unsigned char 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;  command         1    0[COMRAM] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;Total ram usage:        1 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_command
  6064 ;;		_d1command
  6065 ;;		_d2command
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text36
  6070   002200                     __ptext36:
  6071                           	callstack 0
  6072   002200                     _write_c_aff:
  6073                           	callstack 24
  6074                           
  6075                           ;incstack = 0
  6076                           ;write_c_aff@command stored from wreg
  6077   002200  6E01               	movwf	write_c_aff@command^0,c
  6078                           
  6079                           ;afficheur.c: 19: LATH=command;
  6080   002202  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6081                           
  6082                           ;afficheur.c: 20: TRISH=0x00;
  6083   002206  0E00               	movlw	0
  6084   002208  6E99               	movwf	153,c	;volatile
  6085                           
  6086                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6087   00220A  8091               	bsf	145,0,c	;volatile
  6088                           
  6089                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6090   00220C  9691               	bcf	145,3,c	;volatile
  6091                           
  6092                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6093   00220E  9491               	bcf	145,2,c	;volatile
  6094                           
  6095                           ;afficheur.c: 24: __nop();
  6096   002210  F000               	nop	
  6097                           
  6098                           ;afficheur.c: 25: __nop();
  6099   002212  F000               	nop	
  6100                           
  6101                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6102   002214  8491               	bsf	145,2,c	;volatile
  6103                           
  6104                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6105   002216  8691               	bsf	145,3,c	;volatile
  6106   002218  0012               	return		;funcret
  6107   00221A                     __end_of_write_c_aff:
  6108                           	callstack 0
  6109                           
  6110 ;; *************** function _wait_status_ok *****************
  6111 ;; Defined at:
  6112 ;;		line 53 in file "afficheur.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;		None
  6115 ;; Auto vars:     Size  Location     Type
  6116 ;;  res             1    3[COMRAM] unsigned char 
  6117 ;;  status          1    2[COMRAM] unsigned char 
  6118 ;;  err             1    1[COMRAM] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      unsigned char 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6132 ;;Total ram usage:        3 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 1
  6135 ;; This function calls:
  6136 ;;		_delai_us_char
  6137 ;; This function is called by:
  6138 ;;		_command
  6139 ;;		_d1command
  6140 ;;		_d2command
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text37
  6145   001EB0                     __ptext37:
  6146                           	callstack 0
  6147   001EB0                     _wait_status_ok:
  6148                           	callstack 23
  6149                           
  6150                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6151                           
  6152                           ;incstack = 0
  6153   001EB0  0E00               	movlw	0
  6154   001EB2  6E02               	movwf	wait_status_ok@err^0,c
  6155                           
  6156                           ;afficheur.c: 58: res=2;
  6157   001EB4  0E02               	movlw	2
  6158   001EB6  D01E               	goto	L6
  6159   001EB8                     i2l1221:
  6160                           
  6161                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6162   001EB8  6899               	setf	153,c	;volatile
  6163                           
  6164                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6165   001EBA  8091               	bsf	145,0,c	;volatile
  6166                           
  6167                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6168   001EBC  9691               	bcf	145,3,c	;volatile
  6169                           
  6170                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6171   001EBE  9291               	bcf	145,1,c	;volatile
  6172                           
  6173                           ;afficheur.c: 65: __nop();
  6174   001EC0  F000               	nop	
  6175                           
  6176                           ;afficheur.c: 66: status=PORTH;
  6177   001EC2  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6178                           
  6179                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6180   001EC6  8291               	bsf	145,1,c	;volatile
  6181                           
  6182                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6183   001EC8  8691               	bsf	145,3,c	;volatile
  6184                           
  6185                           ;afficheur.c: 70: status=(status&0x03);
  6186   001ECA  5003               	movf	wait_status_ok@status^0,w,c
  6187   001ECC  0B03               	andlw	3
  6188   001ECE  6E03               	movwf	wait_status_ok@status^0,c
  6189                           
  6190                           ;afficheur.c: 71: if (status!=0x03)
  6191   001ED0  0E03               	movlw	3
  6192   001ED2  1803               	xorwf	wait_status_ok@status^0,w,c
  6193   001ED4  B4D8               	btfsc	status,2,c
  6194   001ED6  D00D               	goto	i2l2486
  6195                           
  6196                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6197   001ED8  2A02               	incf	wait_status_ok@err^0,f,c
  6198                           
  6199                           ;afficheur.c: 74: delai_us_char(12);
  6200   001EDA  0E0C               	movlw	12
  6201   001EDC  ECB8  F010         	call	_delai_us_char
  6202                           
  6203                           ;afficheur.c: 75: if (err>=250)
  6204   001EE0  0EF9               	movlw	249
  6205   001EE2  6402               	cpfsgt	wait_status_ok@err^0,c
  6206   001EE4  D008               	goto	i2l2488
  6207                           
  6208                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6209   001EE6  9EF2               	bcf	242,7,c	;volatile
  6210                           
  6211                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6212   001EE8  948B               	bcf	139,2,c	;volatile
  6213   001EEA  828B               	bsf	139,1,c	;volatile
  6214   001EEC  808F               	bsf	143,0,c	;volatile
  6215                           
  6216                           ;afficheur.c: 79: res=0;
  6217   001EEE  0E00               	movlw	0
  6218   001EF0  D001               	goto	L6
  6219   001EF2                     i2l2486:
  6220                           
  6221                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6222   001EF2  0E01               	movlw	1
  6223   001EF4                     L6:
  6224   001EF4  6E04               	movwf	wait_status_ok@res^0,c
  6225   001EF6                     i2l2488:
  6226   001EF6  0E02               	movlw	2
  6227   001EF8  1804               	xorwf	wait_status_ok@res^0,w,c
  6228   001EFA  B4D8               	btfsc	status,2,c
  6229   001EFC  D7DD               	goto	i2l1221
  6230                           
  6231                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6232   001EFE  5004               	movf	wait_status_ok@res^0,w,c
  6233   001F00  0012               	return		;funcret
  6234   001F02                     __end_of_wait_status_ok:
  6235                           	callstack 0
  6236                           
  6237 ;; *************** function _delai_us_char *****************
  6238 ;; Defined at:
  6239 ;;		line 154 in file "afficheur.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  ucdelai         1    wreg     unsigned char 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;                  1    wreg      void 
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6257 ;;Total ram usage:        1 bytes
  6258 ;; Hardware stack levels used: 1
  6259 ;; This function calls:
  6260 ;;		Nothing
  6261 ;; This function is called by:
  6262 ;;		_wait_status_ok
  6263 ;;		_command
  6264 ;;		_d1command
  6265 ;;		_d2command
  6266 ;;		_initialisation_afficheur
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text38
  6271   002170                     __ptext38:
  6272                           	callstack 0
  6273   002170                     _delai_us_char:
  6274                           	callstack 23
  6275                           
  6276                           ;incstack = 0
  6277                           ;delai_us_char@ucdelai stored from wreg
  6278   002170  6E01               	movwf	delai_us_char@ucdelai^0,c
  6279                           
  6280                           ;afficheur.c: 157: while (ucdelai>0)
  6281   002172  D00B               	goto	i2l2434
  6282   002174                     i2l1245:
  6283                           
  6284                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6285   002174  F000               	nop	
  6286   002176  F000               	nop	
  6287   002178  F000               	nop	
  6288   00217A  F000               	nop	
  6289   00217C  F000               	nop	
  6290   00217E  F000               	nop	
  6291   002180  F000               	nop	
  6292   002182  F000               	nop	
  6293   002184  F000               	nop	
  6294   002186  F000               	nop	
  6295                           
  6296                           ;afficheur.c: 160: ucdelai--;
  6297   002188  0601               	decf	delai_us_char@ucdelai^0,f,c
  6298   00218A                     i2l2434:
  6299   00218A  5001               	movf	delai_us_char@ucdelai^0,w,c
  6300   00218C  B4D8               	btfsc	status,2,c
  6301   00218E  0012               	return	
  6302   002190  D7F1               	goto	i2l1245
  6303   002192                     __end_of_delai_us_char:
  6304                           	callstack 0
  6305                           
  6306                           	psect	text39
  6307   000000                     __ptext39:
  6308                           	callstack 0
  6309                           
  6310                           	psect	rparam
  6311   000000                     
  6312                           	psect	temp
  6313   000023                     btemp:
  6314                           	callstack 0
  6315   000023                     	ds	12
  6316   000000                     wtemp0	set	btemp
  6317   000000                     wtemp1	set	btemp+2
  6318   000000                     wtemp2	set	btemp+4
  6319   000000                     wtemp3	set	btemp+6
  6320   000000                     wtemp4	set	btemp+8
  6321   000000                     wtemp5	set	btemp+10
  6322   000000                     wtemp8	set	btemp+1
  6323   000000                     ttemp0	set	btemp
  6324   000000                     ttemp1	set	btemp+3
  6325   000000                     ttemp2	set	btemp+6
  6326   000000                     ttemp3	set	btemp+9
  6327   000000                     ttemp5	set	btemp+1
  6328   000000                     ttemp6	set	btemp+4
  6329   000000                     ttemp7	set	btemp+8
  6330   000000                     ltemp0	set	btemp
  6331   000000                     ltemp1	set	btemp+4
  6332   000000                     ltemp2	set	btemp+8
  6333   000000                     lltemp0	set	btemp
  6334                           
  6335                           	psect	idloc
  6336                           
  6337                           ;Config register IDLOC0 @ 0x200000
  6338                           ;	unspecified, using default values
  6339   200000                     	org	2097152
  6340   200000  FF                 	db	255
  6341                           
  6342                           ;Config register IDLOC1 @ 0x200001
  6343                           ;	unspecified, using default values
  6344   200001                     	org	2097153
  6345   200001  FF                 	db	255
  6346                           
  6347                           ;Config register IDLOC2 @ 0x200002
  6348                           ;	unspecified, using default values
  6349   200002                     	org	2097154
  6350   200002  FF                 	db	255
  6351                           
  6352                           ;Config register IDLOC3 @ 0x200003
  6353                           ;	unspecified, using default values
  6354   200003                     	org	2097155
  6355   200003  FF                 	db	255
  6356                           
  6357                           ;Config register IDLOC4 @ 0x200004
  6358                           ;	unspecified, using default values
  6359   200004                     	org	2097156
  6360   200004  FF                 	db	255
  6361                           
  6362                           ;Config register IDLOC5 @ 0x200005
  6363                           ;	unspecified, using default values
  6364   200005                     	org	2097157
  6365   200005  FF                 	db	255
  6366                           
  6367                           ;Config register IDLOC6 @ 0x200006
  6368                           ;	unspecified, using default values
  6369   200006                     	org	2097158
  6370   200006  FF                 	db	255
  6371                           
  6372                           ;Config register IDLOC7 @ 0x200007
  6373                           ;	unspecified, using default values
  6374   200007                     	org	2097159
  6375   200007  FF                 	db	255
  6376                           
  6377                           	psect	config
  6378                           
  6379                           ;Config register CONFIG1L @ 0x300000
  6380                           ;	VREG Sleep Enable bit
  6381                           ;	RETEN = ON, Enabled
  6382                           ;	LF-INTOSC Low-power Enable bit
  6383                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6384                           ;	SOSC Power Selection and mode Configuration bits
  6385                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6386                           ;	Extended Instruction Set
  6387                           ;	XINST = OFF, Disabled
  6388   300000                     	org	3145728
  6389   300000  15                 	db	21
  6390                           
  6391                           ;Config register CONFIG1H @ 0x300001
  6392                           ;	Oscillator
  6393                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  6394                           ;	PLL x4 Enable bit
  6395                           ;	PLLCFG = ON, Enabled
  6396                           ;	Fail-Safe Clock Monitor
  6397                           ;	FCMEN = OFF, Disabled
  6398                           ;	Internal External Oscillator Switch Over Mode
  6399                           ;	IESO = OFF, Disabled
  6400   300001                     	org	3145729
  6401   300001  13                 	db	19
  6402                           
  6403                           ;Config register CONFIG2L @ 0x300002
  6404                           ;	Power Up Timer
  6405                           ;	PWRTEN = OFF, Disabled
  6406                           ;	Brown Out Detect
  6407                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  6408                           ;	Brown-out Reset Voltage bits
  6409                           ;	BORV = 0, 3.0V
  6410                           ;	BORMV Power level
  6411                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6412   300002                     	org	3145730
  6413   300002  61                 	db	97
  6414                           
  6415                           ;Config register CONFIG2H @ 0x300003
  6416                           ;	Watchdog Timer
  6417                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6418                           ;	Watchdog Postscaler
  6419                           ;	WDTPS = 1, 1:1
  6420   300003                     	org	3145731
  6421   300003  00                 	db	0
  6422                           
  6423                           ;Config register CONFIG3L @ 0x300004
  6424                           ;	RTCC Clock Select
  6425                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  6426                           ;	External Address Shift bit
  6427                           ;	EASHFT = OFF, Address Shifting disabled
  6428                           ;	Address Bus Width Select bits
  6429                           ;	ABW = MM, 8-bit address bus
  6430                           ;	Data Bus Width
  6431                           ;	BW = 8, 8-bit external bus mode
  6432                           ;	External Bus Wait
  6433                           ;	WAIT = ON, Enabled
  6434   300004                     	org	3145732
  6435   300004  30                 	db	48
  6436                           
  6437                           ;Config register CONFIG3H @ 0x300005
  6438                           ;	CCP2 Mux
  6439                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  6440                           ;	ECCP Mux
  6441                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  6442                           ;	MSSP address masking
  6443                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  6444                           ;	Master Clear Enable
  6445                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  6446   300005                     	org	3145733
  6447   300005  80                 	db	128
  6448                           
  6449                           ;Config register CONFIG4L @ 0x300006
  6450                           ;	Stack Overflow Reset
  6451                           ;	STVREN = ON, Enabled
  6452                           ;	Boot Block Size
  6453                           ;	BBSIZ = BB1K, 1K word Boot Block size
  6454                           ;	Background Debug
  6455                           ;	DEBUG = OFF, Disabled
  6456   300006                     	org	3145734
  6457   300006  81                 	db	129
  6458                           
  6459                           ; Padding undefined space
  6460   300007                     	org	3145735
  6461   300007  FF                 	db	255
  6462                           
  6463                           ;Config register CONFIG5L @ 0x300008
  6464                           ;	Code Protect 00800-03FFF
  6465                           ;	CP0 = OFF, Disabled
  6466                           ;	Code Protect 04000-07FFF
  6467                           ;	CP1 = OFF, Disabled
  6468                           ;	Code Protect 08000-0BFFF
  6469                           ;	CP2 = OFF, Disabled
  6470                           ;	Code Protect 0C000-0FFFF
  6471                           ;	CP3 = OFF, Disabled
  6472                           ;	Code Protect 10000-13FFF
  6473                           ;	CP4 = OFF, Disabled
  6474                           ;	Code Protect 14000-17FFF
  6475                           ;	CP5 = OFF, Disabled
  6476                           ;	Code Protect 18000-1BFFF
  6477                           ;	CP6 = OFF, Disabled
  6478                           ;	Code Protect 1C000-1FFFF
  6479                           ;	CP7 = OFF, Disabled
  6480   300008                     	org	3145736
  6481   300008  FF                 	db	255
  6482                           
  6483                           ;Config register CONFIG5H @ 0x300009
  6484                           ;	Code Protect Boot
  6485                           ;	CPB = OFF, Disabled
  6486                           ;	Data EE Read Protect
  6487                           ;	CPD = OFF, Disabled
  6488   300009                     	org	3145737
  6489   300009  C0                 	db	192
  6490                           
  6491                           ;Config register CONFIG6L @ 0x30000A
  6492                           ;	Table Write Protect 00800-03FFF
  6493                           ;	WRT0 = OFF, Disabled
  6494                           ;	Table Write Protect 04000-07FFF
  6495                           ;	WRT1 = OFF, Disabled
  6496                           ;	Table Write Protect 08000-0BFFF
  6497                           ;	WRT2 = OFF, Disabled
  6498                           ;	Table Write Protect 0C000-0FFFF
  6499                           ;	WRT3 = OFF, Disabled
  6500                           ;	Table Write Protect 10000-13FFF
  6501                           ;	WRT4 = OFF, Disabled
  6502                           ;	Table Write Protect 14000-17FFF
  6503                           ;	WRT5 = OFF, Disabled
  6504                           ;	Table Write Protect 18000-1BFFF
  6505                           ;	WRT6 = OFF, Disabled
  6506                           ;	Table Write Protect 1C000-1FFFF
  6507                           ;	WRT7 = OFF, Disabled
  6508   30000A                     	org	3145738
  6509   30000A  FF                 	db	255
  6510                           
  6511                           ;Config register CONFIG6H @ 0x30000B
  6512                           ;	Config. Write Protect
  6513                           ;	WRTC = OFF, Disabled
  6514                           ;	Table Write Protect Boot
  6515                           ;	WRTB = OFF, Disabled
  6516                           ;	Data EE Write Protect
  6517                           ;	WRTD = OFF, Disabled
  6518   30000B                     	org	3145739
  6519   30000B  E0                 	db	224
  6520                           
  6521                           ;Config register CONFIG7L @ 0x30000C
  6522                           ;	Table Read Protect 00800-03FFF
  6523                           ;	EBRT0 = OFF, Disabled
  6524                           ;	Table Read Protect 04000-07FFF
  6525                           ;	EBRT1 = OFF, Disabled
  6526                           ;	Table Read Protect 08000-0BFFF
  6527                           ;	EBRT2 = OFF, Disabled
  6528                           ;	Table Read Protect 0C000-0FFFF
  6529                           ;	EBRT3 = OFF, Disabled
  6530                           ;	Table Read Protect 10000-13FFF
  6531                           ;	EBRT4 = OFF, Disabled
  6532                           ;	Table Read Protect 14000-17FFF
  6533                           ;	EBRT5 = OFF, Disabled
  6534                           ;	Table Read Protect 18000-1BFFF
  6535                           ;	EBRT6 = OFF, Disabled
  6536                           ;	Table Read Protect 1C000-1FFFF
  6537                           ;	EBRT7 = OFF, Disabled
  6538   30000C                     	org	3145740
  6539   30000C  FF                 	db	255
  6540                           
  6541                           ;Config register CONFIG7H @ 0x30000D
  6542                           ;	Table Read Protect Boot
  6543                           ;	EBRTB = OFF, Disabled
  6544   30000D                     	org	3145741
  6545   30000D  40                 	db	64
  6546                           tosu	equ	0xFFF
  6547                           tosh	equ	0xFFE
  6548                           tosl	equ	0xFFD
  6549                           stkptr	equ	0xFFC
  6550                           pclatu	equ	0xFFB
  6551                           pclath	equ	0xFFA
  6552                           pcl	equ	0xFF9
  6553                           tblptru	equ	0xFF8
  6554                           tblptrh	equ	0xFF7
  6555                           tblptrl	equ	0xFF6
  6556                           tablat	equ	0xFF5
  6557                           prodh	equ	0xFF4
  6558                           prodl	equ	0xFF3
  6559                           indf0	equ	0xFEF
  6560                           postinc0	equ	0xFEE
  6561                           postdec0	equ	0xFED
  6562                           preinc0	equ	0xFEC
  6563                           plusw0	equ	0xFEB
  6564                           fsr0h	equ	0xFEA
  6565                           fsr0l	equ	0xFE9
  6566                           wreg	equ	0xFE8
  6567                           indf1	equ	0xFE7
  6568                           postinc1	equ	0xFE6
  6569                           postdec1	equ	0xFE5
  6570                           preinc1	equ	0xFE4
  6571                           plusw1	equ	0xFE3
  6572                           fsr1h	equ	0xFE2
  6573                           fsr1l	equ	0xFE1
  6574                           bsr	equ	0xFE0
  6575                           indf2	equ	0xFDF
  6576                           postinc2	equ	0xFDE
  6577                           postdec2	equ	0xFDD
  6578                           preinc2	equ	0xFDC
  6579                           plusw2	equ	0xFDB
  6580                           fsr2h	equ	0xFDA
  6581                           fsr2l	equ	0xFD9
  6582                           status	equ	0xFD8

Data Sizes:
    Strings     202
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     34      46
    BANK0           126      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_23(CODE[14]), STR_22(CODE[29]), STR_21(CODE[4]), STR_20(CODE[3]), 
		 -> STR_19(CODE[8]), STR_18(CODE[5]), STR_17(CODE[8]), STR_16(CODE[12]), 
		 -> STR_15(CODE[12]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[10]), STR_9(CODE[9]), STR_8(CODE[6]), 
		 -> STR_7(CODE[13]), STR_6(CODE[11]), STR_5(CODE[7]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   49730
                                             21 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     755
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   47968
                                             20 COMRAM     1     1      0
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
                               _vide
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    6885
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5184
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4416
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5175
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    6885
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3955
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    2930
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
     _vide
       _draw_string
       _goto_lico
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7E      0       0      64        0.0%
BITBANK0            7E      0       0       4        0.0%
BANK0               7E      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     22      2E       1       55.4%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      57        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 23 11:28:24 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0036                         ?_draw_square 000F  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0032                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 221A                                 l1468 214A  
                               l2710 212E                                 l2712 2134  
                               l2714 213A                                 l4798 21C8  
                               STR_1 1084                                 STR_2 10C8  
                               STR_3 10C5                                 STR_4 10BF  
                               STR_5 10A3                                 STR_6 1066  
                               STR_7 1041                                 STR_8 10B0  
                               STR_9 107B                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 212C                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 21B2  
                               _fptr 002F                                 _vide 224A  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0023                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                     ?_lecture_normale 0003  
                              ?_main 0001                      __end_of___awdiv 1D3A  
                              STR_10 1071                                STR_11 10AA  
                              STR_12 102D                                STR_20 10C2  
                              STR_21 10BB                                STR_13 109C  
                              STR_14 101E                                STR_22 1001  
                              STR_15 104E                                STR_23 1033  
                              STR_16 105A                                STR_17 108C  
                              STR_18 10B6                                STR_19 1094  
                    __end_of___awmod 1DAA                                ?_vide 0001  
                              _T0CON 000FD5                      ___awdiv@divisor 0003  
                              _FSR0H 000FEA                                _FSR1H 000FE2  
                              _FSR0L 000FE9                                _FSR2H 000FDA  
                              _FSR1L 000FE1                                _FSR2L 000FD9  
                    __end_of___lwdiv 1EB0                                i2l140 2030  
                              i2l143 203E                                i2l418 11E0  
                              i2l438 142E                                i2l543 16EC  
                              i2l538 16AA                                i2l803 19B4  
                              i2l556 2234                                i2l821 19D8  
                              i2l815 19CC                                i2l833 19F0  
                              i2l809 19C0                                i2l761 1960  
                              i2l827 19E4                                i2l755 1954  
                              i2l773 1978                                i2l749 1948  
                              i2l933 1790                                i2l791 199C  
                              i2l767 196C                                i2l951 17B4  
                              i2l927 1784                                i2l785 1990  
                              i2l945 17A8                                i2l779 1984  
                              i2l963 17CC                                i2l939 179C  
                    ___awdiv@counter 0005                                i2l797 19A8  
                              i2l981 17F0                                i2l957 17C0  
                              i2l975 17E4                                i2l993 1808  
                              i2l969 17D8                                i2l987 17FC  
                              i2l999 1814                                _PRODH 000FF4  
                              _PRODL 000FF3                                _PORTH 000F87  
                              _TRISH 000F99                                _TRISJ 000F9A  
                        _write_c_aff 2200                          _write_d_aff 21E6  
                    __end_of_charger 227A                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                      __end_of_command 21E6  
                              _badge 000075                                _plot1 1ADA  
                              _queue 000069                                tablat 000FF5  
                              ltemp0 0023                                ltemp1 0027  
                              ltemp2 002B                __end_of_delai_us_char 2192  
                              plusw1 000FE3                      _check_status_ok 20D8  
                              ttemp0 0023                                ttemp1 0026  
                              ttemp2 0029                                ttemp3 002C  
                              ttemp5 0024                                ttemp6 0027  
                              ttemp7 002B                                status 000FD8  
                              wtemp0 0023                                wtemp1 0025  
                              wtemp2 0027                                wtemp3 0029  
                              wtemp4 002B                                wtemp5 002D  
                              wtemp8 0024        initialisation_du_systeme@temp 0022  
                    __initialization 227A                         __end_of_Init 214E  
         lecture_8bit_analogique@ret 0001                         __end_of_main 21CC  
                       __end_of_vide 2262                               ??_main 0023  
                             ??_vide 000F                        __activetblptr 000003  
                       draw_square@x 0013                         draw_square@y 0014  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               ?_plot1 0009  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0001  
                      _n_octet_badge 00007F                               _MEMCON 000F26  
                             i2l1011 182C                               i2l1005 1820  
                             i2l1221 1EB8                               i2l1307 1E46  
                             i2l1245 2174                               i2l1253 1A4E  
                             i2l1271 1C2C                               i2l1263 2064  
                             i2l1282 1DC6                               i2l4100 1D4E  
                             i2l2164 1EA6                               i2l4110 1D70  
                             i2l1287 1DF2                               i2l4120 1D92  
                             i2l4104 1D5A                               i2l2434 218A  
                             i2l4018 1FD4                               i2l3402 18E0  
                             i2l4044 1F4E                               i2l4140 1E48  
                             i2l4124 1DA0                               i2l4116 1D88  
                             i2l4108 1D68                               i2l1581 1BC4  
                             i2l4134 1E1A                               i2l4150 205C  
                             i2l4230 208E                               i2l4070 1CF8  
                             i2l4062 1CDA                               i2l3422 1916  
                             i2l1582 1BCC                               i2l1591 221C  
                             i2l4160 1C64                               i2l4152 2066  
                             i2l4080 1D18                               i2l4056 1CCA  
                             i2l4208 1A38                               i2l3408 18EE  
                             i2l3512 1838                               i2l1584 1BD6  
                             i2l4138 1E24                               i2l4146 2052  
                             i2l4170 1B1E                               i2l4218 1A50  
                             i2l4306 2240                               i2l3522 1850  
                             i2l4156 1C2E                               i2l4244 20BE  
                             i2l4068 1CF0                               i2l4084 1D22  
                             i2l4172 1B26                               i2l4252 1F5A  
                             i2l3372 1892                               i2l4324 1BB6  
                             i2l4316 1BA0                               _PCLATH 000FFA  
                             i2l2486 1EF2                               i2l4270 1DC8  
                             i2l4174 1B2E                               i2l4182 1B46  
                             i2l4262 1F94                               i2l3390 18C0  
                             i2l3366 1884                               i2l5118 02DC  
                             i2l2488 1EF6                               i2l4088 1D30  
                             i2l4176 1B36                               i2l4168 1B16  
                             i2l4256 1F70                               i2l2728 2042  
                             i2l4600 1220                               i2l3384 18B2  
                             i2l3472 19FC                               i2l4192 2228  
                             i2l4360 1C26                               i2l4290 2198  
                             i2l4178 1B3E                               i2l4258 1F7E  
                             i2l4602 1226                               i2l4370 1E74  
                             i2l4276 1DEA                               i2l4268 1DBE  
                             i2l4620 1288                               i2l4372 1E7C  
                             i2l4278 1DF4                               i2l4630 12AC  
                             i2l4622 128E                               i2l4382 1E9C  
                             i2l4712 1430                               _PCLATU 000FFB  
                             i2l2698 20FC                               i2l4634 12B4  
                             i2l4660 1308                               i2l4652 12E4  
                             i2l4580 11B8                               i2l4670 1340  
                             i2l4662 1314                               i2l4590 11F2  
                             i2l4742 16CA                               i2l4672 1346  
                             i2l4648 12DC                               i2l4592 11FE  
                             i2l4818 0064                               i2l4676 135A  
                             i2l4758 170C                               i2l4782 2124  
                             i2l4962 0198                               _TABLAT 000FF5  
                             _RCSTA1 000FAB                           _Tick_Count 000071  
                             _SPBRG1 000FAF                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                             _TXREG1 000FAD                       clear_line@line 000F  
                             _TXSTA1 000FAC                            ??___awdiv 0005  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _tache1 10CC                               _tache2 1688  
                             _tache3 1862                               _tache4 1940  
                             _tache5 177C                               _tache6 2104  
                          ??_charger 000F                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               lltemp0 0023  
                             plot1@x 000E                               plot1@y 0009  
                   __end_of_tp_delai 224A                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 2104  
       lecture_normale@temps_attente 0005                           __accesstop 0060  
            __end_of__initialization 2284                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                           ___inthi_sp 0AAC  
                  __end_of_d1command 1FD8                    __end_of_d2command 1F52  
                      __end_of_plot1 1B88                              ??_plot1 000A  
                      draw_square@x1 0012                        draw_square@x2 0010  
                      draw_square@y1 000F                        draw_square@y2 0011  
                       _W_TEMPORAIRE 000060                           __pnvCOMRAM 002F  
                     _clear_graphics 20A8          ??_initialisation_du_systeme 0022  
                         _clear_line 2192                           _clear_text 2078  
           ?_fonction_d_interruption 0001                              ?_tache1 0001  
                            ?_tache2 0001                              ?_tache3 0001  
                            ?_tache4 0001                              ?_tache5 0001  
                            ?_tache6 0001                         ?_write_c_aff 0001  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
           _initialisation_afficheur 1A0E                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 003A  
             __end_of_clear_graphics 20D8                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 1FD8                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_char 2078  
                  __end_of_draw_hex8 1E06                              ___awdiv 1CB6  
                            ___awmod 1D3A                              ___lwdiv 1E5E  
                       __psmallconst 1000                              __pcinit 227A  
                            _charger 2262                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 21B2  
                            __ptext1 1450                              __ptext2 1FD8  
                            __ptext3 212C                              __ptext5 2104  
                            __ptext6 1B88                              __ptext7 221A  
                            __ptext8 177C                              __ptext9 1940  
                            _command 21CC                            _T0CONbits 000FD5  
                 draw_string@tableau 0008            _initialisation_du_systeme 1450  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 2170  
                  __end_of_goto_lico 1E5E                              _val_tos 0034  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 2284                              tache1@i 0015  
                            tache4@a 0001                              tache5@a 0001  
                            tache6@n 0009                      ?_clear_graphics 0001  
                        ?_clear_line 0001                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84              _lecture_8bit_analogique 2010  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                         command@cmd 0005                           draw_hex8@c 0009  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
     lecture_8bit_analogique@channel 0002                            _d1command 1F9E  
                          _d2command 1F02                       __end_of_tache1 1450  
                     __end_of_tache2 177C                       __end_of_tache3 1940  
                     __end_of_tache4 1A0E                       __end_of_tache5 1862  
                     __end_of_tache6 212C                        ??_draw_square 0012  
                      ??_draw_string 000A               lecture_normale@stid_id 0003  
              __end_of_stid_delai_us 2232                  start_initialization 227A  
                  ??_lecture_normale 0005                        _delai_us_char 2170  
                           ??_tache1 0015                             ??_tache2 0008  
                           ??_tache3 0001                             ??_tache4 0001  
                           ??_tache5 0001                             ??_tache6 0009  
         ??_initialisation_afficheur 0009            ??_lecture_8bit_analogique 0001  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                        __pbssCOMRAM 0036                  __end_of_draw_square 1F9E  
         ??_initialisation_des_ports 0022                  __end_of_draw_string 1CB6  
                     ?_delai_us_char 0001                     ___lwdiv@dividend 0001  
                          __pintcode 0008                             ?___awdiv 0001  
                           ?___awmod 0001                             ?___lwdiv 0001  
                           ?_charger 0001                    _pointeur_de_tache 000070  
                          _draw_char 2046                            _draw_hex8 1DAA  
                           ?_command 0001                       _wait_status_ok 1EB0  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 214E  
                 write_c_aff@command 0001                            _goto_lico 1E06  
    __end_of_lecture_8bit_analogique 2046                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 1688  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u121_40 197C                             i2u113_40 194C  
                           i2u203_40 1D74                             i2u131_40 19B8  
                           i2u123_40 1988                             i2u115_40 1958  
                           i2u212_40 1C54                             i2u212_47 1C4A  
                           i2u133_40 19C4                             i2u125_40 1994  
                           i2u117_40 1964                             i2u214_40 1C86  
                           i2u150_40 17AC                             i2u214_47 1C7C  
                           i2u135_40 19D0                             i2u127_40 19A0  
                           i2u119_40 1970                             i2u216_40 1CAE  
                           i2u160_40 17E8                             i2u152_40 17B8  
                           i2u144_40 1788                             i2u216_47 1CA4  
                           i2u137_40 19DC                             i2u129_40 19AC  
                           i2u170_40 1824                             i2u162_40 17F4  
                           i2u154_40 17C4                             i2u146_40 1794  
                           i2u251_40 1364                             i2u139_40 19E8  
                           i2u164_40 1800                             i2u156_40 17D0  
                           i2u148_40 17A0                         ??_clear_line 000F  
                           i2u238_40 1E80                             i2u166_40 180C  
                           i2u158_40 17DC                             i2u168_40 1818  
                           _PIR1bits 000F9E                             i2u197_40 1CFC  
                       ??_clear_text 0009                             _POSTINC0 000FEE  
                           _POSTINC1 000FE6                    _STATUS_TEMPORAIRE 000061  
             __end_of_wait_status_ok 1F02                          ??_d1command 0006  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                   clear_line@column 0010                          _draw_square 1F52  
                        _draw_string 1C2A                         _Val_sem_rxtx 0039  
                           _TP_appui 000066                   __end_of_clear_line 21B2  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 20A8                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           __Lrparam 0000     __end_of_initialisation_afficheur 1ADA  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
            _fonction_d_interruption 0008                      _lecture_normale 1B88  
                           _batterie 000074                      ___lwdiv@divisor 0003  
   __end_of_initialisation_des_ports 2010                      ___lwdiv@counter 0007  
                           __ptext10 1862                             __ptext11 1688  
                           __ptext20 1F52                             __ptext12 2232  
                           __ptext21 1ADA                             __ptext13 1E5E  
                           __ptext30 2262                             __ptext22 21CC  
                           __ptext14 10CC                             __ptext31 1E06  
                           __ptext23 1D3A                             __ptext15 224A  
                           __ptext32 1F02                             __ptext24 1CB6  
                           __ptext16 2010                             __ptext33 1C2A  
                           __ptext25 1DAA                             __ptext17 1A0E  
                           __ptext34 1F9E                             __ptext26 2078  
                           __ptext18 20D8                             __ptext35 21E6  
                           __ptext27 2192                             __ptext19 214E  
                           __ptext36 2200                             __ptext28 2046  
                           __ptext37 1EB0                             __ptext29 20A8  
                           __ptext38 2170                             __ptext39 0000  
                           isa$xinst 000000                             _tp_delai 2232  
                  ??_check_status_ok 0001                          ??_draw_char 0008  
                        ??_draw_hex8 0008                        ??_write_c_aff 0001  
                      ??_write_d_aff 0001                           _INTCONbits 000FF2  
                           tache2@hx 000E                             tache2@hy 0010  
                           tache2@ix 000A                             tache2@iy 000C  
                           tache2@lx 000F                             tache2@ly 0011  
                        ??_init_rxtx 0001                          ??_goto_lico 000A  
                           intlevel2 0000                             plot1@add 000C  
                     goto_lico@ligne 000C              __end_of_lecture_normale 1C2A  
                       d1command@cmd 0005                         d1command@res 0007  
          ??_fonction_d_interruption 0016                         tp_delai@itpd 0001  
                        d1command@d1 0006                  __end_of_write_c_aff 221A  
                __end_of_write_d_aff 2200                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
