

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 23 11:50:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55                           	dabs	1,0x603,1,_STKPTR_T6
    56                           	dabs	1,0x503,1,_STKPTR_T5
    57                           	dabs	1,0x403,1,_STKPTR_T4
    58                           	dabs	1,0x303,1,_STKPTR_T3
    59                           	dabs	1,0x203,1,_STKPTR_T2
    60                           	dabs	1,0x103,1,_STKPTR_T1
    61                           	dabs	1,0x60,1,_W_TEMPORAIRE
    62                           	dabs	1,0x100,66,_contexte1
    63                           	dabs	1,0x69,6,_queue
    64                           	dabs	1,0x71,2,_Tick_Count
    65                           	dabs	1,0x81,1,_TEST
    66                           	dabs	1,0x80,1,_RXTX_libre
    67                           	dabs	1,0x7F,1,_n_octet_badge
    68                           	dabs	1,0x74,1,_batterie
    69                           	dabs	1,0x73,1,_vitesse
    70                           	dabs	1,0x70,1,_pointeur_de_tache
    71                           	dabs	1,0x6F,1,_tache_active
    72                           	dabs	1,0x68,1,_TP_y
    73                           	dabs	1,0x67,1,_TP_x
    74                           	dabs	1,0x66,1,_TP_appui
    75                           	dabs	1,0x65,1,_DEMARRAGE
    76                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    77                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    78                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    79                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    80                           	dabs	1,0x75,10,_badge
    81                           	dabs	1,0x200,66,_contexte2
    82                           	dabs	1,0x300,66,_contexte3
    83                           	dabs	1,0x400,66,_contexte4
    84                           	dabs	1,0x500,66,_contexte5
    85                           	dabs	1,0x600,66,_contexte6
    86   000000                     
    87                           ; Generated 06/04/2022 GMT
    88                           ; 
    89                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution. Publication is not required when
   103                           ;        this file is used in an embedded application.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F87K22 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121   000000                     
   122 ;;Init@sem	offset=-1 (param)
   123 ;;Init@sem	offset=-1 (param)
   124   000000                     _TMR0	set	4054
   125   000000                     _TOSU	set	4095
   126   000000                     _TOSH	set	4094
   127   000000                     _TOSL	set	4093
   128   000000                     _TABLAT	set	4085
   129   000000                     _TBLPTRL	set	4086
   130   000000                     _TBLPTRH	set	4087
   131   000000                     _TBLPTRU	set	4088
   132   000000                     _PRODL	set	4083
   133   000000                     _PRODH	set	4084
   134   000000                     _FSR2L	set	4057
   135   000000                     _FSR2H	set	4058
   136   000000                     _FSR1L	set	4065
   137   000000                     _FSR1H	set	4066
   138   000000                     _STKPTR	set	4092
   139   000000                     _FSR0L	set	4073
   140   000000                     _FSR0H	set	4074
   141   000000                     _BSR	set	4064
   142   000000                     _WREG	set	4072
   143   000000                     _STATUS	set	4056
   144                           
   145                           ; 1 bytes @ 0x22
   146 ;;
   147 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   148 ;;
   149 ;; *************** function _main *****************
   150 ;; Defined at:
   151 ;;		line 6 in file "main.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels required when called: 8
   171 ;; This function calls:
   172 ;;		_Init
   173 ;;		_initialisation_des_ports
   174 ;;		_initialisation_du_systeme
   175 ;; This function is called by:
   176 ;;		Startup code after reset
   177 ;; This function uses a non-reentrant model
   178 ;;
   179                           
   180                           	psect	text0
   181   0021E0                     __ptext0:
   182                           	callstack 0
   183   000000                     _T0IF	set	32658
   184   000000                     _INTCON2bits	set	4081
   185   0021E0                     _main:
   186                           	callstack 23
   187                           
   188                           ;main.c: 8: initialisation_des_ports();
   189                           
   190                           ;incstack = 0
   191   0021E0  EC03  F010         	call	_initialisation_des_ports	;wreg free
   192                           
   193                           ;main.c: 9: initialisation_du_systeme();
   194   0021E4  EC3F  F00A         	call	_initialisation_du_systeme	;wreg free
   195                           
   196                           ;main.c: 10: Init(1);
   197   0021E8  0E01               	movlw	1
   198   0021EA  6EE6               	movwf	postinc1,c
   199   0021EC  ECAD  F010         	call	_Init	;wreg free
   200                           
   201                           ;main.c: 13: T0CONbits.TMR0ON=1;
   202   0021F0  8ED5               	bsf	213,7,c	;volatile
   203                           
   204                           ;main.c: 14: T0IF=1;
   205   0021F2  84F2               	bsf	4082,2,c	;volatile
   206                           
   207                           ;main.c: 15: (INTCONbits.GIE = 1);
   208   0021F4  8EF2               	bsf	242,7,c	;volatile
   209   0021F6                     l4833:
   210                           
   211                           ;main.c: 19: __nop();
   212   0021F6  F000               	nop	
   213   0021F8  D7FE               	goto	l4833
   214   0021FA                     __end_of_main:
   215                           	callstack 0
   216                           
   217                           	psect	nvCOMRAM
   218   00002F                     __pnvCOMRAM:
   219                           	callstack 0
   220   00002F                     _fptr:
   221                           	callstack 0
   222   00002F                     	ds	3
   223   000032                     _puc:
   224                           	callstack 0
   225   000032                     	ds	2
   226   000034                     _val_tos:
   227                           	callstack 0
   228   000034                     	ds	2
   229   000000                     _ANCON1bits	set	3876
   230   000000                     _ANCON0bits	set	3877
   231   000000                     _TXSTA1	set	4012
   232   000000                     _LATJ	set	3985
   233   000000                     _T0CON	set	4053
   234   000000                     _ADCON0bits	set	4034
   235   000000                     _INTCONbits	set	4082
   236   000000                     _T0IE	set	32661
   237   000000                     _ANCON2	set	3875
   238   000000                     _ANCON1	set	3876
   239   000000                     _ANCON0	set	3877
   240   000000                     _MEMCON	set	3878
   241   000000                     _T0CONbits	set	4053
   242   000000                     _PADCFG1bits	set	3923
   243   000000                     _LATCbits	set	3979
   244   000000                     _LATDbits	set	3980
   245   000000                     _LATGbits	set	3983
   246   000000                     _LATJbits	set	3985
   247   000000                     _LATH	set	3984
   248   000000                     _TRISCbits	set	3988
   249   000000                     _TRISDbits	set	3989
   250   000000                     _TRISGbits	set	3992
   251   000000                     _TRISJ	set	3994
   252   000000                     _TRISH	set	3993
   253   000000                     _PIR1bits	set	3998
   254   000000                     _TXREG1	set	4013
   255   000000                     _ADCON2	set	4032
   256   000000                     _ADCON1	set	4033
   257   000000                     _BAUDCON1	set	3941
   258   000000                     _PORTBbits	set	3969
   259   000000                     _SPBRGH1	set	4052
   260   000000                     _ADRESH	set	4036
   261   000000                     _ADRESL	set	4035
   262   000000                     _ADCON0	set	4034
   263   000000                     _POSTINC0	set	4078
   264   000000                     _POSTINC1	set	4070
   265   000000                     _PCLATH	set	4090
   266   000000                     _PCLATU	set	4091
   267   000000                     _SPBRG1	set	4015
   268   000000                     _PORTDbits	set	3971
   269   000000                     _PORTEbits	set	3972
   270   000000                     _PORTH	set	3975
   271   000000                     _RCSTA1	set	4011
   272   000000                     _TXSTA1bits	set	4012
   273                           
   274                           	psect	smallconst
   275   001000                     __psmallconst:
   276                           	callstack 0
   277   001000  00                 	db	0
   278   001001                     STR_22:
   279   001001  41                 	db	65	;'A'
   280   001002  54                 	db	84	;'T'
   281   001003  54                 	db	84	;'T'
   282   001004  45                 	db	69	;'E'
   283   001005  4E                 	db	78	;'N'
   284   001006  54                 	db	84	;'T'
   285   001007  49                 	db	73	;'I'
   286   001008  4F                 	db	79	;'O'
   287   001009  4E                 	db	78	;'N'
   288   00100A  20                 	db	32
   289   00100B  76                 	db	118	;'v'
   290   00100C  6F                 	db	111	;'o'
   291   00100D  75                 	db	117	;'u'
   292   00100E  73                 	db	115	;'s'
   293   00100F  20                 	db	32
   294   001010  65                 	db	101	;'e'
   295   001011  74                 	db	116	;'t'
   296   001012  65                 	db	101	;'e'
   297   001013  73                 	db	115	;'s'
   298   001014  20                 	db	32
   299   001015  70                 	db	112	;'p'
   300   001016  6C                 	db	108	;'l'
   301   001017  65                 	db	101	;'e'
   302   001018  69                 	db	105	;'i'
   303   001019  6E                 	db	110	;'n'
   304   00101A  21                 	db	33
   305   00101B  21                 	db	33
   306   00101C  21                 	db	33
   307   00101D  00                 	db	0
   308   00101E                     STR_14:
   309   00101E  20                 	db	32
   310   00101F  41                 	db	65	;'A'
   311   001020  55                 	db	85	;'U'
   312   001021  43                 	db	67	;'C'
   313   001022  55                 	db	85	;'U'
   314   001023  4E                 	db	78	;'N'
   315   001024  20                 	db	32
   316   001025  20                 	db	32
   317   001026  20                 	db	32
   318   001027  20                 	db	32
   319   001028  20                 	db	32
   320   001029  20                 	db	32
   321   00102A  20                 	db	32
   322   00102B  20                 	db	32
   323   00102C  20                 	db	32
   324   00102D  20                 	db	32
   325   00102E  20                 	db	32
   326   00102F  20                 	db	32
   327   001030  20                 	db	32
   328   001031  20                 	db	32
   329   001032  00                 	db	0
   330   001033                     STR_23:
   331   001033  52                 	db	82	;'R'
   332   001034  4F                 	db	79	;'O'
   333   001035  55                 	db	85	;'U'
   334   001036  45                 	db	69	;'E'
   335   001037  53                 	db	83	;'S'
   336   001038  42                 	db	66	;'B'
   337   001039  59                 	db	89	;'Y'
   338   00103A  47                 	db	71	;'G'
   339   00103B  4E                 	db	78	;'N'
   340   00103C  4F                 	db	79	;'O'
   341   00103D  4C                 	db	76	;'L'
   342   00103E  45                 	db	69	;'E'
   343   00103F  53                 	db	83	;'S'
   344   001040  00                 	db	0
   345   001041                     STR_7:
   346   001041  54                 	db	84	;'T'
   347   001042  65                 	db	101	;'e'
   348   001043  6D                 	db	109	;'m'
   349   001044  70                 	db	112	;'p'
   350   001045  2E                 	db	46
   351   001046  20                 	db	32
   352   001047  48                 	db	72	;'H'
   353   001048  75                 	db	117	;'u'
   354   001049  69                 	db	105	;'i'
   355   00104A  6C                 	db	108	;'l'
   356   00104B  65                 	db	101	;'e'
   357   00104C  3A                 	db	58	;':'
   358   00104D  00                 	db	0
   359   00104E                     STR_15:
   360   00104E  58                 	db	88	;'X'
   361   00104F  2D                 	db	45
   362   001050  4A                 	db	74	;'J'
   363   001051  6F                 	db	111	;'o'
   364   001052  79                 	db	121	;'y'
   365   001053  73                 	db	115	;'s'
   366   001054  74                 	db	116	;'t'
   367   001055  69                 	db	105	;'i'
   368   001056  63                 	db	99	;'c'
   369   001057  6B                 	db	107	;'k'
   370   001058  3A                 	db	58	;':'
   371   001059  00                 	db	0
   372   00105A                     STR_16:
   373   00105A  59                 	db	89	;'Y'
   374   00105B  2D                 	db	45
   375   00105C  4A                 	db	74	;'J'
   376   00105D  6F                 	db	111	;'o'
   377   00105E  79                 	db	121	;'y'
   378   00105F  73                 	db	115	;'s'
   379   001060  74                 	db	116	;'t'
   380   001061  69                 	db	105	;'i'
   381   001062  63                 	db	99	;'c'
   382   001063  6B                 	db	107	;'k'
   383   001064  3A                 	db	58	;':'
   384   001065  00                 	db	0
   385   001066                     STR_6:
   386   001066  54                 	db	84	;'T'
   387   001067  65                 	db	101	;'e'
   388   001068  6D                 	db	109	;'m'
   389   001069  70                 	db	112	;'p'
   390   00106A  2E                 	db	46
   391   00106B  20                 	db	32
   392   00106C  45                 	db	69	;'E'
   393   00106D  61                 	db	97	;'a'
   394   00106E  75                 	db	117	;'u'
   395   00106F  3A                 	db	58	;':'
   396   001070  00                 	db	0
   397   001071                     STR_10:
   398   001071  42                 	db	66	;'B'
   399   001072  61                 	db	97	;'a'
   400   001073  74                 	db	116	;'t'
   401   001074  74                 	db	116	;'t'
   402   001075  65                 	db	101	;'e'
   403   001076  72                 	db	114	;'r'
   404   001077  69                 	db	105	;'i'
   405   001078  65                 	db	101	;'e'
   406   001079  3A                 	db	58	;':'
   407   00107A  00                 	db	0
   408   00107B                     STR_9:
   409   00107B  56                 	db	86	;'V'
   410   00107C  69                 	db	105	;'i'
   411   00107D  74                 	db	116	;'t'
   412   00107E  65                 	db	101	;'e'
   413   00107F  73                 	db	115	;'s'
   414   001080  73                 	db	115	;'s'
   415   001081  65                 	db	101	;'e'
   416   001082  3A                 	db	58	;':'
   417   001083  00                 	db	0
   418   001084                     STR_1:
   419   001084  4D                 	db	77	;'M'
   420   001085  61                 	db	97	;'a'
   421   001086  72                 	db	114	;'r'
   422   001087  63                 	db	99	;'c'
   423   001088  68                 	db	104	;'h'
   424   001089  65                 	db	101	;'e'
   425   00108A  3A                 	db	58	;':'
   426   00108B  00                 	db	0
   427   00108C                     STR_17:
   428   00108C  42                 	db	66	;'B'
   429   00108D  49                 	db	73	;'I'
   430   00108E  47                 	db	71	;'G'
   431   00108F  20                 	db	32
   432   001090  4D                 	db	77	;'M'
   433   001091  55                 	db	85	;'U'
   434   001092  4D                 	db	77	;'M'
   435   001093  00                 	db	0
   436   001094                     STR_19:
   437   001094  43                 	db	67	;'C'
   438   001095  48                 	db	72	;'H'
   439   001096  41                 	db	65	;'A'
   440   001097  52                 	db	82	;'R'
   441   001098  47                 	db	71	;'G'
   442   001099  45                 	db	69	;'E'
   443   00109A  52                 	db	82	;'R'
   444   00109B  00                 	db	0
   445   00109C                     STR_13:
   446   00109C  42                 	db	66	;'B'
   447   00109D  61                 	db	97	;'a'
   448   00109E  64                 	db	100	;'d'
   449   00109F  67                 	db	103	;'g'
   450   0010A0  65                 	db	101	;'e'
   451   0010A1  3A                 	db	58	;':'
   452   0010A2  00                 	db	0
   453   0010A3                     STR_5:
   454   0010A3  53                 	db	83	;'S'
   455   0010A4  69                 	db	105	;'i'
   456   0010A5  65                 	db	101	;'e'
   457   0010A6  67                 	db	103	;'g'
   458   0010A7  65                 	db	101	;'e'
   459   0010A8  3A                 	db	58	;':'
   460   0010A9  00                 	db	0
   461   0010AA                     STR_11:
   462   0010AA  28                 	db	40
   463   0010AB  28                 	db	40
   464   0010AC  21                 	db	33
   465   0010AD  29                 	db	41
   466   0010AE  29                 	db	41
   467   0010AF  00                 	db	0
   468   0010B0                     STR_8:
   469   0010B0  43                 	db	67	;'C'
   470   0010B1  68                 	db	104	;'h'
   471   0010B2  6F                 	db	111	;'o'
   472   0010B3  63                 	db	99	;'c'
   473   0010B4  3A                 	db	58	;':'
   474   0010B5  00                 	db	0
   475   0010B6                     STR_18:
   476   0010B6  56                 	db	86	;'V'
   477   0010B7  49                 	db	73	;'I'
   478   0010B8  44                 	db	68	;'D'
   479   0010B9  45                 	db	69	;'E'
   480   0010BA  00                 	db	0
   481   0010BB                     STR_21:
   482   0010BB  20                 	db	32
   483   0010BC  79                 	db	121	;'y'
   484   0010BD  3D                 	db	61	;'='
   485   0010BE  00                 	db	0
   486   0010BF                     STR_4:
   487   0010BF  4E                 	db	78	;'N'
   488   0010C0  20                 	db	32
   489   0010C1  00                 	db	0
   490   0010C2                     STR_20:
   491   0010C2  78                 	db	120	;'x'
   492   0010C3  3D                 	db	61	;'='
   493   0010C4  00                 	db	0
   494   0010C5                     STR_3:
   495   0010C5  41                 	db	65	;'A'
   496   0010C6  52                 	db	82	;'R'
   497   0010C7  00                 	db	0
   498   0010C8                     STR_2:
   499   0010C8  41                 	db	65	;'A'
   500   0010C9  56                 	db	86	;'V'
   501   0010CA  00                 	db	0
   502   0010CB  00                 	db	0	; dummy byte at the end
   503   000000                     
   504                           ; #config settings
   505                           
   506                           	psect	cinit
   507   0022A8                     __pcinit:
   508                           	callstack 0
   509   0022A8                     start_initialization:
   510                           	callstack 0
   511   0022A8                     __initialization:
   512                           	callstack 0
   513                           
   514                           ; Clear objects allocated to COMRAM (5 bytes)
   515   0022A8  6A3A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   516   0022AA  6A39               	clrf	(__pbssCOMRAM+3)& (0+255),c
   517   0022AC  6A38               	clrf	(__pbssCOMRAM+2)& (0+255),c
   518   0022AE  6A37               	clrf	(__pbssCOMRAM+1)& (0+255),c
   519   0022B0  6A36               	clrf	__pbssCOMRAM& (0+255),c
   520   0022B2                     end_of_initialization:
   521                           	callstack 0
   522   0022B2                     __end_of__initialization:
   523                           	callstack 0
   524   0022B2  0100               	movlb	0
   525   0022B4  EFF0  F010         	goto	_main	;jump to C main() function
   526                           
   527                           	psect	bssCOMRAM
   528   000036                     __pbssCOMRAM:
   529                           	callstack 0
   530   000036                     _tc:
   531                           	callstack 0
   532   000036                     	ds	3
   533   000039                     _Val_sem_rxtx:
   534                           	callstack 0
   535   000039                     	ds	1
   536   00003A                     _Val_sem_cna:
   537                           	callstack 0
   538   00003A                     	ds	1
   539                           
   540                           	psect	cstackCOMRAM
   541   000001                     __pcstackCOMRAM:
   542                           	callstack 0
   543   000001                     ?___awdiv:
   544                           	callstack 0
   545   000001                     ?___awmod:
   546                           	callstack 0
   547   000001                     ?___lwdiv:
   548                           	callstack 0
   549   000001                     lecture_8bit_analogique@ret:
   550                           	callstack 0
   551   000001                     write_d_aff@data:
   552                           	callstack 0
   553   000001                     write_c_aff@command:
   554                           	callstack 0
   555   000001                     check_status_ok@res:
   556                           	callstack 0
   557   000001                     delai_us_char@ucdelai:
   558                           	callstack 0
   559   000001                     tp_delai@itpd:
   560                           	callstack 0
   561   000001                     tache4@a:
   562                           	callstack 0
   563   000001                     tache5@a:
   564                           	callstack 0
   565   000001                     stid_delai_us@isdu:
   566                           	callstack 0
   567   000001                     ___awdiv@dividend:
   568                           	callstack 0
   569   000001                     ___awmod@dividend:
   570                           	callstack 0
   571   000001                     ___lwdiv@dividend:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x0
   575   000001                     	ds	1
   576   000002                     lecture_8bit_analogique@channel:
   577                           	callstack 0
   578   000002                     wait_status_ok@err:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x1
   582   000002                     	ds	1
   583   000003                     wait_status_ok@status:
   584                           	callstack 0
   585   000003                     lecture_normale@stid_id:
   586                           	callstack 0
   587   000003                     ___awdiv@divisor:
   588                           	callstack 0
   589   000003                     ___awmod@divisor:
   590                           	callstack 0
   591   000003                     ___lwdiv@divisor:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x2
   595   000003                     	ds	1
   596   000004                     wait_status_ok@res:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x3
   600   000004                     	ds	1
   601   000005                     command@cmd:
   602                           	callstack 0
   603   000005                     d1command@cmd:
   604                           	callstack 0
   605   000005                     d2command@d2:
   606                           	callstack 0
   607   000005                     lecture_normale@temps_attente:
   608                           	callstack 0
   609   000005                     ___awdiv@counter:
   610                           	callstack 0
   611   000005                     ___awmod@counter:
   612                           	callstack 0
   613   000005                     ___lwdiv@quotient:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x4
   617   000005                     	ds	1
   618   000006                     d1command@d1:
   619                           	callstack 0
   620   000006                     d2command@cmd:
   621                           	callstack 0
   622   000006                     lecture_normale@n_octet:
   623                           	callstack 0
   624   000006                     ___awdiv@sign:
   625                           	callstack 0
   626   000006                     ___awmod@sign:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0x5
   630   000006                     	ds	1
   631   000007                     d1command@res:
   632                           	callstack 0
   633   000007                     d2command@d1:
   634                           	callstack 0
   635   000007                     lecture_normale@n_bit:
   636                           	callstack 0
   637   000007                     ___lwdiv@counter:
   638                           	callstack 0
   639   000007                     ___awdiv@quotient:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x6
   643   000007                     	ds	1
   644   000008                     ??_tache2:
   645   000008                     d2command@res:
   646                           	callstack 0
   647   000008                     draw_char@dccar:
   648                           	callstack 0
   649   000008                     draw_hex8@octet:
   650                           	callstack 0
   651   000008                     lecture_normale@octet:
   652                           	callstack 0
   653   000008                     draw_string@tableau:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x7
   657   000008                     	ds	1
   658   000009                     tache6@n:
   659                           	callstack 0
   660   000009                     initialisation_afficheur@error_count:
   661                           	callstack 0
   662   000009                     draw_hex8@c:
   663                           	callstack 0
   664   000009                     goto_lico@colonne:
   665                           	callstack 0
   666   000009                     plot1@y:
   667                           	callstack 0
   668   000009                     clear_text@add:
   669                           	callstack 0
   670   000009                     clear_graphics@add:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x8
   674   000009                     	ds	1
   675   00000A                     ??_goto_lico:
   676   00000A                     ??_plot1:
   677   00000A                     tache2@ix:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x9
   681   00000A                     	ds	2
   682   00000C                     goto_lico@ligne:
   683                           	callstack 0
   684   00000C                     tache2@iy:
   685                           	callstack 0
   686   00000C                     plot1@add:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xB
   690   00000C                     	ds	1
   691   00000D                     goto_lico@adr:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0xC
   695   00000D                     	ds	1
   696   00000E                     tache2@hx:
   697                           	callstack 0
   698   00000E                     plot1@x:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0xD
   702   00000E                     	ds	1
   703   00000F                     tache2@lx:
   704                           	callstack 0
   705   00000F                     clear_line@line:
   706                           	callstack 0
   707   00000F                     draw_square@y1:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0xE
   711   00000F                     	ds	1
   712   000010                     tache2@hy:
   713                           	callstack 0
   714   000010                     clear_line@column:
   715                           	callstack 0
   716   000010                     draw_square@x2:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0xF
   720   000010                     	ds	1
   721   000011                     tache2@ly:
   722                           	callstack 0
   723   000011                     draw_square@y2:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x10
   727   000011                     	ds	1
   728   000012                     draw_square@x1:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x11
   732   000012                     	ds	1
   733   000013                     draw_square@x:
   734                           	callstack 0
   735                           
   736                           ; 1 bytes @ 0x12
   737   000013                     	ds	1
   738   000014                     draw_square@y:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x13
   742   000014                     	ds	1
   743   000015                     tache1@i:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x14
   747   000015                     	ds	1
   748   000016                     ??_fonction_d_interruption:
   749                           
   750                           ; 1 bytes @ 0x15
   751   000016                     	ds	12
   752   000022                     initialisation_du_systeme@temp:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x21
   756   000022                     	ds	1
   757   000023                     
   758 ;; *************** function _initialisation_du_systeme *****************
   759 ;; Defined at:
   760 ;;		line 131 in file "systeme.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;		None
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  temp            1   33[COMRAM] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;Total ram usage:        1 bytes
   779 ;; Hardware stack levels used: 1
   780 ;; Hardware stack levels required when called: 7
   781 ;; This function calls:
   782 ;;		Nothing
   783 ;; This function is called by:
   784 ;;		_main
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text1
   789   00147E                     __ptext1:
   790                           	callstack 0
   791   00147E                     _initialisation_du_systeme:
   792                           	callstack 23
   793                           
   794                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   795                           
   796                           ;incstack = 0
   797   00147E  0E01               	movlw	1
   798   001480  0100               	movlb	0	; () banked
   799   001482  6F65               	movwf	101,b
   800                           
   801                           ;systeme.c: 138: queue[0]=1;
   802   001484  0E01               	movlw	1
   803   001486  6F69               	movwf	105,b
   804                           
   805                           ;systeme.c: 139: queue[1]=2;
   806   001488  0E02               	movlw	2
   807   00148A  6F6A               	movwf	106,b
   808                           
   809                           ;systeme.c: 140: queue[2]=3;
   810   00148C  0E03               	movlw	3
   811   00148E  6F6B               	movwf	107,b
   812                           
   813                           ;systeme.c: 141: queue[3]=4;
   814   001490  0E04               	movlw	4
   815   001492  6F6C               	movwf	108,b
   816                           
   817                           ;systeme.c: 142: queue[4]=5;
   818   001494  0E05               	movlw	5
   819   001496  6F6D               	movwf	109,b
   820                           
   821                           ;systeme.c: 143: queue[5]=6;
   822   001498  0E06               	movlw	6
   823   00149A  6F6E               	movwf	110,b
   824                           
   825                           ;systeme.c: 145: pointeur_de_tache=6-1;
   826   00149C  0E05               	movlw	5
   827   00149E  6F70               	movwf	112,b
   828                           
   829                           ; BSR set to: 0
   830                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   831   0014A0  0E69               	movlw	105
   832   0014A2  2570               	addwf	112,w,b
   833   0014A4  6ED9               	movwf	fsr2l,c
   834   0014A6  6ADA               	clrf	fsr2h,c
   835   0014A8  0E00               	movlw	0
   836   0014AA  22DA               	addwfc	fsr2h,f,c
   837   0014AC  50DF               	movf	indf2,w,c
   838   0014AE  6F6F               	movwf	111,b
   839                           
   840                           ; BSR set to: 0
   841                           ;systeme.c: 151: temp=STKPTR;
   842   0014B0  CFFC F022          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   843                           
   844                           ; BSR set to: 0
   845                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   846   0014B4  0E02               	movlw	2
   847   0014B6  6EFC               	movwf	252,c	;volatile
   848                           
   849                           ; BSR set to: 0
   850   0014B8  0ECC               	movlw	low _tache1
   851   0014BA  6E2F               	movwf	_fptr^0,c
   852   0014BC  0E10               	movlw	high _tache1
   853   0014BE  6E30               	movwf	(_fptr+1)^0,c
   854   0014C0  0E00               	movlw	low (_tache1 shr (0+16))
   855   0014C2  6E31               	movwf	(_fptr+2)^0,c
   856                           
   857                           ; BSR set to: 0
   858   0014C4  C02F  F034         	movff	_fptr,_val_tos
   859   0014C8  C030  F035         	movff	_fptr+1,_val_tos+1
   860                           
   861                           ; BSR set to: 0
   862   0014CC  0E34               	movlw	low _val_tos
   863   0014CE  6E32               	movwf	_puc^0,c
   864   0014D0  0E00               	movlw	high _val_tos
   865   0014D2  6E33               	movwf	(_puc+1)^0,c
   866                           
   867                           ; BSR set to: 0
   868   0014D4  C032  FFD9         	movff	_puc,fsr2l
   869   0014D8  C033  FFDA         	movff	_puc+1,fsr2h
   870   0014DC  50DF               	movf	indf2,w,c
   871   0014DE  6EFD               	movwf	253,c	;volatile
   872                           
   873                           ; BSR set to: 0
   874   0014E0  4A32               	infsnz	_puc^0,f,c
   875   0014E2  2A33               	incf	(_puc+1)^0,f,c
   876                           
   877                           ; BSR set to: 0
   878   0014E4  C032  FFD9         	movff	_puc,fsr2l
   879   0014E8  C033  FFDA         	movff	_puc+1,fsr2h
   880   0014EC  50DF               	movf	indf2,w,c
   881   0014EE  6EFE               	movwf	254,c	;volatile
   882                           
   883                           ; BSR set to: 0
   884   0014F0  4A32               	infsnz	_puc^0,f,c
   885   0014F2  2A33               	incf	(_puc+1)^0,f,c
   886                           
   887                           ; BSR set to: 0
   888   0014F4  C032  FFD9         	movff	_puc,fsr2l
   889   0014F8  C033  FFDA         	movff	_puc+1,fsr2h
   890   0014FC  50DF               	movf	indf2,w,c
   891   0014FE  6EFF               	movwf	255,c	;volatile
   892                           
   893                           ; BSR set to: 0
   894                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   895   001500  0E07               	movlw	7
   896   001502  6EFC               	movwf	252,c	;volatile
   897   001504  0EB6               	movlw	low _tache2
   898   001506  6E2F               	movwf	_fptr^0,c
   899   001508  0E16               	movlw	high _tache2
   900   00150A  6E30               	movwf	(_fptr+1)^0,c
   901   00150C  0E00               	movlw	low (_tache2 shr (0+16))
   902   00150E  6E31               	movwf	(_fptr+2)^0,c
   903                           
   904                           ; BSR set to: 0
   905   001510  C02F  F034         	movff	_fptr,_val_tos
   906   001514  C030  F035         	movff	_fptr+1,_val_tos+1
   907   001518  0E34               	movlw	low _val_tos
   908   00151A  6E32               	movwf	_puc^0,c
   909   00151C  0E00               	movlw	high _val_tos
   910   00151E  6E33               	movwf	(_puc+1)^0,c
   911                           
   912                           ; BSR set to: 0
   913   001520  C032  FFD9         	movff	_puc,fsr2l
   914   001524  C033  FFDA         	movff	_puc+1,fsr2h
   915   001528  50DF               	movf	indf2,w,c
   916   00152A  6EFD               	movwf	253,c	;volatile
   917                           
   918                           ; BSR set to: 0
   919   00152C  4A32               	infsnz	_puc^0,f,c
   920   00152E  2A33               	incf	(_puc+1)^0,f,c
   921                           
   922                           ; BSR set to: 0
   923   001530  C032  FFD9         	movff	_puc,fsr2l
   924   001534  C033  FFDA         	movff	_puc+1,fsr2h
   925   001538  50DF               	movf	indf2,w,c
   926   00153A  6EFE               	movwf	254,c	;volatile
   927                           
   928                           ; BSR set to: 0
   929   00153C  4A32               	infsnz	_puc^0,f,c
   930   00153E  2A33               	incf	(_puc+1)^0,f,c
   931                           
   932                           ; BSR set to: 0
   933   001540  C032  FFD9         	movff	_puc,fsr2l
   934   001544  C033  FFDA         	movff	_puc+1,fsr2h
   935   001548  50DF               	movf	indf2,w,c
   936   00154A  6EFF               	movwf	255,c	;volatile
   937                           
   938                           ; BSR set to: 0
   939                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   940   00154C  0E0C               	movlw	12
   941   00154E  6EFC               	movwf	252,c	;volatile
   942                           
   943                           ; BSR set to: 0
   944   001550  0E90               	movlw	low _tache3
   945   001552  6E2F               	movwf	_fptr^0,c
   946   001554  0E18               	movlw	high _tache3
   947   001556  6E30               	movwf	(_fptr+1)^0,c
   948   001558  0E00               	movlw	low (_tache3 shr (0+16))
   949   00155A  6E31               	movwf	(_fptr+2)^0,c
   950                           
   951                           ; BSR set to: 0
   952   00155C  C02F  F034         	movff	_fptr,_val_tos
   953   001560  C030  F035         	movff	_fptr+1,_val_tos+1
   954                           
   955                           ; BSR set to: 0
   956   001564  0E34               	movlw	low _val_tos
   957   001566  6E32               	movwf	_puc^0,c
   958   001568  0E00               	movlw	high _val_tos
   959   00156A  6E33               	movwf	(_puc+1)^0,c
   960                           
   961                           ; BSR set to: 0
   962   00156C  C032  FFD9         	movff	_puc,fsr2l
   963   001570  C033  FFDA         	movff	_puc+1,fsr2h
   964   001574  50DF               	movf	indf2,w,c
   965   001576  6EFD               	movwf	253,c	;volatile
   966                           
   967                           ; BSR set to: 0
   968   001578  4A32               	infsnz	_puc^0,f,c
   969   00157A  2A33               	incf	(_puc+1)^0,f,c
   970                           
   971                           ; BSR set to: 0
   972   00157C  C032  FFD9         	movff	_puc,fsr2l
   973   001580  C033  FFDA         	movff	_puc+1,fsr2h
   974   001584  50DF               	movf	indf2,w,c
   975   001586  6EFE               	movwf	254,c	;volatile
   976                           
   977                           ; BSR set to: 0
   978   001588  4A32               	infsnz	_puc^0,f,c
   979   00158A  2A33               	incf	(_puc+1)^0,f,c
   980                           
   981                           ; BSR set to: 0
   982   00158C  C032  FFD9         	movff	_puc,fsr2l
   983   001590  C033  FFDA         	movff	_puc+1,fsr2h
   984   001594  50DF               	movf	indf2,w,c
   985   001596  6EFF               	movwf	255,c	;volatile
   986                           
   987                           ; BSR set to: 0
   988                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   989   001598  0E11               	movlw	17
   990   00159A  6EFC               	movwf	252,c	;volatile
   991   00159C  0E6E               	movlw	low _tache4
   992   00159E  6E2F               	movwf	_fptr^0,c
   993   0015A0  0E19               	movlw	high _tache4
   994   0015A2  6E30               	movwf	(_fptr+1)^0,c
   995   0015A4  0E00               	movlw	low (_tache4 shr (0+16))
   996   0015A6  6E31               	movwf	(_fptr+2)^0,c
   997                           
   998                           ; BSR set to: 0
   999   0015A8  C02F  F034         	movff	_fptr,_val_tos
  1000   0015AC  C030  F035         	movff	_fptr+1,_val_tos+1
  1001   0015B0  0E34               	movlw	low _val_tos
  1002   0015B2  6E32               	movwf	_puc^0,c
  1003   0015B4  0E00               	movlw	high _val_tos
  1004   0015B6  6E33               	movwf	(_puc+1)^0,c
  1005                           
  1006                           ; BSR set to: 0
  1007   0015B8  C032  FFD9         	movff	_puc,fsr2l
  1008   0015BC  C033  FFDA         	movff	_puc+1,fsr2h
  1009   0015C0  50DF               	movf	indf2,w,c
  1010   0015C2  6EFD               	movwf	253,c	;volatile
  1011                           
  1012                           ; BSR set to: 0
  1013   0015C4  4A32               	infsnz	_puc^0,f,c
  1014   0015C6  2A33               	incf	(_puc+1)^0,f,c
  1015                           
  1016                           ; BSR set to: 0
  1017   0015C8  C032  FFD9         	movff	_puc,fsr2l
  1018   0015CC  C033  FFDA         	movff	_puc+1,fsr2h
  1019   0015D0  50DF               	movf	indf2,w,c
  1020   0015D2  6EFE               	movwf	254,c	;volatile
  1021                           
  1022                           ; BSR set to: 0
  1023   0015D4  4A32               	infsnz	_puc^0,f,c
  1024   0015D6  2A33               	incf	(_puc+1)^0,f,c
  1025                           
  1026                           ; BSR set to: 0
  1027   0015D8  C032  FFD9         	movff	_puc,fsr2l
  1028   0015DC  C033  FFDA         	movff	_puc+1,fsr2h
  1029   0015E0  50DF               	movf	indf2,w,c
  1030   0015E2  6EFF               	movwf	255,c	;volatile
  1031                           
  1032                           ; BSR set to: 0
  1033                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1034   0015E4  0E16               	movlw	22
  1035   0015E6  6EFC               	movwf	252,c	;volatile
  1036                           
  1037                           ; BSR set to: 0
  1038   0015E8  0EAA               	movlw	low _tache5
  1039   0015EA  6E2F               	movwf	_fptr^0,c
  1040   0015EC  0E17               	movlw	high _tache5
  1041   0015EE  6E30               	movwf	(_fptr+1)^0,c
  1042   0015F0  0E00               	movlw	low (_tache5 shr (0+16))
  1043   0015F2  6E31               	movwf	(_fptr+2)^0,c
  1044                           
  1045                           ; BSR set to: 0
  1046   0015F4  C02F  F034         	movff	_fptr,_val_tos
  1047   0015F8  C030  F035         	movff	_fptr+1,_val_tos+1
  1048                           
  1049                           ; BSR set to: 0
  1050   0015FC  0E34               	movlw	low _val_tos
  1051   0015FE  6E32               	movwf	_puc^0,c
  1052   001600  0E00               	movlw	high _val_tos
  1053   001602  6E33               	movwf	(_puc+1)^0,c
  1054                           
  1055                           ; BSR set to: 0
  1056   001604  C032  FFD9         	movff	_puc,fsr2l
  1057   001608  C033  FFDA         	movff	_puc+1,fsr2h
  1058   00160C  50DF               	movf	indf2,w,c
  1059   00160E  6EFD               	movwf	253,c	;volatile
  1060                           
  1061                           ; BSR set to: 0
  1062   001610  4A32               	infsnz	_puc^0,f,c
  1063   001612  2A33               	incf	(_puc+1)^0,f,c
  1064                           
  1065                           ; BSR set to: 0
  1066   001614  C032  FFD9         	movff	_puc,fsr2l
  1067   001618  C033  FFDA         	movff	_puc+1,fsr2h
  1068   00161C  50DF               	movf	indf2,w,c
  1069   00161E  6EFE               	movwf	254,c	;volatile
  1070                           
  1071                           ; BSR set to: 0
  1072   001620  4A32               	infsnz	_puc^0,f,c
  1073   001622  2A33               	incf	(_puc+1)^0,f,c
  1074                           
  1075                           ; BSR set to: 0
  1076   001624  C032  FFD9         	movff	_puc,fsr2l
  1077   001628  C033  FFDA         	movff	_puc+1,fsr2h
  1078   00162C  50DF               	movf	indf2,w,c
  1079   00162E  6EFF               	movwf	255,c	;volatile
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1083   001630  0E1B               	movlw	27
  1084   001632  6EFC               	movwf	252,c	;volatile
  1085   001634  0E32               	movlw	low _tache6
  1086   001636  6E2F               	movwf	_fptr^0,c
  1087   001638  0E21               	movlw	high _tache6
  1088   00163A  6E30               	movwf	(_fptr+1)^0,c
  1089   00163C  0E00               	movlw	low (_tache6 shr (0+16))
  1090   00163E  6E31               	movwf	(_fptr+2)^0,c
  1091                           
  1092                           ; BSR set to: 0
  1093   001640  C02F  F034         	movff	_fptr,_val_tos
  1094   001644  C030  F035         	movff	_fptr+1,_val_tos+1
  1095   001648  0E34               	movlw	low _val_tos
  1096   00164A  6E32               	movwf	_puc^0,c
  1097   00164C  0E00               	movlw	high _val_tos
  1098   00164E  6E33               	movwf	(_puc+1)^0,c
  1099                           
  1100                           ; BSR set to: 0
  1101   001650  C032  FFD9         	movff	_puc,fsr2l
  1102   001654  C033  FFDA         	movff	_puc+1,fsr2h
  1103   001658  50DF               	movf	indf2,w,c
  1104   00165A  6EFD               	movwf	253,c	;volatile
  1105                           
  1106                           ; BSR set to: 0
  1107   00165C  4A32               	infsnz	_puc^0,f,c
  1108   00165E  2A33               	incf	(_puc+1)^0,f,c
  1109                           
  1110                           ; BSR set to: 0
  1111   001660  C032  FFD9         	movff	_puc,fsr2l
  1112   001664  C033  FFDA         	movff	_puc+1,fsr2h
  1113   001668  50DF               	movf	indf2,w,c
  1114   00166A  6EFE               	movwf	254,c	;volatile
  1115                           
  1116                           ; BSR set to: 0
  1117   00166C  4A32               	infsnz	_puc^0,f,c
  1118   00166E  2A33               	incf	(_puc+1)^0,f,c
  1119                           
  1120                           ; BSR set to: 0
  1121   001670  C032  FFD9         	movff	_puc,fsr2l
  1122   001674  C033  FFDA         	movff	_puc+1,fsr2h
  1123   001678  50DF               	movf	indf2,w,c
  1124   00167A  6EFF               	movwf	255,c	;volatile
  1125                           
  1126                           ; BSR set to: 0
  1127                           ;systeme.c: 162: STKPTR=temp;
  1128   00167C  C022  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;systeme.c: 165: STKPTR_T1=2;
  1132   001680  0E02               	movlw	2
  1133   001682  0101               	movlb	1	; () banked
  1134   001684  6F03               	movwf	3,b
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;systeme.c: 166: STKPTR_T2=7;
  1138   001686  0E07               	movlw	7
  1139   001688  0102               	movlb	2	; () banked
  1140   00168A  6F03               	movwf	3,b
  1141                           
  1142                           ; BSR set to: 2
  1143                           ;systeme.c: 167: STKPTR_T3=12;
  1144   00168C  0E0C               	movlw	12
  1145   00168E  0103               	movlb	3	; () banked
  1146   001690  6F03               	movwf	3,b
  1147                           
  1148                           ; BSR set to: 3
  1149                           ;systeme.c: 168: STKPTR_T4=17;
  1150   001692  0E11               	movlw	17
  1151   001694  0104               	movlb	4	; () banked
  1152   001696  6F03               	movwf	3,b
  1153                           
  1154                           ; BSR set to: 4
  1155                           ;systeme.c: 169: STKPTR_T5=22;
  1156   001698  0E16               	movlw	22
  1157   00169A  0105               	movlb	5	; () banked
  1158   00169C  6F03               	movwf	3,b
  1159                           
  1160                           ; BSR set to: 5
  1161                           ;systeme.c: 170: STKPTR_T6=27;
  1162   00169E  0E1B               	movlw	27
  1163   0016A0  0106               	movlb	6	; () banked
  1164   0016A2  6F03               	movwf	3,b
  1165                           
  1166                           ; BSR set to: 6
  1167                           ;systeme.c: 173: Tick_Count=0;
  1168   0016A4  0E00               	movlw	0
  1169   0016A6  0100               	movlb	0	; () banked
  1170   0016A8  6F72               	movwf	114,b
  1171   0016AA  0E00               	movlw	0
  1172   0016AC  6F71               	movwf	113,b
  1173                           
  1174                           ; BSR set to: 0
  1175                           ;systeme.c: 175: T0CON=0x01;
  1176   0016AE  0E01               	movlw	1
  1177   0016B0  6ED5               	movwf	213,c	;volatile
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;systeme.c: 176: T0IE=1;
  1181   0016B2  8AF2               	bsf	4082,5,c	;volatile
  1182                           
  1183                           ; BSR set to: 0
  1184   0016B4  0012               	return		;funcret
  1185   0016B6                     __end_of_initialisation_du_systeme:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _initialisation_des_ports *****************
  1189 ;; Defined at:
  1190 ;;		line 23 in file "main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, status,2
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;Total ram usage:        0 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 7
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text2
  1219   002006                     __ptext2:
  1220                           	callstack 0
  1221   002006                     _initialisation_des_ports:
  1222                           	callstack 23
  1223                           
  1224                           ;main.c: 26: MEMCON=0xA0;
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;incstack = 0
  1228   002006  0EA0               	movlw	160
  1229   002008  010F               	movlb	15	; () banked
  1230   00200A  6F26               	movwf	38,b	;volatile
  1231                           
  1232                           ;main.c: 29: ANCON0=0x00;
  1233   00200C  0E00               	movlw	0
  1234   00200E  6F25               	movwf	37,b	;volatile
  1235                           
  1236                           ;main.c: 30: ANCON1=0x00;
  1237   002010  0E00               	movlw	0
  1238   002012  6F24               	movwf	36,b	;volatile
  1239                           
  1240                           ;main.c: 31: ANCON2=0x00;
  1241   002014  0E00               	movlw	0
  1242   002016  6F23               	movwf	35,b	;volatile
  1243                           
  1244                           ; BSR set to: 15
  1245                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1246   002018  8125               	bsf	37,0,b	;volatile
  1247                           
  1248                           ; BSR set to: 15
  1249                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1250   00201A  8325               	bsf	37,1,b	;volatile
  1251                           
  1252                           ; BSR set to: 15
  1253                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1254   00201C  8525               	bsf	37,2,b	;volatile
  1255                           
  1256                           ; BSR set to: 15
  1257                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1258   00201E  8725               	bsf	37,3,b	;volatile
  1259                           
  1260                           ; BSR set to: 15
  1261                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1262   002020  8524               	bsf	36,2,b	;volatile
  1263                           
  1264                           ; BSR set to: 15
  1265                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1266   002022  8724               	bsf	36,3,b	;volatile
  1267                           
  1268                           ; BSR set to: 15
  1269                           ;main.c: 41: LATCbits.LATC2=1;
  1270   002024  848B               	bsf	139,2,c	;volatile
  1271                           
  1272                           ; BSR set to: 15
  1273                           ;main.c: 42: LATCbits.LATC1=1;
  1274   002026  828B               	bsf	139,1,c	;volatile
  1275                           
  1276                           ; BSR set to: 15
  1277                           ;main.c: 43: LATGbits.LATG0=1;
  1278   002028  808F               	bsf	143,0,c	;volatile
  1279                           
  1280                           ; BSR set to: 15
  1281                           ;main.c: 46: TRISCbits.TRISC2=0;
  1282   00202A  9494               	bcf	148,2,c	;volatile
  1283                           
  1284                           ; BSR set to: 15
  1285                           ;main.c: 47: TRISCbits.TRISC1=0;
  1286   00202C  9294               	bcf	148,1,c	;volatile
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;main.c: 48: TRISGbits.TRISG0=0;
  1290   00202E  9098               	bcf	152,0,c	;volatile
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;main.c: 49: TRISGbits.TRISG3=0;
  1294   002030  9698               	bcf	152,3,c	;volatile
  1295                           
  1296                           ; BSR set to: 15
  1297                           ;main.c: 50: TRISGbits.TRISG4=0;
  1298   002032  9898               	bcf	152,4,c	;volatile
  1299                           
  1300                           ; BSR set to: 15
  1301                           ;main.c: 51: TRISDbits.TRISD2=0;
  1302   002034  9495               	bcf	149,2,c	;volatile
  1303                           
  1304                           ; BSR set to: 15
  1305                           ;main.c: 52: TRISDbits.TRISD3=0;
  1306   002036  9695               	bcf	149,3,c	;volatile
  1307                           
  1308                           ; BSR set to: 15
  1309                           ;main.c: 55: INTCON2bits.RBPU=0;
  1310   002038  9EF1               	bcf	241,7,c	;volatile
  1311                           
  1312                           ; BSR set to: 15
  1313                           ;main.c: 56: PADCFG1bits.REPU=1;
  1314   00203A  8D53               	bsf	83,6,b	;volatile
  1315                           
  1316                           ; BSR set to: 15
  1317   00203C  0012               	return		;funcret
  1318   00203E                     __end_of_initialisation_des_ports:
  1319                           	callstack 0
  1320                           
  1321 ;; *************** function _Init *****************
  1322 ;; Defined at:
  1323 ;;		line 4 in file "semaphore.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  sem             1  [STACK] unsigned char 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1  [STACK] void 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 7
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;;		_tache1
  1349 ;; This function uses a reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text3
  1353   00215A                     __ptext3:
  1354                           	callstack 0
  1355   00215A                     _Init:
  1356                           	callstack 20
  1357                           
  1358                           ;semaphore.c: 6: switch (sem)
  1359                           
  1360                           ; BSR set to: 15
  1361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1362                           ;incstack = 0
  1363   00215A  D006               	goto	l2717
  1364   00215C                     l2713:
  1365                           
  1366                           ;semaphore.c: 9: Val_sem_cna=1;
  1367   00215C  0E01               	movlw	1
  1368   00215E  6E3A               	movwf	_Val_sem_cna^0,c
  1369                           
  1370                           ;semaphore.c: 10: break;
  1371   002160  D00B               	goto	l1471
  1372   002162                     l2715:
  1373                           
  1374                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1375   002162  0E01               	movlw	1
  1376   002164  6E39               	movwf	_Val_sem_rxtx^0,c
  1377                           
  1378                           ;semaphore.c: 13: break;
  1379   002166  D008               	goto	l1471
  1380   002168                     l2717:
  1381                           
  1382                           ;stkvar	Init@sem @ sp[(0)+-1]
  1383   002168  0EFF               	movlw	-1
  1384   00216A  50E3               	movf	plusw1,w,c
  1385                           
  1386                           ; Switch size 1, requested type "simple"
  1387                           ; Number of cases is 2, Range of values is 1 to 2
  1388                           ; switch strategies available:
  1389                           ; Name         Instructions Cycles
  1390                           ; simple_byte            7     4 (average)
  1391                           ;	Chosen strategy is simple_byte
  1392   00216C  0A01               	xorlw	1	; case 1
  1393   00216E  B4D8               	btfsc	status,2,c
  1394   002170  D7F5               	goto	l2713
  1395   002172  0A03               	xorlw	3	; case 2
  1396   002174  B4D8               	btfsc	status,2,c
  1397   002176  D7F5               	goto	l2715
  1398   002178                     l1471:
  1399                           
  1400                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1401   002178  52E5               	movf	postdec1,f,c
  1402   00217A  0012               	return		;funcret
  1403   00217C                     __end_of_Init:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _fonction_d_interruption *****************
  1407 ;; Defined at:
  1408 ;;		line 17 in file "systeme.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;Total ram usage:       12 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 6
  1429 ;; This function calls:
  1430 ;;		_tache1
  1431 ;;		_tache2
  1432 ;;		_tache3
  1433 ;;		_tache4
  1434 ;;		_tache5
  1435 ;;		_tache6
  1436 ;; This function is called by:
  1437 ;;		Interrupt level 2
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	intcode
  1442   000008                     __pintcode:
  1443                           	callstack 0
  1444   000008                     _fonction_d_interruption:
  1445                           	callstack 23
  1446                           
  1447                           ;incstack = 0
  1448   000008  CFE9 F016          	movff	fsr0l,??_fonction_d_interruption
  1449   00000C  CFEA F017          	movff	fsr0h,??_fonction_d_interruption+1
  1450   000010  CFE1 F018          	movff	fsr1l,??_fonction_d_interruption+2
  1451   000014  CFE2 F019          	movff	fsr1h,??_fonction_d_interruption+3
  1452   000018  CFD9 F01A          	movff	fsr2l,??_fonction_d_interruption+4
  1453   00001C  CFDA F01B          	movff	fsr2h,??_fonction_d_interruption+5
  1454   000020  CFF3 F01C          	movff	prodl,??_fonction_d_interruption+6
  1455   000024  CFF4 F01D          	movff	prodh,??_fonction_d_interruption+7
  1456   000028  CFF6 F01E          	movff	tblptrl,??_fonction_d_interruption+8
  1457   00002C  CFF7 F01F          	movff	tblptrh,??_fonction_d_interruption+9
  1458   000030  CFF8 F020          	movff	tblptru,??_fonction_d_interruption+10
  1459   000034  CFF5 F021          	movff	tablat,??_fonction_d_interruption+11
  1460   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1461                           
  1462                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1463   00003C  CFD8 F061          	movff	status,97	;volatile
  1464   000040  0100               	movlb	0	; () banked
  1465   000042  6F60               	movwf	96,b
  1466                           
  1467                           ; BSR set to: 0
  1468   000044  CFE0 F062          	movff	bsr,98	;volatile
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1472   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1473                           
  1474                           ; BSR set to: 0
  1475   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1476                           
  1477                           ; BSR set to: 0
  1478                           ;systeme.c: 24: if(T0IE && T0IF)
  1479   000050  BAF2               	btfsc	4082,5,c	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482   000052  A4F2               	btfss	4082,2,c	;volatile
  1483   000054  D143               	goto	i2l5153
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1487   000056  0565               	decf	101,w,b
  1488   000058  A4D8               	btfss	status,2,c
  1489   00005A  D004               	goto	i2l4853
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1493   00005C  0E1B               	movlw	27
  1494   00005E  6EFC               	movwf	252,c	;volatile
  1495                           
  1496                           ;systeme.c: 29: DEMARRAGE=0;
  1497   000060  0E00               	movlw	0
  1498   000062  6F65               	movwf	101,b
  1499   000064                     i2l4853:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1503   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1504                           
  1505                           ;systeme.c: 35: FSR0L=0;
  1506   000068  0E00               	movlw	0
  1507   00006A  6EE9               	movwf	233,c	;volatile
  1508                           
  1509                           ; BSR set to: 0
  1510                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1511   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1512                           
  1513                           ; BSR set to: 0
  1514   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1515                           
  1516                           ; BSR set to: 0
  1517   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1518                           
  1519                           ; BSR set to: 0
  1520   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1524   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1525                           
  1526                           ; BSR set to: 0
  1527   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1528                           
  1529                           ; BSR set to: 0
  1530   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1531                           
  1532                           ; BSR set to: 0
  1533   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1537   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1538                           
  1539                           ; BSR set to: 0
  1540   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1541                           
  1542                           ; BSR set to: 0
  1543   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1544                           
  1545                           ; BSR set to: 0
  1546   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1550   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1551                           
  1552                           ; BSR set to: 0
  1553   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1554                           
  1555                           ; BSR set to: 0
  1556   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1557                           
  1558                           ; BSR set to: 0
  1559   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1563   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1564                           
  1565                           ; BSR set to: 0
  1566   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1567                           
  1568                           ;systeme.c: 44: FSR1H=0;
  1569   0000B4  0E00               	movlw	0
  1570   0000B6  6EE2               	movwf	226,c	;volatile
  1571                           
  1572                           ;systeme.c: 45: FSR1L=0;
  1573   0000B8  0E00               	movlw	0
  1574   0000BA  6EE1               	movwf	225,c	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1578   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1579                           
  1580                           ; BSR set to: 0
  1581   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1582                           
  1583                           ; BSR set to: 0
  1584   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1585                           
  1586                           ; BSR set to: 0
  1587   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1591   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1592                           
  1593                           ; BSR set to: 0
  1594   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1595                           
  1596                           ; BSR set to: 0
  1597   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1598                           
  1599                           ; BSR set to: 0
  1600   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1604   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1605                           
  1606                           ; BSR set to: 0
  1607   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1608                           
  1609                           ; BSR set to: 0
  1610   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1617   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1630   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1631                           
  1632                           ; BSR set to: 0
  1633   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1634                           
  1635                           ; BSR set to: 0
  1636   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1643   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1644                           
  1645                           ; BSR set to: 0
  1646   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1647                           
  1648                           ; BSR set to: 0
  1649   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1650                           
  1651                           ; BSR set to: 0
  1652   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1656   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1669   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1676                           
  1677                           ; BSR set to: 0
  1678   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1682   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1695   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1699                           
  1700                           ; BSR set to: 0
  1701   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1708   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1709                           
  1710                           ; BSR set to: 0
  1711   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1715                           
  1716                           ; BSR set to: 0
  1717   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1721   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1722                           
  1723                           ; BSR set to: 0
  1724   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1731                           
  1732                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1733   00017C  0E8A               	movlw	138
  1734   00017E  6ED7               	movwf	215,c	;volatile
  1735   000180  0ECF               	movlw	207
  1736   000182  6ED6               	movwf	214,c	;volatile
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;systeme.c: 63: T0IF=0;
  1740   000184  94F2               	bcf	4082,2,c	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;systeme.c: 65: Tick_Count++;
  1744   000186  4B71               	infsnz	113,f,b
  1745   000188  2B72               	incf	114,f,b
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;systeme.c: 67: pointeur_de_tache++;
  1749   00018A  2B70               	incf	112,f,b
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1753   00018C  0E06               	movlw	6
  1754   00018E  1970               	xorwf	112,w,b
  1755   000190  A4D8               	btfss	status,2,c
  1756   000192  D002               	goto	i2l4997
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;systeme.c: 69: pointeur_de_tache=0;
  1760   000194  0E00               	movlw	0
  1761   000196  6F70               	movwf	112,b
  1762   000198                     i2l4997:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1766   000198  0E69               	movlw	105
  1767   00019A  2570               	addwf	112,w,b
  1768   00019C  6ED9               	movwf	fsr2l,c
  1769   00019E  6ADA               	clrf	fsr2h,c
  1770   0001A0  0E00               	movlw	0
  1771   0001A2  22DA               	addwfc	fsr2h,f,c
  1772   0001A4  50DF               	movf	indf2,w,c
  1773   0001A6  6F6F               	movwf	111,b
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;systeme.c: 75: FSR1H=0;
  1777   0001A8  0E00               	movlw	0
  1778   0001AA  6EE2               	movwf	226,c	;volatile
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;systeme.c: 76: FSR1L=0;
  1782   0001AC  0E00               	movlw	0
  1783   0001AE  6EE1               	movwf	225,c	;volatile
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;systeme.c: 77: FSR0H=tache_active;
  1787   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;systeme.c: 78: FSR0L=18;
  1791   0001B4  0E12               	movlw	18
  1792   0001B6  6EE9               	movwf	233,c	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1796   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1797                           
  1798                           ; BSR set to: 0
  1799   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1800                           
  1801                           ; BSR set to: 0
  1802   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1803                           
  1804                           ; BSR set to: 0
  1805   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1809   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1810                           
  1811                           ; BSR set to: 0
  1812   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1813                           
  1814                           ; BSR set to: 0
  1815   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1816                           
  1817                           ; BSR set to: 0
  1818   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1822   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1823                           
  1824                           ; BSR set to: 0
  1825   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1835   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1836                           
  1837                           ; BSR set to: 0
  1838   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1848   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1849                           
  1850                           ; BSR set to: 0
  1851   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1852                           
  1853                           ; BSR set to: 0
  1854   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1855                           
  1856                           ; BSR set to: 0
  1857   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1861   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1862                           
  1863                           ; BSR set to: 0
  1864   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1865                           
  1866                           ; BSR set to: 0
  1867   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1874   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1875                           
  1876                           ; BSR set to: 0
  1877   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1878                           
  1879                           ; BSR set to: 0
  1880   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1884                           
  1885                           ; BSR set to: 0
  1886                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1887   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1888                           
  1889                           ; BSR set to: 0
  1890   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1894                           
  1895                           ; BSR set to: 0
  1896   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1900   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1901                           
  1902                           ; BSR set to: 0
  1903   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1904                           
  1905                           ; BSR set to: 0
  1906   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1913   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1914                           
  1915                           ; BSR set to: 0
  1916   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1920                           
  1921                           ; BSR set to: 0
  1922   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1926   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1927                           
  1928                           ; BSR set to: 0
  1929   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1930                           
  1931                           ; BSR set to: 0
  1932   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1939   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1940                           
  1941                           ; BSR set to: 0
  1942   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1949                           
  1950                           ; BSR set to: 0
  1951                           ;systeme.c: 96: FSR0H=tache_active;
  1952   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  1953                           
  1954                           ; BSR set to: 0
  1955                           ;systeme.c: 97: FSR0L=0;
  1956   00027C  0E00               	movlw	0
  1957   00027E  6EE9               	movwf	233,c	;volatile
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1961   000280  CFEE F060          	movff	postinc0,96	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964   000284  CFEE F061          	movff	postinc0,97	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967   000288  CFEE F062          	movff	postinc0,98	;volatile
  1968                           
  1969                           ; BSR set to: 0
  1970   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  1974   000290  CFEE F063          	movff	postinc0,99	;volatile
  1975                           
  1976                           ; BSR set to: 0
  1977   000294  CFEE F064          	movff	postinc0,100	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  1981                           
  1982                           ; BSR set to: 0
  1983   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  1987   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  1988                           
  1989                           ; BSR set to: 0
  1990   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  1991                           
  1992                           ; BSR set to: 0
  1993   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  1994                           
  1995                           ; BSR set to: 0
  1996   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2000   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2001                           
  2002                           ; BSR set to: 0
  2003   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2004                           
  2005                           ; BSR set to: 0
  2006   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2007                           
  2008                           ; BSR set to: 0
  2009   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2010                           
  2011                           ; BSR set to: 0
  2012                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2013   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2014                           
  2015                           ; BSR set to: 0
  2016   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2020   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2021                           
  2022                           ; BSR set to: 0
  2023   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2024                           
  2025                           ; BSR set to: 0
  2026   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2030   0002D4  5160               	movf	96,w,b
  2031                           
  2032                           ; BSR set to: 0
  2033   0002D6  C061 FFD8          	movff	97,status	;volatile
  2034   0002DA  0010               	retfie		;# 
  2035   0002DC                     i2l5153:
  2036                           
  2037                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2038   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2039   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2040   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2041                           
  2042                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2043   0002E8  0100               	movlb	0	; () banked
  2044   0002EA  5160               	movf	96,w,b
  2045                           
  2046                           ; BSR set to: 0
  2047   0002EC  C061 FFD8          	movff	97,status	;volatile
  2048   0002F0  0010               	retfie		;# 
  2049                           
  2050                           ;systeme.c: 123: tache1();
  2051   0002F2  EC66  F008         	call	_tache1	;wreg free
  2052                           
  2053                           ;systeme.c: 124: tache2();
  2054   0002F6  EC5B  F00B         	call	_tache2	;wreg free
  2055                           
  2056                           ;systeme.c: 125: tache3();
  2057   0002FA  EC48  F00C         	call	_tache3	;wreg free
  2058                           
  2059                           ;systeme.c: 126: tache4();
  2060   0002FE  ECB7  F00C         	call	_tache4	;wreg free
  2061                           
  2062                           ;systeme.c: 127: tache5();
  2063   000302  ECD5  F00B         	call	_tache5	;wreg free
  2064                           
  2065                           ;systeme.c: 128: tache6();
  2066   000306  EC99  F010         	call	_tache6	;wreg free
  2067   00030A  C021  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2068   00030E  C020  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2069   000312  C01F  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2070   000316  C01E  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2071   00031A  C01D  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2072   00031E  C01C  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2073   000322  C01B  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2074   000326  C01A  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2075   00032A  C019  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2076   00032E  C018  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2077   000332  C017  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2078   000336  C016  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2079   00033A  0011               	retfie		f
  2080   00033C                     __end_of_fonction_d_interruption:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _tache6 *****************
  2084 ;; Defined at:
  2085 ;;		line 3 in file "T6.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  n               1    8[COMRAM] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2103 ;;Total ram usage:        1 bytes
  2104 ;; Hardware stack levels used: 1
  2105 ;; Hardware stack levels required when called: 2
  2106 ;; This function calls:
  2107 ;;		_lecture_normale
  2108 ;; This function is called by:
  2109 ;;		_fonction_d_interruption
  2110 ;;		_initialisation_du_systeme
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text5
  2115   002132                     __ptext5:
  2116                           	callstack 0
  2117   002132                     _tache6:
  2118                           	callstack 26
  2119                           
  2120                           ;T6.c: 7: {;T6.c: 8: n=lecture_normale(badge);
  2121                           
  2122                           ;incstack = 0
  2123                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2124   002132  0E75               	movlw	117
  2125   002134  6E03               	movwf	lecture_normale@stid_id^0,c
  2126   002136  0E00               	movlw	0
  2127   002138  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2128   00213A  ECDB  F00D         	call	_lecture_normale	;wreg free
  2129   00213E  6E09               	movwf	tache6@n^0,c
  2130                           
  2131                           ;T6.c: 9: if (n>0)
  2132   002140  5009               	movf	tache6@n^0,w,c
  2133   002142  B4D8               	btfsc	status,2,c
  2134   002144  D006               	goto	i2l4817
  2135                           
  2136                           ;T6.c: 10: {;T6.c: 11: if(n<10)
  2137   002146  0E0A               	movlw	10
  2138   002148  6009               	cpfslt	tache6@n^0,c
  2139   00214A  D003               	goto	i2l4817
  2140                           
  2141                           ;T6.c: 12: {;T6.c: 13: n_octet_badge=n;
  2142   00214C  C009  F07F         	movff	tache6@n,127
  2143                           
  2144                           ;T6.c: 14: }
  2145   002150  D7F0               	goto	__ptext5
  2146   002152                     i2l4817:
  2147                           
  2148                           ;T6.c: 15: else;T6.c: 16: {;T6.c: 17: n_octet_badge=0;
  2149   002152  0E00               	movlw	0
  2150   002154  0100               	movlb	0	; () banked
  2151   002156  6F7F               	movwf	127,b
  2152   002158  D7EC               	goto	__ptext5
  2153   00215A                     __end_of_tache6:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _lecture_normale *****************
  2157 ;; Defined at:
  2158 ;;		line 5 in file "stid.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2161 ;;		 -> badge(10), 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  octet           1    7[COMRAM] unsigned char 
  2164 ;;  n_bit           1    6[COMRAM] unsigned char 
  2165 ;;  n_octet         1    5[COMRAM] unsigned char 
  2166 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      unsigned char 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        6 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 1
  2183 ;; This function calls:
  2184 ;;		_stid_delai_us
  2185 ;; This function is called by:
  2186 ;;		_tache6
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text6
  2191   001BB6                     __ptext6:
  2192                           	callstack 0
  2193   001BB6                     _lecture_normale:
  2194                           	callstack 26
  2195                           
  2196                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;incstack = 0
  2200   001BB6  8295               	bsf	149,1,c	;volatile
  2201                           
  2202                           ;stid.c: 10: LATDbits.LATD3=0;
  2203   001BB8  968C               	bcf	140,3,c	;volatile
  2204                           
  2205                           ;stid.c: 11: LATDbits.LATD2=0;
  2206   001BBA  948C               	bcf	140,2,c	;volatile
  2207                           
  2208                           ;stid.c: 12: stid_delai_us(100);
  2209   001BBC  0E00               	movlw	0
  2210   001BBE  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2211   001BC0  0E64               	movlw	100
  2212   001BC2  6E01               	movwf	stid_delai_us@isdu^0,c
  2213   001BC4  EC24  F011         	call	_stid_delai_us	;wreg free
  2214                           
  2215                           ;stid.c: 13: LATDbits.LATD3=1;
  2216   001BC8  868C               	bsf	140,3,c	;volatile
  2217                           
  2218                           ;stid.c: 14: temps_attente=0;
  2219   001BCA  0E00               	movlw	0
  2220   001BCC  6E05               	movwf	lecture_normale@temps_attente^0,c
  2221   001BCE                     i2l4335:
  2222                           
  2223                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2224   001BCE  0E03               	movlw	3
  2225   001BD0  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2226   001BD2  0EE8               	movlw	232
  2227   001BD4  6E01               	movwf	stid_delai_us@isdu^0,c
  2228   001BD6  EC24  F011         	call	_stid_delai_us	;wreg free
  2229                           
  2230                           ;stid.c: 18: temps_attente++;
  2231   001BDA  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2232                           
  2233                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2234   001BDC  A083               	btfss	131,0,c	;volatile
  2235   001BDE  D002               	goto	i2l4343
  2236                           
  2237                           ;stid.c: 20: temps_attente=65;
  2238   001BE0  0E41               	movlw	65
  2239   001BE2  6E05               	movwf	lecture_normale@temps_attente^0,c
  2240   001BE4                     i2l4343:
  2241                           
  2242                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2243   001BE4  0E40               	movlw	64
  2244   001BE6  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2245   001BE8  D7F2               	goto	i2l4335
  2246                           
  2247                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2248   001BEA  A083               	btfss	131,0,c	;volatile
  2249   001BEC  D033               	goto	i2l4379
  2250                           
  2251                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2252   001BEE  0E00               	movlw	0
  2253   001BF0  6E06               	movwf	lecture_normale@n_octet^0,c
  2254   001BF2                     i2l1584:
  2255                           
  2256                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2257   001BF2  0E00               	movlw	0
  2258   001BF4  6E08               	movwf	lecture_normale@octet^0,c
  2259                           
  2260                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2261   001BF6  0E00               	movlw	0
  2262   001BF8  6E07               	movwf	lecture_normale@n_bit^0,c
  2263   001BFA                     i2l1585:
  2264                           
  2265                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2266   001BFA  A283               	btfss	131,1,c	;volatile
  2267   001BFC  D003               	goto	i2l1587
  2268                           
  2269                           ;stid.c: 34: octet=(octet|0x01);
  2270   001BFE  5008               	movf	lecture_normale@octet^0,w,c
  2271   001C00  0901               	iorlw	1
  2272   001C02  6E08               	movwf	lecture_normale@octet^0,c
  2273   001C04                     i2l1587:
  2274                           
  2275                           ;stid.c: 35: octet=octet<<1;
  2276   001C04  5008               	movf	lecture_normale@octet^0,w,c
  2277   001C06  2408               	addwf	lecture_normale@octet^0,w,c
  2278   001C08  6E08               	movwf	lecture_normale@octet^0,c
  2279                           
  2280                           ;stid.c: 36: stid_delai_us(100);
  2281   001C0A  0E00               	movlw	0
  2282   001C0C  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2283   001C0E  0E64               	movlw	100
  2284   001C10  6E01               	movwf	stid_delai_us@isdu^0,c
  2285   001C12  EC24  F011         	call	_stid_delai_us	;wreg free
  2286                           
  2287                           ;stid.c: 37: LATDbits.LATD2=1;
  2288   001C16  848C               	bsf	140,2,c	;volatile
  2289                           
  2290                           ;stid.c: 38: stid_delai_us(500);
  2291   001C18  0E01               	movlw	1
  2292   001C1A  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2293   001C1C  0EF4               	movlw	244
  2294   001C1E  6E01               	movwf	stid_delai_us@isdu^0,c
  2295   001C20  EC24  F011         	call	_stid_delai_us	;wreg free
  2296                           
  2297                           ;stid.c: 39: LATDbits.LATD2=0;
  2298   001C24  948C               	bcf	140,2,c	;volatile
  2299                           
  2300                           ;stid.c: 40: stid_delai_us(400);
  2301   001C26  0E01               	movlw	1
  2302   001C28  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2303   001C2A  0E90               	movlw	144
  2304   001C2C  6E01               	movwf	stid_delai_us@isdu^0,c
  2305   001C2E  EC24  F011         	call	_stid_delai_us	;wreg free
  2306   001C32  2A07               	incf	lecture_normale@n_bit^0,f,c
  2307   001C34  0E07               	movlw	7
  2308   001C36  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2309   001C38  D7E0               	goto	i2l1585
  2310                           
  2311                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2312   001C3A  5006               	movf	lecture_normale@n_octet^0,w,c
  2313   001C3C  2403               	addwf	lecture_normale@stid_id^0,w,c
  2314   001C3E  6ED9               	movwf	fsr2l,c
  2315   001C40  0E00               	movlw	0
  2316   001C42  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2317   001C44  6EDA               	movwf	fsr2h,c
  2318   001C46  C008  FFDF         	movff	lecture_normale@octet,indf2
  2319                           
  2320                           ;stid.c: 43: n_octet++;
  2321   001C4A  2A06               	incf	lecture_normale@n_octet^0,f,c
  2322                           
  2323                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2324   001C4C  B083               	btfsc	131,0,c	;volatile
  2325   001C4E  D7D1               	goto	i2l1584
  2326                           
  2327                           ;stid.c: 47: return n_octet;
  2328   001C50  5006               	movf	lecture_normale@n_octet^0,w,c
  2329   001C52  0012               	return	
  2330   001C54                     i2l4379:
  2331                           
  2332                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2333   001C54  0E00               	movlw	0
  2334   001C56  0012               	return		;funcret
  2335   001C58                     __end_of_lecture_normale:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _stid_delai_us *****************
  2339 ;; Defined at:
  2340 ;;		line 56 in file "stid.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  isdu            2    0[COMRAM] unsigned int 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:        2 bytes
  2359 ;; Hardware stack levels used: 1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_lecture_normale
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text7
  2368   002248                     __ptext7:
  2369                           	callstack 0
  2370   002248                     _stid_delai_us:
  2371                           	callstack 26
  2372                           
  2373                           ;stid.c: 58: while(isdu>0)
  2374                           
  2375                           ;incstack = 0
  2376   002248  D006               	goto	i2l4211
  2377   00224A                     i2l1594:
  2378                           
  2379                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2380   00224A  F000               	nop	
  2381   00224C  F000               	nop	
  2382   00224E  F000               	nop	
  2383                           
  2384                           ;stid.c: 61: isdu--;
  2385   002250  0601               	decf	stid_delai_us@isdu^0,f,c
  2386   002252  A0D8               	btfss	status,0,c
  2387   002254  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2388   002256                     i2l4211:
  2389   002256  5001               	movf	stid_delai_us@isdu^0,w,c
  2390   002258  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2391   00225A  B4D8               	btfsc	status,2,c
  2392   00225C  0012               	return	
  2393   00225E  D7F5               	goto	i2l1594
  2394   002260                     __end_of_stid_delai_us:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _tache5 *****************
  2398 ;; Defined at:
  2399 ;;		line 3 in file "T5.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;		None
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;  a               2    0[COMRAM] unsigned int 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_fonction_d_interruption
  2423 ;;		_initialisation_du_systeme
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text8
  2428   0017AA                     __ptext8:
  2429                           	callstack 0
  2430   0017AA                     _tache5:
  2431                           	callstack 28
  2432                           
  2433                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2434                           
  2435                           ;incstack = 0
  2436                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2437   0017AA  A89E               	btfss	158,4,c	;volatile
  2438   0017AC  D7FE               	goto	__ptext8
  2439   0017AE  0E74               	movlw	116
  2440   0017B0  6EAD               	movwf	173,c	;volatile
  2441   0017B2                     i2l930:
  2442   0017B2  A2AC               	btfss	172,1,c	;volatile
  2443   0017B4  D7FE               	goto	i2l930
  2444   0017B6                     i2u152_40:
  2445   0017B6  A89E               	btfss	158,4,c	;volatile
  2446   0017B8  D7FE               	goto	i2u152_40
  2447   0017BA  0E61               	movlw	97
  2448   0017BC  6EAD               	movwf	173,c	;volatile
  2449   0017BE                     i2l936:
  2450   0017BE  A2AC               	btfss	172,1,c	;volatile
  2451   0017C0  D7FE               	goto	i2l936
  2452   0017C2                     i2u154_40:
  2453   0017C2  A89E               	btfss	158,4,c	;volatile
  2454   0017C4  D7FE               	goto	i2u154_40
  2455   0017C6  0E63               	movlw	99
  2456   0017C8  6EAD               	movwf	173,c	;volatile
  2457   0017CA                     i2l942:
  2458   0017CA  A2AC               	btfss	172,1,c	;volatile
  2459   0017CC  D7FE               	goto	i2l942
  2460   0017CE                     i2u156_40:
  2461   0017CE  A89E               	btfss	158,4,c	;volatile
  2462   0017D0  D7FE               	goto	i2u156_40
  2463   0017D2  0E68               	movlw	104
  2464   0017D4  6EAD               	movwf	173,c	;volatile
  2465   0017D6                     i2l948:
  2466   0017D6  A2AC               	btfss	172,1,c	;volatile
  2467   0017D8  D7FE               	goto	i2l948
  2468   0017DA                     i2u158_40:
  2469   0017DA  A89E               	btfss	158,4,c	;volatile
  2470   0017DC  D7FE               	goto	i2u158_40
  2471   0017DE  0E65               	movlw	101
  2472   0017E0  6EAD               	movwf	173,c	;volatile
  2473   0017E2                     i2l954:
  2474   0017E2  A2AC               	btfss	172,1,c	;volatile
  2475   0017E4  D7FE               	goto	i2l954
  2476   0017E6                     i2u160_40:
  2477   0017E6  A89E               	btfss	158,4,c	;volatile
  2478   0017E8  D7FE               	goto	i2u160_40
  2479   0017EA  0E35               	movlw	53
  2480   0017EC  6EAD               	movwf	173,c	;volatile
  2481   0017EE                     i2l960:
  2482   0017EE  A2AC               	btfss	172,1,c	;volatile
  2483   0017F0  D7FE               	goto	i2l960
  2484   0017F2                     i2u162_40:
  2485   0017F2  A89E               	btfss	158,4,c	;volatile
  2486   0017F4  D7FE               	goto	i2u162_40
  2487   0017F6  0E5F               	movlw	95
  2488   0017F8  6EAD               	movwf	173,c	;volatile
  2489   0017FA                     i2l966:
  2490   0017FA  A2AC               	btfss	172,1,c	;volatile
  2491   0017FC  D7FE               	goto	i2l966
  2492   0017FE                     i2u164_40:
  2493   0017FE  A89E               	btfss	158,4,c	;volatile
  2494   001800  D7FE               	goto	i2u164_40
  2495   001802  0E65               	movlw	101
  2496   001804  6EAD               	movwf	173,c	;volatile
  2497   001806                     i2l972:
  2498   001806  A2AC               	btfss	172,1,c	;volatile
  2499   001808  D7FE               	goto	i2l972
  2500   00180A                     i2u166_40:
  2501   00180A  A89E               	btfss	158,4,c	;volatile
  2502   00180C  D7FE               	goto	i2u166_40
  2503   00180E  0E6E               	movlw	110
  2504   001810  6EAD               	movwf	173,c	;volatile
  2505   001812                     i2l978:
  2506   001812  A2AC               	btfss	172,1,c	;volatile
  2507   001814  D7FE               	goto	i2l978
  2508   001816                     i2u168_40:
  2509   001816  A89E               	btfss	158,4,c	;volatile
  2510   001818  D7FE               	goto	i2u168_40
  2511   00181A  0E5F               	movlw	95
  2512   00181C  6EAD               	movwf	173,c	;volatile
  2513   00181E                     i2l984:
  2514   00181E  A2AC               	btfss	172,1,c	;volatile
  2515   001820  D7FE               	goto	i2l984
  2516   001822                     i2u170_40:
  2517   001822  A89E               	btfss	158,4,c	;volatile
  2518   001824  D7FE               	goto	i2u170_40
  2519   001826  0E63               	movlw	99
  2520   001828  6EAD               	movwf	173,c	;volatile
  2521   00182A                     i2l990:
  2522   00182A  A2AC               	btfss	172,1,c	;volatile
  2523   00182C  D7FE               	goto	i2l990
  2524   00182E                     i2u172_40:
  2525   00182E  A89E               	btfss	158,4,c	;volatile
  2526   001830  D7FE               	goto	i2u172_40
  2527   001832  0E6F               	movlw	111
  2528   001834  6EAD               	movwf	173,c	;volatile
  2529   001836                     i2l996:
  2530   001836  A2AC               	btfss	172,1,c	;volatile
  2531   001838  D7FE               	goto	i2l996
  2532   00183A                     i2u174_40:
  2533   00183A  A89E               	btfss	158,4,c	;volatile
  2534   00183C  D7FE               	goto	i2u174_40
  2535   00183E  0E75               	movlw	117
  2536   001840  6EAD               	movwf	173,c	;volatile
  2537   001842                     i2l1002:
  2538   001842  A2AC               	btfss	172,1,c	;volatile
  2539   001844  D7FE               	goto	i2l1002
  2540   001846                     i2u176_40:
  2541   001846  A89E               	btfss	158,4,c	;volatile
  2542   001848  D7FE               	goto	i2u176_40
  2543   00184A  0E72               	movlw	114
  2544   00184C  6EAD               	movwf	173,c	;volatile
  2545   00184E                     i2l1008:
  2546   00184E  A2AC               	btfss	172,1,c	;volatile
  2547   001850  D7FE               	goto	i2l1008
  2548   001852                     i2u178_40:
  2549   001852  A89E               	btfss	158,4,c	;volatile
  2550   001854  D7FE               	goto	i2u178_40
  2551   001856  0E73               	movlw	115
  2552   001858  6EAD               	movwf	173,c	;volatile
  2553   00185A                     i2l1014:
  2554   00185A  A2AC               	btfss	172,1,c	;volatile
  2555   00185C  D7FE               	goto	i2l1014
  2556                           
  2557                           ;T5.c: 28: for (a=0;a<65000;a++)
  2558   00185E  0E00               	movlw	0
  2559   001860  6E02               	movwf	(tache5@a+1)^0,c
  2560   001862  0E00               	movlw	0
  2561   001864  6E01               	movwf	tache5@a^0,c
  2562   001866                     i2l3531:
  2563                           
  2564                           ;T5.c: 29: ;
  2565   001866  4A01               	infsnz	tache5@a^0,f,c
  2566   001868  2A02               	incf	(tache5@a+1)^0,f,c
  2567   00186A  0EE8               	movlw	232
  2568   00186C  5C01               	subwf	tache5@a^0,w,c
  2569   00186E  0EFD               	movlw	253
  2570   001870  5802               	subwfb	(tache5@a+1)^0,w,c
  2571   001872  A0D8               	btfss	status,0,c
  2572   001874  D7F8               	goto	i2l3531
  2573                           
  2574                           ;T5.c: 30: for (a=0;a<65000;a++)
  2575   001876  0E00               	movlw	0
  2576   001878  6E02               	movwf	(tache5@a+1)^0,c
  2577   00187A  0E00               	movlw	0
  2578   00187C  6E01               	movwf	tache5@a^0,c
  2579   00187E                     i2l3541:
  2580                           
  2581                           ;T5.c: 31: ;
  2582   00187E  4A01               	infsnz	tache5@a^0,f,c
  2583   001880  2A02               	incf	(tache5@a+1)^0,f,c
  2584   001882  0EE8               	movlw	232
  2585   001884  5C01               	subwf	tache5@a^0,w,c
  2586   001886  0EFD               	movlw	253
  2587   001888  5802               	subwfb	(tache5@a+1)^0,w,c
  2588   00188A  B0D8               	btfsc	status,0,c
  2589   00188C  D78E               	goto	__ptext8
  2590   00188E  D7F7               	goto	i2l3541
  2591   001890                     __end_of_tache5:
  2592                           	callstack 0
  2593                           
  2594 ;; *************** function _tache4 *****************
  2595 ;; Defined at:
  2596 ;;		line 3 in file "T4.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;  a               2    0[COMRAM] unsigned int 
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_fonction_d_interruption
  2620 ;;		_initialisation_du_systeme
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text9
  2625   00196E                     __ptext9:
  2626                           	callstack 0
  2627   00196E                     _tache4:
  2628                           	callstack 28
  2629                           
  2630                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2631                           
  2632                           ;incstack = 0
  2633                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2634   00196E  A89E               	btfss	158,4,c	;volatile
  2635   001970  D7FE               	goto	__ptext9
  2636   001972  0E54               	movlw	84
  2637   001974  6EAD               	movwf	173,c	;volatile
  2638   001976                     i2l752:
  2639   001976  A2AC               	btfss	172,1,c	;volatile
  2640   001978  D7FE               	goto	i2l752
  2641   00197A                     i2u121_40:
  2642   00197A  A89E               	btfss	158,4,c	;volatile
  2643   00197C  D7FE               	goto	i2u121_40
  2644   00197E  0E41               	movlw	65
  2645   001980  6EAD               	movwf	173,c	;volatile
  2646   001982                     i2l758:
  2647   001982  A2AC               	btfss	172,1,c	;volatile
  2648   001984  D7FE               	goto	i2l758
  2649   001986                     i2u123_40:
  2650   001986  A89E               	btfss	158,4,c	;volatile
  2651   001988  D7FE               	goto	i2u123_40
  2652   00198A  0E43               	movlw	67
  2653   00198C  6EAD               	movwf	173,c	;volatile
  2654   00198E                     i2l764:
  2655   00198E  A2AC               	btfss	172,1,c	;volatile
  2656   001990  D7FE               	goto	i2l764
  2657   001992                     i2u125_40:
  2658   001992  A89E               	btfss	158,4,c	;volatile
  2659   001994  D7FE               	goto	i2u125_40
  2660   001996  0E48               	movlw	72
  2661   001998  6EAD               	movwf	173,c	;volatile
  2662   00199A                     i2l770:
  2663   00199A  A2AC               	btfss	172,1,c	;volatile
  2664   00199C  D7FE               	goto	i2l770
  2665   00199E                     i2u127_40:
  2666   00199E  A89E               	btfss	158,4,c	;volatile
  2667   0019A0  D7FE               	goto	i2u127_40
  2668   0019A2  0E45               	movlw	69
  2669   0019A4  6EAD               	movwf	173,c	;volatile
  2670   0019A6                     i2l776:
  2671   0019A6  A2AC               	btfss	172,1,c	;volatile
  2672   0019A8  D7FE               	goto	i2l776
  2673   0019AA                     i2u129_40:
  2674   0019AA  A89E               	btfss	158,4,c	;volatile
  2675   0019AC  D7FE               	goto	i2u129_40
  2676   0019AE  0E34               	movlw	52
  2677   0019B0  6EAD               	movwf	173,c	;volatile
  2678   0019B2                     i2l782:
  2679   0019B2  A2AC               	btfss	172,1,c	;volatile
  2680   0019B4  D7FE               	goto	i2l782
  2681   0019B6                     i2u131_40:
  2682   0019B6  A89E               	btfss	158,4,c	;volatile
  2683   0019B8  D7FE               	goto	i2u131_40
  2684   0019BA  0E5F               	movlw	95
  2685   0019BC  6EAD               	movwf	173,c	;volatile
  2686   0019BE                     i2l788:
  2687   0019BE  A2AC               	btfss	172,1,c	;volatile
  2688   0019C0  D7FE               	goto	i2l788
  2689   0019C2                     i2u133_40:
  2690   0019C2  A89E               	btfss	158,4,c	;volatile
  2691   0019C4  D7FE               	goto	i2u133_40
  2692   0019C6  0E45               	movlw	69
  2693   0019C8  6EAD               	movwf	173,c	;volatile
  2694   0019CA                     i2l794:
  2695   0019CA  A2AC               	btfss	172,1,c	;volatile
  2696   0019CC  D7FE               	goto	i2l794
  2697   0019CE                     i2u135_40:
  2698   0019CE  A89E               	btfss	158,4,c	;volatile
  2699   0019D0  D7FE               	goto	i2u135_40
  2700   0019D2  0E4E               	movlw	78
  2701   0019D4  6EAD               	movwf	173,c	;volatile
  2702   0019D6                     i2l800:
  2703   0019D6  A2AC               	btfss	172,1,c	;volatile
  2704   0019D8  D7FE               	goto	i2l800
  2705   0019DA                     i2u137_40:
  2706   0019DA  A89E               	btfss	158,4,c	;volatile
  2707   0019DC  D7FE               	goto	i2u137_40
  2708   0019DE  0E5F               	movlw	95
  2709   0019E0  6EAD               	movwf	173,c	;volatile
  2710   0019E2                     i2l806:
  2711   0019E2  A2AC               	btfss	172,1,c	;volatile
  2712   0019E4  D7FE               	goto	i2l806
  2713   0019E6                     i2u139_40:
  2714   0019E6  A89E               	btfss	158,4,c	;volatile
  2715   0019E8  D7FE               	goto	i2u139_40
  2716   0019EA  0E43               	movlw	67
  2717   0019EC  6EAD               	movwf	173,c	;volatile
  2718   0019EE                     i2l812:
  2719   0019EE  A2AC               	btfss	172,1,c	;volatile
  2720   0019F0  D7FE               	goto	i2l812
  2721   0019F2                     i2u141_40:
  2722   0019F2  A89E               	btfss	158,4,c	;volatile
  2723   0019F4  D7FE               	goto	i2u141_40
  2724   0019F6  0E4F               	movlw	79
  2725   0019F8  6EAD               	movwf	173,c	;volatile
  2726   0019FA                     i2l818:
  2727   0019FA  A2AC               	btfss	172,1,c	;volatile
  2728   0019FC  D7FE               	goto	i2l818
  2729   0019FE                     i2u143_40:
  2730   0019FE  A89E               	btfss	158,4,c	;volatile
  2731   001A00  D7FE               	goto	i2u143_40
  2732   001A02  0E55               	movlw	85
  2733   001A04  6EAD               	movwf	173,c	;volatile
  2734   001A06                     i2l824:
  2735   001A06  A2AC               	btfss	172,1,c	;volatile
  2736   001A08  D7FE               	goto	i2l824
  2737   001A0A                     i2u145_40:
  2738   001A0A  A89E               	btfss	158,4,c	;volatile
  2739   001A0C  D7FE               	goto	i2u145_40
  2740   001A0E  0E52               	movlw	82
  2741   001A10  6EAD               	movwf	173,c	;volatile
  2742   001A12                     i2l830:
  2743   001A12  A2AC               	btfss	172,1,c	;volatile
  2744   001A14  D7FE               	goto	i2l830
  2745   001A16                     i2u147_40:
  2746   001A16  A89E               	btfss	158,4,c	;volatile
  2747   001A18  D7FE               	goto	i2u147_40
  2748   001A1A  0E53               	movlw	83
  2749   001A1C  6EAD               	movwf	173,c	;volatile
  2750   001A1E                     i2l836:
  2751   001A1E  A2AC               	btfss	172,1,c	;volatile
  2752   001A20  D7FE               	goto	i2l836
  2753                           
  2754                           ;T4.c: 28: for (a=0;a<65000;a++)
  2755   001A22  0E00               	movlw	0
  2756   001A24  6E02               	movwf	(tache4@a+1)^0,c
  2757   001A26  0E00               	movlw	0
  2758   001A28  6E01               	movwf	tache4@a^0,c
  2759   001A2A                     i2l3491:
  2760                           
  2761                           ;T4.c: 29: ;
  2762   001A2A  4A01               	infsnz	tache4@a^0,f,c
  2763   001A2C  2A02               	incf	(tache4@a+1)^0,f,c
  2764   001A2E  0EE8               	movlw	232
  2765   001A30  5C01               	subwf	tache4@a^0,w,c
  2766   001A32  0EFD               	movlw	253
  2767   001A34  5802               	subwfb	(tache4@a+1)^0,w,c
  2768   001A36  B0D8               	btfsc	status,0,c
  2769   001A38  D79A               	goto	__ptext9
  2770   001A3A  D7F7               	goto	i2l3491
  2771   001A3C                     __end_of_tache4:
  2772                           	callstack 0
  2773                           
  2774 ;; *************** function _tache3 *****************
  2775 ;; Defined at:
  2776 ;;		line 3 in file "T3.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_fonction_d_interruption
  2800 ;;		_initialisation_du_systeme
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text10
  2805   001890                     __ptext10:
  2806                           	callstack 0
  2807   001890                     _tache3:
  2808                           	callstack 28
  2809                           
  2810                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2811                           
  2812                           ;incstack = 0
  2813                           ;T3.c: 5: while(1)
  2814   001890  0100               	movlb	0	; () banked
  2815   001892  0566               	decf	102,w,b
  2816   001894  A4D8               	btfss	status,2,c
  2817   001896  D014               	goto	i2l3391
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2821   001898  0ECA               	movlw	202
  2822   00189A  6567               	cpfsgt	103,b
  2823   00189C  D011               	goto	i2l3391
  2824                           
  2825                           ; BSR set to: 0
  2826   00189E  0ED1               	movlw	209
  2827   0018A0  6167               	cpfslt	103,b
  2828   0018A2  D00E               	goto	i2l3391
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2832   0018A4  0E70               	movlw	112
  2833   0018A6  6568               	cpfsgt	104,b
  2834   0018A8  D004               	goto	i2l3385
  2835                           
  2836                           ; BSR set to: 0
  2837   0018AA  0E79               	movlw	121
  2838   0018AC  6168               	cpfslt	104,b
  2839   0018AE  D001               	goto	i2l3385
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2843   0018B0  848B               	bsf	139,2,c	;volatile
  2844   0018B2                     i2l3385:
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2848   0018B2  0E78               	movlw	120
  2849   0018B4  6568               	cpfsgt	104,b
  2850   0018B6  D004               	goto	i2l3391
  2851                           
  2852                           ; BSR set to: 0
  2853   0018B8  0E7F               	movlw	127
  2854   0018BA  6168               	cpfslt	104,b
  2855   0018BC  D001               	goto	i2l3391
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2859   0018BE  948B               	bcf	139,2,c	;volatile
  2860   0018C0                     i2l3391:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2864   0018C0  0566               	decf	102,w,b
  2865   0018C2  A4D8               	btfss	status,2,c
  2866   0018C4  D014               	goto	i2l3409
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2870   0018C6  0ED6               	movlw	214
  2871   0018C8  6567               	cpfsgt	103,b
  2872   0018CA  D011               	goto	i2l3409
  2873                           
  2874                           ; BSR set to: 0
  2875   0018CC  0EDD               	movlw	221
  2876   0018CE  6167               	cpfslt	103,b
  2877   0018D0  D00E               	goto	i2l3409
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2881   0018D2  0E70               	movlw	112
  2882   0018D4  6568               	cpfsgt	104,b
  2883   0018D6  D004               	goto	i2l3403
  2884                           
  2885                           ; BSR set to: 0
  2886   0018D8  0E79               	movlw	121
  2887   0018DA  6168               	cpfslt	104,b
  2888   0018DC  D001               	goto	i2l3403
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2892   0018DE  828B               	bsf	139,1,c	;volatile
  2893   0018E0                     i2l3403:
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2897   0018E0  0E78               	movlw	120
  2898   0018E2  6568               	cpfsgt	104,b
  2899   0018E4  D004               	goto	i2l3409
  2900                           
  2901                           ; BSR set to: 0
  2902   0018E6  0E7F               	movlw	127
  2903   0018E8  6168               	cpfslt	104,b
  2904   0018EA  D001               	goto	i2l3409
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2908   0018EC  928B               	bcf	139,1,c	;volatile
  2909   0018EE                     i2l3409:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2913   0018EE  0566               	decf	102,w,b
  2914   0018F0  A4D8               	btfss	status,2,c
  2915   0018F2  D014               	goto	i2l3427
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2919   0018F4  0EE2               	movlw	226
  2920   0018F6  6567               	cpfsgt	103,b
  2921   0018F8  D011               	goto	i2l3427
  2922                           
  2923                           ; BSR set to: 0
  2924   0018FA  0EE9               	movlw	233
  2925   0018FC  6167               	cpfslt	103,b
  2926   0018FE  D00E               	goto	i2l3427
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  2930   001900  0E70               	movlw	112
  2931   001902  6568               	cpfsgt	104,b
  2932   001904  D004               	goto	i2l3421
  2933                           
  2934                           ; BSR set to: 0
  2935   001906  0E79               	movlw	121
  2936   001908  6168               	cpfslt	104,b
  2937   00190A  D001               	goto	i2l3421
  2938                           
  2939                           ; BSR set to: 0
  2940                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  2941   00190C  808F               	bsf	143,0,c	;volatile
  2942   00190E                     i2l3421:
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  2946   00190E  0E78               	movlw	120
  2947   001910  6568               	cpfsgt	104,b
  2948   001912  D004               	goto	i2l3427
  2949                           
  2950                           ; BSR set to: 0
  2951   001914  0E7F               	movlw	127
  2952   001916  6168               	cpfslt	104,b
  2953   001918  D001               	goto	i2l3427
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  2957   00191A  908F               	bcf	143,0,c	;volatile
  2958   00191C                     i2l3427:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  2962   00191C  0566               	decf	102,w,b
  2963   00191E  A4D8               	btfss	status,2,c
  2964   001920  D011               	goto	i2l3441
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  2968   001922  0EB3               	movlw	179
  2969   001924  6567               	cpfsgt	103,b
  2970   001926  D00E               	goto	i2l3441
  2971                           
  2972                           ; BSR set to: 0
  2973   001928  0EE6               	movlw	230
  2974   00192A  6167               	cpfslt	103,b
  2975   00192C  D00B               	goto	i2l3441
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  2979   00192E  0E13               	movlw	19
  2980   001930  6568               	cpfsgt	104,b
  2981   001932  D008               	goto	i2l3441
  2982                           
  2983                           ; BSR set to: 0
  2984   001934  0E3C               	movlw	60
  2985   001936  6168               	cpfslt	104,b
  2986   001938  D005               	goto	i2l3441
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  2990   00193A  948B               	bcf	139,2,c	;volatile
  2991   00193C  828B               	bsf	139,1,c	;volatile
  2992   00193E  808F               	bsf	143,0,c	;volatile
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;T3.c: 62: TEST = 1;
  2996   001940  0E01               	movlw	1
  2997   001942  6F81               	movwf	129,b
  2998   001944                     i2l3441:
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3002   001944  0566               	decf	102,w,b
  3003   001946  A4D8               	btfss	status,2,c
  3004   001948  D7A3               	goto	__ptext10
  3005                           
  3006                           ; BSR set to: 0
  3007                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3008   00194A  0E77               	movlw	119
  3009   00194C  6567               	cpfsgt	103,b
  3010   00194E  D7A0               	goto	__ptext10
  3011                           
  3012                           ; BSR set to: 0
  3013   001950  0EAA               	movlw	170
  3014   001952  6167               	cpfslt	103,b
  3015   001954  D79D               	goto	__ptext10
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3019   001956  0E13               	movlw	19
  3020   001958  6568               	cpfsgt	104,b
  3021   00195A  D79A               	goto	__ptext10
  3022                           
  3023                           ; BSR set to: 0
  3024   00195C  0E3C               	movlw	60
  3025   00195E  6168               	cpfslt	104,b
  3026   001960  D797               	goto	__ptext10
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3030   001962  948B               	bcf	139,2,c	;volatile
  3031   001964  928B               	bcf	139,1,c	;volatile
  3032   001966  908F               	bcf	143,0,c	;volatile
  3033                           
  3034                           ; BSR set to: 0
  3035                           ;T3.c: 74: TEST = 0;
  3036   001968  0E00               	movlw	0
  3037   00196A  6F81               	movwf	129,b
  3038                           
  3039                           ; BSR set to: 0
  3040   00196C  D791               	goto	__ptext10
  3041   00196E                     __end_of_tache3:
  3042                           	callstack 0
  3043                           
  3044 ;; *************** function _tache2 *****************
  3045 ;; Defined at:
  3046 ;;		line 3 in file "T2.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  iy              2   11[COMRAM] unsigned int 
  3051 ;;  ix              2    9[COMRAM] unsigned int 
  3052 ;;  ly              1   16[COMRAM] unsigned char 
  3053 ;;  hy              1   15[COMRAM] unsigned char 
  3054 ;;  lx              1   14[COMRAM] unsigned char 
  3055 ;;  hx              1   13[COMRAM] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      void 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:       10 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 1
  3072 ;; This function calls:
  3073 ;;		___lwdiv
  3074 ;;		_tp_delai
  3075 ;; This function is called by:
  3076 ;;		_fonction_d_interruption
  3077 ;;		_initialisation_du_systeme
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text11
  3082   0016B6                     __ptext11:
  3083                           	callstack 0
  3084   0016B6                     _tache2:
  3085                           	callstack 27
  3086                           
  3087                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;incstack = 0
  3091   0016B6  0E00               	movlw	0
  3092   0016B8  0100               	movlb	0	; () banked
  3093   0016BA  6F66               	movwf	102,b
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3097   0016BC  868F               	bsf	143,3,c	;volatile
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;T2.c: 13: LATGbits.LATG4=0;
  3101   0016BE  988F               	bcf	143,4,c	;volatile
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;T2.c: 14: tp_delai(3000);
  3105   0016C0  0E0B               	movlw	11
  3106   0016C2  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3107   0016C4  0EB8               	movlw	184
  3108   0016C6  6E01               	movwf	tp_delai@itpd^0,c
  3109   0016C8  EC30  F011         	call	_tp_delai	;wreg free
  3110                           
  3111                           ;T2.c: 18: ADCON2=0x16;
  3112   0016CC  0E16               	movlw	22
  3113   0016CE  6EC0               	movwf	192,c	;volatile
  3114                           
  3115                           ;T2.c: 19: ADCON0=0x01;
  3116   0016D0  0E01               	movlw	1
  3117   0016D2  6EC2               	movwf	194,c	;volatile
  3118                           
  3119                           ;T2.c: 20: ADCON0=0x03;
  3120   0016D4  0E03               	movlw	3
  3121   0016D6  6EC2               	movwf	194,c	;volatile
  3122   0016D8                     i2l541:
  3123   0016D8  B2C2               	btfsc	194,1,c	;volatile
  3124   0016DA  D7FE               	goto	i2l541
  3125                           
  3126                           ;T2.c: 23: hx=ADRESH;
  3127   0016DC  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3128                           
  3129                           ;T2.c: 24: lx=ADRESL;
  3130   0016E0  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3131                           
  3132                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3133   0016E4  C00F  F008         	movff	tache2@lx,??_tache2
  3134   0016E8  0E0F               	movlw	15
  3135   0016EA  1608               	andwf	??_tache2^0,f,c
  3136   0016EC  B4D8               	btfsc	status,2,c
  3137   0016EE  D004               	goto	i2l4777
  3138   0016F0  0E00               	movlw	0
  3139   0016F2  6E0E               	movwf	tache2@hx^0,c
  3140   0016F4  0E00               	movlw	0
  3141   0016F6  6E0F               	movwf	tache2@lx^0,c
  3142   0016F8                     i2l4777:
  3143                           
  3144                           ;T2.c: 31: if (hx>=10)
  3145   0016F8  0E09               	movlw	9
  3146   0016FA  640E               	cpfsgt	tache2@hx^0,c
  3147   0016FC  D7DC               	goto	__ptext11
  3148                           
  3149                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3150   0016FE  968F               	bcf	143,3,c	;volatile
  3151                           
  3152                           ;T2.c: 34: LATGbits.LATG4=1;
  3153   001700  888F               	bsf	143,4,c	;volatile
  3154                           
  3155                           ;T2.c: 35: tp_delai(3000);
  3156   001702  0E0B               	movlw	11
  3157   001704  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3158   001706  0EB8               	movlw	184
  3159   001708  6E01               	movwf	tp_delai@itpd^0,c
  3160   00170A  EC30  F011         	call	_tp_delai	;wreg free
  3161                           
  3162                           ;T2.c: 39: ADCON2=0x16;
  3163   00170E  0E16               	movlw	22
  3164   001710  6EC0               	movwf	192,c	;volatile
  3165                           
  3166                           ;T2.c: 40: ADCON0=0x05;
  3167   001712  0E05               	movlw	5
  3168   001714  6EC2               	movwf	194,c	;volatile
  3169                           
  3170                           ;T2.c: 41: ADCON0=0x07;
  3171   001716  0E07               	movlw	7
  3172   001718  6EC2               	movwf	194,c	;volatile
  3173   00171A                     i2l546:
  3174   00171A  B2C2               	btfsc	194,1,c	;volatile
  3175   00171C  D7FE               	goto	i2l546
  3176                           
  3177                           ;T2.c: 44: hy=ADRESH;
  3178   00171E  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3179                           
  3180                           ;T2.c: 45: ly=ADRESL;
  3181   001722  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3182                           
  3183                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3184   001726  C011  F008         	movff	tache2@ly,??_tache2
  3185   00172A  0E0F               	movlw	15
  3186   00172C  1608               	andwf	??_tache2^0,f,c
  3187   00172E  B4D8               	btfsc	status,2,c
  3188   001730  D004               	goto	i2l4793
  3189   001732  0E00               	movlw	0
  3190   001734  6E10               	movwf	tache2@hy^0,c
  3191   001736  0E00               	movlw	0
  3192   001738  6E11               	movwf	tache2@ly^0,c
  3193   00173A                     i2l4793:
  3194                           
  3195                           ;T2.c: 51: if (hy>=20)
  3196   00173A  0E13               	movlw	19
  3197   00173C  6410               	cpfsgt	tache2@hy^0,c
  3198   00173E  D7BB               	goto	__ptext11
  3199                           
  3200                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3201   001740  500E               	movf	tache2@hx^0,w,c
  3202   001742  6E08               	movwf	??_tache2^0,c
  3203   001744  500F               	movf	tache2@lx^0,w,c
  3204   001746  6E0A               	movwf	tache2@ix^0,c
  3205   001748  C008  F00B         	movff	??_tache2,tache2@ix+1
  3206                           
  3207                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3208   00174C  5010               	movf	tache2@hy^0,w,c
  3209   00174E  6E08               	movwf	??_tache2^0,c
  3210   001750  5011               	movf	tache2@ly^0,w,c
  3211   001752  6E0C               	movwf	tache2@iy^0,c
  3212   001754  C008  F00D         	movff	??_tache2,tache2@iy+1
  3213                           
  3214                           ;T2.c: 55: ix=ix-3150;
  3215   001758  0EB2               	movlw	178
  3216   00175A  240A               	addwf	tache2@ix^0,w,c
  3217   00175C  6E0A               	movwf	tache2@ix^0,c
  3218   00175E  0EF3               	movlw	243
  3219   001760  200B               	addwfc	(tache2@ix+1)^0,w,c
  3220   001762  6E0B               	movwf	(tache2@ix+1)^0,c
  3221                           
  3222                           ;T2.c: 56: iy=iy-6500;
  3223   001764  0E9C               	movlw	156
  3224   001766  240C               	addwf	tache2@iy^0,w,c
  3225   001768  6E0C               	movwf	tache2@iy^0,c
  3226   00176A  0EE6               	movlw	230
  3227   00176C  200D               	addwfc	(tache2@iy+1)^0,w,c
  3228   00176E  6E0D               	movwf	(tache2@iy+1)^0,c
  3229                           
  3230                           ;T2.c: 58: TP_x=ix/246;
  3231   001770  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3232   001774  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3233   001778  0E00               	movlw	0
  3234   00177A  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3235   00177C  0EF6               	movlw	246
  3236   00177E  6E03               	movwf	___lwdiv@divisor^0,c
  3237   001780  EC46  F00F         	call	___lwdiv	;wreg free
  3238   001784  5001               	movf	?___lwdiv^0,w,c
  3239   001786  0100               	movlb	0	; () banked
  3240   001788  6F67               	movwf	103,b
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;T2.c: 59: TP_y=127-(iy/409);
  3244   00178A  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3245   00178E  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3246   001792  0E01               	movlw	1
  3247   001794  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3248   001796  0E99               	movlw	153
  3249   001798  6E03               	movwf	___lwdiv@divisor^0,c
  3250   00179A  EC46  F00F         	call	___lwdiv	;wreg free
  3251   00179E  5001               	movf	?___lwdiv^0,w,c
  3252   0017A0  087F               	sublw	127
  3253   0017A2  0100               	movlb	0	; () banked
  3254   0017A4  6F68               	movwf	104,b
  3255                           
  3256                           ;T2.c: 68: TP_appui=1;
  3257   0017A6  0E01               	movlw	1
  3258   0017A8  D788               	goto	L1
  3259   0017AA                     __end_of_tache2:
  3260                           	callstack 0
  3261                           
  3262 ;; *************** function _tp_delai *****************
  3263 ;; Defined at:
  3264 ;;		line 87 in file "T2.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  itpd            2    0[COMRAM] unsigned int 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        2 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_tache2
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text12
  3292   002260                     __ptext12:
  3293                           	callstack 0
  3294   002260                     _tp_delai:
  3295                           	callstack 27
  3296                           
  3297                           ;T2.c: 89: while(itpd>0)
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;incstack = 0
  3301   002260  D006               	goto	i2l4325
  3302   002262                     i2l559:
  3303                           
  3304                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3305   002262  F000               	nop	
  3306   002264  F000               	nop	
  3307   002266  F000               	nop	
  3308                           
  3309                           ;T2.c: 92: itpd--;
  3310   002268  0601               	decf	tp_delai@itpd^0,f,c
  3311   00226A  A0D8               	btfss	status,0,c
  3312   00226C  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3313   00226E                     i2l4325:
  3314   00226E  5001               	movf	tp_delai@itpd^0,w,c
  3315   002270  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3316   002272  B4D8               	btfsc	status,2,c
  3317   002274  0012               	return	
  3318   002276  D7F5               	goto	i2l559
  3319   002278                     __end_of_tp_delai:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function ___lwdiv *****************
  3323 ;; Defined at:
  3324 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  dividend        2    0[COMRAM] unsigned int 
  3327 ;;  divisor         2    2[COMRAM] unsigned int 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  quotient        2    4[COMRAM] unsigned int 
  3330 ;;  counter         1    6[COMRAM] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2    0[COMRAM] unsigned int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        7 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_tache2
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text13
  3354   001E8C                     __ptext13:
  3355                           	callstack 0
  3356   001E8C                     ___lwdiv:
  3357                           	callstack 27
  3358                           
  3359                           ;incstack = 0
  3360   001E8C  0E00               	movlw	0
  3361   001E8E  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3362   001E90  0E00               	movlw	0
  3363   001E92  6E05               	movwf	___lwdiv@quotient^0,c
  3364   001E94  5003               	movf	___lwdiv@divisor^0,w,c
  3365   001E96  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3366   001E98  B4D8               	btfsc	status,2,c
  3367   001E9A  D01C               	goto	i2l2167
  3368   001E9C  0E01               	movlw	1
  3369   001E9E  6E07               	movwf	___lwdiv@counter^0,c
  3370   001EA0  D004               	goto	i2l4391
  3371   001EA2                     i2l4389:
  3372   001EA2  90D8               	bcf	status,0,c
  3373   001EA4  3603               	rlcf	___lwdiv@divisor^0,f,c
  3374   001EA6  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3375   001EA8  2A07               	incf	___lwdiv@counter^0,f,c
  3376   001EAA                     i2l4391:
  3377   001EAA  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3378   001EAC  D7FA               	goto	i2l4389
  3379   001EAE                     i2u246_40:
  3380   001EAE  90D8               	bcf	status,0,c
  3381   001EB0  3605               	rlcf	___lwdiv@quotient^0,f,c
  3382   001EB2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3383   001EB4  5003               	movf	___lwdiv@divisor^0,w,c
  3384   001EB6  5C01               	subwf	___lwdiv@dividend^0,w,c
  3385   001EB8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3386   001EBA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3387   001EBC  A0D8               	btfss	status,0,c
  3388   001EBE  D005               	goto	i2l4401
  3389   001EC0  5003               	movf	___lwdiv@divisor^0,w,c
  3390   001EC2  5E01               	subwf	___lwdiv@dividend^0,f,c
  3391   001EC4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3392   001EC6  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3393   001EC8  8005               	bsf	___lwdiv@quotient^0,0,c
  3394   001ECA                     i2l4401:
  3395   001ECA  90D8               	bcf	status,0,c
  3396   001ECC  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3397   001ECE  3203               	rrcf	___lwdiv@divisor^0,f,c
  3398   001ED0  2E07               	decfsz	___lwdiv@counter^0,f,c
  3399   001ED2  D7ED               	goto	i2u246_40
  3400   001ED4                     i2l2167:
  3401   001ED4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3402   001ED8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3403   001EDC  0012               	return		;funcret
  3404   001EDE                     __end_of___lwdiv:
  3405                           	callstack 0
  3406                           
  3407 ;; *************** function _tache1 *****************
  3408 ;; Defined at:
  3409 ;;		line 3 in file "T1.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  i               1   20[COMRAM] unsigned char 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        1 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 5
  3430 ;; This function calls:
  3431 ;;		_Init
  3432 ;;		_charger
  3433 ;;		_clear_graphics
  3434 ;;		_clear_line
  3435 ;;		_clear_text
  3436 ;;		_draw_char
  3437 ;;		_draw_hex8
  3438 ;;		_draw_square
  3439 ;;		_draw_string
  3440 ;;		_goto_lico
  3441 ;;		_init_rxtx
  3442 ;;		_initialisation_afficheur
  3443 ;;		_lecture_8bit_analogique
  3444 ;;		_plot1
  3445 ;;		_vide
  3446 ;; This function is called by:
  3447 ;;		_fonction_d_interruption
  3448 ;;		_initialisation_du_systeme
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text14
  3453   0010CC                     __ptext14:
  3454                           	callstack 0
  3455   0010CC                     _tache1:
  3456                           	callstack 23
  3457                           
  3458                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3459                           
  3460                           ;incstack = 0
  3461   0010CC  9EF2               	bcf	242,7,c	;volatile
  3462                           
  3463                           ;T1.c: 8: initialisation_afficheur();
  3464   0010CE  EC1E  F00D         	call	_initialisation_afficheur	;wreg free
  3465                           
  3466                           ;T1.c: 9: clear_text();
  3467   0010D2  EC53  F010         	call	_clear_text	;wreg free
  3468                           
  3469                           ;T1.c: 10: clear_graphics();
  3470   0010D6  EC6B  F010         	call	_clear_graphics	;wreg free
  3471                           
  3472                           ;T1.c: 11: init_rxtx();
  3473   0010DA  ECBE  F010         	call	_init_rxtx	;wreg free
  3474                           
  3475                           ;T1.c: 12: Init(2);
  3476   0010DE  0E02               	movlw	2
  3477   0010E0  6EE6               	movwf	postinc1,c
  3478   0010E2  ECAD  F010         	call	_Init	;wreg free
  3479                           
  3480                           ;T1.c: 13: RXTX_libre=1;
  3481   0010E6  0E01               	movlw	1
  3482   0010E8  0100               	movlb	0	; () banked
  3483   0010EA  6F80               	movwf	128,b
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;T1.c: 14: TXREG1='R';
  3487   0010EC  0E52               	movlw	82
  3488   0010EE  6EAD               	movwf	173,c	;volatile
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3492   0010F0  8EF2               	bsf	242,7,c	;volatile
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3496   0010F2  948B               	bcf	139,2,c	;volatile
  3497                           
  3498                           ; BSR set to: 0
  3499   0010F4  928B               	bcf	139,1,c	;volatile
  3500                           
  3501                           ; BSR set to: 0
  3502   0010F6  908F               	bcf	143,0,c	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;T1.c: 19: vitesse=0;
  3506   0010F8  0E00               	movlw	0
  3507   0010FA  6F73               	movwf	115,b
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;T1.c: 20: batterie=15;
  3511   0010FC  0E0F               	movlw	15
  3512   0010FE  6F74               	movwf	116,b
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;T1.c: 21: n_octet_badge=0;
  3516   001100  0E00               	movlw	0
  3517   001102  6F7F               	movwf	127,b
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;T1.c: 23: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3521   001104  0E22               	movlw	34
  3522   001106  6E09               	movwf	goto_lico@colonne^0,c
  3523   001108  0E0D               	movlw	13
  3524   00110A  EC1A  F00F         	call	_goto_lico
  3525   00110E  0E52               	movlw	82
  3526   001110  EC3A  F010         	call	_draw_char
  3527   001114  0E20               	movlw	32
  3528   001116  EC3A  F010         	call	_draw_char
  3529   00111A  0E56               	movlw	86
  3530   00111C  EC3A  F010         	call	_draw_char
  3531   001120  0E20               	movlw	32
  3532   001122  EC3A  F010         	call	_draw_char
  3533   001126  0E42               	movlw	66
  3534   001128  EC3A  F010         	call	_draw_char
  3535                           
  3536                           ;T1.c: 24: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3537   00112C  0E22               	movlw	34
  3538   00112E  6E09               	movwf	goto_lico@colonne^0,c
  3539   001130  0E0E               	movlw	14
  3540   001132  EC1A  F00F         	call	_goto_lico
  3541   001136  0E30               	movlw	48
  3542   001138  EC3A  F010         	call	_draw_char
  3543   00113C  0E20               	movlw	32
  3544   00113E  EC3A  F010         	call	_draw_char
  3545   001142  0E30               	movlw	48
  3546   001144  EC3A  F010         	call	_draw_char
  3547   001148  0E20               	movlw	32
  3548   00114A  EC3A  F010         	call	_draw_char
  3549   00114E  0E30               	movlw	48
  3550   001150  EC3A  F010         	call	_draw_char
  3551                           
  3552                           ;T1.c: 25: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3553   001154  0E22               	movlw	34
  3554   001156  6E09               	movwf	goto_lico@colonne^0,c
  3555   001158  0E0F               	movlw	15
  3556   00115A  EC1A  F00F         	call	_goto_lico
  3557   00115E  0E31               	movlw	49
  3558   001160  EC3A  F010         	call	_draw_char
  3559   001164  0E20               	movlw	32
  3560   001166  EC3A  F010         	call	_draw_char
  3561   00116A  0E31               	movlw	49
  3562   00116C  EC3A  F010         	call	_draw_char
  3563   001170  0E20               	movlw	32
  3564   001172  EC3A  F010         	call	_draw_char
  3565   001176  0E31               	movlw	49
  3566   001178  EC3A  F010         	call	_draw_char
  3567                           
  3568                           ;T1.c: 27: TP_appui=0;
  3569   00117C  0E00               	movlw	0
  3570   00117E  0100               	movlb	0	; () banked
  3571   001180  6F66               	movwf	102,b
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;T1.c: 28: draw_square(180,20,230,60);
  3575   001182  0E14               	movlw	20
  3576   001184  6E0F               	movwf	draw_square@y1^0,c
  3577   001186  0EE6               	movlw	230
  3578   001188  6E10               	movwf	draw_square@x2^0,c
  3579   00118A  0E3C               	movlw	60
  3580   00118C  6E11               	movwf	draw_square@y2^0,c
  3581   00118E  0EB4               	movlw	180
  3582   001190  ECC0  F00F         	call	_draw_square
  3583                           
  3584                           ;T1.c: 29: draw_square(120,20,170,60);
  3585   001194  0E14               	movlw	20
  3586   001196  6E0F               	movwf	draw_square@y1^0,c
  3587   001198  0EAA               	movlw	170
  3588   00119A  6E10               	movwf	draw_square@x2^0,c
  3589   00119C  0E3C               	movlw	60
  3590   00119E  6E11               	movwf	draw_square@y2^0,c
  3591   0011A0  0E78               	movlw	120
  3592   0011A2  ECC0  F00F         	call	_draw_square
  3593                           
  3594                           ;T1.c: 31: draw_string(2);
  3595   0011A6  0E02               	movlw	2
  3596   0011A8  6E08               	movwf	draw_string@tableau^0,c
  3597   0011AA  0E00               	movlw	0
  3598   0011AC  6E09               	movwf	(draw_string@tableau+1)^0,c
  3599   0011AE  EC2C  F00E         	call	_draw_string	;wreg free
  3600                           
  3601                           ;T1.c: 32: TEST=0;
  3602   0011B2  0E00               	movlw	0
  3603   0011B4  0100               	movlb	0	; () banked
  3604   0011B6  6F81               	movwf	129,b
  3605   0011B8                     i2l4599:
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;T1.c: 34: {;T1.c: 36: goto_lico(0,0);
  3609   0011B8  0E00               	movlw	0
  3610   0011BA  6E09               	movwf	goto_lico@colonne^0,c
  3611   0011BC  0E00               	movlw	0
  3612   0011BE  EC1A  F00F         	call	_goto_lico
  3613                           
  3614                           ;T1.c: 37: draw_string("Marche:");
  3615   0011C2  0E84               	movlw	low STR_1
  3616   0011C4  6E08               	movwf	draw_string@tableau^0,c
  3617   0011C6  0E10               	movlw	high STR_1
  3618   0011C8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3619   0011CA  EC2C  F00E         	call	_draw_string	;wreg free
  3620                           
  3621                           ;T1.c: 38: if (PORTBbits.RB0==0)
  3622   0011CE  B081               	btfsc	129,0,c	;volatile
  3623   0011D0  D007               	goto	i2l418
  3624                           
  3625                           ;T1.c: 39: draw_string("AV");
  3626   0011D2  0EC8               	movlw	low STR_2
  3627   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3628   0011D6  0E10               	movlw	high STR_2
  3629   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3630   0011DA  EC2C  F00E         	call	_draw_string	;wreg free
  3631   0011DE  D00F               	goto	i2l4611
  3632   0011E0                     i2l418:
  3633                           
  3634                           ;T1.c: 40: else;T1.c: 41: if (PORTBbits.RB1==0)
  3635   0011E0  B281               	btfsc	129,1,c	;volatile
  3636   0011E2  D007               	goto	i2l4609
  3637                           
  3638                           ;T1.c: 42: draw_string("AR");
  3639   0011E4  0EC5               	movlw	low STR_3
  3640   0011E6  6E08               	movwf	draw_string@tableau^0,c
  3641   0011E8  0E10               	movlw	high STR_3
  3642   0011EA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3643   0011EC  EC2C  F00E         	call	_draw_string	;wreg free
  3644   0011F0  D006               	goto	i2l4611
  3645   0011F2                     i2l4609:
  3646                           
  3647                           ;T1.c: 43: else;T1.c: 44: draw_string("N ");
  3648   0011F2  0EBF               	movlw	low STR_4
  3649   0011F4  6E08               	movwf	draw_string@tableau^0,c
  3650   0011F6  0E10               	movlw	high STR_4
  3651   0011F8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3652   0011FA  EC2C  F00E         	call	_draw_string	;wreg free
  3653   0011FE                     i2l4611:
  3654                           
  3655                           ;T1.c: 46: goto_lico(1,0);
  3656   0011FE  0E00               	movlw	0
  3657   001200  6E09               	movwf	goto_lico@colonne^0,c
  3658   001202  0E01               	movlw	1
  3659   001204  EC1A  F00F         	call	_goto_lico
  3660                           
  3661                           ;T1.c: 47: draw_string("Siege:");
  3662   001208  0EA3               	movlw	low STR_5
  3663   00120A  6E08               	movwf	draw_string@tableau^0,c
  3664   00120C  0E10               	movlw	high STR_5
  3665   00120E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3666   001210  EC2C  F00E         	call	_draw_string	;wreg free
  3667                           
  3668                           ;T1.c: 48: if (PORTBbits.RB2==0)
  3669   001214  B481               	btfsc	129,2,c	;volatile
  3670   001216  D004               	goto	i2l4619
  3671                           
  3672                           ;T1.c: 49: {draw_char('1');}
  3673   001218  0E31               	movlw	49
  3674   00121A  EC3A  F010         	call	_draw_char
  3675   00121E  D003               	goto	i2l4621
  3676   001220                     i2l4619:
  3677                           
  3678                           ;T1.c: 50: else;T1.c: 51: {draw_char('0');}
  3679   001220  0E30               	movlw	48
  3680   001222  EC3A  F010         	call	_draw_char
  3681   001226                     i2l4621:
  3682                           
  3683                           ;T1.c: 53: goto_lico(2,0);
  3684   001226  0E00               	movlw	0
  3685   001228  6E09               	movwf	goto_lico@colonne^0,c
  3686   00122A  0E02               	movlw	2
  3687   00122C  EC1A  F00F         	call	_goto_lico
  3688                           
  3689                           ;T1.c: 54: draw_string("Temp. Eau:");
  3690   001230  0E66               	movlw	low STR_6
  3691   001232  6E08               	movwf	draw_string@tableau^0,c
  3692   001234  0E10               	movlw	high STR_6
  3693   001236  6E09               	movwf	(draw_string@tableau+1)^0,c
  3694   001238  EC2C  F00E         	call	_draw_string	;wreg free
  3695                           
  3696                           ;T1.c: 55: draw_hex8(lecture_8bit_analogique(2));
  3697   00123C  0E02               	movlw	2
  3698   00123E  EC1F  F010         	call	_lecture_8bit_analogique
  3699   001242  ECEC  F00E         	call	_draw_hex8
  3700                           
  3701                           ;T1.c: 57: goto_lico(3,0);
  3702   001246  0E00               	movlw	0
  3703   001248  6E09               	movwf	goto_lico@colonne^0,c
  3704   00124A  0E03               	movlw	3
  3705   00124C  EC1A  F00F         	call	_goto_lico
  3706                           
  3707                           ;T1.c: 58: draw_string("Temp. Huile:");
  3708   001250  0E41               	movlw	low STR_7
  3709   001252  6E08               	movwf	draw_string@tableau^0,c
  3710   001254  0E10               	movlw	high STR_7
  3711   001256  6E09               	movwf	(draw_string@tableau+1)^0,c
  3712   001258  EC2C  F00E         	call	_draw_string	;wreg free
  3713                           
  3714                           ;T1.c: 59: draw_hex8(lecture_8bit_analogique(3));
  3715   00125C  0E03               	movlw	3
  3716   00125E  EC1F  F010         	call	_lecture_8bit_analogique
  3717   001262  ECEC  F00E         	call	_draw_hex8
  3718                           
  3719                           ;T1.c: 61: goto_lico(4,0);
  3720   001266  0E00               	movlw	0
  3721   001268  6E09               	movwf	goto_lico@colonne^0,c
  3722   00126A  0E04               	movlw	4
  3723   00126C  EC1A  F00F         	call	_goto_lico
  3724                           
  3725                           ;T1.c: 62: draw_string("Choc:");
  3726   001270  0EB0               	movlw	low STR_8
  3727   001272  6E08               	movwf	draw_string@tableau^0,c
  3728   001274  0E10               	movlw	high STR_8
  3729   001276  6E09               	movwf	(draw_string@tableau+1)^0,c
  3730   001278  EC2C  F00E         	call	_draw_string	;wreg free
  3731                           
  3732                           ;T1.c: 63: if (PORTBbits.RB3==0)
  3733   00127C  B681               	btfsc	129,3,c	;volatile
  3734   00127E  D004               	goto	i2l4639
  3735                           
  3736                           ;T1.c: 64: draw_char('1');
  3737   001280  0E31               	movlw	49
  3738   001282  EC3A  F010         	call	_draw_char
  3739   001286  D003               	goto	i2l4641
  3740   001288                     i2l4639:
  3741                           
  3742                           ;T1.c: 65: else;T1.c: 66: draw_char('0');
  3743   001288  0E30               	movlw	48
  3744   00128A  EC3A  F010         	call	_draw_char
  3745   00128E                     i2l4641:
  3746                           
  3747                           ;T1.c: 68: goto_lico(5,0);
  3748   00128E  0E00               	movlw	0
  3749   001290  6E09               	movwf	goto_lico@colonne^0,c
  3750   001292  0E05               	movlw	5
  3751   001294  EC1A  F00F         	call	_goto_lico
  3752                           
  3753                           ;T1.c: 69: draw_string("Vitesse:");
  3754   001298  0E7B               	movlw	low STR_9
  3755   00129A  6E08               	movwf	draw_string@tableau^0,c
  3756   00129C  0E10               	movlw	high STR_9
  3757   00129E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3758   0012A0  EC2C  F00E         	call	_draw_string	;wreg free
  3759                           
  3760                           ;T1.c: 71: if(TEST==1){
  3761   0012A4  0100               	movlb	0	; () banked
  3762   0012A6  0581               	decf	129,w,b
  3763   0012A8  A4D8               	btfss	status,2,c
  3764   0012AA  D00D               	goto	i2l426
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;T1.c: 72: if (PORTEbits.RE0==0 && vitesse < 15)
  3768   0012AC  B084               	btfsc	132,0,c	;volatile
  3769   0012AE  D004               	goto	i2l4653
  3770                           
  3771                           ; BSR set to: 0
  3772   0012B0  0E0F               	movlw	15
  3773   0012B2  6173               	cpfslt	115,b
  3774   0012B4  D001               	goto	i2l4653
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;T1.c: 73: vitesse++;
  3778   0012B6  2B73               	incf	115,f,b
  3779   0012B8                     i2l4653:
  3780                           
  3781                           ; BSR set to: 0
  3782                           ;T1.c: 74: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  3783   0012B8  B284               	btfsc	132,1,c	;volatile
  3784   0012BA  D010               	goto	i2l4669
  3785                           
  3786                           ; BSR set to: 0
  3787   0012BC  5173               	movf	115,w,b
  3788   0012BE  B4D8               	btfsc	status,2,c
  3789   0012C0  D00D               	goto	i2l4669
  3790   0012C2                     i2u256_40:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;T1.c: 75: vitesse--;
  3794   0012C2  0773               	decf	115,f,b
  3795   0012C4  D00B               	goto	i2l4669
  3796   0012C6                     i2l426:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;T1.c: 78: if (PORTEbits.RE0==0 && vitesse < 25)
  3800   0012C6  B084               	btfsc	132,0,c	;volatile
  3801   0012C8  D004               	goto	i2l4663
  3802                           
  3803                           ; BSR set to: 0
  3804   0012CA  0E19               	movlw	25
  3805   0012CC  6173               	cpfslt	115,b
  3806   0012CE  D001               	goto	i2l4663
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;T1.c: 79: vitesse++;
  3810   0012D0  2B73               	incf	115,f,b
  3811   0012D2                     i2l4663:
  3812                           
  3813                           ; BSR set to: 0
  3814                           ;T1.c: 80: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  3815   0012D2  B284               	btfsc	132,1,c	;volatile
  3816   0012D4  D003               	goto	i2l4669
  3817                           
  3818                           ; BSR set to: 0
  3819   0012D6  5173               	movf	115,w,b
  3820   0012D8  A4D8               	btfss	status,2,c
  3821   0012DA  D7F3               	goto	i2u256_40
  3822   0012DC                     i2l4669:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;T1.c: 82: };T1.c: 83: };T1.c: 87: draw_hex8(vitesse);
  3826   0012DC  5173               	movf	115,w,b
  3827   0012DE  ECEC  F00E         	call	_draw_hex8
  3828                           
  3829                           ;T1.c: 89: goto_lico(6,0);
  3830   0012E2  0E00               	movlw	0
  3831   0012E4  6E09               	movwf	goto_lico@colonne^0,c
  3832   0012E6  0E06               	movlw	6
  3833   0012E8  EC1A  F00F         	call	_goto_lico
  3834                           
  3835                           ;T1.c: 90: draw_string("Batterie:");
  3836   0012EC  0E71               	movlw	low STR_10
  3837   0012EE  6E08               	movwf	draw_string@tableau^0,c
  3838   0012F0  0E10               	movlw	high STR_10
  3839   0012F2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3840   0012F4  EC2C  F00E         	call	_draw_string	;wreg free
  3841                           
  3842                           ;T1.c: 91: if (PORTEbits.RE2==0 && batterie < 100)
  3843   0012F8  B484               	btfsc	132,2,c	;volatile
  3844   0012FA  D005               	goto	i2l4681
  3845   0012FC  0E64               	movlw	100
  3846   0012FE  0100               	movlb	0	; () banked
  3847   001300  6174               	cpfslt	116,b
  3848   001302  D001               	goto	i2l4681
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;T1.c: 92: batterie++;
  3852   001304  2B74               	incf	116,f,b
  3853   001306                     i2l4681:
  3854                           
  3855                           ;T1.c: 93: if (PORTEbits.RE3==0 && batterie > 0)
  3856   001306  B684               	btfsc	132,3,c	;volatile
  3857   001308  D004               	goto	i2l4687
  3858   00130A  0100               	movlb	0	; () banked
  3859   00130C  5174               	movf	116,w,b
  3860   00130E  A4D8               	btfss	status,2,c
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;T1.c: 94: batterie--;
  3864   001310  0774               	decf	116,f,b
  3865   001312                     i2l4687:
  3866                           
  3867                           ;T1.c: 95: draw_hex8(batterie);
  3868   001312  0100               	movlb	0	; () banked
  3869   001314  5174               	movf	116,w,b
  3870   001316  ECEC  F00E         	call	_draw_hex8
  3871                           
  3872                           ;T1.c: 97: goto_lico(7,0);
  3873   00131A  0E00               	movlw	0
  3874   00131C  6E09               	movwf	goto_lico@colonne^0,c
  3875   00131E  0E07               	movlw	7
  3876   001320  EC1A  F00F         	call	_goto_lico
  3877                           
  3878                           ;T1.c: 98: if (PORTEbits.RE4==0)
  3879   001324  B884               	btfsc	132,4,c	;volatile
  3880   001326  D007               	goto	i2l4695
  3881                           
  3882                           ;T1.c: 99: draw_string("((!))");
  3883   001328  0EAA               	movlw	low STR_11
  3884   00132A  6E08               	movwf	draw_string@tableau^0,c
  3885   00132C  0E10               	movlw	high STR_11
  3886   00132E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3887   001330  EC2C  F00E         	call	_draw_string	;wreg free
  3888   001334  D006               	goto	i2l4697
  3889   001336                     i2l4695:
  3890                           
  3891                           ;T1.c: 100: else;T1.c: 101: draw_string("     ");
  3892   001336  0E2D               	movlw	low (STR_14+15)
  3893   001338  6E08               	movwf	draw_string@tableau^0,c
  3894   00133A  0E10               	movlw	high (STR_14+15)
  3895   00133C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3896   00133E  EC2C  F00E         	call	_draw_string	;wreg free
  3897   001342                     i2l4697:
  3898                           
  3899                           ;T1.c: 103: goto_lico(8,0);
  3900   001342  0E00               	movlw	0
  3901   001344  6E09               	movwf	goto_lico@colonne^0,c
  3902   001346  0E08               	movlw	8
  3903   001348  EC1A  F00F         	call	_goto_lico
  3904                           
  3905                           ;T1.c: 104: draw_string("Badge:");
  3906   00134C  0E9C               	movlw	low STR_13
  3907   00134E  6E08               	movwf	draw_string@tableau^0,c
  3908   001350  0E10               	movlw	high STR_13
  3909   001352  6E09               	movwf	(draw_string@tableau+1)^0,c
  3910   001354  EC2C  F00E         	call	_draw_string	;wreg free
  3911                           
  3912                           ;T1.c: 105: if (n_octet_badge==0)
  3913   001358  0100               	movlb	0	; () banked
  3914   00135A  517F               	movf	127,w,b
  3915   00135C  A4D8               	btfss	status,2,c
  3916   00135E  D007               	goto	i2l4705
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;T1.c: 106: draw_string(" AUCUN              ");
  3920   001360  0E1E               	movlw	low STR_14
  3921   001362  6E08               	movwf	draw_string@tableau^0,c
  3922   001364  0E10               	movlw	high STR_14
  3923   001366  6E09               	movwf	(draw_string@tableau+1)^0,c
  3924   001368  EC2C  F00E         	call	_draw_string	;wreg free
  3925   00136C  D012               	goto	i2u267_40
  3926   00136E                     i2l4705:
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;T1.c: 107: else;T1.c: 108: {;T1.c: 109: for (i=0;i<n_octet_badge;i++)
  3930   00136E  0E00               	movlw	0
  3931   001370  6E15               	movwf	tache1@i^0,c
  3932   001372  D00A               	goto	i2l4711
  3933   001374                     i2l4707:
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;T1.c: 110: {;T1.c: 111: draw_hex8(badge[i]);
  3937   001374  0E75               	movlw	117
  3938   001376  2415               	addwf	tache1@i^0,w,c
  3939   001378  6ED9               	movwf	fsr2l,c
  3940   00137A  6ADA               	clrf	fsr2h,c
  3941   00137C  0E00               	movlw	0
  3942   00137E  22DA               	addwfc	fsr2h,f,c
  3943   001380  50DF               	movf	indf2,w,c
  3944   001382  ECEC  F00E         	call	_draw_hex8
  3945   001386  2A15               	incf	tache1@i^0,f,c
  3946   001388                     i2l4711:
  3947   001388  0100               	movlb	0	; () banked
  3948   00138A  517F               	movf	127,w,b
  3949   00138C  5C15               	subwf	tache1@i^0,w,c
  3950   00138E  A0D8               	btfss	status,0,c
  3951   001390  D7F1               	goto	i2l4707
  3952   001392                     i2u267_40:
  3953                           
  3954                           ;T1.c: 112: };T1.c: 113: };T1.c: 115: goto_lico(9,0);
  3955   001392  0E00               	movlw	0
  3956   001394  6E09               	movwf	goto_lico@colonne^0,c
  3957   001396  0E09               	movlw	9
  3958   001398  EC1A  F00F         	call	_goto_lico
  3959                           
  3960                           ;T1.c: 116: draw_string("X-Joystick:");
  3961   00139C  0E4E               	movlw	low STR_15
  3962   00139E  6E08               	movwf	draw_string@tableau^0,c
  3963   0013A0  0E10               	movlw	high STR_15
  3964   0013A2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3965   0013A4  EC2C  F00E         	call	_draw_string	;wreg free
  3966                           
  3967                           ;T1.c: 117: draw_hex8(lecture_8bit_analogique(10));
  3968   0013A8  0E0A               	movlw	10
  3969   0013AA  EC1F  F010         	call	_lecture_8bit_analogique
  3970   0013AE  ECEC  F00E         	call	_draw_hex8
  3971                           
  3972                           ;T1.c: 119: goto_lico(10,0);
  3973   0013B2  0E00               	movlw	0
  3974   0013B4  6E09               	movwf	goto_lico@colonne^0,c
  3975   0013B6  0E0A               	movlw	10
  3976   0013B8  EC1A  F00F         	call	_goto_lico
  3977                           
  3978                           ;T1.c: 120: draw_string("Y-Joystick:");
  3979   0013BC  0E5A               	movlw	low STR_16
  3980   0013BE  6E08               	movwf	draw_string@tableau^0,c
  3981   0013C0  0E10               	movlw	high STR_16
  3982   0013C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3983   0013C4  EC2C  F00E         	call	_draw_string	;wreg free
  3984                           
  3985                           ;T1.c: 121: draw_hex8(lecture_8bit_analogique(11));
  3986   0013C8  0E0B               	movlw	11
  3987   0013CA  EC1F  F010         	call	_lecture_8bit_analogique
  3988   0013CE  ECEC  F00E         	call	_draw_hex8
  3989                           
  3990                           ;T1.c: 123: goto_lico(13,0);
  3991   0013D2  0E00               	movlw	0
  3992   0013D4  6E09               	movwf	goto_lico@colonne^0,c
  3993   0013D6  0E0D               	movlw	13
  3994   0013D8  EC1A  F00F         	call	_goto_lico
  3995                           
  3996                           ;T1.c: 124: draw_string("BIG MUM");
  3997   0013DC  0E8C               	movlw	low STR_17
  3998   0013DE  6E08               	movwf	draw_string@tableau^0,c
  3999   0013E0  0E10               	movlw	high STR_17
  4000   0013E2  6E09               	movwf	(draw_string@tableau+1)^0,c
  4001   0013E4  EC2C  F00E         	call	_draw_string	;wreg free
  4002                           
  4003                           ;T1.c: 125: goto_lico(5,22);
  4004   0013E8  0E16               	movlw	22
  4005   0013EA  6E09               	movwf	goto_lico@colonne^0,c
  4006   0013EC  0E05               	movlw	5
  4007   0013EE  EC1A  F00F         	call	_goto_lico
  4008                           
  4009                           ;T1.c: 126: draw_string("VIDE");
  4010   0013F2  0EB6               	movlw	low STR_18
  4011   0013F4  6E08               	movwf	draw_string@tableau^0,c
  4012   0013F6  0E10               	movlw	high STR_18
  4013   0013F8  6E09               	movwf	(draw_string@tableau+1)^0,c
  4014   0013FA  EC2C  F00E         	call	_draw_string	;wreg free
  4015                           
  4016                           ;T1.c: 127: goto_lico(5,31);
  4017   0013FE  0E1F               	movlw	31
  4018   001400  6E09               	movwf	goto_lico@colonne^0,c
  4019   001402  0E05               	movlw	5
  4020   001404  EC1A  F00F         	call	_goto_lico
  4021                           
  4022                           ;T1.c: 128: draw_string("CHARGER");
  4023   001408  0E94               	movlw	low STR_19
  4024   00140A  6E08               	movwf	draw_string@tableau^0,c
  4025   00140C  0E10               	movlw	high STR_19
  4026   00140E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4027   001410  EC2C  F00E         	call	_draw_string	;wreg free
  4028                           
  4029                           ;T1.c: 136: if (TP_appui==1)
  4030   001414  0100               	movlb	0	; () banked
  4031   001416  0566               	decf	102,w,b
  4032   001418  A4D8               	btfss	status,2,c
  4033   00141A  D020               	goto	i2l441
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;T1.c: 137: {;T1.c: 138: goto_lico(0,20);
  4037   00141C  0E14               	movlw	20
  4038   00141E  6E09               	movwf	goto_lico@colonne^0,c
  4039   001420  0E00               	movlw	0
  4040   001422  EC1A  F00F         	call	_goto_lico
  4041                           
  4042                           ;T1.c: 139: draw_string("x=");
  4043   001426  0EC2               	movlw	low STR_20
  4044   001428  6E08               	movwf	draw_string@tableau^0,c
  4045   00142A  0E10               	movlw	high STR_20
  4046   00142C  6E09               	movwf	(draw_string@tableau+1)^0,c
  4047   00142E  EC2C  F00E         	call	_draw_string	;wreg free
  4048                           
  4049                           ;T1.c: 140: draw_hex8(TP_x);
  4050   001432  0100               	movlb	0	; () banked
  4051   001434  5167               	movf	103,w,b
  4052   001436  ECEC  F00E         	call	_draw_hex8
  4053                           
  4054                           ;T1.c: 141: draw_string(" y=");
  4055   00143A  0EBB               	movlw	low STR_21
  4056   00143C  6E08               	movwf	draw_string@tableau^0,c
  4057   00143E  0E10               	movlw	high STR_21
  4058   001440  6E09               	movwf	(draw_string@tableau+1)^0,c
  4059   001442  EC2C  F00E         	call	_draw_string	;wreg free
  4060                           
  4061                           ;T1.c: 142: draw_hex8(TP_y);
  4062   001446  0100               	movlb	0	; () banked
  4063   001448  5168               	movf	104,w,b
  4064   00144A  ECEC  F00E         	call	_draw_hex8
  4065                           
  4066                           ;T1.c: 143: plot1(TP_x,TP_y);
  4067   00144E  C068 F009          	movff	104,plot1@y
  4068   001452  0100               	movlb	0	; () banked
  4069   001454  5167               	movf	103,w,b
  4070   001456  EC84  F00D         	call	_plot1
  4071                           
  4072                           ;T1.c: 144: }
  4073   00145A  D001               	goto	i2l4747
  4074   00145C                     i2l441:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;T1.c: 145: else;T1.c: 146: {;T1.c: 147: __nop();
  4078   00145C  F000               	nop	
  4079   00145E                     i2l4747:
  4080                           
  4081                           ;T1.c: 148: };T1.c: 149: if (TEST==1){
  4082   00145E  0100               	movlb	0	; () banked
  4083   001460  0581               	decf	129,w,b
  4084   001462  B4D8               	btfsc	status,2,c
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;T1.c: 150: charger();
  4088   001464  EC48  F011         	call	_charger	;wreg free
  4089                           
  4090                           ;T1.c: 151: };T1.c: 152: if(TEST==0){
  4091   001468  0100               	movlb	0	; () banked
  4092   00146A  5181               	movf	129,w,b
  4093   00146C  A4D8               	btfss	status,2,c
  4094   00146E  D6A4               	goto	i2l4599
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;T1.c: 153: clear_line(14);
  4098   001470  0E0E               	movlw	14
  4099   001472  ECE0  F010         	call	_clear_line
  4100                           
  4101                           ;T1.c: 154: vide();
  4102   001476  EC3C  F011         	call	_vide	;wreg free
  4103                           
  4104                           ;T1.c: 155: TEST=3;
  4105   00147A  0E03               	movlw	3
  4106   00147C  D69B               	goto	L2
  4107   00147E                     __end_of_tache1:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _vide *****************
  4111 ;; Defined at:
  4112 ;;		line 438 in file "afficheur.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; Hardware stack levels required when called: 4
  4133 ;; This function calls:
  4134 ;;		_draw_string
  4135 ;;		_goto_lico
  4136 ;; This function is called by:
  4137 ;;		_tache1
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text15
  4142   002278                     __ptext15:
  4143                           	callstack 0
  4144   002278                     _vide:
  4145                           	callstack 23
  4146                           
  4147                           ;afficheur.c: 440: goto_lico(14,0);
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;incstack = 0
  4151   002278  0E00               	movlw	0
  4152   00227A  6E09               	movwf	goto_lico@colonne^0,c
  4153   00227C  0E0E               	movlw	14
  4154   00227E  EC1A  F00F         	call	_goto_lico
  4155                           
  4156                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4157   002282  0E33               	movlw	low STR_23
  4158   002284  6E08               	movwf	draw_string@tableau^0,c
  4159   002286  0E10               	movlw	high STR_23
  4160   002288  6E09               	movwf	(draw_string@tableau+1)^0,c
  4161   00228A  EC2C  F00E         	call	_draw_string	;wreg free
  4162   00228E  0012               	return		;funcret
  4163   002290                     __end_of_vide:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _lecture_8bit_analogique *****************
  4167 ;; Defined at:
  4168 ;;		line 60 in file "main.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;  channel         1    wreg     unsigned char 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  channel         1    1[COMRAM] unsigned char 
  4173 ;;  ret             1    0[COMRAM] unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      unsigned char 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:        2 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_tache1
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text16
  4197   00203E                     __ptext16:
  4198                           	callstack 0
  4199   00203E                     _lecture_8bit_analogique:
  4200                           	callstack 27
  4201                           
  4202                           ;incstack = 0
  4203                           ;lecture_8bit_analogique@channel stored from wreg
  4204   00203E  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4205                           
  4206                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4207   002040  0E00               	movlw	0
  4208   002042  6EC1               	movwf	193,c	;volatile
  4209                           
  4210                           ;main.c: 66: ADCON2=0x16;
  4211   002044  0E16               	movlw	22
  4212   002046  6EC0               	movwf	192,c	;volatile
  4213                           
  4214                           ;main.c: 67: channel=channel&0x1F;
  4215   002048  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4216   00204A  0B1F               	andlw	31
  4217   00204C  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4218                           
  4219                           ;main.c: 68: channel=channel<<2;
  4220   00204E  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4221   002050  46E8               	rlncf	wreg,f,c
  4222   002052  0BFC               	andlw	252
  4223   002054  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4224                           
  4225                           ;main.c: 69: ADCON0=channel|0x01;
  4226   002056  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4227   002058  0901               	iorlw	1
  4228   00205A  6EC2               	movwf	194,c	;volatile
  4229                           
  4230                           ;main.c: 71: ADCON0bits.GO=1;
  4231   00205C  82C2               	bsf	194,1,c	;volatile
  4232   00205E                     i2l140:
  4233   00205E  B2C2               	btfsc	194,1,c	;volatile
  4234   002060  D7FE               	goto	i2l140
  4235                           
  4236                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4237   002062  A0C3               	btfss	195,0,c	;volatile
  4238   002064  D003               	goto	i2l143
  4239                           
  4240                           ;main.c: 76: ret=0;
  4241   002066  0E00               	movlw	0
  4242   002068  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4243   00206A  D002               	goto	i2l2731
  4244   00206C                     i2l143:
  4245                           
  4246                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4247   00206C  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4248   002070                     i2l2731:
  4249                           
  4250                           ;main.c: 82: return ret;
  4251   002070  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4252   002072  0012               	return		;funcret
  4253   002074                     __end_of_lecture_8bit_analogique:
  4254                           	callstack 0
  4255                           
  4256 ;; *************** function _initialisation_afficheur *****************
  4257 ;; Defined at:
  4258 ;;		line 164 in file "afficheur.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  error_count     1    8[COMRAM] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;Total ram usage:        1 bytes
  4277 ;; Hardware stack levels used: 1
  4278 ;; Hardware stack levels required when called: 3
  4279 ;; This function calls:
  4280 ;;		_check_status_ok
  4281 ;;		_command
  4282 ;;		_d1command
  4283 ;;		_d2command
  4284 ;;		_delai_us_char
  4285 ;; This function is called by:
  4286 ;;		_tache1
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text17
  4291   001A3C                     __ptext17:
  4292                           	callstack 0
  4293   001A3C                     _initialisation_afficheur:
  4294                           	callstack 24
  4295                           
  4296                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4297                           
  4298                           ;incstack = 0
  4299   001A3C  0E00               	movlw	0
  4300   001A3E  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4301                           
  4302                           ;afficheur.c: 172: LATH=0;
  4303   001A40  0E00               	movlw	0
  4304   001A42  6E90               	movwf	144,c	;volatile
  4305                           
  4306                           ;afficheur.c: 173: LATJ=0x1F;
  4307   001A44  0E1F               	movlw	31
  4308   001A46  6E91               	movwf	145,c	;volatile
  4309                           
  4310                           ;afficheur.c: 176: TRISH=0;
  4311   001A48  0E00               	movlw	0
  4312   001A4A  6E99               	movwf	153,c	;volatile
  4313                           
  4314                           ;afficheur.c: 177: TRISJ=0;
  4315   001A4C  0E00               	movlw	0
  4316   001A4E  6E9A               	movwf	154,c	;volatile
  4317                           
  4318                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4319   001A50  9A91               	bcf	145,5,c	;volatile
  4320                           
  4321                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4322   001A52  8C91               	bsf	145,6,c	;volatile
  4323                           
  4324                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4325   001A54  9891               	bcf	145,4,c	;volatile
  4326                           
  4327                           ;afficheur.c: 185: delai_us_char(4);
  4328   001A56  0E04               	movlw	4
  4329   001A58  ECCF  F010         	call	_delai_us_char
  4330                           
  4331                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4332   001A5C  8891               	bsf	145,4,c	;volatile
  4333                           
  4334                           ;afficheur.c: 190: delai_us_char(12);
  4335   001A5E  0E0C               	movlw	12
  4336   001A60  ECCF  F010         	call	_delai_us_char
  4337                           
  4338                           ;afficheur.c: 191: while(check_status_ok()==00)
  4339   001A64  D00C               	goto	i2l4237
  4340   001A66                     i2l4227:
  4341                           
  4342                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4343   001A66  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4344                           
  4345                           ;afficheur.c: 194: delai_us_char(12);
  4346   001A68  0E0C               	movlw	12
  4347   001A6A  ECCF  F010         	call	_delai_us_char
  4348                           
  4349                           ;afficheur.c: 195: if (error_count>200)
  4350   001A6E  0EC8               	movlw	200
  4351   001A70  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4352   001A72  D005               	goto	i2l4237
  4353                           
  4354                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4355   001A74  828B               	bsf	139,1,c	;volatile
  4356   001A76  808F               	bsf	143,0,c	;volatile
  4357   001A78  948B               	bcf	139,2,c	;volatile
  4358                           
  4359                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4360   001A7A  9EF2               	bcf	242,7,c	;volatile
  4361   001A7C                     i2l1256:
  4362   001A7C  D7FF               	goto	i2l1256
  4363   001A7E                     i2l4237:
  4364   001A7E  EC83  F010         	call	_check_status_ok	;wreg free
  4365   001A82  0900               	iorlw	0
  4366   001A84  B4D8               	btfsc	status,2,c
  4367   001A86  D7EF               	goto	i2l4227
  4368                           
  4369                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4370   001A88  0E0F               	movlw	15
  4371   001A8A  6E05               	movwf	d2command@d2^0,c
  4372   001A8C  0E21               	movlw	33
  4373   001A8E  6E06               	movwf	d2command@cmd^0,c
  4374   001A90  0E27               	movlw	39
  4375   001A92  EC98  F00F         	call	_d2command
  4376                           
  4377                           ;afficheur.c: 206: d2command(0,0,0x22);
  4378   001A96  0E00               	movlw	0
  4379   001A98  6E05               	movwf	d2command@d2^0,c
  4380   001A9A  0E22               	movlw	34
  4381   001A9C  6E06               	movwf	d2command@cmd^0,c
  4382   001A9E  0E00               	movlw	0
  4383   001AA0  EC98  F00F         	call	_d2command
  4384                           
  4385                           ;afficheur.c: 207: d2command(0,0,0x24);
  4386   001AA4  0E00               	movlw	0
  4387   001AA6  6E05               	movwf	d2command@d2^0,c
  4388   001AA8  0E24               	movlw	36
  4389   001AAA  6E06               	movwf	d2command@cmd^0,c
  4390   001AAC  0E00               	movlw	0
  4391   001AAE  EC98  F00F         	call	_d2command
  4392                           
  4393                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4394   001AB2  0E7B               	movlw	123
  4395   001AB4  6E05               	movwf	d2command@d2^0,c
  4396   001AB6  0E40               	movlw	64
  4397   001AB8  6E06               	movwf	d2command@cmd^0,c
  4398   001ABA  0E00               	movlw	0
  4399   001ABC  EC98  F00F         	call	_d2command
  4400                           
  4401                           ;afficheur.c: 211: d2command(40,0,0x41);
  4402   001AC0  0E00               	movlw	0
  4403   001AC2  6E05               	movwf	d2command@d2^0,c
  4404   001AC4  0E41               	movlw	65
  4405   001AC6  6E06               	movwf	d2command@cmd^0,c
  4406   001AC8  0E28               	movlw	40
  4407   001ACA  EC98  F00F         	call	_d2command
  4408                           
  4409                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4410   001ACE  0E80               	movlw	128
  4411   001AD0  6E05               	movwf	d2command@d2^0,c
  4412   001AD2  0E42               	movlw	66
  4413   001AD4  6E06               	movwf	d2command@cmd^0,c
  4414   001AD6  0E00               	movlw	0
  4415   001AD8  EC98  F00F         	call	_d2command
  4416                           
  4417                           ;afficheur.c: 213: d2command(40,0,0x43);
  4418   001ADC  0E00               	movlw	0
  4419   001ADE  6E05               	movwf	d2command@d2^0,c
  4420   001AE0  0E43               	movlw	67
  4421   001AE2  6E06               	movwf	d2command@cmd^0,c
  4422   001AE4  0E28               	movlw	40
  4423   001AE6  EC98  F00F         	call	_d2command
  4424                           
  4425                           ;afficheur.c: 216: command(0x80);
  4426   001AEA  0E80               	movlw	128
  4427   001AEC  ECFD  F010         	call	_command
  4428                           
  4429                           ;afficheur.c: 219: command(0x9C);
  4430   001AF0  0E9C               	movlw	156
  4431   001AF2  ECFD  F010         	call	_command
  4432                           
  4433                           ;afficheur.c: 222: command(0xA0);
  4434   001AF6  0EA0               	movlw	160
  4435   001AF8  ECFD  F010         	call	_command
  4436                           
  4437                           ;afficheur.c: 225: d1command(0x02,0x70);
  4438   001AFC  0E70               	movlw	112
  4439   001AFE  6E05               	movwf	d1command@cmd^0,c
  4440   001B00  0E02               	movlw	2
  4441   001B02  ECE6  F00F         	call	_d1command
  4442   001B06  0012               	return		;funcret
  4443   001B08                     __end_of_initialisation_afficheur:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function _check_status_ok *****************
  4447 ;; Defined at:
  4448 ;;		line 30 in file "afficheur.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;		None
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  res             1    0[COMRAM] unsigned char 
  4453 ;; Return value:  Size  Location     Type
  4454 ;;                  1    wreg      unsigned char 
  4455 ;; Registers used:
  4456 ;;		wreg, status,2, status,0
  4457 ;; Tracked objects:
  4458 ;;		On entry : 0/0
  4459 ;;		On exit  : 0/0
  4460 ;;		Unchanged: 0/0
  4461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;Total ram usage:        1 bytes
  4467 ;; Hardware stack levels used: 1
  4468 ;; This function calls:
  4469 ;;		Nothing
  4470 ;; This function is called by:
  4471 ;;		_initialisation_afficheur
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text18
  4476   002106                     __ptext18:
  4477                           	callstack 0
  4478   002106                     _check_status_ok:
  4479                           	callstack 26
  4480                           
  4481                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4482                           
  4483                           ;incstack = 0
  4484   002106  6899               	setf	153,c	;volatile
  4485                           
  4486                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4487   002108  8091               	bsf	145,0,c	;volatile
  4488                           
  4489                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4490   00210A  9691               	bcf	145,3,c	;volatile
  4491                           
  4492                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4493   00210C  9291               	bcf	145,1,c	;volatile
  4494                           
  4495                           ;afficheur.c: 39: __nop();
  4496   00210E  F000               	nop	
  4497                           
  4498                           ;afficheur.c: 40: __nop();
  4499   002110  F000               	nop	
  4500                           
  4501                           ;afficheur.c: 41: __nop();
  4502   002112  F000               	nop	
  4503                           
  4504                           ;afficheur.c: 42: res=PORTH;
  4505   002114  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4506                           
  4507                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4508   002118  8291               	bsf	145,1,c	;volatile
  4509                           
  4510                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4511   00211A  8691               	bsf	145,3,c	;volatile
  4512                           
  4513                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4514   00211C  5001               	movf	check_status_ok@res^0,w,c
  4515   00211E  0B03               	andlw	3
  4516   002120  0A03               	xorlw	3
  4517   002122  A4D8               	btfss	status,2,c
  4518   002124  D002               	goto	i2l2701
  4519                           
  4520                           ;afficheur.c: 47: res=1;
  4521   002126  0E01               	movlw	1
  4522   002128  D001               	goto	L3
  4523   00212A                     i2l2701:
  4524                           
  4525                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4526   00212A  0E00               	movlw	0
  4527   00212C                     L3:
  4528   00212C  6E01               	movwf	check_status_ok@res^0,c
  4529                           
  4530                           ;afficheur.c: 50: return res;
  4531   00212E  5001               	movf	check_status_ok@res^0,w,c
  4532   002130  0012               	return		;funcret
  4533   002132                     __end_of_check_status_ok:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _init_rxtx *****************
  4537 ;; Defined at:
  4538 ;;		line 4 in file "rxtx.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_tache1
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text19
  4566   00217C                     __ptext19:
  4567                           	callstack 0
  4568   00217C                     _init_rxtx:
  4569                           	callstack 27
  4570                           
  4571                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4572                           
  4573                           ;incstack = 0
  4574   00217C  9C94               	bcf	148,6,c	;volatile
  4575                           
  4576                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4577   00217E  8E94               	bsf	148,7,c	;volatile
  4578                           
  4579                           ;rxtx.c: 8: BAUDCON1=0x08;
  4580   002180  0E08               	movlw	8
  4581   002182  6E65               	movwf	101,c	;volatile
  4582                           
  4583                           ;rxtx.c: 9: SPBRGH1=0x04;
  4584   002184  0E04               	movlw	4
  4585   002186  6ED4               	movwf	212,c	;volatile
  4586                           
  4587                           ;rxtx.c: 10: SPBRG1=0xE1;
  4588   002188  0EE1               	movlw	225
  4589   00218A  6EAF               	movwf	175,c	;volatile
  4590                           
  4591                           ;rxtx.c: 11: TXSTA1=0x04;
  4592   00218C  0E04               	movlw	4
  4593   00218E  6EAC               	movwf	172,c	;volatile
  4594                           
  4595                           ;rxtx.c: 12: RCSTA1=0x80;
  4596   002190  0E80               	movlw	128
  4597   002192  6EAB               	movwf	171,c	;volatile
  4598                           
  4599                           ;rxtx.c: 13: TXSTA1=0x24;
  4600   002194  0E24               	movlw	36
  4601   002196  6EAC               	movwf	172,c	;volatile
  4602                           
  4603                           ;rxtx.c: 14: RCSTA1=0x90;
  4604   002198  0E90               	movlw	144
  4605   00219A  6EAB               	movwf	171,c	;volatile
  4606   00219C  0012               	return		;funcret
  4607   00219E                     __end_of_init_rxtx:
  4608                           	callstack 0
  4609                           
  4610 ;; *************** function _draw_square *****************
  4611 ;; Defined at:
  4612 ;;		line 325 in file "afficheur.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  x1              1    wreg     unsigned char 
  4615 ;;  y1              1   14[COMRAM] unsigned char 
  4616 ;;  x2              1   15[COMRAM] unsigned char 
  4617 ;;  y2              1   16[COMRAM] unsigned char 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  x1              1   17[COMRAM] unsigned char 
  4620 ;;  y               1   19[COMRAM] unsigned char 
  4621 ;;  x               1   18[COMRAM] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4631 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;Total ram usage:        6 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 4
  4638 ;; This function calls:
  4639 ;;		_plot1
  4640 ;; This function is called by:
  4641 ;;		_tache1
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text20
  4646   001F80                     __ptext20:
  4647                           	callstack 0
  4648   001F80                     _draw_square:
  4649                           	callstack 23
  4650                           
  4651                           ;incstack = 0
  4652                           ;draw_square@x1 stored from wreg
  4653   001F80  6E12               	movwf	draw_square@x1^0,c
  4654                           
  4655                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4656   001F82  C012  F013         	movff	draw_square@x1,draw_square@x
  4657   001F86  D00B               	goto	i2l4275
  4658   001F88                     i2l4271:
  4659                           
  4660                           ;afficheur.c: 330: plot1(x, y1);
  4661   001F88  C00F  F009         	movff	draw_square@y1,plot1@y
  4662   001F8C  5013               	movf	draw_square@x^0,w,c
  4663   001F8E  EC84  F00D         	call	_plot1
  4664                           
  4665                           ;afficheur.c: 331: plot1(x, y2);
  4666   001F92  C011  F009         	movff	draw_square@y2,plot1@y
  4667   001F96  5013               	movf	draw_square@x^0,w,c
  4668   001F98  EC84  F00D         	call	_plot1
  4669   001F9C  2A13               	incf	draw_square@x^0,f,c
  4670   001F9E                     i2l4275:
  4671   001F9E  5013               	movf	draw_square@x^0,w,c
  4672   001FA0  5C10               	subwf	draw_square@x2^0,w,c
  4673   001FA2  B0D8               	btfsc	status,0,c
  4674   001FA4  D7F1               	goto	i2l4271
  4675                           
  4676                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4677   001FA6  C00F  F014         	movff	draw_square@y1,draw_square@y
  4678   001FAA  D00B               	goto	i2l4281
  4679   001FAC                     i2l4277:
  4680                           
  4681                           ;afficheur.c: 336: plot1(x1, y);
  4682   001FAC  C014  F009         	movff	draw_square@y,plot1@y
  4683   001FB0  5012               	movf	draw_square@x1^0,w,c
  4684   001FB2  EC84  F00D         	call	_plot1
  4685                           
  4686                           ;afficheur.c: 337: plot1(x2, y);
  4687   001FB6  C014  F009         	movff	draw_square@y,plot1@y
  4688   001FBA  5010               	movf	draw_square@x2^0,w,c
  4689   001FBC  EC84  F00D         	call	_plot1
  4690   001FC0  2A14               	incf	draw_square@y^0,f,c
  4691   001FC2                     i2l4281:
  4692   001FC2  5014               	movf	draw_square@y^0,w,c
  4693   001FC4  5C11               	subwf	draw_square@y2^0,w,c
  4694   001FC6  A0D8               	btfss	status,0,c
  4695   001FC8  0012               	return	
  4696   001FCA  D7F0               	goto	i2l4277
  4697   001FCC                     __end_of_draw_square:
  4698                           	callstack 0
  4699                           
  4700 ;; *************** function _plot1 *****************
  4701 ;; Defined at:
  4702 ;;		line 390 in file "afficheur.c"
  4703 ;; Parameters:    Size  Location     Type
  4704 ;;  x               1    wreg     unsigned char 
  4705 ;;  y               1    8[COMRAM] unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  x               1   13[COMRAM] unsigned char 
  4708 ;;  add             2   11[COMRAM] unsigned int 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  1    wreg      void 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4718 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;Total ram usage:        6 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 3
  4725 ;; This function calls:
  4726 ;;		___awdiv
  4727 ;;		___awmod
  4728 ;;		_command
  4729 ;;		_d2command
  4730 ;; This function is called by:
  4731 ;;		_tache1
  4732 ;;		_draw_square
  4733 ;;		_draw_filled_square
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text21
  4738   001B08                     __ptext21:
  4739                           	callstack 0
  4740   001B08                     _plot1:
  4741                           	callstack 24
  4742                           
  4743                           ;incstack = 0
  4744                           ;plot1@x stored from wreg
  4745   001B08  6E0E               	movwf	plot1@x^0,c
  4746                           
  4747                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  4748   001B0A  C00E  F001         	movff	plot1@x,___awdiv@dividend
  4749   001B0E  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4750   001B10  0E00               	movlw	0
  4751   001B12  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4752   001B14  0E06               	movlw	6
  4753   001B16  6E03               	movwf	___awdiv@divisor^0,c
  4754   001B18  EC72  F00E         	call	___awdiv	;wreg free
  4755   001B1C  5009               	movf	plot1@y^0,w,c
  4756   001B1E  0D28               	mullw	40
  4757   001B20  CFF3 F00A          	movff	prodl,??_plot1
  4758   001B24  CFF4 F00B          	movff	prodh,??_plot1+1
  4759   001B28  5001               	movf	?___awdiv^0,w,c
  4760   001B2A  240A               	addwf	??_plot1^0,w,c
  4761   001B2C  6E0C               	movwf	plot1@add^0,c
  4762   001B2E  5002               	movf	(?___awdiv+1)^0,w,c
  4763   001B30  200B               	addwfc	(??_plot1+1)^0,w,c
  4764   001B32  6E0D               	movwf	(plot1@add+1)^0,c
  4765                           
  4766                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  4767   001B34  500D               	movf	(plot1@add+1)^0,w,c
  4768   001B36  6E05               	movwf	d2command@d2^0,c
  4769   001B38  0E24               	movlw	36
  4770   001B3A  6E06               	movwf	d2command@cmd^0,c
  4771   001B3C  500C               	movf	plot1@add^0,w,c
  4772   001B3E  EC98  F00F         	call	_d2command
  4773                           
  4774                           ;afficheur.c: 397: switch(x%6)
  4775   001B42  D018               	goto	i2l4201
  4776   001B44                     i2l4187:
  4777   001B44  0EFD               	movlw	253
  4778   001B46  ECFD  F010         	call	_command
  4779   001B4A  0012               	return	
  4780   001B4C                     i2l4189:
  4781   001B4C  0EFC               	movlw	252
  4782   001B4E  ECFD  F010         	call	_command
  4783   001B52  0012               	return	
  4784   001B54                     i2l4191:
  4785   001B54  0EFB               	movlw	251
  4786   001B56  ECFD  F010         	call	_command
  4787   001B5A  0012               	return	
  4788   001B5C                     i2l4193:
  4789   001B5C  0EFA               	movlw	250
  4790   001B5E  ECFD  F010         	call	_command
  4791   001B62  0012               	return	
  4792   001B64                     i2l4195:
  4793   001B64  0EF9               	movlw	249
  4794   001B66  ECFD  F010         	call	_command
  4795   001B6A  0012               	return	
  4796   001B6C                     i2l4197:
  4797   001B6C  0EF8               	movlw	248
  4798   001B6E  ECFD  F010         	call	_command
  4799   001B72  0012               	return	
  4800   001B74                     i2l4201:
  4801   001B74  C00E  F001         	movff	plot1@x,___awmod@dividend
  4802   001B78  6A02               	clrf	(___awmod@dividend+1)^0,c
  4803   001B7A  0E00               	movlw	0
  4804   001B7C  6E04               	movwf	(___awmod@divisor+1)^0,c
  4805   001B7E  0E06               	movlw	6
  4806   001B80  6E03               	movwf	___awmod@divisor^0,c
  4807   001B82  ECB4  F00E         	call	___awmod	;wreg free
  4808                           
  4809                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4810                           ; Switch size 1, requested type "simple"
  4811                           ; Number of cases is 1, Range of values is 0 to 0
  4812                           ; switch strategies available:
  4813                           ; Name         Instructions Cycles
  4814                           ; simple_byte            4     3 (average)
  4815                           ;	Chosen strategy is simple_byte
  4816   001B86  5002               	movf	(?___awmod+1)^0,w,c
  4817   001B88  0A00               	xorlw	0	; case 0
  4818   001B8A  A4D8               	btfss	status,2,c
  4819   001B8C  0012               	return	
  4820                           
  4821                           ; Switch size 1, requested type "simple"
  4822                           ; Number of cases is 6, Range of values is 0 to 5
  4823                           ; switch strategies available:
  4824                           ; Name         Instructions Cycles
  4825                           ; simple_byte           19    10 (average)
  4826                           ;	Chosen strategy is simple_byte
  4827   001B8E  5001               	movf	?___awmod^0,w,c
  4828   001B90  0A00               	xorlw	0	; case 0
  4829   001B92  B4D8               	btfsc	status,2,c
  4830   001B94  D7D7               	goto	i2l4187
  4831   001B96  0A01               	xorlw	1	; case 1
  4832   001B98  B4D8               	btfsc	status,2,c
  4833   001B9A  D7D8               	goto	i2l4189
  4834   001B9C  0A03               	xorlw	3	; case 2
  4835   001B9E  B4D8               	btfsc	status,2,c
  4836   001BA0  D7D9               	goto	i2l4191
  4837   001BA2  0A01               	xorlw	1	; case 3
  4838   001BA4  B4D8               	btfsc	status,2,c
  4839   001BA6  D7DA               	goto	i2l4193
  4840   001BA8  0A07               	xorlw	7	; case 4
  4841   001BAA  B4D8               	btfsc	status,2,c
  4842   001BAC  D7DB               	goto	i2l4195
  4843   001BAE  0A01               	xorlw	1	; case 5
  4844   001BB0  A4D8               	btfss	status,2,c
  4845   001BB2  0012               	return	
  4846   001BB4  D7DB               	goto	i2l4197
  4847   001BB6                     __end_of_plot1:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function _command *****************
  4851 ;; Defined at:
  4852 ;;		line 90 in file "afficheur.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  cmd             1    wreg     unsigned char 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  cmd             1    4[COMRAM] unsigned char 
  4857 ;;  res             1    0        unsigned char 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      unsigned char 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0, cstack
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        1 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 2
  4874 ;; This function calls:
  4875 ;;		_delai_us_char
  4876 ;;		_wait_status_ok
  4877 ;;		_write_c_aff
  4878 ;; This function is called by:
  4879 ;;		_initialisation_afficheur
  4880 ;;		_plot1
  4881 ;;		_plot0
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           	psect	text22
  4886   0021FA                     __ptext22:
  4887                           	callstack 0
  4888   0021FA                     _command:
  4889                           	callstack 24
  4890                           
  4891                           ;incstack = 0
  4892                           ;command@cmd stored from wreg
  4893   0021FA  6E05               	movwf	command@cmd^0,c
  4894                           
  4895                           ;afficheur.c: 96: if(wait_status_ok()==1)
  4896   0021FC  EC6F  F00F         	call	_wait_status_ok	;wreg free
  4897   002200  06E8               	decf	wreg,f,c
  4898   002202  A4D8               	btfss	status,2,c
  4899   002204  0012               	return	
  4900                           
  4901                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  4902   002206  0E0C               	movlw	12
  4903   002208  ECCF  F010         	call	_delai_us_char
  4904                           
  4905                           ;afficheur.c: 99: write_c_aff(cmd);
  4906   00220C  5005               	movf	command@cmd^0,w,c
  4907   00220E  EC17  F011         	call	_write_c_aff
  4908   002212  0012               	return		;funcret
  4909   002214                     __end_of_command:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function ___awmod *****************
  4913 ;; Defined at:
  4914 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  dividend        2    0[COMRAM] int 
  4917 ;;  divisor         2    2[COMRAM] int 
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  sign            1    5[COMRAM] unsigned char 
  4920 ;;  counter         1    4[COMRAM] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  2    0[COMRAM] int 
  4923 ;; Registers used:
  4924 ;;		wreg, status,2, status,0
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;Total ram usage:        6 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_plot1
  4940 ;;		_plot0
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943                           
  4944                           	psect	text23
  4945   001D68                     __ptext23:
  4946                           	callstack 0
  4947   001D68                     ___awmod:
  4948                           	callstack 26
  4949                           
  4950                           ;incstack = 0
  4951   001D68  0E00               	movlw	0
  4952   001D6A  6E06               	movwf	___awmod@sign^0,c
  4953   001D6C  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  4954   001D6E  D006               	goto	i2l4119
  4955   001D70  6C01               	negf	___awmod@dividend^0,c
  4956   001D72  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4957   001D74  B0D8               	btfsc	status,0,c
  4958   001D76  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4959   001D78  0E01               	movlw	1
  4960   001D7A  6E06               	movwf	___awmod@sign^0,c
  4961   001D7C                     i2l4119:
  4962   001D7C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4963   001D7E  D004               	goto	i2l4123
  4964   001D80  6C03               	negf	___awmod@divisor^0,c
  4965   001D82  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4966   001D84  B0D8               	btfsc	status,0,c
  4967   001D86  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4968   001D88                     i2l4123:
  4969   001D88  5003               	movf	___awmod@divisor^0,w,c
  4970   001D8A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4971   001D8C  B4D8               	btfsc	status,2,c
  4972   001D8E  D018               	goto	i2l4139
  4973   001D90  0E01               	movlw	1
  4974   001D92  6E05               	movwf	___awmod@counter^0,c
  4975   001D94  D004               	goto	i2l4129
  4976   001D96                     i2l4127:
  4977   001D96  90D8               	bcf	status,0,c
  4978   001D98  3603               	rlcf	___awmod@divisor^0,f,c
  4979   001D9A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4980   001D9C  2A05               	incf	___awmod@counter^0,f,c
  4981   001D9E                     i2l4129:
  4982   001D9E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4983   001DA0  D7FA               	goto	i2l4127
  4984   001DA2                     i2u211_40:
  4985   001DA2  5003               	movf	___awmod@divisor^0,w,c
  4986   001DA4  5C01               	subwf	___awmod@dividend^0,w,c
  4987   001DA6  5004               	movf	(___awmod@divisor+1)^0,w,c
  4988   001DA8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4989   001DAA  A0D8               	btfss	status,0,c
  4990   001DAC  D004               	goto	i2l4135
  4991   001DAE  5003               	movf	___awmod@divisor^0,w,c
  4992   001DB0  5E01               	subwf	___awmod@dividend^0,f,c
  4993   001DB2  5004               	movf	(___awmod@divisor+1)^0,w,c
  4994   001DB4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4995   001DB6                     i2l4135:
  4996   001DB6  90D8               	bcf	status,0,c
  4997   001DB8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4998   001DBA  3203               	rrcf	___awmod@divisor^0,f,c
  4999   001DBC  2E05               	decfsz	___awmod@counter^0,f,c
  5000   001DBE  D7F1               	goto	i2u211_40
  5001   001DC0                     i2l4139:
  5002   001DC0  5006               	movf	___awmod@sign^0,w,c
  5003   001DC2  B4D8               	btfsc	status,2,c
  5004   001DC4  D004               	goto	i2l4143
  5005   001DC6  6C01               	negf	___awmod@dividend^0,c
  5006   001DC8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5007   001DCA  B0D8               	btfsc	status,0,c
  5008   001DCC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5009   001DCE                     i2l4143:
  5010   001DCE  C001  F001         	movff	___awmod@dividend,?___awmod
  5011   001DD2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5012   001DD6  0012               	return		;funcret
  5013   001DD8                     __end_of___awmod:
  5014                           	callstack 0
  5015                           
  5016 ;; *************** function ___awdiv *****************
  5017 ;; Defined at:
  5018 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  dividend        2    0[COMRAM] int 
  5021 ;;  divisor         2    2[COMRAM] int 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  quotient        2    6[COMRAM] int 
  5024 ;;  sign            1    5[COMRAM] unsigned char 
  5025 ;;  counter         1    4[COMRAM] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    0[COMRAM] int 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;Total ram usage:        8 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_plot1
  5045 ;;		_draw_dec8
  5046 ;;		_plot0
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text24
  5051   001CE4                     __ptext24:
  5052                           	callstack 0
  5053   001CE4                     ___awdiv:
  5054                           	callstack 26
  5055                           
  5056                           ;incstack = 0
  5057   001CE4  0E00               	movlw	0
  5058   001CE6  6E06               	movwf	___awdiv@sign^0,c
  5059   001CE8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5060   001CEA  D006               	goto	i2l4075
  5061   001CEC  6C03               	negf	___awdiv@divisor^0,c
  5062   001CEE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5063   001CF0  B0D8               	btfsc	status,0,c
  5064   001CF2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5065   001CF4  0E01               	movlw	1
  5066   001CF6  6E06               	movwf	___awdiv@sign^0,c
  5067   001CF8                     i2l4075:
  5068   001CF8  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5069   001CFA  D006               	goto	i2l4081
  5070   001CFC  6C01               	negf	___awdiv@dividend^0,c
  5071   001CFE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5072   001D00  B0D8               	btfsc	status,0,c
  5073   001D02  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5074   001D04  0E01               	movlw	1
  5075   001D06  1A06               	xorwf	___awdiv@sign^0,f,c
  5076   001D08                     i2l4081:
  5077   001D08  0E00               	movlw	0
  5078   001D0A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5079   001D0C  0E00               	movlw	0
  5080   001D0E  6E07               	movwf	___awdiv@quotient^0,c
  5081   001D10  5003               	movf	___awdiv@divisor^0,w,c
  5082   001D12  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5083   001D14  B4D8               	btfsc	status,2,c
  5084   001D16  D01C               	goto	i2l4103
  5085   001D18  0E01               	movlw	1
  5086   001D1A  6E05               	movwf	___awdiv@counter^0,c
  5087   001D1C  D004               	goto	i2l4089
  5088   001D1E                     i2l4087:
  5089   001D1E  90D8               	bcf	status,0,c
  5090   001D20  3603               	rlcf	___awdiv@divisor^0,f,c
  5091   001D22  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5092   001D24  2A05               	incf	___awdiv@counter^0,f,c
  5093   001D26                     i2l4089:
  5094   001D26  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5095   001D28  D7FA               	goto	i2l4087
  5096   001D2A                     i2u205_40:
  5097   001D2A  90D8               	bcf	status,0,c
  5098   001D2C  3607               	rlcf	___awdiv@quotient^0,f,c
  5099   001D2E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5100   001D30  5003               	movf	___awdiv@divisor^0,w,c
  5101   001D32  5C01               	subwf	___awdiv@dividend^0,w,c
  5102   001D34  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5103   001D36  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5104   001D38  A0D8               	btfss	status,0,c
  5105   001D3A  D005               	goto	i2l4099
  5106   001D3C  5003               	movf	___awdiv@divisor^0,w,c
  5107   001D3E  5E01               	subwf	___awdiv@dividend^0,f,c
  5108   001D40  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5109   001D42  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5110   001D44  8007               	bsf	___awdiv@quotient^0,0,c
  5111   001D46                     i2l4099:
  5112   001D46  90D8               	bcf	status,0,c
  5113   001D48  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5114   001D4A  3203               	rrcf	___awdiv@divisor^0,f,c
  5115   001D4C  2E05               	decfsz	___awdiv@counter^0,f,c
  5116   001D4E  D7ED               	goto	i2u205_40
  5117   001D50                     i2l4103:
  5118   001D50  5006               	movf	___awdiv@sign^0,w,c
  5119   001D52  B4D8               	btfsc	status,2,c
  5120   001D54  D004               	goto	i2l4107
  5121   001D56  6C07               	negf	___awdiv@quotient^0,c
  5122   001D58  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5123   001D5A  B0D8               	btfsc	status,0,c
  5124   001D5C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5125   001D5E                     i2l4107:
  5126   001D5E  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5127   001D62  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5128   001D66  0012               	return		;funcret
  5129   001D68                     __end_of___awdiv:
  5130                           	callstack 0
  5131                           
  5132 ;; *************** function _draw_hex8 *****************
  5133 ;; Defined at:
  5134 ;;		line 252 in file "afficheur.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;  octet           1    wreg     unsigned char 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  octet           1    7[COMRAM] unsigned char 
  5139 ;;  c               1    8[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      void 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;Total ram usage:        2 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 3
  5156 ;; This function calls:
  5157 ;;		_d1command
  5158 ;; This function is called by:
  5159 ;;		_tache1
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text25
  5164   001DD8                     __ptext25:
  5165                           	callstack 0
  5166   001DD8                     _draw_hex8:
  5167                           	callstack 24
  5168                           
  5169                           ;incstack = 0
  5170                           ;draw_hex8@octet stored from wreg
  5171   001DD8  6E08               	movwf	draw_hex8@octet^0,c
  5172                           
  5173                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5174   001DDA  3808               	swapf	draw_hex8@octet^0,w,c
  5175   001DDC  0B0F               	andlw	15
  5176   001DDE  6E09               	movwf	draw_hex8@c^0,c
  5177                           
  5178                           ;afficheur.c: 257: if (c>9)
  5179   001DE0  0E09               	movlw	9
  5180   001DE2  6409               	cpfsgt	draw_hex8@c^0,c
  5181   001DE4  D003               	goto	i2l4287
  5182                           
  5183                           ;afficheur.c: 258: c=c+0x17;
  5184   001DE6  5009               	movf	draw_hex8@c^0,w,c
  5185   001DE8  0F17               	addlw	23
  5186   001DEA  D002               	goto	L4
  5187   001DEC                     i2l4287:
  5188                           
  5189                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5190   001DEC  5009               	movf	draw_hex8@c^0,w,c
  5191   001DEE  0F10               	addlw	16
  5192   001DF0                     L4:
  5193   001DF0  6E09               	movwf	draw_hex8@c^0,c
  5194   001DF2  D001               	goto	i2l4289
  5195   001DF4                     i2l1285:
  5196                           
  5197                           ;afficheur.c: 262: __nop();
  5198   001DF4  F000               	nop	
  5199   001DF6                     i2l4289:
  5200   001DF6  0EC0               	movlw	192
  5201   001DF8  6E05               	movwf	d1command@cmd^0,c
  5202   001DFA  5009               	movf	draw_hex8@c^0,w,c
  5203   001DFC  ECE6  F00F         	call	_d1command
  5204   001E00  0900               	iorlw	0
  5205   001E02  B4D8               	btfsc	status,2,c
  5206   001E04  D7F7               	goto	i2l1285
  5207                           
  5208                           ;afficheur.c: 264: c=(octet&0x0F);
  5209   001E06  5008               	movf	draw_hex8@octet^0,w,c
  5210   001E08  0B0F               	andlw	15
  5211   001E0A  6E09               	movwf	draw_hex8@c^0,c
  5212                           
  5213                           ;afficheur.c: 265: if (c>9)
  5214   001E0C  0E09               	movlw	9
  5215   001E0E  6409               	cpfsgt	draw_hex8@c^0,c
  5216   001E10  D003               	goto	i2l4295
  5217                           
  5218                           ;afficheur.c: 266: c=c+0x17;
  5219   001E12  5009               	movf	draw_hex8@c^0,w,c
  5220   001E14  0F17               	addlw	23
  5221   001E16  D002               	goto	L5
  5222   001E18                     i2l4295:
  5223                           
  5224                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5225   001E18  5009               	movf	draw_hex8@c^0,w,c
  5226   001E1A  0F10               	addlw	16
  5227   001E1C                     L5:
  5228   001E1C  6E09               	movwf	draw_hex8@c^0,c
  5229   001E1E  D001               	goto	i2l4297
  5230   001E20                     i2l1290:
  5231                           
  5232                           ;afficheur.c: 270: __nop();
  5233   001E20  F000               	nop	
  5234   001E22                     i2l4297:
  5235   001E22  0EC0               	movlw	192
  5236   001E24  6E05               	movwf	d1command@cmd^0,c
  5237   001E26  5009               	movf	draw_hex8@c^0,w,c
  5238   001E28  ECE6  F00F         	call	_d1command
  5239   001E2C  0900               	iorlw	0
  5240   001E2E  A4D8               	btfss	status,2,c
  5241   001E30  0012               	return	
  5242   001E32  D7F6               	goto	i2l1290
  5243   001E34                     __end_of_draw_hex8:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _clear_text *****************
  5247 ;; Defined at:
  5248 ;;		line 307 in file "afficheur.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  add             2    8[COMRAM] unsigned int 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;Total ram usage:        2 bytes
  5267 ;; Hardware stack levels used: 1
  5268 ;; Hardware stack levels required when called: 3
  5269 ;; This function calls:
  5270 ;;		_d1command
  5271 ;;		_d2command
  5272 ;; This function is called by:
  5273 ;;		_tache1
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text26
  5278   0020A6                     __ptext26:
  5279                           	callstack 0
  5280   0020A6                     _clear_text:
  5281                           	callstack 24
  5282                           
  5283                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5284                           
  5285                           ;incstack = 0
  5286   0020A6  0E00               	movlw	0
  5287   0020A8  6E05               	movwf	d2command@d2^0,c
  5288   0020AA  0E24               	movlw	36
  5289   0020AC  6E06               	movwf	d2command@cmd^0,c
  5290   0020AE  0E00               	movlw	0
  5291   0020B0  EC98  F00F         	call	_d2command
  5292                           
  5293                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5294   0020B4  0E00               	movlw	0
  5295   0020B6  6E0A               	movwf	(clear_text@add+1)^0,c
  5296   0020B8  0E00               	movlw	0
  5297   0020BA  6E09               	movwf	clear_text@add^0,c
  5298   0020BC                     i2l4249:
  5299                           
  5300                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5301   0020BC  0EC0               	movlw	192
  5302   0020BE  6E05               	movwf	d1command@cmd^0,c
  5303   0020C0  0E00               	movlw	0
  5304   0020C2  ECE6  F00F         	call	_d1command
  5305   0020C6  4A09               	infsnz	clear_text@add^0,f,c
  5306   0020C8  2A0A               	incf	(clear_text@add+1)^0,f,c
  5307   0020CA  0E80               	movlw	128
  5308   0020CC  180A               	xorwf	(clear_text@add+1)^0,w,c
  5309   0020CE  1009               	iorwf	clear_text@add^0,w,c
  5310   0020D0  B4D8               	btfsc	status,2,c
  5311   0020D2  0012               	return	
  5312   0020D4  D7F3               	goto	i2l4249
  5313   0020D6                     __end_of_clear_text:
  5314                           	callstack 0
  5315                           
  5316 ;; *************** function _clear_line *****************
  5317 ;; Defined at:
  5318 ;;		line 318 in file "afficheur.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  line            1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  line            1   14[COMRAM] unsigned char 
  5323 ;;  column          1   15[COMRAM] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;Total ram usage:        2 bytes
  5338 ;; Hardware stack levels used: 1
  5339 ;; Hardware stack levels required when called: 4
  5340 ;; This function calls:
  5341 ;;		_draw_char
  5342 ;;		_goto_lico
  5343 ;; This function is called by:
  5344 ;;		_tache1
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text27
  5349   0021C0                     __ptext27:
  5350                           	callstack 0
  5351   0021C0                     _clear_line:
  5352                           	callstack 23
  5353                           
  5354                           ;incstack = 0
  5355                           ;clear_line@line stored from wreg
  5356   0021C0  6E0F               	movwf	clear_line@line^0,c
  5357                           
  5358                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5359   0021C2  0E00               	movlw	0
  5360   0021C4  6E10               	movwf	clear_line@column^0,c
  5361   0021C6                     i2l4309:
  5362                           
  5363                           ;afficheur.c: 321: goto_lico(line, column);
  5364   0021C6  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5365   0021CA  500F               	movf	clear_line@line^0,w,c
  5366   0021CC  EC1A  F00F         	call	_goto_lico
  5367                           
  5368                           ;afficheur.c: 322: draw_char(' ');
  5369   0021D0  0E20               	movlw	32
  5370   0021D2  EC3A  F010         	call	_draw_char
  5371   0021D6  2A10               	incf	clear_line@column^0,f,c
  5372   0021D8  0E27               	movlw	39
  5373   0021DA  6410               	cpfsgt	clear_line@column^0,c
  5374   0021DC  D7F4               	goto	i2l4309
  5375   0021DE  0012               	return	
  5376   0021E0                     __end_of_clear_line:
  5377                           	callstack 0
  5378                           
  5379 ;; *************** function _draw_char *****************
  5380 ;; Defined at:
  5381 ;;		line 228 in file "afficheur.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;  dccar           1    wreg     unsigned char 
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;  dccar           1    7[COMRAM] unsigned char 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, status,2, status,0, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5399 ;;Total ram usage:        1 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 3
  5402 ;; This function calls:
  5403 ;;		_d1command
  5404 ;; This function is called by:
  5405 ;;		_tache1
  5406 ;;		_clear_line
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text28
  5411   002074                     __ptext28:
  5412                           	callstack 0
  5413   002074                     _draw_char:
  5414                           	callstack 24
  5415                           
  5416                           ;incstack = 0
  5417                           ;draw_char@dccar stored from wreg
  5418   002074  6E08               	movwf	draw_char@dccar^0,c
  5419                           
  5420                           ;afficheur.c: 230: if (dccar<32)
  5421   002076  0E20               	movlw	32
  5422   002078  6008               	cpfslt	draw_char@dccar^0,c
  5423   00207A  D002               	goto	i2l4165
  5424                           
  5425                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5426   00207C  0E3F               	movlw	63
  5427   00207E  6E08               	movwf	draw_char@dccar^0,c
  5428   002080                     i2l4165:
  5429                           
  5430                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5431   002080  0E9F               	movlw	159
  5432   002082  6408               	cpfsgt	draw_char@dccar^0,c
  5433   002084  D002               	goto	i2l4169
  5434                           
  5435                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5436   002086  0E3F               	movlw	63
  5437   002088  6E08               	movwf	draw_char@dccar^0,c
  5438   00208A                     i2l4169:
  5439                           
  5440                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5441   00208A  5008               	movf	draw_char@dccar^0,w,c
  5442   00208C  0FE0               	addlw	224
  5443   00208E  6E08               	movwf	draw_char@dccar^0,c
  5444                           
  5445                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5446   002090  D001               	goto	i2l4171
  5447   002092                     i2l1266:
  5448   002092  F000               	nop	
  5449   002094                     i2l4171:
  5450   002094  0EC0               	movlw	192
  5451   002096  6E05               	movwf	d1command@cmd^0,c
  5452   002098  5008               	movf	draw_char@dccar^0,w,c
  5453   00209A  ECE6  F00F         	call	_d1command
  5454   00209E  0900               	iorlw	0
  5455   0020A0  A4D8               	btfss	status,2,c
  5456   0020A2  0012               	return	
  5457   0020A4  D7F6               	goto	i2l1266
  5458   0020A6                     __end_of_draw_char:
  5459                           	callstack 0
  5460                           
  5461 ;; *************** function _clear_graphics *****************
  5462 ;; Defined at:
  5463 ;;		line 368 in file "afficheur.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  add             2    8[COMRAM] unsigned int 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      void 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;Total ram usage:        2 bytes
  5482 ;; Hardware stack levels used: 1
  5483 ;; Hardware stack levels required when called: 3
  5484 ;; This function calls:
  5485 ;;		_d1command
  5486 ;;		_d2command
  5487 ;; This function is called by:
  5488 ;;		_tache1
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text29
  5493   0020D6                     __ptext29:
  5494                           	callstack 0
  5495   0020D6                     _clear_graphics:
  5496                           	callstack 24
  5497                           
  5498                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5499                           
  5500                           ;incstack = 0
  5501   0020D6  0E80               	movlw	128
  5502   0020D8  6E05               	movwf	d2command@d2^0,c
  5503   0020DA  0E24               	movlw	36
  5504   0020DC  6E06               	movwf	d2command@cmd^0,c
  5505   0020DE  0E00               	movlw	0
  5506   0020E0  EC98  F00F         	call	_d2command
  5507                           
  5508                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5509   0020E4  0E80               	movlw	128
  5510   0020E6  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5511   0020E8  0E00               	movlw	0
  5512   0020EA  6E09               	movwf	clear_graphics@add^0,c
  5513   0020EC                     i2l4263:
  5514                           
  5515                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5516   0020EC  0EC0               	movlw	192
  5517   0020EE  6E05               	movwf	d1command@cmd^0,c
  5518   0020F0  0E00               	movlw	0
  5519   0020F2  ECE6  F00F         	call	_d1command
  5520   0020F6  4A09               	infsnz	clear_graphics@add^0,f,c
  5521   0020F8  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5522   0020FA  0EF8               	movlw	248
  5523   0020FC  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5524   0020FE  1009               	iorwf	clear_graphics@add^0,w,c
  5525   002100  B4D8               	btfsc	status,2,c
  5526   002102  0012               	return	
  5527   002104  D7F3               	goto	i2l4263
  5528   002106                     __end_of_clear_graphics:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function _charger *****************
  5532 ;; Defined at:
  5533 ;;		line 432 in file "afficheur.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;Total ram usage:        0 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; Hardware stack levels required when called: 4
  5554 ;; This function calls:
  5555 ;;		_draw_string
  5556 ;;		_goto_lico
  5557 ;; This function is called by:
  5558 ;;		_tache1
  5559 ;; This function uses a non-reentrant model
  5560 ;;
  5561                           
  5562                           	psect	text30
  5563   002290                     __ptext30:
  5564                           	callstack 0
  5565   002290                     _charger:
  5566                           	callstack 23
  5567                           
  5568                           ;afficheur.c: 434: goto_lico(14,0);
  5569                           
  5570                           ;incstack = 0
  5571   002290  0E00               	movlw	0
  5572   002292  6E09               	movwf	goto_lico@colonne^0,c
  5573   002294  0E0E               	movlw	14
  5574   002296  EC1A  F00F         	call	_goto_lico
  5575                           
  5576                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5577   00229A  0E01               	movlw	low STR_22
  5578   00229C  6E08               	movwf	draw_string@tableau^0,c
  5579   00229E  0E10               	movlw	high STR_22
  5580   0022A0  6E09               	movwf	(draw_string@tableau+1)^0,c
  5581   0022A2  EC2C  F00E         	call	_draw_string	;wreg free
  5582   0022A6  0012               	return		;funcret
  5583   0022A8                     __end_of_charger:
  5584                           	callstack 0
  5585                           
  5586 ;; *************** function _goto_lico *****************
  5587 ;; Defined at:
  5588 ;;		line 295 in file "afficheur.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  ligne           1    wreg     unsigned char 
  5591 ;;  colonne         1    8[COMRAM] unsigned char 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  ligne           1   11[COMRAM] unsigned char 
  5594 ;;  adr             2   12[COMRAM] unsigned int 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  1    wreg      void 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5604 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5605 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;Total ram usage:        6 bytes
  5609 ;; Hardware stack levels used: 1
  5610 ;; Hardware stack levels required when called: 3
  5611 ;; This function calls:
  5612 ;;		_d2command
  5613 ;; This function is called by:
  5614 ;;		_tache1
  5615 ;;		_clear_line
  5616 ;;		_charger
  5617 ;;		_vide
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text31
  5622   001E34                     __ptext31:
  5623                           	callstack 0
  5624   001E34                     _goto_lico:
  5625                           	callstack 23
  5626                           
  5627                           ;incstack = 0
  5628                           ;goto_lico@ligne stored from wreg
  5629   001E34  6E0C               	movwf	goto_lico@ligne^0,c
  5630                           
  5631                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  5632   001E36  0E7B               	movlw	123
  5633   001E38  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5634   001E3A  0E00               	movlw	0
  5635   001E3C  6E0D               	movwf	goto_lico@adr^0,c
  5636                           
  5637                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  5638   001E3E  0E0F               	movlw	15
  5639   001E40  640C               	cpfsgt	goto_lico@ligne^0,c
  5640   001E42  D002               	goto	i2l4153
  5641   001E44  0E00               	movlw	0
  5642   001E46  6E0C               	movwf	goto_lico@ligne^0,c
  5643   001E48                     i2l4153:
  5644                           
  5645                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  5646   001E48  0E27               	movlw	39
  5647   001E4A  6409               	cpfsgt	goto_lico@colonne^0,c
  5648   001E4C  D002               	goto	i2l4157
  5649   001E4E  0E00               	movlw	0
  5650   001E50  6E09               	movwf	goto_lico@colonne^0,c
  5651   001E52                     i2l4157:
  5652                           
  5653                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  5654   001E52  500C               	movf	goto_lico@ligne^0,w,c
  5655   001E54  0D28               	mullw	40
  5656   001E56  CFF3 F00A          	movff	prodl,??_goto_lico
  5657   001E5A  CFF4 F00B          	movff	prodh,??_goto_lico+1
  5658   001E5E  5009               	movf	goto_lico@colonne^0,w,c
  5659   001E60  260A               	addwf	??_goto_lico^0,f,c
  5660   001E62  0E00               	movlw	0
  5661   001E64  220B               	addwfc	(??_goto_lico+1)^0,f,c
  5662   001E66  500D               	movf	goto_lico@adr^0,w,c
  5663   001E68  240A               	addwf	??_goto_lico^0,w,c
  5664   001E6A  6E0D               	movwf	goto_lico@adr^0,c
  5665   001E6C  500E               	movf	(goto_lico@adr+1)^0,w,c
  5666   001E6E  200B               	addwfc	(??_goto_lico+1)^0,w,c
  5667   001E70  6E0E               	movwf	(goto_lico@adr+1)^0,c
  5668                           
  5669                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  5670   001E72  D001               	goto	i2l4159
  5671   001E74                     i2l1310:
  5672                           
  5673                           ;afficheur.c: 304: __nop();
  5674   001E74  F000               	nop	
  5675   001E76                     i2l4159:
  5676   001E76  500E               	movf	(goto_lico@adr+1)^0,w,c
  5677   001E78  6E05               	movwf	d2command@d2^0,c
  5678   001E7A  0E24               	movlw	36
  5679   001E7C  6E06               	movwf	d2command@cmd^0,c
  5680   001E7E  500D               	movf	goto_lico@adr^0,w,c
  5681   001E80  EC98  F00F         	call	_d2command
  5682   001E84  0900               	iorlw	0
  5683   001E86  A4D8               	btfss	status,2,c
  5684   001E88  0012               	return	
  5685   001E8A  D7F4               	goto	i2l1310
  5686   001E8C                     __end_of_goto_lico:
  5687                           	callstack 0
  5688                           
  5689 ;; *************** function _d2command *****************
  5690 ;; Defined at:
  5691 ;;		line 128 in file "afficheur.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  d1              1    wreg     unsigned char 
  5694 ;;  d2              1    4[COMRAM] unsigned char 
  5695 ;;  cmd             1    5[COMRAM] unsigned char 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  d1              1    6[COMRAM] unsigned char 
  5698 ;;  res             1    7[COMRAM] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      unsigned char 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;Total ram usage:        4 bytes
  5713 ;; Hardware stack levels used: 1
  5714 ;; Hardware stack levels required when called: 2
  5715 ;; This function calls:
  5716 ;;		_delai_us_char
  5717 ;;		_wait_status_ok
  5718 ;;		_write_c_aff
  5719 ;;		_write_d_aff
  5720 ;; This function is called by:
  5721 ;;		_initialisation_afficheur
  5722 ;;		_goto_lico
  5723 ;;		_clear_text
  5724 ;;		_clear_graphics
  5725 ;;		_plot1
  5726 ;;		_clear_cgram
  5727 ;;		_plot0
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text32
  5732   001F30                     __ptext32:
  5733                           	callstack 0
  5734   001F30                     _d2command:
  5735                           	callstack 23
  5736                           
  5737                           ;incstack = 0
  5738                           ;d2command@d1 stored from wreg
  5739   001F30  6E07               	movwf	d2command@d1^0,c
  5740                           
  5741                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  5742   001F32  0E00               	movlw	0
  5743   001F34  6E08               	movwf	d2command@res^0,c
  5744                           
  5745                           ;afficheur.c: 134: if (wait_status_ok()==1)
  5746   001F36  EC6F  F00F         	call	_wait_status_ok	;wreg free
  5747   001F3A  06E8               	decf	wreg,f,c
  5748   001F3C  A4D8               	btfss	status,2,c
  5749   001F3E  D01E               	goto	i2l4063
  5750                           
  5751                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  5752   001F40  0E0C               	movlw	12
  5753   001F42  ECCF  F010         	call	_delai_us_char
  5754                           
  5755                           ;afficheur.c: 137: write_d_aff(d1);
  5756   001F46  5007               	movf	d2command@d1^0,w,c
  5757   001F48  EC0A  F011         	call	_write_d_aff
  5758                           
  5759                           ;afficheur.c: 138: if (wait_status_ok()==1)
  5760   001F4C  EC6F  F00F         	call	_wait_status_ok	;wreg free
  5761   001F50  06E8               	decf	wreg,f,c
  5762   001F52  A4D8               	btfss	status,2,c
  5763   001F54  D013               	goto	i2l4063
  5764                           
  5765                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  5766   001F56  0E0C               	movlw	12
  5767   001F58  ECCF  F010         	call	_delai_us_char
  5768                           
  5769                           ;afficheur.c: 141: write_d_aff(d2);
  5770   001F5C  5005               	movf	d2command@d2^0,w,c
  5771   001F5E  EC0A  F011         	call	_write_d_aff
  5772                           
  5773                           ;afficheur.c: 142: if (wait_status_ok()==1)
  5774   001F62  EC6F  F00F         	call	_wait_status_ok	;wreg free
  5775   001F66  06E8               	decf	wreg,f,c
  5776   001F68  A4D8               	btfss	status,2,c
  5777   001F6A  D008               	goto	i2l4063
  5778                           
  5779                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  5780   001F6C  0E0C               	movlw	12
  5781   001F6E  ECCF  F010         	call	_delai_us_char
  5782                           
  5783                           ;afficheur.c: 145: write_c_aff(cmd);
  5784   001F72  5006               	movf	d2command@cmd^0,w,c
  5785   001F74  EC17  F011         	call	_write_c_aff
  5786                           
  5787                           ;afficheur.c: 147: res=1;
  5788   001F78  0E01               	movlw	1
  5789   001F7A  6E08               	movwf	d2command@res^0,c
  5790   001F7C                     i2l4063:
  5791                           
  5792                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  5793   001F7C  5008               	movf	d2command@res^0,w,c
  5794   001F7E  0012               	return		;funcret
  5795   001F80                     __end_of_d2command:
  5796                           	callstack 0
  5797                           
  5798 ;; *************** function _draw_string *****************
  5799 ;; Defined at:
  5800 ;;		line 242 in file "afficheur.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  5803 ;;		 -> STR_23(14), STR_22(29), STR_21(4), STR_20(3), 
  5804 ;;		 -> STR_19(8), STR_18(5), STR_17(8), STR_16(12), 
  5805 ;;		 -> STR_15(12), STR_14(21), STR_13(7), STR_12(6), 
  5806 ;;		 -> STR_11(6), STR_10(10), STR_9(9), STR_8(6), 
  5807 ;;		 -> STR_7(13), STR_6(11), STR_5(7), STR_4(3), 
  5808 ;;		 -> STR_3(3), STR_2(3), STR_1(8), RAM(3861), 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;		None
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:        2 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 3
  5827 ;; This function calls:
  5828 ;;		_d1command
  5829 ;; This function is called by:
  5830 ;;		_tache1
  5831 ;;		_charger
  5832 ;;		_vide
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text33
  5837   001C58                     __ptext33:
  5838                           	callstack 0
  5839   001C58                     _draw_string:
  5840                           	callstack 23
  5841                           
  5842                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  5843                           
  5844                           ;incstack = 0
  5845   001C58  D01C               	goto	i2l4179
  5846   001C5A                     i2l1274:
  5847                           
  5848                           ;afficheur.c: 247: __nop();
  5849   001C5A  F000               	nop	
  5850   001C5C                     i2l4175:
  5851   001C5C  0EC0               	movlw	192
  5852   001C5E  6E05               	movwf	d1command@cmd^0,c
  5853   001C60  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5854   001C64  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5855   001C68  0E00               	movlw	low (__smallconst shr (0+16))
  5856   001C6A  6EF8               	movwf	tblptru,c
  5857   001C6C  0E0F               	movlw	(high __ramtop+-1)
  5858   001C6E  64F7               	cpfsgt	tblptrh,c
  5859   001C70  D003               	bra	i2u220_47
  5860   001C72  0008               	tblrd		*
  5861   001C74  50F5               	movf	tablat,w,c
  5862   001C76  D005               	bra	i2u220_40
  5863   001C78                     i2u220_47:
  5864   001C78  CFF6 FFE9          	movff	tblptrl,fsr0l
  5865   001C7C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5866   001C80  50EF               	movf	indf0,w,c
  5867   001C82                     i2u220_40:
  5868   001C82  0FE0               	addlw	224
  5869   001C84  ECE6  F00F         	call	_d1command
  5870   001C88  0900               	iorlw	0
  5871   001C8A  B4D8               	btfsc	status,2,c
  5872   001C8C  D7E6               	goto	i2l1274
  5873                           
  5874                           ;afficheur.c: 248: tableau++;
  5875   001C8E  4A08               	infsnz	draw_string@tableau^0,f,c
  5876   001C90  2A09               	incf	(draw_string@tableau+1)^0,f,c
  5877   001C92                     i2l4179:
  5878   001C92  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5879   001C96  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5880   001C9A  0E00               	movlw	low (__smallconst shr (0+16))
  5881   001C9C  6EF8               	movwf	tblptru,c
  5882   001C9E  0E0F               	movlw	(high __ramtop+-1)
  5883   001CA0  64F7               	cpfsgt	tblptrh,c
  5884   001CA2  D003               	bra	i2u222_47
  5885   001CA4  0008               	tblrd		*
  5886   001CA6  50F5               	movf	tablat,w,c
  5887   001CA8  D005               	bra	i2u222_40
  5888   001CAA                     i2u222_47:
  5889   001CAA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5890   001CAE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5891   001CB2  50EF               	movf	indf0,w,c
  5892   001CB4                     i2u222_40:
  5893   001CB4  0900               	iorlw	0
  5894   001CB6  B4D8               	btfsc	status,2,c
  5895   001CB8  0012               	return	
  5896   001CBA  C008  FFF6         	movff	draw_string@tableau,tblptrl
  5897   001CBE  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  5898   001CC2  0E00               	movlw	low (__smallconst shr (0+16))
  5899   001CC4  6EF8               	movwf	tblptru,c
  5900   001CC6  0E0F               	movlw	(high __ramtop+-1)
  5901   001CC8  64F7               	cpfsgt	tblptrh,c
  5902   001CCA  D003               	bra	i2u224_47
  5903   001CCC  0008               	tblrd		*
  5904   001CCE  50F5               	movf	tablat,w,c
  5905   001CD0  D005               	bra	i2u224_40
  5906   001CD2                     i2u224_47:
  5907   001CD2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5908   001CD6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5909   001CDA  50EF               	movf	indf0,w,c
  5910   001CDC                     i2u224_40:
  5911   001CDC  0900               	iorlw	0
  5912   001CDE  B4D8               	btfsc	status,2,c
  5913   001CE0  0012               	return	
  5914   001CE2  D7BC               	goto	i2l4175
  5915   001CE4                     __end_of_draw_string:
  5916                           	callstack 0
  5917                           
  5918 ;; *************** function _d1command *****************
  5919 ;; Defined at:
  5920 ;;		line 106 in file "afficheur.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;  d1              1    wreg     unsigned char 
  5923 ;;  cmd             1    4[COMRAM] unsigned char 
  5924 ;; Auto vars:     Size  Location     Type
  5925 ;;  d1              1    5[COMRAM] unsigned char 
  5926 ;;  res             1    6[COMRAM] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      unsigned char 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5936 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;Total ram usage:        3 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; Hardware stack levels required when called: 2
  5943 ;; This function calls:
  5944 ;;		_delai_us_char
  5945 ;;		_wait_status_ok
  5946 ;;		_write_c_aff
  5947 ;;		_write_d_aff
  5948 ;; This function is called by:
  5949 ;;		_initialisation_afficheur
  5950 ;;		_draw_char
  5951 ;;		_draw_string
  5952 ;;		_draw_hex8
  5953 ;;		_clear_text
  5954 ;;		_clear_graphics
  5955 ;;		_draw_dec8
  5956 ;;		_clear_cgram
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text34
  5961   001FCC                     __ptext34:
  5962                           	callstack 0
  5963   001FCC                     _d1command:
  5964                           	callstack 23
  5965                           
  5966                           ;incstack = 0
  5967                           ;d1command@d1 stored from wreg
  5968   001FCC  6E06               	movwf	d1command@d1^0,c
  5969                           
  5970                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  5971   001FCE  0E00               	movlw	0
  5972   001FD0  6E07               	movwf	d1command@res^0,c
  5973                           
  5974                           ;afficheur.c: 112: if (wait_status_ok()==1)
  5975   001FD2  EC6F  F00F         	call	_wait_status_ok	;wreg free
  5976   001FD6  06E8               	decf	wreg,f,c
  5977   001FD8  A4D8               	btfss	status,2,c
  5978   001FDA  D013               	goto	i2l4037
  5979                           
  5980                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  5981   001FDC  0E0C               	movlw	12
  5982   001FDE  ECCF  F010         	call	_delai_us_char
  5983                           
  5984                           ;afficheur.c: 115: write_d_aff(d1);
  5985   001FE2  5006               	movf	d1command@d1^0,w,c
  5986   001FE4  EC0A  F011         	call	_write_d_aff
  5987                           
  5988                           ;afficheur.c: 116: if (wait_status_ok()==1)
  5989   001FE8  EC6F  F00F         	call	_wait_status_ok	;wreg free
  5990   001FEC  06E8               	decf	wreg,f,c
  5991   001FEE  A4D8               	btfss	status,2,c
  5992   001FF0  D008               	goto	i2l4037
  5993                           
  5994                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  5995   001FF2  0E0C               	movlw	12
  5996   001FF4  ECCF  F010         	call	_delai_us_char
  5997                           
  5998                           ;afficheur.c: 119: write_c_aff(cmd);
  5999   001FF8  5005               	movf	d1command@cmd^0,w,c
  6000   001FFA  EC17  F011         	call	_write_c_aff
  6001                           
  6002                           ;afficheur.c: 121: res=1;
  6003   001FFE  0E01               	movlw	1
  6004   002000  6E07               	movwf	d1command@res^0,c
  6005   002002                     i2l4037:
  6006                           
  6007                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6008   002002  5007               	movf	d1command@res^0,w,c
  6009   002004  0012               	return		;funcret
  6010   002006                     __end_of_d1command:
  6011                           	callstack 0
  6012                           
  6013 ;; *************** function _write_d_aff *****************
  6014 ;; Defined at:
  6015 ;;		line 4 in file "afficheur.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;  data            1    wreg     unsigned char 
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;  data            1    0[COMRAM] unsigned char 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  1    wreg      void 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;Total ram usage:        1 bytes
  6034 ;; Hardware stack levels used: 1
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_d1command
  6039 ;;		_d2command
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text35
  6044   002214                     __ptext35:
  6045                           	callstack 0
  6046   002214                     _write_d_aff:
  6047                           	callstack 24
  6048                           
  6049                           ;incstack = 0
  6050                           ;write_d_aff@data stored from wreg
  6051   002214  6E01               	movwf	write_d_aff@data^0,c
  6052                           
  6053                           ;afficheur.c: 6: LATH=data;
  6054   002216  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6055                           
  6056                           ;afficheur.c: 7: TRISH=0x00;
  6057   00221A  0E00               	movlw	0
  6058   00221C  6E99               	movwf	153,c	;volatile
  6059                           
  6060                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6061   00221E  9091               	bcf	145,0,c	;volatile
  6062                           
  6063                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6064   002220  9691               	bcf	145,3,c	;volatile
  6065                           
  6066                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6067   002222  9491               	bcf	145,2,c	;volatile
  6068                           
  6069                           ;afficheur.c: 11: __nop();
  6070   002224  F000               	nop	
  6071                           
  6072                           ;afficheur.c: 12: __nop();
  6073   002226  F000               	nop	
  6074                           
  6075                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6076   002228  8491               	bsf	145,2,c	;volatile
  6077                           
  6078                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6079   00222A  8691               	bsf	145,3,c	;volatile
  6080   00222C  0012               	return		;funcret
  6081   00222E                     __end_of_write_d_aff:
  6082                           	callstack 0
  6083                           
  6084 ;; *************** function _write_c_aff *****************
  6085 ;; Defined at:
  6086 ;;		line 17 in file "afficheur.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  command         1    wreg     unsigned char 
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;  command         1    0[COMRAM] unsigned char 
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, status,2
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;Total ram usage:        1 bytes
  6105 ;; Hardware stack levels used: 1
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_command
  6110 ;;		_d1command
  6111 ;;		_d2command
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text36
  6116   00222E                     __ptext36:
  6117                           	callstack 0
  6118   00222E                     _write_c_aff:
  6119                           	callstack 24
  6120                           
  6121                           ;incstack = 0
  6122                           ;write_c_aff@command stored from wreg
  6123   00222E  6E01               	movwf	write_c_aff@command^0,c
  6124                           
  6125                           ;afficheur.c: 19: LATH=command;
  6126   002230  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6127                           
  6128                           ;afficheur.c: 20: TRISH=0x00;
  6129   002234  0E00               	movlw	0
  6130   002236  6E99               	movwf	153,c	;volatile
  6131                           
  6132                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6133   002238  8091               	bsf	145,0,c	;volatile
  6134                           
  6135                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6136   00223A  9691               	bcf	145,3,c	;volatile
  6137                           
  6138                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6139   00223C  9491               	bcf	145,2,c	;volatile
  6140                           
  6141                           ;afficheur.c: 24: __nop();
  6142   00223E  F000               	nop	
  6143                           
  6144                           ;afficheur.c: 25: __nop();
  6145   002240  F000               	nop	
  6146                           
  6147                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6148   002242  8491               	bsf	145,2,c	;volatile
  6149                           
  6150                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6151   002244  8691               	bsf	145,3,c	;volatile
  6152   002246  0012               	return		;funcret
  6153   002248                     __end_of_write_c_aff:
  6154                           	callstack 0
  6155                           
  6156 ;; *************** function _wait_status_ok *****************
  6157 ;; Defined at:
  6158 ;;		line 53 in file "afficheur.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;		None
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  res             1    3[COMRAM] unsigned char 
  6163 ;;  status          1    2[COMRAM] unsigned char 
  6164 ;;  err             1    1[COMRAM] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      unsigned char 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        3 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 1
  6181 ;; This function calls:
  6182 ;;		_delai_us_char
  6183 ;; This function is called by:
  6184 ;;		_command
  6185 ;;		_d1command
  6186 ;;		_d2command
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text37
  6191   001EDE                     __ptext37:
  6192                           	callstack 0
  6193   001EDE                     _wait_status_ok:
  6194                           	callstack 23
  6195                           
  6196                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6197                           
  6198                           ;incstack = 0
  6199   001EDE  0E00               	movlw	0
  6200   001EE0  6E02               	movwf	wait_status_ok@err^0,c
  6201                           
  6202                           ;afficheur.c: 58: res=2;
  6203   001EE2  0E02               	movlw	2
  6204   001EE4  D01E               	goto	L6
  6205   001EE6                     i2l1224:
  6206                           
  6207                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6208   001EE6  6899               	setf	153,c	;volatile
  6209                           
  6210                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6211   001EE8  8091               	bsf	145,0,c	;volatile
  6212                           
  6213                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6214   001EEA  9691               	bcf	145,3,c	;volatile
  6215                           
  6216                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6217   001EEC  9291               	bcf	145,1,c	;volatile
  6218                           
  6219                           ;afficheur.c: 65: __nop();
  6220   001EEE  F000               	nop	
  6221                           
  6222                           ;afficheur.c: 66: status=PORTH;
  6223   001EF0  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6224                           
  6225                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6226   001EF4  8291               	bsf	145,1,c	;volatile
  6227                           
  6228                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6229   001EF6  8691               	bsf	145,3,c	;volatile
  6230                           
  6231                           ;afficheur.c: 70: status=(status&0x03);
  6232   001EF8  5003               	movf	wait_status_ok@status^0,w,c
  6233   001EFA  0B03               	andlw	3
  6234   001EFC  6E03               	movwf	wait_status_ok@status^0,c
  6235                           
  6236                           ;afficheur.c: 71: if (status!=0x03)
  6237   001EFE  0E03               	movlw	3
  6238   001F00  1803               	xorwf	wait_status_ok@status^0,w,c
  6239   001F02  B4D8               	btfsc	status,2,c
  6240   001F04  D00D               	goto	i2l2489
  6241                           
  6242                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6243   001F06  2A02               	incf	wait_status_ok@err^0,f,c
  6244                           
  6245                           ;afficheur.c: 74: delai_us_char(12);
  6246   001F08  0E0C               	movlw	12
  6247   001F0A  ECCF  F010         	call	_delai_us_char
  6248                           
  6249                           ;afficheur.c: 75: if (err>=250)
  6250   001F0E  0EF9               	movlw	249
  6251   001F10  6402               	cpfsgt	wait_status_ok@err^0,c
  6252   001F12  D008               	goto	i2l2491
  6253                           
  6254                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6255   001F14  9EF2               	bcf	242,7,c	;volatile
  6256                           
  6257                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6258   001F16  948B               	bcf	139,2,c	;volatile
  6259   001F18  828B               	bsf	139,1,c	;volatile
  6260   001F1A  808F               	bsf	143,0,c	;volatile
  6261                           
  6262                           ;afficheur.c: 79: res=0;
  6263   001F1C  0E00               	movlw	0
  6264   001F1E  D001               	goto	L6
  6265   001F20                     i2l2489:
  6266                           
  6267                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6268   001F20  0E01               	movlw	1
  6269   001F22                     L6:
  6270   001F22  6E04               	movwf	wait_status_ok@res^0,c
  6271   001F24                     i2l2491:
  6272   001F24  0E02               	movlw	2
  6273   001F26  1804               	xorwf	wait_status_ok@res^0,w,c
  6274   001F28  B4D8               	btfsc	status,2,c
  6275   001F2A  D7DD               	goto	i2l1224
  6276                           
  6277                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6278   001F2C  5004               	movf	wait_status_ok@res^0,w,c
  6279   001F2E  0012               	return		;funcret
  6280   001F30                     __end_of_wait_status_ok:
  6281                           	callstack 0
  6282                           
  6283 ;; *************** function _delai_us_char *****************
  6284 ;; Defined at:
  6285 ;;		line 154 in file "afficheur.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  ucdelai         1    wreg     unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg, status,2, status,0
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;Total ram usage:        1 bytes
  6304 ;; Hardware stack levels used: 1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		_wait_status_ok
  6309 ;;		_command
  6310 ;;		_d1command
  6311 ;;		_d2command
  6312 ;;		_initialisation_afficheur
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text38
  6317   00219E                     __ptext38:
  6318                           	callstack 0
  6319   00219E                     _delai_us_char:
  6320                           	callstack 23
  6321                           
  6322                           ;incstack = 0
  6323                           ;delai_us_char@ucdelai stored from wreg
  6324   00219E  6E01               	movwf	delai_us_char@ucdelai^0,c
  6325                           
  6326                           ;afficheur.c: 157: while (ucdelai>0)
  6327   0021A0  D00B               	goto	i2l2437
  6328   0021A2                     i2l1248:
  6329                           
  6330                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6331   0021A2  F000               	nop	
  6332   0021A4  F000               	nop	
  6333   0021A6  F000               	nop	
  6334   0021A8  F000               	nop	
  6335   0021AA  F000               	nop	
  6336   0021AC  F000               	nop	
  6337   0021AE  F000               	nop	
  6338   0021B0  F000               	nop	
  6339   0021B2  F000               	nop	
  6340   0021B4  F000               	nop	
  6341                           
  6342                           ;afficheur.c: 160: ucdelai--;
  6343   0021B6  0601               	decf	delai_us_char@ucdelai^0,f,c
  6344   0021B8                     i2l2437:
  6345   0021B8  5001               	movf	delai_us_char@ucdelai^0,w,c
  6346   0021BA  B4D8               	btfsc	status,2,c
  6347   0021BC  0012               	return	
  6348   0021BE  D7F1               	goto	i2l1248
  6349   0021C0                     __end_of_delai_us_char:
  6350                           	callstack 0
  6351                           
  6352                           	psect	text39
  6353   000000                     __ptext39:
  6354                           	callstack 0
  6355                           
  6356                           	psect	rparam
  6357   000000                     
  6358                           	psect	temp
  6359   000023                     btemp:
  6360                           	callstack 0
  6361   000023                     	ds	12
  6362   000000                     wtemp0	set	btemp
  6363   000000                     wtemp1	set	btemp+2
  6364   000000                     wtemp2	set	btemp+4
  6365   000000                     wtemp3	set	btemp+6
  6366   000000                     wtemp4	set	btemp+8
  6367   000000                     wtemp5	set	btemp+10
  6368   000000                     wtemp8	set	btemp+1
  6369   000000                     ttemp0	set	btemp
  6370   000000                     ttemp1	set	btemp+3
  6371   000000                     ttemp2	set	btemp+6
  6372   000000                     ttemp3	set	btemp+9
  6373   000000                     ttemp5	set	btemp+1
  6374   000000                     ttemp6	set	btemp+4
  6375   000000                     ttemp7	set	btemp+8
  6376   000000                     ltemp0	set	btemp
  6377   000000                     ltemp1	set	btemp+4
  6378   000000                     ltemp2	set	btemp+8
  6379   000000                     lltemp0	set	btemp
  6380                           
  6381                           	psect	idloc
  6382                           
  6383                           ;Config register IDLOC0 @ 0x200000
  6384                           ;	unspecified, using default values
  6385   200000                     	org	2097152
  6386   200000  FF                 	db	255
  6387                           
  6388                           ;Config register IDLOC1 @ 0x200001
  6389                           ;	unspecified, using default values
  6390   200001                     	org	2097153
  6391   200001  FF                 	db	255
  6392                           
  6393                           ;Config register IDLOC2 @ 0x200002
  6394                           ;	unspecified, using default values
  6395   200002                     	org	2097154
  6396   200002  FF                 	db	255
  6397                           
  6398                           ;Config register IDLOC3 @ 0x200003
  6399                           ;	unspecified, using default values
  6400   200003                     	org	2097155
  6401   200003  FF                 	db	255
  6402                           
  6403                           ;Config register IDLOC4 @ 0x200004
  6404                           ;	unspecified, using default values
  6405   200004                     	org	2097156
  6406   200004  FF                 	db	255
  6407                           
  6408                           ;Config register IDLOC5 @ 0x200005
  6409                           ;	unspecified, using default values
  6410   200005                     	org	2097157
  6411   200005  FF                 	db	255
  6412                           
  6413                           ;Config register IDLOC6 @ 0x200006
  6414                           ;	unspecified, using default values
  6415   200006                     	org	2097158
  6416   200006  FF                 	db	255
  6417                           
  6418                           ;Config register IDLOC7 @ 0x200007
  6419                           ;	unspecified, using default values
  6420   200007                     	org	2097159
  6421   200007  FF                 	db	255
  6422                           
  6423                           	psect	config
  6424                           
  6425                           ;Config register CONFIG1L @ 0x300000
  6426                           ;	VREG Sleep Enable bit
  6427                           ;	RETEN = ON, Enabled
  6428                           ;	LF-INTOSC Low-power Enable bit
  6429                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6430                           ;	SOSC Power Selection and mode Configuration bits
  6431                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6432                           ;	Extended Instruction Set
  6433                           ;	XINST = OFF, Disabled
  6434   300000                     	org	3145728
  6435   300000  15                 	db	21
  6436                           
  6437                           ;Config register CONFIG1H @ 0x300001
  6438                           ;	Oscillator
  6439                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  6440                           ;	PLL x4 Enable bit
  6441                           ;	PLLCFG = ON, Enabled
  6442                           ;	Fail-Safe Clock Monitor
  6443                           ;	FCMEN = OFF, Disabled
  6444                           ;	Internal External Oscillator Switch Over Mode
  6445                           ;	IESO = OFF, Disabled
  6446   300001                     	org	3145729
  6447   300001  13                 	db	19
  6448                           
  6449                           ;Config register CONFIG2L @ 0x300002
  6450                           ;	Power Up Timer
  6451                           ;	PWRTEN = OFF, Disabled
  6452                           ;	Brown Out Detect
  6453                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  6454                           ;	Brown-out Reset Voltage bits
  6455                           ;	BORV = 0, 3.0V
  6456                           ;	BORMV Power level
  6457                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6458   300002                     	org	3145730
  6459   300002  61                 	db	97
  6460                           
  6461                           ;Config register CONFIG2H @ 0x300003
  6462                           ;	Watchdog Timer
  6463                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6464                           ;	Watchdog Postscaler
  6465                           ;	WDTPS = 1, 1:1
  6466   300003                     	org	3145731
  6467   300003  00                 	db	0
  6468                           
  6469                           ;Config register CONFIG3L @ 0x300004
  6470                           ;	RTCC Clock Select
  6471                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  6472                           ;	External Address Shift bit
  6473                           ;	EASHFT = OFF, Address Shifting disabled
  6474                           ;	Address Bus Width Select bits
  6475                           ;	ABW = MM, 8-bit address bus
  6476                           ;	Data Bus Width
  6477                           ;	BW = 8, 8-bit external bus mode
  6478                           ;	External Bus Wait
  6479                           ;	WAIT = ON, Enabled
  6480   300004                     	org	3145732
  6481   300004  30                 	db	48
  6482                           
  6483                           ;Config register CONFIG3H @ 0x300005
  6484                           ;	CCP2 Mux
  6485                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  6486                           ;	ECCP Mux
  6487                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  6488                           ;	MSSP address masking
  6489                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  6490                           ;	Master Clear Enable
  6491                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  6492   300005                     	org	3145733
  6493   300005  80                 	db	128
  6494                           
  6495                           ;Config register CONFIG4L @ 0x300006
  6496                           ;	Stack Overflow Reset
  6497                           ;	STVREN = ON, Enabled
  6498                           ;	Boot Block Size
  6499                           ;	BBSIZ = BB1K, 1K word Boot Block size
  6500                           ;	Background Debug
  6501                           ;	DEBUG = OFF, Disabled
  6502   300006                     	org	3145734
  6503   300006  81                 	db	129
  6504                           
  6505                           ; Padding undefined space
  6506   300007                     	org	3145735
  6507   300007  FF                 	db	255
  6508                           
  6509                           ;Config register CONFIG5L @ 0x300008
  6510                           ;	Code Protect 00800-03FFF
  6511                           ;	CP0 = OFF, Disabled
  6512                           ;	Code Protect 04000-07FFF
  6513                           ;	CP1 = OFF, Disabled
  6514                           ;	Code Protect 08000-0BFFF
  6515                           ;	CP2 = OFF, Disabled
  6516                           ;	Code Protect 0C000-0FFFF
  6517                           ;	CP3 = OFF, Disabled
  6518                           ;	Code Protect 10000-13FFF
  6519                           ;	CP4 = OFF, Disabled
  6520                           ;	Code Protect 14000-17FFF
  6521                           ;	CP5 = OFF, Disabled
  6522                           ;	Code Protect 18000-1BFFF
  6523                           ;	CP6 = OFF, Disabled
  6524                           ;	Code Protect 1C000-1FFFF
  6525                           ;	CP7 = OFF, Disabled
  6526   300008                     	org	3145736
  6527   300008  FF                 	db	255
  6528                           
  6529                           ;Config register CONFIG5H @ 0x300009
  6530                           ;	Code Protect Boot
  6531                           ;	CPB = OFF, Disabled
  6532                           ;	Data EE Read Protect
  6533                           ;	CPD = OFF, Disabled
  6534   300009                     	org	3145737
  6535   300009  C0                 	db	192
  6536                           
  6537                           ;Config register CONFIG6L @ 0x30000A
  6538                           ;	Table Write Protect 00800-03FFF
  6539                           ;	WRT0 = OFF, Disabled
  6540                           ;	Table Write Protect 04000-07FFF
  6541                           ;	WRT1 = OFF, Disabled
  6542                           ;	Table Write Protect 08000-0BFFF
  6543                           ;	WRT2 = OFF, Disabled
  6544                           ;	Table Write Protect 0C000-0FFFF
  6545                           ;	WRT3 = OFF, Disabled
  6546                           ;	Table Write Protect 10000-13FFF
  6547                           ;	WRT4 = OFF, Disabled
  6548                           ;	Table Write Protect 14000-17FFF
  6549                           ;	WRT5 = OFF, Disabled
  6550                           ;	Table Write Protect 18000-1BFFF
  6551                           ;	WRT6 = OFF, Disabled
  6552                           ;	Table Write Protect 1C000-1FFFF
  6553                           ;	WRT7 = OFF, Disabled
  6554   30000A                     	org	3145738
  6555   30000A  FF                 	db	255
  6556                           
  6557                           ;Config register CONFIG6H @ 0x30000B
  6558                           ;	Config. Write Protect
  6559                           ;	WRTC = OFF, Disabled
  6560                           ;	Table Write Protect Boot
  6561                           ;	WRTB = OFF, Disabled
  6562                           ;	Data EE Write Protect
  6563                           ;	WRTD = OFF, Disabled
  6564   30000B                     	org	3145739
  6565   30000B  E0                 	db	224
  6566                           
  6567                           ;Config register CONFIG7L @ 0x30000C
  6568                           ;	Table Read Protect 00800-03FFF
  6569                           ;	EBRT0 = OFF, Disabled
  6570                           ;	Table Read Protect 04000-07FFF
  6571                           ;	EBRT1 = OFF, Disabled
  6572                           ;	Table Read Protect 08000-0BFFF
  6573                           ;	EBRT2 = OFF, Disabled
  6574                           ;	Table Read Protect 0C000-0FFFF
  6575                           ;	EBRT3 = OFF, Disabled
  6576                           ;	Table Read Protect 10000-13FFF
  6577                           ;	EBRT4 = OFF, Disabled
  6578                           ;	Table Read Protect 14000-17FFF
  6579                           ;	EBRT5 = OFF, Disabled
  6580                           ;	Table Read Protect 18000-1BFFF
  6581                           ;	EBRT6 = OFF, Disabled
  6582                           ;	Table Read Protect 1C000-1FFFF
  6583                           ;	EBRT7 = OFF, Disabled
  6584   30000C                     	org	3145740
  6585   30000C  FF                 	db	255
  6586                           
  6587                           ;Config register CONFIG7H @ 0x30000D
  6588                           ;	Table Read Protect Boot
  6589                           ;	EBRTB = OFF, Disabled
  6590   30000D                     	org	3145741
  6591   30000D  40                 	db	64
  6592                           tosu	equ	0xFFF
  6593                           tosh	equ	0xFFE
  6594                           tosl	equ	0xFFD
  6595                           stkptr	equ	0xFFC
  6596                           pclatu	equ	0xFFB
  6597                           pclath	equ	0xFFA
  6598                           pcl	equ	0xFF9
  6599                           tblptru	equ	0xFF8
  6600                           tblptrh	equ	0xFF7
  6601                           tblptrl	equ	0xFF6
  6602                           tablat	equ	0xFF5
  6603                           prodh	equ	0xFF4
  6604                           prodl	equ	0xFF3
  6605                           indf0	equ	0xFEF
  6606                           postinc0	equ	0xFEE
  6607                           postdec0	equ	0xFED
  6608                           preinc0	equ	0xFEC
  6609                           plusw0	equ	0xFEB
  6610                           fsr0h	equ	0xFEA
  6611                           fsr0l	equ	0xFE9
  6612                           wreg	equ	0xFE8
  6613                           indf1	equ	0xFE7
  6614                           postinc1	equ	0xFE6
  6615                           postdec1	equ	0xFE5
  6616                           preinc1	equ	0xFE4
  6617                           plusw1	equ	0xFE3
  6618                           fsr1h	equ	0xFE2
  6619                           fsr1l	equ	0xFE1
  6620                           bsr	equ	0xFE0
  6621                           indf2	equ	0xFDF
  6622                           postinc2	equ	0xFDE
  6623                           postdec2	equ	0xFDD
  6624                           preinc2	equ	0xFDC
  6625                           plusw2	equ	0xFDB
  6626                           fsr2h	equ	0xFDA
  6627                           fsr2l	equ	0xFD9
  6628                           status	equ	0xFD8

Data Sizes:
    Strings     202
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     34      46
    BANK0           126      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_23(CODE[14]), STR_22(CODE[29]), STR_21(CODE[4]), STR_20(CODE[3]), 
		 -> STR_19(CODE[8]), STR_18(CODE[5]), STR_17(CODE[8]), STR_16(CODE[12]), 
		 -> STR_15(CODE[12]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[10]), STR_9(CODE[9]), STR_8(CODE[6]), 
		 -> STR_7(CODE[13]), STR_6(CODE[11]), STR_5(CODE[7]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   49730
                                             21 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     755
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   47968
                                             20 COMRAM     1     1      0
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
                               _vide
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    6885
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5184
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4416
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5175
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    6885
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3955
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    2930
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
     _vide
       _draw_string
       _goto_lico
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7E      0       0      64        0.0%
BITBANK0            7E      0       0       4        0.0%
BANK0               7E      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     22      2E       1       55.4%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2E      57        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 23 11:50:46 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0036                         ?_draw_square 000F  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0032                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 2248                                 l1471 2178  
                               l2713 215C                                 l2715 2162  
                               l2717 2168                                 l4833 21F6  
                               STR_1 1084                                 STR_2 10C8  
                               STR_3 10C5                                 STR_4 10BF  
                               STR_5 10A3                                 STR_6 1066  
                               STR_7 1041                                 STR_8 10B0  
                               STR_9 107B                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 215A                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 21E0  
                               _fptr 002F                                 _vide 2278  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0023                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                     ?_lecture_normale 0003  
                              ?_main 0001                      __end_of___awdiv 1D68  
                              STR_10 1071                                STR_11 10AA  
                              STR_12 102D                                STR_20 10C2  
                              STR_21 10BB                                STR_13 109C  
                              STR_14 101E                                STR_22 1001  
                              STR_15 104E                                STR_23 1033  
                              STR_16 105A                                STR_17 108C  
                              STR_18 10B6                                STR_19 1094  
                    __end_of___awmod 1DD8                                ?_vide 0001  
                              _T0CON 000FD5                      ___awdiv@divisor 0003  
                              _FSR0H 000FEA                                _FSR1H 000FE2  
                              _FSR0L 000FE9                                _FSR2H 000FDA  
                              _FSR1L 000FE1                                _FSR2L 000FD9  
                    __end_of___lwdiv 1EDE                                i2l140 205E  
                              i2l143 206C                                i2l441 145C  
                              i2l426 12C6                                i2l418 11E0  
                              i2l541 16D8                                i2l800 19D6  
                              i2l546 171A                                i2l812 19EE  
                              i2l830 1A12                                i2l806 19E2  
                              i2l559 2262                                i2l824 1A06  
                              i2l752 1976                                i2l818 19FA  
                              i2l770 199A                                i2l930 17B2  
                              i2l836 1A1E                                i2l764 198E  
                              i2l782 19B2                                i2l758 1982  
                              i2l942 17CA                                i2l776 19A6  
                              i2l960 17EE                                i2l936 17BE  
                              i2l794 19CA                                i2l954 17E2  
                              i2l788 19BE                                i2l972 1806  
                              i2l948 17D6                      ___awdiv@counter 0005  
                              i2l990 182A                                i2l966 17FA  
                              i2l984 181E                                i2l978 1812  
                              i2l996 1836                                _PRODH 000FF4  
                              _PRODL 000FF3                                _PORTH 000F87  
                              _TRISH 000F99                                _TRISJ 000F9A  
                        _write_c_aff 222E                          _write_d_aff 2214  
                    __end_of_charger 22A8                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                      __end_of_command 2214  
                              _badge 000075                                _plot1 1B08  
                              _queue 000069                                tablat 000FF5  
                              ltemp0 0023                                ltemp1 0027  
                              ltemp2 002B                __end_of_delai_us_char 21C0  
                              plusw1 000FE3                      _check_status_ok 2106  
                              ttemp0 0023                                ttemp1 0026  
                              ttemp2 0029                                ttemp3 002C  
                              ttemp5 0024                                ttemp6 0027  
                              ttemp7 002B                                status 000FD8  
                              wtemp0 0023                                wtemp1 0025  
                              wtemp2 0027                                wtemp3 0029  
                              wtemp4 002B                                wtemp5 002D  
                              wtemp8 0024        initialisation_du_systeme@temp 0022  
                    __initialization 22A8                         __end_of_Init 217C  
         lecture_8bit_analogique@ret 0001                         __end_of_main 21FA  
                       __end_of_vide 2290                               ??_main 0023  
                             ??_vide 000F                        __activetblptr 000003  
                       draw_square@x 0013                         draw_square@y 0014  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               ?_plot1 0009  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0001  
                      _n_octet_badge 00007F                               _MEMCON 000F26  
                             i2l1002 1842                               i2l1014 185A  
                             i2l1008 184E                               i2l1310 1E74  
                             i2l1224 1EE6                               i2l1248 21A2  
                             i2l1256 1A7C                               i2l1274 1C5A  
                             i2l1266 2092                               i2l1290 1E20  
                             i2l1285 1DF4                               i2l4103 1D50  
                             i2l2167 1ED4                               i2l4201 1B74  
                             i2l4107 1D5E                               i2l4123 1D88  
                             i2l3403 18E0                               i2l4211 2256  
                             i2l2437 21B8                               i2l4037 2002  
                             i2l2701 212A                               i2l3421 190E  
                             i2l4063 1F7C                               i2l4143 1DCE  
                             i2l4135 1DB6                               i2l4127 1D96  
                             i2l4119 1D7C                               i2l1584 1BF2  
                             i2l4153 1E48                               i2l4081 1D08  
                             i2l4129 1D9E                               i2l4401 1ECA  
                             i2l3441 1944                               i2l3409 18EE  
                             i2l1585 1BFA                               i2l1594 224A  
                             i2l2491 1F24                               i2l4171 2094  
                             i2l4075 1CF8                               i2l4139 1DC0  
                             i2l4227 1A66                               i2l2731 2070  
                             i2l3427 191C                               i2l3531 1866  
                             i2l1587 1C04                               _PCLATH 000FFA  
                             i2l4157 1E52                               i2l4165 2080  
                             i2l4309 21C6                               i2l4237 1A7E  
                             i2l4325 226E                               i2l3541 187E  
                             i2l4175 1C5C                               i2l4159 1E76  
                             i2l4263 20EC                               i2l4087 1D1E  
                             i2l4191 1B54                               i2l4271 1F88  
                             i2l3391 18C0                               i2l4343 1BE4  
                             i2l4335 1BCE                               i2l2489 1F20  
                             i2l4169 208A                               i2l4249 20BC  
                             i2l4089 1D26                               i2l4193 1B5C  
                             i2l4281 1FC2                               i2l3385 18B2  
                             i2l5153 02DC                               i2l4179 1C92  
                             i2l4099 1D46                               i2l4195 1B64  
                             i2l4187 1B44                               i2l4275 1F9E  
                             i2l4611 11FE                               i2l3491 1A2A  
                             i2l4197 1B6C                               i2l4189 1B4C  
                             i2l4277 1FAC                               i2l4621 1226  
                             i2l4295 1E18                               i2l4287 1DEC  
                             i2l4711 1388                               i2l4391 1EAA  
                             i2l4297 1E22                               i2l4289 1DF6  
                             i2l4705 136E                               i2l4641 128E  
                             i2l4609 11F2                               _PCLATU 000FFB  
                             i2l4707 1374                               i2l4619 1220  
                             i2l4379 1C54                               i2l4653 12B8  
                             i2l4389 1EA2                               i2l4663 12D2  
                             i2l4639 1288                               i2l4681 1306  
                             i2l4817 2152                               i2l4747 145E  
                             i2l4669 12DC                               i2l4853 0064  
                             i2l4695 1336                               i2l4687 1312  
                             i2l4599 11B8                               i2l4697 1342  
                             i2l4793 173A                               i2l4777 16F8  
                             _TABLAT 000FF5                               i2l4997 0198  
                             _RCSTA1 000FAB                           _Tick_Count 000071  
                             _SPBRG1 000FAF                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                             _TXREG1 000FAD                       clear_line@line 000F  
                             _TXSTA1 000FAC                            ??___awdiv 0005  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _tache1 10CC                               _tache2 16B6  
                             _tache3 1890                               _tache4 196E  
                             _tache5 17AA                               _tache6 2132  
                          ??_charger 000F                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               lltemp0 0023  
                             plot1@x 000E                               plot1@y 0009  
                   __end_of_tp_delai 2278                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 2132  
       lecture_normale@temps_attente 0005                           __accesstop 0060  
            __end_of__initialization 22B2                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                           ___inthi_sp 0AAC  
                  __end_of_d1command 2006                    __end_of_d2command 1F80  
                      __end_of_plot1 1BB6                              ??_plot1 000A  
                      draw_square@x1 0012                        draw_square@x2 0010  
                      draw_square@y1 000F                        draw_square@y2 0011  
                       _W_TEMPORAIRE 000060                           __pnvCOMRAM 002F  
                     _clear_graphics 20D6          ??_initialisation_du_systeme 0022  
                         _clear_line 21C0                           _clear_text 20A6  
           ?_fonction_d_interruption 0001                              ?_tache1 0001  
                            ?_tache2 0001                              ?_tache3 0001  
                            ?_tache4 0001                              ?_tache5 0001  
                            ?_tache6 0001                         ?_write_c_aff 0001  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
           _initialisation_afficheur 1A3C                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 003A  
             __end_of_clear_graphics 2106                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 2006                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_char 20A6  
                  __end_of_draw_hex8 1E34                              ___awdiv 1CE4  
                            ___awmod 1D68                              ___lwdiv 1E8C  
                       __psmallconst 1000                              __pcinit 22A8  
                            _charger 2290                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 21E0  
                            __ptext1 147E                              __ptext2 2006  
                            __ptext3 215A                              __ptext5 2132  
                            __ptext6 1BB6                              __ptext7 2248  
                            __ptext8 17AA                              __ptext9 196E  
                            _command 21FA                            _T0CONbits 000FD5  
                 draw_string@tableau 0008            _initialisation_du_systeme 147E  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 219E  
                  __end_of_goto_lico 1E8C                              _val_tos 0034  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 22B2                              tache1@i 0015  
                            tache4@a 0001                              tache5@a 0001  
                            tache6@n 0009                      ?_clear_graphics 0001  
                        ?_clear_line 0001                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84              _lecture_8bit_analogique 203E  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                         command@cmd 0005                           draw_hex8@c 0009  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
     lecture_8bit_analogique@channel 0002                            _d1command 1FCC  
                          _d2command 1F30                       __end_of_tache1 147E  
                     __end_of_tache2 17AA                       __end_of_tache3 196E  
                     __end_of_tache4 1A3C                       __end_of_tache5 1890  
                     __end_of_tache6 215A                        ??_draw_square 0012  
                      ??_draw_string 000A               lecture_normale@stid_id 0003  
              __end_of_stid_delai_us 2260                  start_initialization 22A8  
                  ??_lecture_normale 0005                        _delai_us_char 219E  
                           ??_tache1 0015                             ??_tache2 0008  
                           ??_tache3 0001                             ??_tache4 0001  
                           ??_tache5 0001                             ??_tache6 0009  
         ??_initialisation_afficheur 0009            ??_lecture_8bit_analogique 0001  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                        __pbssCOMRAM 0036                  __end_of_draw_square 1FCC  
         ??_initialisation_des_ports 0022                  __end_of_draw_string 1CE4  
                     ?_delai_us_char 0001                     ___lwdiv@dividend 0001  
                          __pintcode 0008                             ?___awdiv 0001  
                           ?___awmod 0001                             ?___lwdiv 0001  
                           ?_charger 0001                    _pointeur_de_tache 000070  
                          _draw_char 2074                            _draw_hex8 1DD8  
                           ?_command 0001                       _wait_status_ok 1EDE  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 217C  
                 write_c_aff@command 0001                            _goto_lico 1E34  
    __end_of_lecture_8bit_analogique 2074                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 16B6  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u121_40 197A                             i2u211_40 1DA2  
                           i2u131_40 19B6                             i2u123_40 1986  
                           i2u220_40 1C82                             i2u220_47 1C78  
                           i2u205_40 1D2A                             i2u141_40 19F2  
                           i2u133_40 19C2                             i2u125_40 1992  
                           i2u222_40 1CB4                             i2u222_47 1CAA  
                           i2u143_40 19FE                             i2u135_40 19CE  
                           i2u127_40 199E                             i2u224_40 1CDC  
                           i2u160_40 17E6                             i2u152_40 17B6  
                           i2u224_47 1CD2                             i2u145_40 1A0A  
                           i2u137_40 19DA                             i2u129_40 19AA  
                           i2u170_40 1822                             i2u162_40 17F2  
                           i2u154_40 17C2                             i2u147_40 1A16  
                           i2u139_40 19E6                             i2u172_40 182E  
                           i2u164_40 17FE                             i2u156_40 17CE  
                       ??_clear_line 000F                             i2u246_40 1EAE  
                           i2u174_40 183A                             i2u166_40 180A  
                           i2u158_40 17DA                             i2u256_40 12C2  
                           i2u176_40 1846                             i2u168_40 1816  
                           _PIR1bits 000F9E                             i2u178_40 1852  
                           i2u267_40 1392                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 1F30  
                        ??_d1command 0006                           ?_draw_char 0001  
                        ??_d2command 0007                           ?_draw_hex8 0001  
                         _ADCON0bits 000FC2                     clear_line@column 0010  
                        _draw_square 1F80                          _draw_string 1C58  
                       _Val_sem_rxtx 0039                             _TP_appui 000066  
                 __end_of_clear_line 21E0                          _INTCON2bits 000FF1  
                    ??_delai_us_char 0001                   __end_of_clear_text 20D6  
                         ?_init_rxtx 0001                           ?_goto_lico 0009  
                         _ANCON0bits 000F25                           _ANCON1bits 000F24  
                           __Hrparam 0000                             __Lrparam 0000  
   __end_of_initialisation_afficheur 1B08                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009              _fonction_d_interruption 0008  
                    _lecture_normale 1BB6                             _batterie 000074  
                    ___lwdiv@divisor 0003     __end_of_initialisation_des_ports 203E  
                    ___lwdiv@counter 0007                             __ptext10 1890  
                           __ptext11 16B6                             __ptext20 1F80  
                           __ptext12 2260                             __ptext21 1B08  
                           __ptext13 1E8C                             __ptext30 2290  
                           __ptext22 21FA                             __ptext14 10CC  
                           __ptext31 1E34                             __ptext23 1D68  
                           __ptext15 2278                             __ptext32 1F30  
                           __ptext24 1CE4                             __ptext16 203E  
                           __ptext33 1C58                             __ptext25 1DD8  
                           __ptext17 1A3C                             __ptext34 1FCC  
                           __ptext26 20A6                             __ptext18 2106  
                           __ptext35 2214                             __ptext27 21C0  
                           __ptext19 217C                             __ptext36 222E  
                           __ptext28 2074                             __ptext37 1EDE  
                           __ptext29 20D6                             __ptext38 219E  
                           __ptext39 0000                             isa$xinst 000000  
                           _tp_delai 2260                    ??_check_status_ok 0001  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_init_rxtx 0001  
                        ??_goto_lico 000A                             intlevel2 0000  
                           plot1@add 000C                       goto_lico@ligne 000C  
            __end_of_lecture_normale 1C58                         d1command@cmd 0005  
                       d1command@res 0007            ??_fonction_d_interruption 0016  
                       tp_delai@itpd 0001                          d1command@d1 0006  
                __end_of_write_c_aff 2248                  __end_of_write_d_aff 222E  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
