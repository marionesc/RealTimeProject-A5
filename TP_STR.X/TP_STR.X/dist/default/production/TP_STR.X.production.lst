

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 11 13:51:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64                           	dabs	1,0x603,1,_STKPTR_T6
    65                           	dabs	1,0x503,1,_STKPTR_T5
    66                           	dabs	1,0x403,1,_STKPTR_T4
    67                           	dabs	1,0x303,1,_STKPTR_T3
    68                           	dabs	1,0x203,1,_STKPTR_T2
    69                           	dabs	1,0x103,1,_STKPTR_T1
    70                           	dabs	1,0x60,1,_W_TEMPORAIRE
    71                           	dabs	1,0x100,66,_contexte1
    72                           	dabs	1,0x69,6,_queue
    73                           	dabs	1,0x71,2,_Tick_Count
    74                           	dabs	1,0x84,1,_valeur_convertie
    75                           	dabs	1,0x83,1,_Valeur
    76                           	dabs	1,0x82,1,_Personne
    77                           	dabs	1,0x81,1,_TEST
    78                           	dabs	1,0x80,1,_RXTX_libre
    79                           	dabs	1,0x7F,1,_n_octet_badge
    80                           	dabs	1,0x74,1,_batterie
    81                           	dabs	1,0x73,1,_vitesse
    82                           	dabs	1,0x70,1,_pointeur_de_tache
    83                           	dabs	1,0x6F,1,_tache_active
    84                           	dabs	1,0x68,1,_TP_y
    85                           	dabs	1,0x67,1,_TP_x
    86                           	dabs	1,0x66,1,_TP_appui
    87                           	dabs	1,0x65,1,_DEMARRAGE
    88                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    89                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    90                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    91                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    92                           	dabs	1,0x75,10,_badge
    93                           	dabs	1,0x200,66,_contexte2
    94                           	dabs	1,0x300,66,_contexte3
    95                           	dabs	1,0x400,66,_contexte4
    96                           	dabs	1,0x500,66,_contexte5
    97                           	dabs	1,0x600,66,_contexte6
    98   000000                     
    99                           ; Generated 06/04/2022 GMT
   100                           ; 
   101                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F87K22 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133   000000                     
   134 ;;Init@sem	offset=-1 (param)
   135 ;;Init@sem	offset=-1 (param)
   136   000000                     _TMR0	set	4054
   137   000000                     _TOSU	set	4095
   138   000000                     _TOSH	set	4094
   139   000000                     _TOSL	set	4093
   140   000000                     _TABLAT	set	4085
   141   000000                     _TBLPTRL	set	4086
   142   000000                     _TBLPTRH	set	4087
   143   000000                     _TBLPTRU	set	4088
   144   000000                     _PRODL	set	4083
   145   000000                     _PRODH	set	4084
   146   000000                     _FSR2L	set	4057
   147   000000                     _FSR2H	set	4058
   148   000000                     _FSR1L	set	4065
   149   000000                     _FSR1H	set	4066
   150   000000                     _STKPTR	set	4092
   151   000000                     _FSR0L	set	4073
   152   000000                     _FSR0H	set	4074
   153   000000                     _BSR	set	4064
   154   000000                     _WREG	set	4072
   155   000000                     _STATUS	set	4056
   156   000000                     _INTCON3bits	set	4080
   157                           
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 6 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;Total ram usage:        0 bytes
   182 ;; Hardware stack levels required when called: 8
   183 ;; This function calls:
   184 ;;		_Init
   185 ;;		_initInterrupt
   186 ;;		_initialisation_des_ports
   187 ;;		_initialisation_du_systeme
   188 ;; This function is called by:
   189 ;;		Startup code after reset
   190 ;; This function uses a non-reentrant model
   191 ;;
   192                           
   193                           	psect	text0
   194   0022AC                     __ptext0:
   195                           	callstack 0
   196   000000                     _T0IF	set	32658
   197   000000                     _INTCON2bits	set	4081
   198   0022AC                     _main:
   199                           	callstack 23
   200                           
   201                           ;main.c: 8: initialisation_des_ports();
   202                           
   203                           ;incstack = 0
   204   0022AC  EC58  F010         	call	_initialisation_des_ports	;wreg free
   205                           
   206                           ;main.c: 9: initialisation_du_systeme();
   207   0022B0  EC58  F00A         	call	_initialisation_du_systeme	;wreg free
   208                           
   209                           ;main.c: 10: initInterrupt();
   210   0022B4  EC65  F011         	call	_initInterrupt	;wreg free
   211                           
   212                           ;main.c: 11: Init(1);
   213   0022B8  0E01               	movlw	1
   214   0022BA  6EE6               	movwf	postinc1,c
   215   0022BC  EC13  F011         	call	_Init	;wreg free
   216                           
   217                           ;main.c: 15: T0CONbits.TMR0ON=1;
   218   0022C0  8ED5               	bsf	213,7,c	;volatile
   219                           
   220                           ;main.c: 16: T0IF=1;
   221   0022C2  84F2               	bsf	4082,2,c	;volatile
   222                           
   223                           ;main.c: 17: (INTCONbits.GIE = 1);
   224   0022C4  8EF2               	bsf	242,7,c	;volatile
   225   0022C6                     l5517:
   226                           
   227                           ;main.c: 21: __nop();
   228   0022C6  F000               	nop	
   229   0022C8  D7FE               	goto	l5517
   230   0022CA                     __end_of_main:
   231                           	callstack 0
   232                           
   233                           	psect	nvCOMRAM
   234   000035                     __pnvCOMRAM:
   235                           	callstack 0
   236   000035                     _fptr:
   237                           	callstack 0
   238   000035                     	ds	3
   239   000038                     _puc:
   240                           	callstack 0
   241   000038                     	ds	2
   242   00003A                     _val_tos:
   243                           	callstack 0
   244   00003A                     	ds	2
   245   000000                     _ANCON1bits	set	3876
   246   000000                     _ANCON0bits	set	3877
   247   000000                     _TXSTA1	set	4012
   248   000000                     _LATJ	set	3985
   249   000000                     _T0CON	set	4053
   250   000000                     _ADCON0bits	set	4034
   251   000000                     _INTCONbits	set	4082
   252   000000                     _T0IE	set	32661
   253   000000                     _ANCON2	set	3875
   254   000000                     _ANCON1	set	3876
   255   000000                     _ANCON0	set	3877
   256   000000                     _MEMCON	set	3878
   257   000000                     _T0CONbits	set	4053
   258   000000                     _PADCFG1bits	set	3923
   259   000000                     _LATCbits	set	3979
   260   000000                     _LATDbits	set	3980
   261   000000                     _LATGbits	set	3983
   262   000000                     _LATJbits	set	3985
   263   000000                     _LATH	set	3984
   264   000000                     _TRISCbits	set	3988
   265   000000                     _TRISDbits	set	3989
   266   000000                     _TRISGbits	set	3992
   267   000000                     _PIR1bits	set	3998
   268   000000                     _TRISJ	set	3994
   269   000000                     _TRISH	set	3993
   270   000000                     _TXREG1	set	4013
   271   000000                     _ADCON2	set	4032
   272   000000                     _ADCON1	set	4033
   273   000000                     _BAUDCON1	set	3941
   274   000000                     _PORTBbits	set	3969
   275   000000                     _PORTEbits	set	3972
   276   000000                     _RCONbits	set	4048
   277   000000                     _ADRESH	set	4036
   278   000000                     _ADRESL	set	4035
   279   000000                     _ADCON0	set	4034
   280   000000                     _SPBRGH1	set	4052
   281   000000                     _POSTINC0	set	4078
   282   000000                     _POSTINC1	set	4070
   283   000000                     _PCLATH	set	4090
   284   000000                     _PCLATU	set	4091
   285   000000                     _SPBRG1	set	4015
   286   000000                     _PORTH	set	3975
   287   000000                     _PORTDbits	set	3971
   288   000000                     _RCSTA1	set	4011
   289   000000                     _TXSTA1bits	set	4012
   290                           
   291                           	psect	smallconst
   292   001000                     __psmallconst:
   293                           	callstack 0
   294   001000  00                 	db	0
   295   001001                     STR_22:
   296   001001  41                 	db	65	;'A'
   297   001002  54                 	db	84	;'T'
   298   001003  54                 	db	84	;'T'
   299   001004  45                 	db	69	;'E'
   300   001005  4E                 	db	78	;'N'
   301   001006  54                 	db	84	;'T'
   302   001007  49                 	db	73	;'I'
   303   001008  4F                 	db	79	;'O'
   304   001009  4E                 	db	78	;'N'
   305   00100A  20                 	db	32
   306   00100B  76                 	db	118	;'v'
   307   00100C  6F                 	db	111	;'o'
   308   00100D  75                 	db	117	;'u'
   309   00100E  73                 	db	115	;'s'
   310   00100F  20                 	db	32
   311   001010  65                 	db	101	;'e'
   312   001011  74                 	db	116	;'t'
   313   001012  65                 	db	101	;'e'
   314   001013  73                 	db	115	;'s'
   315   001014  20                 	db	32
   316   001015  70                 	db	112	;'p'
   317   001016  6C                 	db	108	;'l'
   318   001017  65                 	db	101	;'e'
   319   001018  69                 	db	105	;'i'
   320   001019  6E                 	db	110	;'n'
   321   00101A  21                 	db	33
   322   00101B  21                 	db	33
   323   00101C  21                 	db	33
   324   00101D  00                 	db	0
   325   00101E                     STR_11:
   326   00101E  20                 	db	32
   327   00101F  41                 	db	65	;'A'
   328   001020  55                 	db	85	;'U'
   329   001021  43                 	db	67	;'C'
   330   001022  55                 	db	85	;'U'
   331   001023  4E                 	db	78	;'N'
   332   001024  20                 	db	32
   333   001025  20                 	db	32
   334   001026  20                 	db	32
   335   001027  20                 	db	32
   336   001028  20                 	db	32
   337   001029  20                 	db	32
   338   00102A  20                 	db	32
   339   00102B  20                 	db	32
   340   00102C  20                 	db	32
   341   00102D  20                 	db	32
   342   00102E  20                 	db	32
   343   00102F  20                 	db	32
   344   001030  20                 	db	32
   345   001031  20                 	db	32
   346   001032  00                 	db	0
   347   001033                     STR_23:
   348   001033  52                 	db	82	;'R'
   349   001034  4F                 	db	79	;'O'
   350   001035  55                 	db	85	;'U'
   351   001036  45                 	db	69	;'E'
   352   001037  53                 	db	83	;'S'
   353   001038  42                 	db	66	;'B'
   354   001039  59                 	db	89	;'Y'
   355   00103A  47                 	db	71	;'G'
   356   00103B  4E                 	db	78	;'N'
   357   00103C  4F                 	db	79	;'O'
   358   00103D  4C                 	db	76	;'L'
   359   00103E  45                 	db	69	;'E'
   360   00103F  53                 	db	83	;'S'
   361   001040  00                 	db	0
   362   001041                     STR_6:
   363   001041  54                 	db	84	;'T'
   364   001042  65                 	db	101	;'e'
   365   001043  6D                 	db	109	;'m'
   366   001044  70                 	db	112	;'p'
   367   001045  2E                 	db	46
   368   001046  20                 	db	32
   369   001047  48                 	db	72	;'H'
   370   001048  75                 	db	117	;'u'
   371   001049  69                 	db	105	;'i'
   372   00104A  6C                 	db	108	;'l'
   373   00104B  65                 	db	101	;'e'
   374   00104C  3A                 	db	58	;':'
   375   00104D  00                 	db	0
   376   00104E                     STR_15:
   377   00104E  58                 	db	88	;'X'
   378   00104F  2D                 	db	45
   379   001050  4A                 	db	74	;'J'
   380   001051  6F                 	db	111	;'o'
   381   001052  79                 	db	121	;'y'
   382   001053  73                 	db	115	;'s'
   383   001054  74                 	db	116	;'t'
   384   001055  69                 	db	105	;'i'
   385   001056  63                 	db	99	;'c'
   386   001057  6B                 	db	107	;'k'
   387   001058  3A                 	db	58	;':'
   388   001059  00                 	db	0
   389   00105A                     STR_16:
   390   00105A  59                 	db	89	;'Y'
   391   00105B  2D                 	db	45
   392   00105C  4A                 	db	74	;'J'
   393   00105D  6F                 	db	111	;'o'
   394   00105E  79                 	db	121	;'y'
   395   00105F  73                 	db	115	;'s'
   396   001060  74                 	db	116	;'t'
   397   001061  69                 	db	105	;'i'
   398   001062  63                 	db	99	;'c'
   399   001063  6B                 	db	107	;'k'
   400   001064  3A                 	db	58	;':'
   401   001065  00                 	db	0
   402   001066                     STR_5:
   403   001066  54                 	db	84	;'T'
   404   001067  65                 	db	101	;'e'
   405   001068  6D                 	db	109	;'m'
   406   001069  70                 	db	112	;'p'
   407   00106A  2E                 	db	46
   408   00106B  20                 	db	32
   409   00106C  45                 	db	69	;'E'
   410   00106D  61                 	db	97	;'a'
   411   00106E  75                 	db	117	;'u'
   412   00106F  3A                 	db	58	;':'
   413   001070  00                 	db	0
   414   001071                     STR_9:
   415   001071  42                 	db	66	;'B'
   416   001072  61                 	db	97	;'a'
   417   001073  74                 	db	116	;'t'
   418   001074  74                 	db	116	;'t'
   419   001075  65                 	db	101	;'e'
   420   001076  72                 	db	114	;'r'
   421   001077  69                 	db	105	;'i'
   422   001078  65                 	db	101	;'e'
   423   001079  3A                 	db	58	;':'
   424   00107A  00                 	db	0
   425   00107B                     STR_8:
   426   00107B  56                 	db	86	;'V'
   427   00107C  69                 	db	105	;'i'
   428   00107D  74                 	db	116	;'t'
   429   00107E  65                 	db	101	;'e'
   430   00107F  73                 	db	115	;'s'
   431   001080  73                 	db	115	;'s'
   432   001081  65                 	db	101	;'e'
   433   001082  3A                 	db	58	;':'
   434   001083  00                 	db	0
   435   001084                     STR_12:
   436   001084  4F                 	db	79	;'O'
   437   001085  70                 	db	112	;'p'
   438   001086  65                 	db	101	;'e'
   439   001087  72                 	db	114	;'r'
   440   001088  61                 	db	97	;'a'
   441   001089  74                 	db	116	;'t'
   442   00108A  6F                 	db	111	;'o'
   443   00108B  72                 	db	114	;'r'
   444   00108C  00                 	db	0
   445   00108D                     STR_1:
   446   00108D  4D                 	db	77	;'M'
   447   00108E  61                 	db	97	;'a'
   448   00108F  72                 	db	114	;'r'
   449   001090  63                 	db	99	;'c'
   450   001091  68                 	db	104	;'h'
   451   001092  65                 	db	101	;'e'
   452   001093  3A                 	db	58	;':'
   453   001094  00                 	db	0
   454   001095                     STR_10:
   455   001095  42                 	db	66	;'B'
   456   001096  61                 	db	97	;'a'
   457   001097  64                 	db	100	;'d'
   458   001098  67                 	db	103	;'g'
   459   001099  65                 	db	101	;'e'
   460   00109A  3A                 	db	58	;':'
   461   00109B  00                 	db	0
   462   00109C                     STR_4:
   463   00109C  53                 	db	83	;'S'
   464   00109D  69                 	db	105	;'i'
   465   00109E  65                 	db	101	;'e'
   466   00109F  67                 	db	103	;'g'
   467   0010A0  65                 	db	101	;'e'
   468   0010A1  3A                 	db	58	;':'
   469   0010A2  00                 	db	0
   470   0010A3                     STR_18:
   471   0010A3  43                 	db	67	;'C'
   472   0010A4  48                 	db	72	;'H'
   473   0010A5  41                 	db	65	;'A'
   474   0010A6  52                 	db	82	;'R'
   475   0010A7  47                 	db	71	;'G'
   476   0010A8  45                 	db	69	;'E'
   477   0010A9  00                 	db	0
   478   0010AA                     STR_13:
   479   0010AA  20                 	db	32
   480   0010AB  41                 	db	65	;'A'
   481   0010AC  44                 	db	68	;'D'
   482   0010AD  4D                 	db	77	;'M'
   483   0010AE  49                 	db	73	;'I'
   484   0010AF  4E                 	db	78	;'N'
   485   0010B0  00                 	db	0
   486   0010B1                     STR_2:
   487   0010B1  28                 	db	40
   488   0010B2  28                 	db	40
   489   0010B3  21                 	db	33
   490   0010B4  29                 	db	41
   491   0010B5  29                 	db	41
   492   0010B6  00                 	db	0
   493   0010B7                     STR_7:
   494   0010B7  43                 	db	67	;'C'
   495   0010B8  68                 	db	104	;'h'
   496   0010B9  6F                 	db	111	;'o'
   497   0010BA  63                 	db	99	;'c'
   498   0010BB  3A                 	db	58	;':'
   499   0010BC  00                 	db	0
   500   0010BD                     STR_14:
   501   0010BD  41                 	db	65	;'A'
   502   0010BE  55                 	db	85	;'U'
   503   0010BF  43                 	db	67	;'C'
   504   0010C0  55                 	db	85	;'U'
   505   0010C1  4E                 	db	78	;'N'
   506   0010C2  00                 	db	0
   507   0010C3                     STR_21:
   508   0010C3  54                 	db	84	;'T'
   509   0010C4  65                 	db	101	;'e'
   510   0010C5  73                 	db	115	;'s'
   511   0010C6  74                 	db	116	;'t'
   512   0010C7  00                 	db	0
   513   0010C8                     STR_17:
   514   0010C8  56                 	db	86	;'V'
   515   0010C9  49                 	db	73	;'I'
   516   0010CA  44                 	db	68	;'D'
   517   0010CB  45                 	db	69	;'E'
   518   0010CC  00                 	db	0
   519   0010CD                     STR_20:
   520   0010CD  20                 	db	32
   521   0010CE  79                 	db	121	;'y'
   522   0010CF  3D                 	db	61	;'='
   523   0010D0  00                 	db	0
   524   0010D1                     STR_27:
   525   0010D1  4E                 	db	78	;'N'
   526   0010D2  20                 	db	32
   527   0010D3  00                 	db	0
   528   0010D4                     STR_26:
   529   0010D4  41                 	db	65	;'A'
   530   0010D5  52                 	db	82	;'R'
   531   0010D6  00                 	db	0
   532   0010D7                     STR_25:
   533   0010D7  41                 	db	65	;'A'
   534   0010D8  56                 	db	86	;'V'
   535   0010D9  00                 	db	0
   536   0010DA                     STR_19:
   537   0010DA  78                 	db	120	;'x'
   538   0010DB  3D                 	db	61	;'='
   539   0010DC  00                 	db	0
   540   0010DD  00                 	db	0	; dummy byte at the end
   541   000000                     
   542                           ; #config settings
   543                           
   544                           	psect	cinit
   545   0023AC                     __pcinit:
   546                           	callstack 0
   547   0023AC                     start_initialization:
   548                           	callstack 0
   549   0023AC                     __initialization:
   550                           	callstack 0
   551                           
   552                           ; Clear objects allocated to COMRAM (5 bytes)
   553   0023AC  6A40               	clrf	(__pbssCOMRAM+4)& (0+255),c
   554   0023AE  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   555   0023B0  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   556   0023B2  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   557   0023B4  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   558   0023B6                     end_of_initialization:
   559                           	callstack 0
   560   0023B6                     __end_of__initialization:
   561                           	callstack 0
   562   0023B6  0100               	movlb	0
   563   0023B8  EF56  F011         	goto	_main	;jump to C main() function
   564                           
   565                           	psect	bssCOMRAM
   566   00003C                     __pbssCOMRAM:
   567                           	callstack 0
   568   00003C                     _tc:
   569                           	callstack 0
   570   00003C                     	ds	3
   571   00003F                     _Val_sem_rxtx:
   572                           	callstack 0
   573   00003F                     	ds	1
   574   000040                     _Val_sem_cna:
   575                           	callstack 0
   576   000040                     	ds	1
   577                           
   578                           	psect	cstackBANK0
   579   000085                     __pcstackBANK0:
   580                           	callstack 0
   581   000085                     initialisation_du_systeme@temp:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0x0
   585   000085                     	ds	1
   586   000086                     
   587                           ; 1 bytes @ 0x1
   588                           
   589                           	psect	cstackCOMRAM
   590   000001                     __pcstackCOMRAM:
   591                           	callstack 0
   592   000001                     ?_Diminution:
   593   000001                     ?___wmul:
   594                           	callstack 0
   595   000001                     ?___awmod:
   596                           	callstack 0
   597   000001                     ?___lwdiv:
   598                           	callstack 0
   599   000001                     lecture_8bit_analogique@ret:
   600                           	callstack 0
   601   000001                     write_d_aff@data:
   602                           	callstack 0
   603   000001                     write_c_aff@command:
   604                           	callstack 0
   605   000001                     check_status_ok@res:
   606                           	callstack 0
   607   000001                     delai_us_char@ucdelai:
   608                           	callstack 0
   609   000001                     afficheur_texte@message:
   610                           	callstack 0
   611   000001                     tp_delai@itpd:
   612                           	callstack 0
   613   000001                     tache5@a:
   614                           	callstack 0
   615   000001                     vitesseAdmin@a:
   616                           	callstack 0
   617   000001                     Diminution@vitesse:
   618                           	callstack 0
   619   000001                     stid_delai_us@isdu:
   620                           	callstack 0
   621   000001                     ___wmul@multiplier:
   622                           	callstack 0
   623   000001                     ___awmod@dividend:
   624                           	callstack 0
   625   000001                     ___lwdiv@dividend:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x0
   629   000001                     	ds	1
   630   000002                     lecture_8bit_analogique@channel:
   631                           	callstack 0
   632   000002                     tache4@message:
   633                           	callstack 0
   634   000002                     wait_status_ok@err:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x1
   638   000002                     	ds	1
   639   000003                     ??_vitesseAdmin:
   640   000003                     wait_status_ok@status:
   641                           	callstack 0
   642   000003                     tache4@a:
   643                           	callstack 0
   644   000003                     lecture_normale@stid_id:
   645                           	callstack 0
   646   000003                     ___wmul@multiplicand:
   647                           	callstack 0
   648   000003                     ___awmod@divisor:
   649                           	callstack 0
   650   000003                     ___lwdiv@divisor:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2
   654   000003                     	ds	1
   655   000004                     wait_status_ok@res:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0x3
   659   000004                     	ds	1
   660   000005                     command@cmd:
   661                           	callstack 0
   662   000005                     d1command@cmd:
   663                           	callstack 0
   664   000005                     d2command@d2:
   665                           	callstack 0
   666   000005                     lecture_normale@temps_attente:
   667                           	callstack 0
   668   000005                     ___awmod@counter:
   669                           	callstack 0
   670   000005                     ___wmul@product:
   671                           	callstack 0
   672   000005                     ___lwdiv@quotient:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x4
   676   000005                     	ds	1
   677   000006                     d1command@d1:
   678                           	callstack 0
   679   000006                     d2command@cmd:
   680                           	callstack 0
   681   000006                     lecture_normale@n_octet:
   682                           	callstack 0
   683   000006                     ___awmod@sign:
   684                           	callstack 0
   685   000006                     vitesseAdmin@b:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x5
   689   000006                     	ds	1
   690   000007                     ?___awdiv:
   691                           	callstack 0
   692   000007                     d1command@res:
   693                           	callstack 0
   694   000007                     d2command@d1:
   695                           	callstack 0
   696   000007                     lecture_normale@n_bit:
   697                           	callstack 0
   698   000007                     ___lwdiv@counter:
   699                           	callstack 0
   700   000007                     ___awdiv@dividend:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x6
   704   000007                     	ds	1
   705   000008                     ??_tache2:
   706   000008                     d2command@res:
   707                           	callstack 0
   708   000008                     draw_char@dccar:
   709                           	callstack 0
   710   000008                     draw_hex8@octet:
   711                           	callstack 0
   712   000008                     lecture_normale@octet:
   713                           	callstack 0
   714   000008                     draw_string@tableau:
   715                           	callstack 0
   716   000008                     vitesseAdmin@c:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x7
   720   000008                     	ds	1
   721   000009                     tache6@n:
   722                           	callstack 0
   723   000009                     initialisation_afficheur@error_count:
   724                           	callstack 0
   725   000009                     draw_hex8@c:
   726                           	callstack 0
   727   000009                     goto_lico@colonne:
   728                           	callstack 0
   729   000009                     clear_text@add:
   730                           	callstack 0
   731   000009                     clear_graphics@add:
   732                           	callstack 0
   733   000009                     ___awdiv@divisor:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x8
   737   000009                     	ds	1
   738   00000A                     ??_goto_lico:
   739   00000A                     tache2@ix:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x9
   743   00000A                     	ds	1
   744   00000B                     ___awdiv@counter:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0xA
   748   00000B                     	ds	1
   749   00000C                     goto_lico@ligne:
   750                           	callstack 0
   751   00000C                     ___awdiv@sign:
   752                           	callstack 0
   753   00000C                     tache2@iy:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xB
   757   00000C                     	ds	1
   758   00000D                     goto_lico@adr:
   759                           	callstack 0
   760   00000D                     ___awdiv@quotient:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xC
   764   00000D                     	ds	1
   765   00000E                     tache2@hx:
   766                           	callstack 0
   767                           
   768                           ; 1 bytes @ 0xD
   769   00000E                     	ds	1
   770   00000F                     ??_marche:
   771   00000F                     ??_draw_dec8:
   772   00000F                     ?_Conversion:
   773                           	callstack 0
   774   00000F                     tache2@lx:
   775                           	callstack 0
   776   00000F                     clear_line@line:
   777                           	callstack 0
   778   00000F                     plot1@y:
   779                           	callstack 0
   780   00000F                     Conversion@a:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0xE
   784   00000F                     	ds	1
   785   000010                     ??_plot1:
   786   000010                     tache2@hy:
   787                           	callstack 0
   788   000010                     draw_dec8@unit:
   789                           	callstack 0
   790   000010                     clear_line@column:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0xF
   794   000010                     	ds	1
   795   000011                     tache2@ly:
   796                           	callstack 0
   797   000011                     draw_dec8@octet:
   798                           	callstack 0
   799   000011                     Conversion@valeur_lue:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x10
   803   000011                     	ds	1
   804   000012                     draw_dec8@cent:
   805                           	callstack 0
   806   000012                     plot1@add:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x11
   810   000012                     	ds	1
   811   000013                     draw_dec8@dix:
   812                           	callstack 0
   813   000013                     Conversion@valeur_convertie:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x12
   817   000013                     	ds	1
   818   000014                     draw_dec8@c:
   819                           	callstack 0
   820   000014                     plot1@x:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x13
   824   000014                     	ds	1
   825   000015                     draw_square@y1:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x14
   829   000015                     	ds	1
   830   000016                     draw_square@x2:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x15
   834   000016                     	ds	1
   835   000017                     draw_square@y2:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x16
   839   000017                     	ds	1
   840   000018                     draw_square@x1:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x17
   844   000018                     	ds	1
   845   000019                     draw_square@x:
   846                           	callstack 0
   847                           
   848                           ; 1 bytes @ 0x18
   849   000019                     	ds	1
   850   00001A                     draw_square@y:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x19
   854   00001A                     	ds	1
   855   00001B                     ??_tache1:
   856                           
   857                           ; 1 bytes @ 0x1A
   858   00001B                     	ds	2
   859   00001D                     ??_fonction_d_interruption:
   860                           
   861                           ; 1 bytes @ 0x1C
   862   00001D                     	ds	12
   863                           
   864 ;; *************** function _initialisation_du_systeme *****************
   865 ;; Defined at:
   866 ;;		line 150 in file "systeme.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  temp            1    0[BANK0 ] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;Total ram usage:        1 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; Hardware stack levels required when called: 7
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text1
   895   0014B0                     __ptext1:
   896                           	callstack 0
   897   0014B0                     _initialisation_du_systeme:
   898                           	callstack 23
   899                           
   900                           ;systeme.c: 152: unsigned char temp;;systeme.c: 154: DEMARRAGE=1;
   901                           
   902                           ;incstack = 0
   903   0014B0  0E01               	movlw	1
   904   0014B2  0100               	movlb	0	; () banked
   905   0014B4  6F65               	movwf	101,b
   906                           
   907                           ;systeme.c: 157: queue[0]=1;
   908   0014B6  0E01               	movlw	1
   909   0014B8  6F69               	movwf	105,b
   910                           
   911                           ;systeme.c: 158: queue[1]=2;
   912   0014BA  0E02               	movlw	2
   913   0014BC  6F6A               	movwf	106,b
   914                           
   915                           ;systeme.c: 159: queue[2]=3;
   916   0014BE  0E03               	movlw	3
   917   0014C0  6F6B               	movwf	107,b
   918                           
   919                           ;systeme.c: 160: queue[3]=4;
   920   0014C2  0E04               	movlw	4
   921   0014C4  6F6C               	movwf	108,b
   922                           
   923                           ;systeme.c: 161: queue[4]=5;
   924   0014C6  0E05               	movlw	5
   925   0014C8  6F6D               	movwf	109,b
   926                           
   927                           ;systeme.c: 162: queue[5]=6;
   928   0014CA  0E06               	movlw	6
   929   0014CC  6F6E               	movwf	110,b
   930                           
   931                           ;systeme.c: 164: pointeur_de_tache=6-1;
   932   0014CE  0E05               	movlw	5
   933   0014D0  6F70               	movwf	112,b
   934                           
   935                           ; BSR set to: 0
   936                           ;systeme.c: 165: tache_active=queue[pointeur_de_tache];
   937   0014D2  0E69               	movlw	105
   938   0014D4  2570               	addwf	112,w,b
   939   0014D6  6ED9               	movwf	fsr2l,c
   940   0014D8  6ADA               	clrf	fsr2h,c
   941   0014DA  0E00               	movlw	0
   942   0014DC  22DA               	addwfc	fsr2h,f,c
   943   0014DE  50DF               	movf	indf2,w,c
   944   0014E0  6F6F               	movwf	111,b
   945                           
   946                           ; BSR set to: 0
   947                           ;systeme.c: 170: temp=STKPTR;
   948   0014E2  CFFC F085          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   949                           
   950                           ; BSR set to: 0
   951                           ;systeme.c: 174: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   952   0014E6  0E02               	movlw	2
   953   0014E8  6EFC               	movwf	252,c	;volatile
   954                           
   955                           ; BSR set to: 0
   956   0014EA  0EDE               	movlw	low _tache1
   957   0014EC  6E35               	movwf	_fptr^0,c
   958   0014EE  0E10               	movlw	high _tache1
   959   0014F0  6E36               	movwf	(_fptr+1)^0,c
   960   0014F2  0E00               	movlw	low (_tache1 shr (0+16))
   961   0014F4  6E37               	movwf	(_fptr+2)^0,c
   962                           
   963                           ; BSR set to: 0
   964   0014F6  C035  F03A         	movff	_fptr,_val_tos
   965   0014FA  C036  F03B         	movff	_fptr+1,_val_tos+1
   966                           
   967                           ; BSR set to: 0
   968   0014FE  0E3A               	movlw	low _val_tos
   969   001500  6E38               	movwf	_puc^0,c
   970   001502  0E00               	movlw	high _val_tos
   971   001504  6E39               	movwf	(_puc+1)^0,c
   972                           
   973                           ; BSR set to: 0
   974   001506  C038  FFD9         	movff	_puc,fsr2l
   975   00150A  C039  FFDA         	movff	_puc+1,fsr2h
   976   00150E  50DF               	movf	indf2,w,c
   977   001510  6EFD               	movwf	253,c	;volatile
   978                           
   979                           ; BSR set to: 0
   980   001512  4A38               	infsnz	_puc^0,f,c
   981   001514  2A39               	incf	(_puc+1)^0,f,c
   982                           
   983                           ; BSR set to: 0
   984   001516  C038  FFD9         	movff	_puc,fsr2l
   985   00151A  C039  FFDA         	movff	_puc+1,fsr2h
   986   00151E  50DF               	movf	indf2,w,c
   987   001520  6EFE               	movwf	254,c	;volatile
   988                           
   989                           ; BSR set to: 0
   990   001522  4A38               	infsnz	_puc^0,f,c
   991   001524  2A39               	incf	(_puc+1)^0,f,c
   992                           
   993                           ; BSR set to: 0
   994   001526  C038  FFD9         	movff	_puc,fsr2l
   995   00152A  C039  FFDA         	movff	_puc+1,fsr2h
   996   00152E  50DF               	movf	indf2,w,c
   997   001530  6EFF               	movwf	255,c	;volatile
   998                           
   999                           ; BSR set to: 0
  1000                           ;systeme.c: 175: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1001   001532  0E07               	movlw	7
  1002   001534  6EFC               	movwf	252,c	;volatile
  1003   001536  0EF2               	movlw	low _tache2
  1004   001538  6E35               	movwf	_fptr^0,c
  1005   00153A  0E16               	movlw	high _tache2
  1006   00153C  6E36               	movwf	(_fptr+1)^0,c
  1007   00153E  0E00               	movlw	low (_tache2 shr (0+16))
  1008   001540  6E37               	movwf	(_fptr+2)^0,c
  1009                           
  1010                           ; BSR set to: 0
  1011   001542  C035  F03A         	movff	_fptr,_val_tos
  1012   001546  C036  F03B         	movff	_fptr+1,_val_tos+1
  1013   00154A  0E3A               	movlw	low _val_tos
  1014   00154C  6E38               	movwf	_puc^0,c
  1015   00154E  0E00               	movlw	high _val_tos
  1016   001550  6E39               	movwf	(_puc+1)^0,c
  1017                           
  1018                           ; BSR set to: 0
  1019   001552  C038  FFD9         	movff	_puc,fsr2l
  1020   001556  C039  FFDA         	movff	_puc+1,fsr2h
  1021   00155A  50DF               	movf	indf2,w,c
  1022   00155C  6EFD               	movwf	253,c	;volatile
  1023                           
  1024                           ; BSR set to: 0
  1025   00155E  4A38               	infsnz	_puc^0,f,c
  1026   001560  2A39               	incf	(_puc+1)^0,f,c
  1027                           
  1028                           ; BSR set to: 0
  1029   001562  C038  FFD9         	movff	_puc,fsr2l
  1030   001566  C039  FFDA         	movff	_puc+1,fsr2h
  1031   00156A  50DF               	movf	indf2,w,c
  1032   00156C  6EFE               	movwf	254,c	;volatile
  1033                           
  1034                           ; BSR set to: 0
  1035   00156E  4A38               	infsnz	_puc^0,f,c
  1036   001570  2A39               	incf	(_puc+1)^0,f,c
  1037                           
  1038                           ; BSR set to: 0
  1039   001572  C038  FFD9         	movff	_puc,fsr2l
  1040   001576  C039  FFDA         	movff	_puc+1,fsr2h
  1041   00157A  50DF               	movf	indf2,w,c
  1042   00157C  6EFF               	movwf	255,c	;volatile
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;systeme.c: 176: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1046   00157E  0E0C               	movlw	12
  1047   001580  6EFC               	movwf	252,c	;volatile
  1048                           
  1049                           ; BSR set to: 0
  1050   001582  0EE6               	movlw	low _tache3
  1051   001584  6E35               	movwf	_fptr^0,c
  1052   001586  0E17               	movlw	high _tache3
  1053   001588  6E36               	movwf	(_fptr+1)^0,c
  1054   00158A  0E00               	movlw	low (_tache3 shr (0+16))
  1055   00158C  6E37               	movwf	(_fptr+2)^0,c
  1056                           
  1057                           ; BSR set to: 0
  1058   00158E  C035  F03A         	movff	_fptr,_val_tos
  1059   001592  C036  F03B         	movff	_fptr+1,_val_tos+1
  1060                           
  1061                           ; BSR set to: 0
  1062   001596  0E3A               	movlw	low _val_tos
  1063   001598  6E38               	movwf	_puc^0,c
  1064   00159A  0E00               	movlw	high _val_tos
  1065   00159C  6E39               	movwf	(_puc+1)^0,c
  1066                           
  1067                           ; BSR set to: 0
  1068   00159E  C038  FFD9         	movff	_puc,fsr2l
  1069   0015A2  C039  FFDA         	movff	_puc+1,fsr2h
  1070   0015A6  50DF               	movf	indf2,w,c
  1071   0015A8  6EFD               	movwf	253,c	;volatile
  1072                           
  1073                           ; BSR set to: 0
  1074   0015AA  4A38               	infsnz	_puc^0,f,c
  1075   0015AC  2A39               	incf	(_puc+1)^0,f,c
  1076                           
  1077                           ; BSR set to: 0
  1078   0015AE  C038  FFD9         	movff	_puc,fsr2l
  1079   0015B2  C039  FFDA         	movff	_puc+1,fsr2h
  1080   0015B6  50DF               	movf	indf2,w,c
  1081   0015B8  6EFE               	movwf	254,c	;volatile
  1082                           
  1083                           ; BSR set to: 0
  1084   0015BA  4A38               	infsnz	_puc^0,f,c
  1085   0015BC  2A39               	incf	(_puc+1)^0,f,c
  1086                           
  1087                           ; BSR set to: 0
  1088   0015BE  C038  FFD9         	movff	_puc,fsr2l
  1089   0015C2  C039  FFDA         	movff	_puc+1,fsr2h
  1090   0015C6  50DF               	movf	indf2,w,c
  1091   0015C8  6EFF               	movwf	255,c	;volatile
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;systeme.c: 177: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1095   0015CA  0E11               	movlw	17
  1096   0015CC  6EFC               	movwf	252,c	;volatile
  1097   0015CE  0E02               	movlw	low _tache4
  1098   0015D0  6E35               	movwf	_fptr^0,c
  1099   0015D2  0E22               	movlw	high _tache4
  1100   0015D4  6E36               	movwf	(_fptr+1)^0,c
  1101   0015D6  0E00               	movlw	low (_tache4 shr (0+16))
  1102   0015D8  6E37               	movwf	(_fptr+2)^0,c
  1103                           
  1104                           ; BSR set to: 0
  1105   0015DA  C035  F03A         	movff	_fptr,_val_tos
  1106   0015DE  C036  F03B         	movff	_fptr+1,_val_tos+1
  1107   0015E2  0E3A               	movlw	low _val_tos
  1108   0015E4  6E38               	movwf	_puc^0,c
  1109   0015E6  0E00               	movlw	high _val_tos
  1110   0015E8  6E39               	movwf	(_puc+1)^0,c
  1111                           
  1112                           ; BSR set to: 0
  1113   0015EA  C038  FFD9         	movff	_puc,fsr2l
  1114   0015EE  C039  FFDA         	movff	_puc+1,fsr2h
  1115   0015F2  50DF               	movf	indf2,w,c
  1116   0015F4  6EFD               	movwf	253,c	;volatile
  1117                           
  1118                           ; BSR set to: 0
  1119   0015F6  4A38               	infsnz	_puc^0,f,c
  1120   0015F8  2A39               	incf	(_puc+1)^0,f,c
  1121                           
  1122                           ; BSR set to: 0
  1123   0015FA  C038  FFD9         	movff	_puc,fsr2l
  1124   0015FE  C039  FFDA         	movff	_puc+1,fsr2h
  1125   001602  50DF               	movf	indf2,w,c
  1126   001604  6EFE               	movwf	254,c	;volatile
  1127                           
  1128                           ; BSR set to: 0
  1129   001606  4A38               	infsnz	_puc^0,f,c
  1130   001608  2A39               	incf	(_puc+1)^0,f,c
  1131                           
  1132                           ; BSR set to: 0
  1133   00160A  C038  FFD9         	movff	_puc,fsr2l
  1134   00160E  C039  FFDA         	movff	_puc+1,fsr2h
  1135   001612  50DF               	movf	indf2,w,c
  1136   001614  6EFF               	movwf	255,c	;volatile
  1137                           
  1138                           ; BSR set to: 0
  1139                           ;systeme.c: 178: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1140   001616  0E16               	movlw	22
  1141   001618  6EFC               	movwf	252,c	;volatile
  1142                           
  1143                           ; BSR set to: 0
  1144   00161A  0EE4               	movlw	low _tache5
  1145   00161C  6E35               	movwf	_fptr^0,c
  1146   00161E  0E22               	movlw	high _tache5
  1147   001620  6E36               	movwf	(_fptr+1)^0,c
  1148   001622  0E00               	movlw	low (_tache5 shr (0+16))
  1149   001624  6E37               	movwf	(_fptr+2)^0,c
  1150                           
  1151                           ; BSR set to: 0
  1152   001626  C035  F03A         	movff	_fptr,_val_tos
  1153   00162A  C036  F03B         	movff	_fptr+1,_val_tos+1
  1154                           
  1155                           ; BSR set to: 0
  1156   00162E  0E3A               	movlw	low _val_tos
  1157   001630  6E38               	movwf	_puc^0,c
  1158   001632  0E00               	movlw	high _val_tos
  1159   001634  6E39               	movwf	(_puc+1)^0,c
  1160                           
  1161                           ; BSR set to: 0
  1162   001636  C038  FFD9         	movff	_puc,fsr2l
  1163   00163A  C039  FFDA         	movff	_puc+1,fsr2h
  1164   00163E  50DF               	movf	indf2,w,c
  1165   001640  6EFD               	movwf	253,c	;volatile
  1166                           
  1167                           ; BSR set to: 0
  1168   001642  4A38               	infsnz	_puc^0,f,c
  1169   001644  2A39               	incf	(_puc+1)^0,f,c
  1170                           
  1171                           ; BSR set to: 0
  1172   001646  C038  FFD9         	movff	_puc,fsr2l
  1173   00164A  C039  FFDA         	movff	_puc+1,fsr2h
  1174   00164E  50DF               	movf	indf2,w,c
  1175   001650  6EFE               	movwf	254,c	;volatile
  1176                           
  1177                           ; BSR set to: 0
  1178   001652  4A38               	infsnz	_puc^0,f,c
  1179   001654  2A39               	incf	(_puc+1)^0,f,c
  1180                           
  1181                           ; BSR set to: 0
  1182   001656  C038  FFD9         	movff	_puc,fsr2l
  1183   00165A  C039  FFDA         	movff	_puc+1,fsr2h
  1184   00165E  50DF               	movf	indf2,w,c
  1185   001660  6EFF               	movwf	255,c	;volatile
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;systeme.c: 179: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1189   001662  0E1B               	movlw	27
  1190   001664  6EFC               	movwf	252,c	;volatile
  1191   001666  0EEC               	movlw	low _tache6
  1192   001668  6E35               	movwf	_fptr^0,c
  1193   00166A  0E1F               	movlw	high _tache6
  1194   00166C  6E36               	movwf	(_fptr+1)^0,c
  1195   00166E  0E00               	movlw	low (_tache6 shr (0+16))
  1196   001670  6E37               	movwf	(_fptr+2)^0,c
  1197                           
  1198                           ; BSR set to: 0
  1199   001672  C035  F03A         	movff	_fptr,_val_tos
  1200   001676  C036  F03B         	movff	_fptr+1,_val_tos+1
  1201   00167A  0E3A               	movlw	low _val_tos
  1202   00167C  6E38               	movwf	_puc^0,c
  1203   00167E  0E00               	movlw	high _val_tos
  1204   001680  6E39               	movwf	(_puc+1)^0,c
  1205                           
  1206                           ; BSR set to: 0
  1207   001682  C038  FFD9         	movff	_puc,fsr2l
  1208   001686  C039  FFDA         	movff	_puc+1,fsr2h
  1209   00168A  50DF               	movf	indf2,w,c
  1210   00168C  6EFD               	movwf	253,c	;volatile
  1211                           
  1212                           ; BSR set to: 0
  1213   00168E  4A38               	infsnz	_puc^0,f,c
  1214   001690  2A39               	incf	(_puc+1)^0,f,c
  1215                           
  1216                           ; BSR set to: 0
  1217   001692  C038  FFD9         	movff	_puc,fsr2l
  1218   001696  C039  FFDA         	movff	_puc+1,fsr2h
  1219   00169A  50DF               	movf	indf2,w,c
  1220   00169C  6EFE               	movwf	254,c	;volatile
  1221                           
  1222                           ; BSR set to: 0
  1223   00169E  4A38               	infsnz	_puc^0,f,c
  1224   0016A0  2A39               	incf	(_puc+1)^0,f,c
  1225                           
  1226                           ; BSR set to: 0
  1227   0016A2  C038  FFD9         	movff	_puc,fsr2l
  1228   0016A6  C039  FFDA         	movff	_puc+1,fsr2h
  1229   0016AA  50DF               	movf	indf2,w,c
  1230   0016AC  6EFF               	movwf	255,c	;volatile
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;systeme.c: 181: STKPTR=temp;
  1234   0016AE  C085  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;systeme.c: 184: STKPTR_T1=2;
  1238   0016B2  0E02               	movlw	2
  1239   0016B4  0101               	movlb	1	; () banked
  1240   0016B6  6F03               	movwf	3,b
  1241                           
  1242                           ; BSR set to: 1
  1243                           ;systeme.c: 185: STKPTR_T2=7;
  1244   0016B8  0E07               	movlw	7
  1245   0016BA  0102               	movlb	2	; () banked
  1246   0016BC  6F03               	movwf	3,b
  1247                           
  1248                           ; BSR set to: 2
  1249                           ;systeme.c: 186: STKPTR_T3=12;
  1250   0016BE  0E0C               	movlw	12
  1251   0016C0  0103               	movlb	3	; () banked
  1252   0016C2  6F03               	movwf	3,b
  1253                           
  1254                           ; BSR set to: 3
  1255                           ;systeme.c: 187: STKPTR_T4=17;
  1256   0016C4  0E11               	movlw	17
  1257   0016C6  0104               	movlb	4	; () banked
  1258   0016C8  6F03               	movwf	3,b
  1259                           
  1260                           ; BSR set to: 4
  1261                           ;systeme.c: 188: STKPTR_T5=22;
  1262   0016CA  0E16               	movlw	22
  1263   0016CC  0105               	movlb	5	; () banked
  1264   0016CE  6F03               	movwf	3,b
  1265                           
  1266                           ; BSR set to: 5
  1267                           ;systeme.c: 189: STKPTR_T6=27;
  1268   0016D0  0E1B               	movlw	27
  1269   0016D2  0106               	movlb	6	; () banked
  1270   0016D4  6F03               	movwf	3,b
  1271                           
  1272                           ; BSR set to: 6
  1273                           ;systeme.c: 192: Tick_Count=0;
  1274   0016D6  0E00               	movlw	0
  1275   0016D8  0100               	movlb	0	; () banked
  1276   0016DA  6F72               	movwf	114,b
  1277   0016DC  0E00               	movlw	0
  1278   0016DE  6F71               	movwf	113,b
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;systeme.c: 194: T0CON=0x01;
  1282   0016E0  0E01               	movlw	1
  1283   0016E2  6ED5               	movwf	213,c	;volatile
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;systeme.c: 195: T0IE=1;
  1287   0016E4  8AF2               	bsf	4082,5,c	;volatile
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;systeme.c: 197: if (INTCON3bits.INT3IF == 0)
  1291   0016E6  B4F0               	btfsc	240,2,c	;volatile
  1292   0016E8  0012               	return	
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;systeme.c: 198: {;systeme.c: 199: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  1296   0016EA  948B               	bcf	139,2,c	;volatile
  1297   0016EC  828B               	bsf	139,1,c	;volatile
  1298   0016EE  808F               	bsf	143,0,c	;volatile
  1299                           
  1300                           ; BSR set to: 0
  1301   0016F0  0012               	return		;funcret
  1302   0016F2                     __end_of_initialisation_du_systeme:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _initialisation_des_ports *****************
  1306 ;; Defined at:
  1307 ;;		line 25 in file "main.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 7
  1328 ;; This function calls:
  1329 ;;		Nothing
  1330 ;; This function is called by:
  1331 ;;		_main
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text2
  1336   0020B0                     __ptext2:
  1337                           	callstack 0
  1338   0020B0                     _initialisation_des_ports:
  1339                           	callstack 23
  1340                           
  1341                           ;main.c: 28: MEMCON=0xA0;
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;incstack = 0
  1345   0020B0  0EA0               	movlw	160
  1346   0020B2  010F               	movlb	15	; () banked
  1347   0020B4  6F26               	movwf	38,b	;volatile
  1348                           
  1349                           ;main.c: 31: ANCON0=0x00;
  1350   0020B6  0E00               	movlw	0
  1351   0020B8  6F25               	movwf	37,b	;volatile
  1352                           
  1353                           ;main.c: 32: ANCON1=0x00;
  1354   0020BA  0E00               	movlw	0
  1355   0020BC  6F24               	movwf	36,b	;volatile
  1356                           
  1357                           ;main.c: 33: ANCON2=0x00;
  1358   0020BE  0E00               	movlw	0
  1359   0020C0  6F23               	movwf	35,b	;volatile
  1360                           
  1361                           ; BSR set to: 15
  1362                           ;main.c: 34: ANCON0bits.ANSEL0=1;
  1363   0020C2  8125               	bsf	37,0,b	;volatile
  1364                           
  1365                           ; BSR set to: 15
  1366                           ;main.c: 35: ANCON0bits.ANSEL1=1;
  1367   0020C4  8325               	bsf	37,1,b	;volatile
  1368                           
  1369                           ; BSR set to: 15
  1370                           ;main.c: 36: ANCON0bits.ANSEL2=1;
  1371   0020C6  8525               	bsf	37,2,b	;volatile
  1372                           
  1373                           ; BSR set to: 15
  1374                           ;main.c: 37: ANCON0bits.ANSEL3=1;
  1375   0020C8  8725               	bsf	37,3,b	;volatile
  1376                           
  1377                           ; BSR set to: 15
  1378                           ;main.c: 38: ANCON1bits.ANSEL10=1;
  1379   0020CA  8524               	bsf	36,2,b	;volatile
  1380                           
  1381                           ; BSR set to: 15
  1382                           ;main.c: 39: ANCON1bits.ANSEL11=1;
  1383   0020CC  8724               	bsf	36,3,b	;volatile
  1384                           
  1385                           ; BSR set to: 15
  1386                           ;main.c: 43: LATCbits.LATC2=1;
  1387   0020CE  848B               	bsf	139,2,c	;volatile
  1388                           
  1389                           ; BSR set to: 15
  1390                           ;main.c: 44: LATCbits.LATC1=1;
  1391   0020D0  828B               	bsf	139,1,c	;volatile
  1392                           
  1393                           ; BSR set to: 15
  1394                           ;main.c: 45: LATGbits.LATG0=1;
  1395   0020D2  808F               	bsf	143,0,c	;volatile
  1396                           
  1397                           ; BSR set to: 15
  1398                           ;main.c: 48: TRISCbits.TRISC2=0;
  1399   0020D4  9494               	bcf	148,2,c	;volatile
  1400                           
  1401                           ; BSR set to: 15
  1402                           ;main.c: 49: TRISCbits.TRISC1=0;
  1403   0020D6  9294               	bcf	148,1,c	;volatile
  1404                           
  1405                           ; BSR set to: 15
  1406                           ;main.c: 50: TRISGbits.TRISG0=0;
  1407   0020D8  9098               	bcf	152,0,c	;volatile
  1408                           
  1409                           ; BSR set to: 15
  1410                           ;main.c: 51: TRISGbits.TRISG3=0;
  1411   0020DA  9698               	bcf	152,3,c	;volatile
  1412                           
  1413                           ; BSR set to: 15
  1414                           ;main.c: 52: TRISGbits.TRISG4=0;
  1415   0020DC  9898               	bcf	152,4,c	;volatile
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;main.c: 53: TRISDbits.TRISD2=0;
  1419   0020DE  9495               	bcf	149,2,c	;volatile
  1420                           
  1421                           ; BSR set to: 15
  1422                           ;main.c: 54: TRISDbits.TRISD3=0;
  1423   0020E0  9695               	bcf	149,3,c	;volatile
  1424                           
  1425                           ; BSR set to: 15
  1426                           ;main.c: 57: INTCON2bits.RBPU=0;
  1427   0020E2  9EF1               	bcf	241,7,c	;volatile
  1428                           
  1429                           ; BSR set to: 15
  1430                           ;main.c: 58: PADCFG1bits.REPU=1;
  1431   0020E4  8D53               	bsf	83,6,b	;volatile
  1432                           
  1433                           ; BSR set to: 15
  1434   0020E6  0012               	return		;funcret
  1435   0020E8                     __end_of_initialisation_des_ports:
  1436                           	callstack 0
  1437                           
  1438 ;; *************** function _initInterrupt *****************
  1439 ;; Defined at:
  1440 ;;		line 15 in file "systeme.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		None
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 7
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text3
  1469   0022CA                     __ptext3:
  1470                           	callstack 0
  1471   0022CA                     _initInterrupt:
  1472                           	callstack 23
  1473                           
  1474                           ;systeme.c: 17: RCONbits.IPEN = 1;
  1475                           
  1476                           ; BSR set to: 15
  1477                           ;incstack = 0
  1478   0022CA  8ED0               	bsf	208,7,c	;volatile
  1479                           
  1480                           ;systeme.c: 19: INTCON2bits.INT3IP = 1;
  1481   0022CC  82F1               	bsf	241,1,c	;volatile
  1482                           
  1483                           ;systeme.c: 20: INTCON3bits.INT2IP = 1;
  1484   0022CE  8EF0               	bsf	240,7,c	;volatile
  1485                           
  1486                           ;systeme.c: 21: INTCON3bits.INT1IP = 1;
  1487   0022D0  8CF0               	bsf	240,6,c	;volatile
  1488                           
  1489                           ;systeme.c: 23: INTCON2bits.INTEDG3 = 0;
  1490   0022D2  96F1               	bcf	241,3,c	;volatile
  1491                           
  1492                           ;systeme.c: 24: INTCON2bits.INTEDG2 = 0;
  1493   0022D4  98F1               	bcf	241,4,c	;volatile
  1494                           
  1495                           ;systeme.c: 25: INTCON2bits.INTEDG1 = 0;
  1496   0022D6  9AF1               	bcf	241,5,c	;volatile
  1497                           
  1498                           ;systeme.c: 27: INTCON3bits.INT3IF = 0;
  1499   0022D8  94F0               	bcf	240,2,c	;volatile
  1500                           
  1501                           ;systeme.c: 28: INTCON3bits.INT2IF = 0;
  1502   0022DA  92F0               	bcf	240,1,c	;volatile
  1503                           
  1504                           ;systeme.c: 29: INTCON3bits.INT1IF = 0;
  1505   0022DC  90F0               	bcf	240,0,c	;volatile
  1506                           
  1507                           ;systeme.c: 30: INTCONbits.INT0IF = 0;
  1508   0022DE  92F2               	bcf	242,1,c	;volatile
  1509                           
  1510                           ;systeme.c: 32: INTCONbits.RBIF = 0;
  1511   0022E0  90F2               	bcf	242,0,c	;volatile
  1512   0022E2  0012               	return		;funcret
  1513   0022E4                     __end_of_initInterrupt:
  1514                           	callstack 0
  1515                           
  1516 ;; *************** function _Init *****************
  1517 ;; Defined at:
  1518 ;;		line 4 in file "semaphore.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  sem             1  [STACK] unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1  [STACK] void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 7
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;;		_tache1
  1544 ;; This function uses a reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text4
  1548   002226                     __ptext4:
  1549                           	callstack 0
  1550   002226                     _Init:
  1551                           	callstack 20
  1552                           
  1553                           ;semaphore.c: 6: switch (sem)
  1554                           
  1555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1556                           ;incstack = 0
  1557   002226  D006               	goto	l2689
  1558   002228                     l2685:
  1559                           
  1560                           ;semaphore.c: 9: Val_sem_cna=1;
  1561   002228  0E01               	movlw	1
  1562   00222A  6E40               	movwf	_Val_sem_cna^0,c
  1563                           
  1564                           ;semaphore.c: 10: break;
  1565   00222C  D00B               	goto	l1421
  1566   00222E                     l2687:
  1567                           
  1568                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1569   00222E  0E01               	movlw	1
  1570   002230  6E3F               	movwf	_Val_sem_rxtx^0,c
  1571                           
  1572                           ;semaphore.c: 13: break;
  1573   002232  D008               	goto	l1421
  1574   002234                     l2689:
  1575                           
  1576                           ;stkvar	Init@sem @ sp[(0)+-1]
  1577   002234  0EFF               	movlw	-1
  1578   002236  50E3               	movf	plusw1,w,c
  1579                           
  1580                           ; Switch size 1, requested type "simple"
  1581                           ; Number of cases is 2, Range of values is 1 to 2
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            7     4 (average)
  1585                           ;	Chosen strategy is simple_byte
  1586   002238  0A01               	xorlw	1	; case 1
  1587   00223A  B4D8               	btfsc	status,2,c
  1588   00223C  D7F5               	goto	l2685
  1589   00223E  0A03               	xorlw	3	; case 2
  1590   002240  B4D8               	btfsc	status,2,c
  1591   002242  D7F5               	goto	l2687
  1592   002244                     l1421:
  1593                           
  1594                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1595   002244  52E5               	movf	postdec1,f,c
  1596   002246  0012               	return		;funcret
  1597   002248                     __end_of_Init:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _fonction_d_interruption *****************
  1601 ;; Defined at:
  1602 ;;		line 36 in file "systeme.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;		None
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;		None
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;Total ram usage:       12 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; Hardware stack levels required when called: 6
  1623 ;; This function calls:
  1624 ;;		_tache1
  1625 ;;		_tache2
  1626 ;;		_tache3
  1627 ;;		_tache4
  1628 ;;		_tache5
  1629 ;;		_tache6
  1630 ;; This function is called by:
  1631 ;;		Interrupt level 2
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	intcode
  1636   000008                     __pintcode:
  1637                           	callstack 0
  1638   000008                     _fonction_d_interruption:
  1639                           	callstack 23
  1640                           
  1641                           ;incstack = 0
  1642   000008  CFE9 F01D          	movff	fsr0l,??_fonction_d_interruption
  1643   00000C  CFEA F01E          	movff	fsr0h,??_fonction_d_interruption+1
  1644   000010  CFE1 F01F          	movff	fsr1l,??_fonction_d_interruption+2
  1645   000014  CFE2 F020          	movff	fsr1h,??_fonction_d_interruption+3
  1646   000018  CFD9 F021          	movff	fsr2l,??_fonction_d_interruption+4
  1647   00001C  CFDA F022          	movff	fsr2h,??_fonction_d_interruption+5
  1648   000020  CFF3 F023          	movff	prodl,??_fonction_d_interruption+6
  1649   000024  CFF4 F024          	movff	prodh,??_fonction_d_interruption+7
  1650   000028  CFF6 F025          	movff	tblptrl,??_fonction_d_interruption+8
  1651   00002C  CFF7 F026          	movff	tblptrh,??_fonction_d_interruption+9
  1652   000030  CFF8 F027          	movff	tblptru,??_fonction_d_interruption+10
  1653   000034  CFF5 F028          	movff	tablat,??_fonction_d_interruption+11
  1654   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1655                           
  1656                           ;systeme.c: 39: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1657   00003C  CFD8 F061          	movff	status,97	;volatile
  1658   000040  0100               	movlb	0	; () banked
  1659   000042  6F60               	movwf	96,b
  1660                           
  1661                           ; BSR set to: 0
  1662   000044  CFE0 F062          	movff	bsr,98	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;systeme.c: 40: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1666   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1667                           
  1668                           ; BSR set to: 0
  1669   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;systeme.c: 43: if(T0IE && T0IF)
  1673   000050  BAF2               	btfsc	4082,5,c	;volatile
  1674                           
  1675                           ; BSR set to: 0
  1676   000052  A4F2               	btfss	4082,2,c	;volatile
  1677   000054  D143               	goto	i2l5227
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;systeme.c: 44: {;systeme.c: 45: if (DEMARRAGE==1)
  1681   000056  0565               	decf	101,w,b
  1682   000058  A4D8               	btfss	status,2,c
  1683   00005A  D004               	goto	i2l4927
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;systeme.c: 46: {;systeme.c: 47: STKPTR=27;
  1687   00005C  0E1B               	movlw	27
  1688   00005E  6EFC               	movwf	252,c	;volatile
  1689                           
  1690                           ;systeme.c: 48: DEMARRAGE=0;
  1691   000060  0E00               	movlw	0
  1692   000062  6F65               	movwf	101,b
  1693   000064                     i2l4927:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;systeme.c: 49: };systeme.c: 53: FSR0H=tache_active;
  1697   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1698                           
  1699                           ;systeme.c: 54: FSR0L=0;
  1700   000068  0E00               	movlw	0
  1701   00006A  6EE9               	movwf	233,c	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;systeme.c: 55: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1705   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1706                           
  1707                           ; BSR set to: 0
  1708   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1709                           
  1710                           ; BSR set to: 0
  1711   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;systeme.c: 56: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1718   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1719                           
  1720                           ; BSR set to: 0
  1721   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1722                           
  1723                           ; BSR set to: 0
  1724   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730                           ;systeme.c: 57: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1731   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1732                           
  1733                           ; BSR set to: 0
  1734   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1735                           
  1736                           ; BSR set to: 0
  1737   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;systeme.c: 58: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1744   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1745                           
  1746                           ; BSR set to: 0
  1747   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1748                           
  1749                           ; BSR set to: 0
  1750   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;systeme.c: 59: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1757   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1758                           
  1759                           ; BSR set to: 0
  1760   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1761                           
  1762                           ;systeme.c: 63: FSR1H=0;
  1763   0000B4  0E00               	movlw	0
  1764   0000B6  6EE2               	movwf	226,c	;volatile
  1765                           
  1766                           ;systeme.c: 64: FSR1L=0;
  1767   0000B8  0E00               	movlw	0
  1768   0000BA  6EE1               	movwf	225,c	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;systeme.c: 65: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1772   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1773                           
  1774                           ; BSR set to: 0
  1775   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1779                           
  1780                           ; BSR set to: 0
  1781   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;systeme.c: 66: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1785   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1786                           
  1787                           ; BSR set to: 0
  1788   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1789                           
  1790                           ; BSR set to: 0
  1791   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1792                           
  1793                           ; BSR set to: 0
  1794   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;systeme.c: 67: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1798   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1799                           
  1800                           ; BSR set to: 0
  1801   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1802                           
  1803                           ; BSR set to: 0
  1804   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1805                           
  1806                           ; BSR set to: 0
  1807   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;systeme.c: 68: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1811   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1812                           
  1813                           ; BSR set to: 0
  1814   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1815                           
  1816                           ; BSR set to: 0
  1817   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1818                           
  1819                           ; BSR set to: 0
  1820   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;systeme.c: 70: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1824   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1831                           
  1832                           ; BSR set to: 0
  1833   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;systeme.c: 71: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1837   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1838                           
  1839                           ; BSR set to: 0
  1840   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1844                           
  1845                           ; BSR set to: 0
  1846   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1847                           
  1848                           ; BSR set to: 0
  1849                           ;systeme.c: 72: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1850   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1851                           
  1852                           ; BSR set to: 0
  1853   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1854                           
  1855                           ; BSR set to: 0
  1856   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1857                           
  1858                           ; BSR set to: 0
  1859   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;systeme.c: 73: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1863   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1864                           
  1865                           ; BSR set to: 0
  1866   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1873                           
  1874                           ; BSR set to: 0
  1875                           ;systeme.c: 75: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1876   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1877                           
  1878                           ; BSR set to: 0
  1879   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;systeme.c: 76: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1889   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1890                           
  1891                           ; BSR set to: 0
  1892   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1893                           
  1894                           ; BSR set to: 0
  1895   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1896                           
  1897                           ; BSR set to: 0
  1898   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;systeme.c: 77: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1902   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1903                           
  1904                           ; BSR set to: 0
  1905   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1906                           
  1907                           ; BSR set to: 0
  1908   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;systeme.c: 78: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1915   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1916                           
  1917                           ; BSR set to: 0
  1918   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1919                           
  1920                           ; BSR set to: 0
  1921   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1925                           
  1926                           ;systeme.c: 81: TMR0=(0xFFFF-30000);
  1927   00017C  0E8A               	movlw	138
  1928   00017E  6ED7               	movwf	215,c	;volatile
  1929   000180  0ECF               	movlw	207
  1930   000182  6ED6               	movwf	214,c	;volatile
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;systeme.c: 82: T0IF=0;
  1934   000184  94F2               	bcf	4082,2,c	;volatile
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;systeme.c: 84: Tick_Count++;
  1938   000186  4B71               	infsnz	113,f,b
  1939   000188  2B72               	incf	114,f,b
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;systeme.c: 86: pointeur_de_tache++;
  1943   00018A  2B70               	incf	112,f,b
  1944                           
  1945                           ; BSR set to: 0
  1946                           ;systeme.c: 87: if (pointeur_de_tache==6)
  1947   00018C  0E06               	movlw	6
  1948   00018E  1970               	xorwf	112,w,b
  1949   000190  A4D8               	btfss	status,2,c
  1950   000192  D002               	goto	i2l5071
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;systeme.c: 88: pointeur_de_tache=0;
  1954   000194  0E00               	movlw	0
  1955   000196  6F70               	movwf	112,b
  1956   000198                     i2l5071:
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;systeme.c: 89: tache_active=queue[pointeur_de_tache];
  1960   000198  0E69               	movlw	105
  1961   00019A  2570               	addwf	112,w,b
  1962   00019C  6ED9               	movwf	fsr2l,c
  1963   00019E  6ADA               	clrf	fsr2h,c
  1964   0001A0  0E00               	movlw	0
  1965   0001A2  22DA               	addwfc	fsr2h,f,c
  1966   0001A4  50DF               	movf	indf2,w,c
  1967   0001A6  6F6F               	movwf	111,b
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;systeme.c: 94: FSR1H=0;
  1971   0001A8  0E00               	movlw	0
  1972   0001AA  6EE2               	movwf	226,c	;volatile
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;systeme.c: 95: FSR1L=0;
  1976   0001AC  0E00               	movlw	0
  1977   0001AE  6EE1               	movwf	225,c	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;systeme.c: 96: FSR0H=tache_active;
  1981   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;systeme.c: 97: FSR0L=18;
  1985   0001B4  0E12               	movlw	18
  1986   0001B6  6EE9               	movwf	233,c	;volatile
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;systeme.c: 98: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1990   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1991                           
  1992                           ; BSR set to: 0
  1993   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1994                           
  1995                           ; BSR set to: 0
  1996   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1997                           
  1998                           ; BSR set to: 0
  1999   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;systeme.c: 99: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2003   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2004                           
  2005                           ; BSR set to: 0
  2006   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2007                           
  2008                           ; BSR set to: 0
  2009   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2010                           
  2011                           ; BSR set to: 0
  2012   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;systeme.c: 100: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2016   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2017                           
  2018                           ; BSR set to: 0
  2019   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2023                           
  2024                           ; BSR set to: 0
  2025   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;systeme.c: 101: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2029   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2030                           
  2031                           ; BSR set to: 0
  2032   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2033                           
  2034                           ; BSR set to: 0
  2035   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2036                           
  2037                           ; BSR set to: 0
  2038   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;systeme.c: 103: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2042   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2043                           
  2044                           ; BSR set to: 0
  2045   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2046                           
  2047                           ; BSR set to: 0
  2048   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2049                           
  2050                           ; BSR set to: 0
  2051   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;systeme.c: 104: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2055   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2056                           
  2057                           ; BSR set to: 0
  2058   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2059                           
  2060                           ; BSR set to: 0
  2061   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2062                           
  2063                           ; BSR set to: 0
  2064   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2065                           
  2066                           ; BSR set to: 0
  2067                           ;systeme.c: 105: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2068   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2069                           
  2070                           ; BSR set to: 0
  2071   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2072                           
  2073                           ; BSR set to: 0
  2074   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2075                           
  2076                           ; BSR set to: 0
  2077   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;systeme.c: 106: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2081   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2082                           
  2083                           ; BSR set to: 0
  2084   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2085                           
  2086                           ; BSR set to: 0
  2087   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2088                           
  2089                           ; BSR set to: 0
  2090   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;systeme.c: 108: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2094   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2095                           
  2096                           ; BSR set to: 0
  2097   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2098                           
  2099                           ; BSR set to: 0
  2100   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2101                           
  2102                           ; BSR set to: 0
  2103   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;systeme.c: 109: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2107   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2108                           
  2109                           ; BSR set to: 0
  2110   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2111                           
  2112                           ; BSR set to: 0
  2113   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2114                           
  2115                           ; BSR set to: 0
  2116   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;systeme.c: 110: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2120   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2121                           
  2122                           ; BSR set to: 0
  2123   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2124                           
  2125                           ; BSR set to: 0
  2126   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2127                           
  2128                           ; BSR set to: 0
  2129   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;systeme.c: 111: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0
      +                          ;
  2133   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2134                           
  2135                           ; BSR set to: 0
  2136   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2137                           
  2138                           ; BSR set to: 0
  2139   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2140                           
  2141                           ; BSR set to: 0
  2142   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;systeme.c: 115: FSR0H=tache_active;
  2146   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;systeme.c: 116: FSR0L=0;
  2150   00027C  0E00               	movlw	0
  2151   00027E  6EE9               	movwf	233,c	;volatile
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;systeme.c: 118: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTI
      +                          NC0; STKPTR=POSTINC0;
  2155   000280  CFEE F060          	movff	postinc0,96	;volatile
  2156                           
  2157                           ; BSR set to: 0
  2158   000284  CFEE F061          	movff	postinc0,97	;volatile
  2159                           
  2160                           ; BSR set to: 0
  2161   000288  CFEE F062          	movff	postinc0,98	;volatile
  2162                           
  2163                           ; BSR set to: 0
  2164   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  2165                           
  2166                           ; BSR set to: 0
  2167                           ;systeme.c: 119: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2168   000290  CFEE F063          	movff	postinc0,99	;volatile
  2169                           
  2170                           ; BSR set to: 0
  2171   000294  CFEE F064          	movff	postinc0,100	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2175                           
  2176                           ; BSR set to: 0
  2177   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;systeme.c: 120: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2181   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2182                           
  2183                           ; BSR set to: 0
  2184   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2185                           
  2186                           ; BSR set to: 0
  2187   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2188                           
  2189                           ; BSR set to: 0
  2190   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;systeme.c: 121: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2194   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2195                           
  2196                           ; BSR set to: 0
  2197   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2198                           
  2199                           ; BSR set to: 0
  2200   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2201                           
  2202                           ; BSR set to: 0
  2203   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;systeme.c: 122: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2207   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2208                           
  2209                           ; BSR set to: 0
  2210   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;systeme.c: 125: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2214   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2215                           
  2216                           ; BSR set to: 0
  2217   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2218                           
  2219                           ; BSR set to: 0
  2220   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;systeme.c: 126: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2224   0002D4  5160               	movf	96,w,b
  2225                           
  2226                           ; BSR set to: 0
  2227   0002D6  C061 FFD8          	movff	97,status	;volatile
  2228   0002DA  0010               	retfie		;# 
  2229   0002DC                     i2l5227:
  2230                           
  2231                           ;systeme.c: 132: };systeme.c: 135: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2232   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2233   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2234   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2235                           
  2236                           ;systeme.c: 136: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2237   0002E8  0100               	movlb	0	; () banked
  2238   0002EA  5160               	movf	96,w,b
  2239                           
  2240                           ; BSR set to: 0
  2241   0002EC  C061 FFD8          	movff	97,status	;volatile
  2242   0002F0  0010               	retfie		;# 
  2243                           
  2244                           ;systeme.c: 142: tache1();
  2245   0002F2  EC6F  F008         	call	_tache1	;wreg free
  2246                           
  2247                           ;systeme.c: 143: tache2();
  2248   0002F6  EC79  F00B         	call	_tache2	;wreg free
  2249                           
  2250                           ;systeme.c: 144: tache3();
  2251   0002FA  ECF3  F00B         	call	_tache3	;wreg free
  2252                           
  2253                           ;systeme.c: 145: tache4();
  2254   0002FE  EC01  F011         	call	_tache4	;wreg free
  2255                           
  2256                           ;systeme.c: 146: tache5();
  2257   000302  EC72  F011         	call	_tache5	;wreg free
  2258                           
  2259                           ;systeme.c: 147: tache6();
  2260   000306  ECF6  F00F         	call	_tache6	;wreg free
  2261   00030A  C028  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2262   00030E  C027  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2263   000312  C026  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2264   000316  C025  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2265   00031A  C024  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2266   00031E  C023  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2267   000322  C022  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2268   000326  C021  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2269   00032A  C020  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2270   00032E  C01F  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2271   000332  C01E  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2272   000336  C01D  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2273   00033A  0011               	retfie		f
  2274   00033C                     __end_of_fonction_d_interruption:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _tache6 *****************
  2278 ;; Defined at:
  2279 ;;		line 3 in file "T6.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  n               1    8[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      void 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;Total ram usage:        1 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 2
  2300 ;; This function calls:
  2301 ;;		_lecture_normale
  2302 ;; This function is called by:
  2303 ;;		_fonction_d_interruption
  2304 ;;		_initialisation_du_systeme
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text6
  2309   001FEC                     __ptext6:
  2310                           	callstack 0
  2311   001FEC                     _tache6:
  2312                           	callstack 26
  2313                           
  2314                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2315                           
  2316                           ;incstack = 0
  2317                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2318   001FEC  0E75               	movlw	117
  2319   001FEE  6E03               	movwf	lecture_normale@stid_id^0,c
  2320   001FF0  0E00               	movlw	0
  2321   001FF2  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2322   001FF4  EC1F  F00D         	call	_lecture_normale	;wreg free
  2323   001FF8  6E09               	movwf	tache6@n^0,c
  2324                           
  2325                           ;T6.c: 9: if (n > 0)
  2326   001FFA  5009               	movf	tache6@n^0,w,c
  2327   001FFC  B4D8               	btfsc	status,2,c
  2328   001FFE  D015               	goto	i2l4891
  2329                           
  2330                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2331   002000  0E04               	movlw	4
  2332   002002  1809               	xorwf	tache6@n^0,w,c
  2333   002004  A4D8               	btfss	status,2,c
  2334   002006  D004               	goto	i2l4883
  2335                           
  2336                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2337   002008  C009  F07F         	movff	tache6@n,127
  2338                           
  2339                           ;T6.c: 16: Personne = 2;
  2340   00200C  0E02               	movlw	2
  2341   00200E  D007               	goto	L1
  2342   002010                     i2l4883:
  2343                           
  2344                           ;T6.c: 18: else if (n == 8)
  2345   002010  0E08               	movlw	8
  2346   002012  1809               	xorwf	tache6@n^0,w,c
  2347   002014  A4D8               	btfss	status,2,c
  2348   002016  D005               	goto	i2l4889
  2349                           
  2350                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2351   002018  C009  F07F         	movff	tache6@n,127
  2352                           
  2353                           ;T6.c: 21: Personne = 1;
  2354   00201C  0E01               	movlw	1
  2355   00201E                     L1:
  2356   00201E  0100               	movlb	0	; () banked
  2357   002020  D008               	goto	L2
  2358   002022                     i2l4889:
  2359                           
  2360                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2361   002022  0E00               	movlw	0
  2362   002024  0100               	movlb	0	; () banked
  2363   002026  6F7F               	movwf	127,b
  2364   002028  D7E1               	goto	__ptext6
  2365   00202A                     i2l4891:
  2366                           
  2367                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2368   00202A  0E00               	movlw	0
  2369   00202C  0100               	movlb	0	; () banked
  2370   00202E  6F7F               	movwf	127,b
  2371                           
  2372                           ;T6.c: 33: Personne = 0;
  2373   002030  0E00               	movlw	0
  2374   002032                     L2:
  2375   002032  6F82               	movwf	130,b
  2376   002034  D7DB               	goto	__ptext6
  2377   002036                     __end_of_tache6:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _lecture_normale *****************
  2381 ;; Defined at:
  2382 ;;		line 5 in file "stid.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2385 ;;		 -> badge(10), 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  octet           1    7[COMRAM] unsigned char 
  2388 ;;  n_bit           1    6[COMRAM] unsigned char 
  2389 ;;  n_octet         1    5[COMRAM] unsigned char 
  2390 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      unsigned char 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;Total ram usage:        6 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 1
  2407 ;; This function calls:
  2408 ;;		_stid_delai_us
  2409 ;; This function is called by:
  2410 ;;		_tache6
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text7
  2415   001A3E                     __ptext7:
  2416                           	callstack 0
  2417   001A3E                     _lecture_normale:
  2418                           	callstack 26
  2419                           
  2420                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;incstack = 0
  2424   001A3E  8295               	bsf	149,1,c	;volatile
  2425                           
  2426                           ;stid.c: 10: LATDbits.LATD3=0;
  2427   001A40  968C               	bcf	140,3,c	;volatile
  2428                           
  2429                           ;stid.c: 11: LATDbits.LATD2=0;
  2430   001A42  948C               	bcf	140,2,c	;volatile
  2431                           
  2432                           ;stid.c: 12: stid_delai_us(100);
  2433   001A44  0E00               	movlw	0
  2434   001A46  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2435   001A48  0E64               	movlw	100
  2436   001A4A  6E01               	movwf	stid_delai_us@isdu^0,c
  2437   001A4C  ECA6  F011         	call	_stid_delai_us	;wreg free
  2438                           
  2439                           ;stid.c: 13: LATDbits.LATD3=1;
  2440   001A50  868C               	bsf	140,3,c	;volatile
  2441                           
  2442                           ;stid.c: 14: temps_attente=0;
  2443   001A52  0E00               	movlw	0
  2444   001A54  6E05               	movwf	lecture_normale@temps_attente^0,c
  2445   001A56                     i2l4407:
  2446                           
  2447                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2448   001A56  0E03               	movlw	3
  2449   001A58  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2450   001A5A  0EE8               	movlw	232
  2451   001A5C  6E01               	movwf	stid_delai_us@isdu^0,c
  2452   001A5E  ECA6  F011         	call	_stid_delai_us	;wreg free
  2453                           
  2454                           ;stid.c: 18: temps_attente++;
  2455   001A62  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2456                           
  2457                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2458   001A64  A083               	btfss	131,0,c	;volatile
  2459   001A66  D002               	goto	i2l4415
  2460                           
  2461                           ;stid.c: 20: temps_attente=65;
  2462   001A68  0E41               	movlw	65
  2463   001A6A  6E05               	movwf	lecture_normale@temps_attente^0,c
  2464   001A6C                     i2l4415:
  2465                           
  2466                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2467   001A6C  0E40               	movlw	64
  2468   001A6E  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2469   001A70  D7F2               	goto	i2l4407
  2470                           
  2471                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2472   001A72  A083               	btfss	131,0,c	;volatile
  2473   001A74  D033               	goto	i2l4451
  2474                           
  2475                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2476   001A76  0E00               	movlw	0
  2477   001A78  6E06               	movwf	lecture_normale@n_octet^0,c
  2478   001A7A                     i2l1540:
  2479                           
  2480                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2481   001A7A  0E00               	movlw	0
  2482   001A7C  6E08               	movwf	lecture_normale@octet^0,c
  2483                           
  2484                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2485   001A7E  0E00               	movlw	0
  2486   001A80  6E07               	movwf	lecture_normale@n_bit^0,c
  2487   001A82                     i2l1541:
  2488                           
  2489                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2490   001A82  A283               	btfss	131,1,c	;volatile
  2491   001A84  D003               	goto	i2l1543
  2492                           
  2493                           ;stid.c: 34: octet=(octet|0x01);
  2494   001A86  5008               	movf	lecture_normale@octet^0,w,c
  2495   001A88  0901               	iorlw	1
  2496   001A8A  6E08               	movwf	lecture_normale@octet^0,c
  2497   001A8C                     i2l1543:
  2498                           
  2499                           ;stid.c: 35: octet=octet<<1;
  2500   001A8C  5008               	movf	lecture_normale@octet^0,w,c
  2501   001A8E  2408               	addwf	lecture_normale@octet^0,w,c
  2502   001A90  6E08               	movwf	lecture_normale@octet^0,c
  2503                           
  2504                           ;stid.c: 36: stid_delai_us(100);
  2505   001A92  0E00               	movlw	0
  2506   001A94  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2507   001A96  0E64               	movlw	100
  2508   001A98  6E01               	movwf	stid_delai_us@isdu^0,c
  2509   001A9A  ECA6  F011         	call	_stid_delai_us	;wreg free
  2510                           
  2511                           ;stid.c: 37: LATDbits.LATD2=1;
  2512   001A9E  848C               	bsf	140,2,c	;volatile
  2513                           
  2514                           ;stid.c: 38: stid_delai_us(500);
  2515   001AA0  0E01               	movlw	1
  2516   001AA2  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2517   001AA4  0EF4               	movlw	244
  2518   001AA6  6E01               	movwf	stid_delai_us@isdu^0,c
  2519   001AA8  ECA6  F011         	call	_stid_delai_us	;wreg free
  2520                           
  2521                           ;stid.c: 39: LATDbits.LATD2=0;
  2522   001AAC  948C               	bcf	140,2,c	;volatile
  2523                           
  2524                           ;stid.c: 40: stid_delai_us(400);
  2525   001AAE  0E01               	movlw	1
  2526   001AB0  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2527   001AB2  0E90               	movlw	144
  2528   001AB4  6E01               	movwf	stid_delai_us@isdu^0,c
  2529   001AB6  ECA6  F011         	call	_stid_delai_us	;wreg free
  2530   001ABA  2A07               	incf	lecture_normale@n_bit^0,f,c
  2531   001ABC  0E07               	movlw	7
  2532   001ABE  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2533   001AC0  D7E0               	goto	i2l1541
  2534                           
  2535                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2536   001AC2  5006               	movf	lecture_normale@n_octet^0,w,c
  2537   001AC4  2403               	addwf	lecture_normale@stid_id^0,w,c
  2538   001AC6  6ED9               	movwf	fsr2l,c
  2539   001AC8  0E00               	movlw	0
  2540   001ACA  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2541   001ACC  6EDA               	movwf	fsr2h,c
  2542   001ACE  C008  FFDF         	movff	lecture_normale@octet,indf2
  2543                           
  2544                           ;stid.c: 43: n_octet++;
  2545   001AD2  2A06               	incf	lecture_normale@n_octet^0,f,c
  2546                           
  2547                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2548   001AD4  B083               	btfsc	131,0,c	;volatile
  2549   001AD6  D7D1               	goto	i2l1540
  2550                           
  2551                           ;stid.c: 47: return n_octet;
  2552   001AD8  5006               	movf	lecture_normale@n_octet^0,w,c
  2553   001ADA  0012               	return	
  2554   001ADC                     i2l4451:
  2555                           
  2556                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2557   001ADC  0E00               	movlw	0
  2558   001ADE  0012               	return		;funcret
  2559   001AE0                     __end_of_lecture_normale:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function _stid_delai_us *****************
  2563 ;; Defined at:
  2564 ;;		line 56 in file "stid.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  isdu            2    0[COMRAM] unsigned int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;Total ram usage:        2 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_lecture_normale
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text8
  2592   00234C                     __ptext8:
  2593                           	callstack 0
  2594   00234C                     _stid_delai_us:
  2595                           	callstack 26
  2596                           
  2597                           ;stid.c: 58: while(isdu>0)
  2598                           
  2599                           ;incstack = 0
  2600   00234C  D006               	goto	i2l4193
  2601   00234E                     i2l1550:
  2602                           
  2603                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2604   00234E  F000               	nop	
  2605   002350  F000               	nop	
  2606   002352  F000               	nop	
  2607                           
  2608                           ;stid.c: 61: isdu--;
  2609   002354  0601               	decf	stid_delai_us@isdu^0,f,c
  2610   002356  A0D8               	btfss	status,0,c
  2611   002358  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2612   00235A                     i2l4193:
  2613   00235A  5001               	movf	stid_delai_us@isdu^0,w,c
  2614   00235C  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2615   00235E  B4D8               	btfsc	status,2,c
  2616   002360  0012               	return	
  2617   002362  D7F5               	goto	i2l1550
  2618   002364                     __end_of_stid_delai_us:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _tache5 *****************
  2622 ;; Defined at:
  2623 ;;		line 3 in file "T5.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  a               2    0[COMRAM] unsigned int 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, status,2, status,0
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;Total ram usage:        2 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; This function calls:
  2644 ;;		Nothing
  2645 ;; This function is called by:
  2646 ;;		_fonction_d_interruption
  2647 ;;		_initialisation_du_systeme
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           	psect	text9
  2652   0022E4                     __ptext9:
  2653                           	callstack 0
  2654   0022E4                     _tache5:
  2655                           	callstack 28
  2656                           
  2657                           ;T5.c: 9: {;T5.c: 23: for (a = 0; a < 65000; a++)
  2658                           
  2659                           ;incstack = 0
  2660                           ;T5.c: 5: unsigned int a;;T5.c: 8: while(1)
  2661   0022E4  0E00               	movlw	0
  2662   0022E6  6E02               	movwf	(tache5@a+1)^0,c
  2663   0022E8  0E00               	movlw	0
  2664   0022EA  6E01               	movwf	tache5@a^0,c
  2665   0022EC                     i2l3531:
  2666                           
  2667                           ;T5.c: 24: ;
  2668   0022EC  4A01               	infsnz	tache5@a^0,f,c
  2669   0022EE  2A02               	incf	(tache5@a+1)^0,f,c
  2670   0022F0  0EE8               	movlw	232
  2671   0022F2  5C01               	subwf	tache5@a^0,w,c
  2672   0022F4  0EFD               	movlw	253
  2673   0022F6  5802               	subwfb	(tache5@a+1)^0,w,c
  2674   0022F8  B0D8               	btfsc	status,0,c
  2675   0022FA  D7F4               	goto	__ptext9
  2676   0022FC  D7F7               	goto	i2l3531
  2677   0022FE                     __end_of_tache5:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function _tache4 *****************
  2681 ;; Defined at:
  2682 ;;		line 3 in file "T4.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  a               2    2[COMRAM] unsigned int 
  2687 ;;  message         1    1[COMRAM] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;Total ram usage:        3 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; Hardware stack levels required when called: 1
  2704 ;; This function calls:
  2705 ;;		_afficheur_texte
  2706 ;; This function is called by:
  2707 ;;		_fonction_d_interruption
  2708 ;;		_initialisation_du_systeme
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text10
  2713   002202                     __ptext10:
  2714                           	callstack 0
  2715   002202                     _tache4:
  2716                           	callstack 27
  2717                           
  2718                           ;T4.c: 5: unsigned int a;;T4.c: 6: char message= "Test";
  2719                           
  2720                           ;incstack = 0
  2721   002202  0EC3               	movlw	low (low STR_21)
  2722   002204  6E02               	movwf	tache4@message^0,c
  2723   002206                     i2l3513:
  2724                           
  2725                           ;T4.c: 9: {;T4.c: 14: afficheur_texte(message);
  2726   002206  5002               	movf	tache4@message^0,w,c
  2727   002208  ECE6  F011         	call	_afficheur_texte
  2728                           
  2729                           ;T4.c: 19: for (a = 0; a < 65000; a++)
  2730   00220C  0E00               	movlw	0
  2731   00220E  6E04               	movwf	(tache4@a+1)^0,c
  2732   002210  0E00               	movlw	0
  2733   002212  6E03               	movwf	tache4@a^0,c
  2734   002214                     i2l3521:
  2735                           
  2736                           ;T4.c: 20: ;
  2737   002214  4A03               	infsnz	tache4@a^0,f,c
  2738   002216  2A04               	incf	(tache4@a+1)^0,f,c
  2739   002218  0EE8               	movlw	232
  2740   00221A  5C03               	subwf	tache4@a^0,w,c
  2741   00221C  0EFD               	movlw	253
  2742   00221E  5804               	subwfb	(tache4@a+1)^0,w,c
  2743   002220  B0D8               	btfsc	status,0,c
  2744   002222  D7F1               	goto	i2l3513
  2745   002224  D7F7               	goto	i2l3521
  2746   002226                     __end_of_tache4:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _afficheur_texte *****************
  2750 ;; Defined at:
  2751 ;;		line 520 in file "afficheur.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  message         1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  message         1    0[COMRAM] unsigned char 
  2756 ;;  i               2    0        int 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_tache4
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text11
  2780   0023CC                     __ptext11:
  2781                           	callstack 0
  2782   0023CC                     _afficheur_texte:
  2783                           	callstack 27
  2784                           
  2785                           ;incstack = 0
  2786   0023CC  0012               	return		;funcret
  2787   0023CE                     __end_of_afficheur_texte:
  2788                           	callstack 0
  2789                           
  2790 ;; *************** function _tache3 *****************
  2791 ;; Defined at:
  2792 ;;		line 3 in file "T3.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_fonction_d_interruption
  2816 ;;		_initialisation_du_systeme
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text12
  2821   0017E6                     __ptext12:
  2822                           	callstack 0
  2823   0017E6                     _tache3:
  2824                           	callstack 28
  2825                           
  2826                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2827                           
  2828                           ;incstack = 0
  2829                           ;T3.c: 5: while(1)
  2830   0017E6  0100               	movlb	0	; () banked
  2831   0017E8  0566               	decf	102,w,b
  2832   0017EA  A4D8               	btfss	status,2,c
  2833   0017EC  D014               	goto	i2l3447
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2837   0017EE  0ECA               	movlw	202
  2838   0017F0  6567               	cpfsgt	103,b
  2839   0017F2  D011               	goto	i2l3447
  2840                           
  2841                           ; BSR set to: 0
  2842   0017F4  0ED1               	movlw	209
  2843   0017F6  6167               	cpfslt	103,b
  2844   0017F8  D00E               	goto	i2l3447
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2848   0017FA  0E70               	movlw	112
  2849   0017FC  6568               	cpfsgt	104,b
  2850   0017FE  D004               	goto	i2l3441
  2851                           
  2852                           ; BSR set to: 0
  2853   001800  0E79               	movlw	121
  2854   001802  6168               	cpfslt	104,b
  2855   001804  D001               	goto	i2l3441
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2859   001806  848B               	bsf	139,2,c	;volatile
  2860   001808                     i2l3441:
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2864   001808  0E78               	movlw	120
  2865   00180A  6568               	cpfsgt	104,b
  2866   00180C  D004               	goto	i2l3447
  2867                           
  2868                           ; BSR set to: 0
  2869   00180E  0E7F               	movlw	127
  2870   001810  6168               	cpfslt	104,b
  2871   001812  D001               	goto	i2l3447
  2872                           
  2873                           ; BSR set to: 0
  2874                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2875   001814  948B               	bcf	139,2,c	;volatile
  2876   001816                     i2l3447:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2880   001816  0566               	decf	102,w,b
  2881   001818  A4D8               	btfss	status,2,c
  2882   00181A  D014               	goto	i2l3465
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2886   00181C  0ED6               	movlw	214
  2887   00181E  6567               	cpfsgt	103,b
  2888   001820  D011               	goto	i2l3465
  2889                           
  2890                           ; BSR set to: 0
  2891   001822  0EDD               	movlw	221
  2892   001824  6167               	cpfslt	103,b
  2893   001826  D00E               	goto	i2l3465
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2897   001828  0E70               	movlw	112
  2898   00182A  6568               	cpfsgt	104,b
  2899   00182C  D004               	goto	i2l3459
  2900                           
  2901                           ; BSR set to: 0
  2902   00182E  0E79               	movlw	121
  2903   001830  6168               	cpfslt	104,b
  2904   001832  D001               	goto	i2l3459
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2908   001834  828B               	bsf	139,1,c	;volatile
  2909   001836                     i2l3459:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2913   001836  0E78               	movlw	120
  2914   001838  6568               	cpfsgt	104,b
  2915   00183A  D004               	goto	i2l3465
  2916                           
  2917                           ; BSR set to: 0
  2918   00183C  0E7F               	movlw	127
  2919   00183E  6168               	cpfslt	104,b
  2920   001840  D001               	goto	i2l3465
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2924   001842  928B               	bcf	139,1,c	;volatile
  2925   001844                     i2l3465:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2929   001844  0566               	decf	102,w,b
  2930   001846  A4D8               	btfss	status,2,c
  2931   001848  D014               	goto	i2l3483
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2935   00184A  0EE2               	movlw	226
  2936   00184C  6567               	cpfsgt	103,b
  2937   00184E  D011               	goto	i2l3483
  2938                           
  2939                           ; BSR set to: 0
  2940   001850  0EE9               	movlw	233
  2941   001852  6167               	cpfslt	103,b
  2942   001854  D00E               	goto	i2l3483
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  2946   001856  0E70               	movlw	112
  2947   001858  6568               	cpfsgt	104,b
  2948   00185A  D004               	goto	i2l3477
  2949                           
  2950                           ; BSR set to: 0
  2951   00185C  0E79               	movlw	121
  2952   00185E  6168               	cpfslt	104,b
  2953   001860  D001               	goto	i2l3477
  2954                           
  2955                           ; BSR set to: 0
  2956                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  2957   001862  808F               	bsf	143,0,c	;volatile
  2958   001864                     i2l3477:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  2962   001864  0E78               	movlw	120
  2963   001866  6568               	cpfsgt	104,b
  2964   001868  D004               	goto	i2l3483
  2965                           
  2966                           ; BSR set to: 0
  2967   00186A  0E7F               	movlw	127
  2968   00186C  6168               	cpfslt	104,b
  2969   00186E  D001               	goto	i2l3483
  2970                           
  2971                           ; BSR set to: 0
  2972                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  2973   001870  908F               	bcf	143,0,c	;volatile
  2974   001872                     i2l3483:
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  2978   001872  0566               	decf	102,w,b
  2979   001874  A4D8               	btfss	status,2,c
  2980   001876  D011               	goto	i2l3497
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  2984   001878  0EB3               	movlw	179
  2985   00187A  6567               	cpfsgt	103,b
  2986   00187C  D00E               	goto	i2l3497
  2987                           
  2988                           ; BSR set to: 0
  2989   00187E  0EE6               	movlw	230
  2990   001880  6167               	cpfslt	103,b
  2991   001882  D00B               	goto	i2l3497
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  2995   001884  0E13               	movlw	19
  2996   001886  6568               	cpfsgt	104,b
  2997   001888  D008               	goto	i2l3497
  2998                           
  2999                           ; BSR set to: 0
  3000   00188A  0E3C               	movlw	60
  3001   00188C  6168               	cpfslt	104,b
  3002   00188E  D005               	goto	i2l3497
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3006   001890  948B               	bcf	139,2,c	;volatile
  3007   001892  828B               	bsf	139,1,c	;volatile
  3008   001894  808F               	bsf	143,0,c	;volatile
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;T3.c: 62: TEST = 1;
  3012   001896  0E01               	movlw	1
  3013   001898  6F81               	movwf	129,b
  3014   00189A                     i2l3497:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3018   00189A  0566               	decf	102,w,b
  3019   00189C  A4D8               	btfss	status,2,c
  3020   00189E  D7A3               	goto	__ptext12
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3024   0018A0  0E77               	movlw	119
  3025   0018A2  6567               	cpfsgt	103,b
  3026   0018A4  D7A0               	goto	__ptext12
  3027                           
  3028                           ; BSR set to: 0
  3029   0018A6  0EAA               	movlw	170
  3030   0018A8  6167               	cpfslt	103,b
  3031   0018AA  D79D               	goto	__ptext12
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3035   0018AC  0E13               	movlw	19
  3036   0018AE  6568               	cpfsgt	104,b
  3037   0018B0  D79A               	goto	__ptext12
  3038                           
  3039                           ; BSR set to: 0
  3040   0018B2  0E3C               	movlw	60
  3041   0018B4  6168               	cpfslt	104,b
  3042   0018B6  D797               	goto	__ptext12
  3043                           
  3044                           ; BSR set to: 0
  3045                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3046   0018B8  948B               	bcf	139,2,c	;volatile
  3047   0018BA  928B               	bcf	139,1,c	;volatile
  3048   0018BC  908F               	bcf	143,0,c	;volatile
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;T3.c: 74: TEST = 0;
  3052   0018BE  0E00               	movlw	0
  3053   0018C0  6F81               	movwf	129,b
  3054                           
  3055                           ; BSR set to: 0
  3056   0018C2  D791               	goto	__ptext12
  3057   0018C4                     __end_of_tache3:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _tache2 *****************
  3061 ;; Defined at:
  3062 ;;		line 3 in file "T2.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  iy              2   11[COMRAM] unsigned int 
  3067 ;;  ix              2    9[COMRAM] unsigned int 
  3068 ;;  ly              1   16[COMRAM] unsigned char 
  3069 ;;  hy              1   15[COMRAM] unsigned char 
  3070 ;;  lx              1   14[COMRAM] unsigned char 
  3071 ;;  hx              1   13[COMRAM] unsigned char 
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, status,2, status,0, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;Total ram usage:       10 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 1
  3088 ;; This function calls:
  3089 ;;		___lwdiv
  3090 ;;		_tp_delai
  3091 ;; This function is called by:
  3092 ;;		_fonction_d_interruption
  3093 ;;		_initialisation_du_systeme
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text13
  3098   0016F2                     __ptext13:
  3099                           	callstack 0
  3100   0016F2                     _tache2:
  3101                           	callstack 27
  3102                           
  3103                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;incstack = 0
  3107   0016F2  0E00               	movlw	0
  3108   0016F4  0100               	movlb	0	; () banked
  3109   0016F6  6F66               	movwf	102,b
  3110                           
  3111                           ; BSR set to: 0
  3112                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3113   0016F8  868F               	bsf	143,3,c	;volatile
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;T2.c: 13: LATGbits.LATG4=0;
  3117   0016FA  988F               	bcf	143,4,c	;volatile
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;T2.c: 14: tp_delai(3000);
  3121   0016FC  0E0B               	movlw	11
  3122   0016FE  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3123   001700  0EB8               	movlw	184
  3124   001702  6E01               	movwf	tp_delai@itpd^0,c
  3125   001704  ECB2  F011         	call	_tp_delai	;wreg free
  3126                           
  3127                           ;T2.c: 18: ADCON2=0x16;
  3128   001708  0E16               	movlw	22
  3129   00170A  6EC0               	movwf	192,c	;volatile
  3130                           
  3131                           ;T2.c: 19: ADCON0=0x01;
  3132   00170C  0E01               	movlw	1
  3133   00170E  6EC2               	movwf	194,c	;volatile
  3134                           
  3135                           ;T2.c: 20: ADCON0=0x03;
  3136   001710  0E03               	movlw	3
  3137   001712  6EC2               	movwf	194,c	;volatile
  3138   001714                     i2l591:
  3139   001714  B2C2               	btfsc	194,1,c	;volatile
  3140   001716  D7FE               	goto	i2l591
  3141                           
  3142                           ;T2.c: 23: hx=ADRESH;
  3143   001718  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3144                           
  3145                           ;T2.c: 24: lx=ADRESL;
  3146   00171C  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3147                           
  3148                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3149   001720  C00F  F008         	movff	tache2@lx,??_tache2
  3150   001724  0E0F               	movlw	15
  3151   001726  1608               	andwf	??_tache2^0,f,c
  3152   001728  B4D8               	btfsc	status,2,c
  3153   00172A  D004               	goto	i2l4841
  3154   00172C  0E00               	movlw	0
  3155   00172E  6E0E               	movwf	tache2@hx^0,c
  3156   001730  0E00               	movlw	0
  3157   001732  6E0F               	movwf	tache2@lx^0,c
  3158   001734                     i2l4841:
  3159                           
  3160                           ;T2.c: 31: if (hx>=10)
  3161   001734  0E09               	movlw	9
  3162   001736  640E               	cpfsgt	tache2@hx^0,c
  3163   001738  D7DC               	goto	__ptext13
  3164                           
  3165                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3166   00173A  968F               	bcf	143,3,c	;volatile
  3167                           
  3168                           ;T2.c: 34: LATGbits.LATG4=1;
  3169   00173C  888F               	bsf	143,4,c	;volatile
  3170                           
  3171                           ;T2.c: 35: tp_delai(3000);
  3172   00173E  0E0B               	movlw	11
  3173   001740  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3174   001742  0EB8               	movlw	184
  3175   001744  6E01               	movwf	tp_delai@itpd^0,c
  3176   001746  ECB2  F011         	call	_tp_delai	;wreg free
  3177                           
  3178                           ;T2.c: 39: ADCON2=0x16;
  3179   00174A  0E16               	movlw	22
  3180   00174C  6EC0               	movwf	192,c	;volatile
  3181                           
  3182                           ;T2.c: 40: ADCON0=0x05;
  3183   00174E  0E05               	movlw	5
  3184   001750  6EC2               	movwf	194,c	;volatile
  3185                           
  3186                           ;T2.c: 41: ADCON0=0x07;
  3187   001752  0E07               	movlw	7
  3188   001754  6EC2               	movwf	194,c	;volatile
  3189   001756                     i2l596:
  3190   001756  B2C2               	btfsc	194,1,c	;volatile
  3191   001758  D7FE               	goto	i2l596
  3192                           
  3193                           ;T2.c: 44: hy=ADRESH;
  3194   00175A  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3195                           
  3196                           ;T2.c: 45: ly=ADRESL;
  3197   00175E  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3198                           
  3199                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3200   001762  C011  F008         	movff	tache2@ly,??_tache2
  3201   001766  0E0F               	movlw	15
  3202   001768  1608               	andwf	??_tache2^0,f,c
  3203   00176A  B4D8               	btfsc	status,2,c
  3204   00176C  D004               	goto	i2l4857
  3205   00176E  0E00               	movlw	0
  3206   001770  6E10               	movwf	tache2@hy^0,c
  3207   001772  0E00               	movlw	0
  3208   001774  6E11               	movwf	tache2@ly^0,c
  3209   001776                     i2l4857:
  3210                           
  3211                           ;T2.c: 51: if (hy>=20)
  3212   001776  0E13               	movlw	19
  3213   001778  6410               	cpfsgt	tache2@hy^0,c
  3214   00177A  D7BB               	goto	__ptext13
  3215                           
  3216                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3217   00177C  500E               	movf	tache2@hx^0,w,c
  3218   00177E  6E08               	movwf	??_tache2^0,c
  3219   001780  500F               	movf	tache2@lx^0,w,c
  3220   001782  6E0A               	movwf	tache2@ix^0,c
  3221   001784  C008  F00B         	movff	??_tache2,tache2@ix+1
  3222                           
  3223                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3224   001788  5010               	movf	tache2@hy^0,w,c
  3225   00178A  6E08               	movwf	??_tache2^0,c
  3226   00178C  5011               	movf	tache2@ly^0,w,c
  3227   00178E  6E0C               	movwf	tache2@iy^0,c
  3228   001790  C008  F00D         	movff	??_tache2,tache2@iy+1
  3229                           
  3230                           ;T2.c: 55: ix=ix-3150;
  3231   001794  0EB2               	movlw	178
  3232   001796  240A               	addwf	tache2@ix^0,w,c
  3233   001798  6E0A               	movwf	tache2@ix^0,c
  3234   00179A  0EF3               	movlw	243
  3235   00179C  200B               	addwfc	(tache2@ix+1)^0,w,c
  3236   00179E  6E0B               	movwf	(tache2@ix+1)^0,c
  3237                           
  3238                           ;T2.c: 56: iy=iy-6500;
  3239   0017A0  0E9C               	movlw	156
  3240   0017A2  240C               	addwf	tache2@iy^0,w,c
  3241   0017A4  6E0C               	movwf	tache2@iy^0,c
  3242   0017A6  0EE6               	movlw	230
  3243   0017A8  200D               	addwfc	(tache2@iy+1)^0,w,c
  3244   0017AA  6E0D               	movwf	(tache2@iy+1)^0,c
  3245                           
  3246                           ;T2.c: 58: TP_x=ix/246;
  3247   0017AC  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3248   0017B0  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3249   0017B4  0E00               	movlw	0
  3250   0017B6  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3251   0017B8  0EF6               	movlw	246
  3252   0017BA  6E03               	movwf	___lwdiv@divisor^0,c
  3253   0017BC  EC56  F00F         	call	___lwdiv	;wreg free
  3254   0017C0  5001               	movf	?___lwdiv^0,w,c
  3255   0017C2  0100               	movlb	0	; () banked
  3256   0017C4  6F67               	movwf	103,b
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;T2.c: 59: TP_y=127-(iy/409);
  3260   0017C6  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3261   0017CA  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3262   0017CE  0E01               	movlw	1
  3263   0017D0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3264   0017D2  0E99               	movlw	153
  3265   0017D4  6E03               	movwf	___lwdiv@divisor^0,c
  3266   0017D6  EC56  F00F         	call	___lwdiv	;wreg free
  3267   0017DA  5001               	movf	?___lwdiv^0,w,c
  3268   0017DC  087F               	sublw	127
  3269   0017DE  0100               	movlb	0	; () banked
  3270   0017E0  6F68               	movwf	104,b
  3271                           
  3272                           ;T2.c: 68: TP_appui=1;
  3273   0017E2  0E01               	movlw	1
  3274   0017E4  D788               	goto	L3
  3275   0017E6                     __end_of_tache2:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _tp_delai *****************
  3279 ;; Defined at:
  3280 ;;		line 87 in file "T2.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  itpd            2    0[COMRAM] unsigned int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        2 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_tache2
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text14
  3308   002364                     __ptext14:
  3309                           	callstack 0
  3310   002364                     _tp_delai:
  3311                           	callstack 27
  3312                           
  3313                           ;T2.c: 89: while(itpd>0)
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;incstack = 0
  3317   002364  D006               	goto	i2l4397
  3318   002366                     i2l609:
  3319                           
  3320                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3321   002366  F000               	nop	
  3322   002368  F000               	nop	
  3323   00236A  F000               	nop	
  3324                           
  3325                           ;T2.c: 92: itpd--;
  3326   00236C  0601               	decf	tp_delai@itpd^0,f,c
  3327   00236E  A0D8               	btfss	status,0,c
  3328   002370  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3329   002372                     i2l4397:
  3330   002372  5001               	movf	tp_delai@itpd^0,w,c
  3331   002374  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3332   002376  B4D8               	btfsc	status,2,c
  3333   002378  0012               	return	
  3334   00237A  D7F5               	goto	i2l609
  3335   00237C                     __end_of_tp_delai:
  3336                           	callstack 0
  3337                           
  3338 ;; *************** function ___lwdiv *****************
  3339 ;; Defined at:
  3340 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  dividend        2    0[COMRAM] unsigned int 
  3343 ;;  divisor         2    2[COMRAM] unsigned int 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  quotient        2    4[COMRAM] unsigned int 
  3346 ;;  counter         1    6[COMRAM] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  2    0[COMRAM] unsigned int 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2, status,0
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;Total ram usage:        7 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_tache2
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text15
  3370   001EAC                     __ptext15:
  3371                           	callstack 0
  3372   001EAC                     ___lwdiv:
  3373                           	callstack 27
  3374                           
  3375                           ;incstack = 0
  3376   001EAC  0E00               	movlw	0
  3377   001EAE  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3378   001EB0  0E00               	movlw	0
  3379   001EB2  6E05               	movwf	___lwdiv@quotient^0,c
  3380   001EB4  5003               	movf	___lwdiv@divisor^0,w,c
  3381   001EB6  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3382   001EB8  B4D8               	btfsc	status,2,c
  3383   001EBA  D01C               	goto	i2l2129
  3384   001EBC  0E01               	movlw	1
  3385   001EBE  6E07               	movwf	___lwdiv@counter^0,c
  3386   001EC0  D004               	goto	i2l4463
  3387   001EC2                     i2l4461:
  3388   001EC2  90D8               	bcf	status,0,c
  3389   001EC4  3603               	rlcf	___lwdiv@divisor^0,f,c
  3390   001EC6  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3391   001EC8  2A07               	incf	___lwdiv@counter^0,f,c
  3392   001ECA                     i2l4463:
  3393   001ECA  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3394   001ECC  D7FA               	goto	i2l4461
  3395   001ECE                     i2u219_40:
  3396   001ECE  90D8               	bcf	status,0,c
  3397   001ED0  3605               	rlcf	___lwdiv@quotient^0,f,c
  3398   001ED2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3399   001ED4  5003               	movf	___lwdiv@divisor^0,w,c
  3400   001ED6  5C01               	subwf	___lwdiv@dividend^0,w,c
  3401   001ED8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3402   001EDA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3403   001EDC  A0D8               	btfss	status,0,c
  3404   001EDE  D005               	goto	i2l4473
  3405   001EE0  5003               	movf	___lwdiv@divisor^0,w,c
  3406   001EE2  5E01               	subwf	___lwdiv@dividend^0,f,c
  3407   001EE4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3408   001EE6  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3409   001EE8  8005               	bsf	___lwdiv@quotient^0,0,c
  3410   001EEA                     i2l4473:
  3411   001EEA  90D8               	bcf	status,0,c
  3412   001EEC  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3413   001EEE  3203               	rrcf	___lwdiv@divisor^0,f,c
  3414   001EF0  2E07               	decfsz	___lwdiv@counter^0,f,c
  3415   001EF2  D7ED               	goto	i2u219_40
  3416   001EF4                     i2l2129:
  3417   001EF4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3418   001EF8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3419   001EFC  0012               	return		;funcret
  3420   001EFE                     __end_of___lwdiv:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _tache1 *****************
  3424 ;; Defined at:
  3425 ;;		line 3 in file "T1.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  i               1    0        unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;Total ram usage:        2 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; Hardware stack levels required when called: 5
  3446 ;; This function calls:
  3447 ;;		_Conversion
  3448 ;;		_Diminution
  3449 ;;		_Init
  3450 ;;		_charger
  3451 ;;		_clear_graphics
  3452 ;;		_clear_line
  3453 ;;		_clear_text
  3454 ;;		_draw_char
  3455 ;;		_draw_dec8
  3456 ;;		_draw_hex8
  3457 ;;		_draw_square
  3458 ;;		_draw_string
  3459 ;;		_goto_lico
  3460 ;;		_init_rxtx
  3461 ;;		_initialisation_afficheur
  3462 ;;		_lecture_8bit_analogique
  3463 ;;		_marche
  3464 ;;		_plot1
  3465 ;;		_vide
  3466 ;;		_vitesseAdmin
  3467 ;; This function is called by:
  3468 ;;		_fonction_d_interruption
  3469 ;;		_initialisation_du_systeme
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text16
  3474   0010DE                     __ptext16:
  3475                           	callstack 0
  3476   0010DE                     _tache1:
  3477                           	callstack 23
  3478                           
  3479                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3480                           
  3481                           ;incstack = 0
  3482   0010DE  9EF2               	bcf	242,7,c	;volatile
  3483                           
  3484                           ;T1.c: 8: initialisation_afficheur();
  3485   0010E0  EC62  F00C         	call	_initialisation_afficheur	;wreg free
  3486                           
  3487                           ;T1.c: 9: clear_text();
  3488   0010E4  ECA8  F010         	call	_clear_text	;wreg free
  3489                           
  3490                           ;T1.c: 10: clear_graphics();
  3491   0010E8  ECC0  F010         	call	_clear_graphics	;wreg free
  3492                           
  3493                           ;T1.c: 11: init_rxtx();
  3494   0010EC  EC24  F011         	call	_init_rxtx	;wreg free
  3495                           
  3496                           ;T1.c: 12: Init(2);
  3497   0010F0  0E02               	movlw	2
  3498   0010F2  6EE6               	movwf	postinc1,c
  3499   0010F4  EC13  F011         	call	_Init	;wreg free
  3500                           
  3501                           ;T1.c: 13: RXTX_libre=1;
  3502   0010F8  0E01               	movlw	1
  3503   0010FA  0100               	movlb	0	; () banked
  3504   0010FC  6F80               	movwf	128,b
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;T1.c: 14: TXREG1='R';
  3508   0010FE  0E52               	movlw	82
  3509   001100  6EAD               	movwf	173,c	;volatile
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3513   001102  8EF2               	bsf	242,7,c	;volatile
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3517   001104  948B               	bcf	139,2,c	;volatile
  3518                           
  3519                           ; BSR set to: 0
  3520   001106  928B               	bcf	139,1,c	;volatile
  3521                           
  3522                           ; BSR set to: 0
  3523   001108  908F               	bcf	143,0,c	;volatile
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;T1.c: 19: vitesse=0;
  3527   00110A  0E00               	movlw	0
  3528   00110C  6F73               	movwf	115,b
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;T1.c: 21: n_octet_badge=0;
  3532   00110E  0E00               	movlw	0
  3533   001110  6F7F               	movwf	127,b
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;T1.c: 22: TEST=0;
  3537   001112  0E00               	movlw	0
  3538   001114  6F81               	movwf	129,b
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;T1.c: 23: Personne=0;
  3542   001116  0E00               	movlw	0
  3543   001118  6F82               	movwf	130,b
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3547   00111A  0E22               	movlw	34
  3548   00111C  6E09               	movwf	goto_lico@colonne^0,c
  3549   00111E  0E0D               	movlw	13
  3550   001120  EC2A  F00F         	call	_goto_lico
  3551   001124  0E52               	movlw	82
  3552   001126  EC8F  F010         	call	_draw_char
  3553   00112A  0E20               	movlw	32
  3554   00112C  EC8F  F010         	call	_draw_char
  3555   001130  0E56               	movlw	86
  3556   001132  EC8F  F010         	call	_draw_char
  3557   001136  0E20               	movlw	32
  3558   001138  EC8F  F010         	call	_draw_char
  3559   00113C  0E42               	movlw	66
  3560   00113E  EC8F  F010         	call	_draw_char
  3561                           
  3562                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3563   001142  0E22               	movlw	34
  3564   001144  6E09               	movwf	goto_lico@colonne^0,c
  3565   001146  0E0E               	movlw	14
  3566   001148  EC2A  F00F         	call	_goto_lico
  3567   00114C  0E30               	movlw	48
  3568   00114E  EC8F  F010         	call	_draw_char
  3569   001152  0E20               	movlw	32
  3570   001154  EC8F  F010         	call	_draw_char
  3571   001158  0E30               	movlw	48
  3572   00115A  EC8F  F010         	call	_draw_char
  3573   00115E  0E20               	movlw	32
  3574   001160  EC8F  F010         	call	_draw_char
  3575   001164  0E30               	movlw	48
  3576   001166  EC8F  F010         	call	_draw_char
  3577                           
  3578                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3579   00116A  0E22               	movlw	34
  3580   00116C  6E09               	movwf	goto_lico@colonne^0,c
  3581   00116E  0E0F               	movlw	15
  3582   001170  EC2A  F00F         	call	_goto_lico
  3583   001174  0E31               	movlw	49
  3584   001176  EC8F  F010         	call	_draw_char
  3585   00117A  0E20               	movlw	32
  3586   00117C  EC8F  F010         	call	_draw_char
  3587   001180  0E31               	movlw	49
  3588   001182  EC8F  F010         	call	_draw_char
  3589   001186  0E20               	movlw	32
  3590   001188  EC8F  F010         	call	_draw_char
  3591   00118C  0E31               	movlw	49
  3592   00118E  EC8F  F010         	call	_draw_char
  3593                           
  3594                           ;T1.c: 29: TP_appui=0;
  3595   001192  0E00               	movlw	0
  3596   001194  0100               	movlb	0	; () banked
  3597   001196  6F66               	movwf	102,b
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;T1.c: 30: draw_square(180,20,230,60);
  3601   001198  0E14               	movlw	20
  3602   00119A  6E15               	movwf	draw_square@y1^0,c
  3603   00119C  0EE6               	movlw	230
  3604   00119E  6E16               	movwf	draw_square@x2^0,c
  3605   0011A0  0E3C               	movlw	60
  3606   0011A2  6E17               	movwf	draw_square@y2^0,c
  3607   0011A4  0EB4               	movlw	180
  3608   0011A6  ECD0  F00F         	call	_draw_square
  3609                           
  3610                           ;T1.c: 31: draw_square(120,20,170,60);
  3611   0011AA  0E14               	movlw	20
  3612   0011AC  6E15               	movwf	draw_square@y1^0,c
  3613   0011AE  0EAA               	movlw	170
  3614   0011B0  6E16               	movwf	draw_square@x2^0,c
  3615   0011B2  0E3C               	movlw	60
  3616   0011B4  6E17               	movwf	draw_square@y2^0,c
  3617   0011B6  0E78               	movlw	120
  3618   0011B8  ECD0  F00F         	call	_draw_square
  3619                           
  3620                           ;T1.c: 33: draw_string(2);
  3621   0011BC  0E02               	movlw	2
  3622   0011BE  6E08               	movwf	draw_string@tableau^0,c
  3623   0011C0  0E00               	movlw	0
  3624   0011C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3625   0011C4  EC05  F00E         	call	_draw_string	;wreg free
  3626   0011C8                     i2l4675:
  3627                           
  3628                           ;T1.c: 36: {;T1.c: 37: goto_lico(0, 0);
  3629   0011C8  0E00               	movlw	0
  3630   0011CA  6E09               	movwf	goto_lico@colonne^0,c
  3631   0011CC  0E00               	movlw	0
  3632   0011CE  EC2A  F00F         	call	_goto_lico
  3633                           
  3634                           ;T1.c: 38: draw_string("Marche:");
  3635   0011D2  0E8D               	movlw	low STR_1
  3636   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3637   0011D6  0E10               	movlw	high STR_1
  3638   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3639   0011DA  EC05  F00E         	call	_draw_string	;wreg free
  3640                           
  3641                           ;T1.c: 39: goto_lico(7, 0);
  3642   0011DE  0E00               	movlw	0
  3643   0011E0  6E09               	movwf	goto_lico@colonne^0,c
  3644   0011E2  0E07               	movlw	7
  3645   0011E4  EC2A  F00F         	call	_goto_lico
  3646                           
  3647                           ;T1.c: 40: if (PORTEbits.RE4 == 0)
  3648   0011E8  B884               	btfsc	132,4,c	;volatile
  3649   0011EA  D017               	goto	i2l4689
  3650                           
  3651                           ;T1.c: 41: {;T1.c: 42: draw_string("((!))");
  3652   0011EC  0EB1               	movlw	low STR_2
  3653   0011EE  6E08               	movwf	draw_string@tableau^0,c
  3654   0011F0  0E10               	movlw	high STR_2
  3655   0011F2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3656   0011F4  EC05  F00E         	call	_draw_string	;wreg free
  3657                           
  3658                           ;T1.c: 43: _delay((unsigned long)((5)*(48000000/4000.0)));
  3659   0011F8  0E4E               	movlw	78
  3660   0011FA  6E1B               	movwf	??_tache1^0,c
  3661   0011FC  0EEB               	movlw	235
  3662   0011FE                     i2u257_47:
  3663   0011FE  2EE8               	decfsz	wreg,f,c
  3664   001200  D7FE               	bra	i2u257_47
  3665   001202  2E1B               	decfsz	??_tache1^0,f,c
  3666   001204  D7FC               	bra	i2u257_47
  3667   001206  F000               	nop	
  3668                           
  3669                           ;T1.c: 44: vitesse = Diminution(vitesse);
  3670   001208  C073 F001          	movff	115,Diminution@vitesse
  3671   00120C  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3672   00120E  ECDE  F011         	call	_Diminution	;wreg free
  3673   001212  5001               	movf	?_Diminution^0,w,c
  3674   001214  0100               	movlb	0	; () banked
  3675   001216  6F73               	movwf	115,b
  3676                           
  3677                           ;T1.c: 45: }
  3678   001218  D006               	goto	i2l4691
  3679   00121A                     i2l4689:
  3680                           
  3681                           ;T1.c: 46: else;T1.c: 47: {;T1.c: 48: draw_string("     ");
  3682   00121A  0E2D               	movlw	low (STR_11+15)
  3683   00121C  6E08               	movwf	draw_string@tableau^0,c
  3684   00121E  0E10               	movlw	high (STR_11+15)
  3685   001220  6E09               	movwf	(draw_string@tableau+1)^0,c
  3686   001222  EC05  F00E         	call	_draw_string	;wreg free
  3687   001226                     i2l4691:
  3688                           
  3689                           ;T1.c: 49: };T1.c: 51: goto_lico(1, 0);
  3690   001226  0E00               	movlw	0
  3691   001228  6E09               	movwf	goto_lico@colonne^0,c
  3692   00122A  0E01               	movlw	1
  3693   00122C  EC2A  F00F         	call	_goto_lico
  3694                           
  3695                           ;T1.c: 52: draw_string("Siege:");
  3696   001230  0E9C               	movlw	low STR_4
  3697   001232  6E08               	movwf	draw_string@tableau^0,c
  3698   001234  0E10               	movlw	high STR_4
  3699   001236  6E09               	movwf	(draw_string@tableau+1)^0,c
  3700   001238  EC05  F00E         	call	_draw_string	;wreg free
  3701                           
  3702                           ;T1.c: 53: if (PORTBbits.RB2 == 0)
  3703   00123C  B481               	btfsc	129,2,c	;volatile
  3704   00123E  D006               	goto	i2l4701
  3705                           
  3706                           ;T1.c: 54: {;T1.c: 55: {draw_char('1');}
  3707   001240  0E31               	movlw	49
  3708   001242  EC8F  F010         	call	_draw_char
  3709                           
  3710                           ;T1.c: 56: marche();
  3711   001246  ECC5  F00E         	call	_marche	;wreg free
  3712                           
  3713                           ;T1.c: 57: }
  3714   00124A  D016               	goto	i2l4707
  3715   00124C                     i2l4701:
  3716                           
  3717                           ;T1.c: 58: else;T1.c: 59: {;T1.c: 60: {draw_char('0');}
  3718   00124C  0E30               	movlw	48
  3719   00124E  EC8F  F010         	call	_draw_char
  3720                           
  3721                           ;T1.c: 61: _delay((unsigned long)((50)*(48000000/4000.0)));
  3722   001252  0E04               	movlw	4
  3723   001254  6E1C               	movwf	(??_tache1+1)^0,c
  3724   001256  0E0C               	movlw	12
  3725   001258  6E1B               	movwf	??_tache1^0,c
  3726   00125A  0E34               	movlw	52
  3727   00125C                     i2u258_47:
  3728   00125C  2EE8               	decfsz	wreg,f,c
  3729   00125E  D7FE               	bra	i2u258_47
  3730   001260  2E1B               	decfsz	??_tache1^0,f,c
  3731   001262  D7FC               	bra	i2u258_47
  3732   001264  2E1C               	decfsz	(??_tache1+1)^0,f,c
  3733   001266  D7FA               	bra	i2u258_47
  3734                           
  3735                           ;T1.c: 62: vitesse = Diminution(vitesse);
  3736   001268  C073 F001          	movff	115,Diminution@vitesse
  3737   00126C  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3738   00126E  ECDE  F011         	call	_Diminution	;wreg free
  3739   001272  5001               	movf	?_Diminution^0,w,c
  3740   001274  0100               	movlb	0	; () banked
  3741   001276  6F73               	movwf	115,b
  3742   001278                     i2l4707:
  3743                           
  3744                           ;T1.c: 63: };T1.c: 65: goto_lico(2, 0);
  3745   001278  0E00               	movlw	0
  3746   00127A  6E09               	movwf	goto_lico@colonne^0,c
  3747   00127C  0E02               	movlw	2
  3748   00127E  EC2A  F00F         	call	_goto_lico
  3749                           
  3750                           ;T1.c: 66: draw_string("Temp. Eau:");
  3751   001282  0E66               	movlw	low STR_5
  3752   001284  6E08               	movwf	draw_string@tableau^0,c
  3753   001286  0E10               	movlw	high STR_5
  3754   001288  6E09               	movwf	(draw_string@tableau+1)^0,c
  3755   00128A  EC05  F00E         	call	_draw_string	;wreg free
  3756                           
  3757                           ;T1.c: 67: draw_dec8(Conversion(lecture_8bit_analogique(2)));
  3758   00128E  0E02               	movlw	2
  3759   001290  EC74  F010         	call	_lecture_8bit_analogique
  3760   001294  6E1B               	movwf	??_tache1^0,c
  3761   001296  501B               	movf	??_tache1^0,w,c
  3762   001298  6E0F               	movwf	Conversion@a^0,c
  3763   00129A  6A10               	clrf	(Conversion@a+1)^0,c
  3764   00129C  EC1B  F010         	call	_Conversion	;wreg free
  3765   0012A0  500F               	movf	?_Conversion^0,w,c
  3766   0012A2  EC70  F00D         	call	_draw_dec8
  3767                           
  3768                           ;T1.c: 69: goto_lico(3, 0);
  3769   0012A6  0E00               	movlw	0
  3770   0012A8  6E09               	movwf	goto_lico@colonne^0,c
  3771   0012AA  0E03               	movlw	3
  3772   0012AC  EC2A  F00F         	call	_goto_lico
  3773                           
  3774                           ;T1.c: 70: draw_string("Temp. Huile:");
  3775   0012B0  0E41               	movlw	low STR_6
  3776   0012B2  6E08               	movwf	draw_string@tableau^0,c
  3777   0012B4  0E10               	movlw	high STR_6
  3778   0012B6  6E09               	movwf	(draw_string@tableau+1)^0,c
  3779   0012B8  EC05  F00E         	call	_draw_string	;wreg free
  3780                           
  3781                           ;T1.c: 71: draw_dec8(Conversion(lecture_8bit_analogique(3)));
  3782   0012BC  0E03               	movlw	3
  3783   0012BE  EC74  F010         	call	_lecture_8bit_analogique
  3784   0012C2  6E1B               	movwf	??_tache1^0,c
  3785   0012C4  501B               	movf	??_tache1^0,w,c
  3786   0012C6  6E0F               	movwf	Conversion@a^0,c
  3787   0012C8  6A10               	clrf	(Conversion@a+1)^0,c
  3788   0012CA  EC1B  F010         	call	_Conversion	;wreg free
  3789   0012CE  500F               	movf	?_Conversion^0,w,c
  3790   0012D0  EC70  F00D         	call	_draw_dec8
  3791                           
  3792                           ;T1.c: 73: goto_lico(4, 0);
  3793   0012D4  0E00               	movlw	0
  3794   0012D6  6E09               	movwf	goto_lico@colonne^0,c
  3795   0012D8  0E04               	movlw	4
  3796   0012DA  EC2A  F00F         	call	_goto_lico
  3797                           
  3798                           ;T1.c: 74: draw_string("Choc:");
  3799   0012DE  0EB7               	movlw	low STR_7
  3800   0012E0  6E08               	movwf	draw_string@tableau^0,c
  3801   0012E2  0E10               	movlw	high STR_7
  3802   0012E4  6E09               	movwf	(draw_string@tableau+1)^0,c
  3803   0012E6  EC05  F00E         	call	_draw_string	;wreg free
  3804                           
  3805                           ;T1.c: 75: if (PORTBbits.RB3 == 0)
  3806   0012EA  B681               	btfsc	129,3,c	;volatile
  3807   0012EC  D004               	goto	i2l4727
  3808                           
  3809                           ;T1.c: 76: {;T1.c: 77: draw_char('1');
  3810   0012EE  0E31               	movlw	49
  3811   0012F0  EC8F  F010         	call	_draw_char
  3812                           
  3813                           ;T1.c: 78: }
  3814   0012F4  D003               	goto	i2l4729
  3815   0012F6                     i2l4727:
  3816                           
  3817                           ;T1.c: 79: else;T1.c: 80: {;T1.c: 81: draw_char('0');
  3818   0012F6  0E30               	movlw	48
  3819   0012F8  EC8F  F010         	call	_draw_char
  3820   0012FC                     i2l4729:
  3821                           
  3822                           ;T1.c: 82: };T1.c: 84: if (Personne == 2)
  3823   0012FC  0E02               	movlw	2
  3824   0012FE  0100               	movlb	0	; () banked
  3825   001300  1982               	xorwf	130,w,b
  3826   001302  A4D8               	btfss	status,2,c
  3827   001304  D006               	goto	i2l4733
  3828   001306                     i2u225_40:
  3829                           
  3830                           ; BSR set to: 0
  3831                           ;T1.c: 85: {;T1.c: 86: vitesseAdmin(Personne);
  3832   001306  C082 F001          	movff	130,vitesseAdmin@a
  3833   00130A  6A02               	clrf	(vitesseAdmin@a+1)^0,c
  3834   00130C  ECBE  F00D         	call	_vitesseAdmin	;wreg free
  3835                           
  3836                           ;T1.c: 87: }
  3837   001310  D003               	goto	i2l4737
  3838   001312                     i2l4733:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;T1.c: 88: else if (Personne == 1)
  3842   001312  0582               	decf	130,w,b
  3843   001314  B4D8               	btfsc	status,2,c
  3844   001316  D7F7               	goto	i2u225_40
  3845   001318                     i2l4737:
  3846                           
  3847                           ;T1.c: 94: };T1.c: 96: goto_lico(5, 0);
  3848   001318  0E00               	movlw	0
  3849   00131A  6E09               	movwf	goto_lico@colonne^0,c
  3850   00131C  0E05               	movlw	5
  3851   00131E  EC2A  F00F         	call	_goto_lico
  3852                           
  3853                           ;T1.c: 97: draw_string("Vitesse:");
  3854   001322  0E7B               	movlw	low STR_8
  3855   001324  6E08               	movwf	draw_string@tableau^0,c
  3856   001326  0E10               	movlw	high STR_8
  3857   001328  6E09               	movwf	(draw_string@tableau+1)^0,c
  3858   00132A  EC05  F00E         	call	_draw_string	;wreg free
  3859                           
  3860                           ;T1.c: 98: draw_dec8(vitesse);
  3861   00132E  0100               	movlb	0	; () banked
  3862   001330  5173               	movf	115,w,b
  3863   001332  EC70  F00D         	call	_draw_dec8
  3864                           
  3865                           ;T1.c: 100: goto_lico(6, 0);
  3866   001336  0E00               	movlw	0
  3867   001338  6E09               	movwf	goto_lico@colonne^0,c
  3868   00133A  0E06               	movlw	6
  3869   00133C  EC2A  F00F         	call	_goto_lico
  3870                           
  3871                           ;T1.c: 101: draw_string("Batterie:");
  3872   001340  0E71               	movlw	low STR_9
  3873   001342  6E08               	movwf	draw_string@tableau^0,c
  3874   001344  0E10               	movlw	high STR_9
  3875   001346  6E09               	movwf	(draw_string@tableau+1)^0,c
  3876   001348  EC05  F00E         	call	_draw_string	;wreg free
  3877                           
  3878                           ;T1.c: 102: if (PORTEbits.RE2 == 0 && batterie < 100)
  3879   00134C  B484               	btfsc	132,2,c	;volatile
  3880   00134E  D005               	goto	i2l4753
  3881   001350  0E64               	movlw	100
  3882   001352  0100               	movlb	0	; () banked
  3883   001354  6174               	cpfslt	116,b
  3884   001356  D001               	goto	i2l4753
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;T1.c: 103: {;T1.c: 104: batterie++;
  3888   001358  2B74               	incf	116,f,b
  3889   00135A                     i2l4753:
  3890                           
  3891                           ;T1.c: 105: };T1.c: 106: if (PORTEbits.RE3 == 0 && batterie > 0)
  3892   00135A  B684               	btfsc	132,3,c	;volatile
  3893   00135C  D004               	goto	i2l4759
  3894   00135E  0100               	movlb	0	; () banked
  3895   001360  5174               	movf	116,w,b
  3896   001362  A4D8               	btfss	status,2,c
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;T1.c: 107: {;T1.c: 108: batterie--;
  3900   001364  0774               	decf	116,f,b
  3901   001366                     i2l4759:
  3902                           
  3903                           ;T1.c: 109: };T1.c: 110: draw_dec8(batterie);
  3904   001366  0100               	movlb	0	; () banked
  3905   001368  5174               	movf	116,w,b
  3906   00136A  EC70  F00D         	call	_draw_dec8
  3907                           
  3908                           ;T1.c: 112: goto_lico(8, 0);
  3909   00136E  0E00               	movlw	0
  3910   001370  6E09               	movwf	goto_lico@colonne^0,c
  3911   001372  0E08               	movlw	8
  3912   001374  EC2A  F00F         	call	_goto_lico
  3913                           
  3914                           ;T1.c: 113: draw_string("Badge:");
  3915   001378  0E95               	movlw	low STR_10
  3916   00137A  6E08               	movwf	draw_string@tableau^0,c
  3917   00137C  0E10               	movlw	high STR_10
  3918   00137E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3919   001380  EC05  F00E         	call	_draw_string	;wreg free
  3920                           
  3921                           ;T1.c: 114: if (n_octet_badge == 0)
  3922   001384  0100               	movlb	0	; () banked
  3923   001386  517F               	movf	127,w,b
  3924   001388  A4D8               	btfss	status,2,c
  3925   00138A  D007               	goto	i2l4769
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;T1.c: 115: {;T1.c: 116: draw_string(" AUCUN              ");
  3929   00138C  0E1E               	movlw	low STR_11
  3930   00138E  6E08               	movwf	draw_string@tableau^0,c
  3931   001390  0E10               	movlw	high STR_11
  3932   001392  6E09               	movwf	(draw_string@tableau+1)^0,c
  3933   001394  EC05  F00E         	call	_draw_string	;wreg free
  3934                           
  3935                           ;T1.c: 117: }
  3936   001398  D01E               	goto	i2l481
  3937   00139A                     i2l4769:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;T1.c: 118: else;T1.c: 119: {;T1.c: 126: if (Personne == 2)
  3941   00139A  0E02               	movlw	2
  3942   00139C  1982               	xorwf	130,w,b
  3943   00139E  A4D8               	btfss	status,2,c
  3944   0013A0  D007               	goto	i2l4773
  3945                           
  3946                           ; BSR set to: 0
  3947                           ;T1.c: 127: {;T1.c: 128: draw_string("Operator");
  3948   0013A2  0E84               	movlw	low STR_12
  3949   0013A4  6E08               	movwf	draw_string@tableau^0,c
  3950   0013A6  0E10               	movlw	high STR_12
  3951   0013A8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3952   0013AA  EC05  F00E         	call	_draw_string	;wreg free
  3953                           
  3954                           ;T1.c: 129: }
  3955   0013AE  D013               	goto	i2l481
  3956   0013B0                     i2l4773:
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;T1.c: 130: else if (Personne == 1)
  3960   0013B0  0582               	decf	130,w,b
  3961   0013B2  A4D8               	btfss	status,2,c
  3962   0013B4  D007               	goto	i2l4777
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;T1.c: 131: {;T1.c: 132: draw_string(" ADMIN");
  3966   0013B6  0EAA               	movlw	low STR_13
  3967   0013B8  6E08               	movwf	draw_string@tableau^0,c
  3968   0013BA  0E10               	movlw	high STR_13
  3969   0013BC  6E09               	movwf	(draw_string@tableau+1)^0,c
  3970   0013BE  EC05  F00E         	call	_draw_string	;wreg free
  3971                           
  3972                           ;T1.c: 133: }
  3973   0013C2  D009               	goto	i2l481
  3974   0013C4                     i2l4777:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;T1.c: 134: else if (Personne == 0)
  3978   0013C4  5182               	movf	130,w,b
  3979   0013C6  A4D8               	btfss	status,2,c
  3980   0013C8  D006               	goto	i2l481
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;T1.c: 135: {;T1.c: 136: draw_string("AUCUN");
  3984   0013CA  0EBD               	movlw	low STR_14
  3985   0013CC  6E08               	movwf	draw_string@tableau^0,c
  3986   0013CE  0E10               	movlw	high STR_14
  3987   0013D0  6E09               	movwf	(draw_string@tableau+1)^0,c
  3988   0013D2  EC05  F00E         	call	_draw_string	;wreg free
  3989   0013D6                     i2l481:
  3990                           
  3991                           ;T1.c: 137: };T1.c: 138: };T1.c: 143: goto_lico(9, 0);
  3992                           
  3993                           ; BSR set to: 0
  3994   0013D6  0E00               	movlw	0
  3995   0013D8  6E09               	movwf	goto_lico@colonne^0,c
  3996   0013DA  0E09               	movlw	9
  3997   0013DC  EC2A  F00F         	call	_goto_lico
  3998                           
  3999                           ;T1.c: 144: draw_string("X-Joystick:");
  4000   0013E0  0E4E               	movlw	low STR_15
  4001   0013E2  6E08               	movwf	draw_string@tableau^0,c
  4002   0013E4  0E10               	movlw	high STR_15
  4003   0013E6  6E09               	movwf	(draw_string@tableau+1)^0,c
  4004   0013E8  EC05  F00E         	call	_draw_string	;wreg free
  4005                           
  4006                           ;T1.c: 145: draw_hex8(lecture_8bit_analogique(10));
  4007   0013EC  0E0A               	movlw	10
  4008   0013EE  EC74  F010         	call	_lecture_8bit_analogique
  4009   0013F2  ECFC  F00E         	call	_draw_hex8
  4010                           
  4011                           ;T1.c: 147: goto_lico(10, 0);
  4012   0013F6  0E00               	movlw	0
  4013   0013F8  6E09               	movwf	goto_lico@colonne^0,c
  4014   0013FA  0E0A               	movlw	10
  4015   0013FC  EC2A  F00F         	call	_goto_lico
  4016                           
  4017                           ;T1.c: 148: draw_string("Y-Joystick:");
  4018   001400  0E5A               	movlw	low STR_16
  4019   001402  6E08               	movwf	draw_string@tableau^0,c
  4020   001404  0E10               	movlw	high STR_16
  4021   001406  6E09               	movwf	(draw_string@tableau+1)^0,c
  4022   001408  EC05  F00E         	call	_draw_string	;wreg free
  4023                           
  4024                           ;T1.c: 149: draw_hex8(lecture_8bit_analogique(11));
  4025   00140C  0E0B               	movlw	11
  4026   00140E  EC74  F010         	call	_lecture_8bit_analogique
  4027   001412  ECFC  F00E         	call	_draw_hex8
  4028                           
  4029                           ;T1.c: 151: goto_lico(5, 22);
  4030   001416  0E16               	movlw	22
  4031   001418  6E09               	movwf	goto_lico@colonne^0,c
  4032   00141A  0E05               	movlw	5
  4033   00141C  EC2A  F00F         	call	_goto_lico
  4034                           
  4035                           ;T1.c: 152: draw_string("VIDE");
  4036   001420  0EC8               	movlw	low STR_17
  4037   001422  6E08               	movwf	draw_string@tableau^0,c
  4038   001424  0E10               	movlw	high STR_17
  4039   001426  6E09               	movwf	(draw_string@tableau+1)^0,c
  4040   001428  EC05  F00E         	call	_draw_string	;wreg free
  4041                           
  4042                           ;T1.c: 153: goto_lico(5, 31);
  4043   00142C  0E1F               	movlw	31
  4044   00142E  6E09               	movwf	goto_lico@colonne^0,c
  4045   001430  0E05               	movlw	5
  4046   001432  EC2A  F00F         	call	_goto_lico
  4047                           
  4048                           ;T1.c: 154: draw_string("CHARGE");
  4049   001436  0EA3               	movlw	low STR_18
  4050   001438  6E08               	movwf	draw_string@tableau^0,c
  4051   00143A  0E10               	movlw	high STR_18
  4052   00143C  6E09               	movwf	(draw_string@tableau+1)^0,c
  4053   00143E  EC05  F00E         	call	_draw_string	;wreg free
  4054                           
  4055                           ;T1.c: 158: if (TP_appui == 1)
  4056   001442  0100               	movlb	0	; () banked
  4057   001444  0566               	decf	102,w,b
  4058   001446  A4D8               	btfss	status,2,c
  4059   001448  D020               	goto	i2l485
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;T1.c: 159: {;T1.c: 160: goto_lico(0, 20);
  4063   00144A  0E14               	movlw	20
  4064   00144C  6E09               	movwf	goto_lico@colonne^0,c
  4065   00144E  0E00               	movlw	0
  4066   001450  EC2A  F00F         	call	_goto_lico
  4067                           
  4068                           ;T1.c: 161: draw_string("x=");
  4069   001454  0EDA               	movlw	low STR_19
  4070   001456  6E08               	movwf	draw_string@tableau^0,c
  4071   001458  0E10               	movlw	high STR_19
  4072   00145A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4073   00145C  EC05  F00E         	call	_draw_string	;wreg free
  4074                           
  4075                           ;T1.c: 162: draw_hex8(TP_x);
  4076   001460  0100               	movlb	0	; () banked
  4077   001462  5167               	movf	103,w,b
  4078   001464  ECFC  F00E         	call	_draw_hex8
  4079                           
  4080                           ;T1.c: 163: draw_string(" y=");
  4081   001468  0ECD               	movlw	low STR_20
  4082   00146A  6E08               	movwf	draw_string@tableau^0,c
  4083   00146C  0E10               	movlw	high STR_20
  4084   00146E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4085   001470  EC05  F00E         	call	_draw_string	;wreg free
  4086                           
  4087                           ;T1.c: 164: draw_hex8(TP_y);
  4088   001474  0100               	movlb	0	; () banked
  4089   001476  5168               	movf	104,w,b
  4090   001478  ECFC  F00E         	call	_draw_hex8
  4091                           
  4092                           ;T1.c: 165: plot1(TP_x, TP_y);
  4093   00147C  C068 F00F          	movff	104,plot1@y
  4094   001480  0100               	movlb	0	; () banked
  4095   001482  5167               	movf	103,w,b
  4096   001484  ECC8  F00C         	call	_plot1
  4097                           
  4098                           ;T1.c: 166: }
  4099   001488  D001               	goto	i2l4811
  4100   00148A                     i2l485:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;T1.c: 167: else;T1.c: 168: {;T1.c: 169: __nop();
  4104   00148A  F000               	nop	
  4105   00148C                     i2l4811:
  4106                           
  4107                           ;T1.c: 170: };T1.c: 171: if (TEST == 1)
  4108   00148C  0100               	movlb	0	; () banked
  4109   00148E  0581               	decf	129,w,b
  4110   001490  B4D8               	btfsc	status,2,c
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;T1.c: 172: {;T1.c: 173: charger();
  4114   001492  ECCA  F011         	call	_charger	;wreg free
  4115                           
  4116                           ;T1.c: 174: };T1.c: 175: if (TEST == 0)
  4117   001496  0100               	movlb	0	; () banked
  4118   001498  5181               	movf	129,w,b
  4119   00149A  A4D8               	btfss	status,2,c
  4120   00149C  D695               	goto	i2l4675
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;T1.c: 176: {;T1.c: 177: clear_line(14);
  4124   00149E  0E0E               	movlw	14
  4125   0014A0  EC46  F011         	call	_clear_line
  4126                           
  4127                           ;T1.c: 178: vide();
  4128   0014A4  ECBE  F011         	call	_vide	;wreg free
  4129                           
  4130                           ;T1.c: 179: TEST = 3;
  4131   0014A8  0E03               	movlw	3
  4132   0014AA  0100               	movlb	0	; () banked
  4133   0014AC  6F81               	movwf	129,b
  4134   0014AE  D68C               	goto	i2l4675
  4135   0014B0                     __end_of_tache1:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _vitesseAdmin *****************
  4139 ;; Defined at:
  4140 ;;		line 445 in file "afficheur.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  a               2    0[COMRAM] unsigned int 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  c               2    7[COMRAM] int 
  4145 ;;  b               2    5[COMRAM] int 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;Total ram usage:        9 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_tache1
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text17
  4169   001B7C                     __ptext17:
  4170                           	callstack 0
  4171   001B7C                     _vitesseAdmin:
  4172                           	callstack 27
  4173                           
  4174                           ;afficheur.c: 446: int b ;;afficheur.c: 447: int c;;afficheur.c: 448: if (a==1){
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;incstack = 0
  4178   001B7C  0401               	decf	vitesseAdmin@a^0,w,c
  4179   001B7E  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4180   001B80  A4D8               	btfss	status,2,c
  4181   001B82  D008               	goto	i2l4321
  4182                           
  4183                           ;afficheur.c: 449: b =50;
  4184   001B84  0E00               	movlw	0
  4185   001B86  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4186   001B88  0E32               	movlw	50
  4187   001B8A  6E06               	movwf	vitesseAdmin@b^0,c
  4188                           
  4189                           ;afficheur.c: 450: c = 80;
  4190   001B8C  0E00               	movlw	0
  4191   001B8E  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4192   001B90  0E50               	movlw	80
  4193   001B92  6E08               	movwf	vitesseAdmin@c^0,c
  4194   001B94                     i2l4321:
  4195                           
  4196                           ;afficheur.c: 451: };afficheur.c: 452: if(a==2){
  4197   001B94  0E02               	movlw	2
  4198   001B96  1801               	xorwf	vitesseAdmin@a^0,w,c
  4199   001B98  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4200   001B9A  A4D8               	btfss	status,2,c
  4201   001B9C  D008               	goto	i2l4325
  4202                           
  4203                           ;afficheur.c: 453: b =15;
  4204   001B9E  0E00               	movlw	0
  4205   001BA0  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4206   001BA2  0E0F               	movlw	15
  4207   001BA4  6E06               	movwf	vitesseAdmin@b^0,c
  4208                           
  4209                           ;afficheur.c: 454: c = 25;
  4210   001BA6  0E00               	movlw	0
  4211   001BA8  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4212   001BAA  0E19               	movlw	25
  4213   001BAC  6E08               	movwf	vitesseAdmin@c^0,c
  4214   001BAE                     i2l4325:
  4215                           
  4216                           ;afficheur.c: 455: };afficheur.c: 456: if(PORTBbits.RB2==0){
  4217   001BAE  B481               	btfsc	129,2,c	;volatile
  4218   001BB0  0012               	return	
  4219                           
  4220                           ;afficheur.c: 457: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4221   001BB2  A081               	btfss	129,0,c	;volatile
  4222   001BB4  D002               	goto	i2u195_40
  4223   001BB6  B281               	btfsc	129,1,c	;volatile
  4224   001BB8  0012               	return	
  4225   001BBA                     i2u195_40:
  4226                           
  4227                           ;afficheur.c: 460: if (PORTEbits.RE4==1){
  4228   001BBA  A884               	btfss	132,4,c	;volatile
  4229   001BBC  0012               	return	
  4230                           
  4231                           ;afficheur.c: 461: if(TEST==1){
  4232   001BBE  0100               	movlb	0	; () banked
  4233   001BC0  0581               	decf	129,w,b
  4234   001BC2  A4D8               	btfss	status,2,c
  4235   001BC4  D016               	goto	i2l1301
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;afficheur.c: 463: if (PORTEbits.RE0==0 && vitesse < b)
  4239   001BC6  B084               	btfsc	132,0,c	;volatile
  4240   001BC8  D00D               	goto	i2l4339
  4241                           
  4242                           ; BSR set to: 0
  4243   001BCA  5173               	movf	115,w,b
  4244   001BCC  6E03               	movwf	??_vitesseAdmin^0,c
  4245   001BCE  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4246   001BD0  5006               	movf	vitesseAdmin@b^0,w,c
  4247   001BD2  5C03               	subwf	??_vitesseAdmin^0,w,c
  4248   001BD4  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4249   001BD6  0A80               	xorlw	128
  4250   001BD8  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4251   001BDA  5007               	movf	(vitesseAdmin@b+1)^0,w,c
  4252   001BDC  0A80               	xorlw	128
  4253   001BDE  5805               	subwfb	(??_vitesseAdmin+2)^0,w,c
  4254   001BE0  A0D8               	btfss	status,0,c
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;afficheur.c: 464: vitesse++;
  4258   001BE2  2B73               	incf	115,f,b
  4259   001BE4                     i2l4339:
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;afficheur.c: 465: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4263   001BE4  B284               	btfsc	132,1,c	;volatile
  4264   001BE6  0012               	return	
  4265                           
  4266                           ; BSR set to: 0
  4267   001BE8  5173               	movf	115,w,b
  4268   001BEA  B4D8               	btfsc	status,2,c
  4269   001BEC  0012               	return	
  4270                           
  4271                           ; BSR set to: 0
  4272                           ;afficheur.c: 466: vitesse--;
  4273   001BEE  0773               	decf	115,f,b
  4274   001BF0  0012               	return	
  4275   001BF2                     i2l1301:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;afficheur.c: 469: if (PORTEbits.RE0==0 && vitesse < c)
  4279   001BF2  B084               	btfsc	132,0,c	;volatile
  4280   001BF4  D7F7               	goto	i2l4339
  4281                           
  4282                           ; BSR set to: 0
  4283   001BF6  5173               	movf	115,w,b
  4284   001BF8  6E03               	movwf	??_vitesseAdmin^0,c
  4285   001BFA  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4286   001BFC  5008               	movf	vitesseAdmin@c^0,w,c
  4287   001BFE  5C03               	subwf	??_vitesseAdmin^0,w,c
  4288   001C00  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4289   001C02  0A80               	xorlw	128
  4290   001C04  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4291   001C06  5009               	movf	(vitesseAdmin@c+1)^0,w,c
  4292   001C08  D7E9               	goto	L8
  4293   001C0A                     __end_of_vitesseAdmin:
  4294                           	callstack 0
  4295                           
  4296 ;; *************** function _vide *****************
  4297 ;; Defined at:
  4298 ;;		line 438 in file "afficheur.c"
  4299 ;; Parameters:    Size  Location     Type
  4300 ;;		None
  4301 ;; Auto vars:     Size  Location     Type
  4302 ;;		None
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      void 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4316 ;;Total ram usage:        0 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 4
  4319 ;; This function calls:
  4320 ;;		_draw_string
  4321 ;;		_goto_lico
  4322 ;; This function is called by:
  4323 ;;		_tache1
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text18
  4328   00237C                     __ptext18:
  4329                           	callstack 0
  4330   00237C                     _vide:
  4331                           	callstack 23
  4332                           
  4333                           ;afficheur.c: 440: goto_lico(14,0);
  4334                           
  4335                           ;incstack = 0
  4336   00237C  0E00               	movlw	0
  4337   00237E  6E09               	movwf	goto_lico@colonne^0,c
  4338   002380  0E0E               	movlw	14
  4339   002382  EC2A  F00F         	call	_goto_lico
  4340                           
  4341                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4342   002386  0E33               	movlw	low STR_23
  4343   002388  6E08               	movwf	draw_string@tableau^0,c
  4344   00238A  0E10               	movlw	high STR_23
  4345   00238C  6E09               	movwf	(draw_string@tableau+1)^0,c
  4346   00238E  EC05  F00E         	call	_draw_string	;wreg free
  4347   002392  0012               	return		;funcret
  4348   002394                     __end_of_vide:
  4349                           	callstack 0
  4350                           
  4351 ;; *************** function _marche *****************
  4352 ;; Defined at:
  4353 ;;		line 500 in file "afficheur.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;Total ram usage:        2 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 4
  4374 ;; This function calls:
  4375 ;;		_Diminution
  4376 ;;		_draw_string
  4377 ;;		_goto_lico
  4378 ;; This function is called by:
  4379 ;;		_tache1
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           	psect	text19
  4384   001D8A                     __ptext19:
  4385                           	callstack 0
  4386   001D8A                     _marche:
  4387                           	callstack 23
  4388                           
  4389                           ;afficheur.c: 501: goto_lico(0,0);
  4390                           
  4391                           ;incstack = 0
  4392   001D8A  0E00               	movlw	0
  4393   001D8C  6E09               	movwf	goto_lico@colonne^0,c
  4394   001D8E  0E00               	movlw	0
  4395   001D90  EC2A  F00F         	call	_goto_lico
  4396                           
  4397                           ;afficheur.c: 502: draw_string("Marche:");
  4398   001D94  0E8D               	movlw	low STR_1
  4399   001D96  6E08               	movwf	draw_string@tableau^0,c
  4400   001D98  0E10               	movlw	high STR_1
  4401   001D9A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4402   001D9C  EC05  F00E         	call	_draw_string	;wreg free
  4403                           
  4404                           ;afficheur.c: 503: if (PORTBbits.RB0==0)
  4405   001DA0  B081               	btfsc	129,0,c	;volatile
  4406   001DA2  D007               	goto	i2l1318
  4407                           
  4408                           ;afficheur.c: 504: draw_string("AV");
  4409   001DA4  0ED7               	movlw	low STR_25
  4410   001DA6  6E08               	movwf	draw_string@tableau^0,c
  4411   001DA8  0E10               	movlw	high STR_25
  4412   001DAA  6E09               	movwf	(draw_string@tableau+1)^0,c
  4413   001DAC  EC05  F00E         	call	_draw_string	;wreg free
  4414   001DB0  0012               	return	
  4415   001DB2                     i2l1318:
  4416                           
  4417                           ;afficheur.c: 505: else;afficheur.c: 506: if (PORTBbits.RB1==0)
  4418   001DB2  B281               	btfsc	129,1,c	;volatile
  4419   001DB4  D007               	goto	i2l4281
  4420                           
  4421                           ;afficheur.c: 507: draw_string("AR");
  4422   001DB6  0ED4               	movlw	low STR_26
  4423   001DB8  6E08               	movwf	draw_string@tableau^0,c
  4424   001DBA  0E10               	movlw	high STR_26
  4425   001DBC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4426   001DBE  EC05  F00E         	call	_draw_string	;wreg free
  4427   001DC2  0012               	return	
  4428   001DC4                     i2l4281:
  4429                           
  4430                           ;afficheur.c: 508: else{;afficheur.c: 509: draw_string("N ");
  4431   001DC4  0ED1               	movlw	low STR_27
  4432   001DC6  6E08               	movwf	draw_string@tableau^0,c
  4433   001DC8  0E10               	movlw	high STR_27
  4434   001DCA  6E09               	movwf	(draw_string@tableau+1)^0,c
  4435   001DCC  EC05  F00E         	call	_draw_string	;wreg free
  4436                           
  4437                           ;afficheur.c: 511: _delay((unsigned long)((50)*(48000000/4000.0)));
  4438   001DD0  0E04               	movlw	4
  4439   001DD2  6E10               	movwf	(??_marche+1)^0,c
  4440   001DD4  0E0C               	movlw	12
  4441   001DD6  6E0F               	movwf	??_marche^0,c
  4442   001DD8  0E34               	movlw	52
  4443   001DDA                     i2u259_47:
  4444   001DDA  2EE8               	decfsz	wreg,f,c
  4445   001DDC  D7FE               	bra	i2u259_47
  4446   001DDE  2E0F               	decfsz	??_marche^0,f,c
  4447   001DE0  D7FC               	bra	i2u259_47
  4448   001DE2  2E10               	decfsz	(??_marche+1)^0,f,c
  4449   001DE4  D7FA               	bra	i2u259_47
  4450                           
  4451                           ;afficheur.c: 512: vitesse=Diminution(vitesse);
  4452   001DE6  C073 F001          	movff	115,Diminution@vitesse
  4453   001DEA  6A02               	clrf	(Diminution@vitesse+1)^0,c
  4454   001DEC  ECDE  F011         	call	_Diminution	;wreg free
  4455   001DF0  5001               	movf	?_Diminution^0,w,c
  4456   001DF2  0100               	movlb	0	; () banked
  4457   001DF4  6F73               	movwf	115,b
  4458   001DF6  0012               	return		;funcret
  4459   001DF8                     __end_of_marche:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function _Diminution *****************
  4463 ;; Defined at:
  4464 ;;		line 488 in file "afficheur.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  vitesse         2    0[COMRAM] unsigned int 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;		None
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  2    0[COMRAM] int 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;Total ram usage:        2 bytes
  4483 ;; Hardware stack levels used: 1
  4484 ;; This function calls:
  4485 ;;		Nothing
  4486 ;; This function is called by:
  4487 ;;		_tache1
  4488 ;;		_marche
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text20
  4493   0023BC                     __ptext20:
  4494                           	callstack 0
  4495   0023BC                     _Diminution:
  4496                           	callstack 26
  4497                           
  4498                           ;afficheur.c: 489: if(vitesse>0){
  4499                           
  4500                           ;incstack = 0
  4501   0023BC  5001               	movf	Diminution@vitesse^0,w,c
  4502   0023BE  1002               	iorwf	(Diminution@vitesse+1)^0,w,c
  4503   0023C0  B4D8               	btfsc	status,2,c
  4504   0023C2  0012               	return	
  4505                           
  4506                           ;afficheur.c: 490: vitesse--;
  4507   0023C4  0601               	decf	Diminution@vitesse^0,f,c
  4508   0023C6  A0D8               	btfss	status,0,c
  4509   0023C8  0602               	decf	(Diminution@vitesse+1)^0,f,c
  4510   0023CA  0012               	return		;funcret
  4511   0023CC                     __end_of_Diminution:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _lecture_8bit_analogique *****************
  4515 ;; Defined at:
  4516 ;;		line 62 in file "main.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  channel         1    wreg     unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  channel         1    1[COMRAM] unsigned char 
  4521 ;;  ret             1    0[COMRAM] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      unsigned char 
  4524 ;; Registers used:
  4525 ;;		wreg, status,2, status,0
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;Total ram usage:        2 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_tache1
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text21
  4545   0020E8                     __ptext21:
  4546                           	callstack 0
  4547   0020E8                     _lecture_8bit_analogique:
  4548                           	callstack 27
  4549                           
  4550                           ;incstack = 0
  4551                           ;lecture_8bit_analogique@channel stored from wreg
  4552   0020E8  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4553                           
  4554                           ;main.c: 64: unsigned char ret;;main.c: 67: ADCON1=0;
  4555   0020EA  0E00               	movlw	0
  4556   0020EC  6EC1               	movwf	193,c	;volatile
  4557                           
  4558                           ;main.c: 68: ADCON2=0x16;
  4559   0020EE  0E16               	movlw	22
  4560   0020F0  6EC0               	movwf	192,c	;volatile
  4561                           
  4562                           ;main.c: 69: channel=channel&0x1F;
  4563   0020F2  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4564   0020F4  0B1F               	andlw	31
  4565   0020F6  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4566                           
  4567                           ;main.c: 70: channel=channel<<2;
  4568   0020F8  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4569   0020FA  46E8               	rlncf	wreg,f,c
  4570   0020FC  0BFC               	andlw	252
  4571   0020FE  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4572                           
  4573                           ;main.c: 71: ADCON0=channel|0x01;
  4574   002100  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4575   002102  0901               	iorlw	1
  4576   002104  6EC2               	movwf	194,c	;volatile
  4577                           
  4578                           ;main.c: 73: ADCON0bits.GO=1;
  4579   002106  82C2               	bsf	194,1,c	;volatile
  4580   002108                     i2l148:
  4581   002108  B2C2               	btfsc	194,1,c	;volatile
  4582   00210A  D7FE               	goto	i2l148
  4583                           
  4584                           ;main.c: 77: if ((ADRESL&0x01)==0x01)
  4585   00210C  A0C3               	btfss	195,0,c	;volatile
  4586   00210E  D003               	goto	i2l151
  4587                           
  4588                           ;main.c: 78: ret=0;
  4589   002110  0E00               	movlw	0
  4590   002112  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4591   002114  D002               	goto	i2l2703
  4592   002116                     i2l151:
  4593                           
  4594                           ;main.c: 79: else;main.c: 80: ret=ADRESH;
  4595   002116  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4596   00211A                     i2l2703:
  4597                           
  4598                           ;main.c: 84: return ret;
  4599   00211A  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4600   00211C  0012               	return		;funcret
  4601   00211E                     __end_of_lecture_8bit_analogique:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _initialisation_afficheur *****************
  4605 ;; Defined at:
  4606 ;;		line 164 in file "afficheur.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;  error_count     1    8[COMRAM] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;Total ram usage:        1 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 3
  4627 ;; This function calls:
  4628 ;;		_check_status_ok
  4629 ;;		_command
  4630 ;;		_d1command
  4631 ;;		_d2command
  4632 ;;		_delai_us_char
  4633 ;; This function is called by:
  4634 ;;		_tache1
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text22
  4639   0018C4                     __ptext22:
  4640                           	callstack 0
  4641   0018C4                     _initialisation_afficheur:
  4642                           	callstack 24
  4643                           
  4644                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4645                           
  4646                           ;incstack = 0
  4647   0018C4  0E00               	movlw	0
  4648   0018C6  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4649                           
  4650                           ;afficheur.c: 172: LATH=0;
  4651   0018C8  0E00               	movlw	0
  4652   0018CA  6E90               	movwf	144,c	;volatile
  4653                           
  4654                           ;afficheur.c: 173: LATJ=0x1F;
  4655   0018CC  0E1F               	movlw	31
  4656   0018CE  6E91               	movwf	145,c	;volatile
  4657                           
  4658                           ;afficheur.c: 176: TRISH=0;
  4659   0018D0  0E00               	movlw	0
  4660   0018D2  6E99               	movwf	153,c	;volatile
  4661                           
  4662                           ;afficheur.c: 177: TRISJ=0;
  4663   0018D4  0E00               	movlw	0
  4664   0018D6  6E9A               	movwf	154,c	;volatile
  4665                           
  4666                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4667   0018D8  9A91               	bcf	145,5,c	;volatile
  4668                           
  4669                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4670   0018DA  8C91               	bsf	145,6,c	;volatile
  4671                           
  4672                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4673   0018DC  9891               	bcf	145,4,c	;volatile
  4674                           
  4675                           ;afficheur.c: 185: delai_us_char(4);
  4676   0018DE  0E04               	movlw	4
  4677   0018E0  EC35  F011         	call	_delai_us_char
  4678                           
  4679                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4680   0018E4  8891               	bsf	145,4,c	;volatile
  4681                           
  4682                           ;afficheur.c: 190: delai_us_char(12);
  4683   0018E6  0E0C               	movlw	12
  4684   0018E8  EC35  F011         	call	_delai_us_char
  4685                           
  4686                           ;afficheur.c: 191: while(check_status_ok()==00)
  4687   0018EC  D00C               	goto	i2l4225
  4688   0018EE                     i2l4215:
  4689                           
  4690                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4691   0018EE  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4692                           
  4693                           ;afficheur.c: 194: delai_us_char(12);
  4694   0018F0  0E0C               	movlw	12
  4695   0018F2  EC35  F011         	call	_delai_us_char
  4696                           
  4697                           ;afficheur.c: 195: if (error_count>200)
  4698   0018F6  0EC8               	movlw	200
  4699   0018F8  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4700   0018FA  D005               	goto	i2l4225
  4701                           
  4702                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4703   0018FC  828B               	bsf	139,1,c	;volatile
  4704   0018FE  808F               	bsf	143,0,c	;volatile
  4705   001900  948B               	bcf	139,2,c	;volatile
  4706                           
  4707                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4708   001902  9EF2               	bcf	242,7,c	;volatile
  4709   001904                     i2l1158:
  4710   001904  D7FF               	goto	i2l1158
  4711   001906                     i2l4225:
  4712   001906  ECD8  F010         	call	_check_status_ok	;wreg free
  4713   00190A  0900               	iorlw	0
  4714   00190C  B4D8               	btfsc	status,2,c
  4715   00190E  D7EF               	goto	i2l4215
  4716                           
  4717                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4718   001910  0E0F               	movlw	15
  4719   001912  6E05               	movwf	d2command@d2^0,c
  4720   001914  0E21               	movlw	33
  4721   001916  6E06               	movwf	d2command@cmd^0,c
  4722   001918  0E27               	movlw	39
  4723   00191A  ECA8  F00F         	call	_d2command
  4724                           
  4725                           ;afficheur.c: 206: d2command(0,0,0x22);
  4726   00191E  0E00               	movlw	0
  4727   001920  6E05               	movwf	d2command@d2^0,c
  4728   001922  0E22               	movlw	34
  4729   001924  6E06               	movwf	d2command@cmd^0,c
  4730   001926  0E00               	movlw	0
  4731   001928  ECA8  F00F         	call	_d2command
  4732                           
  4733                           ;afficheur.c: 207: d2command(0,0,0x24);
  4734   00192C  0E00               	movlw	0
  4735   00192E  6E05               	movwf	d2command@d2^0,c
  4736   001930  0E24               	movlw	36
  4737   001932  6E06               	movwf	d2command@cmd^0,c
  4738   001934  0E00               	movlw	0
  4739   001936  ECA8  F00F         	call	_d2command
  4740                           
  4741                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4742   00193A  0E7B               	movlw	123
  4743   00193C  6E05               	movwf	d2command@d2^0,c
  4744   00193E  0E40               	movlw	64
  4745   001940  6E06               	movwf	d2command@cmd^0,c
  4746   001942  0E00               	movlw	0
  4747   001944  ECA8  F00F         	call	_d2command
  4748                           
  4749                           ;afficheur.c: 211: d2command(40,0,0x41);
  4750   001948  0E00               	movlw	0
  4751   00194A  6E05               	movwf	d2command@d2^0,c
  4752   00194C  0E41               	movlw	65
  4753   00194E  6E06               	movwf	d2command@cmd^0,c
  4754   001950  0E28               	movlw	40
  4755   001952  ECA8  F00F         	call	_d2command
  4756                           
  4757                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4758   001956  0E80               	movlw	128
  4759   001958  6E05               	movwf	d2command@d2^0,c
  4760   00195A  0E42               	movlw	66
  4761   00195C  6E06               	movwf	d2command@cmd^0,c
  4762   00195E  0E00               	movlw	0
  4763   001960  ECA8  F00F         	call	_d2command
  4764                           
  4765                           ;afficheur.c: 213: d2command(40,0,0x43);
  4766   001964  0E00               	movlw	0
  4767   001966  6E05               	movwf	d2command@d2^0,c
  4768   001968  0E43               	movlw	67
  4769   00196A  6E06               	movwf	d2command@cmd^0,c
  4770   00196C  0E28               	movlw	40
  4771   00196E  ECA8  F00F         	call	_d2command
  4772                           
  4773                           ;afficheur.c: 216: command(0x80);
  4774   001972  0E80               	movlw	128
  4775   001974  EC7F  F011         	call	_command
  4776                           
  4777                           ;afficheur.c: 219: command(0x9C);
  4778   001978  0E9C               	movlw	156
  4779   00197A  EC7F  F011         	call	_command
  4780                           
  4781                           ;afficheur.c: 222: command(0xA0);
  4782   00197E  0EA0               	movlw	160
  4783   001980  EC7F  F011         	call	_command
  4784                           
  4785                           ;afficheur.c: 225: d1command(0x02,0x70);
  4786   001984  0E70               	movlw	112
  4787   001986  6E05               	movwf	d1command@cmd^0,c
  4788   001988  0E02               	movlw	2
  4789   00198A  EC3B  F010         	call	_d1command
  4790   00198E  0012               	return		;funcret
  4791   001990                     __end_of_initialisation_afficheur:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _check_status_ok *****************
  4795 ;; Defined at:
  4796 ;;		line 30 in file "afficheur.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;		None
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  res             1    0[COMRAM] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  1    wreg      unsigned char 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;Total ram usage:        1 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; This function calls:
  4817 ;;		Nothing
  4818 ;; This function is called by:
  4819 ;;		_initialisation_afficheur
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text23
  4824   0021B0                     __ptext23:
  4825                           	callstack 0
  4826   0021B0                     _check_status_ok:
  4827                           	callstack 26
  4828                           
  4829                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4830                           
  4831                           ;incstack = 0
  4832   0021B0  6899               	setf	153,c	;volatile
  4833                           
  4834                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4835   0021B2  8091               	bsf	145,0,c	;volatile
  4836                           
  4837                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4838   0021B4  9691               	bcf	145,3,c	;volatile
  4839                           
  4840                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4841   0021B6  9291               	bcf	145,1,c	;volatile
  4842                           
  4843                           ;afficheur.c: 39: __nop();
  4844   0021B8  F000               	nop	
  4845                           
  4846                           ;afficheur.c: 40: __nop();
  4847   0021BA  F000               	nop	
  4848                           
  4849                           ;afficheur.c: 41: __nop();
  4850   0021BC  F000               	nop	
  4851                           
  4852                           ;afficheur.c: 42: res=PORTH;
  4853   0021BE  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4854                           
  4855                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4856   0021C2  8291               	bsf	145,1,c	;volatile
  4857                           
  4858                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4859   0021C4  8691               	bsf	145,3,c	;volatile
  4860                           
  4861                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4862   0021C6  5001               	movf	check_status_ok@res^0,w,c
  4863   0021C8  0B03               	andlw	3
  4864   0021CA  0A03               	xorlw	3
  4865   0021CC  A4D8               	btfss	status,2,c
  4866   0021CE  D002               	goto	i2l2667
  4867                           
  4868                           ;afficheur.c: 47: res=1;
  4869   0021D0  0E01               	movlw	1
  4870   0021D2  D001               	goto	L4
  4871   0021D4                     i2l2667:
  4872                           
  4873                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4874   0021D4  0E00               	movlw	0
  4875   0021D6                     L4:
  4876   0021D6  6E01               	movwf	check_status_ok@res^0,c
  4877                           
  4878                           ;afficheur.c: 50: return res;
  4879   0021D8  5001               	movf	check_status_ok@res^0,w,c
  4880   0021DA  0012               	return		;funcret
  4881   0021DC                     __end_of_check_status_ok:
  4882                           	callstack 0
  4883                           
  4884 ;; *************** function _init_rxtx *****************
  4885 ;; Defined at:
  4886 ;;		line 4 in file "rxtx.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;Total ram usage:        0 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; This function calls:
  4907 ;;		Nothing
  4908 ;; This function is called by:
  4909 ;;		_tache1
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text24
  4914   002248                     __ptext24:
  4915                           	callstack 0
  4916   002248                     _init_rxtx:
  4917                           	callstack 27
  4918                           
  4919                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4920                           
  4921                           ;incstack = 0
  4922   002248  9C94               	bcf	148,6,c	;volatile
  4923                           
  4924                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4925   00224A  8E94               	bsf	148,7,c	;volatile
  4926                           
  4927                           ;rxtx.c: 8: BAUDCON1=0x08;
  4928   00224C  0E08               	movlw	8
  4929   00224E  6E65               	movwf	101,c	;volatile
  4930                           
  4931                           ;rxtx.c: 9: SPBRGH1=0x04;
  4932   002250  0E04               	movlw	4
  4933   002252  6ED4               	movwf	212,c	;volatile
  4934                           
  4935                           ;rxtx.c: 10: SPBRG1=0xE1;
  4936   002254  0EE1               	movlw	225
  4937   002256  6EAF               	movwf	175,c	;volatile
  4938                           
  4939                           ;rxtx.c: 11: TXSTA1=0x04;
  4940   002258  0E04               	movlw	4
  4941   00225A  6EAC               	movwf	172,c	;volatile
  4942                           
  4943                           ;rxtx.c: 12: RCSTA1=0x80;
  4944   00225C  0E80               	movlw	128
  4945   00225E  6EAB               	movwf	171,c	;volatile
  4946                           
  4947                           ;rxtx.c: 13: TXSTA1=0x24;
  4948   002260  0E24               	movlw	36
  4949   002262  6EAC               	movwf	172,c	;volatile
  4950                           
  4951                           ;rxtx.c: 14: RCSTA1=0x90;
  4952   002264  0E90               	movlw	144
  4953   002266  6EAB               	movwf	171,c	;volatile
  4954   002268  0012               	return		;funcret
  4955   00226A                     __end_of_init_rxtx:
  4956                           	callstack 0
  4957                           
  4958 ;; *************** function _draw_square *****************
  4959 ;; Defined at:
  4960 ;;		line 325 in file "afficheur.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  x1              1    wreg     unsigned char 
  4963 ;;  y1              1   20[COMRAM] unsigned char 
  4964 ;;  x2              1   21[COMRAM] unsigned char 
  4965 ;;  y2              1   22[COMRAM] unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  x1              1   23[COMRAM] unsigned char 
  4968 ;;  y               1   25[COMRAM] unsigned char 
  4969 ;;  x               1   24[COMRAM] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        6 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 4
  4986 ;; This function calls:
  4987 ;;		_plot1
  4988 ;; This function is called by:
  4989 ;;		_tache1
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text25
  4994   001FA0                     __ptext25:
  4995                           	callstack 0
  4996   001FA0                     _draw_square:
  4997                           	callstack 23
  4998                           
  4999                           ;incstack = 0
  5000                           ;draw_square@x1 stored from wreg
  5001   001FA0  6E18               	movwf	draw_square@x1^0,c
  5002                           
  5003                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  5004   001FA2  C018  F019         	movff	draw_square@x1,draw_square@x
  5005   001FA6  D00B               	goto	i2l4263
  5006   001FA8                     i2l4259:
  5007                           
  5008                           ;afficheur.c: 330: plot1(x, y1);
  5009   001FA8  C015  F00F         	movff	draw_square@y1,plot1@y
  5010   001FAC  5019               	movf	draw_square@x^0,w,c
  5011   001FAE  ECC8  F00C         	call	_plot1
  5012                           
  5013                           ;afficheur.c: 331: plot1(x, y2);
  5014   001FB2  C017  F00F         	movff	draw_square@y2,plot1@y
  5015   001FB6  5019               	movf	draw_square@x^0,w,c
  5016   001FB8  ECC8  F00C         	call	_plot1
  5017   001FBC  2A19               	incf	draw_square@x^0,f,c
  5018   001FBE                     i2l4263:
  5019   001FBE  5019               	movf	draw_square@x^0,w,c
  5020   001FC0  5C16               	subwf	draw_square@x2^0,w,c
  5021   001FC2  B0D8               	btfsc	status,0,c
  5022   001FC4  D7F1               	goto	i2l4259
  5023                           
  5024                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  5025   001FC6  C015  F01A         	movff	draw_square@y1,draw_square@y
  5026   001FCA  D00B               	goto	i2l4269
  5027   001FCC                     i2l4265:
  5028                           
  5029                           ;afficheur.c: 336: plot1(x1, y);
  5030   001FCC  C01A  F00F         	movff	draw_square@y,plot1@y
  5031   001FD0  5018               	movf	draw_square@x1^0,w,c
  5032   001FD2  ECC8  F00C         	call	_plot1
  5033                           
  5034                           ;afficheur.c: 337: plot1(x2, y);
  5035   001FD6  C01A  F00F         	movff	draw_square@y,plot1@y
  5036   001FDA  5016               	movf	draw_square@x2^0,w,c
  5037   001FDC  ECC8  F00C         	call	_plot1
  5038   001FE0  2A1A               	incf	draw_square@y^0,f,c
  5039   001FE2                     i2l4269:
  5040   001FE2  501A               	movf	draw_square@y^0,w,c
  5041   001FE4  5C17               	subwf	draw_square@y2^0,w,c
  5042   001FE6  A0D8               	btfss	status,0,c
  5043   001FE8  0012               	return	
  5044   001FEA  D7F0               	goto	i2l4265
  5045   001FEC                     __end_of_draw_square:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _plot1 *****************
  5049 ;; Defined at:
  5050 ;;		line 390 in file "afficheur.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;  x               1    wreg     unsigned char 
  5053 ;;  y               1   14[COMRAM] unsigned char 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  x               1   19[COMRAM] unsigned char 
  5056 ;;  add             2   17[COMRAM] unsigned int 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:        6 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 3
  5073 ;; This function calls:
  5074 ;;		___awdiv
  5075 ;;		___awmod
  5076 ;;		_command
  5077 ;;		_d2command
  5078 ;; This function is called by:
  5079 ;;		_tache1
  5080 ;;		_draw_square
  5081 ;;		_draw_filled_square
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text26
  5086   001990                     __ptext26:
  5087                           	callstack 0
  5088   001990                     _plot1:
  5089                           	callstack 24
  5090                           
  5091                           ;incstack = 0
  5092                           ;plot1@x stored from wreg
  5093   001990  6E14               	movwf	plot1@x^0,c
  5094                           
  5095                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  5096   001992  C014  F007         	movff	plot1@x,___awdiv@dividend
  5097   001996  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5098   001998  0E00               	movlw	0
  5099   00199A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5100   00199C  0E06               	movlw	6
  5101   00199E  6E09               	movwf	___awdiv@divisor^0,c
  5102   0019A0  EC4B  F00E         	call	___awdiv	;wreg free
  5103   0019A4  500F               	movf	plot1@y^0,w,c
  5104   0019A6  0D28               	mullw	40
  5105   0019A8  CFF3 F010          	movff	prodl,??_plot1
  5106   0019AC  CFF4 F011          	movff	prodh,??_plot1+1
  5107   0019B0  5007               	movf	?___awdiv^0,w,c
  5108   0019B2  2410               	addwf	??_plot1^0,w,c
  5109   0019B4  6E12               	movwf	plot1@add^0,c
  5110   0019B6  5008               	movf	(?___awdiv+1)^0,w,c
  5111   0019B8  2011               	addwfc	(??_plot1+1)^0,w,c
  5112   0019BA  6E13               	movwf	(plot1@add+1)^0,c
  5113                           
  5114                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  5115   0019BC  5013               	movf	(plot1@add+1)^0,w,c
  5116   0019BE  6E05               	movwf	d2command@d2^0,c
  5117   0019C0  0E24               	movlw	36
  5118   0019C2  6E06               	movwf	d2command@cmd^0,c
  5119   0019C4  5012               	movf	plot1@add^0,w,c
  5120   0019C6  ECA8  F00F         	call	_d2command
  5121                           
  5122                           ;afficheur.c: 397: switch(x%6)
  5123   0019CA  D018               	goto	i2l4183
  5124   0019CC                     i2l4169:
  5125   0019CC  0EFD               	movlw	253
  5126   0019CE  EC7F  F011         	call	_command
  5127   0019D2  0012               	return	
  5128   0019D4                     i2l4171:
  5129   0019D4  0EFC               	movlw	252
  5130   0019D6  EC7F  F011         	call	_command
  5131   0019DA  0012               	return	
  5132   0019DC                     i2l4173:
  5133   0019DC  0EFB               	movlw	251
  5134   0019DE  EC7F  F011         	call	_command
  5135   0019E2  0012               	return	
  5136   0019E4                     i2l4175:
  5137   0019E4  0EFA               	movlw	250
  5138   0019E6  EC7F  F011         	call	_command
  5139   0019EA  0012               	return	
  5140   0019EC                     i2l4177:
  5141   0019EC  0EF9               	movlw	249
  5142   0019EE  EC7F  F011         	call	_command
  5143   0019F2  0012               	return	
  5144   0019F4                     i2l4179:
  5145   0019F4  0EF8               	movlw	248
  5146   0019F6  EC7F  F011         	call	_command
  5147   0019FA  0012               	return	
  5148   0019FC                     i2l4183:
  5149   0019FC  C014  F001         	movff	plot1@x,___awmod@dividend
  5150   001A00  6A02               	clrf	(___awmod@dividend+1)^0,c
  5151   001A02  0E00               	movlw	0
  5152   001A04  6E04               	movwf	(___awmod@divisor+1)^0,c
  5153   001A06  0E06               	movlw	6
  5154   001A08  6E03               	movwf	___awmod@divisor^0,c
  5155   001A0A  EC8D  F00E         	call	___awmod	;wreg free
  5156                           
  5157                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5158                           ; Switch size 1, requested type "simple"
  5159                           ; Number of cases is 1, Range of values is 0 to 0
  5160                           ; switch strategies available:
  5161                           ; Name         Instructions Cycles
  5162                           ; simple_byte            4     3 (average)
  5163                           ;	Chosen strategy is simple_byte
  5164   001A0E  5002               	movf	(?___awmod+1)^0,w,c
  5165   001A10  0A00               	xorlw	0	; case 0
  5166   001A12  A4D8               	btfss	status,2,c
  5167   001A14  0012               	return	
  5168                           
  5169                           ; Switch size 1, requested type "simple"
  5170                           ; Number of cases is 6, Range of values is 0 to 5
  5171                           ; switch strategies available:
  5172                           ; Name         Instructions Cycles
  5173                           ; simple_byte           19    10 (average)
  5174                           ;	Chosen strategy is simple_byte
  5175   001A16  5001               	movf	?___awmod^0,w,c
  5176   001A18  0A00               	xorlw	0	; case 0
  5177   001A1A  B4D8               	btfsc	status,2,c
  5178   001A1C  D7D7               	goto	i2l4169
  5179   001A1E  0A01               	xorlw	1	; case 1
  5180   001A20  B4D8               	btfsc	status,2,c
  5181   001A22  D7D8               	goto	i2l4171
  5182   001A24  0A03               	xorlw	3	; case 2
  5183   001A26  B4D8               	btfsc	status,2,c
  5184   001A28  D7D9               	goto	i2l4173
  5185   001A2A  0A01               	xorlw	1	; case 3
  5186   001A2C  B4D8               	btfsc	status,2,c
  5187   001A2E  D7DA               	goto	i2l4175
  5188   001A30  0A07               	xorlw	7	; case 4
  5189   001A32  B4D8               	btfsc	status,2,c
  5190   001A34  D7DB               	goto	i2l4177
  5191   001A36  0A01               	xorlw	1	; case 5
  5192   001A38  A4D8               	btfss	status,2,c
  5193   001A3A  0012               	return	
  5194   001A3C  D7DB               	goto	i2l4179
  5195   001A3E                     __end_of_plot1:
  5196                           	callstack 0
  5197                           
  5198 ;; *************** function _command *****************
  5199 ;; Defined at:
  5200 ;;		line 90 in file "afficheur.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  cmd             1    wreg     unsigned char 
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;  cmd             1    4[COMRAM] unsigned char 
  5205 ;;  res             1    0        unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      unsigned char 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;Total ram usage:        1 bytes
  5220 ;; Hardware stack levels used: 1
  5221 ;; Hardware stack levels required when called: 2
  5222 ;; This function calls:
  5223 ;;		_delai_us_char
  5224 ;;		_wait_status_ok
  5225 ;;		_write_c_aff
  5226 ;; This function is called by:
  5227 ;;		_initialisation_afficheur
  5228 ;;		_plot1
  5229 ;;		_plot0
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text27
  5234   0022FE                     __ptext27:
  5235                           	callstack 0
  5236   0022FE                     _command:
  5237                           	callstack 24
  5238                           
  5239                           ;incstack = 0
  5240                           ;command@cmd stored from wreg
  5241   0022FE  6E05               	movwf	command@cmd^0,c
  5242                           
  5243                           ;afficheur.c: 96: if(wait_status_ok()==1)
  5244   002300  EC7F  F00F         	call	_wait_status_ok	;wreg free
  5245   002304  06E8               	decf	wreg,f,c
  5246   002306  A4D8               	btfss	status,2,c
  5247   002308  0012               	return	
  5248                           
  5249                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  5250   00230A  0E0C               	movlw	12
  5251   00230C  EC35  F011         	call	_delai_us_char
  5252                           
  5253                           ;afficheur.c: 99: write_c_aff(cmd);
  5254   002310  5005               	movf	command@cmd^0,w,c
  5255   002312  EC99  F011         	call	_write_c_aff
  5256   002316  0012               	return		;funcret
  5257   002318                     __end_of_command:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function ___awmod *****************
  5261 ;; Defined at:
  5262 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  dividend        2    0[COMRAM] int 
  5265 ;;  divisor         2    2[COMRAM] int 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  sign            1    5[COMRAM] unsigned char 
  5268 ;;  counter         1    4[COMRAM] unsigned char 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  2    0[COMRAM] int 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;Total ram usage:        6 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_plot1
  5288 ;;		_plot0
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text28
  5293   001D1A                     __ptext28:
  5294                           	callstack 0
  5295   001D1A                     ___awmod:
  5296                           	callstack 26
  5297                           
  5298                           ;incstack = 0
  5299   001D1A  0E00               	movlw	0
  5300   001D1C  6E06               	movwf	___awmod@sign^0,c
  5301   001D1E  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5302   001D20  D006               	goto	i2l4097
  5303   001D22  6C01               	negf	___awmod@dividend^0,c
  5304   001D24  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5305   001D26  B0D8               	btfsc	status,0,c
  5306   001D28  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5307   001D2A  0E01               	movlw	1
  5308   001D2C  6E06               	movwf	___awmod@sign^0,c
  5309   001D2E                     i2l4097:
  5310   001D2E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5311   001D30  D004               	goto	i2l4101
  5312   001D32  6C03               	negf	___awmod@divisor^0,c
  5313   001D34  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5314   001D36  B0D8               	btfsc	status,0,c
  5315   001D38  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5316   001D3A                     i2l4101:
  5317   001D3A  5003               	movf	___awmod@divisor^0,w,c
  5318   001D3C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5319   001D3E  B4D8               	btfsc	status,2,c
  5320   001D40  D018               	goto	i2l4117
  5321   001D42  0E01               	movlw	1
  5322   001D44  6E05               	movwf	___awmod@counter^0,c
  5323   001D46  D004               	goto	i2l4107
  5324   001D48                     i2l4105:
  5325   001D48  90D8               	bcf	status,0,c
  5326   001D4A  3603               	rlcf	___awmod@divisor^0,f,c
  5327   001D4C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5328   001D4E  2A05               	incf	___awmod@counter^0,f,c
  5329   001D50                     i2l4107:
  5330   001D50  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5331   001D52  D7FA               	goto	i2l4105
  5332   001D54                     i2u163_40:
  5333   001D54  5003               	movf	___awmod@divisor^0,w,c
  5334   001D56  5C01               	subwf	___awmod@dividend^0,w,c
  5335   001D58  5004               	movf	(___awmod@divisor+1)^0,w,c
  5336   001D5A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5337   001D5C  A0D8               	btfss	status,0,c
  5338   001D5E  D004               	goto	i2l4113
  5339   001D60  5003               	movf	___awmod@divisor^0,w,c
  5340   001D62  5E01               	subwf	___awmod@dividend^0,f,c
  5341   001D64  5004               	movf	(___awmod@divisor+1)^0,w,c
  5342   001D66  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5343   001D68                     i2l4113:
  5344   001D68  90D8               	bcf	status,0,c
  5345   001D6A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5346   001D6C  3203               	rrcf	___awmod@divisor^0,f,c
  5347   001D6E  2E05               	decfsz	___awmod@counter^0,f,c
  5348   001D70  D7F1               	goto	i2u163_40
  5349   001D72                     i2l4117:
  5350   001D72  5006               	movf	___awmod@sign^0,w,c
  5351   001D74  B4D8               	btfsc	status,2,c
  5352   001D76  D004               	goto	i2l4121
  5353   001D78  6C01               	negf	___awmod@dividend^0,c
  5354   001D7A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5355   001D7C  B0D8               	btfsc	status,0,c
  5356   001D7E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5357   001D80                     i2l4121:
  5358   001D80  C001  F001         	movff	___awmod@dividend,?___awmod
  5359   001D84  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5360   001D88  0012               	return		;funcret
  5361   001D8A                     __end_of___awmod:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function _draw_hex8 *****************
  5365 ;; Defined at:
  5366 ;;		line 252 in file "afficheur.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  octet           1    wreg     unsigned char 
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  octet           1    7[COMRAM] unsigned char 
  5371 ;;  c               1    8[COMRAM] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      void 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;Total ram usage:        2 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 3
  5388 ;; This function calls:
  5389 ;;		_d1command
  5390 ;; This function is called by:
  5391 ;;		_tache1
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text29
  5396   001DF8                     __ptext29:
  5397                           	callstack 0
  5398   001DF8                     _draw_hex8:
  5399                           	callstack 24
  5400                           
  5401                           ;incstack = 0
  5402                           ;draw_hex8@octet stored from wreg
  5403   001DF8  6E08               	movwf	draw_hex8@octet^0,c
  5404                           
  5405                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5406   001DFA  3808               	swapf	draw_hex8@octet^0,w,c
  5407   001DFC  0B0F               	andlw	15
  5408   001DFE  6E09               	movwf	draw_hex8@c^0,c
  5409                           
  5410                           ;afficheur.c: 257: if (c>9)
  5411   001E00  0E09               	movlw	9
  5412   001E02  6409               	cpfsgt	draw_hex8@c^0,c
  5413   001E04  D003               	goto	i2l4359
  5414                           
  5415                           ;afficheur.c: 258: c=c+0x17;
  5416   001E06  5009               	movf	draw_hex8@c^0,w,c
  5417   001E08  0F17               	addlw	23
  5418   001E0A  D002               	goto	L5
  5419   001E0C                     i2l4359:
  5420                           
  5421                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5422   001E0C  5009               	movf	draw_hex8@c^0,w,c
  5423   001E0E  0F10               	addlw	16
  5424   001E10                     L5:
  5425   001E10  6E09               	movwf	draw_hex8@c^0,c
  5426   001E12  D001               	goto	i2l4361
  5427   001E14                     i2l1187:
  5428                           
  5429                           ;afficheur.c: 262: __nop();
  5430   001E14  F000               	nop	
  5431   001E16                     i2l4361:
  5432   001E16  0EC0               	movlw	192
  5433   001E18  6E05               	movwf	d1command@cmd^0,c
  5434   001E1A  5009               	movf	draw_hex8@c^0,w,c
  5435   001E1C  EC3B  F010         	call	_d1command
  5436   001E20  0900               	iorlw	0
  5437   001E22  B4D8               	btfsc	status,2,c
  5438   001E24  D7F7               	goto	i2l1187
  5439                           
  5440                           ;afficheur.c: 264: c=(octet&0x0F);
  5441   001E26  5008               	movf	draw_hex8@octet^0,w,c
  5442   001E28  0B0F               	andlw	15
  5443   001E2A  6E09               	movwf	draw_hex8@c^0,c
  5444                           
  5445                           ;afficheur.c: 265: if (c>9)
  5446   001E2C  0E09               	movlw	9
  5447   001E2E  6409               	cpfsgt	draw_hex8@c^0,c
  5448   001E30  D003               	goto	i2l4367
  5449                           
  5450                           ;afficheur.c: 266: c=c+0x17;
  5451   001E32  5009               	movf	draw_hex8@c^0,w,c
  5452   001E34  0F17               	addlw	23
  5453   001E36  D002               	goto	L6
  5454   001E38                     i2l4367:
  5455                           
  5456                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5457   001E38  5009               	movf	draw_hex8@c^0,w,c
  5458   001E3A  0F10               	addlw	16
  5459   001E3C                     L6:
  5460   001E3C  6E09               	movwf	draw_hex8@c^0,c
  5461   001E3E  D001               	goto	i2l4369
  5462   001E40                     i2l1192:
  5463                           
  5464                           ;afficheur.c: 270: __nop();
  5465   001E40  F000               	nop	
  5466   001E42                     i2l4369:
  5467   001E42  0EC0               	movlw	192
  5468   001E44  6E05               	movwf	d1command@cmd^0,c
  5469   001E46  5009               	movf	draw_hex8@c^0,w,c
  5470   001E48  EC3B  F010         	call	_d1command
  5471   001E4C  0900               	iorlw	0
  5472   001E4E  A4D8               	btfss	status,2,c
  5473   001E50  0012               	return	
  5474   001E52  D7F6               	goto	i2l1192
  5475   001E54                     __end_of_draw_hex8:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _draw_dec8 *****************
  5479 ;; Defined at:
  5480 ;;		line 274 in file "afficheur.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  octet           1    wreg     unsigned char 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  octet           1   16[COMRAM] unsigned char 
  5485 ;;  c               1   19[COMRAM] unsigned char 
  5486 ;;  dix             1   18[COMRAM] unsigned char 
  5487 ;;  cent            1   17[COMRAM] unsigned char 
  5488 ;;  unit            1   15[COMRAM] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;                  1    wreg      void 
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;Total ram usage:        6 bytes
  5503 ;; Hardware stack levels used: 1
  5504 ;; Hardware stack levels required when called: 3
  5505 ;; This function calls:
  5506 ;;		___awdiv
  5507 ;;		_d1command
  5508 ;; This function is called by:
  5509 ;;		_tache1
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text30
  5514   001AE0                     __ptext30:
  5515                           	callstack 0
  5516   001AE0                     _draw_dec8:
  5517                           	callstack 24
  5518                           
  5519                           ;incstack = 0
  5520                           ;draw_dec8@octet stored from wreg
  5521   001AE0  6E11               	movwf	draw_dec8@octet^0,c
  5522                           
  5523                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5524   001AE2  C011  F007         	movff	draw_dec8@octet,___awdiv@dividend
  5525   001AE6  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5526   001AE8  0E00               	movlw	0
  5527   001AEA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5528   001AEC  0E64               	movlw	100
  5529   001AEE  6E09               	movwf	___awdiv@divisor^0,c
  5530   001AF0  EC4B  F00E         	call	___awdiv	;wreg free
  5531   001AF4  5007               	movf	?___awdiv^0,w,c
  5532   001AF6  6E12               	movwf	draw_dec8@cent^0,c
  5533                           
  5534                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5535   001AF8  5012               	movf	draw_dec8@cent^0,w,c
  5536   001AFA  0D9C               	mullw	156
  5537   001AFC  50F3               	movf	243,w,c
  5538   001AFE  2411               	addwf	draw_dec8@octet^0,w,c
  5539   001B00  6E13               	movwf	draw_dec8@dix^0,c
  5540                           
  5541                           ;afficheur.c: 279: dix = dix/10;
  5542   001B02  C013  F007         	movff	draw_dec8@dix,___awdiv@dividend
  5543   001B06  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5544   001B08  0E00               	movlw	0
  5545   001B0A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5546   001B0C  0E0A               	movlw	10
  5547   001B0E  6E09               	movwf	___awdiv@divisor^0,c
  5548   001B10  EC4B  F00E         	call	___awdiv	;wreg free
  5549   001B14  5007               	movf	?___awdiv^0,w,c
  5550   001B16  6E13               	movwf	draw_dec8@dix^0,c
  5551                           
  5552                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5553   001B18  5012               	movf	draw_dec8@cent^0,w,c
  5554   001B1A  0D9C               	mullw	156
  5555   001B1C  CFF3 F00F          	movff	prodl,??_draw_dec8
  5556   001B20  5013               	movf	draw_dec8@dix^0,w,c
  5557   001B22  0DF6               	mullw	246
  5558   001B24  50F3               	movf	243,w,c
  5559   001B26  240F               	addwf	??_draw_dec8^0,w,c
  5560   001B28  2411               	addwf	draw_dec8@octet^0,w,c
  5561   001B2A  6E10               	movwf	draw_dec8@unit^0,c
  5562                           
  5563                           ;afficheur.c: 282: c=cent+0x10;
  5564   001B2C  5012               	movf	draw_dec8@cent^0,w,c
  5565   001B2E  0F10               	addlw	16
  5566   001B30  6E14               	movwf	draw_dec8@c^0,c
  5567                           
  5568                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5569   001B32  D001               	goto	i2l4307
  5570   001B34                     i2l1198:
  5571                           
  5572                           ;afficheur.c: 284: __nop();
  5573   001B34  F000               	nop	
  5574   001B36                     i2l4307:
  5575   001B36  0EC0               	movlw	192
  5576   001B38  6E05               	movwf	d1command@cmd^0,c
  5577   001B3A  5014               	movf	draw_dec8@c^0,w,c
  5578   001B3C  EC3B  F010         	call	_d1command
  5579   001B40  0900               	iorlw	0
  5580   001B42  B4D8               	btfsc	status,2,c
  5581   001B44  D7F7               	goto	i2l1198
  5582                           
  5583                           ;afficheur.c: 286: c=dix+0x10;
  5584   001B46  5013               	movf	draw_dec8@dix^0,w,c
  5585   001B48  0F10               	addlw	16
  5586   001B4A  6E14               	movwf	draw_dec8@c^0,c
  5587                           
  5588                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5589   001B4C  D001               	goto	i2l4311
  5590   001B4E                     i2l1201:
  5591                           
  5592                           ;afficheur.c: 288: __nop();
  5593   001B4E  F000               	nop	
  5594   001B50                     i2l4311:
  5595   001B50  0EC0               	movlw	192
  5596   001B52  6E05               	movwf	d1command@cmd^0,c
  5597   001B54  5014               	movf	draw_dec8@c^0,w,c
  5598   001B56  EC3B  F010         	call	_d1command
  5599   001B5A  0900               	iorlw	0
  5600   001B5C  B4D8               	btfsc	status,2,c
  5601   001B5E  D7F7               	goto	i2l1201
  5602                           
  5603                           ;afficheur.c: 290: c=unit+0x10;
  5604   001B60  5010               	movf	draw_dec8@unit^0,w,c
  5605   001B62  0F10               	addlw	16
  5606   001B64  6E14               	movwf	draw_dec8@c^0,c
  5607                           
  5608                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5609   001B66  D001               	goto	i2l4315
  5610   001B68                     i2l1204:
  5611                           
  5612                           ;afficheur.c: 292: __nop();
  5613   001B68  F000               	nop	
  5614   001B6A                     i2l4315:
  5615   001B6A  0EC0               	movlw	192
  5616   001B6C  6E05               	movwf	d1command@cmd^0,c
  5617   001B6E  5014               	movf	draw_dec8@c^0,w,c
  5618   001B70  EC3B  F010         	call	_d1command
  5619   001B74  0900               	iorlw	0
  5620   001B76  A4D8               	btfss	status,2,c
  5621   001B78  0012               	return	
  5622   001B7A  D7F6               	goto	i2l1204
  5623   001B7C                     __end_of_draw_dec8:
  5624                           	callstack 0
  5625                           
  5626 ;; *************** function _clear_text *****************
  5627 ;; Defined at:
  5628 ;;		line 307 in file "afficheur.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;		None
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  add             2    8[COMRAM] unsigned int 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;Total ram usage:        2 bytes
  5647 ;; Hardware stack levels used: 1
  5648 ;; Hardware stack levels required when called: 3
  5649 ;; This function calls:
  5650 ;;		_d1command
  5651 ;;		_d2command
  5652 ;; This function is called by:
  5653 ;;		_tache1
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text31
  5658   002150                     __ptext31:
  5659                           	callstack 0
  5660   002150                     _clear_text:
  5661                           	callstack 24
  5662                           
  5663                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5664                           
  5665                           ;incstack = 0
  5666   002150  0E00               	movlw	0
  5667   002152  6E05               	movwf	d2command@d2^0,c
  5668   002154  0E24               	movlw	36
  5669   002156  6E06               	movwf	d2command@cmd^0,c
  5670   002158  0E00               	movlw	0
  5671   00215A  ECA8  F00F         	call	_d2command
  5672                           
  5673                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5674   00215E  0E00               	movlw	0
  5675   002160  6E0A               	movwf	(clear_text@add+1)^0,c
  5676   002162  0E00               	movlw	0
  5677   002164  6E09               	movwf	clear_text@add^0,c
  5678   002166                     i2l4237:
  5679                           
  5680                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5681   002166  0EC0               	movlw	192
  5682   002168  6E05               	movwf	d1command@cmd^0,c
  5683   00216A  0E00               	movlw	0
  5684   00216C  EC3B  F010         	call	_d1command
  5685   002170  4A09               	infsnz	clear_text@add^0,f,c
  5686   002172  2A0A               	incf	(clear_text@add+1)^0,f,c
  5687   002174  0E80               	movlw	128
  5688   002176  180A               	xorwf	(clear_text@add+1)^0,w,c
  5689   002178  1009               	iorwf	clear_text@add^0,w,c
  5690   00217A  B4D8               	btfsc	status,2,c
  5691   00217C  0012               	return	
  5692   00217E  D7F3               	goto	i2l4237
  5693   002180                     __end_of_clear_text:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function _clear_line *****************
  5697 ;; Defined at:
  5698 ;;		line 318 in file "afficheur.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  line            1    wreg     unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;  line            1   14[COMRAM] unsigned char 
  5703 ;;  column          1   15[COMRAM] unsigned char 
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;Total ram usage:        2 bytes
  5718 ;; Hardware stack levels used: 1
  5719 ;; Hardware stack levels required when called: 4
  5720 ;; This function calls:
  5721 ;;		_draw_char
  5722 ;;		_goto_lico
  5723 ;; This function is called by:
  5724 ;;		_tache1
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text32
  5729   00228C                     __ptext32:
  5730                           	callstack 0
  5731   00228C                     _clear_line:
  5732                           	callstack 23
  5733                           
  5734                           ;incstack = 0
  5735                           ;clear_line@line stored from wreg
  5736   00228C  6E0F               	movwf	clear_line@line^0,c
  5737                           
  5738                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5739   00228E  0E00               	movlw	0
  5740   002290  6E10               	movwf	clear_line@column^0,c
  5741   002292                     i2l4381:
  5742                           
  5743                           ;afficheur.c: 321: goto_lico(line, column);
  5744   002292  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5745   002296  500F               	movf	clear_line@line^0,w,c
  5746   002298  EC2A  F00F         	call	_goto_lico
  5747                           
  5748                           ;afficheur.c: 322: draw_char(' ');
  5749   00229C  0E20               	movlw	32
  5750   00229E  EC8F  F010         	call	_draw_char
  5751   0022A2  2A10               	incf	clear_line@column^0,f,c
  5752   0022A4  0E27               	movlw	39
  5753   0022A6  6410               	cpfsgt	clear_line@column^0,c
  5754   0022A8  D7F4               	goto	i2l4381
  5755   0022AA  0012               	return	
  5756   0022AC                     __end_of_clear_line:
  5757                           	callstack 0
  5758                           
  5759 ;; *************** function _draw_char *****************
  5760 ;; Defined at:
  5761 ;;		line 228 in file "afficheur.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  dccar           1    wreg     unsigned char 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;  dccar           1    7[COMRAM] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, status,2, status,0, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5779 ;;Total ram usage:        1 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; Hardware stack levels required when called: 3
  5782 ;; This function calls:
  5783 ;;		_d1command
  5784 ;; This function is called by:
  5785 ;;		_tache1
  5786 ;;		_clear_line
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text33
  5791   00211E                     __ptext33:
  5792                           	callstack 0
  5793   00211E                     _draw_char:
  5794                           	callstack 24
  5795                           
  5796                           ;incstack = 0
  5797                           ;draw_char@dccar stored from wreg
  5798   00211E  6E08               	movwf	draw_char@dccar^0,c
  5799                           
  5800                           ;afficheur.c: 230: if (dccar<32)
  5801   002120  0E20               	movlw	32
  5802   002122  6008               	cpfslt	draw_char@dccar^0,c
  5803   002124  D002               	goto	i2l4143
  5804                           
  5805                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5806   002126  0E3F               	movlw	63
  5807   002128  6E08               	movwf	draw_char@dccar^0,c
  5808   00212A                     i2l4143:
  5809                           
  5810                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5811   00212A  0E9F               	movlw	159
  5812   00212C  6408               	cpfsgt	draw_char@dccar^0,c
  5813   00212E  D002               	goto	i2l4147
  5814                           
  5815                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5816   002130  0E3F               	movlw	63
  5817   002132  6E08               	movwf	draw_char@dccar^0,c
  5818   002134                     i2l4147:
  5819                           
  5820                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5821   002134  5008               	movf	draw_char@dccar^0,w,c
  5822   002136  0FE0               	addlw	224
  5823   002138  6E08               	movwf	draw_char@dccar^0,c
  5824                           
  5825                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5826   00213A  D001               	goto	i2l4149
  5827   00213C                     i2l1168:
  5828   00213C  F000               	nop	
  5829   00213E                     i2l4149:
  5830   00213E  0EC0               	movlw	192
  5831   002140  6E05               	movwf	d1command@cmd^0,c
  5832   002142  5008               	movf	draw_char@dccar^0,w,c
  5833   002144  EC3B  F010         	call	_d1command
  5834   002148  0900               	iorlw	0
  5835   00214A  A4D8               	btfss	status,2,c
  5836   00214C  0012               	return	
  5837   00214E  D7F6               	goto	i2l1168
  5838   002150                     __end_of_draw_char:
  5839                           	callstack 0
  5840                           
  5841 ;; *************** function _clear_graphics *****************
  5842 ;; Defined at:
  5843 ;;		line 368 in file "afficheur.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;		None
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  add             2    8[COMRAM] unsigned int 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      void 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0, cstack
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;Total ram usage:        2 bytes
  5862 ;; Hardware stack levels used: 1
  5863 ;; Hardware stack levels required when called: 3
  5864 ;; This function calls:
  5865 ;;		_d1command
  5866 ;;		_d2command
  5867 ;; This function is called by:
  5868 ;;		_tache1
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text34
  5873   002180                     __ptext34:
  5874                           	callstack 0
  5875   002180                     _clear_graphics:
  5876                           	callstack 24
  5877                           
  5878                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5879                           
  5880                           ;incstack = 0
  5881   002180  0E80               	movlw	128
  5882   002182  6E05               	movwf	d2command@d2^0,c
  5883   002184  0E24               	movlw	36
  5884   002186  6E06               	movwf	d2command@cmd^0,c
  5885   002188  0E00               	movlw	0
  5886   00218A  ECA8  F00F         	call	_d2command
  5887                           
  5888                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5889   00218E  0E80               	movlw	128
  5890   002190  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5891   002192  0E00               	movlw	0
  5892   002194  6E09               	movwf	clear_graphics@add^0,c
  5893   002196                     i2l4251:
  5894                           
  5895                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5896   002196  0EC0               	movlw	192
  5897   002198  6E05               	movwf	d1command@cmd^0,c
  5898   00219A  0E00               	movlw	0
  5899   00219C  EC3B  F010         	call	_d1command
  5900   0021A0  4A09               	infsnz	clear_graphics@add^0,f,c
  5901   0021A2  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5902   0021A4  0EF8               	movlw	248
  5903   0021A6  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5904   0021A8  1009               	iorwf	clear_graphics@add^0,w,c
  5905   0021AA  B4D8               	btfsc	status,2,c
  5906   0021AC  0012               	return	
  5907   0021AE  D7F3               	goto	i2l4251
  5908   0021B0                     __end_of_clear_graphics:
  5909                           	callstack 0
  5910                           
  5911 ;; *************** function _charger *****************
  5912 ;; Defined at:
  5913 ;;		line 432 in file "afficheur.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;                  1    wreg      void 
  5920 ;; Registers used:
  5921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;Total ram usage:        0 bytes
  5932 ;; Hardware stack levels used: 1
  5933 ;; Hardware stack levels required when called: 4
  5934 ;; This function calls:
  5935 ;;		_draw_string
  5936 ;;		_goto_lico
  5937 ;; This function is called by:
  5938 ;;		_tache1
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text35
  5943   002394                     __ptext35:
  5944                           	callstack 0
  5945   002394                     _charger:
  5946                           	callstack 23
  5947                           
  5948                           ;afficheur.c: 434: goto_lico(14,0);
  5949                           
  5950                           ;incstack = 0
  5951   002394  0E00               	movlw	0
  5952   002396  6E09               	movwf	goto_lico@colonne^0,c
  5953   002398  0E0E               	movlw	14
  5954   00239A  EC2A  F00F         	call	_goto_lico
  5955                           
  5956                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5957   00239E  0E01               	movlw	low STR_22
  5958   0023A0  6E08               	movwf	draw_string@tableau^0,c
  5959   0023A2  0E10               	movlw	high STR_22
  5960   0023A4  6E09               	movwf	(draw_string@tableau+1)^0,c
  5961   0023A6  EC05  F00E         	call	_draw_string	;wreg free
  5962   0023AA  0012               	return		;funcret
  5963   0023AC                     __end_of_charger:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function _goto_lico *****************
  5967 ;; Defined at:
  5968 ;;		line 295 in file "afficheur.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  ligne           1    wreg     unsigned char 
  5971 ;;  colonne         1    8[COMRAM] unsigned char 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  ligne           1   11[COMRAM] unsigned char 
  5974 ;;  adr             2   12[COMRAM] unsigned int 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5984 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;Total ram usage:        6 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 3
  5991 ;; This function calls:
  5992 ;;		_d2command
  5993 ;; This function is called by:
  5994 ;;		_tache1
  5995 ;;		_clear_line
  5996 ;;		_charger
  5997 ;;		_vide
  5998 ;;		_marche
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text36
  6003   001E54                     __ptext36:
  6004                           	callstack 0
  6005   001E54                     _goto_lico:
  6006                           	callstack 23
  6007                           
  6008                           ;incstack = 0
  6009                           ;goto_lico@ligne stored from wreg
  6010   001E54  6E0C               	movwf	goto_lico@ligne^0,c
  6011                           
  6012                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  6013   001E56  0E7B               	movlw	123
  6014   001E58  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6015   001E5A  0E00               	movlw	0
  6016   001E5C  6E0D               	movwf	goto_lico@adr^0,c
  6017                           
  6018                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  6019   001E5E  0E0F               	movlw	15
  6020   001E60  640C               	cpfsgt	goto_lico@ligne^0,c
  6021   001E62  D002               	goto	i2l4131
  6022   001E64  0E00               	movlw	0
  6023   001E66  6E0C               	movwf	goto_lico@ligne^0,c
  6024   001E68                     i2l4131:
  6025                           
  6026                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  6027   001E68  0E27               	movlw	39
  6028   001E6A  6409               	cpfsgt	goto_lico@colonne^0,c
  6029   001E6C  D002               	goto	i2l4135
  6030   001E6E  0E00               	movlw	0
  6031   001E70  6E09               	movwf	goto_lico@colonne^0,c
  6032   001E72                     i2l4135:
  6033                           
  6034                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  6035   001E72  500C               	movf	goto_lico@ligne^0,w,c
  6036   001E74  0D28               	mullw	40
  6037   001E76  CFF3 F00A          	movff	prodl,??_goto_lico
  6038   001E7A  CFF4 F00B          	movff	prodh,??_goto_lico+1
  6039   001E7E  5009               	movf	goto_lico@colonne^0,w,c
  6040   001E80  260A               	addwf	??_goto_lico^0,f,c
  6041   001E82  0E00               	movlw	0
  6042   001E84  220B               	addwfc	(??_goto_lico+1)^0,f,c
  6043   001E86  500D               	movf	goto_lico@adr^0,w,c
  6044   001E88  240A               	addwf	??_goto_lico^0,w,c
  6045   001E8A  6E0D               	movwf	goto_lico@adr^0,c
  6046   001E8C  500E               	movf	(goto_lico@adr+1)^0,w,c
  6047   001E8E  200B               	addwfc	(??_goto_lico+1)^0,w,c
  6048   001E90  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6049                           
  6050                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  6051   001E92  D001               	goto	i2l4137
  6052   001E94                     i2l1212:
  6053                           
  6054                           ;afficheur.c: 304: __nop();
  6055   001E94  F000               	nop	
  6056   001E96                     i2l4137:
  6057   001E96  500E               	movf	(goto_lico@adr+1)^0,w,c
  6058   001E98  6E05               	movwf	d2command@d2^0,c
  6059   001E9A  0E24               	movlw	36
  6060   001E9C  6E06               	movwf	d2command@cmd^0,c
  6061   001E9E  500D               	movf	goto_lico@adr^0,w,c
  6062   001EA0  ECA8  F00F         	call	_d2command
  6063   001EA4  0900               	iorlw	0
  6064   001EA6  A4D8               	btfss	status,2,c
  6065   001EA8  0012               	return	
  6066   001EAA  D7F4               	goto	i2l1212
  6067   001EAC                     __end_of_goto_lico:
  6068                           	callstack 0
  6069                           
  6070 ;; *************** function _d2command *****************
  6071 ;; Defined at:
  6072 ;;		line 128 in file "afficheur.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  d1              1    wreg     unsigned char 
  6075 ;;  d2              1    4[COMRAM] unsigned char 
  6076 ;;  cmd             1    5[COMRAM] unsigned char 
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;  d1              1    6[COMRAM] unsigned char 
  6079 ;;  res             1    7[COMRAM] unsigned char 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      unsigned char 
  6082 ;; Registers used:
  6083 ;;		wreg, status,2, status,0, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;Total ram usage:        4 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 2
  6096 ;; This function calls:
  6097 ;;		_delai_us_char
  6098 ;;		_wait_status_ok
  6099 ;;		_write_c_aff
  6100 ;;		_write_d_aff
  6101 ;; This function is called by:
  6102 ;;		_initialisation_afficheur
  6103 ;;		_goto_lico
  6104 ;;		_clear_text
  6105 ;;		_clear_graphics
  6106 ;;		_plot1
  6107 ;;		_clear_cgram
  6108 ;;		_plot0
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text37
  6113   001F50                     __ptext37:
  6114                           	callstack 0
  6115   001F50                     _d2command:
  6116                           	callstack 23
  6117                           
  6118                           ;incstack = 0
  6119                           ;d2command@d1 stored from wreg
  6120   001F50  6E07               	movwf	d2command@d1^0,c
  6121                           
  6122                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6123   001F52  0E00               	movlw	0
  6124   001F54  6E08               	movwf	d2command@res^0,c
  6125                           
  6126                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6127   001F56  EC7F  F00F         	call	_wait_status_ok	;wreg free
  6128   001F5A  06E8               	decf	wreg,f,c
  6129   001F5C  A4D8               	btfss	status,2,c
  6130   001F5E  D01E               	goto	i2l4041
  6131                           
  6132                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6133   001F60  0E0C               	movlw	12
  6134   001F62  EC35  F011         	call	_delai_us_char
  6135                           
  6136                           ;afficheur.c: 137: write_d_aff(d1);
  6137   001F66  5007               	movf	d2command@d1^0,w,c
  6138   001F68  EC8C  F011         	call	_write_d_aff
  6139                           
  6140                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6141   001F6C  EC7F  F00F         	call	_wait_status_ok	;wreg free
  6142   001F70  06E8               	decf	wreg,f,c
  6143   001F72  A4D8               	btfss	status,2,c
  6144   001F74  D013               	goto	i2l4041
  6145                           
  6146                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6147   001F76  0E0C               	movlw	12
  6148   001F78  EC35  F011         	call	_delai_us_char
  6149                           
  6150                           ;afficheur.c: 141: write_d_aff(d2);
  6151   001F7C  5005               	movf	d2command@d2^0,w,c
  6152   001F7E  EC8C  F011         	call	_write_d_aff
  6153                           
  6154                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6155   001F82  EC7F  F00F         	call	_wait_status_ok	;wreg free
  6156   001F86  06E8               	decf	wreg,f,c
  6157   001F88  A4D8               	btfss	status,2,c
  6158   001F8A  D008               	goto	i2l4041
  6159                           
  6160                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6161   001F8C  0E0C               	movlw	12
  6162   001F8E  EC35  F011         	call	_delai_us_char
  6163                           
  6164                           ;afficheur.c: 145: write_c_aff(cmd);
  6165   001F92  5006               	movf	d2command@cmd^0,w,c
  6166   001F94  EC99  F011         	call	_write_c_aff
  6167                           
  6168                           ;afficheur.c: 147: res=1;
  6169   001F98  0E01               	movlw	1
  6170   001F9A  6E08               	movwf	d2command@res^0,c
  6171   001F9C                     i2l4041:
  6172                           
  6173                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6174   001F9C  5008               	movf	d2command@res^0,w,c
  6175   001F9E  0012               	return		;funcret
  6176   001FA0                     __end_of_d2command:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _draw_string *****************
  6180 ;; Defined at:
  6181 ;;		line 242 in file "afficheur.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6184 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(8), 
  6185 ;;		 -> STR_23(14), STR_22(29), STR_20(4), STR_19(3), 
  6186 ;;		 -> STR_18(7), STR_17(5), STR_16(12), STR_15(12), 
  6187 ;;		 -> STR_14(6), STR_13(7), STR_12(9), STR_11(21), 
  6188 ;;		 -> STR_10(7), STR_9(10), STR_8(9), STR_7(6), 
  6189 ;;		 -> STR_6(13), STR_5(11), STR_4(7), STR_3(6), 
  6190 ;;		 -> STR_2(6), STR_1(8), RAM(3861), 
  6191 ;; Auto vars:     Size  Location     Type
  6192 ;;		None
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  1    wreg      void 
  6195 ;; Registers used:
  6196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;Total ram usage:        2 bytes
  6207 ;; Hardware stack levels used: 1
  6208 ;; Hardware stack levels required when called: 3
  6209 ;; This function calls:
  6210 ;;		_d1command
  6211 ;; This function is called by:
  6212 ;;		_tache1
  6213 ;;		_charger
  6214 ;;		_vide
  6215 ;;		_marche
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text38
  6220   001C0A                     __ptext38:
  6221                           	callstack 0
  6222   001C0A                     _draw_string:
  6223                           	callstack 23
  6224                           
  6225                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6226                           
  6227                           ;incstack = 0
  6228   001C0A  D01C               	goto	i2l4157
  6229   001C0C                     i2l1176:
  6230                           
  6231                           ;afficheur.c: 247: __nop();
  6232   001C0C  F000               	nop	
  6233   001C0E                     i2l4153:
  6234   001C0E  0EC0               	movlw	192
  6235   001C10  6E05               	movwf	d1command@cmd^0,c
  6236   001C12  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6237   001C16  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6238   001C1A  0E00               	movlw	low (__smallconst shr (0+16))
  6239   001C1C  6EF8               	movwf	tblptru,c
  6240   001C1E  0E0F               	movlw	(high __ramtop+-1)
  6241   001C20  64F7               	cpfsgt	tblptrh,c
  6242   001C22  D003               	bra	i2u172_47
  6243   001C24  0008               	tblrd		*
  6244   001C26  50F5               	movf	tablat,w,c
  6245   001C28  D005               	bra	i2u172_40
  6246   001C2A                     i2u172_47:
  6247   001C2A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6248   001C2E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6249   001C32  50EF               	movf	indf0,w,c
  6250   001C34                     i2u172_40:
  6251   001C34  0FE0               	addlw	224
  6252   001C36  EC3B  F010         	call	_d1command
  6253   001C3A  0900               	iorlw	0
  6254   001C3C  B4D8               	btfsc	status,2,c
  6255   001C3E  D7E6               	goto	i2l1176
  6256                           
  6257                           ;afficheur.c: 248: tableau++;
  6258   001C40  4A08               	infsnz	draw_string@tableau^0,f,c
  6259   001C42  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6260   001C44                     i2l4157:
  6261   001C44  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6262   001C48  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6263   001C4C  0E00               	movlw	low (__smallconst shr (0+16))
  6264   001C4E  6EF8               	movwf	tblptru,c
  6265   001C50  0E0F               	movlw	(high __ramtop+-1)
  6266   001C52  64F7               	cpfsgt	tblptrh,c
  6267   001C54  D003               	bra	i2u174_47
  6268   001C56  0008               	tblrd		*
  6269   001C58  50F5               	movf	tablat,w,c
  6270   001C5A  D005               	bra	i2u174_40
  6271   001C5C                     i2u174_47:
  6272   001C5C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6273   001C60  CFF7 FFEA          	movff	tblptrh,fsr0h
  6274   001C64  50EF               	movf	indf0,w,c
  6275   001C66                     i2u174_40:
  6276   001C66  0900               	iorlw	0
  6277   001C68  B4D8               	btfsc	status,2,c
  6278   001C6A  0012               	return	
  6279   001C6C  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6280   001C70  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6281   001C74  0E00               	movlw	low (__smallconst shr (0+16))
  6282   001C76  6EF8               	movwf	tblptru,c
  6283   001C78  0E0F               	movlw	(high __ramtop+-1)
  6284   001C7A  64F7               	cpfsgt	tblptrh,c
  6285   001C7C  D003               	bra	i2u176_47
  6286   001C7E  0008               	tblrd		*
  6287   001C80  50F5               	movf	tablat,w,c
  6288   001C82  D005               	bra	i2u176_40
  6289   001C84                     i2u176_47:
  6290   001C84  CFF6 FFE9          	movff	tblptrl,fsr0l
  6291   001C88  CFF7 FFEA          	movff	tblptrh,fsr0h
  6292   001C8C  50EF               	movf	indf0,w,c
  6293   001C8E                     i2u176_40:
  6294   001C8E  0900               	iorlw	0
  6295   001C90  B4D8               	btfsc	status,2,c
  6296   001C92  0012               	return	
  6297   001C94  D7BC               	goto	i2l4153
  6298   001C96                     __end_of_draw_string:
  6299                           	callstack 0
  6300                           
  6301 ;; *************** function _d1command *****************
  6302 ;; Defined at:
  6303 ;;		line 106 in file "afficheur.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  d1              1    wreg     unsigned char 
  6306 ;;  cmd             1    4[COMRAM] unsigned char 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  d1              1    5[COMRAM] unsigned char 
  6309 ;;  res             1    6[COMRAM] unsigned char 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      unsigned char 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6319 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;Total ram usage:        3 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; Hardware stack levels required when called: 2
  6326 ;; This function calls:
  6327 ;;		_delai_us_char
  6328 ;;		_wait_status_ok
  6329 ;;		_write_c_aff
  6330 ;;		_write_d_aff
  6331 ;; This function is called by:
  6332 ;;		_initialisation_afficheur
  6333 ;;		_draw_char
  6334 ;;		_draw_string
  6335 ;;		_draw_hex8
  6336 ;;		_draw_dec8
  6337 ;;		_clear_text
  6338 ;;		_clear_graphics
  6339 ;;		_clear_cgram
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text39
  6344   002076                     __ptext39:
  6345                           	callstack 0
  6346   002076                     _d1command:
  6347                           	callstack 23
  6348                           
  6349                           ;incstack = 0
  6350                           ;d1command@d1 stored from wreg
  6351   002076  6E06               	movwf	d1command@d1^0,c
  6352                           
  6353                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6354   002078  0E00               	movlw	0
  6355   00207A  6E07               	movwf	d1command@res^0,c
  6356                           
  6357                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6358   00207C  EC7F  F00F         	call	_wait_status_ok	;wreg free
  6359   002080  06E8               	decf	wreg,f,c
  6360   002082  A4D8               	btfss	status,2,c
  6361   002084  D013               	goto	i2l4015
  6362                           
  6363                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6364   002086  0E0C               	movlw	12
  6365   002088  EC35  F011         	call	_delai_us_char
  6366                           
  6367                           ;afficheur.c: 115: write_d_aff(d1);
  6368   00208C  5006               	movf	d1command@d1^0,w,c
  6369   00208E  EC8C  F011         	call	_write_d_aff
  6370                           
  6371                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6372   002092  EC7F  F00F         	call	_wait_status_ok	;wreg free
  6373   002096  06E8               	decf	wreg,f,c
  6374   002098  A4D8               	btfss	status,2,c
  6375   00209A  D008               	goto	i2l4015
  6376                           
  6377                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6378   00209C  0E0C               	movlw	12
  6379   00209E  EC35  F011         	call	_delai_us_char
  6380                           
  6381                           ;afficheur.c: 119: write_c_aff(cmd);
  6382   0020A2  5005               	movf	d1command@cmd^0,w,c
  6383   0020A4  EC99  F011         	call	_write_c_aff
  6384                           
  6385                           ;afficheur.c: 121: res=1;
  6386   0020A8  0E01               	movlw	1
  6387   0020AA  6E07               	movwf	d1command@res^0,c
  6388   0020AC                     i2l4015:
  6389                           
  6390                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6391   0020AC  5007               	movf	d1command@res^0,w,c
  6392   0020AE  0012               	return		;funcret
  6393   0020B0                     __end_of_d1command:
  6394                           	callstack 0
  6395                           
  6396 ;; *************** function _write_d_aff *****************
  6397 ;; Defined at:
  6398 ;;		line 4 in file "afficheur.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  data            1    wreg     unsigned char 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  data            1    0[COMRAM] unsigned char 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;Total ram usage:        1 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_d1command
  6422 ;;		_d2command
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text40
  6427   002318                     __ptext40:
  6428                           	callstack 0
  6429   002318                     _write_d_aff:
  6430                           	callstack 24
  6431                           
  6432                           ;incstack = 0
  6433                           ;write_d_aff@data stored from wreg
  6434   002318  6E01               	movwf	write_d_aff@data^0,c
  6435                           
  6436                           ;afficheur.c: 6: LATH=data;
  6437   00231A  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6438                           
  6439                           ;afficheur.c: 7: TRISH=0x00;
  6440   00231E  0E00               	movlw	0
  6441   002320  6E99               	movwf	153,c	;volatile
  6442                           
  6443                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6444   002322  9091               	bcf	145,0,c	;volatile
  6445                           
  6446                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6447   002324  9691               	bcf	145,3,c	;volatile
  6448                           
  6449                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6450   002326  9491               	bcf	145,2,c	;volatile
  6451                           
  6452                           ;afficheur.c: 11: __nop();
  6453   002328  F000               	nop	
  6454                           
  6455                           ;afficheur.c: 12: __nop();
  6456   00232A  F000               	nop	
  6457                           
  6458                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6459   00232C  8491               	bsf	145,2,c	;volatile
  6460                           
  6461                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6462   00232E  8691               	bsf	145,3,c	;volatile
  6463   002330  0012               	return		;funcret
  6464   002332                     __end_of_write_d_aff:
  6465                           	callstack 0
  6466                           
  6467 ;; *************** function _write_c_aff *****************
  6468 ;; Defined at:
  6469 ;;		line 17 in file "afficheur.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  command         1    wreg     unsigned char 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  command         1    0[COMRAM] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      void 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6486 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6487 ;;Total ram usage:        1 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; This function calls:
  6490 ;;		Nothing
  6491 ;; This function is called by:
  6492 ;;		_command
  6493 ;;		_d1command
  6494 ;;		_d2command
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text41
  6499   002332                     __ptext41:
  6500                           	callstack 0
  6501   002332                     _write_c_aff:
  6502                           	callstack 24
  6503                           
  6504                           ;incstack = 0
  6505                           ;write_c_aff@command stored from wreg
  6506   002332  6E01               	movwf	write_c_aff@command^0,c
  6507                           
  6508                           ;afficheur.c: 19: LATH=command;
  6509   002334  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6510                           
  6511                           ;afficheur.c: 20: TRISH=0x00;
  6512   002338  0E00               	movlw	0
  6513   00233A  6E99               	movwf	153,c	;volatile
  6514                           
  6515                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6516   00233C  8091               	bsf	145,0,c	;volatile
  6517                           
  6518                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6519   00233E  9691               	bcf	145,3,c	;volatile
  6520                           
  6521                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6522   002340  9491               	bcf	145,2,c	;volatile
  6523                           
  6524                           ;afficheur.c: 24: __nop();
  6525   002342  F000               	nop	
  6526                           
  6527                           ;afficheur.c: 25: __nop();
  6528   002344  F000               	nop	
  6529                           
  6530                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6531   002346  8491               	bsf	145,2,c	;volatile
  6532                           
  6533                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6534   002348  8691               	bsf	145,3,c	;volatile
  6535   00234A  0012               	return		;funcret
  6536   00234C                     __end_of_write_c_aff:
  6537                           	callstack 0
  6538                           
  6539 ;; *************** function _wait_status_ok *****************
  6540 ;; Defined at:
  6541 ;;		line 53 in file "afficheur.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;		None
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;  res             1    3[COMRAM] unsigned char 
  6546 ;;  status          1    2[COMRAM] unsigned char 
  6547 ;;  err             1    1[COMRAM] unsigned char 
  6548 ;; Return value:  Size  Location     Type
  6549 ;;                  1    wreg      unsigned char 
  6550 ;; Registers used:
  6551 ;;		wreg, status,2, status,0, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;Total ram usage:        3 bytes
  6562 ;; Hardware stack levels used: 1
  6563 ;; Hardware stack levels required when called: 1
  6564 ;; This function calls:
  6565 ;;		_delai_us_char
  6566 ;; This function is called by:
  6567 ;;		_command
  6568 ;;		_d1command
  6569 ;;		_d2command
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text42
  6574   001EFE                     __ptext42:
  6575                           	callstack 0
  6576   001EFE                     _wait_status_ok:
  6577                           	callstack 23
  6578                           
  6579                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6580                           
  6581                           ;incstack = 0
  6582   001EFE  0E00               	movlw	0
  6583   001F00  6E02               	movwf	wait_status_ok@err^0,c
  6584                           
  6585                           ;afficheur.c: 58: res=2;
  6586   001F02  0E02               	movlw	2
  6587   001F04  D01E               	goto	L7
  6588   001F06                     i2l1126:
  6589                           
  6590                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6591   001F06  6899               	setf	153,c	;volatile
  6592                           
  6593                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6594   001F08  8091               	bsf	145,0,c	;volatile
  6595                           
  6596                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6597   001F0A  9691               	bcf	145,3,c	;volatile
  6598                           
  6599                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6600   001F0C  9291               	bcf	145,1,c	;volatile
  6601                           
  6602                           ;afficheur.c: 65: __nop();
  6603   001F0E  F000               	nop	
  6604                           
  6605                           ;afficheur.c: 66: status=PORTH;
  6606   001F10  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6607                           
  6608                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6609   001F14  8291               	bsf	145,1,c	;volatile
  6610                           
  6611                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6612   001F16  8691               	bsf	145,3,c	;volatile
  6613                           
  6614                           ;afficheur.c: 70: status=(status&0x03);
  6615   001F18  5003               	movf	wait_status_ok@status^0,w,c
  6616   001F1A  0B03               	andlw	3
  6617   001F1C  6E03               	movwf	wait_status_ok@status^0,c
  6618                           
  6619                           ;afficheur.c: 71: if (status!=0x03)
  6620   001F1E  0E03               	movlw	3
  6621   001F20  1803               	xorwf	wait_status_ok@status^0,w,c
  6622   001F22  B4D8               	btfsc	status,2,c
  6623   001F24  D00D               	goto	i2l2451
  6624                           
  6625                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6626   001F26  2A02               	incf	wait_status_ok@err^0,f,c
  6627                           
  6628                           ;afficheur.c: 74: delai_us_char(12);
  6629   001F28  0E0C               	movlw	12
  6630   001F2A  EC35  F011         	call	_delai_us_char
  6631                           
  6632                           ;afficheur.c: 75: if (err>=250)
  6633   001F2E  0EF9               	movlw	249
  6634   001F30  6402               	cpfsgt	wait_status_ok@err^0,c
  6635   001F32  D008               	goto	i2l2453
  6636                           
  6637                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6638   001F34  9EF2               	bcf	242,7,c	;volatile
  6639                           
  6640                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6641   001F36  948B               	bcf	139,2,c	;volatile
  6642   001F38  828B               	bsf	139,1,c	;volatile
  6643   001F3A  808F               	bsf	143,0,c	;volatile
  6644                           
  6645                           ;afficheur.c: 79: res=0;
  6646   001F3C  0E00               	movlw	0
  6647   001F3E  D001               	goto	L7
  6648   001F40                     i2l2451:
  6649                           
  6650                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6651   001F40  0E01               	movlw	1
  6652   001F42                     L7:
  6653   001F42  6E04               	movwf	wait_status_ok@res^0,c
  6654   001F44                     i2l2453:
  6655   001F44  0E02               	movlw	2
  6656   001F46  1804               	xorwf	wait_status_ok@res^0,w,c
  6657   001F48  B4D8               	btfsc	status,2,c
  6658   001F4A  D7DD               	goto	i2l1126
  6659                           
  6660                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6661   001F4C  5004               	movf	wait_status_ok@res^0,w,c
  6662   001F4E  0012               	return		;funcret
  6663   001F50                     __end_of_wait_status_ok:
  6664                           	callstack 0
  6665                           
  6666 ;; *************** function _delai_us_char *****************
  6667 ;; Defined at:
  6668 ;;		line 154 in file "afficheur.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  ucdelai         1    wreg     unsigned char 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;Total ram usage:        1 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_wait_status_ok
  6692 ;;		_command
  6693 ;;		_d1command
  6694 ;;		_d2command
  6695 ;;		_initialisation_afficheur
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           	psect	text43
  6700   00226A                     __ptext43:
  6701                           	callstack 0
  6702   00226A                     _delai_us_char:
  6703                           	callstack 23
  6704                           
  6705                           ;incstack = 0
  6706                           ;delai_us_char@ucdelai stored from wreg
  6707   00226A  6E01               	movwf	delai_us_char@ucdelai^0,c
  6708                           
  6709                           ;afficheur.c: 157: while (ucdelai>0)
  6710   00226C  D00B               	goto	i2l2399
  6711   00226E                     i2l1150:
  6712                           
  6713                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6714   00226E  F000               	nop	
  6715   002270  F000               	nop	
  6716   002272  F000               	nop	
  6717   002274  F000               	nop	
  6718   002276  F000               	nop	
  6719   002278  F000               	nop	
  6720   00227A  F000               	nop	
  6721   00227C  F000               	nop	
  6722   00227E  F000               	nop	
  6723   002280  F000               	nop	
  6724                           
  6725                           ;afficheur.c: 160: ucdelai--;
  6726   002282  0601               	decf	delai_us_char@ucdelai^0,f,c
  6727   002284                     i2l2399:
  6728   002284  5001               	movf	delai_us_char@ucdelai^0,w,c
  6729   002286  B4D8               	btfsc	status,2,c
  6730   002288  0012               	return	
  6731   00228A  D7F1               	goto	i2l1150
  6732   00228C                     __end_of_delai_us_char:
  6733                           	callstack 0
  6734                           
  6735 ;; *************** function _Conversion *****************
  6736 ;; Defined at:
  6737 ;;		line 493 in file "afficheur.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;  a               2   14[COMRAM] unsigned int 
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;  valeur_conve    2   18[COMRAM] int 
  6742 ;;  valeur_lue      2   16[COMRAM] int 
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  2   14[COMRAM] int 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6756 ;;Total ram usage:        6 bytes
  6757 ;; Hardware stack levels used: 1
  6758 ;; Hardware stack levels required when called: 1
  6759 ;; This function calls:
  6760 ;;		___awdiv
  6761 ;;		___wmul
  6762 ;; This function is called by:
  6763 ;;		_tache1
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text44
  6768   002036                     __ptext44:
  6769                           	callstack 0
  6770   002036                     _Conversion:
  6771                           	callstack 26
  6772                           
  6773                           ;afficheur.c: 494: int valeur_lue = a;
  6774                           
  6775                           ;incstack = 0
  6776   002036  C00F  F011         	movff	Conversion@a,Conversion@valeur_lue
  6777   00203A  C010  F012         	movff	Conversion@a+1,Conversion@valeur_lue+1
  6778                           
  6779                           ;afficheur.c: 495: int valeur_convertie = (valeur_lue * 100) / 255;
  6780   00203E  C011  F001         	movff	Conversion@valeur_lue,___wmul@multiplier
  6781   002042  C012  F002         	movff	Conversion@valeur_lue+1,___wmul@multiplier+1
  6782   002046  0E00               	movlw	0
  6783   002048  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6784   00204A  0E64               	movlw	100
  6785   00204C  6E03               	movwf	___wmul@multiplicand^0,c
  6786   00204E  ECEE  F010         	call	___wmul	;wreg free
  6787   002052  C001  F007         	movff	?___wmul,___awdiv@dividend
  6788   002056  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  6789   00205A  0E00               	movlw	0
  6790   00205C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6791   00205E  6809               	setf	___awdiv@divisor^0,c
  6792   002060  EC4B  F00E         	call	___awdiv	;wreg free
  6793   002064  C007  F013         	movff	?___awdiv,Conversion@valeur_convertie
  6794   002068  C008  F014         	movff	?___awdiv+1,Conversion@valeur_convertie+1
  6795                           
  6796                           ;afficheur.c: 497: return valeur_convertie;
  6797   00206C  C013  F00F         	movff	Conversion@valeur_convertie,?_Conversion
  6798   002070  C014  F010         	movff	Conversion@valeur_convertie+1,?_Conversion+1
  6799   002074  0012               	return		;funcret
  6800   002076                     __end_of_Conversion:
  6801                           	callstack 0
  6802                           
  6803 ;; *************** function ___wmul *****************
  6804 ;; Defined at:
  6805 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  multiplier      2    0[COMRAM] unsigned int 
  6808 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  product         2    4[COMRAM] unsigned int 
  6811 ;; Return value:  Size  Location     Type
  6812 ;;                  2    0[COMRAM] unsigned int 
  6813 ;; Registers used:
  6814 ;;		wreg, status,2, status,0, prodl, prodh
  6815 ;; Tracked objects:
  6816 ;;		On entry : 0/0
  6817 ;;		On exit  : 0/0
  6818 ;;		Unchanged: 0/0
  6819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6823 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6824 ;;Total ram usage:        6 bytes
  6825 ;; Hardware stack levels used: 1
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_Conversion
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           	psect	text45
  6834   0021DC                     __ptext45:
  6835                           	callstack 0
  6836   0021DC                     ___wmul:
  6837                           	callstack 26
  6838                           
  6839                           ;incstack = 0
  6840   0021DC  5001               	movf	___wmul@multiplier^0,w,c
  6841   0021DE  0203               	mulwf	___wmul@multiplicand^0,c
  6842   0021E0  CFF3 F005          	movff	prodl,___wmul@product
  6843   0021E4  CFF4 F006          	movff	prodh,___wmul@product+1
  6844   0021E8  5001               	movf	___wmul@multiplier^0,w,c
  6845   0021EA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6846   0021EC  50F3               	movf	243,w,c
  6847   0021EE  2606               	addwf	(___wmul@product+1)^0,f,c
  6848   0021F0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6849   0021F2  0203               	mulwf	___wmul@multiplicand^0,c
  6850   0021F4  50F3               	movf	243,w,c
  6851   0021F6  2606               	addwf	(___wmul@product+1)^0,f,c
  6852   0021F8  C005  F001         	movff	___wmul@product,?___wmul
  6853   0021FC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6854   002200  0012               	return		;funcret
  6855   002202                     __end_of___wmul:
  6856                           	callstack 0
  6857                           
  6858 ;; *************** function ___awdiv *****************
  6859 ;; Defined at:
  6860 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;  dividend        2    6[COMRAM] int 
  6863 ;;  divisor         2    8[COMRAM] int 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  quotient        2   12[COMRAM] int 
  6866 ;;  sign            1   11[COMRAM] unsigned char 
  6867 ;;  counter         1   10[COMRAM] unsigned char 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  2    6[COMRAM] int 
  6870 ;; Registers used:
  6871 ;;		wreg, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6878 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6880 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;Total ram usage:        8 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_draw_dec8
  6887 ;;		_plot1
  6888 ;;		_Conversion
  6889 ;;		_plot0
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text46
  6894   001C96                     __ptext46:
  6895                           	callstack 0
  6896   001C96                     ___awdiv:
  6897                           	callstack 26
  6898                           
  6899                           ;incstack = 0
  6900   001C96  0E00               	movlw	0
  6901   001C98  6E0C               	movwf	___awdiv@sign^0,c
  6902   001C9A  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6903   001C9C  D006               	goto	i2l4053
  6904   001C9E  6C09               	negf	___awdiv@divisor^0,c
  6905   001CA0  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  6906   001CA2  B0D8               	btfsc	status,0,c
  6907   001CA4  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  6908   001CA6  0E01               	movlw	1
  6909   001CA8  6E0C               	movwf	___awdiv@sign^0,c
  6910   001CAA                     i2l4053:
  6911   001CAA  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  6912   001CAC  D006               	goto	i2l4059
  6913   001CAE  6C07               	negf	___awdiv@dividend^0,c
  6914   001CB0  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  6915   001CB2  B0D8               	btfsc	status,0,c
  6916   001CB4  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  6917   001CB6  0E01               	movlw	1
  6918   001CB8  1A0C               	xorwf	___awdiv@sign^0,f,c
  6919   001CBA                     i2l4059:
  6920   001CBA  0E00               	movlw	0
  6921   001CBC  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  6922   001CBE  0E00               	movlw	0
  6923   001CC0  6E0D               	movwf	___awdiv@quotient^0,c
  6924   001CC2  5009               	movf	___awdiv@divisor^0,w,c
  6925   001CC4  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  6926   001CC6  B4D8               	btfsc	status,2,c
  6927   001CC8  D01C               	goto	i2l4081
  6928   001CCA  0E01               	movlw	1
  6929   001CCC  6E0B               	movwf	___awdiv@counter^0,c
  6930   001CCE  D004               	goto	i2l4067
  6931   001CD0                     i2l4065:
  6932   001CD0  90D8               	bcf	status,0,c
  6933   001CD2  3609               	rlcf	___awdiv@divisor^0,f,c
  6934   001CD4  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  6935   001CD6  2A0B               	incf	___awdiv@counter^0,f,c
  6936   001CD8                     i2l4067:
  6937   001CD8  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6938   001CDA  D7FA               	goto	i2l4065
  6939   001CDC                     i2u157_40:
  6940   001CDC  90D8               	bcf	status,0,c
  6941   001CDE  360D               	rlcf	___awdiv@quotient^0,f,c
  6942   001CE0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  6943   001CE2  5009               	movf	___awdiv@divisor^0,w,c
  6944   001CE4  5C07               	subwf	___awdiv@dividend^0,w,c
  6945   001CE6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6946   001CE8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  6947   001CEA  A0D8               	btfss	status,0,c
  6948   001CEC  D005               	goto	i2l4077
  6949   001CEE  5009               	movf	___awdiv@divisor^0,w,c
  6950   001CF0  5E07               	subwf	___awdiv@dividend^0,f,c
  6951   001CF2  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6952   001CF4  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  6953   001CF6  800D               	bsf	___awdiv@quotient^0,0,c
  6954   001CF8                     i2l4077:
  6955   001CF8  90D8               	bcf	status,0,c
  6956   001CFA  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  6957   001CFC  3209               	rrcf	___awdiv@divisor^0,f,c
  6958   001CFE  2E0B               	decfsz	___awdiv@counter^0,f,c
  6959   001D00  D7ED               	goto	i2u157_40
  6960   001D02                     i2l4081:
  6961   001D02  500C               	movf	___awdiv@sign^0,w,c
  6962   001D04  B4D8               	btfsc	status,2,c
  6963   001D06  D004               	goto	i2l4085
  6964   001D08  6C0D               	negf	___awdiv@quotient^0,c
  6965   001D0A  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  6966   001D0C  B0D8               	btfsc	status,0,c
  6967   001D0E  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  6968   001D10                     i2l4085:
  6969   001D10  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6970   001D14  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6971   001D18  0012               	return		;funcret
  6972   001D1A                     __end_of___awdiv:
  6973                           	callstack 0
  6974                           
  6975                           	psect	text47
  6976   000000                     __ptext47:
  6977                           	callstack 0
  6978                           
  6979                           	psect	rparam
  6980   000000                     
  6981                           	psect	temp
  6982   000029                     btemp:
  6983                           	callstack 0
  6984   000029                     	ds	12
  6985   000000                     wtemp0	set	btemp
  6986   000000                     wtemp1	set	btemp+2
  6987   000000                     wtemp2	set	btemp+4
  6988   000000                     wtemp3	set	btemp+6
  6989   000000                     wtemp4	set	btemp+8
  6990   000000                     wtemp5	set	btemp+10
  6991   000000                     wtemp8	set	btemp+1
  6992   000000                     ttemp0	set	btemp
  6993   000000                     ttemp1	set	btemp+3
  6994   000000                     ttemp2	set	btemp+6
  6995   000000                     ttemp3	set	btemp+9
  6996   000000                     ttemp5	set	btemp+1
  6997   000000                     ttemp6	set	btemp+4
  6998   000000                     ttemp7	set	btemp+8
  6999   000000                     ltemp0	set	btemp
  7000   000000                     ltemp1	set	btemp+4
  7001   000000                     ltemp2	set	btemp+8
  7002   000000                     lltemp0	set	btemp
  7003                           
  7004                           	psect	idloc
  7005                           
  7006                           ;Config register IDLOC0 @ 0x200000
  7007                           ;	unspecified, using default values
  7008   200000                     	org	2097152
  7009   200000  FF                 	db	255
  7010                           
  7011                           ;Config register IDLOC1 @ 0x200001
  7012                           ;	unspecified, using default values
  7013   200001                     	org	2097153
  7014   200001  FF                 	db	255
  7015                           
  7016                           ;Config register IDLOC2 @ 0x200002
  7017                           ;	unspecified, using default values
  7018   200002                     	org	2097154
  7019   200002  FF                 	db	255
  7020                           
  7021                           ;Config register IDLOC3 @ 0x200003
  7022                           ;	unspecified, using default values
  7023   200003                     	org	2097155
  7024   200003  FF                 	db	255
  7025                           
  7026                           ;Config register IDLOC4 @ 0x200004
  7027                           ;	unspecified, using default values
  7028   200004                     	org	2097156
  7029   200004  FF                 	db	255
  7030                           
  7031                           ;Config register IDLOC5 @ 0x200005
  7032                           ;	unspecified, using default values
  7033   200005                     	org	2097157
  7034   200005  FF                 	db	255
  7035                           
  7036                           ;Config register IDLOC6 @ 0x200006
  7037                           ;	unspecified, using default values
  7038   200006                     	org	2097158
  7039   200006  FF                 	db	255
  7040                           
  7041                           ;Config register IDLOC7 @ 0x200007
  7042                           ;	unspecified, using default values
  7043   200007                     	org	2097159
  7044   200007  FF                 	db	255
  7045                           
  7046                           	psect	config
  7047                           
  7048                           ;Config register CONFIG1L @ 0x300000
  7049                           ;	VREG Sleep Enable bit
  7050                           ;	RETEN = ON, Enabled
  7051                           ;	LF-INTOSC Low-power Enable bit
  7052                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  7053                           ;	SOSC Power Selection and mode Configuration bits
  7054                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  7055                           ;	Extended Instruction Set
  7056                           ;	XINST = OFF, Disabled
  7057   300000                     	org	3145728
  7058   300000  15                 	db	21
  7059                           
  7060                           ;Config register CONFIG1H @ 0x300001
  7061                           ;	Oscillator
  7062                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  7063                           ;	PLL x4 Enable bit
  7064                           ;	PLLCFG = ON, Enabled
  7065                           ;	Fail-Safe Clock Monitor
  7066                           ;	FCMEN = OFF, Disabled
  7067                           ;	Internal External Oscillator Switch Over Mode
  7068                           ;	IESO = OFF, Disabled
  7069   300001                     	org	3145729
  7070   300001  13                 	db	19
  7071                           
  7072                           ;Config register CONFIG2L @ 0x300002
  7073                           ;	Power Up Timer
  7074                           ;	PWRTEN = OFF, Disabled
  7075                           ;	Brown Out Detect
  7076                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  7077                           ;	Brown-out Reset Voltage bits
  7078                           ;	BORV = 0, 3.0V
  7079                           ;	BORMV Power level
  7080                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  7081   300002                     	org	3145730
  7082   300002  61                 	db	97
  7083                           
  7084                           ;Config register CONFIG2H @ 0x300003
  7085                           ;	Watchdog Timer
  7086                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  7087                           ;	Watchdog Postscaler
  7088                           ;	WDTPS = 1, 1:1
  7089   300003                     	org	3145731
  7090   300003  00                 	db	0
  7091                           
  7092                           ;Config register CONFIG3L @ 0x300004
  7093                           ;	RTCC Clock Select
  7094                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  7095                           ;	External Address Shift bit
  7096                           ;	EASHFT = OFF, Address Shifting disabled
  7097                           ;	Address Bus Width Select bits
  7098                           ;	ABW = MM, 8-bit address bus
  7099                           ;	Data Bus Width
  7100                           ;	BW = 8, 8-bit external bus mode
  7101                           ;	External Bus Wait
  7102                           ;	WAIT = ON, Enabled
  7103   300004                     	org	3145732
  7104   300004  30                 	db	48
  7105                           
  7106                           ;Config register CONFIG3H @ 0x300005
  7107                           ;	CCP2 Mux
  7108                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  7109                           ;	ECCP Mux
  7110                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  7111                           ;	MSSP address masking
  7112                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  7113                           ;	Master Clear Enable
  7114                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  7115   300005                     	org	3145733
  7116   300005  80                 	db	128
  7117                           
  7118                           ;Config register CONFIG4L @ 0x300006
  7119                           ;	Stack Overflow Reset
  7120                           ;	STVREN = ON, Enabled
  7121                           ;	Boot Block Size
  7122                           ;	BBSIZ = BB1K, 1K word Boot Block size
  7123                           ;	Background Debug
  7124                           ;	DEBUG = OFF, Disabled
  7125   300006                     	org	3145734
  7126   300006  81                 	db	129
  7127                           
  7128                           ; Padding undefined space
  7129   300007                     	org	3145735
  7130   300007  FF                 	db	255
  7131                           
  7132                           ;Config register CONFIG5L @ 0x300008
  7133                           ;	Code Protect 00800-03FFF
  7134                           ;	CP0 = OFF, Disabled
  7135                           ;	Code Protect 04000-07FFF
  7136                           ;	CP1 = OFF, Disabled
  7137                           ;	Code Protect 08000-0BFFF
  7138                           ;	CP2 = OFF, Disabled
  7139                           ;	Code Protect 0C000-0FFFF
  7140                           ;	CP3 = OFF, Disabled
  7141                           ;	Code Protect 10000-13FFF
  7142                           ;	CP4 = OFF, Disabled
  7143                           ;	Code Protect 14000-17FFF
  7144                           ;	CP5 = OFF, Disabled
  7145                           ;	Code Protect 18000-1BFFF
  7146                           ;	CP6 = OFF, Disabled
  7147                           ;	Code Protect 1C000-1FFFF
  7148                           ;	CP7 = OFF, Disabled
  7149   300008                     	org	3145736
  7150   300008  FF                 	db	255
  7151                           
  7152                           ;Config register CONFIG5H @ 0x300009
  7153                           ;	Code Protect Boot
  7154                           ;	CPB = OFF, Disabled
  7155                           ;	Data EE Read Protect
  7156                           ;	CPD = OFF, Disabled
  7157   300009                     	org	3145737
  7158   300009  C0                 	db	192
  7159                           
  7160                           ;Config register CONFIG6L @ 0x30000A
  7161                           ;	Table Write Protect 00800-03FFF
  7162                           ;	WRT0 = OFF, Disabled
  7163                           ;	Table Write Protect 04000-07FFF
  7164                           ;	WRT1 = OFF, Disabled
  7165                           ;	Table Write Protect 08000-0BFFF
  7166                           ;	WRT2 = OFF, Disabled
  7167                           ;	Table Write Protect 0C000-0FFFF
  7168                           ;	WRT3 = OFF, Disabled
  7169                           ;	Table Write Protect 10000-13FFF
  7170                           ;	WRT4 = OFF, Disabled
  7171                           ;	Table Write Protect 14000-17FFF
  7172                           ;	WRT5 = OFF, Disabled
  7173                           ;	Table Write Protect 18000-1BFFF
  7174                           ;	WRT6 = OFF, Disabled
  7175                           ;	Table Write Protect 1C000-1FFFF
  7176                           ;	WRT7 = OFF, Disabled
  7177   30000A                     	org	3145738
  7178   30000A  FF                 	db	255
  7179                           
  7180                           ;Config register CONFIG6H @ 0x30000B
  7181                           ;	Config. Write Protect
  7182                           ;	WRTC = OFF, Disabled
  7183                           ;	Table Write Protect Boot
  7184                           ;	WRTB = OFF, Disabled
  7185                           ;	Data EE Write Protect
  7186                           ;	WRTD = OFF, Disabled
  7187   30000B                     	org	3145739
  7188   30000B  E0                 	db	224
  7189                           
  7190                           ;Config register CONFIG7L @ 0x30000C
  7191                           ;	Table Read Protect 00800-03FFF
  7192                           ;	EBRT0 = OFF, Disabled
  7193                           ;	Table Read Protect 04000-07FFF
  7194                           ;	EBRT1 = OFF, Disabled
  7195                           ;	Table Read Protect 08000-0BFFF
  7196                           ;	EBRT2 = OFF, Disabled
  7197                           ;	Table Read Protect 0C000-0FFFF
  7198                           ;	EBRT3 = OFF, Disabled
  7199                           ;	Table Read Protect 10000-13FFF
  7200                           ;	EBRT4 = OFF, Disabled
  7201                           ;	Table Read Protect 14000-17FFF
  7202                           ;	EBRT5 = OFF, Disabled
  7203                           ;	Table Read Protect 18000-1BFFF
  7204                           ;	EBRT6 = OFF, Disabled
  7205                           ;	Table Read Protect 1C000-1FFFF
  7206                           ;	EBRT7 = OFF, Disabled
  7207   30000C                     	org	3145740
  7208   30000C  FF                 	db	255
  7209                           
  7210                           ;Config register CONFIG7H @ 0x30000D
  7211                           ;	Table Read Protect Boot
  7212                           ;	EBRTB = OFF, Disabled
  7213   30000D                     	org	3145741
  7214   30000D  40                 	db	64
  7215                           tosu	equ	0xFFF
  7216                           tosh	equ	0xFFE
  7217                           tosl	equ	0xFFD
  7218                           stkptr	equ	0xFFC
  7219                           pclatu	equ	0xFFB
  7220                           pclath	equ	0xFFA
  7221                           pcl	equ	0xFF9
  7222                           tblptru	equ	0xFF8
  7223                           tblptrh	equ	0xFF7
  7224                           tblptrl	equ	0xFF6
  7225                           tablat	equ	0xFF5
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           indf0	equ	0xFEF
  7229                           postinc0	equ	0xFEE
  7230                           postdec0	equ	0xFED
  7231                           preinc0	equ	0xFEC
  7232                           plusw0	equ	0xFEB
  7233                           fsr0h	equ	0xFEA
  7234                           fsr0l	equ	0xFE9
  7235                           wreg	equ	0xFE8
  7236                           indf1	equ	0xFE7
  7237                           postinc1	equ	0xFE6
  7238                           postdec1	equ	0xFE5
  7239                           preinc1	equ	0xFE4
  7240                           plusw1	equ	0xFE3
  7241                           fsr1h	equ	0xFE2
  7242                           fsr1l	equ	0xFE1
  7243                           bsr	equ	0xFE0
  7244                           indf2	equ	0xFDF
  7245                           postinc2	equ	0xFDE
  7246                           postdec2	equ	0xFDD
  7247                           preinc2	equ	0xFDC
  7248                           plusw2	equ	0xFDB
  7249                           fsr2h	equ	0xFDA
  7250                           fsr2l	equ	0xFD9
  7251                           status	equ	0xFD8

Data Sizes:
    Strings     220
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     40      52
    BANK0           123      1       1
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[8]), 
		 -> STR_23(CODE[14]), STR_22(CODE[29]), STR_20(CODE[4]), STR_19(CODE[3]), 
		 -> STR_18(CODE[7]), STR_17(CODE[5]), STR_16(CODE[12]), STR_15(CODE[12]), 
		 -> STR_14(CODE[6]), STR_13(CODE[7]), STR_12(CODE[9]), STR_11(CODE[21]), 
		 -> STR_10(CODE[7]), STR_9(CODE[10]), STR_8(CODE[9]), STR_7(CODE[6]), 
		 -> STR_6(CODE[13]), STR_5(CODE[11]), STR_4(CODE[7]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache4->_afficheur_texte
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _marche->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char
    _Conversion->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      49
                               _Init
                      _initInterrupt
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   62559
                                             28 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               3     3      0      60
                                              1 COMRAM     3     3      0
                    _afficheur_texte
 ---------------------------------------------------------------------------------
 (4) _afficheur_texte                                      3     3      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               3     3      0   60753
                                             26 COMRAM     2     2      0
                         _Conversion
                         _Diminution
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                             _marche
                              _plot1
                               _vide
                       _vitesseAdmin
 ---------------------------------------------------------------------------------
 (4) _vitesseAdmin                                         9     7      2     244
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    7113
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _marche                                               2     2      0    7364
                                             14 COMRAM     2     2      0
                         _Diminution
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _Diminution                                           2     0      2     251
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5336
                                             20 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4568
                                             14 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2393
                                             14 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5175
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    7113
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3955
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3158
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (4) _Conversion                                           6     4      2    1591
                                             14 COMRAM     6     4      2
                            ___awdiv
                             ___wmul
            _lecture_8bit_analogique (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1060
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initInterrupt
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Conversion
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _lecture_8bit_analogique (ARG)
     _Diminution
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _marche
       _Diminution
       _draw_string
       _goto_lico
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesseAdmin
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
     _afficheur_texte
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      60        0.0%
BIGRAMhhhhhl        BE      0       0      61        0.0%
BIGRAMhhhhl         BE      0       0      62        0.0%
BIGRAMhhhl          BE      0       0      63        0.0%
BIGRAMhhl           BE      0       0      64        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7B      0       0      65        0.0%
BITBANK0            7B      0       0       4        0.0%
BANK0               7B      1       1       5        0.8%
BIGRAMl             5F      0       0      66        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     28      34       1       62.7%
BITBIGSFRlhll       2C      0       0      56        0.0%
BITBIGSFRlhlhll     1B      0       0      54        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      55        0.0%
BITBIGSFRlhhhhh     10      0       0      44        0.0%
BITBIGSFRll          D      0       0      57        0.0%
BITBIGSFRlhhhhh      C      0       0      46        0.0%
BITBIGSFRlhhhhh      B      0       0      43        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      51        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      42        0.0%
BITBIGSFRlhhhhh      3      0       0      47        0.0%
BITBIGSFRlhlhhl      2      0       0      52        0.0%
BITBIGSFRlhhhhl      2      0       0      48        0.0%
BITBIGSFRlhhhl       2      0       0      49        0.0%
BITBIGSFRlhhl        2      0       0      50        0.0%
BITBIGSFRlhlhlh      1      0       0      53        0.0%
BITBIGSFRlhhhhh      1      0       0      45        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BITBIGSFRhlhhhh      1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      58        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 11 13:51:19 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 000C  
                                 _tc 003C                  ___wmul@multiplicand 0003  
                       ?_draw_square 0015                                  _BSR 000FE0  
                       ?_draw_string 0008                                  _puc 0038  
                        Conversion@a 000F                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 234C                                 l1421 2244  
                               l2685 2228                                 l2687 222E  
                               l2689 2234                                 l5517 22C6  
                               STR_1 108D                                 STR_2 10B1  
                               STR_3 102D                                 STR_4 109C  
                               STR_5 1066                                 STR_6 1041  
                               STR_7 10B7                                 STR_8 107B  
                               STR_9 1071                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 2226                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 22AC  
                               _fptr 0035                                 _vide 237C  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0029                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                         _vitesseAdmin 1B7C  
                   ?_lecture_normale 0003                                ?_main 0001  
                    __end_of___awdiv 1D1A                                STR_10 1095  
                              STR_11 101E                                STR_20 10CD  
                              STR_12 1084                                STR_21 10C3  
                              STR_13 10AA                                STR_14 10BD  
                              STR_22 1001                                STR_15 104E  
                              STR_23 1033                                STR_24 108D  
                              STR_16 105A                                STR_25 10D7  
                              STR_17 10C8                                STR_26 10D4  
                              STR_18 10A3                                STR_19 10DA  
                              STR_27 10D1                      __end_of___awmod 1D8A  
                              ?_vide 0001                           _Diminution 23BC  
                              _T0CON 000FD5                      ___awdiv@divisor 0009  
                       draw_dec8@dix 0013                                _FSR0H 000FEA  
                              _FSR1H 000FE2                                _FSR0L 000FE9  
                              _FSR2H 000FDA                                _FSR1L 000FE1  
                              _FSR2L 000FD9                      __end_of___lwdiv 1EFE  
                              i2l151 2116                                i2l148 2108  
                              i2l481 13D6                                i2l609 2366  
                              i2l485 148A                                i2l591 1714  
                              i2l596 1756                      ___awdiv@counter 000B  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 2332  
                        _write_d_aff 2318                      __end_of_charger 23AC  
                    write_d_aff@data 0001                       ?_stid_delai_us 0001  
                    __end_of_command 2318                                _badge 000075  
                              _plot1 1990                                _queue 000069  
                              tablat 000FF5                                ltemp0 0029  
                              ltemp1 002D                                ltemp2 0031  
                         _Conversion 2036                __end_of_delai_us_char 228C  
                              plusw1 000FE3                      _check_status_ok 21B0  
                              ttemp0 0029                                ttemp1 002C  
                              ttemp2 002F                                ttemp3 0032  
                              ttemp5 002A                                ttemp6 002D  
                              ttemp7 0031                                status 000FD8  
                              wtemp0 0029                                wtemp1 002B  
                              wtemp2 002D                                wtemp3 002F  
                              wtemp4 0031                                wtemp5 0033  
                              wtemp8 002A        initialisation_du_systeme@temp 0085  
                    __initialization 23AC                         __end_of_Init 2248  
         lecture_8bit_analogique@ret 0001                         __end_of_main 22CA  
                       __end_of_vide 2394                               ??_main 0086  
                             ??_vide 000F                        __activetblptr 000003  
                   _valeur_convertie 000084                         draw_square@x 0019  
                       draw_square@y 001A                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             ?_plot1 000F                               _ANCON0 000F25  
                             _ANCON1 000F24                               _ANCON2 000F23  
                   ___awdiv@dividend 0007                        _n_octet_badge 00007F  
                      draw_dec8@cent 0012                               _MEMCON 000F26  
                             i2l1201 1B4E                               i2l1212 1E94  
                             i2l1204 1B68                               i2l1301 1BF2  
                             i2l1150 226E                               i2l1126 1F06  
                             i2l1158 1904                               i2l1318 1DB2  
                             i2l1176 1C0C                               i2l1168 213C  
                             i2l1192 1E40                               i2l2129 1EF4  
                             i2l1187 1E14                               i2l1540 1A7A  
                             i2l4101 1D3A                               i2l1541 1A82  
                             i2l1198 1B34                               i2l1550 234E  
                             i2l4015 20AC                               i2l1543 1A8C  
                             i2l4041 1F9C                               i2l4121 1D80  
                             i2l4113 1D68                               i2l4105 1D48  
                             i2l2451 1F40                               i2l4131 1E68  
                             i2l4107 1D50                               i2l4053 1CAA  
                             i2l2453 1F44                               i2l4117 1D72  
                             i2l4135 1E72                               i2l4143 212A  
                             i2l4311 1B50                               i2l4215 18EE  
                             i2l2703 211A                               i2l4065 1CD0  
                             i2l4081 1D02                               i2l4153 1C0E  
                             i2l4137 1E96                               i2l4225 1906  
                             i2l4321 1B94                               i2l3441 1808  
                             i2l3521 2214                               i2l3513 2206  
                             i2l4067 1CD8                               i2l4059 1CBA  
                             i2l4251 2196                               i2l4147 2134  
                             i2l4315 1B6A                               i2l4307 1B36  
                             i2l4171 19D4                               i2l3531 22EC  
                             _PCLATH 000FFA                               i2l4085 1D10  
                             i2l4077 1CF8                               i2l4157 1C44  
                             i2l4149 213E                               i2l4237 2166  
                             i2l4173 19DC                               i2l4325 1BAE  
                             i2l2399 2284                               i2l4175 19E4  
                             i2l4183 19FC                               i2l4263 1FBE  
                             i2l3447 1816                               i2l4415 1A6C  
                             i2l4407 1A56                               i2l5071 0198  
                             i2l4361 1E16                               i2l4097 1D2E  
                             i2l4177 19EC                               i2l4169 19CC  
                             i2l4265 1FCC                               i2l4281 1DC4  
                             i2l3465 1844                               i2l4193 235A  
                             i2l4179 19F4                               i2l4259 1FA8  
                             i2l2667 21D4                               i2l4339 1BE4  
                             i2l3483 1872                               i2l3459 1836  
                             i2l4451 1ADC                               i2l5227 02DC  
                             i2l4381 2292                               i2l4269 1FE2  
                             i2l4701 124C                               i2l4461 1EC2  
                             i2l3477 1864                               i2l4367 1E38  
                             i2l4359 1E0C                               i2l4463 1ECA  
                             i2l4369 1E42                               i2l4473 1EEA  
                             i2l3497 189A                               _PCLATU 000FFB  
                             i2l4811 148C                               i2l4707 1278  
                             i2l4733 1312                               i2l4397 2372  
                             i2l4727 12F6                               i2l4753 135A  
                             i2l4737 1318                               i2l4729 12FC  
                             i2l4841 1734                               i2l4691 1226  
                             i2l4675 11C8                               i2l4773 13B0  
                             i2l4759 1366                               i2l4927 0064  
                             i2l4777 13C4                               i2l4769 139A  
                             i2l4689 121A                               i2l4857 1776  
                             i2l4883 2010                               i2l4891 202A  
                             _TABLAT 000FF5                               i2l4889 2022  
                      draw_dec8@unit 0010                               _RCSTA1 000FAB  
                         _Tick_Count 000071                               _SPBRG1 000FAF  
                   _FSR0L_TEMPORAIRE 000064                               _STATUS 000FD8  
                             _STKPTR 000FFC                               _TXREG1 000FAD  
                     clear_line@line 000F                               _TXSTA1 000FAC  
                             _Valeur 000083                               ___wmul 21DC  
                          ??___awdiv 000B                            ??___awmod 0005  
                          ??___lwdiv 0005                               _marche 1D8A  
                             _tache1 10DE                               _tache2 16F2  
                             _tache3 17E6                               _tache4 2202  
                             _tache5 22E4                               _tache6 1FEC  
                          ??_charger 000F                     ___awdiv@quotient 000D  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                        ?_Diminution 0001                      ??_stid_delai_us 0003  
                  ??_afficheur_texte 0001                               lltemp0 0029  
                             plot1@x 0014                               plot1@y 000F  
                   __end_of_tp_delai 237C                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 21DC  
                      _initInterrupt 22CA         lecture_normale@temps_attente 0005  
                        ?_Conversion 000F                           __accesstop 0060  
            __end_of__initialization 23B6                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                           ___inthi_sp 0AAC  
                  __end_of_d1command 20B0                    __end_of_d2command 1FA0  
                      __end_of_plot1 1A3E                       ?_initInterrupt 0001  
                            ??_plot1 0010                        draw_square@x1 0018  
                      draw_square@x2 0016                        draw_square@y1 0015  
                      draw_square@y2 0017                         _W_TEMPORAIRE 000060  
                         __pnvCOMRAM 0035                       _clear_graphics 2180  
        ??_initialisation_du_systeme 0085                           _clear_line 228C  
                         _clear_text 2150             ?_fonction_d_interruption 0001  
                            ?___wmul 0001                              ?_marche 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                       draw_dec8@octet 0011  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
           _initialisation_afficheur 18C4                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 0040  
             __end_of_clear_graphics 21B0                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 20B0                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_dec8 1B7C  
                  __end_of_draw_char 2150                    __end_of_draw_hex8 1E54  
                            ___awdiv 1C96                              ___awmod 1D1A  
                            ___lwdiv 1EAC                         __psmallconst 1000  
                            __pcinit 23AC                              _charger 2394  
                            __ramtop 1000                       draw_char@dccar 0008  
                            __ptext0 22AC                              __ptext1 14B0  
                            __ptext2 20B0                              __ptext3 22CA  
                            __ptext4 2226                              __ptext6 1FEC  
                            __ptext7 1A3E                              __ptext8 234C  
                            __ptext9 22E4                              _command 22FE  
                          _T0CONbits 000FD5                   draw_string@tableau 0008  
                    ??_initInterrupt 0085            _initialisation_du_systeme 14B0  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 226A  
                  __end_of_goto_lico 1EAC                              _val_tos 003A  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 23B6                              tache4@a 0003  
                            tache5@a 0001                              tache6@n 0009  
                    ?_clear_graphics 0001                          ?_clear_line 0001  
                    _afficheur_texte 23CC                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                 Conversion@valeur_lue 0011  
                       goto_lico@adr 000D                            _PORTBbits 000F81  
                          _PORTDbits 000F83                            _PORTEbits 000F84  
                       ??_Diminution 0003              _lecture_8bit_analogique 20E8  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                       ??_Conversion 0011                           command@cmd 0005  
                         draw_dec8@c 0014           Conversion@valeur_convertie 0013  
                         draw_hex8@c 0009                   __end_of_Diminution 23CC  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
                     __end_of___wmul 2202       lecture_8bit_analogique@channel 0002  
                          _d1command 2076                       __end_of_marche 1DF8  
                          _d2command 1F50                       __end_of_tache1 14B0  
                     __end_of_tache2 17E6                       __end_of_tache3 18C4  
                     __end_of_tache4 2226                       __end_of_tache5 22FE  
                     __end_of_tache6 2036                        ??_draw_square 0018  
                      ??_draw_string 000A                   __end_of_Conversion 2076  
             lecture_normale@stid_id 0003                __end_of_stid_delai_us 2364  
                start_initialization 23AC                        vitesseAdmin@a 0001  
                      vitesseAdmin@b 0006                        vitesseAdmin@c 0008  
                  ??_lecture_normale 0005              __end_of_afficheur_texte 23CE  
                      _delai_us_char 226A                             ??___wmul 0005  
                      ?_vitesseAdmin 0001                             ??_marche 000F  
                           ??_tache1 001B                             ??_tache2 0008  
                           ??_tache3 0001                             ??_tache4 0002  
                           ??_tache5 0001                             ??_tache6 0009  
         ??_initialisation_afficheur 0009            ??_lecture_8bit_analogique 0001  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                        __pbssCOMRAM 003C                        __pcstackBANK0 0085  
                __end_of_draw_square 1FEC           ??_initialisation_des_ports 0085  
                __end_of_draw_string 1C96                       ?_delai_us_char 0001  
                   ___lwdiv@dividend 0001                            __pintcode 0008  
                     ??_vitesseAdmin 0003                             ?___awdiv 0007  
                           ?___awmod 0001                             ?___lwdiv 0001  
             afficheur_texte@message 0001                             ?_charger 0001  
                  _pointeur_de_tache 000070                            _draw_dec8 1AE0  
                          _draw_char 211E                            _draw_hex8 1DF8  
                           ?_command 0001                       _wait_status_ok 1EFE  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 2248  
                 write_c_aff@command 0001                            _goto_lico 1E54  
    __end_of_lecture_8bit_analogique 211E                     ?_afficheur_texte 0001  
                     ___wmul@product 0005                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 16F2  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u225_40 1306                             i2u163_40 1D54  
                           i2u219_40 1ECE                             i2u172_40 1C34  
                           i2u172_47 1C2A                             i2u157_40 1CDC  
                       ??_clear_line 000F                             i2u174_40 1C66  
                           i2u174_47 1C5C                             i2u176_40 1C8E  
                           i2u176_47 1C84                             _PIR1bits 000F9E  
                           i2u257_47 11FE                             i2u258_47 125C  
                           i2u195_40 1BBA                             i2u259_47 1DDA  
                       ??_clear_text 0009                             _RCONbits 000FD0  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 1F50  
                        ??_d1command 0006                           ?_draw_dec8 0001  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 0001                     clear_line@column 0010  
                        _draw_square 1FA0                          _draw_string 1C0A  
              __end_of_initInterrupt 22E4                         _Val_sem_rxtx 003F  
                           _TP_appui 000066                   __end_of_clear_line 22AC  
                        _INTCON2bits 000FF1                          _INTCON3bits 000FF0  
                    ??_delai_us_char 0001                   __end_of_clear_text 2180  
                         ?_init_rxtx 0001                           ?_goto_lico 0009  
                         _ANCON0bits 000F25                           _ANCON1bits 000F24  
                           __Hrparam 0000                             _Personne 000082  
                           __Lrparam 0000     __end_of_initialisation_afficheur 1990  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
            _fonction_d_interruption 0008                      _lecture_normale 1A3E  
                      tache4@message 0002                             _batterie 000074  
                    ___lwdiv@divisor 0003     __end_of_initialisation_des_ports 20E8  
                    ___lwdiv@counter 0007                             __ptext10 2202  
                           __ptext11 23CC                             __ptext20 23BC  
                           __ptext12 17E6                             __ptext21 20E8  
                           __ptext13 16F2                             __ptext30 1AE0  
                           __ptext22 18C4                             __ptext14 2364  
                           __ptext31 2150                             __ptext23 21B0  
                           __ptext15 1EAC                             __ptext40 2318  
                           __ptext32 228C                             __ptext24 2248  
                           __ptext16 10DE                             __ptext41 2332  
                           __ptext33 211E                             __ptext25 1FA0  
                           __ptext17 1B7C                             __ptext42 1EFE  
                           __ptext34 2180                             __ptext26 1990  
                           __ptext18 237C                             __ptext43 226A  
                           __ptext35 2394                             __ptext27 22FE  
                           __ptext19 1D8A                             __ptext44 2036  
                           __ptext36 1E54                             __ptext28 1D1A  
                           __ptext45 21DC                             __ptext37 1F50  
                           __ptext29 1DF8                             __ptext46 1C96  
                           __ptext38 1C0A                             __ptext47 0000  
                           __ptext39 2076                 __end_of_vitesseAdmin 1C0A  
                           isa$xinst 000000                             _tp_delai 2364  
                  ??_check_status_ok 0001                    Diminution@vitesse 0001  
                        ??_draw_dec8 000F                          ??_draw_char 0008  
                        ??_draw_hex8 0008                        ??_write_c_aff 0001  
                      ??_write_d_aff 0001                           _INTCONbits 000FF2  
                           tache2@hx 000E                             tache2@hy 0010  
                           tache2@ix 000A                             tache2@iy 000C  
                           tache2@lx 000F                             tache2@ly 0011  
                        ??_init_rxtx 0001                          ??_goto_lico 000A  
                           intlevel2 0000                             plot1@add 0012  
                     goto_lico@ligne 000C              __end_of_lecture_normale 1AE0  
                       d1command@cmd 0005                         d1command@res 0007  
          ??_fonction_d_interruption 001D                         tp_delai@itpd 0001  
                        d1command@d1 0006                  __end_of_write_c_aff 234C  
                __end_of_write_d_aff 2332                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
