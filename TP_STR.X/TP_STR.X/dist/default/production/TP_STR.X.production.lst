

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Nov 22 10:26:32 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51                           	dabs	1,0x603,1,_STKPTR_T6
    52                           	dabs	1,0x503,1,_STKPTR_T5
    53                           	dabs	1,0x403,1,_STKPTR_T4
    54                           	dabs	1,0x303,1,_STKPTR_T3
    55                           	dabs	1,0x203,1,_STKPTR_T2
    56                           	dabs	1,0x103,1,_STKPTR_T1
    57                           	dabs	1,0x60,1,_W_TEMPORAIRE
    58                           	dabs	1,0x100,66,_contexte1
    59                           	dabs	1,0x69,6,_queue
    60                           	dabs	1,0x71,2,_Tick_Count
    61                           	dabs	1,0x80,1,_RXTX_libre
    62                           	dabs	1,0x7F,1,_n_octet_badge
    63                           	dabs	1,0x74,1,_batterie
    64                           	dabs	1,0x73,1,_vitesse
    65                           	dabs	1,0x70,1,_pointeur_de_tache
    66                           	dabs	1,0x6F,1,_tache_active
    67                           	dabs	1,0x68,1,_TP_y
    68                           	dabs	1,0x67,1,_TP_x
    69                           	dabs	1,0x66,1,_TP_appui
    70                           	dabs	1,0x65,1,_DEMARRAGE
    71                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    72                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    73                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    74                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    75                           	dabs	1,0x75,10,_badge
    76                           	dabs	1,0x200,66,_contexte2
    77                           	dabs	1,0x300,66,_contexte3
    78                           	dabs	1,0x400,66,_contexte4
    79                           	dabs	1,0x500,66,_contexte5
    80                           	dabs	1,0x600,66,_contexte6
    81   000000                     
    82                           ; Generated 06/04/2022 GMT
    83                           ; 
    84                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F87K22 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   000000                     
   117 ;;Init@sem	offset=-1 (param)
   118 ;;Init@sem	offset=-1 (param)
   119   000000                     _TMR0	set	4054
   120   000000                     _TOSU	set	4095
   121   000000                     _TOSH	set	4094
   122   000000                     _TOSL	set	4093
   123   000000                     _TABLAT	set	4085
   124   000000                     _TBLPTRL	set	4086
   125   000000                     _TBLPTRH	set	4087
   126   000000                     _TBLPTRU	set	4088
   127   000000                     _PRODL	set	4083
   128   000000                     _PRODH	set	4084
   129   000000                     _FSR2L	set	4057
   130   000000                     _FSR2H	set	4058
   131   000000                     _FSR1L	set	4065
   132   000000                     _FSR1H	set	4066
   133   000000                     _STKPTR	set	4092
   134   000000                     _FSR0L	set	4073
   135   000000                     _FSR0H	set	4074
   136   000000                     _BSR	set	4064
   137   000000                     _WREG	set	4072
   138   000000                     _STATUS	set	4056
   139                           
   140                           ; 1 bytes @ 0x1C
   141 ;;
   142 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   143 ;;
   144 ;; *************** function _main *****************
   145 ;; Defined at:
   146 ;;		line 6 in file "main.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;		None
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   164 ;;Total ram usage:        0 bytes
   165 ;; Hardware stack levels required when called: 7
   166 ;; This function calls:
   167 ;;		_Init
   168 ;;		_initialisation_des_ports
   169 ;;		_initialisation_du_systeme
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176   002006                     __ptext0:
   177                           	callstack 0
   178   000000                     _T0IF	set	32658
   179   000000                     _INTCON2bits	set	4081
   180   002006                     _main:
   181                           	callstack 24
   182                           
   183                           ;main.c: 8: initialisation_des_ports();
   184                           
   185                           ;incstack = 0
   186   002006  EC26  F00F         	call	_initialisation_des_ports	;wreg free
   187                           
   188                           ;main.c: 9: initialisation_du_systeme();
   189   00200A  ECCB  F009         	call	_initialisation_du_systeme	;wreg free
   190                           
   191                           ;main.c: 10: Init(1);
   192   00200E  0E01               	movlw	1
   193   002010  6EE6               	movwf	postinc1,c
   194   002012  ECD0  F00F         	call	_Init	;wreg free
   195                           
   196                           ;main.c: 13: T0CONbits.TMR0ON=1;
   197   002016  8ED5               	bsf	213,7,c	;volatile
   198                           
   199                           ;main.c: 14: T0IF=1;
   200   002018  84F2               	bsf	4082,2,c	;volatile
   201                           
   202                           ;main.c: 15: (INTCONbits.GIE = 1);
   203   00201A  8EF2               	bsf	242,7,c	;volatile
   204   00201C                     l4519:
   205                           
   206                           ;main.c: 19: __nop();
   207   00201C  F000               	nop	
   208   00201E  D7FE               	goto	l4519
   209   002020                     __end_of_main:
   210                           	callstack 0
   211                           
   212                           	psect	nvCOMRAM
   213   000029                     __pnvCOMRAM:
   214                           	callstack 0
   215   000029                     _fptr:
   216                           	callstack 0
   217   000029                     	ds	3
   218   00002C                     _puc:
   219                           	callstack 0
   220   00002C                     	ds	2
   221   00002E                     _val_tos:
   222                           	callstack 0
   223   00002E                     	ds	2
   224   000000                     _ANCON1bits	set	3876
   225   000000                     _ANCON0bits	set	3877
   226   000000                     _TXSTA1	set	4012
   227   000000                     _LATJ	set	3985
   228   000000                     _T0CON	set	4053
   229   000000                     _ADCON0bits	set	4034
   230   000000                     _INTCONbits	set	4082
   231   000000                     _T0IE	set	32661
   232   000000                     _ANCON2	set	3875
   233   000000                     _ANCON1	set	3876
   234   000000                     _ANCON0	set	3877
   235   000000                     _MEMCON	set	3878
   236   000000                     _T0CONbits	set	4053
   237   000000                     _PADCFG1bits	set	3923
   238   000000                     _LATCbits	set	3979
   239   000000                     _LATDbits	set	3980
   240   000000                     _LATGbits	set	3983
   241   000000                     _LATJbits	set	3985
   242   000000                     _LATH	set	3984
   243   000000                     _TRISCbits	set	3988
   244   000000                     _TRISDbits	set	3989
   245   000000                     _TRISGbits	set	3992
   246   000000                     _TRISJ	set	3994
   247   000000                     _TRISH	set	3993
   248   000000                     _PIR1bits	set	3998
   249   000000                     _TXREG1	set	4013
   250   000000                     _ADCON2	set	4032
   251   000000                     _ADCON1	set	4033
   252   000000                     _BAUDCON1	set	3941
   253   000000                     _PORTBbits	set	3969
   254   000000                     _SPBRGH1	set	4052
   255   000000                     _ADRESH	set	4036
   256   000000                     _ADRESL	set	4035
   257   000000                     _ADCON0	set	4034
   258   000000                     _POSTINC0	set	4078
   259   000000                     _POSTINC1	set	4070
   260   000000                     _PCLATH	set	4090
   261   000000                     _PCLATU	set	4091
   262   000000                     _SPBRG1	set	4015
   263   000000                     _PORTDbits	set	3971
   264   000000                     _PORTEbits	set	3972
   265   000000                     _PORTH	set	3975
   266   000000                     _RCSTA1	set	4011
   267   000000                     _TXSTA1bits	set	4012
   268                           
   269                           	psect	smallconst
   270   001000                     __psmallconst:
   271                           	callstack 0
   272   001000  00                 	db	0
   273   001001                     STR_14:
   274   001001  20                 	db	32
   275   001002  41                 	db	65	;'A'
   276   001003  55                 	db	85	;'U'
   277   001004  43                 	db	67	;'C'
   278   001005  55                 	db	85	;'U'
   279   001006  4E                 	db	78	;'N'
   280   001007  20                 	db	32
   281   001008  20                 	db	32
   282   001009  20                 	db	32
   283   00100A  20                 	db	32
   284   00100B  20                 	db	32
   285   00100C  20                 	db	32
   286   00100D  20                 	db	32
   287   00100E  20                 	db	32
   288   00100F  20                 	db	32
   289   001010  20                 	db	32
   290   001011  20                 	db	32
   291   001012  20                 	db	32
   292   001013  20                 	db	32
   293   001014  20                 	db	32
   294   001015  00                 	db	0
   295   001016                     STR_7:
   296   001016  54                 	db	84	;'T'
   297   001017  65                 	db	101	;'e'
   298   001018  6D                 	db	109	;'m'
   299   001019  70                 	db	112	;'p'
   300   00101A  2E                 	db	46
   301   00101B  20                 	db	32
   302   00101C  48                 	db	72	;'H'
   303   00101D  75                 	db	117	;'u'
   304   00101E  69                 	db	105	;'i'
   305   00101F  6C                 	db	108	;'l'
   306   001020  65                 	db	101	;'e'
   307   001021  3A                 	db	58	;':'
   308   001022  00                 	db	0
   309   001023                     STR_15:
   310   001023  58                 	db	88	;'X'
   311   001024  2D                 	db	45
   312   001025  4A                 	db	74	;'J'
   313   001026  6F                 	db	111	;'o'
   314   001027  79                 	db	121	;'y'
   315   001028  73                 	db	115	;'s'
   316   001029  74                 	db	116	;'t'
   317   00102A  69                 	db	105	;'i'
   318   00102B  63                 	db	99	;'c'
   319   00102C  6B                 	db	107	;'k'
   320   00102D  3A                 	db	58	;':'
   321   00102E  00                 	db	0
   322   00102F                     STR_16:
   323   00102F  59                 	db	89	;'Y'
   324   001030  2D                 	db	45
   325   001031  4A                 	db	74	;'J'
   326   001032  6F                 	db	111	;'o'
   327   001033  79                 	db	121	;'y'
   328   001034  73                 	db	115	;'s'
   329   001035  74                 	db	116	;'t'
   330   001036  69                 	db	105	;'i'
   331   001037  63                 	db	99	;'c'
   332   001038  6B                 	db	107	;'k'
   333   001039  3A                 	db	58	;':'
   334   00103A  00                 	db	0
   335   00103B                     STR_6:
   336   00103B  54                 	db	84	;'T'
   337   00103C  65                 	db	101	;'e'
   338   00103D  6D                 	db	109	;'m'
   339   00103E  70                 	db	112	;'p'
   340   00103F  2E                 	db	46
   341   001040  20                 	db	32
   342   001041  45                 	db	69	;'E'
   343   001042  61                 	db	97	;'a'
   344   001043  75                 	db	117	;'u'
   345   001044  3A                 	db	58	;':'
   346   001045  00                 	db	0
   347   001046                     STR_10:
   348   001046  42                 	db	66	;'B'
   349   001047  61                 	db	97	;'a'
   350   001048  74                 	db	116	;'t'
   351   001049  74                 	db	116	;'t'
   352   00104A  65                 	db	101	;'e'
   353   00104B  72                 	db	114	;'r'
   354   00104C  69                 	db	105	;'i'
   355   00104D  65                 	db	101	;'e'
   356   00104E  3A                 	db	58	;':'
   357   00104F  00                 	db	0
   358   001050                     STR_9:
   359   001050  56                 	db	86	;'V'
   360   001051  69                 	db	105	;'i'
   361   001052  74                 	db	116	;'t'
   362   001053  65                 	db	101	;'e'
   363   001054  73                 	db	115	;'s'
   364   001055  73                 	db	115	;'s'
   365   001056  65                 	db	101	;'e'
   366   001057  3A                 	db	58	;':'
   367   001058  00                 	db	0
   368   001059                     STR_1:
   369   001059  4D                 	db	77	;'M'
   370   00105A  61                 	db	97	;'a'
   371   00105B  72                 	db	114	;'r'
   372   00105C  63                 	db	99	;'c'
   373   00105D  68                 	db	104	;'h'
   374   00105E  65                 	db	101	;'e'
   375   00105F  3A                 	db	58	;':'
   376   001060  00                 	db	0
   377   001061                     STR_17:
   378   001061  42                 	db	66	;'B'
   379   001062  49                 	db	73	;'I'
   380   001063  47                 	db	71	;'G'
   381   001064  20                 	db	32
   382   001065  4D                 	db	77	;'M'
   383   001066  55                 	db	85	;'U'
   384   001067  4D                 	db	77	;'M'
   385   001068  00                 	db	0
   386   001069                     STR_13:
   387   001069  42                 	db	66	;'B'
   388   00106A  61                 	db	97	;'a'
   389   00106B  64                 	db	100	;'d'
   390   00106C  67                 	db	103	;'g'
   391   00106D  65                 	db	101	;'e'
   392   00106E  3A                 	db	58	;':'
   393   00106F  00                 	db	0
   394   001070                     STR_5:
   395   001070  53                 	db	83	;'S'
   396   001071  69                 	db	105	;'i'
   397   001072  65                 	db	101	;'e'
   398   001073  67                 	db	103	;'g'
   399   001074  65                 	db	101	;'e'
   400   001075  3A                 	db	58	;':'
   401   001076  00                 	db	0
   402   001077                     STR_11:
   403   001077  28                 	db	40
   404   001078  28                 	db	40
   405   001079  21                 	db	33
   406   00107A  29                 	db	41
   407   00107B  29                 	db	41
   408   00107C  00                 	db	0
   409   00107D                     STR_8:
   410   00107D  43                 	db	67	;'C'
   411   00107E  68                 	db	104	;'h'
   412   00107F  6F                 	db	111	;'o'
   413   001080  63                 	db	99	;'c'
   414   001081  3A                 	db	58	;':'
   415   001082  00                 	db	0
   416   001083                     STR_19:
   417   001083  20                 	db	32
   418   001084  79                 	db	121	;'y'
   419   001085  3D                 	db	61	;'='
   420   001086  00                 	db	0
   421   001087                     STR_4:
   422   001087  4E                 	db	78	;'N'
   423   001088  20                 	db	32
   424   001089  00                 	db	0
   425   00108A                     STR_18:
   426   00108A  78                 	db	120	;'x'
   427   00108B  3D                 	db	61	;'='
   428   00108C  00                 	db	0
   429   00108D                     STR_3:
   430   00108D  41                 	db	65	;'A'
   431   00108E  52                 	db	82	;'R'
   432   00108F  00                 	db	0
   433   001090                     STR_2:
   434   001090  41                 	db	65	;'A'
   435   001091  56                 	db	86	;'V'
   436   001092  00                 	db	0
   437   001093  00                 	db	0	; dummy byte at the end
   438   000000                     
   439                           ; #config settings
   440                           
   441                           	psect	cinit
   442   00209E                     __pcinit:
   443                           	callstack 0
   444   00209E                     start_initialization:
   445                           	callstack 0
   446   00209E                     __initialization:
   447                           	callstack 0
   448                           
   449                           ; Clear objects allocated to COMRAM (5 bytes)
   450   00209E  6A34               	clrf	(__pbssCOMRAM+4)& (0+255),c
   451   0020A0  6A33               	clrf	(__pbssCOMRAM+3)& (0+255),c
   452   0020A2  6A32               	clrf	(__pbssCOMRAM+2)& (0+255),c
   453   0020A4  6A31               	clrf	(__pbssCOMRAM+1)& (0+255),c
   454   0020A6  6A30               	clrf	__pbssCOMRAM& (0+255),c
   455   0020A8                     end_of_initialization:
   456                           	callstack 0
   457   0020A8                     __end_of__initialization:
   458                           	callstack 0
   459   0020A8  0100               	movlb	0
   460   0020AA  EF03  F010         	goto	_main	;jump to C main() function
   461                           
   462                           	psect	bssCOMRAM
   463   000030                     __pbssCOMRAM:
   464                           	callstack 0
   465   000030                     _tc:
   466                           	callstack 0
   467   000030                     	ds	3
   468   000033                     _Val_sem_rxtx:
   469                           	callstack 0
   470   000033                     	ds	1
   471   000034                     _Val_sem_cna:
   472                           	callstack 0
   473   000034                     	ds	1
   474                           
   475                           	psect	cstackCOMRAM
   476   000001                     __pcstackCOMRAM:
   477                           	callstack 0
   478   000001                     ?___awdiv:
   479                           	callstack 0
   480   000001                     ?___awmod:
   481                           	callstack 0
   482   000001                     ?___lwdiv:
   483                           	callstack 0
   484   000001                     lecture_8bit_analogique@ret:
   485                           	callstack 0
   486   000001                     write_d_aff@data:
   487                           	callstack 0
   488   000001                     write_c_aff@command:
   489                           	callstack 0
   490   000001                     check_status_ok@res:
   491                           	callstack 0
   492   000001                     delai_us_char@ucdelai:
   493                           	callstack 0
   494   000001                     tp_delai@itpd:
   495                           	callstack 0
   496   000001                     tache4@a:
   497                           	callstack 0
   498   000001                     tache5@a:
   499                           	callstack 0
   500   000001                     stid_delai_us@isdu:
   501                           	callstack 0
   502   000001                     ___awdiv@dividend:
   503                           	callstack 0
   504   000001                     ___awmod@dividend:
   505                           	callstack 0
   506   000001                     ___lwdiv@dividend:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x0
   510   000001                     	ds	1
   511   000002                     lecture_8bit_analogique@channel:
   512                           	callstack 0
   513   000002                     wait_status_ok@err:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x1
   517   000002                     	ds	1
   518   000003                     wait_status_ok@status:
   519                           	callstack 0
   520   000003                     lecture_normale@stid_id:
   521                           	callstack 0
   522   000003                     ___awdiv@divisor:
   523                           	callstack 0
   524   000003                     ___awmod@divisor:
   525                           	callstack 0
   526   000003                     ___lwdiv@divisor:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x2
   530   000003                     	ds	1
   531   000004                     wait_status_ok@res:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x3
   535   000004                     	ds	1
   536   000005                     command@cmd:
   537                           	callstack 0
   538   000005                     d1command@cmd:
   539                           	callstack 0
   540   000005                     d2command@d2:
   541                           	callstack 0
   542   000005                     lecture_normale@temps_attente:
   543                           	callstack 0
   544   000005                     ___awdiv@counter:
   545                           	callstack 0
   546   000005                     ___awmod@counter:
   547                           	callstack 0
   548   000005                     ___lwdiv@quotient:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x4
   552   000005                     	ds	1
   553   000006                     d1command@d1:
   554                           	callstack 0
   555   000006                     d2command@cmd:
   556                           	callstack 0
   557   000006                     lecture_normale@n_octet:
   558                           	callstack 0
   559   000006                     ___awdiv@sign:
   560                           	callstack 0
   561   000006                     ___awmod@sign:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x5
   565   000006                     	ds	1
   566   000007                     d1command@res:
   567                           	callstack 0
   568   000007                     d2command@d1:
   569                           	callstack 0
   570   000007                     lecture_normale@n_bit:
   571                           	callstack 0
   572   000007                     ___lwdiv@counter:
   573                           	callstack 0
   574   000007                     ___awdiv@quotient:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x6
   578   000007                     	ds	1
   579   000008                     ??_tache2:
   580   000008                     d2command@res:
   581                           	callstack 0
   582   000008                     draw_char@dccar:
   583                           	callstack 0
   584   000008                     draw_hex8@octet:
   585                           	callstack 0
   586   000008                     lecture_normale@octet:
   587                           	callstack 0
   588   000008                     draw_string@tableau:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x7
   592   000008                     	ds	1
   593   000009                     tache6@n:
   594                           	callstack 0
   595   000009                     initialisation_afficheur@error_count:
   596                           	callstack 0
   597   000009                     draw_hex8@c:
   598                           	callstack 0
   599   000009                     goto_lico@colonne:
   600                           	callstack 0
   601   000009                     plot1@y:
   602                           	callstack 0
   603   000009                     clear_text@add:
   604                           	callstack 0
   605   000009                     clear_graphics@add:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x8
   609   000009                     	ds	1
   610   00000A                     ??_goto_lico:
   611   00000A                     ??_plot1:
   612   00000A                     tache2@ix:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x9
   616   00000A                     	ds	2
   617   00000C                     goto_lico@ligne:
   618                           	callstack 0
   619   00000C                     tache2@iy:
   620                           	callstack 0
   621   00000C                     plot1@add:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0xB
   625   00000C                     	ds	1
   626   00000D                     goto_lico@adr:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0xC
   630   00000D                     	ds	1
   631   00000E                     tache2@hx:
   632                           	callstack 0
   633   00000E                     plot1@x:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0xD
   637   00000E                     	ds	1
   638   00000F                     tache1@i:
   639                           	callstack 0
   640   00000F                     tache2@lx:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0xE
   644   00000F                     	ds	1
   645   000010                     tache2@hy:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0xF
   649   000010                     	ds	1
   650   000011                     tache2@ly:
   651                           	callstack 0
   652                           
   653                           ; 1 bytes @ 0x10
   654   000011                     	ds	1
   655   000012                     ??_fonction_d_interruption:
   656                           
   657                           ; 1 bytes @ 0x11
   658   000012                     	ds	10
   659   00001C                     initialisation_du_systeme@temp:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x1B
   663   00001C                     	ds	1
   664   00001D                     
   665 ;; *************** function _initialisation_du_systeme *****************
   666 ;; Defined at:
   667 ;;		line 131 in file "systeme.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;  temp            1   27[COMRAM] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   685 ;;Total ram usage:        1 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; Hardware stack levels required when called: 6
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text1
   696   001396                     __ptext1:
   697                           	callstack 0
   698   001396                     _initialisation_du_systeme:
   699                           	callstack 24
   700                           
   701                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   702                           
   703                           ;incstack = 0
   704   001396  0E01               	movlw	1
   705   001398  0100               	movlb	0	; () banked
   706   00139A  6F65               	movwf	101,b
   707                           
   708                           ;systeme.c: 138: queue[0]=1;
   709   00139C  0E01               	movlw	1
   710   00139E  6F69               	movwf	105,b
   711                           
   712                           ;systeme.c: 139: queue[1]=2;
   713   0013A0  0E02               	movlw	2
   714   0013A2  6F6A               	movwf	106,b
   715                           
   716                           ;systeme.c: 140: queue[2]=3;
   717   0013A4  0E03               	movlw	3
   718   0013A6  6F6B               	movwf	107,b
   719                           
   720                           ;systeme.c: 141: queue[3]=4;
   721   0013A8  0E04               	movlw	4
   722   0013AA  6F6C               	movwf	108,b
   723                           
   724                           ;systeme.c: 142: queue[4]=5;
   725   0013AC  0E05               	movlw	5
   726   0013AE  6F6D               	movwf	109,b
   727                           
   728                           ;systeme.c: 143: queue[5]=6;
   729   0013B0  0E06               	movlw	6
   730   0013B2  6F6E               	movwf	110,b
   731                           
   732                           ;systeme.c: 145: pointeur_de_tache=6-1;
   733   0013B4  0E05               	movlw	5
   734   0013B6  6F70               	movwf	112,b
   735                           
   736                           ; BSR set to: 0
   737                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   738   0013B8  0E69               	movlw	105
   739   0013BA  2570               	addwf	112,w,b
   740   0013BC  6ED9               	movwf	fsr2l,c
   741   0013BE  6ADA               	clrf	fsr2h,c
   742   0013C0  0E00               	movlw	0
   743   0013C2  22DA               	addwfc	fsr2h,f,c
   744   0013C4  50DF               	movf	indf2,w,c
   745   0013C6  6F6F               	movwf	111,b
   746                           
   747                           ; BSR set to: 0
   748                           ;systeme.c: 151: temp=STKPTR;
   749   0013C8  CFFC F01C          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   750                           
   751                           ; BSR set to: 0
   752                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   753   0013CC  0E02               	movlw	2
   754   0013CE  6EFC               	movwf	252,c	;volatile
   755                           
   756                           ; BSR set to: 0
   757   0013D0  0E94               	movlw	low _tache1
   758   0013D2  6E29               	movwf	_fptr^0,c
   759   0013D4  0E10               	movlw	high _tache1
   760   0013D6  6E2A               	movwf	(_fptr+1)^0,c
   761   0013D8  0E00               	movlw	low (_tache1 shr (0+16))
   762   0013DA  6E2B               	movwf	(_fptr+2)^0,c
   763                           
   764                           ; BSR set to: 0
   765   0013DC  C029  F02E         	movff	_fptr,_val_tos
   766   0013E0  C02A  F02F         	movff	_fptr+1,_val_tos+1
   767                           
   768                           ; BSR set to: 0
   769   0013E4  0E2E               	movlw	low _val_tos
   770   0013E6  6E2C               	movwf	_puc^0,c
   771   0013E8  0E00               	movlw	high _val_tos
   772   0013EA  6E2D               	movwf	(_puc+1)^0,c
   773                           
   774                           ; BSR set to: 0
   775   0013EC  C02C  FFD9         	movff	_puc,fsr2l
   776   0013F0  C02D  FFDA         	movff	_puc+1,fsr2h
   777   0013F4  50DF               	movf	indf2,w,c
   778   0013F6  6EFD               	movwf	253,c	;volatile
   779                           
   780                           ; BSR set to: 0
   781   0013F8  4A2C               	infsnz	_puc^0,f,c
   782   0013FA  2A2D               	incf	(_puc+1)^0,f,c
   783                           
   784                           ; BSR set to: 0
   785   0013FC  C02C  FFD9         	movff	_puc,fsr2l
   786   001400  C02D  FFDA         	movff	_puc+1,fsr2h
   787   001404  50DF               	movf	indf2,w,c
   788   001406  6EFE               	movwf	254,c	;volatile
   789                           
   790                           ; BSR set to: 0
   791   001408  4A2C               	infsnz	_puc^0,f,c
   792   00140A  2A2D               	incf	(_puc+1)^0,f,c
   793                           
   794                           ; BSR set to: 0
   795   00140C  C02C  FFD9         	movff	_puc,fsr2l
   796   001410  C02D  FFDA         	movff	_puc+1,fsr2h
   797   001414  50DF               	movf	indf2,w,c
   798   001416  6EFF               	movwf	255,c	;volatile
   799                           
   800                           ; BSR set to: 0
   801                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   802   001418  0E07               	movlw	7
   803   00141A  6EFC               	movwf	252,c	;volatile
   804   00141C  0ECE               	movlw	low _tache2
   805   00141E  6E29               	movwf	_fptr^0,c
   806   001420  0E15               	movlw	high _tache2
   807   001422  6E2A               	movwf	(_fptr+1)^0,c
   808   001424  0E00               	movlw	low (_tache2 shr (0+16))
   809   001426  6E2B               	movwf	(_fptr+2)^0,c
   810                           
   811                           ; BSR set to: 0
   812   001428  C029  F02E         	movff	_fptr,_val_tos
   813   00142C  C02A  F02F         	movff	_fptr+1,_val_tos+1
   814   001430  0E2E               	movlw	low _val_tos
   815   001432  6E2C               	movwf	_puc^0,c
   816   001434  0E00               	movlw	high _val_tos
   817   001436  6E2D               	movwf	(_puc+1)^0,c
   818                           
   819                           ; BSR set to: 0
   820   001438  C02C  FFD9         	movff	_puc,fsr2l
   821   00143C  C02D  FFDA         	movff	_puc+1,fsr2h
   822   001440  50DF               	movf	indf2,w,c
   823   001442  6EFD               	movwf	253,c	;volatile
   824                           
   825                           ; BSR set to: 0
   826   001444  4A2C               	infsnz	_puc^0,f,c
   827   001446  2A2D               	incf	(_puc+1)^0,f,c
   828                           
   829                           ; BSR set to: 0
   830   001448  C02C  FFD9         	movff	_puc,fsr2l
   831   00144C  C02D  FFDA         	movff	_puc+1,fsr2h
   832   001450  50DF               	movf	indf2,w,c
   833   001452  6EFE               	movwf	254,c	;volatile
   834                           
   835                           ; BSR set to: 0
   836   001454  4A2C               	infsnz	_puc^0,f,c
   837   001456  2A2D               	incf	(_puc+1)^0,f,c
   838                           
   839                           ; BSR set to: 0
   840   001458  C02C  FFD9         	movff	_puc,fsr2l
   841   00145C  C02D  FFDA         	movff	_puc+1,fsr2h
   842   001460  50DF               	movf	indf2,w,c
   843   001462  6EFF               	movwf	255,c	;volatile
   844                           
   845                           ; BSR set to: 0
   846                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   847   001464  0E0C               	movlw	12
   848   001466  6EFC               	movwf	252,c	;volatile
   849                           
   850                           ; BSR set to: 0
   851   001468  0E92               	movlw	low _tache3
   852   00146A  6E29               	movwf	_fptr^0,c
   853   00146C  0E1A               	movlw	high _tache3
   854   00146E  6E2A               	movwf	(_fptr+1)^0,c
   855   001470  0E00               	movlw	low (_tache3 shr (0+16))
   856   001472  6E2B               	movwf	(_fptr+2)^0,c
   857                           
   858                           ; BSR set to: 0
   859   001474  C029  F02E         	movff	_fptr,_val_tos
   860   001478  C02A  F02F         	movff	_fptr+1,_val_tos+1
   861                           
   862                           ; BSR set to: 0
   863   00147C  0E2E               	movlw	low _val_tos
   864   00147E  6E2C               	movwf	_puc^0,c
   865   001480  0E00               	movlw	high _val_tos
   866   001482  6E2D               	movwf	(_puc+1)^0,c
   867                           
   868                           ; BSR set to: 0
   869   001484  C02C  FFD9         	movff	_puc,fsr2l
   870   001488  C02D  FFDA         	movff	_puc+1,fsr2h
   871   00148C  50DF               	movf	indf2,w,c
   872   00148E  6EFD               	movwf	253,c	;volatile
   873                           
   874                           ; BSR set to: 0
   875   001490  4A2C               	infsnz	_puc^0,f,c
   876   001492  2A2D               	incf	(_puc+1)^0,f,c
   877                           
   878                           ; BSR set to: 0
   879   001494  C02C  FFD9         	movff	_puc,fsr2l
   880   001498  C02D  FFDA         	movff	_puc+1,fsr2h
   881   00149C  50DF               	movf	indf2,w,c
   882   00149E  6EFE               	movwf	254,c	;volatile
   883                           
   884                           ; BSR set to: 0
   885   0014A0  4A2C               	infsnz	_puc^0,f,c
   886   0014A2  2A2D               	incf	(_puc+1)^0,f,c
   887                           
   888                           ; BSR set to: 0
   889   0014A4  C02C  FFD9         	movff	_puc,fsr2l
   890   0014A8  C02D  FFDA         	movff	_puc+1,fsr2h
   891   0014AC  50DF               	movf	indf2,w,c
   892   0014AE  6EFF               	movwf	255,c	;volatile
   893                           
   894                           ; BSR set to: 0
   895                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   896   0014B0  0E11               	movlw	17
   897   0014B2  6EFC               	movwf	252,c	;volatile
   898   0014B4  0EA8               	movlw	low _tache4
   899   0014B6  6E29               	movwf	_fptr^0,c
   900   0014B8  0E17               	movlw	high _tache4
   901   0014BA  6E2A               	movwf	(_fptr+1)^0,c
   902   0014BC  0E00               	movlw	low (_tache4 shr (0+16))
   903   0014BE  6E2B               	movwf	(_fptr+2)^0,c
   904                           
   905                           ; BSR set to: 0
   906   0014C0  C029  F02E         	movff	_fptr,_val_tos
   907   0014C4  C02A  F02F         	movff	_fptr+1,_val_tos+1
   908   0014C8  0E2E               	movlw	low _val_tos
   909   0014CA  6E2C               	movwf	_puc^0,c
   910   0014CC  0E00               	movlw	high _val_tos
   911   0014CE  6E2D               	movwf	(_puc+1)^0,c
   912                           
   913                           ; BSR set to: 0
   914   0014D0  C02C  FFD9         	movff	_puc,fsr2l
   915   0014D4  C02D  FFDA         	movff	_puc+1,fsr2h
   916   0014D8  50DF               	movf	indf2,w,c
   917   0014DA  6EFD               	movwf	253,c	;volatile
   918                           
   919                           ; BSR set to: 0
   920   0014DC  4A2C               	infsnz	_puc^0,f,c
   921   0014DE  2A2D               	incf	(_puc+1)^0,f,c
   922                           
   923                           ; BSR set to: 0
   924   0014E0  C02C  FFD9         	movff	_puc,fsr2l
   925   0014E4  C02D  FFDA         	movff	_puc+1,fsr2h
   926   0014E8  50DF               	movf	indf2,w,c
   927   0014EA  6EFE               	movwf	254,c	;volatile
   928                           
   929                           ; BSR set to: 0
   930   0014EC  4A2C               	infsnz	_puc^0,f,c
   931   0014EE  2A2D               	incf	(_puc+1)^0,f,c
   932                           
   933                           ; BSR set to: 0
   934   0014F0  C02C  FFD9         	movff	_puc,fsr2l
   935   0014F4  C02D  FFDA         	movff	_puc+1,fsr2h
   936   0014F8  50DF               	movf	indf2,w,c
   937   0014FA  6EFF               	movwf	255,c	;volatile
   938                           
   939                           ; BSR set to: 0
   940                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   941   0014FC  0E16               	movlw	22
   942   0014FE  6EFC               	movwf	252,c	;volatile
   943                           
   944                           ; BSR set to: 0
   945   001500  0EC2               	movlw	low _tache5
   946   001502  6E29               	movwf	_fptr^0,c
   947   001504  0E16               	movlw	high _tache5
   948   001506  6E2A               	movwf	(_fptr+1)^0,c
   949   001508  0E00               	movlw	low (_tache5 shr (0+16))
   950   00150A  6E2B               	movwf	(_fptr+2)^0,c
   951                           
   952                           ; BSR set to: 0
   953   00150C  C029  F02E         	movff	_fptr,_val_tos
   954   001510  C02A  F02F         	movff	_fptr+1,_val_tos+1
   955                           
   956                           ; BSR set to: 0
   957   001514  0E2E               	movlw	low _val_tos
   958   001516  6E2C               	movwf	_puc^0,c
   959   001518  0E00               	movlw	high _val_tos
   960   00151A  6E2D               	movwf	(_puc+1)^0,c
   961                           
   962                           ; BSR set to: 0
   963   00151C  C02C  FFD9         	movff	_puc,fsr2l
   964   001520  C02D  FFDA         	movff	_puc+1,fsr2h
   965   001524  50DF               	movf	indf2,w,c
   966   001526  6EFD               	movwf	253,c	;volatile
   967                           
   968                           ; BSR set to: 0
   969   001528  4A2C               	infsnz	_puc^0,f,c
   970   00152A  2A2D               	incf	(_puc+1)^0,f,c
   971                           
   972                           ; BSR set to: 0
   973   00152C  C02C  FFD9         	movff	_puc,fsr2l
   974   001530  C02D  FFDA         	movff	_puc+1,fsr2h
   975   001534  50DF               	movf	indf2,w,c
   976   001536  6EFE               	movwf	254,c	;volatile
   977                           
   978                           ; BSR set to: 0
   979   001538  4A2C               	infsnz	_puc^0,f,c
   980   00153A  2A2D               	incf	(_puc+1)^0,f,c
   981                           
   982                           ; BSR set to: 0
   983   00153C  C02C  FFD9         	movff	_puc,fsr2l
   984   001540  C02D  FFDA         	movff	_puc+1,fsr2h
   985   001544  50DF               	movf	indf2,w,c
   986   001546  6EFF               	movwf	255,c	;volatile
   987                           
   988                           ; BSR set to: 0
   989                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   990   001548  0E1B               	movlw	27
   991   00154A  6EFC               	movwf	252,c	;volatile
   992   00154C  0E78               	movlw	low _tache6
   993   00154E  6E29               	movwf	_fptr^0,c
   994   001550  0E1F               	movlw	high _tache6
   995   001552  6E2A               	movwf	(_fptr+1)^0,c
   996   001554  0E00               	movlw	low (_tache6 shr (0+16))
   997   001556  6E2B               	movwf	(_fptr+2)^0,c
   998                           
   999                           ; BSR set to: 0
  1000   001558  C029  F02E         	movff	_fptr,_val_tos
  1001   00155C  C02A  F02F         	movff	_fptr+1,_val_tos+1
  1002   001560  0E2E               	movlw	low _val_tos
  1003   001562  6E2C               	movwf	_puc^0,c
  1004   001564  0E00               	movlw	high _val_tos
  1005   001566  6E2D               	movwf	(_puc+1)^0,c
  1006                           
  1007                           ; BSR set to: 0
  1008   001568  C02C  FFD9         	movff	_puc,fsr2l
  1009   00156C  C02D  FFDA         	movff	_puc+1,fsr2h
  1010   001570  50DF               	movf	indf2,w,c
  1011   001572  6EFD               	movwf	253,c	;volatile
  1012                           
  1013                           ; BSR set to: 0
  1014   001574  4A2C               	infsnz	_puc^0,f,c
  1015   001576  2A2D               	incf	(_puc+1)^0,f,c
  1016                           
  1017                           ; BSR set to: 0
  1018   001578  C02C  FFD9         	movff	_puc,fsr2l
  1019   00157C  C02D  FFDA         	movff	_puc+1,fsr2h
  1020   001580  50DF               	movf	indf2,w,c
  1021   001582  6EFE               	movwf	254,c	;volatile
  1022                           
  1023                           ; BSR set to: 0
  1024   001584  4A2C               	infsnz	_puc^0,f,c
  1025   001586  2A2D               	incf	(_puc+1)^0,f,c
  1026                           
  1027                           ; BSR set to: 0
  1028   001588  C02C  FFD9         	movff	_puc,fsr2l
  1029   00158C  C02D  FFDA         	movff	_puc+1,fsr2h
  1030   001590  50DF               	movf	indf2,w,c
  1031   001592  6EFF               	movwf	255,c	;volatile
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;systeme.c: 162: STKPTR=temp;
  1035   001594  C01C  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1036                           
  1037                           ; BSR set to: 0
  1038                           ;systeme.c: 165: STKPTR_T1=2;
  1039   001598  0E02               	movlw	2
  1040   00159A  0101               	movlb	1	; () banked
  1041   00159C  6F03               	movwf	3,b
  1042                           
  1043                           ; BSR set to: 1
  1044                           ;systeme.c: 166: STKPTR_T2=7;
  1045   00159E  0E07               	movlw	7
  1046   0015A0  0102               	movlb	2	; () banked
  1047   0015A2  6F03               	movwf	3,b
  1048                           
  1049                           ; BSR set to: 2
  1050                           ;systeme.c: 167: STKPTR_T3=12;
  1051   0015A4  0E0C               	movlw	12
  1052   0015A6  0103               	movlb	3	; () banked
  1053   0015A8  6F03               	movwf	3,b
  1054                           
  1055                           ; BSR set to: 3
  1056                           ;systeme.c: 168: STKPTR_T4=17;
  1057   0015AA  0E11               	movlw	17
  1058   0015AC  0104               	movlb	4	; () banked
  1059   0015AE  6F03               	movwf	3,b
  1060                           
  1061                           ; BSR set to: 4
  1062                           ;systeme.c: 169: STKPTR_T5=22;
  1063   0015B0  0E16               	movlw	22
  1064   0015B2  0105               	movlb	5	; () banked
  1065   0015B4  6F03               	movwf	3,b
  1066                           
  1067                           ; BSR set to: 5
  1068                           ;systeme.c: 170: STKPTR_T6=27;
  1069   0015B6  0E1B               	movlw	27
  1070   0015B8  0106               	movlb	6	; () banked
  1071   0015BA  6F03               	movwf	3,b
  1072                           
  1073                           ; BSR set to: 6
  1074                           ;systeme.c: 173: Tick_Count=0;
  1075   0015BC  0E00               	movlw	0
  1076   0015BE  0100               	movlb	0	; () banked
  1077   0015C0  6F72               	movwf	114,b
  1078   0015C2  0E00               	movlw	0
  1079   0015C4  6F71               	movwf	113,b
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;systeme.c: 175: T0CON=0x01;
  1083   0015C6  0E01               	movlw	1
  1084   0015C8  6ED5               	movwf	213,c	;volatile
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;systeme.c: 176: T0IE=1;
  1088   0015CA  8AF2               	bsf	4082,5,c	;volatile
  1089                           
  1090                           ; BSR set to: 0
  1091   0015CC  0012               	return		;funcret
  1092   0015CE                     __end_of_initialisation_du_systeme:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _initialisation_des_ports *****************
  1096 ;; Defined at:
  1097 ;;		line 23 in file "main.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;		None
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  1    wreg      void 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;Total ram usage:        0 bytes
  1116 ;; Hardware stack levels used: 1
  1117 ;; Hardware stack levels required when called: 6
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text2
  1126   001E4C                     __ptext2:
  1127                           	callstack 0
  1128   001E4C                     _initialisation_des_ports:
  1129                           	callstack 24
  1130                           
  1131                           ;main.c: 26: MEMCON=0xA0;
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;incstack = 0
  1135   001E4C  0EA0               	movlw	160
  1136   001E4E  010F               	movlb	15	; () banked
  1137   001E50  6F26               	movwf	38,b	;volatile
  1138                           
  1139                           ;main.c: 29: ANCON0=0x00;
  1140   001E52  0E00               	movlw	0
  1141   001E54  6F25               	movwf	37,b	;volatile
  1142                           
  1143                           ;main.c: 30: ANCON1=0x00;
  1144   001E56  0E00               	movlw	0
  1145   001E58  6F24               	movwf	36,b	;volatile
  1146                           
  1147                           ;main.c: 31: ANCON2=0x00;
  1148   001E5A  0E00               	movlw	0
  1149   001E5C  6F23               	movwf	35,b	;volatile
  1150                           
  1151                           ; BSR set to: 15
  1152                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1153   001E5E  8125               	bsf	37,0,b	;volatile
  1154                           
  1155                           ; BSR set to: 15
  1156                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1157   001E60  8325               	bsf	37,1,b	;volatile
  1158                           
  1159                           ; BSR set to: 15
  1160                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1161   001E62  8525               	bsf	37,2,b	;volatile
  1162                           
  1163                           ; BSR set to: 15
  1164                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1165   001E64  8725               	bsf	37,3,b	;volatile
  1166                           
  1167                           ; BSR set to: 15
  1168                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1169   001E66  8524               	bsf	36,2,b	;volatile
  1170                           
  1171                           ; BSR set to: 15
  1172                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1173   001E68  8724               	bsf	36,3,b	;volatile
  1174                           
  1175                           ; BSR set to: 15
  1176                           ;main.c: 41: LATCbits.LATC2=1;
  1177   001E6A  848B               	bsf	139,2,c	;volatile
  1178                           
  1179                           ; BSR set to: 15
  1180                           ;main.c: 42: LATCbits.LATC1=1;
  1181   001E6C  828B               	bsf	139,1,c	;volatile
  1182                           
  1183                           ; BSR set to: 15
  1184                           ;main.c: 43: LATGbits.LATG0=1;
  1185   001E6E  808F               	bsf	143,0,c	;volatile
  1186                           
  1187                           ; BSR set to: 15
  1188                           ;main.c: 46: TRISCbits.TRISC2=0;
  1189   001E70  9494               	bcf	148,2,c	;volatile
  1190                           
  1191                           ; BSR set to: 15
  1192                           ;main.c: 47: TRISCbits.TRISC1=0;
  1193   001E72  9294               	bcf	148,1,c	;volatile
  1194                           
  1195                           ; BSR set to: 15
  1196                           ;main.c: 48: TRISGbits.TRISG0=0;
  1197   001E74  9098               	bcf	152,0,c	;volatile
  1198                           
  1199                           ; BSR set to: 15
  1200                           ;main.c: 49: TRISGbits.TRISG3=0;
  1201   001E76  9698               	bcf	152,3,c	;volatile
  1202                           
  1203                           ; BSR set to: 15
  1204                           ;main.c: 50: TRISGbits.TRISG4=0;
  1205   001E78  9898               	bcf	152,4,c	;volatile
  1206                           
  1207                           ; BSR set to: 15
  1208                           ;main.c: 51: TRISDbits.TRISD2=0;
  1209   001E7A  9495               	bcf	149,2,c	;volatile
  1210                           
  1211                           ; BSR set to: 15
  1212                           ;main.c: 52: TRISDbits.TRISD3=0;
  1213   001E7C  9695               	bcf	149,3,c	;volatile
  1214                           
  1215                           ; BSR set to: 15
  1216                           ;main.c: 55: INTCON2bits.RBPU=0;
  1217   001E7E  9EF1               	bcf	241,7,c	;volatile
  1218                           
  1219                           ; BSR set to: 15
  1220                           ;main.c: 56: PADCFG1bits.REPU=1;
  1221   001E80  8D53               	bsf	83,6,b	;volatile
  1222                           
  1223                           ; BSR set to: 15
  1224   001E82  0012               	return		;funcret
  1225   001E84                     __end_of_initialisation_des_ports:
  1226                           	callstack 0
  1227                           
  1228 ;; *************** function _Init *****************
  1229 ;; Defined at:
  1230 ;;		line 4 in file "semaphore.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;  sem             1  [STACK] unsigned char 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1  [STACK] void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 6
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;;		_tache1
  1256 ;; This function uses a reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text3
  1260   001FA0                     __ptext3:
  1261                           	callstack 0
  1262   001FA0                     _Init:
  1263                           	callstack 21
  1264                           
  1265                           ;semaphore.c: 6: switch (sem)
  1266                           
  1267                           ; BSR set to: 15
  1268                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1269                           ;incstack = 0
  1270   001FA0  D006               	goto	l2569
  1271   001FA2                     l2565:
  1272                           
  1273                           ;semaphore.c: 9: Val_sem_cna=1;
  1274   001FA2  0E01               	movlw	1
  1275   001FA4  6E34               	movwf	_Val_sem_cna^0,c
  1276                           
  1277                           ;semaphore.c: 10: break;
  1278   001FA6  D00B               	goto	l1387
  1279   001FA8                     l2567:
  1280                           
  1281                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1282   001FA8  0E01               	movlw	1
  1283   001FAA  6E33               	movwf	_Val_sem_rxtx^0,c
  1284                           
  1285                           ;semaphore.c: 13: break;
  1286   001FAC  D008               	goto	l1387
  1287   001FAE                     l2569:
  1288                           
  1289                           ;stkvar	Init@sem @ sp[(0)+-1]
  1290   001FAE  0EFF               	movlw	-1
  1291   001FB0  50E3               	movf	plusw1,w,c
  1292                           
  1293                           ; Switch size 1, requested type "simple"
  1294                           ; Number of cases is 2, Range of values is 1 to 2
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte            7     4 (average)
  1298                           ;	Chosen strategy is simple_byte
  1299   001FB2  0A01               	xorlw	1	; case 1
  1300   001FB4  B4D8               	btfsc	status,2,c
  1301   001FB6  D7F5               	goto	l2565
  1302   001FB8  0A03               	xorlw	3	; case 2
  1303   001FBA  B4D8               	btfsc	status,2,c
  1304   001FBC  D7F5               	goto	l2567
  1305   001FBE                     l1387:
  1306                           
  1307                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1308   001FBE  52E5               	movf	postdec1,f,c
  1309   001FC0  0012               	return		;funcret
  1310   001FC2                     __end_of_Init:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _fonction_d_interruption *****************
  1314 ;; Defined at:
  1315 ;;		line 17 in file "systeme.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;		None
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1332 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1333 ;;Total ram usage:       10 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 5
  1336 ;; This function calls:
  1337 ;;		_tache1
  1338 ;;		_tache2
  1339 ;;		_tache3
  1340 ;;		_tache4
  1341 ;;		_tache5
  1342 ;;		_tache6
  1343 ;; This function is called by:
  1344 ;;		Interrupt level 2
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	intcode
  1349   000008                     __pintcode:
  1350                           	callstack 0
  1351   000008                     _fonction_d_interruption:
  1352                           	callstack 24
  1353                           
  1354                           ;incstack = 0
  1355   000008  CFE1 F012          	movff	fsr1l,??_fonction_d_interruption
  1356   00000C  CFE2 F013          	movff	fsr1h,??_fonction_d_interruption+1
  1357   000010  CFD9 F014          	movff	fsr2l,??_fonction_d_interruption+2
  1358   000014  CFDA F015          	movff	fsr2h,??_fonction_d_interruption+3
  1359   000018  CFF3 F016          	movff	prodl,??_fonction_d_interruption+4
  1360   00001C  CFF4 F017          	movff	prodh,??_fonction_d_interruption+5
  1361   000020  CFF6 F018          	movff	tblptrl,??_fonction_d_interruption+6
  1362   000024  CFF7 F019          	movff	tblptrh,??_fonction_d_interruption+7
  1363   000028  CFF8 F01A          	movff	tblptru,??_fonction_d_interruption+8
  1364   00002C  CFF5 F01B          	movff	tablat,??_fonction_d_interruption+9
  1365   000030  EE1A  F0AC         	lfsr	1,___inthi_sp
  1366                           
  1367                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1368   000034  CFD8 F061          	movff	status,97	;volatile
  1369   000038  0100               	movlb	0	; () banked
  1370   00003A  6F60               	movwf	96,b
  1371                           
  1372                           ; BSR set to: 0
  1373   00003C  CFE0 F062          	movff	bsr,98	;volatile
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1377   000040  CFEA F063          	movff	fsr0h,99	;volatile
  1378                           
  1379                           ; BSR set to: 0
  1380   000044  CFE9 F064          	movff	fsr0l,100	;volatile
  1381                           
  1382                           ; BSR set to: 0
  1383                           ;systeme.c: 24: if(T0IE && T0IF)
  1384   000048  BAF2               	btfsc	4082,5,c	;volatile
  1385                           
  1386                           ; BSR set to: 0
  1387   00004A  A4F2               	btfss	4082,2,c	;volatile
  1388   00004C  D143               	goto	i2l4839
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1392   00004E  0565               	decf	101,w,b
  1393   000050  A4D8               	btfss	status,2,c
  1394   000052  D004               	goto	i2l4539
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1398   000054  0E1B               	movlw	27
  1399   000056  6EFC               	movwf	252,c	;volatile
  1400                           
  1401                           ;systeme.c: 29: DEMARRAGE=0;
  1402   000058  0E00               	movlw	0
  1403   00005A  6F65               	movwf	101,b
  1404   00005C                     i2l4539:
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1408   00005C  C06F FFEA          	movff	111,fsr0h	;volatile
  1409                           
  1410                           ;systeme.c: 35: FSR0L=0;
  1411   000060  0E00               	movlw	0
  1412   000062  6EE9               	movwf	233,c	;volatile
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1416   000064  C060 FFEE          	movff	96,postinc0	;volatile
  1417                           
  1418                           ; BSR set to: 0
  1419   000068  C061 FFEE          	movff	97,postinc0	;volatile
  1420                           
  1421                           ; BSR set to: 0
  1422   00006C  C062 FFEE          	movff	98,postinc0	;volatile
  1423                           
  1424                           ; BSR set to: 0
  1425   000070  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1429   000074  C063 FFEE          	movff	99,postinc0	;volatile
  1430                           
  1431                           ; BSR set to: 0
  1432   000078  C064 FFEE          	movff	100,postinc0	;volatile
  1433                           
  1434                           ; BSR set to: 0
  1435   00007C  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1436                           
  1437                           ; BSR set to: 0
  1438   000080  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1442   000084  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1443                           
  1444                           ; BSR set to: 0
  1445   000088  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1446                           
  1447                           ; BSR set to: 0
  1448   00008C  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1449                           
  1450                           ; BSR set to: 0
  1451   000090  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1452                           
  1453                           ; BSR set to: 0
  1454                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1455   000094  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1456                           
  1457                           ; BSR set to: 0
  1458   000098  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1459                           
  1460                           ; BSR set to: 0
  1461   00009C  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1462                           
  1463                           ; BSR set to: 0
  1464   0000A0  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1465                           
  1466                           ; BSR set to: 0
  1467                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1468   0000A4  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1469                           
  1470                           ; BSR set to: 0
  1471   0000A8  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1472                           
  1473                           ;systeme.c: 44: FSR1H=0;
  1474   0000AC  0E00               	movlw	0
  1475   0000AE  6EE2               	movwf	226,c	;volatile
  1476                           
  1477                           ;systeme.c: 45: FSR1L=0;
  1478   0000B0  0E00               	movlw	0
  1479   0000B2  6EE1               	movwf	225,c	;volatile
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1483   0000B4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1484                           
  1485                           ; BSR set to: 0
  1486   0000B8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1487                           
  1488                           ; BSR set to: 0
  1489   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1490                           
  1491                           ; BSR set to: 0
  1492   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1493                           
  1494                           ; BSR set to: 0
  1495                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1496   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1497                           
  1498                           ; BSR set to: 0
  1499   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1500                           
  1501                           ; BSR set to: 0
  1502   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1503                           
  1504                           ; BSR set to: 0
  1505   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1506                           
  1507                           ; BSR set to: 0
  1508                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1509   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1510                           
  1511                           ; BSR set to: 0
  1512   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1513                           
  1514                           ; BSR set to: 0
  1515   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1516                           
  1517                           ; BSR set to: 0
  1518   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1522   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1523                           
  1524                           ; BSR set to: 0
  1525   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1526                           
  1527                           ; BSR set to: 0
  1528   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1529                           
  1530                           ; BSR set to: 0
  1531   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1535   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1536                           
  1537                           ; BSR set to: 0
  1538   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1539                           
  1540                           ; BSR set to: 0
  1541   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1542                           
  1543                           ; BSR set to: 0
  1544   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1548   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1549                           
  1550                           ; BSR set to: 0
  1551   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1552                           
  1553                           ; BSR set to: 0
  1554   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1555                           
  1556                           ; BSR set to: 0
  1557   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1558                           
  1559                           ; BSR set to: 0
  1560                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1561   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1562                           
  1563                           ; BSR set to: 0
  1564   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1565                           
  1566                           ; BSR set to: 0
  1567   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1568                           
  1569                           ; BSR set to: 0
  1570   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1574   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1575                           
  1576                           ; BSR set to: 0
  1577   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1578                           
  1579                           ; BSR set to: 0
  1580   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1581                           
  1582                           ; BSR set to: 0
  1583   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1587   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1588                           
  1589                           ; BSR set to: 0
  1590   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1591                           
  1592                           ; BSR set to: 0
  1593   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1594                           
  1595                           ; BSR set to: 0
  1596   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1600   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1601                           
  1602                           ; BSR set to: 0
  1603   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1607                           
  1608                           ; BSR set to: 0
  1609   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1613   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1620                           
  1621                           ; BSR set to: 0
  1622   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1626   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1627                           
  1628                           ; BSR set to: 0
  1629   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1630                           
  1631                           ; BSR set to: 0
  1632   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1633                           
  1634                           ; BSR set to: 0
  1635   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1636                           
  1637                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1638   000174  0E8A               	movlw	138
  1639   000176  6ED7               	movwf	215,c	;volatile
  1640   000178  0ECF               	movlw	207
  1641   00017A  6ED6               	movwf	214,c	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;systeme.c: 63: T0IF=0;
  1645   00017C  94F2               	bcf	4082,2,c	;volatile
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;systeme.c: 65: Tick_Count++;
  1649   00017E  4B71               	infsnz	113,f,b
  1650   000180  2B72               	incf	114,f,b
  1651                           
  1652                           ; BSR set to: 0
  1653                           ;systeme.c: 67: pointeur_de_tache++;
  1654   000182  2B70               	incf	112,f,b
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1658   000184  0E06               	movlw	6
  1659   000186  1970               	xorwf	112,w,b
  1660   000188  A4D8               	btfss	status,2,c
  1661   00018A  D002               	goto	i2l4683
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;systeme.c: 69: pointeur_de_tache=0;
  1665   00018C  0E00               	movlw	0
  1666   00018E  6F70               	movwf	112,b
  1667   000190                     i2l4683:
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1671   000190  0E69               	movlw	105
  1672   000192  2570               	addwf	112,w,b
  1673   000194  6ED9               	movwf	fsr2l,c
  1674   000196  6ADA               	clrf	fsr2h,c
  1675   000198  0E00               	movlw	0
  1676   00019A  22DA               	addwfc	fsr2h,f,c
  1677   00019C  50DF               	movf	indf2,w,c
  1678   00019E  6F6F               	movwf	111,b
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;systeme.c: 75: FSR1H=0;
  1682   0001A0  0E00               	movlw	0
  1683   0001A2  6EE2               	movwf	226,c	;volatile
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;systeme.c: 76: FSR1L=0;
  1687   0001A4  0E00               	movlw	0
  1688   0001A6  6EE1               	movwf	225,c	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;systeme.c: 77: FSR0H=tache_active;
  1692   0001A8  C06F FFEA          	movff	111,fsr0h	;volatile
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;systeme.c: 78: FSR0L=18;
  1696   0001AC  0E12               	movlw	18
  1697   0001AE  6EE9               	movwf	233,c	;volatile
  1698                           
  1699                           ; BSR set to: 0
  1700                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1701   0001B0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704   0001B4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1708                           
  1709                           ; BSR set to: 0
  1710   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1714   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1715                           
  1716                           ; BSR set to: 0
  1717   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1718                           
  1719                           ; BSR set to: 0
  1720   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1721                           
  1722                           ; BSR set to: 0
  1723   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1724                           
  1725                           ; BSR set to: 0
  1726                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1727   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1731                           
  1732                           ; BSR set to: 0
  1733   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1734                           
  1735                           ; BSR set to: 0
  1736   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1737                           
  1738                           ; BSR set to: 0
  1739                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1740   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1744                           
  1745                           ; BSR set to: 0
  1746   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1747                           
  1748                           ; BSR set to: 0
  1749   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1753   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1754                           
  1755                           ; BSR set to: 0
  1756   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1757                           
  1758                           ; BSR set to: 0
  1759   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1760                           
  1761                           ; BSR set to: 0
  1762   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1763                           
  1764                           ; BSR set to: 0
  1765                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1766   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1767                           
  1768                           ; BSR set to: 0
  1769   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1770                           
  1771                           ; BSR set to: 0
  1772   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1773                           
  1774                           ; BSR set to: 0
  1775   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1779   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1780                           
  1781                           ; BSR set to: 0
  1782   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1783                           
  1784                           ; BSR set to: 0
  1785   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1786                           
  1787                           ; BSR set to: 0
  1788   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1792   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1793                           
  1794                           ; BSR set to: 0
  1795   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1796                           
  1797                           ; BSR set to: 0
  1798   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1799                           
  1800                           ; BSR set to: 0
  1801   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1802                           
  1803                           ; BSR set to: 0
  1804                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1805   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1806                           
  1807                           ; BSR set to: 0
  1808   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1809                           
  1810                           ; BSR set to: 0
  1811   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1812                           
  1813                           ; BSR set to: 0
  1814   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1815                           
  1816                           ; BSR set to: 0
  1817                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1818   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1819                           
  1820                           ; BSR set to: 0
  1821   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1822                           
  1823                           ; BSR set to: 0
  1824   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1825                           
  1826                           ; BSR set to: 0
  1827   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1831   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1835                           
  1836                           ; BSR set to: 0
  1837   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1838                           
  1839                           ; BSR set to: 0
  1840   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1844   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1848                           
  1849                           ; BSR set to: 0
  1850   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1851                           
  1852                           ; BSR set to: 0
  1853   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;systeme.c: 96: FSR0H=tache_active;
  1857   000270  C06F FFEA          	movff	111,fsr0h	;volatile
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;systeme.c: 97: FSR0L=0;
  1861   000274  0E00               	movlw	0
  1862   000276  6EE9               	movwf	233,c	;volatile
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1866   000278  CFEE F060          	movff	postinc0,96	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869   00027C  CFEE F061          	movff	postinc0,97	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872   000280  CFEE F062          	movff	postinc0,98	;volatile
  1873                           
  1874                           ; BSR set to: 0
  1875   000284  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  1879   000288  CFEE F063          	movff	postinc0,99	;volatile
  1880                           
  1881                           ; BSR set to: 0
  1882   00028C  CFEE F064          	movff	postinc0,100	;volatile
  1883                           
  1884                           ; BSR set to: 0
  1885   000290  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  1886                           
  1887                           ; BSR set to: 0
  1888   000294  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  1892   000298  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  1893                           
  1894                           ; BSR set to: 0
  1895   00029C  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  1896                           
  1897                           ; BSR set to: 0
  1898   0002A0  CFEE FFF4          	movff	postinc0,prodh	;volatile
  1899                           
  1900                           ; BSR set to: 0
  1901   0002A4  CFEE FFF3          	movff	postinc0,prodl	;volatile
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  1905   0002A8  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  1906                           
  1907                           ; BSR set to: 0
  1908   0002AC  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  1909                           
  1910                           ; BSR set to: 0
  1911   0002B0  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  1912                           
  1913                           ; BSR set to: 0
  1914   0002B4  CFEE FFF5          	movff	postinc0,tablat	;volatile
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  1918   0002B8  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  1919                           
  1920                           ; BSR set to: 0
  1921   0002BC  CFEE FFFA          	movff	postinc0,pclath	;volatile
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  1925   0002C0  C064 FFE9          	movff	100,fsr0l	;volatile
  1926                           
  1927                           ; BSR set to: 0
  1928   0002C4  C063 FFEA          	movff	99,fsr0h	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931   0002C8  C062 FFE0          	movff	98,bsr	;volatile
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  1935   0002CC  5160               	movf	96,w,b
  1936                           
  1937                           ; BSR set to: 0
  1938   0002CE  C061 FFD8          	movff	97,status	;volatile
  1939   0002D2  0010               	retfie		;# 
  1940   0002D4                     i2l4839:
  1941                           
  1942                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  1943   0002D4  C064 FFE9          	movff	100,fsr0l	;volatile
  1944   0002D8  C063 FFEA          	movff	99,fsr0h	;volatile
  1945   0002DC  C062 FFE0          	movff	98,bsr	;volatile
  1946                           
  1947                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  1948   0002E0  0100               	movlb	0	; () banked
  1949   0002E2  5160               	movf	96,w,b
  1950                           
  1951                           ; BSR set to: 0
  1952   0002E4  C061 FFD8          	movff	97,status	;volatile
  1953   0002E8  0010               	retfie		;# 
  1954                           
  1955                           ;systeme.c: 123: tache1();
  1956   0002EA  EC4A  F008         	call	_tache1	;wreg free
  1957                           
  1958                           ;systeme.c: 124: tache2();
  1959   0002EE  ECE7  F00A         	call	_tache2	;wreg free
  1960                           
  1961                           ;systeme.c: 125: tache3();
  1962   0002F2  EC49  F00D         	call	_tache3	;wreg free
  1963                           
  1964                           ;systeme.c: 126: tache4();
  1965   0002F6  ECD4  F00B         	call	_tache4	;wreg free
  1966                           
  1967                           ;systeme.c: 127: tache5();
  1968   0002FA  EC61  F00B         	call	_tache5	;wreg free
  1969                           
  1970                           ;systeme.c: 128: tache6();
  1971   0002FE  ECBC  F00F         	call	_tache6	;wreg free
  1972   000302  C01B  FFF5         	movff	??_fonction_d_interruption+9,tablat
  1973   000306  C01A  FFF8         	movff	??_fonction_d_interruption+8,tblptru
  1974   00030A  C019  FFF7         	movff	??_fonction_d_interruption+7,tblptrh
  1975   00030E  C018  FFF6         	movff	??_fonction_d_interruption+6,tblptrl
  1976   000312  C017  FFF4         	movff	??_fonction_d_interruption+5,prodh
  1977   000316  C016  FFF3         	movff	??_fonction_d_interruption+4,prodl
  1978   00031A  C015  FFDA         	movff	??_fonction_d_interruption+3,fsr2h
  1979   00031E  C014  FFD9         	movff	??_fonction_d_interruption+2,fsr2l
  1980   000322  C013  FFE2         	movff	??_fonction_d_interruption+1,fsr1h
  1981   000326  C012  FFE1         	movff	??_fonction_d_interruption,fsr1l
  1982   00032A  0011               	retfie		f
  1983   00032C                     __end_of_fonction_d_interruption:
  1984                           	callstack 0
  1985                           
  1986 ;; *************** function _tache6 *****************
  1987 ;; Defined at:
  1988 ;;		line 3 in file "T6.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  n               1    8[COMRAM] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  1    wreg      void 
  1995 ;; Registers used:
  1996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;Total ram usage:        1 bytes
  2007 ;; Hardware stack levels used: 1
  2008 ;; Hardware stack levels required when called: 2
  2009 ;; This function calls:
  2010 ;;		_lecture_normale
  2011 ;; This function is called by:
  2012 ;;		_fonction_d_interruption
  2013 ;;		_initialisation_du_systeme
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text5
  2018   001F78                     __ptext5:
  2019                           	callstack 0
  2020   001F78                     _tache6:
  2021                           	callstack 26
  2022                           
  2023                           ;T6.c: 7: {;T6.c: 8: n=lecture_normale(badge);
  2024                           
  2025                           ;incstack = 0
  2026                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2027   001F78  0E75               	movlw	117
  2028   001F7A  6E03               	movwf	lecture_normale@stid_id^0,c
  2029   001F7C  0E00               	movlw	0
  2030   001F7E  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2031   001F80  ECF8  F00C         	call	_lecture_normale	;wreg free
  2032   001F84  6E09               	movwf	tache6@n^0,c
  2033                           
  2034                           ;T6.c: 9: if (n>0)
  2035   001F86  5009               	movf	tache6@n^0,w,c
  2036   001F88  B4D8               	btfsc	status,2,c
  2037   001F8A  D006               	goto	i2l4503
  2038                           
  2039                           ;T6.c: 10: {;T6.c: 11: if(n<10)
  2040   001F8C  0E0A               	movlw	10
  2041   001F8E  6009               	cpfslt	tache6@n^0,c
  2042   001F90  D003               	goto	i2l4503
  2043                           
  2044                           ;T6.c: 12: {;T6.c: 13: n_octet_badge=n;
  2045   001F92  C009  F07F         	movff	tache6@n,127
  2046                           
  2047                           ;T6.c: 14: }
  2048   001F96  D7F0               	goto	__ptext5
  2049   001F98                     i2l4503:
  2050                           
  2051                           ;T6.c: 15: else;T6.c: 16: {;T6.c: 17: n_octet_badge=0;
  2052   001F98  0E00               	movlw	0
  2053   001F9A  0100               	movlb	0	; () banked
  2054   001F9C  6F7F               	movwf	127,b
  2055   001F9E  D7EC               	goto	__ptext5
  2056   001FA0                     __end_of_tache6:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _lecture_normale *****************
  2060 ;; Defined at:
  2061 ;;		line 5 in file "stid.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2064 ;;		 -> badge(10), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  octet           1    7[COMRAM] unsigned char 
  2067 ;;  n_bit           1    6[COMRAM] unsigned char 
  2068 ;;  n_octet         1    5[COMRAM] unsigned char 
  2069 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      unsigned char 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        6 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 1
  2086 ;; This function calls:
  2087 ;;		_stid_delai_us
  2088 ;; This function is called by:
  2089 ;;		_tache6
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text6
  2094   0019F0                     __ptext6:
  2095                           	callstack 0
  2096   0019F0                     _lecture_normale:
  2097                           	callstack 26
  2098                           
  2099                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;incstack = 0
  2103   0019F0  8295               	bsf	149,1,c	;volatile
  2104                           
  2105                           ;stid.c: 10: LATDbits.LATD3=0;
  2106   0019F2  968C               	bcf	140,3,c	;volatile
  2107                           
  2108                           ;stid.c: 11: LATDbits.LATD2=0;
  2109   0019F4  948C               	bcf	140,2,c	;volatile
  2110                           
  2111                           ;stid.c: 12: stid_delai_us(100);
  2112   0019F6  0E00               	movlw	0
  2113   0019F8  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2114   0019FA  0E64               	movlw	100
  2115   0019FC  6E01               	movwf	stid_delai_us@isdu^0,c
  2116   0019FE  EC37  F010         	call	_stid_delai_us	;wreg free
  2117                           
  2118                           ;stid.c: 13: LATDbits.LATD3=1;
  2119   001A02  868C               	bsf	140,3,c	;volatile
  2120                           
  2121                           ;stid.c: 14: temps_attente=0;
  2122   001A04  0E00               	movlw	0
  2123   001A06  6E05               	movwf	lecture_normale@temps_attente^0,c
  2124   001A08                     i2l4069:
  2125                           
  2126                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2127   001A08  0E03               	movlw	3
  2128   001A0A  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2129   001A0C  0EE8               	movlw	232
  2130   001A0E  6E01               	movwf	stid_delai_us@isdu^0,c
  2131   001A10  EC37  F010         	call	_stid_delai_us	;wreg free
  2132                           
  2133                           ;stid.c: 18: temps_attente++;
  2134   001A14  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2135                           
  2136                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2137   001A16  A083               	btfss	131,0,c	;volatile
  2138   001A18  D002               	goto	i2l4077
  2139                           
  2140                           ;stid.c: 20: temps_attente=65;
  2141   001A1A  0E41               	movlw	65
  2142   001A1C  6E05               	movwf	lecture_normale@temps_attente^0,c
  2143   001A1E                     i2l4077:
  2144                           
  2145                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2146   001A1E  0E40               	movlw	64
  2147   001A20  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2148   001A22  D7F2               	goto	i2l4069
  2149                           
  2150                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2151   001A24  A083               	btfss	131,0,c	;volatile
  2152   001A26  D033               	goto	i2l4113
  2153                           
  2154                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2155   001A28  0E00               	movlw	0
  2156   001A2A  6E06               	movwf	lecture_normale@n_octet^0,c
  2157   001A2C                     i2l1498:
  2158                           
  2159                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2160   001A2C  0E00               	movlw	0
  2161   001A2E  6E08               	movwf	lecture_normale@octet^0,c
  2162                           
  2163                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2164   001A30  0E00               	movlw	0
  2165   001A32  6E07               	movwf	lecture_normale@n_bit^0,c
  2166   001A34                     i2l1499:
  2167                           
  2168                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2169   001A34  A283               	btfss	131,1,c	;volatile
  2170   001A36  D003               	goto	i2l1501
  2171                           
  2172                           ;stid.c: 34: octet=(octet|0x01);
  2173   001A38  5008               	movf	lecture_normale@octet^0,w,c
  2174   001A3A  0901               	iorlw	1
  2175   001A3C  6E08               	movwf	lecture_normale@octet^0,c
  2176   001A3E                     i2l1501:
  2177                           
  2178                           ;stid.c: 35: octet=octet<<1;
  2179   001A3E  5008               	movf	lecture_normale@octet^0,w,c
  2180   001A40  2408               	addwf	lecture_normale@octet^0,w,c
  2181   001A42  6E08               	movwf	lecture_normale@octet^0,c
  2182                           
  2183                           ;stid.c: 36: stid_delai_us(100);
  2184   001A44  0E00               	movlw	0
  2185   001A46  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2186   001A48  0E64               	movlw	100
  2187   001A4A  6E01               	movwf	stid_delai_us@isdu^0,c
  2188   001A4C  EC37  F010         	call	_stid_delai_us	;wreg free
  2189                           
  2190                           ;stid.c: 37: LATDbits.LATD2=1;
  2191   001A50  848C               	bsf	140,2,c	;volatile
  2192                           
  2193                           ;stid.c: 38: stid_delai_us(500);
  2194   001A52  0E01               	movlw	1
  2195   001A54  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2196   001A56  0EF4               	movlw	244
  2197   001A58  6E01               	movwf	stid_delai_us@isdu^0,c
  2198   001A5A  EC37  F010         	call	_stid_delai_us	;wreg free
  2199                           
  2200                           ;stid.c: 39: LATDbits.LATD2=0;
  2201   001A5E  948C               	bcf	140,2,c	;volatile
  2202                           
  2203                           ;stid.c: 40: stid_delai_us(400);
  2204   001A60  0E01               	movlw	1
  2205   001A62  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2206   001A64  0E90               	movlw	144
  2207   001A66  6E01               	movwf	stid_delai_us@isdu^0,c
  2208   001A68  EC37  F010         	call	_stid_delai_us	;wreg free
  2209   001A6C  2A07               	incf	lecture_normale@n_bit^0,f,c
  2210   001A6E  0E07               	movlw	7
  2211   001A70  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2212   001A72  D7E0               	goto	i2l1499
  2213                           
  2214                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2215   001A74  5006               	movf	lecture_normale@n_octet^0,w,c
  2216   001A76  2403               	addwf	lecture_normale@stid_id^0,w,c
  2217   001A78  6ED9               	movwf	fsr2l,c
  2218   001A7A  0E00               	movlw	0
  2219   001A7C  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2220   001A7E  6EDA               	movwf	fsr2h,c
  2221   001A80  C008  FFDF         	movff	lecture_normale@octet,indf2
  2222                           
  2223                           ;stid.c: 43: n_octet++;
  2224   001A84  2A06               	incf	lecture_normale@n_octet^0,f,c
  2225                           
  2226                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2227   001A86  B083               	btfsc	131,0,c	;volatile
  2228   001A88  D7D1               	goto	i2l1498
  2229                           
  2230                           ;stid.c: 47: return n_octet;
  2231   001A8A  5006               	movf	lecture_normale@n_octet^0,w,c
  2232   001A8C  0012               	return	
  2233   001A8E                     i2l4113:
  2234                           
  2235                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2236   001A8E  0E00               	movlw	0
  2237   001A90  0012               	return		;funcret
  2238   001A92                     __end_of_lecture_normale:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _stid_delai_us *****************
  2242 ;; Defined at:
  2243 ;;		line 56 in file "stid.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  isdu            2    0[COMRAM] unsigned int 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2, status,0
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2261 ;;Total ram usage:        2 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_lecture_normale
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text7
  2271   00206E                     __ptext7:
  2272                           	callstack 0
  2273   00206E                     _stid_delai_us:
  2274                           	callstack 26
  2275                           
  2276                           ;stid.c: 58: while(isdu>0)
  2277                           
  2278                           ;incstack = 0
  2279   00206E  D006               	goto	i2l3841
  2280   002070                     i2l1508:
  2281                           
  2282                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2283   002070  F000               	nop	
  2284   002072  F000               	nop	
  2285   002074  F000               	nop	
  2286                           
  2287                           ;stid.c: 61: isdu--;
  2288   002076  0601               	decf	stid_delai_us@isdu^0,f,c
  2289   002078  A0D8               	btfss	status,0,c
  2290   00207A  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2291   00207C                     i2l3841:
  2292   00207C  5001               	movf	stid_delai_us@isdu^0,w,c
  2293   00207E  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2294   002080  B4D8               	btfsc	status,2,c
  2295   002082  0012               	return	
  2296   002084  D7F5               	goto	i2l1508
  2297   002086                     __end_of_stid_delai_us:
  2298                           	callstack 0
  2299                           
  2300 ;; *************** function _tache5 *****************
  2301 ;; Defined at:
  2302 ;;		line 3 in file "T5.c"
  2303 ;; Parameters:    Size  Location     Type
  2304 ;;		None
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  a               2    0[COMRAM] unsigned int 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;Total ram usage:        2 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_fonction_d_interruption
  2326 ;;		_initialisation_du_systeme
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text8
  2331   0016C2                     __ptext8:
  2332                           	callstack 0
  2333   0016C2                     _tache5:
  2334                           	callstack 28
  2335                           
  2336                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2337                           
  2338                           ;incstack = 0
  2339                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2340   0016C2  A89E               	btfss	158,4,c	;volatile
  2341   0016C4  D7FE               	goto	__ptext8
  2342   0016C6  0E74               	movlw	116
  2343   0016C8  6EAD               	movwf	173,c	;volatile
  2344   0016CA                     i2l894:
  2345   0016CA  A2AC               	btfss	172,1,c	;volatile
  2346   0016CC  D7FE               	goto	i2l894
  2347   0016CE                     i2u125_40:
  2348   0016CE  A89E               	btfss	158,4,c	;volatile
  2349   0016D0  D7FE               	goto	i2u125_40
  2350   0016D2  0E61               	movlw	97
  2351   0016D4  6EAD               	movwf	173,c	;volatile
  2352   0016D6                     i2l900:
  2353   0016D6  A2AC               	btfss	172,1,c	;volatile
  2354   0016D8  D7FE               	goto	i2l900
  2355   0016DA                     i2u127_40:
  2356   0016DA  A89E               	btfss	158,4,c	;volatile
  2357   0016DC  D7FE               	goto	i2u127_40
  2358   0016DE  0E63               	movlw	99
  2359   0016E0  6EAD               	movwf	173,c	;volatile
  2360   0016E2                     i2l906:
  2361   0016E2  A2AC               	btfss	172,1,c	;volatile
  2362   0016E4  D7FE               	goto	i2l906
  2363   0016E6                     i2u129_40:
  2364   0016E6  A89E               	btfss	158,4,c	;volatile
  2365   0016E8  D7FE               	goto	i2u129_40
  2366   0016EA  0E68               	movlw	104
  2367   0016EC  6EAD               	movwf	173,c	;volatile
  2368   0016EE                     i2l912:
  2369   0016EE  A2AC               	btfss	172,1,c	;volatile
  2370   0016F0  D7FE               	goto	i2l912
  2371   0016F2                     i2u131_40:
  2372   0016F2  A89E               	btfss	158,4,c	;volatile
  2373   0016F4  D7FE               	goto	i2u131_40
  2374   0016F6  0E65               	movlw	101
  2375   0016F8  6EAD               	movwf	173,c	;volatile
  2376   0016FA                     i2l918:
  2377   0016FA  A2AC               	btfss	172,1,c	;volatile
  2378   0016FC  D7FE               	goto	i2l918
  2379   0016FE                     i2u133_40:
  2380   0016FE  A89E               	btfss	158,4,c	;volatile
  2381   001700  D7FE               	goto	i2u133_40
  2382   001702  0E35               	movlw	53
  2383   001704  6EAD               	movwf	173,c	;volatile
  2384   001706                     i2l924:
  2385   001706  A2AC               	btfss	172,1,c	;volatile
  2386   001708  D7FE               	goto	i2l924
  2387   00170A                     i2u135_40:
  2388   00170A  A89E               	btfss	158,4,c	;volatile
  2389   00170C  D7FE               	goto	i2u135_40
  2390   00170E  0E5F               	movlw	95
  2391   001710  6EAD               	movwf	173,c	;volatile
  2392   001712                     i2l930:
  2393   001712  A2AC               	btfss	172,1,c	;volatile
  2394   001714  D7FE               	goto	i2l930
  2395   001716                     i2u137_40:
  2396   001716  A89E               	btfss	158,4,c	;volatile
  2397   001718  D7FE               	goto	i2u137_40
  2398   00171A  0E65               	movlw	101
  2399   00171C  6EAD               	movwf	173,c	;volatile
  2400   00171E                     i2l936:
  2401   00171E  A2AC               	btfss	172,1,c	;volatile
  2402   001720  D7FE               	goto	i2l936
  2403   001722                     i2u139_40:
  2404   001722  A89E               	btfss	158,4,c	;volatile
  2405   001724  D7FE               	goto	i2u139_40
  2406   001726  0E6E               	movlw	110
  2407   001728  6EAD               	movwf	173,c	;volatile
  2408   00172A                     i2l942:
  2409   00172A  A2AC               	btfss	172,1,c	;volatile
  2410   00172C  D7FE               	goto	i2l942
  2411   00172E                     i2u141_40:
  2412   00172E  A89E               	btfss	158,4,c	;volatile
  2413   001730  D7FE               	goto	i2u141_40
  2414   001732  0E5F               	movlw	95
  2415   001734  6EAD               	movwf	173,c	;volatile
  2416   001736                     i2l948:
  2417   001736  A2AC               	btfss	172,1,c	;volatile
  2418   001738  D7FE               	goto	i2l948
  2419   00173A                     i2u143_40:
  2420   00173A  A89E               	btfss	158,4,c	;volatile
  2421   00173C  D7FE               	goto	i2u143_40
  2422   00173E  0E63               	movlw	99
  2423   001740  6EAD               	movwf	173,c	;volatile
  2424   001742                     i2l954:
  2425   001742  A2AC               	btfss	172,1,c	;volatile
  2426   001744  D7FE               	goto	i2l954
  2427   001746                     i2u145_40:
  2428   001746  A89E               	btfss	158,4,c	;volatile
  2429   001748  D7FE               	goto	i2u145_40
  2430   00174A  0E6F               	movlw	111
  2431   00174C  6EAD               	movwf	173,c	;volatile
  2432   00174E                     i2l960:
  2433   00174E  A2AC               	btfss	172,1,c	;volatile
  2434   001750  D7FE               	goto	i2l960
  2435   001752                     i2u147_40:
  2436   001752  A89E               	btfss	158,4,c	;volatile
  2437   001754  D7FE               	goto	i2u147_40
  2438   001756  0E75               	movlw	117
  2439   001758  6EAD               	movwf	173,c	;volatile
  2440   00175A                     i2l966:
  2441   00175A  A2AC               	btfss	172,1,c	;volatile
  2442   00175C  D7FE               	goto	i2l966
  2443   00175E                     i2u149_40:
  2444   00175E  A89E               	btfss	158,4,c	;volatile
  2445   001760  D7FE               	goto	i2u149_40
  2446   001762  0E72               	movlw	114
  2447   001764  6EAD               	movwf	173,c	;volatile
  2448   001766                     i2l972:
  2449   001766  A2AC               	btfss	172,1,c	;volatile
  2450   001768  D7FE               	goto	i2l972
  2451   00176A                     i2u151_40:
  2452   00176A  A89E               	btfss	158,4,c	;volatile
  2453   00176C  D7FE               	goto	i2u151_40
  2454   00176E  0E73               	movlw	115
  2455   001770  6EAD               	movwf	173,c	;volatile
  2456   001772                     i2l978:
  2457   001772  A2AC               	btfss	172,1,c	;volatile
  2458   001774  D7FE               	goto	i2l978
  2459                           
  2460                           ;T5.c: 28: for (a=0;a<65000;a++)
  2461   001776  0E00               	movlw	0
  2462   001778  6E02               	movwf	(tache5@a+1)^0,c
  2463   00177A  0E00               	movlw	0
  2464   00177C  6E01               	movwf	tache5@a^0,c
  2465   00177E                     i2l3331:
  2466                           
  2467                           ;T5.c: 29: ;
  2468   00177E  4A01               	infsnz	tache5@a^0,f,c
  2469   001780  2A02               	incf	(tache5@a+1)^0,f,c
  2470   001782  0EE8               	movlw	232
  2471   001784  5C01               	subwf	tache5@a^0,w,c
  2472   001786  0EFD               	movlw	253
  2473   001788  5802               	subwfb	(tache5@a+1)^0,w,c
  2474   00178A  A0D8               	btfss	status,0,c
  2475   00178C  D7F8               	goto	i2l3331
  2476                           
  2477                           ;T5.c: 30: for (a=0;a<65000;a++)
  2478   00178E  0E00               	movlw	0
  2479   001790  6E02               	movwf	(tache5@a+1)^0,c
  2480   001792  0E00               	movlw	0
  2481   001794  6E01               	movwf	tache5@a^0,c
  2482   001796                     i2l3341:
  2483                           
  2484                           ;T5.c: 31: ;
  2485   001796  4A01               	infsnz	tache5@a^0,f,c
  2486   001798  2A02               	incf	(tache5@a+1)^0,f,c
  2487   00179A  0EE8               	movlw	232
  2488   00179C  5C01               	subwf	tache5@a^0,w,c
  2489   00179E  0EFD               	movlw	253
  2490   0017A0  5802               	subwfb	(tache5@a+1)^0,w,c
  2491   0017A2  B0D8               	btfsc	status,0,c
  2492   0017A4  D78E               	goto	__ptext8
  2493   0017A6  D7F7               	goto	i2l3341
  2494   0017A8                     __end_of_tache5:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _tache4 *****************
  2498 ;; Defined at:
  2499 ;;		line 3 in file "T4.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  a               2    0[COMRAM] unsigned int 
  2504 ;; Return value:  Size  Location     Type
  2505 ;;                  1    wreg      void 
  2506 ;; Registers used:
  2507 ;;		wreg, status,2, status,0
  2508 ;; Tracked objects:
  2509 ;;		On entry : 0/0
  2510 ;;		On exit  : 0/0
  2511 ;;		Unchanged: 0/0
  2512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;Total ram usage:        2 bytes
  2518 ;; Hardware stack levels used: 1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_fonction_d_interruption
  2523 ;;		_initialisation_du_systeme
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text9
  2528   0017A8                     __ptext9:
  2529                           	callstack 0
  2530   0017A8                     _tache4:
  2531                           	callstack 28
  2532                           
  2533                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2534                           
  2535                           ;incstack = 0
  2536                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2537   0017A8  A89E               	btfss	158,4,c	;volatile
  2538   0017AA  D7FE               	goto	__ptext9
  2539   0017AC  0E54               	movlw	84
  2540   0017AE  6EAD               	movwf	173,c	;volatile
  2541   0017B0                     i2l718:
  2542   0017B0  A2AC               	btfss	172,1,c	;volatile
  2543   0017B2  D7FE               	goto	i2l718
  2544   0017B4                     i2u94_40:
  2545   0017B4  A89E               	btfss	158,4,c	;volatile
  2546   0017B6  D7FE               	goto	i2u94_40
  2547   0017B8  0E41               	movlw	65
  2548   0017BA  6EAD               	movwf	173,c	;volatile
  2549   0017BC                     i2l724:
  2550   0017BC  A2AC               	btfss	172,1,c	;volatile
  2551   0017BE  D7FE               	goto	i2l724
  2552   0017C0                     i2u96_40:
  2553   0017C0  A89E               	btfss	158,4,c	;volatile
  2554   0017C2  D7FE               	goto	i2u96_40
  2555   0017C4  0E43               	movlw	67
  2556   0017C6  6EAD               	movwf	173,c	;volatile
  2557   0017C8                     i2l730:
  2558   0017C8  A2AC               	btfss	172,1,c	;volatile
  2559   0017CA  D7FE               	goto	i2l730
  2560   0017CC                     i2u98_40:
  2561   0017CC  A89E               	btfss	158,4,c	;volatile
  2562   0017CE  D7FE               	goto	i2u98_40
  2563   0017D0  0E48               	movlw	72
  2564   0017D2  6EAD               	movwf	173,c	;volatile
  2565   0017D4                     i2l736:
  2566   0017D4  A2AC               	btfss	172,1,c	;volatile
  2567   0017D6  D7FE               	goto	i2l736
  2568   0017D8                     i2u100_40:
  2569   0017D8  A89E               	btfss	158,4,c	;volatile
  2570   0017DA  D7FE               	goto	i2u100_40
  2571   0017DC  0E45               	movlw	69
  2572   0017DE  6EAD               	movwf	173,c	;volatile
  2573   0017E0                     i2l742:
  2574   0017E0  A2AC               	btfss	172,1,c	;volatile
  2575   0017E2  D7FE               	goto	i2l742
  2576   0017E4                     i2u102_40:
  2577   0017E4  A89E               	btfss	158,4,c	;volatile
  2578   0017E6  D7FE               	goto	i2u102_40
  2579   0017E8  0E34               	movlw	52
  2580   0017EA  6EAD               	movwf	173,c	;volatile
  2581   0017EC                     i2l748:
  2582   0017EC  A2AC               	btfss	172,1,c	;volatile
  2583   0017EE  D7FE               	goto	i2l748
  2584   0017F0                     i2u104_40:
  2585   0017F0  A89E               	btfss	158,4,c	;volatile
  2586   0017F2  D7FE               	goto	i2u104_40
  2587   0017F4  0E5F               	movlw	95
  2588   0017F6  6EAD               	movwf	173,c	;volatile
  2589   0017F8                     i2l754:
  2590   0017F8  A2AC               	btfss	172,1,c	;volatile
  2591   0017FA  D7FE               	goto	i2l754
  2592   0017FC                     i2u106_40:
  2593   0017FC  A89E               	btfss	158,4,c	;volatile
  2594   0017FE  D7FE               	goto	i2u106_40
  2595   001800  0E45               	movlw	69
  2596   001802  6EAD               	movwf	173,c	;volatile
  2597   001804                     i2l760:
  2598   001804  A2AC               	btfss	172,1,c	;volatile
  2599   001806  D7FE               	goto	i2l760
  2600   001808                     i2u108_40:
  2601   001808  A89E               	btfss	158,4,c	;volatile
  2602   00180A  D7FE               	goto	i2u108_40
  2603   00180C  0E4E               	movlw	78
  2604   00180E  6EAD               	movwf	173,c	;volatile
  2605   001810                     i2l766:
  2606   001810  A2AC               	btfss	172,1,c	;volatile
  2607   001812  D7FE               	goto	i2l766
  2608   001814                     i2u110_40:
  2609   001814  A89E               	btfss	158,4,c	;volatile
  2610   001816  D7FE               	goto	i2u110_40
  2611   001818  0E5F               	movlw	95
  2612   00181A  6EAD               	movwf	173,c	;volatile
  2613   00181C                     i2l772:
  2614   00181C  A2AC               	btfss	172,1,c	;volatile
  2615   00181E  D7FE               	goto	i2l772
  2616   001820                     i2u112_40:
  2617   001820  A89E               	btfss	158,4,c	;volatile
  2618   001822  D7FE               	goto	i2u112_40
  2619   001824  0E43               	movlw	67
  2620   001826  6EAD               	movwf	173,c	;volatile
  2621   001828                     i2l778:
  2622   001828  A2AC               	btfss	172,1,c	;volatile
  2623   00182A  D7FE               	goto	i2l778
  2624   00182C                     i2u114_40:
  2625   00182C  A89E               	btfss	158,4,c	;volatile
  2626   00182E  D7FE               	goto	i2u114_40
  2627   001830  0E4F               	movlw	79
  2628   001832  6EAD               	movwf	173,c	;volatile
  2629   001834                     i2l784:
  2630   001834  A2AC               	btfss	172,1,c	;volatile
  2631   001836  D7FE               	goto	i2l784
  2632   001838                     i2u116_40:
  2633   001838  A89E               	btfss	158,4,c	;volatile
  2634   00183A  D7FE               	goto	i2u116_40
  2635   00183C  0E55               	movlw	85
  2636   00183E  6EAD               	movwf	173,c	;volatile
  2637   001840                     i2l790:
  2638   001840  A2AC               	btfss	172,1,c	;volatile
  2639   001842  D7FE               	goto	i2l790
  2640   001844                     i2u118_40:
  2641   001844  A89E               	btfss	158,4,c	;volatile
  2642   001846  D7FE               	goto	i2u118_40
  2643   001848  0E52               	movlw	82
  2644   00184A  6EAD               	movwf	173,c	;volatile
  2645   00184C                     i2l796:
  2646   00184C  A2AC               	btfss	172,1,c	;volatile
  2647   00184E  D7FE               	goto	i2l796
  2648   001850                     i2u120_40:
  2649   001850  A89E               	btfss	158,4,c	;volatile
  2650   001852  D7FE               	goto	i2u120_40
  2651   001854  0E53               	movlw	83
  2652   001856  6EAD               	movwf	173,c	;volatile
  2653   001858                     i2l802:
  2654   001858  A2AC               	btfss	172,1,c	;volatile
  2655   00185A  D7FE               	goto	i2l802
  2656                           
  2657                           ;T4.c: 28: for (a=0;a<65000;a++)
  2658   00185C  0E00               	movlw	0
  2659   00185E  6E02               	movwf	(tache4@a+1)^0,c
  2660   001860  0E00               	movlw	0
  2661   001862  6E01               	movwf	tache4@a^0,c
  2662   001864                     i2l3291:
  2663                           
  2664                           ;T4.c: 29: ;
  2665   001864  4A01               	infsnz	tache4@a^0,f,c
  2666   001866  2A02               	incf	(tache4@a+1)^0,f,c
  2667   001868  0EE8               	movlw	232
  2668   00186A  5C01               	subwf	tache4@a^0,w,c
  2669   00186C  0EFD               	movlw	253
  2670   00186E  5802               	subwfb	(tache4@a+1)^0,w,c
  2671   001870  B0D8               	btfsc	status,0,c
  2672   001872  D79A               	goto	__ptext9
  2673   001874  D7F7               	goto	i2l3291
  2674   001876                     __end_of_tache4:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _tache3 *****************
  2678 ;; Defined at:
  2679 ;;		line 3 in file "T3.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  1    wreg      void 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; This function calls:
  2700 ;;		Nothing
  2701 ;; This function is called by:
  2702 ;;		_fonction_d_interruption
  2703 ;;		_initialisation_du_systeme
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text10
  2708   001A92                     __ptext10:
  2709                           	callstack 0
  2710   001A92                     _tache3:
  2711                           	callstack 28
  2712                           
  2713                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2714                           
  2715                           ;incstack = 0
  2716                           ;T3.c: 5: while(1)
  2717   001A92  0100               	movlb	0	; () banked
  2718   001A94  0566               	decf	102,w,b
  2719   001A96  A4D8               	btfss	status,2,c
  2720   001A98  D014               	goto	i2l3219
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2724   001A9A  0ECA               	movlw	202
  2725   001A9C  6567               	cpfsgt	103,b
  2726   001A9E  D011               	goto	i2l3219
  2727                           
  2728                           ; BSR set to: 0
  2729   001AA0  0ED1               	movlw	209
  2730   001AA2  6167               	cpfslt	103,b
  2731   001AA4  D00E               	goto	i2l3219
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2735   001AA6  0E70               	movlw	112
  2736   001AA8  6568               	cpfsgt	104,b
  2737   001AAA  D004               	goto	i2l3213
  2738                           
  2739                           ; BSR set to: 0
  2740   001AAC  0E79               	movlw	121
  2741   001AAE  6168               	cpfslt	104,b
  2742   001AB0  D001               	goto	i2l3213
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2746   001AB2  848B               	bsf	139,2,c	;volatile
  2747   001AB4                     i2l3213:
  2748                           
  2749                           ; BSR set to: 0
  2750                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2751   001AB4  0E78               	movlw	120
  2752   001AB6  6568               	cpfsgt	104,b
  2753   001AB8  D004               	goto	i2l3219
  2754                           
  2755                           ; BSR set to: 0
  2756   001ABA  0E7F               	movlw	127
  2757   001ABC  6168               	cpfslt	104,b
  2758   001ABE  D001               	goto	i2l3219
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2762   001AC0  948B               	bcf	139,2,c	;volatile
  2763   001AC2                     i2l3219:
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 21: if (TP_appui==1)
  2767   001AC2  0566               	decf	102,w,b
  2768   001AC4  A4D8               	btfss	status,2,c
  2769   001AC6  D014               	goto	i2l3237
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;T3.c: 22: {;T3.c: 23: if ((TP_x>=215)&&(TP_x<221))
  2773   001AC8  0ED6               	movlw	214
  2774   001ACA  6567               	cpfsgt	103,b
  2775   001ACC  D011               	goto	i2l3237
  2776                           
  2777                           ; BSR set to: 0
  2778   001ACE  0EDD               	movlw	221
  2779   001AD0  6167               	cpfslt	103,b
  2780   001AD2  D00E               	goto	i2l3237
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;T3.c: 24: {;T3.c: 25: if ((TP_y>=113)&&(TP_y<121))
  2784   001AD4  0E70               	movlw	112
  2785   001AD6  6568               	cpfsgt	104,b
  2786   001AD8  D004               	goto	i2l3231
  2787                           
  2788                           ; BSR set to: 0
  2789   001ADA  0E79               	movlw	121
  2790   001ADC  6168               	cpfslt	104,b
  2791   001ADE  D001               	goto	i2l3231
  2792                           
  2793                           ; BSR set to: 0
  2794                           ;T3.c: 26: {;T3.c: 27: LATCbits.LATC1=1;
  2795   001AE0  828B               	bsf	139,1,c	;volatile
  2796   001AE2                     i2l3231:
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;T3.c: 28: };T3.c: 29: if ((TP_y>=121)&&(TP_y<127))
  2800   001AE2  0E78               	movlw	120
  2801   001AE4  6568               	cpfsgt	104,b
  2802   001AE6  D004               	goto	i2l3237
  2803                           
  2804                           ; BSR set to: 0
  2805   001AE8  0E7F               	movlw	127
  2806   001AEA  6168               	cpfslt	104,b
  2807   001AEC  D001               	goto	i2l3237
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;T3.c: 30: {;T3.c: 31: LATCbits.LATC1=0;
  2811   001AEE  928B               	bcf	139,1,c	;volatile
  2812   001AF0                     i2l3237:
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;T3.c: 32: };T3.c: 33: };T3.c: 34: };T3.c: 35: if (TP_appui==1)
  2816   001AF0  0566               	decf	102,w,b
  2817   001AF2  A4D8               	btfss	status,2,c
  2818   001AF4  D7CE               	goto	__ptext10
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;T3.c: 36: {;T3.c: 37: if ((TP_x>=227)&&(TP_x<233))
  2822   001AF6  0EE2               	movlw	226
  2823   001AF8  6567               	cpfsgt	103,b
  2824   001AFA  D7CB               	goto	__ptext10
  2825                           
  2826                           ; BSR set to: 0
  2827   001AFC  0EE9               	movlw	233
  2828   001AFE  6167               	cpfslt	103,b
  2829   001B00  D7C8               	goto	__ptext10
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;T3.c: 38: {;T3.c: 39: if ((TP_y>=113)&&(TP_y<121))
  2833   001B02  0E70               	movlw	112
  2834   001B04  6568               	cpfsgt	104,b
  2835   001B06  D004               	goto	i2l3249
  2836                           
  2837                           ; BSR set to: 0
  2838   001B08  0E79               	movlw	121
  2839   001B0A  6168               	cpfslt	104,b
  2840   001B0C  D001               	goto	i2l3249
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;T3.c: 40: {;T3.c: 41: LATGbits.LATG0=1;
  2844   001B0E  808F               	bsf	143,0,c	;volatile
  2845   001B10                     i2l3249:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;T3.c: 42: };T3.c: 43: if ((TP_y>=121)&&(TP_y<127))
  2849   001B10  0E78               	movlw	120
  2850   001B12  6568               	cpfsgt	104,b
  2851   001B14  D7BE               	goto	__ptext10
  2852                           
  2853                           ; BSR set to: 0
  2854   001B16  0E7F               	movlw	127
  2855   001B18  6168               	cpfslt	104,b
  2856   001B1A  D7BB               	goto	__ptext10
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;T3.c: 44: {;T3.c: 45: LATGbits.LATG0=0;
  2860   001B1C  908F               	bcf	143,0,c	;volatile
  2861                           
  2862                           ; BSR set to: 0
  2863   001B1E  D7B9               	goto	__ptext10
  2864   001B20                     __end_of_tache3:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _tache2 *****************
  2868 ;; Defined at:
  2869 ;;		line 3 in file "T2.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  iy              2   11[COMRAM] unsigned int 
  2874 ;;  ix              2    9[COMRAM] unsigned int 
  2875 ;;  ly              1   16[COMRAM] unsigned char 
  2876 ;;  hy              1   15[COMRAM] unsigned char 
  2877 ;;  lx              1   14[COMRAM] unsigned char 
  2878 ;;  hx              1   13[COMRAM] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;Total ram usage:       10 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 1
  2895 ;; This function calls:
  2896 ;;		___lwdiv
  2897 ;;		_tp_delai
  2898 ;; This function is called by:
  2899 ;;		_fonction_d_interruption
  2900 ;;		_initialisation_du_systeme
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text11
  2905   0015CE                     __ptext11:
  2906                           	callstack 0
  2907   0015CE                     _tache2:
  2908                           	callstack 27
  2909                           
  2910                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;incstack = 0
  2914   0015CE  0E00               	movlw	0
  2915   0015D0  0100               	movlb	0	; () banked
  2916   0015D2  6F66               	movwf	102,b
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  2920   0015D4  868F               	bsf	143,3,c	;volatile
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;T2.c: 13: LATGbits.LATG4=0;
  2924   0015D6  988F               	bcf	143,4,c	;volatile
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;T2.c: 14: tp_delai(3000);
  2928   0015D8  0E0B               	movlw	11
  2929   0015DA  6E02               	movwf	(tp_delai@itpd+1)^0,c
  2930   0015DC  0EB8               	movlw	184
  2931   0015DE  6E01               	movwf	tp_delai@itpd^0,c
  2932   0015E0  EC43  F010         	call	_tp_delai	;wreg free
  2933                           
  2934                           ;T2.c: 18: ADCON2=0x16;
  2935   0015E4  0E16               	movlw	22
  2936   0015E6  6EC0               	movwf	192,c	;volatile
  2937                           
  2938                           ;T2.c: 19: ADCON0=0x01;
  2939   0015E8  0E01               	movlw	1
  2940   0015EA  6EC2               	movwf	194,c	;volatile
  2941                           
  2942                           ;T2.c: 20: ADCON0=0x03;
  2943   0015EC  0E03               	movlw	3
  2944   0015EE  6EC2               	movwf	194,c	;volatile
  2945   0015F0                     i2l519:
  2946   0015F0  B2C2               	btfsc	194,1,c	;volatile
  2947   0015F2  D7FE               	goto	i2l519
  2948                           
  2949                           ;T2.c: 23: hx=ADRESH;
  2950   0015F4  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  2951                           
  2952                           ;T2.c: 24: lx=ADRESL;
  2953   0015F8  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  2954                           
  2955                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  2956   0015FC  C00F  F008         	movff	tache2@lx,??_tache2
  2957   001600  0E0F               	movlw	15
  2958   001602  1608               	andwf	??_tache2^0,f,c
  2959   001604  B4D8               	btfsc	status,2,c
  2960   001606  D004               	goto	i2l4463
  2961   001608  0E00               	movlw	0
  2962   00160A  6E0E               	movwf	tache2@hx^0,c
  2963   00160C  0E00               	movlw	0
  2964   00160E  6E0F               	movwf	tache2@lx^0,c
  2965   001610                     i2l4463:
  2966                           
  2967                           ;T2.c: 31: if (hx>=10)
  2968   001610  0E09               	movlw	9
  2969   001612  640E               	cpfsgt	tache2@hx^0,c
  2970   001614  D7DC               	goto	__ptext11
  2971                           
  2972                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  2973   001616  968F               	bcf	143,3,c	;volatile
  2974                           
  2975                           ;T2.c: 34: LATGbits.LATG4=1;
  2976   001618  888F               	bsf	143,4,c	;volatile
  2977                           
  2978                           ;T2.c: 35: tp_delai(3000);
  2979   00161A  0E0B               	movlw	11
  2980   00161C  6E02               	movwf	(tp_delai@itpd+1)^0,c
  2981   00161E  0EB8               	movlw	184
  2982   001620  6E01               	movwf	tp_delai@itpd^0,c
  2983   001622  EC43  F010         	call	_tp_delai	;wreg free
  2984                           
  2985                           ;T2.c: 39: ADCON2=0x16;
  2986   001626  0E16               	movlw	22
  2987   001628  6EC0               	movwf	192,c	;volatile
  2988                           
  2989                           ;T2.c: 40: ADCON0=0x05;
  2990   00162A  0E05               	movlw	5
  2991   00162C  6EC2               	movwf	194,c	;volatile
  2992                           
  2993                           ;T2.c: 41: ADCON0=0x07;
  2994   00162E  0E07               	movlw	7
  2995   001630  6EC2               	movwf	194,c	;volatile
  2996   001632                     i2l524:
  2997   001632  B2C2               	btfsc	194,1,c	;volatile
  2998   001634  D7FE               	goto	i2l524
  2999                           
  3000                           ;T2.c: 44: hy=ADRESH;
  3001   001636  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3002                           
  3003                           ;T2.c: 45: ly=ADRESL;
  3004   00163A  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3005                           
  3006                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3007   00163E  C011  F008         	movff	tache2@ly,??_tache2
  3008   001642  0E0F               	movlw	15
  3009   001644  1608               	andwf	??_tache2^0,f,c
  3010   001646  B4D8               	btfsc	status,2,c
  3011   001648  D004               	goto	i2l4479
  3012   00164A  0E00               	movlw	0
  3013   00164C  6E10               	movwf	tache2@hy^0,c
  3014   00164E  0E00               	movlw	0
  3015   001650  6E11               	movwf	tache2@ly^0,c
  3016   001652                     i2l4479:
  3017                           
  3018                           ;T2.c: 51: if (hy>=20)
  3019   001652  0E13               	movlw	19
  3020   001654  6410               	cpfsgt	tache2@hy^0,c
  3021   001656  D7BB               	goto	__ptext11
  3022                           
  3023                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3024   001658  500E               	movf	tache2@hx^0,w,c
  3025   00165A  6E08               	movwf	??_tache2^0,c
  3026   00165C  500F               	movf	tache2@lx^0,w,c
  3027   00165E  6E0A               	movwf	tache2@ix^0,c
  3028   001660  C008  F00B         	movff	??_tache2,tache2@ix+1
  3029                           
  3030                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3031   001664  5010               	movf	tache2@hy^0,w,c
  3032   001666  6E08               	movwf	??_tache2^0,c
  3033   001668  5011               	movf	tache2@ly^0,w,c
  3034   00166A  6E0C               	movwf	tache2@iy^0,c
  3035   00166C  C008  F00D         	movff	??_tache2,tache2@iy+1
  3036                           
  3037                           ;T2.c: 55: ix=ix-3150;
  3038   001670  0EB2               	movlw	178
  3039   001672  240A               	addwf	tache2@ix^0,w,c
  3040   001674  6E0A               	movwf	tache2@ix^0,c
  3041   001676  0EF3               	movlw	243
  3042   001678  200B               	addwfc	(tache2@ix+1)^0,w,c
  3043   00167A  6E0B               	movwf	(tache2@ix+1)^0,c
  3044                           
  3045                           ;T2.c: 56: iy=iy-6500;
  3046   00167C  0E9C               	movlw	156
  3047   00167E  240C               	addwf	tache2@iy^0,w,c
  3048   001680  6E0C               	movwf	tache2@iy^0,c
  3049   001682  0EE6               	movlw	230
  3050   001684  200D               	addwfc	(tache2@iy+1)^0,w,c
  3051   001686  6E0D               	movwf	(tache2@iy+1)^0,c
  3052                           
  3053                           ;T2.c: 58: TP_x=ix/246;
  3054   001688  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3055   00168C  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3056   001690  0E00               	movlw	0
  3057   001692  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3058   001694  0EF6               	movlw	246
  3059   001696  6E03               	movwf	___lwdiv@divisor^0,c
  3060   001698  EC8F  F00E         	call	___lwdiv	;wreg free
  3061   00169C  5001               	movf	?___lwdiv^0,w,c
  3062   00169E  0100               	movlb	0	; () banked
  3063   0016A0  6F67               	movwf	103,b
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;T2.c: 59: TP_y=127-(iy/409);
  3067   0016A2  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3068   0016A6  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3069   0016AA  0E01               	movlw	1
  3070   0016AC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3071   0016AE  0E99               	movlw	153
  3072   0016B0  6E03               	movwf	___lwdiv@divisor^0,c
  3073   0016B2  EC8F  F00E         	call	___lwdiv	;wreg free
  3074   0016B6  5001               	movf	?___lwdiv^0,w,c
  3075   0016B8  087F               	sublw	127
  3076   0016BA  0100               	movlb	0	; () banked
  3077   0016BC  6F68               	movwf	104,b
  3078                           
  3079                           ;T2.c: 68: TP_appui=1;
  3080   0016BE  0E01               	movlw	1
  3081   0016C0  D788               	goto	L1
  3082   0016C2                     __end_of_tache2:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _tp_delai *****************
  3086 ;; Defined at:
  3087 ;;		line 82 in file "T2.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  itpd            2    0[COMRAM] unsigned int 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  1    wreg      void 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;Total ram usage:        2 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; This function calls:
  3108 ;;		Nothing
  3109 ;; This function is called by:
  3110 ;;		_tache2
  3111 ;; This function uses a non-reentrant model
  3112 ;;
  3113                           
  3114                           	psect	text12
  3115   002086                     __ptext12:
  3116                           	callstack 0
  3117   002086                     _tp_delai:
  3118                           	callstack 27
  3119                           
  3120                           ;T2.c: 84: while(itpd>0)
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;incstack = 0
  3124   002086  D006               	goto	i2l4059
  3125   002088                     i2l537:
  3126                           
  3127                           ;T2.c: 85: {;T2.c: 86: __nop();__nop();__nop();
  3128   002088  F000               	nop	
  3129   00208A  F000               	nop	
  3130   00208C  F000               	nop	
  3131                           
  3132                           ;T2.c: 87: itpd--;
  3133   00208E  0601               	decf	tp_delai@itpd^0,f,c
  3134   002090  A0D8               	btfss	status,0,c
  3135   002092  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3136   002094                     i2l4059:
  3137   002094  5001               	movf	tp_delai@itpd^0,w,c
  3138   002096  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3139   002098  B4D8               	btfsc	status,2,c
  3140   00209A  0012               	return	
  3141   00209C  D7F5               	goto	i2l537
  3142   00209E                     __end_of_tp_delai:
  3143                           	callstack 0
  3144                           
  3145 ;; *************** function ___lwdiv *****************
  3146 ;; Defined at:
  3147 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  dividend        2    0[COMRAM] unsigned int 
  3150 ;;  divisor         2    2[COMRAM] unsigned int 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  quotient        2    4[COMRAM] unsigned int 
  3153 ;;  counter         1    6[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  2    0[COMRAM] unsigned int 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3166 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;Total ram usage:        7 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_tache2
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text13
  3177   001D1E                     __ptext13:
  3178                           	callstack 0
  3179   001D1E                     ___lwdiv:
  3180                           	callstack 27
  3181                           
  3182                           ;incstack = 0
  3183   001D1E  0E00               	movlw	0
  3184   001D20  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3185   001D22  0E00               	movlw	0
  3186   001D24  6E05               	movwf	___lwdiv@quotient^0,c
  3187   001D26  5003               	movf	___lwdiv@divisor^0,w,c
  3188   001D28  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3189   001D2A  B4D8               	btfsc	status,2,c
  3190   001D2C  D01C               	goto	i2l2079
  3191   001D2E  0E01               	movlw	1
  3192   001D30  6E07               	movwf	___lwdiv@counter^0,c
  3193   001D32  D004               	goto	i2l4125
  3194   001D34                     i2l4123:
  3195   001D34  90D8               	bcf	status,0,c
  3196   001D36  3603               	rlcf	___lwdiv@divisor^0,f,c
  3197   001D38  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3198   001D3A  2A07               	incf	___lwdiv@counter^0,f,c
  3199   001D3C                     i2l4125:
  3200   001D3C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3201   001D3E  D7FA               	goto	i2l4123
  3202   001D40                     i2u209_40:
  3203   001D40  90D8               	bcf	status,0,c
  3204   001D42  3605               	rlcf	___lwdiv@quotient^0,f,c
  3205   001D44  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3206   001D46  5003               	movf	___lwdiv@divisor^0,w,c
  3207   001D48  5C01               	subwf	___lwdiv@dividend^0,w,c
  3208   001D4A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3209   001D4C  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3210   001D4E  A0D8               	btfss	status,0,c
  3211   001D50  D005               	goto	i2l4135
  3212   001D52  5003               	movf	___lwdiv@divisor^0,w,c
  3213   001D54  5E01               	subwf	___lwdiv@dividend^0,f,c
  3214   001D56  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3215   001D58  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3216   001D5A  8005               	bsf	___lwdiv@quotient^0,0,c
  3217   001D5C                     i2l4135:
  3218   001D5C  90D8               	bcf	status,0,c
  3219   001D5E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3220   001D60  3203               	rrcf	___lwdiv@divisor^0,f,c
  3221   001D62  2E07               	decfsz	___lwdiv@counter^0,f,c
  3222   001D64  D7ED               	goto	i2u209_40
  3223   001D66                     i2l2079:
  3224   001D66  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3225   001D6A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3226   001D6E  0012               	return		;funcret
  3227   001D70                     __end_of___lwdiv:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function _tache1 *****************
  3231 ;; Defined at:
  3232 ;;		line 3 in file "T1.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;		None
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  i               1   14[COMRAM] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  1    wreg      void 
  3239 ;; Registers used:
  3240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;Total ram usage:        1 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 4
  3253 ;; This function calls:
  3254 ;;		_Init
  3255 ;;		_clear_graphics
  3256 ;;		_clear_text
  3257 ;;		_draw_char
  3258 ;;		_draw_hex8
  3259 ;;		_draw_string
  3260 ;;		_goto_lico
  3261 ;;		_init_rxtx
  3262 ;;		_initialisation_afficheur
  3263 ;;		_lecture_8bit_analogique
  3264 ;;		_plot1
  3265 ;; This function is called by:
  3266 ;;		_fonction_d_interruption
  3267 ;;		_initialisation_du_systeme
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text14
  3272   001094                     __ptext14:
  3273                           	callstack 0
  3274   001094                     _tache1:
  3275                           	callstack 24
  3276                           
  3277                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3278                           
  3279                           ;incstack = 0
  3280   001094  9EF2               	bcf	242,7,c	;volatile
  3281                           
  3282                           ;T1.c: 8: initialisation_afficheur();
  3283   001096  EC3B  F00C         	call	_initialisation_afficheur	;wreg free
  3284                           
  3285                           ;T1.c: 9: clear_text();
  3286   00109A  EC76  F00F         	call	_clear_text	;wreg free
  3287                           
  3288                           ;T1.c: 10: clear_graphics();
  3289   00109E  EC8E  F00F         	call	_clear_graphics	;wreg free
  3290                           
  3291                           ;T1.c: 11: init_rxtx();
  3292   0010A2  ECE1  F00F         	call	_init_rxtx	;wreg free
  3293                           
  3294                           ;T1.c: 12: Init(2);
  3295   0010A6  0E02               	movlw	2
  3296   0010A8  6EE6               	movwf	postinc1,c
  3297   0010AA  ECD0  F00F         	call	_Init	;wreg free
  3298                           
  3299                           ;T1.c: 13: RXTX_libre=1;
  3300   0010AE  0E01               	movlw	1
  3301   0010B0  0100               	movlb	0	; () banked
  3302   0010B2  6F80               	movwf	128,b
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;T1.c: 14: TXREG1='R';
  3306   0010B4  0E52               	movlw	82
  3307   0010B6  6EAD               	movwf	173,c	;volatile
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3311   0010B8  8EF2               	bsf	242,7,c	;volatile
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3315   0010BA  948B               	bcf	139,2,c	;volatile
  3316                           
  3317                           ; BSR set to: 0
  3318   0010BC  928B               	bcf	139,1,c	;volatile
  3319                           
  3320                           ; BSR set to: 0
  3321   0010BE  908F               	bcf	143,0,c	;volatile
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;T1.c: 19: vitesse=0;
  3325   0010C0  0E00               	movlw	0
  3326   0010C2  6F73               	movwf	115,b
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;T1.c: 20: batterie=15;
  3330   0010C4  0E0F               	movlw	15
  3331   0010C6  6F74               	movwf	116,b
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;T1.c: 21: n_octet_badge=0;
  3335   0010C8  0E00               	movlw	0
  3336   0010CA  6F7F               	movwf	127,b
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;T1.c: 23: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3340   0010CC  0E22               	movlw	34
  3341   0010CE  6E09               	movwf	goto_lico@colonne^0,c
  3342   0010D0  0E0D               	movlw	13
  3343   0010D2  EC38  F00E         	call	_goto_lico
  3344   0010D6  0E52               	movlw	82
  3345   0010D8  EC5D  F00F         	call	_draw_char
  3346   0010DC  0E20               	movlw	32
  3347   0010DE  EC5D  F00F         	call	_draw_char
  3348   0010E2  0E56               	movlw	86
  3349   0010E4  EC5D  F00F         	call	_draw_char
  3350   0010E8  0E20               	movlw	32
  3351   0010EA  EC5D  F00F         	call	_draw_char
  3352   0010EE  0E42               	movlw	66
  3353   0010F0  EC5D  F00F         	call	_draw_char
  3354                           
  3355                           ;T1.c: 24: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3356   0010F4  0E22               	movlw	34
  3357   0010F6  6E09               	movwf	goto_lico@colonne^0,c
  3358   0010F8  0E0E               	movlw	14
  3359   0010FA  EC38  F00E         	call	_goto_lico
  3360   0010FE  0E30               	movlw	48
  3361   001100  EC5D  F00F         	call	_draw_char
  3362   001104  0E20               	movlw	32
  3363   001106  EC5D  F00F         	call	_draw_char
  3364   00110A  0E30               	movlw	48
  3365   00110C  EC5D  F00F         	call	_draw_char
  3366   001110  0E20               	movlw	32
  3367   001112  EC5D  F00F         	call	_draw_char
  3368   001116  0E30               	movlw	48
  3369   001118  EC5D  F00F         	call	_draw_char
  3370                           
  3371                           ;T1.c: 25: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3372   00111C  0E22               	movlw	34
  3373   00111E  6E09               	movwf	goto_lico@colonne^0,c
  3374   001120  0E0F               	movlw	15
  3375   001122  EC38  F00E         	call	_goto_lico
  3376   001126  0E31               	movlw	49
  3377   001128  EC5D  F00F         	call	_draw_char
  3378   00112C  0E20               	movlw	32
  3379   00112E  EC5D  F00F         	call	_draw_char
  3380   001132  0E31               	movlw	49
  3381   001134  EC5D  F00F         	call	_draw_char
  3382   001138  0E20               	movlw	32
  3383   00113A  EC5D  F00F         	call	_draw_char
  3384   00113E  0E31               	movlw	49
  3385   001140  EC5D  F00F         	call	_draw_char
  3386                           
  3387                           ;T1.c: 27: TP_appui=0;
  3388   001144  0E00               	movlw	0
  3389   001146  0100               	movlb	0	; () banked
  3390   001148  6F66               	movwf	102,b
  3391   00114A                     i2l4325:
  3392                           
  3393                           ;T1.c: 30: {;T1.c: 32: goto_lico(0,0);
  3394   00114A  0E00               	movlw	0
  3395   00114C  6E09               	movwf	goto_lico@colonne^0,c
  3396   00114E  0E00               	movlw	0
  3397   001150  EC38  F00E         	call	_goto_lico
  3398                           
  3399                           ;T1.c: 33: draw_string("Marche:");
  3400   001154  0E59               	movlw	low STR_1
  3401   001156  6E08               	movwf	draw_string@tableau^0,c
  3402   001158  0E10               	movlw	high STR_1
  3403   00115A  6E09               	movwf	(draw_string@tableau+1)^0,c
  3404   00115C  EC64  F00E         	call	_draw_string	;wreg free
  3405                           
  3406                           ;T1.c: 34: if (PORTBbits.RB0==0)
  3407   001160  B081               	btfsc	129,0,c	;volatile
  3408   001162  D007               	goto	i2l404
  3409                           
  3410                           ;T1.c: 35: draw_string("AV");
  3411   001164  0E90               	movlw	low STR_2
  3412   001166  6E08               	movwf	draw_string@tableau^0,c
  3413   001168  0E10               	movlw	high STR_2
  3414   00116A  6E09               	movwf	(draw_string@tableau+1)^0,c
  3415   00116C  EC64  F00E         	call	_draw_string	;wreg free
  3416   001170  D00F               	goto	i2l4337
  3417   001172                     i2l404:
  3418                           
  3419                           ;T1.c: 36: else;T1.c: 37: if (PORTBbits.RB1==0)
  3420   001172  B281               	btfsc	129,1,c	;volatile
  3421   001174  D007               	goto	i2l4335
  3422                           
  3423                           ;T1.c: 38: draw_string("AR");
  3424   001176  0E8D               	movlw	low STR_3
  3425   001178  6E08               	movwf	draw_string@tableau^0,c
  3426   00117A  0E10               	movlw	high STR_3
  3427   00117C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3428   00117E  EC64  F00E         	call	_draw_string	;wreg free
  3429   001182  D006               	goto	i2l4337
  3430   001184                     i2l4335:
  3431                           
  3432                           ;T1.c: 39: else;T1.c: 40: draw_string("N ");
  3433   001184  0E87               	movlw	low STR_4
  3434   001186  6E08               	movwf	draw_string@tableau^0,c
  3435   001188  0E10               	movlw	high STR_4
  3436   00118A  6E09               	movwf	(draw_string@tableau+1)^0,c
  3437   00118C  EC64  F00E         	call	_draw_string	;wreg free
  3438   001190                     i2l4337:
  3439                           
  3440                           ;T1.c: 42: goto_lico(1,0);
  3441   001190  0E00               	movlw	0
  3442   001192  6E09               	movwf	goto_lico@colonne^0,c
  3443   001194  0E01               	movlw	1
  3444   001196  EC38  F00E         	call	_goto_lico
  3445                           
  3446                           ;T1.c: 43: draw_string("Siege:");
  3447   00119A  0E70               	movlw	low STR_5
  3448   00119C  6E08               	movwf	draw_string@tableau^0,c
  3449   00119E  0E10               	movlw	high STR_5
  3450   0011A0  6E09               	movwf	(draw_string@tableau+1)^0,c
  3451   0011A2  EC64  F00E         	call	_draw_string	;wreg free
  3452                           
  3453                           ;T1.c: 44: if (PORTBbits.RB2==0)
  3454   0011A6  B481               	btfsc	129,2,c	;volatile
  3455   0011A8  D004               	goto	i2l4345
  3456                           
  3457                           ;T1.c: 45: {draw_char('1');}
  3458   0011AA  0E31               	movlw	49
  3459   0011AC  EC5D  F00F         	call	_draw_char
  3460   0011B0  D003               	goto	i2l4347
  3461   0011B2                     i2l4345:
  3462                           
  3463                           ;T1.c: 46: else;T1.c: 47: {draw_char('0');}
  3464   0011B2  0E30               	movlw	48
  3465   0011B4  EC5D  F00F         	call	_draw_char
  3466   0011B8                     i2l4347:
  3467                           
  3468                           ;T1.c: 49: goto_lico(2,0);
  3469   0011B8  0E00               	movlw	0
  3470   0011BA  6E09               	movwf	goto_lico@colonne^0,c
  3471   0011BC  0E02               	movlw	2
  3472   0011BE  EC38  F00E         	call	_goto_lico
  3473                           
  3474                           ;T1.c: 50: draw_string("Temp. Eau:");
  3475   0011C2  0E3B               	movlw	low STR_6
  3476   0011C4  6E08               	movwf	draw_string@tableau^0,c
  3477   0011C6  0E10               	movlw	high STR_6
  3478   0011C8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3479   0011CA  EC64  F00E         	call	_draw_string	;wreg free
  3480                           
  3481                           ;T1.c: 51: draw_hex8(lecture_8bit_analogique(2));
  3482   0011CE  0E02               	movlw	2
  3483   0011D0  EC42  F00F         	call	_lecture_8bit_analogique
  3484   0011D4  EC0A  F00E         	call	_draw_hex8
  3485                           
  3486                           ;T1.c: 53: goto_lico(3,0);
  3487   0011D8  0E00               	movlw	0
  3488   0011DA  6E09               	movwf	goto_lico@colonne^0,c
  3489   0011DC  0E03               	movlw	3
  3490   0011DE  EC38  F00E         	call	_goto_lico
  3491                           
  3492                           ;T1.c: 54: draw_string("Temp. Huile:");
  3493   0011E2  0E16               	movlw	low STR_7
  3494   0011E4  6E08               	movwf	draw_string@tableau^0,c
  3495   0011E6  0E10               	movlw	high STR_7
  3496   0011E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3497   0011EA  EC64  F00E         	call	_draw_string	;wreg free
  3498                           
  3499                           ;T1.c: 55: draw_hex8(lecture_8bit_analogique(3));
  3500   0011EE  0E03               	movlw	3
  3501   0011F0  EC42  F00F         	call	_lecture_8bit_analogique
  3502   0011F4  EC0A  F00E         	call	_draw_hex8
  3503                           
  3504                           ;T1.c: 57: goto_lico(4,0);
  3505   0011F8  0E00               	movlw	0
  3506   0011FA  6E09               	movwf	goto_lico@colonne^0,c
  3507   0011FC  0E04               	movlw	4
  3508   0011FE  EC38  F00E         	call	_goto_lico
  3509                           
  3510                           ;T1.c: 58: draw_string("Choc:");
  3511   001202  0E7D               	movlw	low STR_8
  3512   001204  6E08               	movwf	draw_string@tableau^0,c
  3513   001206  0E10               	movlw	high STR_8
  3514   001208  6E09               	movwf	(draw_string@tableau+1)^0,c
  3515   00120A  EC64  F00E         	call	_draw_string	;wreg free
  3516                           
  3517                           ;T1.c: 59: if (PORTBbits.RB3==0)
  3518   00120E  B681               	btfsc	129,3,c	;volatile
  3519   001210  D004               	goto	i2l4365
  3520                           
  3521                           ;T1.c: 60: draw_char('1');
  3522   001212  0E31               	movlw	49
  3523   001214  EC5D  F00F         	call	_draw_char
  3524   001218  D003               	goto	i2l4367
  3525   00121A                     i2l4365:
  3526                           
  3527                           ;T1.c: 61: else;T1.c: 62: draw_char('0');
  3528   00121A  0E30               	movlw	48
  3529   00121C  EC5D  F00F         	call	_draw_char
  3530   001220                     i2l4367:
  3531                           
  3532                           ;T1.c: 64: goto_lico(5,0);
  3533   001220  0E00               	movlw	0
  3534   001222  6E09               	movwf	goto_lico@colonne^0,c
  3535   001224  0E05               	movlw	5
  3536   001226  EC38  F00E         	call	_goto_lico
  3537                           
  3538                           ;T1.c: 65: draw_string("Vitesse:");
  3539   00122A  0E50               	movlw	low STR_9
  3540   00122C  6E08               	movwf	draw_string@tableau^0,c
  3541   00122E  0E10               	movlw	high STR_9
  3542   001230  6E09               	movwf	(draw_string@tableau+1)^0,c
  3543   001232  EC64  F00E         	call	_draw_string	;wreg free
  3544                           
  3545                           ;T1.c: 66: if (PORTEbits.RE0==0)
  3546   001236  B084               	btfsc	132,0,c	;volatile
  3547   001238  D002               	goto	i2l4375
  3548                           
  3549                           ;T1.c: 67: vitesse++;
  3550   00123A  0100               	movlb	0	; () banked
  3551   00123C  2B73               	incf	115,f,b
  3552   00123E                     i2l4375:
  3553                           
  3554                           ;T1.c: 68: if (PORTEbits.RE1==0)
  3555   00123E  B284               	btfsc	132,1,c	;volatile
  3556   001240  D002               	goto	i2l4379
  3557                           
  3558                           ;T1.c: 69: vitesse--;
  3559   001242  0100               	movlb	0	; () banked
  3560   001244  0773               	decf	115,f,b
  3561   001246                     i2l4379:
  3562                           
  3563                           ;T1.c: 70: draw_hex8(vitesse);
  3564   001246  0100               	movlb	0	; () banked
  3565   001248  5173               	movf	115,w,b
  3566   00124A  EC0A  F00E         	call	_draw_hex8
  3567                           
  3568                           ;T1.c: 72: goto_lico(6,0);
  3569   00124E  0E00               	movlw	0
  3570   001250  6E09               	movwf	goto_lico@colonne^0,c
  3571   001252  0E06               	movlw	6
  3572   001254  EC38  F00E         	call	_goto_lico
  3573                           
  3574                           ;T1.c: 73: draw_string("Batterie:");
  3575   001258  0E46               	movlw	low STR_10
  3576   00125A  6E08               	movwf	draw_string@tableau^0,c
  3577   00125C  0E10               	movlw	high STR_10
  3578   00125E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3579   001260  EC64  F00E         	call	_draw_string	;wreg free
  3580                           
  3581                           ;T1.c: 74: if (PORTEbits.RE2==0)
  3582   001264  B484               	btfsc	132,2,c	;volatile
  3583   001266  D002               	goto	i2l4389
  3584                           
  3585                           ;T1.c: 75: batterie++;
  3586   001268  0100               	movlb	0	; () banked
  3587   00126A  2B74               	incf	116,f,b
  3588   00126C                     i2l4389:
  3589                           
  3590                           ;T1.c: 76: if (PORTEbits.RE3==0)
  3591   00126C  B684               	btfsc	132,3,c	;volatile
  3592   00126E  D002               	goto	i2l4393
  3593                           
  3594                           ;T1.c: 77: batterie--;
  3595   001270  0100               	movlb	0	; () banked
  3596   001272  0774               	decf	116,f,b
  3597   001274                     i2l4393:
  3598                           
  3599                           ;T1.c: 78: draw_hex8(batterie);
  3600   001274  0100               	movlb	0	; () banked
  3601   001276  5174               	movf	116,w,b
  3602   001278  EC0A  F00E         	call	_draw_hex8
  3603                           
  3604                           ;T1.c: 80: goto_lico(7,0);
  3605   00127C  0E00               	movlw	0
  3606   00127E  6E09               	movwf	goto_lico@colonne^0,c
  3607   001280  0E07               	movlw	7
  3608   001282  EC38  F00E         	call	_goto_lico
  3609                           
  3610                           ;T1.c: 81: if (PORTEbits.RE4==0)
  3611   001286  B884               	btfsc	132,4,c	;volatile
  3612   001288  D007               	goto	i2l4401
  3613                           
  3614                           ;T1.c: 82: draw_string("((!))");
  3615   00128A  0E77               	movlw	low STR_11
  3616   00128C  6E08               	movwf	draw_string@tableau^0,c
  3617   00128E  0E10               	movlw	high STR_11
  3618   001290  6E09               	movwf	(draw_string@tableau+1)^0,c
  3619   001292  EC64  F00E         	call	_draw_string	;wreg free
  3620   001296  D006               	goto	i2l4403
  3621   001298                     i2l4401:
  3622                           
  3623                           ;T1.c: 83: else;T1.c: 84: draw_string("     ");
  3624   001298  0E10               	movlw	low (STR_14+15)
  3625   00129A  6E08               	movwf	draw_string@tableau^0,c
  3626   00129C  0E10               	movlw	high (STR_14+15)
  3627   00129E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3628   0012A0  EC64  F00E         	call	_draw_string	;wreg free
  3629   0012A4                     i2l4403:
  3630                           
  3631                           ;T1.c: 86: goto_lico(8,0);
  3632   0012A4  0E00               	movlw	0
  3633   0012A6  6E09               	movwf	goto_lico@colonne^0,c
  3634   0012A8  0E08               	movlw	8
  3635   0012AA  EC38  F00E         	call	_goto_lico
  3636                           
  3637                           ;T1.c: 87: draw_string("Badge:");
  3638   0012AE  0E69               	movlw	low STR_13
  3639   0012B0  6E08               	movwf	draw_string@tableau^0,c
  3640   0012B2  0E10               	movlw	high STR_13
  3641   0012B4  6E09               	movwf	(draw_string@tableau+1)^0,c
  3642   0012B6  EC64  F00E         	call	_draw_string	;wreg free
  3643                           
  3644                           ;T1.c: 88: if (n_octet_badge==0)
  3645   0012BA  0100               	movlb	0	; () banked
  3646   0012BC  517F               	movf	127,w,b
  3647   0012BE  A4D8               	btfss	status,2,c
  3648   0012C0  D007               	goto	i2l4411
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;T1.c: 89: draw_string(" AUCUN              ");
  3652   0012C2  0E01               	movlw	low STR_14
  3653   0012C4  6E08               	movwf	draw_string@tableau^0,c
  3654   0012C6  0E10               	movlw	high STR_14
  3655   0012C8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3656   0012CA  EC64  F00E         	call	_draw_string	;wreg free
  3657   0012CE  D012               	goto	i2u221_40
  3658   0012D0                     i2l4411:
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;T1.c: 90: else;T1.c: 91: {;T1.c: 92: for (i=0;i<n_octet_badge;i++)
  3662   0012D0  0E00               	movlw	0
  3663   0012D2  6E0F               	movwf	tache1@i^0,c
  3664   0012D4  D00A               	goto	i2l4417
  3665   0012D6                     i2l4413:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;T1.c: 93: {;T1.c: 94: draw_hex8(badge[i]);
  3669   0012D6  0E75               	movlw	117
  3670   0012D8  240F               	addwf	tache1@i^0,w,c
  3671   0012DA  6ED9               	movwf	fsr2l,c
  3672   0012DC  6ADA               	clrf	fsr2h,c
  3673   0012DE  0E00               	movlw	0
  3674   0012E0  22DA               	addwfc	fsr2h,f,c
  3675   0012E2  50DF               	movf	indf2,w,c
  3676   0012E4  EC0A  F00E         	call	_draw_hex8
  3677   0012E8  2A0F               	incf	tache1@i^0,f,c
  3678   0012EA                     i2l4417:
  3679   0012EA  0100               	movlb	0	; () banked
  3680   0012EC  517F               	movf	127,w,b
  3681   0012EE  5C0F               	subwf	tache1@i^0,w,c
  3682   0012F0  A0D8               	btfss	status,0,c
  3683   0012F2  D7F1               	goto	i2l4413
  3684   0012F4                     i2u221_40:
  3685                           
  3686                           ;T1.c: 95: };T1.c: 96: };T1.c: 98: goto_lico(9,0);
  3687   0012F4  0E00               	movlw	0
  3688   0012F6  6E09               	movwf	goto_lico@colonne^0,c
  3689   0012F8  0E09               	movlw	9
  3690   0012FA  EC38  F00E         	call	_goto_lico
  3691                           
  3692                           ;T1.c: 99: draw_string("X-Joystick:");
  3693   0012FE  0E23               	movlw	low STR_15
  3694   001300  6E08               	movwf	draw_string@tableau^0,c
  3695   001302  0E10               	movlw	high STR_15
  3696   001304  6E09               	movwf	(draw_string@tableau+1)^0,c
  3697   001306  EC64  F00E         	call	_draw_string	;wreg free
  3698                           
  3699                           ;T1.c: 100: draw_hex8(lecture_8bit_analogique(10));
  3700   00130A  0E0A               	movlw	10
  3701   00130C  EC42  F00F         	call	_lecture_8bit_analogique
  3702   001310  EC0A  F00E         	call	_draw_hex8
  3703                           
  3704                           ;T1.c: 102: goto_lico(10,0);
  3705   001314  0E00               	movlw	0
  3706   001316  6E09               	movwf	goto_lico@colonne^0,c
  3707   001318  0E0A               	movlw	10
  3708   00131A  EC38  F00E         	call	_goto_lico
  3709                           
  3710                           ;T1.c: 103: draw_string("Y-Joystick:");
  3711   00131E  0E2F               	movlw	low STR_16
  3712   001320  6E08               	movwf	draw_string@tableau^0,c
  3713   001322  0E10               	movlw	high STR_16
  3714   001324  6E09               	movwf	(draw_string@tableau+1)^0,c
  3715   001326  EC64  F00E         	call	_draw_string	;wreg free
  3716                           
  3717                           ;T1.c: 104: draw_hex8(lecture_8bit_analogique(11));
  3718   00132A  0E0B               	movlw	11
  3719   00132C  EC42  F00F         	call	_lecture_8bit_analogique
  3720   001330  EC0A  F00E         	call	_draw_hex8
  3721                           
  3722                           ;T1.c: 106: goto_lico(13,0);
  3723   001334  0E00               	movlw	0
  3724   001336  6E09               	movwf	goto_lico@colonne^0,c
  3725   001338  0E0D               	movlw	13
  3726   00133A  EC38  F00E         	call	_goto_lico
  3727                           
  3728                           ;T1.c: 107: draw_string("BIG MUM");
  3729   00133E  0E61               	movlw	low STR_17
  3730   001340  6E08               	movwf	draw_string@tableau^0,c
  3731   001342  0E10               	movlw	high STR_17
  3732   001344  6E09               	movwf	(draw_string@tableau+1)^0,c
  3733   001346  EC64  F00E         	call	_draw_string	;wreg free
  3734                           
  3735                           ;T1.c: 110: if (TP_appui==1)
  3736   00134A  0100               	movlb	0	; () banked
  3737   00134C  0566               	decf	102,w,b
  3738   00134E  A4D8               	btfss	status,2,c
  3739   001350  D020               	goto	i2l423
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;T1.c: 111: {;T1.c: 112: goto_lico(0,20);
  3743   001352  0E14               	movlw	20
  3744   001354  6E09               	movwf	goto_lico@colonne^0,c
  3745   001356  0E00               	movlw	0
  3746   001358  EC38  F00E         	call	_goto_lico
  3747                           
  3748                           ;T1.c: 113: draw_string("x=");
  3749   00135C  0E8A               	movlw	low STR_18
  3750   00135E  6E08               	movwf	draw_string@tableau^0,c
  3751   001360  0E10               	movlw	high STR_18
  3752   001362  6E09               	movwf	(draw_string@tableau+1)^0,c
  3753   001364  EC64  F00E         	call	_draw_string	;wreg free
  3754                           
  3755                           ;T1.c: 114: draw_hex8(TP_x);
  3756   001368  0100               	movlb	0	; () banked
  3757   00136A  5167               	movf	103,w,b
  3758   00136C  EC0A  F00E         	call	_draw_hex8
  3759                           
  3760                           ;T1.c: 115: draw_string(" y=");
  3761   001370  0E83               	movlw	low STR_19
  3762   001372  6E08               	movwf	draw_string@tableau^0,c
  3763   001374  0E10               	movlw	high STR_19
  3764   001376  6E09               	movwf	(draw_string@tableau+1)^0,c
  3765   001378  EC64  F00E         	call	_draw_string	;wreg free
  3766                           
  3767                           ;T1.c: 116: draw_hex8(TP_y);
  3768   00137C  0100               	movlb	0	; () banked
  3769   00137E  5168               	movf	104,w,b
  3770   001380  EC0A  F00E         	call	_draw_hex8
  3771                           
  3772                           ;T1.c: 117: plot1(TP_x,TP_y);
  3773   001384  C068 F009          	movff	104,plot1@y
  3774   001388  0100               	movlb	0	; () banked
  3775   00138A  5167               	movf	103,w,b
  3776   00138C  ECA1  F00C         	call	_plot1
  3777                           
  3778                           ;T1.c: 118: }
  3779   001390  D6DC               	goto	i2l4325
  3780   001392                     i2l423:
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;T1.c: 119: else;T1.c: 120: {;T1.c: 121: __nop();
  3784   001392  F000               	nop	
  3785   001394  D6DA               	goto	i2l4325
  3786   001396                     __end_of_tache1:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function _plot1 *****************
  3790 ;; Defined at:
  3791 ;;		line 340 in file "afficheur.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  x               1    wreg     unsigned char 
  3794 ;;  y               1    8[COMRAM] unsigned char 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  x               1   13[COMRAM] unsigned char 
  3797 ;;  add             2   11[COMRAM] unsigned int 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3807 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;Total ram usage:        6 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 3
  3814 ;; This function calls:
  3815 ;;		___awdiv
  3816 ;;		___awmod
  3817 ;;		_command
  3818 ;;		_d2command
  3819 ;; This function is called by:
  3820 ;;		_tache1
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text15
  3825   001942                     __ptext15:
  3826                           	callstack 0
  3827   001942                     _plot1:
  3828                           	callstack 24
  3829                           
  3830                           ;incstack = 0
  3831                           ;plot1@x stored from wreg
  3832   001942  6E0E               	movwf	plot1@x^0,c
  3833                           
  3834                           ;afficheur.c: 342: unsigned int add;;afficheur.c: 344: add=40*y+x/6;
  3835   001944  C00E  F001         	movff	plot1@x,___awdiv@dividend
  3836   001948  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3837   00194A  0E00               	movlw	0
  3838   00194C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3839   00194E  0E06               	movlw	6
  3840   001950  6E03               	movwf	___awdiv@divisor^0,c
  3841   001952  EC90  F00D         	call	___awdiv	;wreg free
  3842   001956  5009               	movf	plot1@y^0,w,c
  3843   001958  0D28               	mullw	40
  3844   00195A  CFF3 F00A          	movff	prodl,??_plot1
  3845   00195E  CFF4 F00B          	movff	prodh,??_plot1+1
  3846   001962  5001               	movf	?___awdiv^0,w,c
  3847   001964  240A               	addwf	??_plot1^0,w,c
  3848   001966  6E0C               	movwf	plot1@add^0,c
  3849   001968  5002               	movf	(?___awdiv+1)^0,w,c
  3850   00196A  200B               	addwfc	(??_plot1+1)^0,w,c
  3851   00196C  6E0D               	movwf	(plot1@add+1)^0,c
  3852                           
  3853                           ;afficheur.c: 345: d2command((char)(add&0xff),(char)(add>>8),0x24);
  3854   00196E  500D               	movf	(plot1@add+1)^0,w,c
  3855   001970  6E05               	movwf	d2command@d2^0,c
  3856   001972  0E24               	movlw	36
  3857   001974  6E06               	movwf	d2command@cmd^0,c
  3858   001976  500C               	movf	plot1@add^0,w,c
  3859   001978  ECE1  F00E         	call	_d2command
  3860                           
  3861                           ;afficheur.c: 347: switch(x%6)
  3862   00197C  D018               	goto	i2l4049
  3863   00197E                     i2l4035:
  3864   00197E  0EFD               	movlw	253
  3865   001980  EC10  F010         	call	_command
  3866   001984  0012               	return	
  3867   001986                     i2l4037:
  3868   001986  0EFC               	movlw	252
  3869   001988  EC10  F010         	call	_command
  3870   00198C  0012               	return	
  3871   00198E                     i2l4039:
  3872   00198E  0EFB               	movlw	251
  3873   001990  EC10  F010         	call	_command
  3874   001994  0012               	return	
  3875   001996                     i2l4041:
  3876   001996  0EFA               	movlw	250
  3877   001998  EC10  F010         	call	_command
  3878   00199C  0012               	return	
  3879   00199E                     i2l4043:
  3880   00199E  0EF9               	movlw	249
  3881   0019A0  EC10  F010         	call	_command
  3882   0019A4  0012               	return	
  3883   0019A6                     i2l4045:
  3884   0019A6  0EF8               	movlw	248
  3885   0019A8  EC10  F010         	call	_command
  3886   0019AC  0012               	return	
  3887   0019AE                     i2l4049:
  3888   0019AE  C00E  F001         	movff	plot1@x,___awmod@dividend
  3889   0019B2  6A02               	clrf	(___awmod@dividend+1)^0,c
  3890   0019B4  0E00               	movlw	0
  3891   0019B6  6E04               	movwf	(___awmod@divisor+1)^0,c
  3892   0019B8  0E06               	movlw	6
  3893   0019BA  6E03               	movwf	___awmod@divisor^0,c
  3894   0019BC  ECD2  F00D         	call	___awmod	;wreg free
  3895                           
  3896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3897                           ; Switch size 1, requested type "simple"
  3898                           ; Number of cases is 1, Range of values is 0 to 0
  3899                           ; switch strategies available:
  3900                           ; Name         Instructions Cycles
  3901                           ; simple_byte            4     3 (average)
  3902                           ;	Chosen strategy is simple_byte
  3903   0019C0  5002               	movf	(?___awmod+1)^0,w,c
  3904   0019C2  0A00               	xorlw	0	; case 0
  3905   0019C4  A4D8               	btfss	status,2,c
  3906   0019C6  0012               	return	
  3907                           
  3908                           ; Switch size 1, requested type "simple"
  3909                           ; Number of cases is 6, Range of values is 0 to 5
  3910                           ; switch strategies available:
  3911                           ; Name         Instructions Cycles
  3912                           ; simple_byte           19    10 (average)
  3913                           ;	Chosen strategy is simple_byte
  3914   0019C8  5001               	movf	?___awmod^0,w,c
  3915   0019CA  0A00               	xorlw	0	; case 0
  3916   0019CC  B4D8               	btfsc	status,2,c
  3917   0019CE  D7D7               	goto	i2l4035
  3918   0019D0  0A01               	xorlw	1	; case 1
  3919   0019D2  B4D8               	btfsc	status,2,c
  3920   0019D4  D7D8               	goto	i2l4037
  3921   0019D6  0A03               	xorlw	3	; case 2
  3922   0019D8  B4D8               	btfsc	status,2,c
  3923   0019DA  D7D9               	goto	i2l4039
  3924   0019DC  0A01               	xorlw	1	; case 3
  3925   0019DE  B4D8               	btfsc	status,2,c
  3926   0019E0  D7DA               	goto	i2l4041
  3927   0019E2  0A07               	xorlw	7	; case 4
  3928   0019E4  B4D8               	btfsc	status,2,c
  3929   0019E6  D7DB               	goto	i2l4043
  3930   0019E8  0A01               	xorlw	1	; case 5
  3931   0019EA  A4D8               	btfss	status,2,c
  3932   0019EC  0012               	return	
  3933   0019EE  D7DB               	goto	i2l4045
  3934   0019F0                     __end_of_plot1:
  3935                           	callstack 0
  3936                           
  3937 ;; *************** function ___awmod *****************
  3938 ;; Defined at:
  3939 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  dividend        2    0[COMRAM] int 
  3942 ;;  divisor         2    2[COMRAM] int 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  sign            1    5[COMRAM] unsigned char 
  3945 ;;  counter         1    4[COMRAM] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2    0[COMRAM] int 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;Total ram usage:        6 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_plot1
  3965 ;;		_plot0
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text16
  3970   001BA4                     __ptext16:
  3971                           	callstack 0
  3972   001BA4                     ___awmod:
  3973                           	callstack 26
  3974                           
  3975                           ;incstack = 0
  3976   001BA4  0E00               	movlw	0
  3977   001BA6  6E06               	movwf	___awmod@sign^0,c
  3978   001BA8  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  3979   001BAA  D006               	goto	i2l3895
  3980   001BAC  6C01               	negf	___awmod@dividend^0,c
  3981   001BAE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3982   001BB0  B0D8               	btfsc	status,0,c
  3983   001BB2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3984   001BB4  0E01               	movlw	1
  3985   001BB6  6E06               	movwf	___awmod@sign^0,c
  3986   001BB8                     i2l3895:
  3987   001BB8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3988   001BBA  D004               	goto	i2l3899
  3989   001BBC  6C03               	negf	___awmod@divisor^0,c
  3990   001BBE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3991   001BC0  B0D8               	btfsc	status,0,c
  3992   001BC2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3993   001BC4                     i2l3899:
  3994   001BC4  5003               	movf	___awmod@divisor^0,w,c
  3995   001BC6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3996   001BC8  B4D8               	btfsc	status,2,c
  3997   001BCA  D018               	goto	i2l3915
  3998   001BCC  0E01               	movlw	1
  3999   001BCE  6E05               	movwf	___awmod@counter^0,c
  4000   001BD0  D004               	goto	i2l3905
  4001   001BD2                     i2l3903:
  4002   001BD2  90D8               	bcf	status,0,c
  4003   001BD4  3603               	rlcf	___awmod@divisor^0,f,c
  4004   001BD6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4005   001BD8  2A05               	incf	___awmod@counter^0,f,c
  4006   001BDA                     i2l3905:
  4007   001BDA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4008   001BDC  D7FA               	goto	i2l3903
  4009   001BDE                     i2u181_40:
  4010   001BDE  5003               	movf	___awmod@divisor^0,w,c
  4011   001BE0  5C01               	subwf	___awmod@dividend^0,w,c
  4012   001BE2  5004               	movf	(___awmod@divisor+1)^0,w,c
  4013   001BE4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4014   001BE6  A0D8               	btfss	status,0,c
  4015   001BE8  D004               	goto	i2l3911
  4016   001BEA  5003               	movf	___awmod@divisor^0,w,c
  4017   001BEC  5E01               	subwf	___awmod@dividend^0,f,c
  4018   001BEE  5004               	movf	(___awmod@divisor+1)^0,w,c
  4019   001BF0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4020   001BF2                     i2l3911:
  4021   001BF2  90D8               	bcf	status,0,c
  4022   001BF4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4023   001BF6  3203               	rrcf	___awmod@divisor^0,f,c
  4024   001BF8  2E05               	decfsz	___awmod@counter^0,f,c
  4025   001BFA  D7F1               	goto	i2u181_40
  4026   001BFC                     i2l3915:
  4027   001BFC  5006               	movf	___awmod@sign^0,w,c
  4028   001BFE  B4D8               	btfsc	status,2,c
  4029   001C00  D004               	goto	i2l3919
  4030   001C02  6C01               	negf	___awmod@dividend^0,c
  4031   001C04  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4032   001C06  B0D8               	btfsc	status,0,c
  4033   001C08  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4034   001C0A                     i2l3919:
  4035   001C0A  C001  F001         	movff	___awmod@dividend,?___awmod
  4036   001C0E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4037   001C12  0012               	return		;funcret
  4038   001C14                     __end_of___awmod:
  4039                           	callstack 0
  4040                           
  4041 ;; *************** function ___awdiv *****************
  4042 ;; Defined at:
  4043 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4044 ;; Parameters:    Size  Location     Type
  4045 ;;  dividend        2    0[COMRAM] int 
  4046 ;;  divisor         2    2[COMRAM] int 
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;  quotient        2    6[COMRAM] int 
  4049 ;;  sign            1    5[COMRAM] unsigned char 
  4050 ;;  counter         1    4[COMRAM] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  2    0[COMRAM] int 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;Total ram usage:        8 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_plot1
  4070 ;;		_draw_dec8
  4071 ;;		_plot0
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text17
  4076   001B20                     __ptext17:
  4077                           	callstack 0
  4078   001B20                     ___awdiv:
  4079                           	callstack 26
  4080                           
  4081                           ;incstack = 0
  4082   001B20  0E00               	movlw	0
  4083   001B22  6E06               	movwf	___awdiv@sign^0,c
  4084   001B24  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4085   001B26  D006               	goto	i2l3851
  4086   001B28  6C03               	negf	___awdiv@divisor^0,c
  4087   001B2A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4088   001B2C  B0D8               	btfsc	status,0,c
  4089   001B2E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4090   001B30  0E01               	movlw	1
  4091   001B32  6E06               	movwf	___awdiv@sign^0,c
  4092   001B34                     i2l3851:
  4093   001B34  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  4094   001B36  D006               	goto	i2l3857
  4095   001B38  6C01               	negf	___awdiv@dividend^0,c
  4096   001B3A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4097   001B3C  B0D8               	btfsc	status,0,c
  4098   001B3E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4099   001B40  0E01               	movlw	1
  4100   001B42  1A06               	xorwf	___awdiv@sign^0,f,c
  4101   001B44                     i2l3857:
  4102   001B44  0E00               	movlw	0
  4103   001B46  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4104   001B48  0E00               	movlw	0
  4105   001B4A  6E07               	movwf	___awdiv@quotient^0,c
  4106   001B4C  5003               	movf	___awdiv@divisor^0,w,c
  4107   001B4E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4108   001B50  B4D8               	btfsc	status,2,c
  4109   001B52  D01C               	goto	i2l3879
  4110   001B54  0E01               	movlw	1
  4111   001B56  6E05               	movwf	___awdiv@counter^0,c
  4112   001B58  D004               	goto	i2l3865
  4113   001B5A                     i2l3863:
  4114   001B5A  90D8               	bcf	status,0,c
  4115   001B5C  3603               	rlcf	___awdiv@divisor^0,f,c
  4116   001B5E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4117   001B60  2A05               	incf	___awdiv@counter^0,f,c
  4118   001B62                     i2l3865:
  4119   001B62  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4120   001B64  D7FA               	goto	i2l3863
  4121   001B66                     i2u175_40:
  4122   001B66  90D8               	bcf	status,0,c
  4123   001B68  3607               	rlcf	___awdiv@quotient^0,f,c
  4124   001B6A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4125   001B6C  5003               	movf	___awdiv@divisor^0,w,c
  4126   001B6E  5C01               	subwf	___awdiv@dividend^0,w,c
  4127   001B70  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4128   001B72  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4129   001B74  A0D8               	btfss	status,0,c
  4130   001B76  D005               	goto	i2l3875
  4131   001B78  5003               	movf	___awdiv@divisor^0,w,c
  4132   001B7A  5E01               	subwf	___awdiv@dividend^0,f,c
  4133   001B7C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4134   001B7E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4135   001B80  8007               	bsf	___awdiv@quotient^0,0,c
  4136   001B82                     i2l3875:
  4137   001B82  90D8               	bcf	status,0,c
  4138   001B84  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4139   001B86  3203               	rrcf	___awdiv@divisor^0,f,c
  4140   001B88  2E05               	decfsz	___awdiv@counter^0,f,c
  4141   001B8A  D7ED               	goto	i2u175_40
  4142   001B8C                     i2l3879:
  4143   001B8C  5006               	movf	___awdiv@sign^0,w,c
  4144   001B8E  B4D8               	btfsc	status,2,c
  4145   001B90  D004               	goto	i2l3883
  4146   001B92  6C07               	negf	___awdiv@quotient^0,c
  4147   001B94  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4148   001B96  B0D8               	btfsc	status,0,c
  4149   001B98  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4150   001B9A                     i2l3883:
  4151   001B9A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4152   001B9E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4153   001BA2  0012               	return		;funcret
  4154   001BA4                     __end_of___awdiv:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _lecture_8bit_analogique *****************
  4158 ;; Defined at:
  4159 ;;		line 60 in file "main.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  channel         1    wreg     unsigned char 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;  channel         1    1[COMRAM] unsigned char 
  4164 ;;  ret             1    0[COMRAM] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      unsigned char 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;Total ram usage:        2 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; This function calls:
  4181 ;;		Nothing
  4182 ;; This function is called by:
  4183 ;;		_tache1
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text18
  4188   001E84                     __ptext18:
  4189                           	callstack 0
  4190   001E84                     _lecture_8bit_analogique:
  4191                           	callstack 27
  4192                           
  4193                           ;incstack = 0
  4194                           ;lecture_8bit_analogique@channel stored from wreg
  4195   001E84  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4196                           
  4197                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4198   001E86  0E00               	movlw	0
  4199   001E88  6EC1               	movwf	193,c	;volatile
  4200                           
  4201                           ;main.c: 66: ADCON2=0x16;
  4202   001E8A  0E16               	movlw	22
  4203   001E8C  6EC0               	movwf	192,c	;volatile
  4204                           
  4205                           ;main.c: 67: channel=channel&0x1F;
  4206   001E8E  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4207   001E90  0B1F               	andlw	31
  4208   001E92  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4209                           
  4210                           ;main.c: 68: channel=channel<<2;
  4211   001E94  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4212   001E96  46E8               	rlncf	wreg,f,c
  4213   001E98  0BFC               	andlw	252
  4214   001E9A  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4215                           
  4216                           ;main.c: 69: ADCON0=channel|0x01;
  4217   001E9C  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4218   001E9E  0901               	iorlw	1
  4219   001EA0  6EC2               	movwf	194,c	;volatile
  4220                           
  4221                           ;main.c: 71: ADCON0bits.GO=1;
  4222   001EA2  82C2               	bsf	194,1,c	;volatile
  4223   001EA4                     i2l138:
  4224   001EA4  B2C2               	btfsc	194,1,c	;volatile
  4225   001EA6  D7FE               	goto	i2l138
  4226                           
  4227                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4228   001EA8  A0C3               	btfss	195,0,c	;volatile
  4229   001EAA  D003               	goto	i2l141
  4230                           
  4231                           ;main.c: 76: ret=0;
  4232   001EAC  0E00               	movlw	0
  4233   001EAE  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4234   001EB0  D002               	goto	i2l2583
  4235   001EB2                     i2l141:
  4236                           
  4237                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4238   001EB2  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4239   001EB6                     i2l2583:
  4240                           
  4241                           ;main.c: 81: return ret;
  4242   001EB6  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4243   001EB8  0012               	return		;funcret
  4244   001EBA                     __end_of_lecture_8bit_analogique:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _initialisation_afficheur *****************
  4248 ;; Defined at:
  4249 ;;		line 164 in file "afficheur.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;  error_count     1    8[COMRAM] unsigned char 
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;Total ram usage:        1 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; Hardware stack levels required when called: 3
  4270 ;; This function calls:
  4271 ;;		_check_status_ok
  4272 ;;		_command
  4273 ;;		_d1command
  4274 ;;		_d2command
  4275 ;;		_delai_us_char
  4276 ;; This function is called by:
  4277 ;;		_tache1
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text19
  4282   001876                     __ptext19:
  4283                           	callstack 0
  4284   001876                     _initialisation_afficheur:
  4285                           	callstack 24
  4286                           
  4287                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4288                           
  4289                           ;incstack = 0
  4290   001876  0E00               	movlw	0
  4291   001878  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4292                           
  4293                           ;afficheur.c: 172: LATH=0;
  4294   00187A  0E00               	movlw	0
  4295   00187C  6E90               	movwf	144,c	;volatile
  4296                           
  4297                           ;afficheur.c: 173: LATJ=0x1F;
  4298   00187E  0E1F               	movlw	31
  4299   001880  6E91               	movwf	145,c	;volatile
  4300                           
  4301                           ;afficheur.c: 176: TRISH=0;
  4302   001882  0E00               	movlw	0
  4303   001884  6E99               	movwf	153,c	;volatile
  4304                           
  4305                           ;afficheur.c: 177: TRISJ=0;
  4306   001886  0E00               	movlw	0
  4307   001888  6E9A               	movwf	154,c	;volatile
  4308                           
  4309                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4310   00188A  9A91               	bcf	145,5,c	;volatile
  4311                           
  4312                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4313   00188C  8C91               	bsf	145,6,c	;volatile
  4314                           
  4315                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4316   00188E  9891               	bcf	145,4,c	;volatile
  4317                           
  4318                           ;afficheur.c: 185: delai_us_char(4);
  4319   001890  0E04               	movlw	4
  4320   001892  ECF2  F00F         	call	_delai_us_char
  4321                           
  4322                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4323   001896  8891               	bsf	145,4,c	;volatile
  4324                           
  4325                           ;afficheur.c: 190: delai_us_char(12);
  4326   001898  0E0C               	movlw	12
  4327   00189A  ECF2  F00F         	call	_delai_us_char
  4328                           
  4329                           ;afficheur.c: 191: while(check_status_ok()==00)
  4330   00189E  D00C               	goto	i2l3947
  4331   0018A0                     i2l3937:
  4332                           
  4333                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4334   0018A0  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4335                           
  4336                           ;afficheur.c: 194: delai_us_char(12);
  4337   0018A2  0E0C               	movlw	12
  4338   0018A4  ECF2  F00F         	call	_delai_us_char
  4339                           
  4340                           ;afficheur.c: 195: if (error_count>200)
  4341   0018A8  0EC8               	movlw	200
  4342   0018AA  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4343   0018AC  D005               	goto	i2l3947
  4344                           
  4345                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4346   0018AE  828B               	bsf	139,1,c	;volatile
  4347   0018B0  808F               	bsf	143,0,c	;volatile
  4348   0018B2  948B               	bcf	139,2,c	;volatile
  4349                           
  4350                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4351   0018B4  9EF2               	bcf	242,7,c	;volatile
  4352   0018B6                     i2l1212:
  4353   0018B6  D7FF               	goto	i2l1212
  4354   0018B8                     i2l3947:
  4355   0018B8  ECA6  F00F         	call	_check_status_ok	;wreg free
  4356   0018BC  0900               	iorlw	0
  4357   0018BE  B4D8               	btfsc	status,2,c
  4358   0018C0  D7EF               	goto	i2l3937
  4359                           
  4360                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4361   0018C2  0E0F               	movlw	15
  4362   0018C4  6E05               	movwf	d2command@d2^0,c
  4363   0018C6  0E21               	movlw	33
  4364   0018C8  6E06               	movwf	d2command@cmd^0,c
  4365   0018CA  0E27               	movlw	39
  4366   0018CC  ECE1  F00E         	call	_d2command
  4367                           
  4368                           ;afficheur.c: 206: d2command(0,0,0x22);
  4369   0018D0  0E00               	movlw	0
  4370   0018D2  6E05               	movwf	d2command@d2^0,c
  4371   0018D4  0E22               	movlw	34
  4372   0018D6  6E06               	movwf	d2command@cmd^0,c
  4373   0018D8  0E00               	movlw	0
  4374   0018DA  ECE1  F00E         	call	_d2command
  4375                           
  4376                           ;afficheur.c: 207: d2command(0,0,0x24);
  4377   0018DE  0E00               	movlw	0
  4378   0018E0  6E05               	movwf	d2command@d2^0,c
  4379   0018E2  0E24               	movlw	36
  4380   0018E4  6E06               	movwf	d2command@cmd^0,c
  4381   0018E6  0E00               	movlw	0
  4382   0018E8  ECE1  F00E         	call	_d2command
  4383                           
  4384                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4385   0018EC  0E7B               	movlw	123
  4386   0018EE  6E05               	movwf	d2command@d2^0,c
  4387   0018F0  0E40               	movlw	64
  4388   0018F2  6E06               	movwf	d2command@cmd^0,c
  4389   0018F4  0E00               	movlw	0
  4390   0018F6  ECE1  F00E         	call	_d2command
  4391                           
  4392                           ;afficheur.c: 211: d2command(40,0,0x41);
  4393   0018FA  0E00               	movlw	0
  4394   0018FC  6E05               	movwf	d2command@d2^0,c
  4395   0018FE  0E41               	movlw	65
  4396   001900  6E06               	movwf	d2command@cmd^0,c
  4397   001902  0E28               	movlw	40
  4398   001904  ECE1  F00E         	call	_d2command
  4399                           
  4400                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4401   001908  0E80               	movlw	128
  4402   00190A  6E05               	movwf	d2command@d2^0,c
  4403   00190C  0E42               	movlw	66
  4404   00190E  6E06               	movwf	d2command@cmd^0,c
  4405   001910  0E00               	movlw	0
  4406   001912  ECE1  F00E         	call	_d2command
  4407                           
  4408                           ;afficheur.c: 213: d2command(40,0,0x43);
  4409   001916  0E00               	movlw	0
  4410   001918  6E05               	movwf	d2command@d2^0,c
  4411   00191A  0E43               	movlw	67
  4412   00191C  6E06               	movwf	d2command@cmd^0,c
  4413   00191E  0E28               	movlw	40
  4414   001920  ECE1  F00E         	call	_d2command
  4415                           
  4416                           ;afficheur.c: 216: command(0x80);
  4417   001924  0E80               	movlw	128
  4418   001926  EC10  F010         	call	_command
  4419                           
  4420                           ;afficheur.c: 219: command(0x9C);
  4421   00192A  0E9C               	movlw	156
  4422   00192C  EC10  F010         	call	_command
  4423                           
  4424                           ;afficheur.c: 222: command(0xA0);
  4425   001930  0EA0               	movlw	160
  4426   001932  EC10  F010         	call	_command
  4427                           
  4428                           ;afficheur.c: 225: d1command(0x02,0x70);
  4429   001936  0E70               	movlw	112
  4430   001938  6E05               	movwf	d1command@cmd^0,c
  4431   00193A  0E02               	movlw	2
  4432   00193C  EC09  F00F         	call	_d1command
  4433   001940  0012               	return		;funcret
  4434   001942                     __end_of_initialisation_afficheur:
  4435                           	callstack 0
  4436                           
  4437 ;; *************** function _command *****************
  4438 ;; Defined at:
  4439 ;;		line 90 in file "afficheur.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  cmd             1    wreg     unsigned char 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  cmd             1    4[COMRAM] unsigned char 
  4444 ;;  res             1    0        unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      unsigned char 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;Total ram usage:        1 bytes
  4459 ;; Hardware stack levels used: 1
  4460 ;; Hardware stack levels required when called: 2
  4461 ;; This function calls:
  4462 ;;		_delai_us_char
  4463 ;;		_wait_status_ok
  4464 ;;		_write_c_aff
  4465 ;; This function is called by:
  4466 ;;		_initialisation_afficheur
  4467 ;;		_plot1
  4468 ;;		_plot0
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text20
  4473   002020                     __ptext20:
  4474                           	callstack 0
  4475   002020                     _command:
  4476                           	callstack 24
  4477                           
  4478                           ;incstack = 0
  4479                           ;command@cmd stored from wreg
  4480   002020  6E05               	movwf	command@cmd^0,c
  4481                           
  4482                           ;afficheur.c: 96: if(wait_status_ok()==1)
  4483   002022  ECB8  F00E         	call	_wait_status_ok	;wreg free
  4484   002026  06E8               	decf	wreg,f,c
  4485   002028  A4D8               	btfss	status,2,c
  4486   00202A  0012               	return	
  4487                           
  4488                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  4489   00202C  0E0C               	movlw	12
  4490   00202E  ECF2  F00F         	call	_delai_us_char
  4491                           
  4492                           ;afficheur.c: 99: write_c_aff(cmd);
  4493   002032  5005               	movf	command@cmd^0,w,c
  4494   002034  EC2A  F010         	call	_write_c_aff
  4495   002038  0012               	return		;funcret
  4496   00203A                     __end_of_command:
  4497                           	callstack 0
  4498                           
  4499 ;; *************** function _check_status_ok *****************
  4500 ;; Defined at:
  4501 ;;		line 30 in file "afficheur.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;		None
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  res             1    0[COMRAM] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  1    wreg      unsigned char 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;Total ram usage:        1 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_initialisation_afficheur
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text21
  4529   001F4C                     __ptext21:
  4530                           	callstack 0
  4531   001F4C                     _check_status_ok:
  4532                           	callstack 26
  4533                           
  4534                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4535                           
  4536                           ;incstack = 0
  4537   001F4C  6899               	setf	153,c	;volatile
  4538                           
  4539                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4540   001F4E  8091               	bsf	145,0,c	;volatile
  4541                           
  4542                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4543   001F50  9691               	bcf	145,3,c	;volatile
  4544                           
  4545                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4546   001F52  9291               	bcf	145,1,c	;volatile
  4547                           
  4548                           ;afficheur.c: 39: __nop();
  4549   001F54  F000               	nop	
  4550                           
  4551                           ;afficheur.c: 40: __nop();
  4552   001F56  F000               	nop	
  4553                           
  4554                           ;afficheur.c: 41: __nop();
  4555   001F58  F000               	nop	
  4556                           
  4557                           ;afficheur.c: 42: res=PORTH;
  4558   001F5A  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4559                           
  4560                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4561   001F5E  8291               	bsf	145,1,c	;volatile
  4562                           
  4563                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4564   001F60  8691               	bsf	145,3,c	;volatile
  4565                           
  4566                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4567   001F62  5001               	movf	check_status_ok@res^0,w,c
  4568   001F64  0B03               	andlw	3
  4569   001F66  0A03               	xorlw	3
  4570   001F68  A4D8               	btfss	status,2,c
  4571   001F6A  D002               	goto	i2l2415
  4572                           
  4573                           ;afficheur.c: 47: res=1;
  4574   001F6C  0E01               	movlw	1
  4575   001F6E  D001               	goto	L2
  4576   001F70                     i2l2415:
  4577                           
  4578                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4579   001F70  0E00               	movlw	0
  4580   001F72                     L2:
  4581   001F72  6E01               	movwf	check_status_ok@res^0,c
  4582                           
  4583                           ;afficheur.c: 50: return res;
  4584   001F74  5001               	movf	check_status_ok@res^0,w,c
  4585   001F76  0012               	return		;funcret
  4586   001F78                     __end_of_check_status_ok:
  4587                           	callstack 0
  4588                           
  4589 ;; *************** function _init_rxtx *****************
  4590 ;; Defined at:
  4591 ;;		line 4 in file "rxtx.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;		None
  4594 ;; Auto vars:     Size  Location     Type
  4595 ;;		None
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  1    wreg      void 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;Total ram usage:        0 bytes
  4610 ;; Hardware stack levels used: 1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_tache1
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text22
  4619   001FC2                     __ptext22:
  4620                           	callstack 0
  4621   001FC2                     _init_rxtx:
  4622                           	callstack 27
  4623                           
  4624                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4625                           
  4626                           ;incstack = 0
  4627   001FC2  9C94               	bcf	148,6,c	;volatile
  4628                           
  4629                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4630   001FC4  8E94               	bsf	148,7,c	;volatile
  4631                           
  4632                           ;rxtx.c: 8: BAUDCON1=0x08;
  4633   001FC6  0E08               	movlw	8
  4634   001FC8  6E65               	movwf	101,c	;volatile
  4635                           
  4636                           ;rxtx.c: 9: SPBRGH1=0x04;
  4637   001FCA  0E04               	movlw	4
  4638   001FCC  6ED4               	movwf	212,c	;volatile
  4639                           
  4640                           ;rxtx.c: 10: SPBRG1=0xE1;
  4641   001FCE  0EE1               	movlw	225
  4642   001FD0  6EAF               	movwf	175,c	;volatile
  4643                           
  4644                           ;rxtx.c: 11: TXSTA1=0x04;
  4645   001FD2  0E04               	movlw	4
  4646   001FD4  6EAC               	movwf	172,c	;volatile
  4647                           
  4648                           ;rxtx.c: 12: RCSTA1=0x80;
  4649   001FD6  0E80               	movlw	128
  4650   001FD8  6EAB               	movwf	171,c	;volatile
  4651                           
  4652                           ;rxtx.c: 13: TXSTA1=0x24;
  4653   001FDA  0E24               	movlw	36
  4654   001FDC  6EAC               	movwf	172,c	;volatile
  4655                           
  4656                           ;rxtx.c: 14: RCSTA1=0x90;
  4657   001FDE  0E90               	movlw	144
  4658   001FE0  6EAB               	movwf	171,c	;volatile
  4659   001FE2  0012               	return		;funcret
  4660   001FE4                     __end_of_init_rxtx:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _goto_lico *****************
  4664 ;; Defined at:
  4665 ;;		line 295 in file "afficheur.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  ligne           1    wreg     unsigned char 
  4668 ;;  colonne         1    8[COMRAM] unsigned char 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  ligne           1   11[COMRAM] unsigned char 
  4671 ;;  adr             2   12[COMRAM] unsigned int 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  1    wreg      void 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4681 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4685 ;;Total ram usage:        6 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 3
  4688 ;; This function calls:
  4689 ;;		_d2command
  4690 ;; This function is called by:
  4691 ;;		_tache1
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text23
  4696   001C70                     __ptext23:
  4697                           	callstack 0
  4698   001C70                     _goto_lico:
  4699                           	callstack 24
  4700                           
  4701                           ;incstack = 0
  4702                           ;goto_lico@ligne stored from wreg
  4703   001C70  6E0C               	movwf	goto_lico@ligne^0,c
  4704                           
  4705                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  4706   001C72  0E7B               	movlw	123
  4707   001C74  6E0E               	movwf	(goto_lico@adr+1)^0,c
  4708   001C76  0E00               	movlw	0
  4709   001C78  6E0D               	movwf	goto_lico@adr^0,c
  4710                           
  4711                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  4712   001C7A  0E0F               	movlw	15
  4713   001C7C  640C               	cpfsgt	goto_lico@ligne^0,c
  4714   001C7E  D002               	goto	i2l3985
  4715   001C80  0E00               	movlw	0
  4716   001C82  6E0C               	movwf	goto_lico@ligne^0,c
  4717   001C84                     i2l3985:
  4718                           
  4719                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  4720   001C84  0E27               	movlw	39
  4721   001C86  6409               	cpfsgt	goto_lico@colonne^0,c
  4722   001C88  D002               	goto	i2l3989
  4723   001C8A  0E00               	movlw	0
  4724   001C8C  6E09               	movwf	goto_lico@colonne^0,c
  4725   001C8E                     i2l3989:
  4726                           
  4727                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  4728   001C8E  500C               	movf	goto_lico@ligne^0,w,c
  4729   001C90  0D28               	mullw	40
  4730   001C92  CFF3 F00A          	movff	prodl,??_goto_lico
  4731   001C96  CFF4 F00B          	movff	prodh,??_goto_lico+1
  4732   001C9A  5009               	movf	goto_lico@colonne^0,w,c
  4733   001C9C  260A               	addwf	??_goto_lico^0,f,c
  4734   001C9E  0E00               	movlw	0
  4735   001CA0  220B               	addwfc	(??_goto_lico+1)^0,f,c
  4736   001CA2  500D               	movf	goto_lico@adr^0,w,c
  4737   001CA4  240A               	addwf	??_goto_lico^0,w,c
  4738   001CA6  6E0D               	movwf	goto_lico@adr^0,c
  4739   001CA8  500E               	movf	(goto_lico@adr+1)^0,w,c
  4740   001CAA  200B               	addwfc	(??_goto_lico+1)^0,w,c
  4741   001CAC  6E0E               	movwf	(goto_lico@adr+1)^0,c
  4742                           
  4743                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  4744   001CAE  D001               	goto	i2l3991
  4745   001CB0                     i2l1266:
  4746                           
  4747                           ;afficheur.c: 304: __nop();
  4748   001CB0  F000               	nop	
  4749   001CB2                     i2l3991:
  4750   001CB2  500E               	movf	(goto_lico@adr+1)^0,w,c
  4751   001CB4  6E05               	movwf	d2command@d2^0,c
  4752   001CB6  0E24               	movlw	36
  4753   001CB8  6E06               	movwf	d2command@cmd^0,c
  4754   001CBA  500D               	movf	goto_lico@adr^0,w,c
  4755   001CBC  ECE1  F00E         	call	_d2command
  4756   001CC0  0900               	iorlw	0
  4757   001CC2  A4D8               	btfss	status,2,c
  4758   001CC4  0012               	return	
  4759   001CC6  D7F4               	goto	i2l1266
  4760   001CC8                     __end_of_goto_lico:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function _draw_string *****************
  4764 ;; Defined at:
  4765 ;;		line 242 in file "afficheur.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  4768 ;;		 -> STR_19(4), STR_18(3), STR_17(8), STR_16(12), 
  4769 ;;		 -> STR_15(12), STR_14(21), STR_13(7), STR_12(6), 
  4770 ;;		 -> STR_11(6), STR_10(10), STR_9(9), STR_8(6), 
  4771 ;;		 -> STR_7(13), STR_6(11), STR_5(7), STR_4(3), 
  4772 ;;		 -> STR_3(3), STR_2(3), STR_1(8), 
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;Total ram usage:        2 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 3
  4791 ;; This function calls:
  4792 ;;		_d1command
  4793 ;; This function is called by:
  4794 ;;		_tache1
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           	psect	text24
  4799   001CC8                     __ptext24:
  4800                           	callstack 0
  4801   001CC8                     _draw_string:
  4802                           	callstack 24
  4803                           
  4804                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  4805                           
  4806                           ;incstack = 0
  4807   001CC8  D013               	goto	i2l4011
  4808   001CCA                     i2l1230:
  4809                           
  4810                           ;afficheur.c: 247: __nop();
  4811   001CCA  F000               	nop	
  4812   001CCC                     i2l4007:
  4813   001CCC  0EC0               	movlw	192
  4814   001CCE  6E05               	movwf	d1command@cmd^0,c
  4815   001CD0  C008  FFF6         	movff	draw_string@tableau,tblptrl
  4816   001CD4  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  4817   001CD8                     	if	0	;tblptru may be non-zero
  4818   001CD8                     	endif
  4819   001CD8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4820   001CD8  0E00               	movlw	low (__mediumconst shr (0+16))
  4821   001CDA  6EF8               	movwf	tblptru,c
  4822   001CDC                     	endif
  4823   001CDC  0008               	tblrd		*
  4824   001CDE  50F5               	movf	tablat,w,c
  4825   001CE0  0FE0               	addlw	224
  4826   001CE2  EC09  F00F         	call	_d1command
  4827   001CE6  0900               	iorlw	0
  4828   001CE8  B4D8               	btfsc	status,2,c
  4829   001CEA  D7EF               	goto	i2l1230
  4830                           
  4831                           ;afficheur.c: 248: tableau++;
  4832   001CEC  4A08               	infsnz	draw_string@tableau^0,f,c
  4833   001CEE  2A09               	incf	(draw_string@tableau+1)^0,f,c
  4834   001CF0                     i2l4011:
  4835   001CF0  C008  FFF6         	movff	draw_string@tableau,tblptrl
  4836   001CF4  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  4837   001CF8                     	if	0	;tblptru may be non-zero
  4838   001CF8                     	endif
  4839   001CF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4840   001CF8  0E00               	movlw	low (__mediumconst shr (0+16))
  4841   001CFA  6EF8               	movwf	tblptru,c
  4842   001CFC                     	endif
  4843   001CFC  0008               	tblrd		*
  4844   001CFE  50F5               	movf	tablat,w,c
  4845   001D00  0900               	iorlw	0
  4846   001D02  B4D8               	btfsc	status,2,c
  4847   001D04  0012               	return	
  4848   001D06  C008  FFF6         	movff	draw_string@tableau,tblptrl
  4849   001D0A  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  4850   001D0E                     	if	0	;tblptru may be non-zero
  4851   001D0E                     	endif
  4852   001D0E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4853   001D0E  0E00               	movlw	low (__mediumconst shr (0+16))
  4854   001D10  6EF8               	movwf	tblptru,c
  4855   001D12                     	endif
  4856   001D12  0008               	tblrd		*
  4857   001D14  50F5               	movf	tablat,w,c
  4858   001D16  0900               	iorlw	0
  4859   001D18  B4D8               	btfsc	status,2,c
  4860   001D1A  0012               	return	
  4861   001D1C  D7D7               	goto	i2l4007
  4862   001D1E                     __end_of_draw_string:
  4863                           	callstack 0
  4864                           
  4865 ;; *************** function _draw_hex8 *****************
  4866 ;; Defined at:
  4867 ;;		line 252 in file "afficheur.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  octet           1    wreg     unsigned char 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  octet           1    7[COMRAM] unsigned char 
  4872 ;;  c               1    8[COMRAM] unsigned char 
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2, status,0, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used: 1
  4888 ;; Hardware stack levels required when called: 3
  4889 ;; This function calls:
  4890 ;;		_d1command
  4891 ;; This function is called by:
  4892 ;;		_tache1
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text25
  4897   001C14                     __ptext25:
  4898                           	callstack 0
  4899   001C14                     _draw_hex8:
  4900                           	callstack 24
  4901                           
  4902                           ;incstack = 0
  4903                           ;draw_hex8@octet stored from wreg
  4904   001C14  6E08               	movwf	draw_hex8@octet^0,c
  4905                           
  4906                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  4907   001C16  3808               	swapf	draw_hex8@octet^0,w,c
  4908   001C18  0B0F               	andlw	15
  4909   001C1A  6E09               	movwf	draw_hex8@c^0,c
  4910                           
  4911                           ;afficheur.c: 257: if (c>9)
  4912   001C1C  0E09               	movlw	9
  4913   001C1E  6409               	cpfsgt	draw_hex8@c^0,c
  4914   001C20  D003               	goto	i2l4019
  4915                           
  4916                           ;afficheur.c: 258: c=c+0x17;
  4917   001C22  5009               	movf	draw_hex8@c^0,w,c
  4918   001C24  0F17               	addlw	23
  4919   001C26  D002               	goto	L3
  4920   001C28                     i2l4019:
  4921                           
  4922                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  4923   001C28  5009               	movf	draw_hex8@c^0,w,c
  4924   001C2A  0F10               	addlw	16
  4925   001C2C                     L3:
  4926   001C2C  6E09               	movwf	draw_hex8@c^0,c
  4927   001C2E  D001               	goto	i2l4021
  4928   001C30                     i2l1241:
  4929                           
  4930                           ;afficheur.c: 262: __nop();
  4931   001C30  F000               	nop	
  4932   001C32                     i2l4021:
  4933   001C32  0EC0               	movlw	192
  4934   001C34  6E05               	movwf	d1command@cmd^0,c
  4935   001C36  5009               	movf	draw_hex8@c^0,w,c
  4936   001C38  EC09  F00F         	call	_d1command
  4937   001C3C  0900               	iorlw	0
  4938   001C3E  B4D8               	btfsc	status,2,c
  4939   001C40  D7F7               	goto	i2l1241
  4940                           
  4941                           ;afficheur.c: 264: c=(octet&0x0F);
  4942   001C42  5008               	movf	draw_hex8@octet^0,w,c
  4943   001C44  0B0F               	andlw	15
  4944   001C46  6E09               	movwf	draw_hex8@c^0,c
  4945                           
  4946                           ;afficheur.c: 265: if (c>9)
  4947   001C48  0E09               	movlw	9
  4948   001C4A  6409               	cpfsgt	draw_hex8@c^0,c
  4949   001C4C  D003               	goto	i2l4027
  4950                           
  4951                           ;afficheur.c: 266: c=c+0x17;
  4952   001C4E  5009               	movf	draw_hex8@c^0,w,c
  4953   001C50  0F17               	addlw	23
  4954   001C52  D002               	goto	L4
  4955   001C54                     i2l4027:
  4956                           
  4957                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  4958   001C54  5009               	movf	draw_hex8@c^0,w,c
  4959   001C56  0F10               	addlw	16
  4960   001C58                     L4:
  4961   001C58  6E09               	movwf	draw_hex8@c^0,c
  4962   001C5A  D001               	goto	i2l4029
  4963   001C5C                     i2l1246:
  4964                           
  4965                           ;afficheur.c: 270: __nop();
  4966   001C5C  F000               	nop	
  4967   001C5E                     i2l4029:
  4968   001C5E  0EC0               	movlw	192
  4969   001C60  6E05               	movwf	d1command@cmd^0,c
  4970   001C62  5009               	movf	draw_hex8@c^0,w,c
  4971   001C64  EC09  F00F         	call	_d1command
  4972   001C68  0900               	iorlw	0
  4973   001C6A  A4D8               	btfss	status,2,c
  4974   001C6C  0012               	return	
  4975   001C6E  D7F6               	goto	i2l1246
  4976   001C70                     __end_of_draw_hex8:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function _draw_char *****************
  4980 ;; Defined at:
  4981 ;;		line 228 in file "afficheur.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;  dccar           1    wreg     unsigned char 
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  dccar           1    7[COMRAM] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4999 ;;Total ram usage:        1 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; Hardware stack levels required when called: 3
  5002 ;; This function calls:
  5003 ;;		_d1command
  5004 ;; This function is called by:
  5005 ;;		_tache1
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text26
  5010   001EBA                     __ptext26:
  5011                           	callstack 0
  5012   001EBA                     _draw_char:
  5013                           	callstack 24
  5014                           
  5015                           ;incstack = 0
  5016                           ;draw_char@dccar stored from wreg
  5017   001EBA  6E08               	movwf	draw_char@dccar^0,c
  5018                           
  5019                           ;afficheur.c: 230: if (dccar<32)
  5020   001EBC  0E20               	movlw	32
  5021   001EBE  6008               	cpfslt	draw_char@dccar^0,c
  5022   001EC0  D002               	goto	i2l3997
  5023                           
  5024                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5025   001EC2  0E3F               	movlw	63
  5026   001EC4  6E08               	movwf	draw_char@dccar^0,c
  5027   001EC6                     i2l3997:
  5028                           
  5029                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5030   001EC6  0E9F               	movlw	159
  5031   001EC8  6408               	cpfsgt	draw_char@dccar^0,c
  5032   001ECA  D002               	goto	i2l4001
  5033                           
  5034                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5035   001ECC  0E3F               	movlw	63
  5036   001ECE  6E08               	movwf	draw_char@dccar^0,c
  5037   001ED0                     i2l4001:
  5038                           
  5039                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5040   001ED0  5008               	movf	draw_char@dccar^0,w,c
  5041   001ED2  0FE0               	addlw	224
  5042   001ED4  6E08               	movwf	draw_char@dccar^0,c
  5043                           
  5044                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5045   001ED6  D001               	goto	i2l4003
  5046   001ED8                     i2l1222:
  5047   001ED8  F000               	nop	
  5048   001EDA                     i2l4003:
  5049   001EDA  0EC0               	movlw	192
  5050   001EDC  6E05               	movwf	d1command@cmd^0,c
  5051   001EDE  5008               	movf	draw_char@dccar^0,w,c
  5052   001EE0  EC09  F00F         	call	_d1command
  5053   001EE4  0900               	iorlw	0
  5054   001EE6  A4D8               	btfss	status,2,c
  5055   001EE8  0012               	return	
  5056   001EEA  D7F6               	goto	i2l1222
  5057   001EEC                     __end_of_draw_char:
  5058                           	callstack 0
  5059                           
  5060 ;; *************** function _clear_text *****************
  5061 ;; Defined at:
  5062 ;;		line 307 in file "afficheur.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  add             2    8[COMRAM] unsigned int 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;Total ram usage:        2 bytes
  5081 ;; Hardware stack levels used: 1
  5082 ;; Hardware stack levels required when called: 3
  5083 ;; This function calls:
  5084 ;;		_d1command
  5085 ;;		_d2command
  5086 ;; This function is called by:
  5087 ;;		_tache1
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text27
  5092   001EEC                     __ptext27:
  5093                           	callstack 0
  5094   001EEC                     _clear_text:
  5095                           	callstack 24
  5096                           
  5097                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5098                           
  5099                           ;incstack = 0
  5100   001EEC  0E00               	movlw	0
  5101   001EEE  6E05               	movwf	d2command@d2^0,c
  5102   001EF0  0E24               	movlw	36
  5103   001EF2  6E06               	movwf	d2command@cmd^0,c
  5104   001EF4  0E00               	movlw	0
  5105   001EF6  ECE1  F00E         	call	_d2command
  5106                           
  5107                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5108   001EFA  0E00               	movlw	0
  5109   001EFC  6E0A               	movwf	(clear_text@add+1)^0,c
  5110   001EFE  0E00               	movlw	0
  5111   001F00  6E09               	movwf	clear_text@add^0,c
  5112   001F02                     i2l3959:
  5113                           
  5114                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5115   001F02  0EC0               	movlw	192
  5116   001F04  6E05               	movwf	d1command@cmd^0,c
  5117   001F06  0E00               	movlw	0
  5118   001F08  EC09  F00F         	call	_d1command
  5119   001F0C  4A09               	infsnz	clear_text@add^0,f,c
  5120   001F0E  2A0A               	incf	(clear_text@add+1)^0,f,c
  5121   001F10  0E80               	movlw	128
  5122   001F12  180A               	xorwf	(clear_text@add+1)^0,w,c
  5123   001F14  1009               	iorwf	clear_text@add^0,w,c
  5124   001F16  B4D8               	btfsc	status,2,c
  5125   001F18  0012               	return	
  5126   001F1A  D7F3               	goto	i2l3959
  5127   001F1C                     __end_of_clear_text:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function _clear_graphics *****************
  5131 ;; Defined at:
  5132 ;;		line 318 in file "afficheur.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  add             2    8[COMRAM] unsigned int 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;Total ram usage:        2 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 3
  5153 ;; This function calls:
  5154 ;;		_d1command
  5155 ;;		_d2command
  5156 ;; This function is called by:
  5157 ;;		_tache1
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text28
  5162   001F1C                     __ptext28:
  5163                           	callstack 0
  5164   001F1C                     _clear_graphics:
  5165                           	callstack 24
  5166                           
  5167                           ;afficheur.c: 320: unsigned int add;;afficheur.c: 322: d2command(0,0x80,0x24);
  5168                           
  5169                           ;incstack = 0
  5170   001F1C  0E80               	movlw	128
  5171   001F1E  6E05               	movwf	d2command@d2^0,c
  5172   001F20  0E24               	movlw	36
  5173   001F22  6E06               	movwf	d2command@cmd^0,c
  5174   001F24  0E00               	movlw	0
  5175   001F26  ECE1  F00E         	call	_d2command
  5176                           
  5177                           ;afficheur.c: 323: for (add=0x8000;add!=0xF800;add++)
  5178   001F2A  0E80               	movlw	128
  5179   001F2C  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5180   001F2E  0E00               	movlw	0
  5181   001F30  6E09               	movwf	clear_graphics@add^0,c
  5182   001F32                     i2l3973:
  5183                           
  5184                           ;afficheur.c: 324: {;afficheur.c: 325: d1command(0x00,0xC0);
  5185   001F32  0EC0               	movlw	192
  5186   001F34  6E05               	movwf	d1command@cmd^0,c
  5187   001F36  0E00               	movlw	0
  5188   001F38  EC09  F00F         	call	_d1command
  5189   001F3C  4A09               	infsnz	clear_graphics@add^0,f,c
  5190   001F3E  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5191   001F40  0EF8               	movlw	248
  5192   001F42  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5193   001F44  1009               	iorwf	clear_graphics@add^0,w,c
  5194   001F46  B4D8               	btfsc	status,2,c
  5195   001F48  0012               	return	
  5196   001F4A  D7F3               	goto	i2l3973
  5197   001F4C                     __end_of_clear_graphics:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function _d2command *****************
  5201 ;; Defined at:
  5202 ;;		line 128 in file "afficheur.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  d1              1    wreg     unsigned char 
  5205 ;;  d2              1    4[COMRAM] unsigned char 
  5206 ;;  cmd             1    5[COMRAM] unsigned char 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  d1              1    6[COMRAM] unsigned char 
  5209 ;;  res             1    7[COMRAM] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;Total ram usage:        4 bytes
  5224 ;; Hardware stack levels used: 1
  5225 ;; Hardware stack levels required when called: 2
  5226 ;; This function calls:
  5227 ;;		_delai_us_char
  5228 ;;		_wait_status_ok
  5229 ;;		_write_c_aff
  5230 ;;		_write_d_aff
  5231 ;; This function is called by:
  5232 ;;		_initialisation_afficheur
  5233 ;;		_goto_lico
  5234 ;;		_clear_text
  5235 ;;		_clear_graphics
  5236 ;;		_plot1
  5237 ;;		_clear_cgram
  5238 ;;		_plot0
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text29
  5243   001DC2                     __ptext29:
  5244                           	callstack 0
  5245   001DC2                     _d2command:
  5246                           	callstack 24
  5247                           
  5248                           ;incstack = 0
  5249                           ;d2command@d1 stored from wreg
  5250   001DC2  6E07               	movwf	d2command@d1^0,c
  5251                           
  5252                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  5253   001DC4  0E00               	movlw	0
  5254   001DC6  6E08               	movwf	d2command@res^0,c
  5255                           
  5256                           ;afficheur.c: 134: if (wait_status_ok()==1)
  5257   001DC8  ECB8  F00E         	call	_wait_status_ok	;wreg free
  5258   001DCC  06E8               	decf	wreg,f,c
  5259   001DCE  A4D8               	btfss	status,2,c
  5260   001DD0  D01E               	goto	i2l3833
  5261                           
  5262                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  5263   001DD2  0E0C               	movlw	12
  5264   001DD4  ECF2  F00F         	call	_delai_us_char
  5265                           
  5266                           ;afficheur.c: 137: write_d_aff(d1);
  5267   001DD8  5007               	movf	d2command@d1^0,w,c
  5268   001DDA  EC1D  F010         	call	_write_d_aff
  5269                           
  5270                           ;afficheur.c: 138: if (wait_status_ok()==1)
  5271   001DDE  ECB8  F00E         	call	_wait_status_ok	;wreg free
  5272   001DE2  06E8               	decf	wreg,f,c
  5273   001DE4  A4D8               	btfss	status,2,c
  5274   001DE6  D013               	goto	i2l3833
  5275                           
  5276                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  5277   001DE8  0E0C               	movlw	12
  5278   001DEA  ECF2  F00F         	call	_delai_us_char
  5279                           
  5280                           ;afficheur.c: 141: write_d_aff(d2);
  5281   001DEE  5005               	movf	d2command@d2^0,w,c
  5282   001DF0  EC1D  F010         	call	_write_d_aff
  5283                           
  5284                           ;afficheur.c: 142: if (wait_status_ok()==1)
  5285   001DF4  ECB8  F00E         	call	_wait_status_ok	;wreg free
  5286   001DF8  06E8               	decf	wreg,f,c
  5287   001DFA  A4D8               	btfss	status,2,c
  5288   001DFC  D008               	goto	i2l3833
  5289                           
  5290                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  5291   001DFE  0E0C               	movlw	12
  5292   001E00  ECF2  F00F         	call	_delai_us_char
  5293                           
  5294                           ;afficheur.c: 145: write_c_aff(cmd);
  5295   001E04  5006               	movf	d2command@cmd^0,w,c
  5296   001E06  EC2A  F010         	call	_write_c_aff
  5297                           
  5298                           ;afficheur.c: 147: res=1;
  5299   001E0A  0E01               	movlw	1
  5300   001E0C  6E08               	movwf	d2command@res^0,c
  5301   001E0E                     i2l3833:
  5302                           
  5303                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  5304   001E0E  5008               	movf	d2command@res^0,w,c
  5305   001E10  0012               	return		;funcret
  5306   001E12                     __end_of_d2command:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function _d1command *****************
  5310 ;; Defined at:
  5311 ;;		line 106 in file "afficheur.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  d1              1    wreg     unsigned char 
  5314 ;;  cmd             1    4[COMRAM] unsigned char 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;  d1              1    5[COMRAM] unsigned char 
  5317 ;;  res             1    6[COMRAM] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      unsigned char 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0, cstack
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;Total ram usage:        3 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; Hardware stack levels required when called: 2
  5334 ;; This function calls:
  5335 ;;		_delai_us_char
  5336 ;;		_wait_status_ok
  5337 ;;		_write_c_aff
  5338 ;;		_write_d_aff
  5339 ;; This function is called by:
  5340 ;;		_initialisation_afficheur
  5341 ;;		_draw_char
  5342 ;;		_draw_string
  5343 ;;		_draw_hex8
  5344 ;;		_clear_text
  5345 ;;		_clear_graphics
  5346 ;;		_draw_dec8
  5347 ;;		_clear_cgram
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text30
  5352   001E12                     __ptext30:
  5353                           	callstack 0
  5354   001E12                     _d1command:
  5355                           	callstack 24
  5356                           
  5357                           ;incstack = 0
  5358                           ;d1command@d1 stored from wreg
  5359   001E12  6E06               	movwf	d1command@d1^0,c
  5360                           
  5361                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  5362   001E14  0E00               	movlw	0
  5363   001E16  6E07               	movwf	d1command@res^0,c
  5364                           
  5365                           ;afficheur.c: 112: if (wait_status_ok()==1)
  5366   001E18  ECB8  F00E         	call	_wait_status_ok	;wreg free
  5367   001E1C  06E8               	decf	wreg,f,c
  5368   001E1E  A4D8               	btfss	status,2,c
  5369   001E20  D013               	goto	i2l3807
  5370                           
  5371                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  5372   001E22  0E0C               	movlw	12
  5373   001E24  ECF2  F00F         	call	_delai_us_char
  5374                           
  5375                           ;afficheur.c: 115: write_d_aff(d1);
  5376   001E28  5006               	movf	d1command@d1^0,w,c
  5377   001E2A  EC1D  F010         	call	_write_d_aff
  5378                           
  5379                           ;afficheur.c: 116: if (wait_status_ok()==1)
  5380   001E2E  ECB8  F00E         	call	_wait_status_ok	;wreg free
  5381   001E32  06E8               	decf	wreg,f,c
  5382   001E34  A4D8               	btfss	status,2,c
  5383   001E36  D008               	goto	i2l3807
  5384                           
  5385                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  5386   001E38  0E0C               	movlw	12
  5387   001E3A  ECF2  F00F         	call	_delai_us_char
  5388                           
  5389                           ;afficheur.c: 119: write_c_aff(cmd);
  5390   001E3E  5005               	movf	d1command@cmd^0,w,c
  5391   001E40  EC2A  F010         	call	_write_c_aff
  5392                           
  5393                           ;afficheur.c: 121: res=1;
  5394   001E44  0E01               	movlw	1
  5395   001E46  6E07               	movwf	d1command@res^0,c
  5396   001E48                     i2l3807:
  5397                           
  5398                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  5399   001E48  5007               	movf	d1command@res^0,w,c
  5400   001E4A  0012               	return		;funcret
  5401   001E4C                     __end_of_d1command:
  5402                           	callstack 0
  5403                           
  5404 ;; *************** function _write_d_aff *****************
  5405 ;; Defined at:
  5406 ;;		line 4 in file "afficheur.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;  data            1    wreg     unsigned char 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  data            1    0[COMRAM] unsigned char 
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  1    wreg      void 
  5413 ;; Registers used:
  5414 ;;		wreg, status,2
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;Total ram usage:        1 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_d1command
  5430 ;;		_d2command
  5431 ;; This function uses a non-reentrant model
  5432 ;;
  5433                           
  5434                           	psect	text31
  5435   00203A                     __ptext31:
  5436                           	callstack 0
  5437   00203A                     _write_d_aff:
  5438                           	callstack 25
  5439                           
  5440                           ;incstack = 0
  5441                           ;write_d_aff@data stored from wreg
  5442   00203A  6E01               	movwf	write_d_aff@data^0,c
  5443                           
  5444                           ;afficheur.c: 6: LATH=data;
  5445   00203C  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  5446                           
  5447                           ;afficheur.c: 7: TRISH=0x00;
  5448   002040  0E00               	movlw	0
  5449   002042  6E99               	movwf	153,c	;volatile
  5450                           
  5451                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  5452   002044  9091               	bcf	145,0,c	;volatile
  5453                           
  5454                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  5455   002046  9691               	bcf	145,3,c	;volatile
  5456                           
  5457                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  5458   002048  9491               	bcf	145,2,c	;volatile
  5459                           
  5460                           ;afficheur.c: 11: __nop();
  5461   00204A  F000               	nop	
  5462                           
  5463                           ;afficheur.c: 12: __nop();
  5464   00204C  F000               	nop	
  5465                           
  5466                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  5467   00204E  8491               	bsf	145,2,c	;volatile
  5468                           
  5469                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  5470   002050  8691               	bsf	145,3,c	;volatile
  5471   002052  0012               	return		;funcret
  5472   002054                     __end_of_write_d_aff:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _write_c_aff *****************
  5476 ;; Defined at:
  5477 ;;		line 17 in file "afficheur.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  command         1    wreg     unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  command         1    0[COMRAM] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  1    wreg      void 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;Total ram usage:        1 bytes
  5496 ;; Hardware stack levels used: 1
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_command
  5501 ;;		_d1command
  5502 ;;		_d2command
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text32
  5507   002054                     __ptext32:
  5508                           	callstack 0
  5509   002054                     _write_c_aff:
  5510                           	callstack 25
  5511                           
  5512                           ;incstack = 0
  5513                           ;write_c_aff@command stored from wreg
  5514   002054  6E01               	movwf	write_c_aff@command^0,c
  5515                           
  5516                           ;afficheur.c: 19: LATH=command;
  5517   002056  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  5518                           
  5519                           ;afficheur.c: 20: TRISH=0x00;
  5520   00205A  0E00               	movlw	0
  5521   00205C  6E99               	movwf	153,c	;volatile
  5522                           
  5523                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  5524   00205E  8091               	bsf	145,0,c	;volatile
  5525                           
  5526                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  5527   002060  9691               	bcf	145,3,c	;volatile
  5528                           
  5529                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  5530   002062  9491               	bcf	145,2,c	;volatile
  5531                           
  5532                           ;afficheur.c: 24: __nop();
  5533   002064  F000               	nop	
  5534                           
  5535                           ;afficheur.c: 25: __nop();
  5536   002066  F000               	nop	
  5537                           
  5538                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  5539   002068  8491               	bsf	145,2,c	;volatile
  5540                           
  5541                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  5542   00206A  8691               	bsf	145,3,c	;volatile
  5543   00206C  0012               	return		;funcret
  5544   00206E                     __end_of_write_c_aff:
  5545                           	callstack 0
  5546                           
  5547 ;; *************** function _wait_status_ok *****************
  5548 ;; Defined at:
  5549 ;;		line 53 in file "afficheur.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  res             1    3[COMRAM] unsigned char 
  5554 ;;  status          1    2[COMRAM] unsigned char 
  5555 ;;  err             1    1[COMRAM] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      unsigned char 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5569 ;;Total ram usage:        3 bytes
  5570 ;; Hardware stack levels used: 1
  5571 ;; Hardware stack levels required when called: 1
  5572 ;; This function calls:
  5573 ;;		_delai_us_char
  5574 ;; This function is called by:
  5575 ;;		_command
  5576 ;;		_d1command
  5577 ;;		_d2command
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text33
  5582   001D70                     __ptext33:
  5583                           	callstack 0
  5584   001D70                     _wait_status_ok:
  5585                           	callstack 24
  5586                           
  5587                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  5588                           
  5589                           ;incstack = 0
  5590   001D70  0E00               	movlw	0
  5591   001D72  6E02               	movwf	wait_status_ok@err^0,c
  5592                           
  5593                           ;afficheur.c: 58: res=2;
  5594   001D74  0E02               	movlw	2
  5595   001D76  D01E               	goto	L5
  5596   001D78                     i2l1180:
  5597                           
  5598                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  5599   001D78  6899               	setf	153,c	;volatile
  5600                           
  5601                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  5602   001D7A  8091               	bsf	145,0,c	;volatile
  5603                           
  5604                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  5605   001D7C  9691               	bcf	145,3,c	;volatile
  5606                           
  5607                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  5608   001D7E  9291               	bcf	145,1,c	;volatile
  5609                           
  5610                           ;afficheur.c: 65: __nop();
  5611   001D80  F000               	nop	
  5612                           
  5613                           ;afficheur.c: 66: status=PORTH;
  5614   001D82  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  5615                           
  5616                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  5617   001D86  8291               	bsf	145,1,c	;volatile
  5618                           
  5619                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  5620   001D88  8691               	bsf	145,3,c	;volatile
  5621                           
  5622                           ;afficheur.c: 70: status=(status&0x03);
  5623   001D8A  5003               	movf	wait_status_ok@status^0,w,c
  5624   001D8C  0B03               	andlw	3
  5625   001D8E  6E03               	movwf	wait_status_ok@status^0,c
  5626                           
  5627                           ;afficheur.c: 71: if (status!=0x03)
  5628   001D90  0E03               	movlw	3
  5629   001D92  1803               	xorwf	wait_status_ok@status^0,w,c
  5630   001D94  B4D8               	btfsc	status,2,c
  5631   001D96  D00D               	goto	i2l2401
  5632                           
  5633                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  5634   001D98  2A02               	incf	wait_status_ok@err^0,f,c
  5635                           
  5636                           ;afficheur.c: 74: delai_us_char(12);
  5637   001D9A  0E0C               	movlw	12
  5638   001D9C  ECF2  F00F         	call	_delai_us_char
  5639                           
  5640                           ;afficheur.c: 75: if (err>=250)
  5641   001DA0  0EF9               	movlw	249
  5642   001DA2  6402               	cpfsgt	wait_status_ok@err^0,c
  5643   001DA4  D008               	goto	i2l2403
  5644                           
  5645                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  5646   001DA6  9EF2               	bcf	242,7,c	;volatile
  5647                           
  5648                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  5649   001DA8  948B               	bcf	139,2,c	;volatile
  5650   001DAA  828B               	bsf	139,1,c	;volatile
  5651   001DAC  808F               	bsf	143,0,c	;volatile
  5652                           
  5653                           ;afficheur.c: 79: res=0;
  5654   001DAE  0E00               	movlw	0
  5655   001DB0  D001               	goto	L5
  5656   001DB2                     i2l2401:
  5657                           
  5658                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  5659   001DB2  0E01               	movlw	1
  5660   001DB4                     L5:
  5661   001DB4  6E04               	movwf	wait_status_ok@res^0,c
  5662   001DB6                     i2l2403:
  5663   001DB6  0E02               	movlw	2
  5664   001DB8  1804               	xorwf	wait_status_ok@res^0,w,c
  5665   001DBA  B4D8               	btfsc	status,2,c
  5666   001DBC  D7DD               	goto	i2l1180
  5667                           
  5668                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  5669   001DBE  5004               	movf	wait_status_ok@res^0,w,c
  5670   001DC0  0012               	return		;funcret
  5671   001DC2                     __end_of_wait_status_ok:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function _delai_us_char *****************
  5675 ;; Defined at:
  5676 ;;		line 154 in file "afficheur.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  ucdelai         1    wreg     unsigned char 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  ucdelai         1    0[COMRAM] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;Total ram usage:        1 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_wait_status_ok
  5700 ;;		_command
  5701 ;;		_d1command
  5702 ;;		_d2command
  5703 ;;		_initialisation_afficheur
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text34
  5708   001FE4                     __ptext34:
  5709                           	callstack 0
  5710   001FE4                     _delai_us_char:
  5711                           	callstack 24
  5712                           
  5713                           ;incstack = 0
  5714                           ;delai_us_char@ucdelai stored from wreg
  5715   001FE4  6E01               	movwf	delai_us_char@ucdelai^0,c
  5716                           
  5717                           ;afficheur.c: 157: while (ucdelai>0)
  5718   001FE6  D00B               	goto	i2l2349
  5719   001FE8                     i2l1204:
  5720                           
  5721                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  5722   001FE8  F000               	nop	
  5723   001FEA  F000               	nop	
  5724   001FEC  F000               	nop	
  5725   001FEE  F000               	nop	
  5726   001FF0  F000               	nop	
  5727   001FF2  F000               	nop	
  5728   001FF4  F000               	nop	
  5729   001FF6  F000               	nop	
  5730   001FF8  F000               	nop	
  5731   001FFA  F000               	nop	
  5732                           
  5733                           ;afficheur.c: 160: ucdelai--;
  5734   001FFC  0601               	decf	delai_us_char@ucdelai^0,f,c
  5735   001FFE                     i2l2349:
  5736   001FFE  5001               	movf	delai_us_char@ucdelai^0,w,c
  5737   002000  B4D8               	btfsc	status,2,c
  5738   002002  0012               	return	
  5739   002004  D7F1               	goto	i2l1204
  5740   002006                     __end_of_delai_us_char:
  5741                           	callstack 0
  5742                           
  5743                           	psect	text35
  5744   000000                     __ptext35:
  5745                           	callstack 0
  5746                           
  5747                           	psect	rparam
  5748   000000                     
  5749                           	psect	temp
  5750   00001D                     btemp:
  5751                           	callstack 0
  5752   00001D                     	ds	12
  5753   000000                     wtemp0	set	btemp
  5754   000000                     wtemp1	set	btemp+2
  5755   000000                     wtemp2	set	btemp+4
  5756   000000                     wtemp3	set	btemp+6
  5757   000000                     wtemp4	set	btemp+8
  5758   000000                     wtemp5	set	btemp+10
  5759   000000                     wtemp8	set	btemp+1
  5760   000000                     ttemp0	set	btemp
  5761   000000                     ttemp1	set	btemp+3
  5762   000000                     ttemp2	set	btemp+6
  5763   000000                     ttemp3	set	btemp+9
  5764   000000                     ttemp5	set	btemp+1
  5765   000000                     ttemp6	set	btemp+4
  5766   000000                     ttemp7	set	btemp+8
  5767   000000                     ltemp0	set	btemp
  5768   000000                     ltemp1	set	btemp+4
  5769   000000                     ltemp2	set	btemp+8
  5770   000000                     lltemp0	set	btemp
  5771                           
  5772                           	psect	idloc
  5773                           
  5774                           ;Config register IDLOC0 @ 0x200000
  5775                           ;	unspecified, using default values
  5776   200000                     	org	2097152
  5777   200000  FF                 	db	255
  5778                           
  5779                           ;Config register IDLOC1 @ 0x200001
  5780                           ;	unspecified, using default values
  5781   200001                     	org	2097153
  5782   200001  FF                 	db	255
  5783                           
  5784                           ;Config register IDLOC2 @ 0x200002
  5785                           ;	unspecified, using default values
  5786   200002                     	org	2097154
  5787   200002  FF                 	db	255
  5788                           
  5789                           ;Config register IDLOC3 @ 0x200003
  5790                           ;	unspecified, using default values
  5791   200003                     	org	2097155
  5792   200003  FF                 	db	255
  5793                           
  5794                           ;Config register IDLOC4 @ 0x200004
  5795                           ;	unspecified, using default values
  5796   200004                     	org	2097156
  5797   200004  FF                 	db	255
  5798                           
  5799                           ;Config register IDLOC5 @ 0x200005
  5800                           ;	unspecified, using default values
  5801   200005                     	org	2097157
  5802   200005  FF                 	db	255
  5803                           
  5804                           ;Config register IDLOC6 @ 0x200006
  5805                           ;	unspecified, using default values
  5806   200006                     	org	2097158
  5807   200006  FF                 	db	255
  5808                           
  5809                           ;Config register IDLOC7 @ 0x200007
  5810                           ;	unspecified, using default values
  5811   200007                     	org	2097159
  5812   200007  FF                 	db	255
  5813                           
  5814                           	psect	config
  5815                           
  5816                           ;Config register CONFIG1L @ 0x300000
  5817                           ;	VREG Sleep Enable bit
  5818                           ;	RETEN = ON, Enabled
  5819                           ;	LF-INTOSC Low-power Enable bit
  5820                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  5821                           ;	SOSC Power Selection and mode Configuration bits
  5822                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  5823                           ;	Extended Instruction Set
  5824                           ;	XINST = OFF, Disabled
  5825   300000                     	org	3145728
  5826   300000  15                 	db	21
  5827                           
  5828                           ;Config register CONFIG1H @ 0x300001
  5829                           ;	Oscillator
  5830                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  5831                           ;	PLL x4 Enable bit
  5832                           ;	PLLCFG = ON, Enabled
  5833                           ;	Fail-Safe Clock Monitor
  5834                           ;	FCMEN = OFF, Disabled
  5835                           ;	Internal External Oscillator Switch Over Mode
  5836                           ;	IESO = OFF, Disabled
  5837   300001                     	org	3145729
  5838   300001  13                 	db	19
  5839                           
  5840                           ;Config register CONFIG2L @ 0x300002
  5841                           ;	Power Up Timer
  5842                           ;	PWRTEN = OFF, Disabled
  5843                           ;	Brown Out Detect
  5844                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  5845                           ;	Brown-out Reset Voltage bits
  5846                           ;	BORV = 0, 3.0V
  5847                           ;	BORMV Power level
  5848                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  5849   300002                     	org	3145730
  5850   300002  61                 	db	97
  5851                           
  5852                           ;Config register CONFIG2H @ 0x300003
  5853                           ;	Watchdog Timer
  5854                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  5855                           ;	Watchdog Postscaler
  5856                           ;	WDTPS = 1, 1:1
  5857   300003                     	org	3145731
  5858   300003  00                 	db	0
  5859                           
  5860                           ;Config register CONFIG3L @ 0x300004
  5861                           ;	RTCC Clock Select
  5862                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  5863                           ;	External Address Shift bit
  5864                           ;	EASHFT = OFF, Address Shifting disabled
  5865                           ;	Address Bus Width Select bits
  5866                           ;	ABW = MM, 8-bit address bus
  5867                           ;	Data Bus Width
  5868                           ;	BW = 8, 8-bit external bus mode
  5869                           ;	External Bus Wait
  5870                           ;	WAIT = ON, Enabled
  5871   300004                     	org	3145732
  5872   300004  30                 	db	48
  5873                           
  5874                           ;Config register CONFIG3H @ 0x300005
  5875                           ;	CCP2 Mux
  5876                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  5877                           ;	ECCP Mux
  5878                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  5879                           ;	MSSP address masking
  5880                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  5881                           ;	Master Clear Enable
  5882                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  5883   300005                     	org	3145733
  5884   300005  80                 	db	128
  5885                           
  5886                           ;Config register CONFIG4L @ 0x300006
  5887                           ;	Stack Overflow Reset
  5888                           ;	STVREN = ON, Enabled
  5889                           ;	Boot Block Size
  5890                           ;	BBSIZ = BB1K, 1K word Boot Block size
  5891                           ;	Background Debug
  5892                           ;	DEBUG = OFF, Disabled
  5893   300006                     	org	3145734
  5894   300006  81                 	db	129
  5895                           
  5896                           ; Padding undefined space
  5897   300007                     	org	3145735
  5898   300007  FF                 	db	255
  5899                           
  5900                           ;Config register CONFIG5L @ 0x300008
  5901                           ;	Code Protect 00800-03FFF
  5902                           ;	CP0 = OFF, Disabled
  5903                           ;	Code Protect 04000-07FFF
  5904                           ;	CP1 = OFF, Disabled
  5905                           ;	Code Protect 08000-0BFFF
  5906                           ;	CP2 = OFF, Disabled
  5907                           ;	Code Protect 0C000-0FFFF
  5908                           ;	CP3 = OFF, Disabled
  5909                           ;	Code Protect 10000-13FFF
  5910                           ;	CP4 = OFF, Disabled
  5911                           ;	Code Protect 14000-17FFF
  5912                           ;	CP5 = OFF, Disabled
  5913                           ;	Code Protect 18000-1BFFF
  5914                           ;	CP6 = OFF, Disabled
  5915                           ;	Code Protect 1C000-1FFFF
  5916                           ;	CP7 = OFF, Disabled
  5917   300008                     	org	3145736
  5918   300008  FF                 	db	255
  5919                           
  5920                           ;Config register CONFIG5H @ 0x300009
  5921                           ;	Code Protect Boot
  5922                           ;	CPB = OFF, Disabled
  5923                           ;	Data EE Read Protect
  5924                           ;	CPD = OFF, Disabled
  5925   300009                     	org	3145737
  5926   300009  C0                 	db	192
  5927                           
  5928                           ;Config register CONFIG6L @ 0x30000A
  5929                           ;	Table Write Protect 00800-03FFF
  5930                           ;	WRT0 = OFF, Disabled
  5931                           ;	Table Write Protect 04000-07FFF
  5932                           ;	WRT1 = OFF, Disabled
  5933                           ;	Table Write Protect 08000-0BFFF
  5934                           ;	WRT2 = OFF, Disabled
  5935                           ;	Table Write Protect 0C000-0FFFF
  5936                           ;	WRT3 = OFF, Disabled
  5937                           ;	Table Write Protect 10000-13FFF
  5938                           ;	WRT4 = OFF, Disabled
  5939                           ;	Table Write Protect 14000-17FFF
  5940                           ;	WRT5 = OFF, Disabled
  5941                           ;	Table Write Protect 18000-1BFFF
  5942                           ;	WRT6 = OFF, Disabled
  5943                           ;	Table Write Protect 1C000-1FFFF
  5944                           ;	WRT7 = OFF, Disabled
  5945   30000A                     	org	3145738
  5946   30000A  FF                 	db	255
  5947                           
  5948                           ;Config register CONFIG6H @ 0x30000B
  5949                           ;	Config. Write Protect
  5950                           ;	WRTC = OFF, Disabled
  5951                           ;	Table Write Protect Boot
  5952                           ;	WRTB = OFF, Disabled
  5953                           ;	Data EE Write Protect
  5954                           ;	WRTD = OFF, Disabled
  5955   30000B                     	org	3145739
  5956   30000B  E0                 	db	224
  5957                           
  5958                           ;Config register CONFIG7L @ 0x30000C
  5959                           ;	Table Read Protect 00800-03FFF
  5960                           ;	EBRT0 = OFF, Disabled
  5961                           ;	Table Read Protect 04000-07FFF
  5962                           ;	EBRT1 = OFF, Disabled
  5963                           ;	Table Read Protect 08000-0BFFF
  5964                           ;	EBRT2 = OFF, Disabled
  5965                           ;	Table Read Protect 0C000-0FFFF
  5966                           ;	EBRT3 = OFF, Disabled
  5967                           ;	Table Read Protect 10000-13FFF
  5968                           ;	EBRT4 = OFF, Disabled
  5969                           ;	Table Read Protect 14000-17FFF
  5970                           ;	EBRT5 = OFF, Disabled
  5971                           ;	Table Read Protect 18000-1BFFF
  5972                           ;	EBRT6 = OFF, Disabled
  5973                           ;	Table Read Protect 1C000-1FFFF
  5974                           ;	EBRT7 = OFF, Disabled
  5975   30000C                     	org	3145740
  5976   30000C  FF                 	db	255
  5977                           
  5978                           ;Config register CONFIG7H @ 0x30000D
  5979                           ;	Table Read Protect Boot
  5980                           ;	EBRTB = OFF, Disabled
  5981   30000D                     	org	3145741
  5982   30000D  40                 	db	64
  5983                           tosu	equ	0xFFF
  5984                           tosh	equ	0xFFE
  5985                           tosl	equ	0xFFD
  5986                           stkptr	equ	0xFFC
  5987                           pclatu	equ	0xFFB
  5988                           pclath	equ	0xFFA
  5989                           pcl	equ	0xFF9
  5990                           tblptru	equ	0xFF8
  5991                           tblptrh	equ	0xFF7
  5992                           tblptrl	equ	0xFF6
  5993                           tablat	equ	0xFF5
  5994                           prodh	equ	0xFF4
  5995                           prodl	equ	0xFF3
  5996                           indf0	equ	0xFEF
  5997                           postinc0	equ	0xFEE
  5998                           postdec0	equ	0xFED
  5999                           preinc0	equ	0xFEC
  6000                           plusw0	equ	0xFEB
  6001                           fsr0h	equ	0xFEA
  6002                           fsr0l	equ	0xFE9
  6003                           wreg	equ	0xFE8
  6004                           indf1	equ	0xFE7
  6005                           postinc1	equ	0xFE6
  6006                           postdec1	equ	0xFE5
  6007                           preinc1	equ	0xFE4
  6008                           plusw1	equ	0xFE3
  6009                           fsr1h	equ	0xFE2
  6010                           fsr1l	equ	0xFE1
  6011                           bsr	equ	0xFE0
  6012                           indf2	equ	0xFDF
  6013                           postinc2	equ	0xFDE
  6014                           postdec2	equ	0xFDD
  6015                           preinc2	equ	0xFDC
  6016                           plusw2	equ	0xFDB
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8

Data Sizes:
    Strings     146
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     28      40
    BANK0           127      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 21
		 -> STR_19(CODE[4]), STR_18(CODE[3]), STR_17(CODE[8]), STR_16(CODE[12]), 
		 -> STR_15(CODE[12]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[6]), 
		 -> STR_11(CODE[6]), STR_10(CODE[10]), STR_9(CODE[9]), STR_8(CODE[6]), 
		 -> STR_7(CODE[13]), STR_6(CODE[11]), STR_5(CODE[7]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[8]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache2
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_goto_lico
    _tache1->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _initialisation_afficheur->_d2command
    _command->_wait_status_ok
    _goto_lico->_d2command
    _draw_string->_d1command
    _draw_hex8->_d1command
    _draw_char->_d1command
    _clear_text->_d2command
    _clear_graphics->_d2command
    _d2command->_wait_status_ok
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             27 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             10    10      0   24461
                                             17 COMRAM    10    10      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     755
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   22699
                                             14 COMRAM     1     1      0
                               _Init
                     _clear_graphics
                         _clear_text
                          _draw_char
                          _draw_hex8
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4036
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _goto_lico                                            6     5      1    3575
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _draw_string                                          2     0      2    2550
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (6) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (7) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _clear_graphics
       _d1command
         _delai_us_char
         _wait_status_ok
           _delai_us_char
         _write_c_aff
         _write_d_aff
       _d2command
         _delai_us_char
         _wait_status_ok
         _write_c_aff
         _write_d_aff
     _clear_text
       _d1command
       _d2command
     _draw_char
       _d1command
     _draw_hex8
       _d1command
     _draw_string
       _d1command
     _goto_lico
       _d2command
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
         _delai_us_char
         _wait_status_ok
         _write_c_aff
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
       ___awdiv
       ___awmod
       _command
       _d2command
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7F      0       0      64        0.0%
BITBANK0            7F      0       0       4        0.0%
BANK0               7F      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     1C      28       1       48.2%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      28      57        0.0%
DATA                 0      0      2E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Nov 22 10:26:32 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0030                                  _BSR 000FE0  
                       ?_draw_string 0008                                  _puc 002C  
                       ___awmod@sign 0006                                  wreg 000FE8  
                         _TXSTA1bits 000FAC                        _stid_delai_us 206E  
                               l1387 1FBE                                 l2565 1FA2  
                               l2567 1FA8                                 l2569 1FAE  
                               l4519 201C                                 STR_1 1059  
                               STR_2 1090                                 STR_3 108D  
                               STR_4 1087                                 STR_5 1070  
                               STR_6 103B                                 STR_7 1016  
                               STR_8 107D                                 STR_9 1050  
                               _T0IE 007F95                                 _T0IF 007F92  
                               _LATH 000F90                                 _LATJ 000F91  
                               _TMR0 000FD6      __end_of_fonction_d_interruption 032C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 1FA0                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 2006  
                               _fptr 0029                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 001D                                 prodh 000FF4  
                               prodl 000FF3                                 start 032C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                     ?_lecture_normale 0003  
                              ?_main 0001                      __end_of___awdiv 1BA4  
                              STR_10 1046                                STR_11 1077  
                              STR_12 1010                                STR_13 1069  
                              STR_14 1001                                STR_15 1023  
                              STR_16 102F                                STR_17 1061  
                              STR_18 108A                                STR_19 1083  
                    __end_of___awmod 1C14                                _T0CON 000FD5  
                    ___awdiv@divisor 0003                                _FSR0H 000FEA  
                              _FSR1H 000FE2                                _FSR0L 000FE9  
                              _FSR2H 000FDA                                _FSR1L 000FE1  
                              _FSR2L 000FD9                      __end_of___lwdiv 1D70  
                              i2l141 1EB2                                i2l138 1EA4  
                              i2l404 1172                                i2l423 1392  
                              i2l524 1632                                i2l519 15F0  
                              i2l537 2088                                i2l802 1858  
                              i2l730 17C8                                i2l724 17BC  
                              i2l900 16D6                                i2l742 17E0  
                              i2l718 17B0                                i2l760 1804  
                              i2l736 17D4                                i2l912 16EE  
                              i2l754 17F8                                i2l930 1712  
                              i2l906 16E2                                i2l772 181C  
                              i2l748 17EC                                i2l924 1706  
                              i2l790 1840                                i2l766 1810  
                              i2l942 172A                                i2l918 16FA  
                              i2l784 1834                                i2l960 174E  
                              i2l936 171E                                i2l778 1828  
                              i2l954 1742                                i2l796 184C  
                              i2l972 1766                                i2l948 1736  
                    ___awdiv@counter 0005                                i2l966 175A  
                              i2l894 16CA                                i2l978 1772  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 2054  
                        _write_d_aff 203A                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                      __end_of_command 203A  
                              _badge 000075                                _plot1 1942  
                              _queue 000069                                tablat 000FF5  
                              ltemp0 001D                                ltemp1 0021  
                              ltemp2 0025                __end_of_delai_us_char 2006  
                              plusw1 000FE3                      _check_status_ok 1F4C  
                              ttemp0 001D                                ttemp1 0020  
                              ttemp2 0023                                ttemp3 0026  
                              ttemp5 001E                                ttemp6 0021  
                              ttemp7 0025                                status 000FD8  
                              wtemp0 001D                                wtemp1 001F  
                              wtemp2 0021                                wtemp3 0023  
                              wtemp4 0025                                wtemp5 0027  
                              wtemp8 001E        initialisation_du_systeme@temp 001C  
                    __initialization 209E                         __end_of_Init 1FC2  
         lecture_8bit_analogique@ret 0001                         __end_of_main 2020  
                             ??_main 001D                        __activetblptr 000003  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               ?_plot1 0009  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0001  
                      _n_octet_badge 00007F                               _MEMCON 000F26  
                             i2l1204 1FE8                               i2l1212 18B6  
                             i2l1222 1ED8                               i2l1230 1CCA  
                             i2l1241 1C30                               i2l1180 1D78  
                             i2l1501 1A3E                               i2l1246 1C5C  
                             i2l2401 1DB2                               i2l4001 1ED0  
                             i2l1266 1CB0                               i2l2403 1DB6  
                             i2l4003 1EDA                               i2l4011 1CF0  
                             i2l1508 2070                               i2l4021 1C32  
                             i2l3213 1AB4                               i2l4007 1CCC  
                             i2l2415 1F70                               i2l2079 1D66  
                             i2l3231 1AE2                               i2l4041 1996  
                             i2l4113 1A8E                               i2l4027 1C54  
                             i2l4019 1C28                               i2l4043 199E  
                             i2l4035 197E                               i2l4123 1D34  
                             i2l3219 1AC2                               i2l3331 177E  
                             i2l2349 1FFE                               i2l4029 1C5E  
                             i2l4045 19A6                               i2l4037 1986  
                             i2l4125 1D3C                               i2l3237 1AF0  
                             i2l3341 1796                               i2l4039 198E  
                             i2l4135 1D5C                               i2l4049 19AE  
                             i2l4401 1298                               i2l3249 1B10  
                             i2l1498 1A2C                               i2l4411 12D0  
                             i2l4403 12A4                               i2l4059 2094  
                             i2l3291 1864                               i2l1499 1A34  
                             _PCLATH 000FFA                               i2l4413 12D6  
                             i2l4325 114A                               i2l4077 1A1E  
                             i2l4069 1A08                               i2l2583 1EB6  
                             i2l4335 1184                               i2l4503 1F98  
                             i2l4417 12EA                               i2l4345 11B2  
                             i2l4337 1190                               i2l4347 11B8  
                             i2l4365 121A                               i2l3807 1E48  
                             i2l3911 1BF2                               i2l3903 1BD2  
                             i2l4375 123E                               i2l4367 1220  
                             i2l4463 1610                               i2l3833 1E0E  
                             i2l3905 1BDA                               i2l4393 1274  
                             i2l3841 207C                               _PCLATU 000FFB  
                             i2l3851 1B34                               i2l3915 1BFC  
                             i2l4379 1246                               i2l4539 005C  
                             i2l4389 126C                               i2l3863 1B5A  
                             i2l3919 1C0A                               i2l4479 1652  
                             i2l3937 18A0                               i2l3865 1B62  
                             i2l3857 1B44                               i2l3947 18B8  
                             i2l3883 1B9A                               i2l3875 1B82  
                             i2l4683 0190                               i2l3973 1F32  
                             i2l3959 1F02                               i2l3991 1CB2  
                             i2l3879 1B8C                               i2l3895 1BB8  
                             i2l4839 02D4                               i2l3985 1C84  
                             i2l3899 1BC4                               i2l3997 1EC6  
                             i2l3989 1C8E                               _TABLAT 000FF5  
                             _RCSTA1 000FAB                           _Tick_Count 000071  
                             _SPBRG1 000FAF                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                             _TXREG1 000FAD                               _TXSTA1 000FAC  
                          ??___awdiv 0005                            ??___awmod 0005  
                          ??___lwdiv 0005                               _tache1 1094  
                             _tache2 15CE                               _tache3 1A92  
                             _tache4 17A8                               _tache5 16C2  
                             _tache6 1F78                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               lltemp0 001D  
                             plot1@x 000E                               plot1@y 0009  
                   __end_of_tp_delai 209E                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 1F78  
       lecture_normale@temps_attente 0005                           __accesstop 0060  
            __end_of__initialization 20A8                        ___rparam_used 000001  
                     __pcstackCOMRAM 0001                           ___inthi_sp 0AAC  
                  __end_of_d1command 1E4C                    __end_of_d2command 1E12  
                      __end_of_plot1 19F0                              ??_plot1 000A  
                       _W_TEMPORAIRE 000060                           __pnvCOMRAM 0029  
                     _clear_graphics 1F1C          ??_initialisation_du_systeme 001C  
                         _clear_text 1EEC             ?_fonction_d_interruption 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                         ?_write_d_aff 0001  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8             _initialisation_afficheur 1876  
                            _SPBRGH1 000FD4                              i2u94_40 17B4  
                            i2u96_40 17C0                              i2u98_40 17CC  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 0034  
             __end_of_clear_graphics 1F4C                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 1E4C                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_char 1EEC  
                  __end_of_draw_hex8 1C70                              ___awdiv 1B20  
                            ___awmod 1BA4                              ___lwdiv 1D1E  
                       __psmallconst 1000                              __pcinit 209E  
                            __ramtop 1000                       draw_char@dccar 0008  
                            __ptext0 2006                              __ptext1 1396  
                            __ptext2 1E4C                              __ptext3 1FA0  
                            __ptext5 1F78                              __ptext6 19F0  
                            __ptext7 206E                              __ptext8 16C2  
                            __ptext9 17A8                              _command 2020  
                          _T0CONbits 000FD5                   draw_string@tableau 0008  
          _initialisation_du_systeme 1396                     ___awmod@dividend 0001  
                  __end_of_init_rxtx 1FE4                    __end_of_goto_lico 1CC8  
                            _val_tos 002E                       draw_hex8@octet 0008  
                            _vitesse 000073                 end_of_initialization 20A8  
                            tache1@i 000F                              tache4@a 0001  
                            tache5@a 0001                              tache6@n 0009  
                    ?_clear_graphics 0001                          ?_clear_text 0001  
                         ??_tp_delai 0003                              postdec1 000FE5  
                            postinc1 000FE6                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84              _lecture_8bit_analogique 1E84  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                         command@cmd 0005                           draw_hex8@c 0009  
                 check_status_ok@res 0001               lecture_normale@n_octet 0006  
     lecture_8bit_analogique@channel 0002                            _d1command 1E12  
                          _d2command 1DC2                       __end_of_tache1 1396  
                     __end_of_tache2 16C2                       __end_of_tache3 1B20  
                     __end_of_tache4 1876                       __end_of_tache5 17A8  
                     __end_of_tache6 1FA0                        ??_draw_string 000A  
             lecture_normale@stid_id 0003                __end_of_stid_delai_us 2086  
                start_initialization 209E                    ??_lecture_normale 0005  
                      _delai_us_char 1FE4                             ??_tache1 000F  
                           ??_tache2 0008                             ??_tache3 0001  
                           ??_tache4 0001                             ??_tache5 0001  
                           ??_tache6 0009           ??_initialisation_afficheur 0009  
          ??_lecture_8bit_analogique 0001                        clear_text@add 0009  
                         ?_d1command 0005                 delai_us_char@ucdelai 0001  
                         ?_d2command 0005                          __pbssCOMRAM 0030  
         ??_initialisation_des_ports 001C                  __end_of_draw_string 1D1E  
                     ?_delai_us_char 0001                     ___lwdiv@dividend 0001  
                          __pintcode 0008                             ?___awdiv 0001  
                           ?___awmod 0001                             ?___lwdiv 0001  
                  _pointeur_de_tache 000070                            _draw_char 1EBA  
                          _draw_hex8 1C14                             ?_command 0001  
                     _wait_status_ok 1D70                          __smallconst 1000  
                          _contexte1 000100                            _contexte2 000200  
                          _contexte3 000300                            _contexte4 000400  
                          _contexte5 000500                            _contexte6 000600  
                           _BAUDCON1 000F65                     goto_lico@colonne 0009  
                       _tache_active 00006F                          _PADCFG1bits 000F53  
                   ??_clear_graphics 0009                     ___lwdiv@quotient 0005  
                          _init_rxtx 1FC2                   write_c_aff@command 0001  
                          _goto_lico 1C70      __end_of_lecture_8bit_analogique 1EBA  
                           _LATCbits 000F8B                             _LATDbits 000F8C  
  __end_of_initialisation_du_systeme 15CE                             _LATGbits 000F8F  
                           _LATJbits 000F91                             i2u100_40 17D8  
                           i2u110_40 1814                             i2u102_40 17E4  
                           i2u120_40 1850                             i2u112_40 1820  
                           i2u104_40 17F0                             i2u114_40 182C  
                           i2u106_40 17FC                             i2u131_40 16F2  
                           i2u116_40 1838                             i2u108_40 1808  
                           i2u221_40 12F4                             i2u141_40 172E  
                           i2u133_40 16FE                             i2u125_40 16CE  
                           i2u118_40 1844                             i2u151_40 176A  
                           i2u143_40 173A                             i2u135_40 170A  
                           i2u127_40 16DA                             i2u209_40 1D40  
                           i2u145_40 1746                             i2u137_40 1716  
                           i2u129_40 16E6                             i2u147_40 1752  
                           i2u139_40 1722                             i2u181_40 1BDE  
                           i2u149_40 175E                             i2u175_40 1B66  
                           _PIR1bits 000F9E                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 1DC2  
                        ??_d1command 0006                           ?_draw_char 0001  
                        ??_d2command 0007                           ?_draw_hex8 0001  
                         _ADCON0bits 000FC2                          _draw_string 1CC8  
                       _Val_sem_rxtx 0033                             _TP_appui 000066  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 1F1C                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           __Lrparam 0000     __end_of_initialisation_afficheur 1942  
                    ?_wait_status_ok 0001  initialisation_afficheur@error_count 0009  
            _fonction_d_interruption 0008                      _lecture_normale 19F0  
                           _batterie 000074                      ___lwdiv@divisor 0003  
   __end_of_initialisation_des_ports 1E84                      ___lwdiv@counter 0007  
                           __ptext10 1A92                             __ptext11 15CE  
                           __ptext20 2020                             __ptext12 2086  
                           __ptext21 1F4C                             __ptext13 1D1E  
                           __ptext30 1E12                             __ptext22 1FC2  
                           __ptext14 1094                             __ptext31 203A  
                           __ptext23 1C70                             __ptext15 1942  
                           __ptext32 2054                             __ptext24 1CC8  
                           __ptext16 1BA4                             __ptext33 1D70  
                           __ptext25 1C14                             __ptext17 1B20  
                           __ptext34 1FE4                             __ptext26 1EBA  
                           __ptext18 1E84                             __ptext35 0000  
                           __ptext27 1EEC                             __ptext19 1876  
                           __ptext28 1F1C                             __ptext29 1DC2  
                           isa$xinst 000000                             _tp_delai 2086  
                  ??_check_status_ok 0001                          ??_draw_char 0008  
                        ??_draw_hex8 0008                        ??_write_c_aff 0001  
                      ??_write_d_aff 0001                           _INTCONbits 000FF2  
                           tache2@hx 000E                             tache2@hy 0010  
                           tache2@ix 000A                             tache2@iy 000C  
                           tache2@lx 000F                             tache2@ly 0011  
                        ??_init_rxtx 0001                          ??_goto_lico 000A  
                           intlevel2 0000                             plot1@add 000C  
                     goto_lico@ligne 000C              __end_of_lecture_normale 1A92  
                       d1command@cmd 0005                         d1command@res 0007  
          ??_fonction_d_interruption 0012                         tp_delai@itpd 0001  
                        d1command@d1 0006                  __end_of_write_c_aff 206E  
                __end_of_write_d_aff 2054                         d2command@cmd 0006  
          ?_initialisation_afficheur 0001                         d2command@res 0008  
               wait_status_ok@status 0003                          d2command@d1 0007  
                        d2command@d2 0005  
