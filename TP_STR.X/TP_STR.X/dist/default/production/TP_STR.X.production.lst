

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 11 15:03:12 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64                           	dabs	1,0x603,1,_STKPTR_T6
    65                           	dabs	1,0x503,1,_STKPTR_T5
    66                           	dabs	1,0x403,1,_STKPTR_T4
    67                           	dabs	1,0x303,1,_STKPTR_T3
    68                           	dabs	1,0x203,1,_STKPTR_T2
    69                           	dabs	1,0x103,1,_STKPTR_T1
    70                           	dabs	1,0x60,1,_W_TEMPORAIRE
    71                           	dabs	1,0x100,66,_contexte1
    72                           	dabs	1,0x69,6,_queue
    73                           	dabs	1,0x71,2,_Tick_Count
    74                           	dabs	1,0x87,1,_x2
    75                           	dabs	1,0x86,1,_y1
    76                           	dabs	1,0x85,1,_x1
    77                           	dabs	1,0x84,1,_valeur_convertie
    78                           	dabs	1,0x83,1,_Valeur
    79                           	dabs	1,0x82,1,_Personne
    80                           	dabs	1,0x81,1,_TEST
    81                           	dabs	1,0x80,1,_RXTX_libre
    82                           	dabs	1,0x7F,1,_n_octet_badge
    83                           	dabs	1,0x74,1,_batterie
    84                           	dabs	1,0x73,1,_vitesse
    85                           	dabs	1,0x70,1,_pointeur_de_tache
    86                           	dabs	1,0x6F,1,_tache_active
    87                           	dabs	1,0x68,1,_TP_y
    88                           	dabs	1,0x67,1,_TP_x
    89                           	dabs	1,0x66,1,_TP_appui
    90                           	dabs	1,0x65,1,_DEMARRAGE
    91                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    92                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    93                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    94                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    95                           	dabs	1,0x75,10,_badge
    96                           	dabs	1,0x200,66,_contexte2
    97                           	dabs	1,0x300,66,_contexte3
    98                           	dabs	1,0x400,66,_contexte4
    99                           	dabs	1,0x500,66,_contexte5
   100                           	dabs	1,0x600,66,_contexte6
   101   000000                     
   102                           ; Generated 06/04/2022 GMT
   103                           ; 
   104                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F87K22 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136   000000                     
   137 ;;Init@sem	offset=-1 (param)
   138 ;;Init@sem	offset=-1 (param)
   139   000000                     _TMR0	set	4054
   140   000000                     _TOSU	set	4095
   141   000000                     _TOSH	set	4094
   142   000000                     _TOSL	set	4093
   143   000000                     _TABLAT	set	4085
   144   000000                     _TBLPTRL	set	4086
   145   000000                     _TBLPTRH	set	4087
   146   000000                     _TBLPTRU	set	4088
   147   000000                     _PRODL	set	4083
   148   000000                     _PRODH	set	4084
   149   000000                     _FSR2L	set	4057
   150   000000                     _FSR2H	set	4058
   151   000000                     _FSR1L	set	4065
   152   000000                     _FSR1H	set	4066
   153   000000                     _STKPTR	set	4092
   154   000000                     _FSR0L	set	4073
   155   000000                     _FSR0H	set	4074
   156   000000                     _BSR	set	4064
   157   000000                     _WREG	set	4072
   158   000000                     _STATUS	set	4056
   159                           
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 6 in file "main.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   183 ;;Total ram usage:        0 bytes
   184 ;; Hardware stack levels required when called: 8
   185 ;; This function calls:
   186 ;;		_Init
   187 ;;		_initialisation_des_ports
   188 ;;		_initialisation_du_systeme
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           	psect	text0
   195   002668                     __ptext0:
   196                           	callstack 0
   197   000000                     _T0IF	set	32658
   198   000000                     _INTCON2bits	set	4081
   199   002668                     _main:
   200                           	callstack 23
   201                           
   202                           ;main.c: 8: initialisation_des_ports();
   203                           
   204                           ;incstack = 0
   205   002668  EC48  F012         	call	_initialisation_des_ports	;wreg free
   206                           
   207                           ;main.c: 9: initialisation_du_systeme();
   208   00266C  ECF6  F00A         	call	_initialisation_du_systeme	;wreg free
   209                           
   210                           ;main.c: 10: Init(1);
   211   002670  0E01               	movlw	1
   212   002672  6EE6               	movwf	postinc1,c
   213   002674  ECF1  F012         	call	_Init	;wreg free
   214                           
   215                           ;main.c: 13: T0CONbits.TMR0ON=1;
   216   002678  8ED5               	bsf	213,7,c	;volatile
   217                           
   218                           ;main.c: 14: T0IF=1;
   219   00267A  84F2               	bsf	4082,2,c	;volatile
   220                           
   221                           ;main.c: 15: (INTCONbits.GIE = 1);
   222   00267C  8EF2               	bsf	242,7,c	;volatile
   223   00267E                     l5940:
   224                           
   225                           ;main.c: 19: __nop();
   226   00267E  F000               	nop	
   227   002680  D7FE               	goto	l5940
   228   002682                     __end_of_main:
   229                           	callstack 0
   230                           
   231                           	psect	nvCOMRAM
   232   000035                     __pnvCOMRAM:
   233                           	callstack 0
   234   000035                     _fptr:
   235                           	callstack 0
   236   000035                     	ds	3
   237   000038                     _puc:
   238                           	callstack 0
   239   000038                     	ds	2
   240   00003A                     _val_tos:
   241                           	callstack 0
   242   00003A                     	ds	2
   243   000000                     _ANCON1bits	set	3876
   244   000000                     _ANCON0bits	set	3877
   245   000000                     _TXSTA1	set	4012
   246   000000                     _LATJ	set	3985
   247   000000                     _T0CON	set	4053
   248   000000                     _ADCON0bits	set	4034
   249   000000                     _INTCONbits	set	4082
   250   000000                     _T0IE	set	32661
   251   000000                     _ANCON2	set	3875
   252   000000                     _ANCON1	set	3876
   253   000000                     _ANCON0	set	3877
   254   000000                     _MEMCON	set	3878
   255   000000                     _T0CONbits	set	4053
   256   000000                     _PADCFG1bits	set	3923
   257   000000                     _LATCbits	set	3979
   258   000000                     _LATDbits	set	3980
   259   000000                     _LATGbits	set	3983
   260   000000                     _LATJbits	set	3985
   261   000000                     _LATH	set	3984
   262   000000                     _TRISCbits	set	3988
   263   000000                     _TRISDbits	set	3989
   264   000000                     _TRISGbits	set	3992
   265   000000                     _TRISJ	set	3994
   266   000000                     _TRISH	set	3993
   267   000000                     _PIR1bits	set	3998
   268   000000                     _TXREG1	set	4013
   269   000000                     _ADCON2	set	4032
   270   000000                     _ADCON1	set	4033
   271   000000                     _BAUDCON1	set	3941
   272   000000                     _PORTBbits	set	3969
   273   000000                     _PORTEbits	set	3972
   274   000000                     _SPBRGH1	set	4052
   275   000000                     _ADRESH	set	4036
   276   000000                     _ADRESL	set	4035
   277   000000                     _ADCON0	set	4034
   278   000000                     _POSTINC0	set	4078
   279   000000                     _POSTINC1	set	4070
   280   000000                     _PCLATH	set	4090
   281   000000                     _PCLATU	set	4091
   282   000000                     _SPBRG1	set	4015
   283   000000                     _PORTH	set	3975
   284   000000                     _PORTDbits	set	3971
   285   000000                     _RCSTA1	set	4011
   286   000000                     _TXSTA1bits	set	4012
   287                           
   288                           	psect	smallconst
   289   001000                     __psmallconst:
   290                           	callstack 0
   291   001000  00                 	db	0
   292   001001                     STR_26:
   293   001001  41                 	db	65	;'A'
   294   001002  54                 	db	84	;'T'
   295   001003  54                 	db	84	;'T'
   296   001004  45                 	db	69	;'E'
   297   001005  4E                 	db	78	;'N'
   298   001006  54                 	db	84	;'T'
   299   001007  49                 	db	73	;'I'
   300   001008  4F                 	db	79	;'O'
   301   001009  4E                 	db	78	;'N'
   302   00100A  20                 	db	32
   303   00100B  76                 	db	118	;'v'
   304   00100C  6F                 	db	111	;'o'
   305   00100D  75                 	db	117	;'u'
   306   00100E  73                 	db	115	;'s'
   307   00100F  20                 	db	32
   308   001010  65                 	db	101	;'e'
   309   001011  74                 	db	116	;'t'
   310   001012  65                 	db	101	;'e'
   311   001013  73                 	db	115	;'s'
   312   001014  20                 	db	32
   313   001015  70                 	db	112	;'p'
   314   001016  6C                 	db	108	;'l'
   315   001017  65                 	db	101	;'e'
   316   001018  69                 	db	105	;'i'
   317   001019  6E                 	db	110	;'n'
   318   00101A  21                 	db	33
   319   00101B  21                 	db	33
   320   00101C  21                 	db	33
   321   00101D  00                 	db	0
   322   00101E                     STR_14:
   323   00101E  20                 	db	32
   324   00101F  41                 	db	65	;'A'
   325   001020  55                 	db	85	;'U'
   326   001021  43                 	db	67	;'C'
   327   001022  55                 	db	85	;'U'
   328   001023  4E                 	db	78	;'N'
   329   001024  20                 	db	32
   330   001025  20                 	db	32
   331   001026  20                 	db	32
   332   001027  20                 	db	32
   333   001028  20                 	db	32
   334   001029  20                 	db	32
   335   00102A  20                 	db	32
   336   00102B  20                 	db	32
   337   00102C  20                 	db	32
   338   00102D  20                 	db	32
   339   00102E  20                 	db	32
   340   00102F  20                 	db	32
   341   001030  20                 	db	32
   342   001031  20                 	db	32
   343   001032  00                 	db	0
   344   001033                     STR_27:
   345   001033  52                 	db	82	;'R'
   346   001034  4F                 	db	79	;'O'
   347   001035  55                 	db	85	;'U'
   348   001036  45                 	db	69	;'E'
   349   001037  53                 	db	83	;'S'
   350   001038  42                 	db	66	;'B'
   351   001039  59                 	db	89	;'Y'
   352   00103A  47                 	db	71	;'G'
   353   00103B  4E                 	db	78	;'N'
   354   00103C  4F                 	db	79	;'O'
   355   00103D  4C                 	db	76	;'L'
   356   00103E  45                 	db	69	;'E'
   357   00103F  53                 	db	83	;'S'
   358   001040  00                 	db	0
   359   001041                     STR_9:
   360   001041  54                 	db	84	;'T'
   361   001042  65                 	db	101	;'e'
   362   001043  6D                 	db	109	;'m'
   363   001044  70                 	db	112	;'p'
   364   001045  2E                 	db	46
   365   001046  20                 	db	32
   366   001047  48                 	db	72	;'H'
   367   001048  75                 	db	117	;'u'
   368   001049  69                 	db	105	;'i'
   369   00104A  6C                 	db	108	;'l'
   370   00104B  65                 	db	101	;'e'
   371   00104C  3A                 	db	58	;':'
   372   00104D  00                 	db	0
   373   00104E                     STR_18:
   374   00104E  58                 	db	88	;'X'
   375   00104F  2D                 	db	45
   376   001050  4A                 	db	74	;'J'
   377   001051  6F                 	db	111	;'o'
   378   001052  79                 	db	121	;'y'
   379   001053  73                 	db	115	;'s'
   380   001054  74                 	db	116	;'t'
   381   001055  69                 	db	105	;'i'
   382   001056  63                 	db	99	;'c'
   383   001057  6B                 	db	107	;'k'
   384   001058  3A                 	db	58	;':'
   385   001059  00                 	db	0
   386   00105A                     STR_19:
   387   00105A  59                 	db	89	;'Y'
   388   00105B  2D                 	db	45
   389   00105C  4A                 	db	74	;'J'
   390   00105D  6F                 	db	111	;'o'
   391   00105E  79                 	db	121	;'y'
   392   00105F  73                 	db	115	;'s'
   393   001060  74                 	db	116	;'t'
   394   001061  69                 	db	105	;'i'
   395   001062  63                 	db	99	;'c'
   396   001063  6B                 	db	107	;'k'
   397   001064  3A                 	db	58	;':'
   398   001065  00                 	db	0
   399   001066                     STR_8:
   400   001066  54                 	db	84	;'T'
   401   001067  65                 	db	101	;'e'
   402   001068  6D                 	db	109	;'m'
   403   001069  70                 	db	112	;'p'
   404   00106A  2E                 	db	46
   405   00106B  20                 	db	32
   406   00106C  45                 	db	69	;'E'
   407   00106D  61                 	db	97	;'a'
   408   00106E  75                 	db	117	;'u'
   409   00106F  3A                 	db	58	;':'
   410   001070  00                 	db	0
   411   001071                     STR_12:
   412   001071  42                 	db	66	;'B'
   413   001072  61                 	db	97	;'a'
   414   001073  74                 	db	116	;'t'
   415   001074  74                 	db	116	;'t'
   416   001075  65                 	db	101	;'e'
   417   001076  72                 	db	114	;'r'
   418   001077  69                 	db	105	;'i'
   419   001078  65                 	db	101	;'e'
   420   001079  3A                 	db	58	;':'
   421   00107A  00                 	db	0
   422   00107B                     STR_11:
   423   00107B  56                 	db	86	;'V'
   424   00107C  69                 	db	105	;'i'
   425   00107D  74                 	db	116	;'t'
   426   00107E  65                 	db	101	;'e'
   427   00107F  73                 	db	115	;'s'
   428   001080  73                 	db	115	;'s'
   429   001081  65                 	db	101	;'e'
   430   001082  3A                 	db	58	;':'
   431   001083  00                 	db	0
   432   001084                     STR_15:
   433   001084  4F                 	db	79	;'O'
   434   001085  70                 	db	112	;'p'
   435   001086  65                 	db	101	;'e'
   436   001087  72                 	db	114	;'r'
   437   001088  61                 	db	97	;'a'
   438   001089  74                 	db	116	;'t'
   439   00108A  6F                 	db	111	;'o'
   440   00108B  72                 	db	114	;'r'
   441   00108C  00                 	db	0
   442   00108D                     STR_1:
   443   00108D  30                 	db	48	;'0'
   444   00108E  2D                 	db	45
   445   00108F  2D                 	db	45
   446   001090  2D                 	db	45
   447   001091  2D                 	db	45
   448   001092  30                 	db	48	;'0'
   449   001093  2D                 	db	45
   450   001094  00                 	db	0
   451   001095                     STR_4:
   452   001095  4D                 	db	77	;'M'
   453   001096  61                 	db	97	;'a'
   454   001097  72                 	db	114	;'r'
   455   001098  63                 	db	99	;'c'
   456   001099  68                 	db	104	;'h'
   457   00109A  65                 	db	101	;'e'
   458   00109B  3A                 	db	58	;':'
   459   00109C  00                 	db	0
   460   00109D                     STR_13:
   461   00109D  42                 	db	66	;'B'
   462   00109E  61                 	db	97	;'a'
   463   00109F  64                 	db	100	;'d'
   464   0010A0  67                 	db	103	;'g'
   465   0010A1  65                 	db	101	;'e'
   466   0010A2  3A                 	db	58	;':'
   467   0010A3  00                 	db	0
   468   0010A4                     STR_7:
   469   0010A4  53                 	db	83	;'S'
   470   0010A5  69                 	db	105	;'i'
   471   0010A6  65                 	db	101	;'e'
   472   0010A7  67                 	db	103	;'g'
   473   0010A8  65                 	db	101	;'e'
   474   0010A9  3A                 	db	58	;':'
   475   0010AA  00                 	db	0
   476   0010AB                     STR_21:
   477   0010AB  43                 	db	67	;'C'
   478   0010AC  48                 	db	72	;'H'
   479   0010AD  41                 	db	65	;'A'
   480   0010AE  52                 	db	82	;'R'
   481   0010AF  47                 	db	71	;'G'
   482   0010B0  45                 	db	69	;'E'
   483   0010B1  00                 	db	0
   484   0010B2                     STR_16:
   485   0010B2  20                 	db	32
   486   0010B3  41                 	db	65	;'A'
   487   0010B4  44                 	db	68	;'D'
   488   0010B5  4D                 	db	77	;'M'
   489   0010B6  49                 	db	73	;'I'
   490   0010B7  4E                 	db	78	;'N'
   491   0010B8  00                 	db	0
   492   0010B9                     STR_5:
   493   0010B9  28                 	db	40
   494   0010BA  28                 	db	40
   495   0010BB  21                 	db	33
   496   0010BC  29                 	db	41
   497   0010BD  29                 	db	41
   498   0010BE  00                 	db	0
   499   0010BF                     STR_3:
   500   0010BF  2F                 	db	47
   501   0010C0  5E                 	db	94	;'^'
   502   0010C1  5E                 	db	94	;'^'
   503   0010C2  5E                 	db	94	;'^'
   504   0010C3  2D                 	db	45
   505   0010C4  00                 	db	0
   506   0010C5                     STR_10:
   507   0010C5  43                 	db	67	;'C'
   508   0010C6  68                 	db	104	;'h'
   509   0010C7  6F                 	db	111	;'o'
   510   0010C8  63                 	db	99	;'c'
   511   0010C9  3A                 	db	58	;':'
   512   0010CA  00                 	db	0
   513   0010CB                     STR_17:
   514   0010CB  41                 	db	65	;'A'
   515   0010CC  55                 	db	85	;'U'
   516   0010CD  43                 	db	67	;'C'
   517   0010CE  55                 	db	85	;'U'
   518   0010CF  4E                 	db	78	;'N'
   519   0010D0  00                 	db	0
   520   0010D1                     STR_22:
   521   0010D1  75                 	db	117	;'u'
   522   0010D2  70                 	db	112	;'p'
   523   0010D3  20                 	db	32
   524   0010D4  20                 	db	32
   525   0010D5  00                 	db	0
   526   0010D6                     STR_20:
   527   0010D6  56                 	db	86	;'V'
   528   0010D7  49                 	db	73	;'I'
   529   0010D8  44                 	db	68	;'D'
   530   0010D9  45                 	db	69	;'E'
   531   0010DA  00                 	db	0
   532   0010DB                     STR_23:
   533   0010DB  64                 	db	100	;'d'
   534   0010DC  6F                 	db	111	;'o'
   535   0010DD  77                 	db	119	;'w'
   536   0010DE  6E                 	db	110	;'n'
   537   0010DF  00                 	db	0
   538   0010E0                     STR_25:
   539   0010E0  20                 	db	32
   540   0010E1  79                 	db	121	;'y'
   541   0010E2  3D                 	db	61	;'='
   542   0010E3  00                 	db	0
   543   0010E4                     STR_2:
   544   0010E4  7C                 	db	124
   545   0010E5  5F                 	db	95	;'_'
   546   0010E6  6F                 	db	111	;'o'
   547   0010E7  00                 	db	0
   548   0010E8                     STR_31:
   549   0010E8  4E                 	db	78	;'N'
   550   0010E9  20                 	db	32
   551   0010EA  00                 	db	0
   552   0010EB                     STR_30:
   553   0010EB  41                 	db	65	;'A'
   554   0010EC  52                 	db	82	;'R'
   555   0010ED  00                 	db	0
   556   0010EE                     STR_29:
   557   0010EE  41                 	db	65	;'A'
   558   0010EF  56                 	db	86	;'V'
   559   0010F0  00                 	db	0
   560   0010F1                     STR_24:
   561   0010F1  78                 	db	120	;'x'
   562   0010F2  3D                 	db	61	;'='
   563   0010F3  00                 	db	0
   564   0010F4  00                 	db	0	; dummy byte at the end
   565   000000                     
   566                           ; #config settings
   567                           
   568                           	psect	cinit
   569   002730                     __pcinit:
   570                           	callstack 0
   571   002730                     start_initialization:
   572                           	callstack 0
   573   002730                     __initialization:
   574                           	callstack 0
   575                           
   576                           ; Clear objects allocated to COMRAM (5 bytes)
   577   002730  6A40               	clrf	(__pbssCOMRAM+4)& (0+255),c
   578   002732  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   579   002734  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   580   002736  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   581   002738  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   582   00273A                     end_of_initialization:
   583                           	callstack 0
   584   00273A                     __end_of__initialization:
   585                           	callstack 0
   586   00273A  0100               	movlb	0
   587   00273C  EF34  F013         	goto	_main	;jump to C main() function
   588                           
   589                           	psect	bssCOMRAM
   590   00003C                     __pbssCOMRAM:
   591                           	callstack 0
   592   00003C                     _tc:
   593                           	callstack 0
   594   00003C                     	ds	3
   595   00003F                     _Val_sem_rxtx:
   596                           	callstack 0
   597   00003F                     	ds	1
   598   000040                     _Val_sem_cna:
   599                           	callstack 0
   600   000040                     	ds	1
   601                           
   602                           	psect	cstackBANK0
   603   000088                     __pcstackBANK0:
   604                           	callstack 0
   605   000088                     initialisation_du_systeme@temp:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x0
   609   000088                     	ds	1
   610   000089                     
   611                           ; 1 bytes @ 0x1
   612                           
   613                           	psect	cstackCOMRAM
   614   000001                     __pcstackCOMRAM:
   615                           	callstack 0
   616   000001                     ?_Diminution:
   617   000001                     ?___wmul:
   618                           	callstack 0
   619   000001                     ?___awmod:
   620                           	callstack 0
   621   000001                     ?___lwdiv:
   622                           	callstack 0
   623   000001                     lecture_8bit_analogique@ret:
   624                           	callstack 0
   625   000001                     write_d_aff@data:
   626                           	callstack 0
   627   000001                     write_c_aff@command:
   628                           	callstack 0
   629   000001                     check_status_ok@res:
   630                           	callstack 0
   631   000001                     delai_us_char@ucdelai:
   632                           	callstack 0
   633   000001                     tp_delai@itpd:
   634                           	callstack 0
   635   000001                     tache4@a:
   636                           	callstack 0
   637   000001                     tache5@a:
   638                           	callstack 0
   639   000001                     vitesseAdmin@a:
   640                           	callstack 0
   641   000001                     Diminution@vitesse:
   642                           	callstack 0
   643   000001                     stid_delai_us@isdu:
   644                           	callstack 0
   645   000001                     ___wmul@multiplier:
   646                           	callstack 0
   647   000001                     ___awmod@dividend:
   648                           	callstack 0
   649   000001                     ___lwdiv@dividend:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x0
   653   000001                     	ds	1
   654   000002                     lecture_8bit_analogique@channel:
   655                           	callstack 0
   656   000002                     wait_status_ok@err:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x1
   660   000002                     	ds	1
   661   000003                     ??_vitesseAdmin:
   662   000003                     wait_status_ok@status:
   663                           	callstack 0
   664   000003                     lecture_normale@stid_id:
   665                           	callstack 0
   666   000003                     ___wmul@multiplicand:
   667                           	callstack 0
   668   000003                     ___awmod@divisor:
   669                           	callstack 0
   670   000003                     ___lwdiv@divisor:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x2
   674   000003                     	ds	1
   675   000004                     wait_status_ok@res:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x3
   679   000004                     	ds	1
   680   000005                     command@cmd:
   681                           	callstack 0
   682   000005                     d1command@cmd:
   683                           	callstack 0
   684   000005                     d2command@d2:
   685                           	callstack 0
   686   000005                     lecture_normale@temps_attente:
   687                           	callstack 0
   688   000005                     ___awmod@counter:
   689                           	callstack 0
   690   000005                     ___wmul@product:
   691                           	callstack 0
   692   000005                     ___lwdiv@quotient:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x4
   696   000005                     	ds	1
   697   000006                     d1command@d1:
   698                           	callstack 0
   699   000006                     d2command@cmd:
   700                           	callstack 0
   701   000006                     lecture_normale@n_octet:
   702                           	callstack 0
   703   000006                     ___awmod@sign:
   704                           	callstack 0
   705   000006                     vitesseAdmin@b:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x5
   709   000006                     	ds	1
   710   000007                     ?___awdiv:
   711                           	callstack 0
   712   000007                     d1command@res:
   713                           	callstack 0
   714   000007                     d2command@d1:
   715                           	callstack 0
   716   000007                     lecture_normale@n_bit:
   717                           	callstack 0
   718   000007                     ___lwdiv@counter:
   719                           	callstack 0
   720   000007                     ___awdiv@dividend:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x6
   724   000007                     	ds	1
   725   000008                     ??_tache2:
   726   000008                     d2command@res:
   727                           	callstack 0
   728   000008                     draw_char@dccar:
   729                           	callstack 0
   730   000008                     draw_hex8@octet:
   731                           	callstack 0
   732   000008                     lecture_normale@octet:
   733                           	callstack 0
   734   000008                     draw_string@tableau:
   735                           	callstack 0
   736   000008                     vitesseAdmin@c:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x7
   740   000008                     	ds	1
   741   000009                     tache6@n:
   742                           	callstack 0
   743   000009                     initialisation_afficheur@error_count:
   744                           	callstack 0
   745   000009                     draw_hex8@c:
   746                           	callstack 0
   747   000009                     goto_lico@colonne:
   748                           	callstack 0
   749   000009                     clear_text@add:
   750                           	callstack 0
   751   000009                     clear_graphics@add:
   752                           	callstack 0
   753   000009                     ___awdiv@divisor:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x8
   757   000009                     	ds	1
   758   00000A                     ??_goto_lico:
   759   00000A                     tache2@ix:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x9
   763   00000A                     	ds	1
   764   00000B                     ___awdiv@counter:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0xA
   768   00000B                     	ds	1
   769   00000C                     goto_lico@ligne:
   770                           	callstack 0
   771   00000C                     ___awdiv@sign:
   772                           	callstack 0
   773   00000C                     tache2@iy:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0xB
   777   00000C                     	ds	1
   778   00000D                     goto_lico@adr:
   779                           	callstack 0
   780   00000D                     ___awdiv@quotient:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0xC
   784   00000D                     	ds	1
   785   00000E                     tache2@hx:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0xD
   789   00000E                     	ds	1
   790   00000F                     ??_marche:
   791   00000F                     ??_draw_dec8:
   792   00000F                     ?_Conversion:
   793                           	callstack 0
   794   00000F                     tache2@lx:
   795                           	callstack 0
   796   00000F                     clear_line@line:
   797                           	callstack 0
   798   00000F                     plot1@y:
   799                           	callstack 0
   800   00000F                     plot0@y:
   801                           	callstack 0
   802   00000F                     Conversion@a:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0xE
   806   00000F                     	ds	1
   807   000010                     ??_plot1:
   808   000010                     ??_plot0:
   809   000010                     tache2@hy:
   810                           	callstack 0
   811   000010                     draw_dec8@unit:
   812                           	callstack 0
   813   000010                     clear_line@column:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0xF
   817   000010                     	ds	1
   818   000011                     tache2@ly:
   819                           	callstack 0
   820   000011                     draw_dec8@octet:
   821                           	callstack 0
   822   000011                     Conversion@valeur_lue:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x10
   826   000011                     	ds	1
   827   000012                     draw_dec8@cent:
   828                           	callstack 0
   829   000012                     plot1@add:
   830                           	callstack 0
   831   000012                     plot0@add:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x11
   835   000012                     	ds	1
   836   000013                     draw_dec8@dix:
   837                           	callstack 0
   838   000013                     Conversion@valeur_convertie:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x12
   842   000013                     	ds	1
   843   000014                     draw_dec8@c:
   844                           	callstack 0
   845   000014                     plot1@x:
   846                           	callstack 0
   847   000014                     plot0@x:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x13
   851   000014                     	ds	1
   852   000015                     draw_square@y1:
   853                           	callstack 0
   854   000015                     clear_square@y1:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x14
   858   000015                     	ds	1
   859   000016                     draw_square@x2:
   860                           	callstack 0
   861   000016                     clear_square@x2:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x15
   865   000016                     	ds	1
   866   000017                     draw_square@y2:
   867                           	callstack 0
   868   000017                     clear_square@y2:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x16
   872   000017                     	ds	1
   873   000018                     draw_square@x1:
   874                           	callstack 0
   875   000018                     clear_square@x1:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x17
   879   000018                     	ds	1
   880   000019                     draw_square@x:
   881                           	callstack 0
   882   000019                     clear_square@x:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x18
   886   000019                     	ds	1
   887   00001A                     draw_square@y:
   888                           	callstack 0
   889   00001A                     clear_square@y:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x19
   893   00001A                     	ds	1
   894   00001B                     ??_tache1:
   895                           
   896                           ; 1 bytes @ 0x1A
   897   00001B                     	ds	2
   898   00001D                     ??_fonction_d_interruption:
   899                           
   900                           ; 1 bytes @ 0x1C
   901   00001D                     	ds	12
   902                           
   903 ;; *************** function _initialisation_du_systeme *****************
   904 ;; Defined at:
   905 ;;		line 131 in file "systeme.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  temp            1    0[BANK0 ] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;Total ram usage:        1 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 7
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text1
   934   0015EC                     __ptext1:
   935                           	callstack 0
   936   0015EC                     _initialisation_du_systeme:
   937                           	callstack 23
   938                           
   939                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   940                           
   941                           ;incstack = 0
   942   0015EC  0E01               	movlw	1
   943   0015EE  0100               	movlb	0	; () banked
   944   0015F0  6F65               	movwf	101,b
   945                           
   946                           ;systeme.c: 138: queue[0]=1;
   947   0015F2  0E01               	movlw	1
   948   0015F4  6F69               	movwf	105,b
   949                           
   950                           ;systeme.c: 139: queue[1]=2;
   951   0015F6  0E02               	movlw	2
   952   0015F8  6F6A               	movwf	106,b
   953                           
   954                           ;systeme.c: 140: queue[2]=3;
   955   0015FA  0E03               	movlw	3
   956   0015FC  6F6B               	movwf	107,b
   957                           
   958                           ;systeme.c: 141: queue[3]=4;
   959   0015FE  0E04               	movlw	4
   960   001600  6F6C               	movwf	108,b
   961                           
   962                           ;systeme.c: 142: queue[4]=5;
   963   001602  0E05               	movlw	5
   964   001604  6F6D               	movwf	109,b
   965                           
   966                           ;systeme.c: 143: queue[5]=6;
   967   001606  0E06               	movlw	6
   968   001608  6F6E               	movwf	110,b
   969                           
   970                           ;systeme.c: 145: pointeur_de_tache=6-1;
   971   00160A  0E05               	movlw	5
   972   00160C  6F70               	movwf	112,b
   973                           
   974                           ; BSR set to: 0
   975                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   976   00160E  0E69               	movlw	105
   977   001610  2570               	addwf	112,w,b
   978   001612  6ED9               	movwf	fsr2l,c
   979   001614  6ADA               	clrf	fsr2h,c
   980   001616  0E00               	movlw	0
   981   001618  22DA               	addwfc	fsr2h,f,c
   982   00161A  50DF               	movf	indf2,w,c
   983   00161C  6F6F               	movwf	111,b
   984                           
   985                           ; BSR set to: 0
   986                           ;systeme.c: 151: temp=STKPTR;
   987   00161E  CFFC F088          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   988                           
   989                           ; BSR set to: 0
   990                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   991   001622  0E02               	movlw	2
   992   001624  6EFC               	movwf	252,c	;volatile
   993                           
   994                           ; BSR set to: 0
   995   001626  0EF6               	movlw	low _tache1
   996   001628  6E35               	movwf	_fptr^0,c
   997   00162A  0E10               	movlw	high _tache1
   998   00162C  6E36               	movwf	(_fptr+1)^0,c
   999   00162E  0E00               	movlw	low (_tache1 shr (0+16))
  1000   001630  6E37               	movwf	(_fptr+2)^0,c
  1001                           
  1002                           ; BSR set to: 0
  1003   001632  C035  F03A         	movff	_fptr,_val_tos
  1004   001636  C036  F03B         	movff	_fptr+1,_val_tos+1
  1005                           
  1006                           ; BSR set to: 0
  1007   00163A  0E3A               	movlw	low _val_tos
  1008   00163C  6E38               	movwf	_puc^0,c
  1009   00163E  0E00               	movlw	high _val_tos
  1010   001640  6E39               	movwf	(_puc+1)^0,c
  1011                           
  1012                           ; BSR set to: 0
  1013   001642  C038  FFD9         	movff	_puc,fsr2l
  1014   001646  C039  FFDA         	movff	_puc+1,fsr2h
  1015   00164A  50DF               	movf	indf2,w,c
  1016   00164C  6EFD               	movwf	253,c	;volatile
  1017                           
  1018                           ; BSR set to: 0
  1019   00164E  4A38               	infsnz	_puc^0,f,c
  1020   001650  2A39               	incf	(_puc+1)^0,f,c
  1021                           
  1022                           ; BSR set to: 0
  1023   001652  C038  FFD9         	movff	_puc,fsr2l
  1024   001656  C039  FFDA         	movff	_puc+1,fsr2h
  1025   00165A  50DF               	movf	indf2,w,c
  1026   00165C  6EFE               	movwf	254,c	;volatile
  1027                           
  1028                           ; BSR set to: 0
  1029   00165E  4A38               	infsnz	_puc^0,f,c
  1030   001660  2A39               	incf	(_puc+1)^0,f,c
  1031                           
  1032                           ; BSR set to: 0
  1033   001662  C038  FFD9         	movff	_puc,fsr2l
  1034   001666  C039  FFDA         	movff	_puc+1,fsr2h
  1035   00166A  50DF               	movf	indf2,w,c
  1036   00166C  6EFF               	movwf	255,c	;volatile
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1040   00166E  0E07               	movlw	7
  1041   001670  6EFC               	movwf	252,c	;volatile
  1042   001672  0E24               	movlw	low _tache2
  1043   001674  6E35               	movwf	_fptr^0,c
  1044   001676  0E18               	movlw	high _tache2
  1045   001678  6E36               	movwf	(_fptr+1)^0,c
  1046   00167A  0E00               	movlw	low (_tache2 shr (0+16))
  1047   00167C  6E37               	movwf	(_fptr+2)^0,c
  1048                           
  1049                           ; BSR set to: 0
  1050   00167E  C035  F03A         	movff	_fptr,_val_tos
  1051   001682  C036  F03B         	movff	_fptr+1,_val_tos+1
  1052   001686  0E3A               	movlw	low _val_tos
  1053   001688  6E38               	movwf	_puc^0,c
  1054   00168A  0E00               	movlw	high _val_tos
  1055   00168C  6E39               	movwf	(_puc+1)^0,c
  1056                           
  1057                           ; BSR set to: 0
  1058   00168E  C038  FFD9         	movff	_puc,fsr2l
  1059   001692  C039  FFDA         	movff	_puc+1,fsr2h
  1060   001696  50DF               	movf	indf2,w,c
  1061   001698  6EFD               	movwf	253,c	;volatile
  1062                           
  1063                           ; BSR set to: 0
  1064   00169A  4A38               	infsnz	_puc^0,f,c
  1065   00169C  2A39               	incf	(_puc+1)^0,f,c
  1066                           
  1067                           ; BSR set to: 0
  1068   00169E  C038  FFD9         	movff	_puc,fsr2l
  1069   0016A2  C039  FFDA         	movff	_puc+1,fsr2h
  1070   0016A6  50DF               	movf	indf2,w,c
  1071   0016A8  6EFE               	movwf	254,c	;volatile
  1072                           
  1073                           ; BSR set to: 0
  1074   0016AA  4A38               	infsnz	_puc^0,f,c
  1075   0016AC  2A39               	incf	(_puc+1)^0,f,c
  1076                           
  1077                           ; BSR set to: 0
  1078   0016AE  C038  FFD9         	movff	_puc,fsr2l
  1079   0016B2  C039  FFDA         	movff	_puc+1,fsr2h
  1080   0016B6  50DF               	movf	indf2,w,c
  1081   0016B8  6EFF               	movwf	255,c	;volatile
  1082                           
  1083                           ; BSR set to: 0
  1084                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1085   0016BA  0E0C               	movlw	12
  1086   0016BC  6EFC               	movwf	252,c	;volatile
  1087                           
  1088                           ; BSR set to: 0
  1089   0016BE  0EFE               	movlw	low _tache3
  1090   0016C0  6E35               	movwf	_fptr^0,c
  1091   0016C2  0E19               	movlw	high _tache3
  1092   0016C4  6E36               	movwf	(_fptr+1)^0,c
  1093   0016C6  0E00               	movlw	low (_tache3 shr (0+16))
  1094   0016C8  6E37               	movwf	(_fptr+2)^0,c
  1095                           
  1096                           ; BSR set to: 0
  1097   0016CA  C035  F03A         	movff	_fptr,_val_tos
  1098   0016CE  C036  F03B         	movff	_fptr+1,_val_tos+1
  1099                           
  1100                           ; BSR set to: 0
  1101   0016D2  0E3A               	movlw	low _val_tos
  1102   0016D4  6E38               	movwf	_puc^0,c
  1103   0016D6  0E00               	movlw	high _val_tos
  1104   0016D8  6E39               	movwf	(_puc+1)^0,c
  1105                           
  1106                           ; BSR set to: 0
  1107   0016DA  C038  FFD9         	movff	_puc,fsr2l
  1108   0016DE  C039  FFDA         	movff	_puc+1,fsr2h
  1109   0016E2  50DF               	movf	indf2,w,c
  1110   0016E4  6EFD               	movwf	253,c	;volatile
  1111                           
  1112                           ; BSR set to: 0
  1113   0016E6  4A38               	infsnz	_puc^0,f,c
  1114   0016E8  2A39               	incf	(_puc+1)^0,f,c
  1115                           
  1116                           ; BSR set to: 0
  1117   0016EA  C038  FFD9         	movff	_puc,fsr2l
  1118   0016EE  C039  FFDA         	movff	_puc+1,fsr2h
  1119   0016F2  50DF               	movf	indf2,w,c
  1120   0016F4  6EFE               	movwf	254,c	;volatile
  1121                           
  1122                           ; BSR set to: 0
  1123   0016F6  4A38               	infsnz	_puc^0,f,c
  1124   0016F8  2A39               	incf	(_puc+1)^0,f,c
  1125                           
  1126                           ; BSR set to: 0
  1127   0016FA  C038  FFD9         	movff	_puc,fsr2l
  1128   0016FE  C039  FFDA         	movff	_puc+1,fsr2h
  1129   001702  50DF               	movf	indf2,w,c
  1130   001704  6EFF               	movwf	255,c	;volatile
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1134   001706  0E11               	movlw	17
  1135   001708  6EFC               	movwf	252,c	;volatile
  1136   00170A  0EDC               	movlw	low _tache4
  1137   00170C  6E35               	movwf	_fptr^0,c
  1138   00170E  0E1A               	movlw	high _tache4
  1139   001710  6E36               	movwf	(_fptr+1)^0,c
  1140   001712  0E00               	movlw	low (_tache4 shr (0+16))
  1141   001714  6E37               	movwf	(_fptr+2)^0,c
  1142                           
  1143                           ; BSR set to: 0
  1144   001716  C035  F03A         	movff	_fptr,_val_tos
  1145   00171A  C036  F03B         	movff	_fptr+1,_val_tos+1
  1146   00171E  0E3A               	movlw	low _val_tos
  1147   001720  6E38               	movwf	_puc^0,c
  1148   001722  0E00               	movlw	high _val_tos
  1149   001724  6E39               	movwf	(_puc+1)^0,c
  1150                           
  1151                           ; BSR set to: 0
  1152   001726  C038  FFD9         	movff	_puc,fsr2l
  1153   00172A  C039  FFDA         	movff	_puc+1,fsr2h
  1154   00172E  50DF               	movf	indf2,w,c
  1155   001730  6EFD               	movwf	253,c	;volatile
  1156                           
  1157                           ; BSR set to: 0
  1158   001732  4A38               	infsnz	_puc^0,f,c
  1159   001734  2A39               	incf	(_puc+1)^0,f,c
  1160                           
  1161                           ; BSR set to: 0
  1162   001736  C038  FFD9         	movff	_puc,fsr2l
  1163   00173A  C039  FFDA         	movff	_puc+1,fsr2h
  1164   00173E  50DF               	movf	indf2,w,c
  1165   001740  6EFE               	movwf	254,c	;volatile
  1166                           
  1167                           ; BSR set to: 0
  1168   001742  4A38               	infsnz	_puc^0,f,c
  1169   001744  2A39               	incf	(_puc+1)^0,f,c
  1170                           
  1171                           ; BSR set to: 0
  1172   001746  C038  FFD9         	movff	_puc,fsr2l
  1173   00174A  C039  FFDA         	movff	_puc+1,fsr2h
  1174   00174E  50DF               	movf	indf2,w,c
  1175   001750  6EFF               	movwf	255,c	;volatile
  1176                           
  1177                           ; BSR set to: 0
  1178                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1179   001752  0E16               	movlw	22
  1180   001754  6EFC               	movwf	252,c	;volatile
  1181                           
  1182                           ; BSR set to: 0
  1183   001756  0E18               	movlw	low _tache5
  1184   001758  6E35               	movwf	_fptr^0,c
  1185   00175A  0E19               	movlw	high _tache5
  1186   00175C  6E36               	movwf	(_fptr+1)^0,c
  1187   00175E  0E00               	movlw	low (_tache5 shr (0+16))
  1188   001760  6E37               	movwf	(_fptr+2)^0,c
  1189                           
  1190                           ; BSR set to: 0
  1191   001762  C035  F03A         	movff	_fptr,_val_tos
  1192   001766  C036  F03B         	movff	_fptr+1,_val_tos+1
  1193                           
  1194                           ; BSR set to: 0
  1195   00176A  0E3A               	movlw	low _val_tos
  1196   00176C  6E38               	movwf	_puc^0,c
  1197   00176E  0E00               	movlw	high _val_tos
  1198   001770  6E39               	movwf	(_puc+1)^0,c
  1199                           
  1200                           ; BSR set to: 0
  1201   001772  C038  FFD9         	movff	_puc,fsr2l
  1202   001776  C039  FFDA         	movff	_puc+1,fsr2h
  1203   00177A  50DF               	movf	indf2,w,c
  1204   00177C  6EFD               	movwf	253,c	;volatile
  1205                           
  1206                           ; BSR set to: 0
  1207   00177E  4A38               	infsnz	_puc^0,f,c
  1208   001780  2A39               	incf	(_puc+1)^0,f,c
  1209                           
  1210                           ; BSR set to: 0
  1211   001782  C038  FFD9         	movff	_puc,fsr2l
  1212   001786  C039  FFDA         	movff	_puc+1,fsr2h
  1213   00178A  50DF               	movf	indf2,w,c
  1214   00178C  6EFE               	movwf	254,c	;volatile
  1215                           
  1216                           ; BSR set to: 0
  1217   00178E  4A38               	infsnz	_puc^0,f,c
  1218   001790  2A39               	incf	(_puc+1)^0,f,c
  1219                           
  1220                           ; BSR set to: 0
  1221   001792  C038  FFD9         	movff	_puc,fsr2l
  1222   001796  C039  FFDA         	movff	_puc+1,fsr2h
  1223   00179A  50DF               	movf	indf2,w,c
  1224   00179C  6EFF               	movwf	255,c	;volatile
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1228   00179E  0E1B               	movlw	27
  1229   0017A0  6EFC               	movwf	252,c	;volatile
  1230   0017A2  0ECC               	movlw	low _tache6
  1231   0017A4  6E35               	movwf	_fptr^0,c
  1232   0017A6  0E23               	movlw	high _tache6
  1233   0017A8  6E36               	movwf	(_fptr+1)^0,c
  1234   0017AA  0E00               	movlw	low (_tache6 shr (0+16))
  1235   0017AC  6E37               	movwf	(_fptr+2)^0,c
  1236                           
  1237                           ; BSR set to: 0
  1238   0017AE  C035  F03A         	movff	_fptr,_val_tos
  1239   0017B2  C036  F03B         	movff	_fptr+1,_val_tos+1
  1240   0017B6  0E3A               	movlw	low _val_tos
  1241   0017B8  6E38               	movwf	_puc^0,c
  1242   0017BA  0E00               	movlw	high _val_tos
  1243   0017BC  6E39               	movwf	(_puc+1)^0,c
  1244                           
  1245                           ; BSR set to: 0
  1246   0017BE  C038  FFD9         	movff	_puc,fsr2l
  1247   0017C2  C039  FFDA         	movff	_puc+1,fsr2h
  1248   0017C6  50DF               	movf	indf2,w,c
  1249   0017C8  6EFD               	movwf	253,c	;volatile
  1250                           
  1251                           ; BSR set to: 0
  1252   0017CA  4A38               	infsnz	_puc^0,f,c
  1253   0017CC  2A39               	incf	(_puc+1)^0,f,c
  1254                           
  1255                           ; BSR set to: 0
  1256   0017CE  C038  FFD9         	movff	_puc,fsr2l
  1257   0017D2  C039  FFDA         	movff	_puc+1,fsr2h
  1258   0017D6  50DF               	movf	indf2,w,c
  1259   0017D8  6EFE               	movwf	254,c	;volatile
  1260                           
  1261                           ; BSR set to: 0
  1262   0017DA  4A38               	infsnz	_puc^0,f,c
  1263   0017DC  2A39               	incf	(_puc+1)^0,f,c
  1264                           
  1265                           ; BSR set to: 0
  1266   0017DE  C038  FFD9         	movff	_puc,fsr2l
  1267   0017E2  C039  FFDA         	movff	_puc+1,fsr2h
  1268   0017E6  50DF               	movf	indf2,w,c
  1269   0017E8  6EFF               	movwf	255,c	;volatile
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;systeme.c: 162: STKPTR=temp;
  1273   0017EA  C088  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;systeme.c: 165: STKPTR_T1=2;
  1277   0017EE  0E02               	movlw	2
  1278   0017F0  0101               	movlb	1	; () banked
  1279   0017F2  6F03               	movwf	3,b
  1280                           
  1281                           ; BSR set to: 1
  1282                           ;systeme.c: 166: STKPTR_T2=7;
  1283   0017F4  0E07               	movlw	7
  1284   0017F6  0102               	movlb	2	; () banked
  1285   0017F8  6F03               	movwf	3,b
  1286                           
  1287                           ; BSR set to: 2
  1288                           ;systeme.c: 167: STKPTR_T3=12;
  1289   0017FA  0E0C               	movlw	12
  1290   0017FC  0103               	movlb	3	; () banked
  1291   0017FE  6F03               	movwf	3,b
  1292                           
  1293                           ; BSR set to: 3
  1294                           ;systeme.c: 168: STKPTR_T4=17;
  1295   001800  0E11               	movlw	17
  1296   001802  0104               	movlb	4	; () banked
  1297   001804  6F03               	movwf	3,b
  1298                           
  1299                           ; BSR set to: 4
  1300                           ;systeme.c: 169: STKPTR_T5=22;
  1301   001806  0E16               	movlw	22
  1302   001808  0105               	movlb	5	; () banked
  1303   00180A  6F03               	movwf	3,b
  1304                           
  1305                           ; BSR set to: 5
  1306                           ;systeme.c: 170: STKPTR_T6=27;
  1307   00180C  0E1B               	movlw	27
  1308   00180E  0106               	movlb	6	; () banked
  1309   001810  6F03               	movwf	3,b
  1310                           
  1311                           ; BSR set to: 6
  1312                           ;systeme.c: 173: Tick_Count=0;
  1313   001812  0E00               	movlw	0
  1314   001814  0100               	movlb	0	; () banked
  1315   001816  6F72               	movwf	114,b
  1316   001818  0E00               	movlw	0
  1317   00181A  6F71               	movwf	113,b
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;systeme.c: 175: T0CON=0x01;
  1321   00181C  0E01               	movlw	1
  1322   00181E  6ED5               	movwf	213,c	;volatile
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;systeme.c: 176: T0IE=1;
  1326   001820  8AF2               	bsf	4082,5,c	;volatile
  1327                           
  1328                           ; BSR set to: 0
  1329   001822  0012               	return		;funcret
  1330   001824                     __end_of_initialisation_du_systeme:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _initialisation_des_ports *****************
  1334 ;; Defined at:
  1335 ;;		line 23 in file "main.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  1    wreg      void 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 7
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_main
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text2
  1364   002490                     __ptext2:
  1365                           	callstack 0
  1366   002490                     _initialisation_des_ports:
  1367                           	callstack 23
  1368                           
  1369                           ;main.c: 26: MEMCON=0xA0;
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;incstack = 0
  1373   002490  0EA0               	movlw	160
  1374   002492  010F               	movlb	15	; () banked
  1375   002494  6F26               	movwf	38,b	;volatile
  1376                           
  1377                           ;main.c: 29: ANCON0=0x00;
  1378   002496  0E00               	movlw	0
  1379   002498  6F25               	movwf	37,b	;volatile
  1380                           
  1381                           ;main.c: 30: ANCON1=0x00;
  1382   00249A  0E00               	movlw	0
  1383   00249C  6F24               	movwf	36,b	;volatile
  1384                           
  1385                           ;main.c: 31: ANCON2=0x00;
  1386   00249E  0E00               	movlw	0
  1387   0024A0  6F23               	movwf	35,b	;volatile
  1388                           
  1389                           ; BSR set to: 15
  1390                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1391   0024A2  8125               	bsf	37,0,b	;volatile
  1392                           
  1393                           ; BSR set to: 15
  1394                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1395   0024A4  8325               	bsf	37,1,b	;volatile
  1396                           
  1397                           ; BSR set to: 15
  1398                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1399   0024A6  8525               	bsf	37,2,b	;volatile
  1400                           
  1401                           ; BSR set to: 15
  1402                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1403   0024A8  8725               	bsf	37,3,b	;volatile
  1404                           
  1405                           ; BSR set to: 15
  1406                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1407   0024AA  8524               	bsf	36,2,b	;volatile
  1408                           
  1409                           ; BSR set to: 15
  1410                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1411   0024AC  8724               	bsf	36,3,b	;volatile
  1412                           
  1413                           ; BSR set to: 15
  1414                           ;main.c: 41: LATCbits.LATC2=1;
  1415   0024AE  848B               	bsf	139,2,c	;volatile
  1416                           
  1417                           ; BSR set to: 15
  1418                           ;main.c: 42: LATCbits.LATC1=1;
  1419   0024B0  828B               	bsf	139,1,c	;volatile
  1420                           
  1421                           ; BSR set to: 15
  1422                           ;main.c: 43: LATGbits.LATG0=1;
  1423   0024B2  808F               	bsf	143,0,c	;volatile
  1424                           
  1425                           ; BSR set to: 15
  1426                           ;main.c: 46: TRISCbits.TRISC2=0;
  1427   0024B4  9494               	bcf	148,2,c	;volatile
  1428                           
  1429                           ; BSR set to: 15
  1430                           ;main.c: 47: TRISCbits.TRISC1=0;
  1431   0024B6  9294               	bcf	148,1,c	;volatile
  1432                           
  1433                           ; BSR set to: 15
  1434                           ;main.c: 48: TRISGbits.TRISG0=0;
  1435   0024B8  9098               	bcf	152,0,c	;volatile
  1436                           
  1437                           ; BSR set to: 15
  1438                           ;main.c: 49: TRISGbits.TRISG3=0;
  1439   0024BA  9698               	bcf	152,3,c	;volatile
  1440                           
  1441                           ; BSR set to: 15
  1442                           ;main.c: 50: TRISGbits.TRISG4=0;
  1443   0024BC  9898               	bcf	152,4,c	;volatile
  1444                           
  1445                           ; BSR set to: 15
  1446                           ;main.c: 51: TRISDbits.TRISD2=0;
  1447   0024BE  9495               	bcf	149,2,c	;volatile
  1448                           
  1449                           ; BSR set to: 15
  1450                           ;main.c: 52: TRISDbits.TRISD3=0;
  1451   0024C0  9695               	bcf	149,3,c	;volatile
  1452                           
  1453                           ; BSR set to: 15
  1454                           ;main.c: 55: INTCON2bits.RBPU=0;
  1455   0024C2  9EF1               	bcf	241,7,c	;volatile
  1456                           
  1457                           ; BSR set to: 15
  1458                           ;main.c: 56: PADCFG1bits.REPU=1;
  1459   0024C4  8D53               	bsf	83,6,b	;volatile
  1460                           
  1461                           ; BSR set to: 15
  1462   0024C6  0012               	return		;funcret
  1463   0024C8                     __end_of_initialisation_des_ports:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _Init *****************
  1467 ;; Defined at:
  1468 ;;		line 4 in file "semaphore.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  sem             1  [STACK] unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1  [STACK] void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 7
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;;		_tache1
  1494 ;; This function uses a reentrant model
  1495 ;;
  1496                           
  1497                           	psect	text3
  1498   0025E2                     __ptext3:
  1499                           	callstack 0
  1500   0025E2                     _Init:
  1501                           	callstack 20
  1502                           
  1503                           ;semaphore.c: 6: switch (sem)
  1504                           
  1505                           ; BSR set to: 15
  1506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1507                           ;incstack = 0
  1508   0025E2  D006               	goto	l2950
  1509   0025E4                     l2946:
  1510                           
  1511                           ;semaphore.c: 9: Val_sem_cna=1;
  1512   0025E4  0E01               	movlw	1
  1513   0025E6  6E40               	movwf	_Val_sem_cna^0,c
  1514                           
  1515                           ;semaphore.c: 10: break;
  1516   0025E8  D00B               	goto	l1646
  1517   0025EA                     l2948:
  1518                           
  1519                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1520   0025EA  0E01               	movlw	1
  1521   0025EC  6E3F               	movwf	_Val_sem_rxtx^0,c
  1522                           
  1523                           ;semaphore.c: 13: break;
  1524   0025EE  D008               	goto	l1646
  1525   0025F0                     l2950:
  1526                           
  1527                           ;stkvar	Init@sem @ sp[(0)+-1]
  1528   0025F0  0EFF               	movlw	-1
  1529   0025F2  50E3               	movf	plusw1,w,c
  1530                           
  1531                           ; Switch size 1, requested type "simple"
  1532                           ; Number of cases is 2, Range of values is 1 to 2
  1533                           ; switch strategies available:
  1534                           ; Name         Instructions Cycles
  1535                           ; simple_byte            7     4 (average)
  1536                           ;	Chosen strategy is simple_byte
  1537   0025F4  0A01               	xorlw	1	; case 1
  1538   0025F6  B4D8               	btfsc	status,2,c
  1539   0025F8  D7F5               	goto	l2946
  1540   0025FA  0A03               	xorlw	3	; case 2
  1541   0025FC  B4D8               	btfsc	status,2,c
  1542   0025FE  D7F5               	goto	l2948
  1543   002600                     l1646:
  1544                           
  1545                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1546   002600  52E5               	movf	postdec1,f,c
  1547   002602  0012               	return		;funcret
  1548   002604                     __end_of_Init:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function _fonction_d_interruption *****************
  1552 ;; Defined at:
  1553 ;;		line 17 in file "systeme.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;		None
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1570 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;Total ram usage:       12 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 6
  1574 ;; This function calls:
  1575 ;;		_tache1
  1576 ;;		_tache2
  1577 ;;		_tache3
  1578 ;;		_tache4
  1579 ;;		_tache5
  1580 ;;		_tache6
  1581 ;; This function is called by:
  1582 ;;		Interrupt level 2
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	intcode
  1587   000008                     __pintcode:
  1588                           	callstack 0
  1589   000008                     _fonction_d_interruption:
  1590                           	callstack 23
  1591                           
  1592                           ;incstack = 0
  1593   000008  CFE9 F01D          	movff	fsr0l,??_fonction_d_interruption
  1594   00000C  CFEA F01E          	movff	fsr0h,??_fonction_d_interruption+1
  1595   000010  CFE1 F01F          	movff	fsr1l,??_fonction_d_interruption+2
  1596   000014  CFE2 F020          	movff	fsr1h,??_fonction_d_interruption+3
  1597   000018  CFD9 F021          	movff	fsr2l,??_fonction_d_interruption+4
  1598   00001C  CFDA F022          	movff	fsr2h,??_fonction_d_interruption+5
  1599   000020  CFF3 F023          	movff	prodl,??_fonction_d_interruption+6
  1600   000024  CFF4 F024          	movff	prodh,??_fonction_d_interruption+7
  1601   000028  CFF6 F025          	movff	tblptrl,??_fonction_d_interruption+8
  1602   00002C  CFF7 F026          	movff	tblptrh,??_fonction_d_interruption+9
  1603   000030  CFF8 F027          	movff	tblptru,??_fonction_d_interruption+10
  1604   000034  CFF5 F028          	movff	tablat,??_fonction_d_interruption+11
  1605   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1606                           
  1607                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1608   00003C  CFD8 F061          	movff	status,97	;volatile
  1609   000040  0100               	movlb	0	; () banked
  1610   000042  6F60               	movwf	96,b
  1611                           
  1612                           ; BSR set to: 0
  1613   000044  CFE0 F062          	movff	bsr,98	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1617   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623                           ;systeme.c: 24: if(T0IE && T0IF)
  1624   000050  BAF2               	btfsc	4082,5,c	;volatile
  1625                           
  1626                           ; BSR set to: 0
  1627   000052  A4F2               	btfss	4082,2,c	;volatile
  1628   000054  D143               	goto	i2l5678
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1632   000056  0565               	decf	101,w,b
  1633   000058  A4D8               	btfss	status,2,c
  1634   00005A  D004               	goto	i2l5378
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1638   00005C  0E1B               	movlw	27
  1639   00005E  6EFC               	movwf	252,c	;volatile
  1640                           
  1641                           ;systeme.c: 29: DEMARRAGE=0;
  1642   000060  0E00               	movlw	0
  1643   000062  6F65               	movwf	101,b
  1644   000064                     i2l5378:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1648   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1649                           
  1650                           ;systeme.c: 35: FSR0L=0;
  1651   000068  0E00               	movlw	0
  1652   00006A  6EE9               	movwf	233,c	;volatile
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1656   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1657                           
  1658                           ; BSR set to: 0
  1659   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1669   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1670                           
  1671                           ; BSR set to: 0
  1672   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1676                           
  1677                           ; BSR set to: 0
  1678   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1682   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1683                           
  1684                           ; BSR set to: 0
  1685   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1695   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1699                           
  1700                           ; BSR set to: 0
  1701   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1708   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1709                           
  1710                           ; BSR set to: 0
  1711   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1712                           
  1713                           ;systeme.c: 44: FSR1H=0;
  1714   0000B4  0E00               	movlw	0
  1715   0000B6  6EE2               	movwf	226,c	;volatile
  1716                           
  1717                           ;systeme.c: 45: FSR1L=0;
  1718   0000B8  0E00               	movlw	0
  1719   0000BA  6EE1               	movwf	225,c	;volatile
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1723   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1724                           
  1725                           ; BSR set to: 0
  1726   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1727                           
  1728                           ; BSR set to: 0
  1729   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1730                           
  1731                           ; BSR set to: 0
  1732   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1733                           
  1734                           ; BSR set to: 0
  1735                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1736   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1737                           
  1738                           ; BSR set to: 0
  1739   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1740                           
  1741                           ; BSR set to: 0
  1742   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1743                           
  1744                           ; BSR set to: 0
  1745   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1749   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1750                           
  1751                           ; BSR set to: 0
  1752   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1753                           
  1754                           ; BSR set to: 0
  1755   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1756                           
  1757                           ; BSR set to: 0
  1758   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1762   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1763                           
  1764                           ; BSR set to: 0
  1765   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1766                           
  1767                           ; BSR set to: 0
  1768   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1769                           
  1770                           ; BSR set to: 0
  1771   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1775   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1776                           
  1777                           ; BSR set to: 0
  1778   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1779                           
  1780                           ; BSR set to: 0
  1781   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1782                           
  1783                           ; BSR set to: 0
  1784   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1788   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1789                           
  1790                           ; BSR set to: 0
  1791   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1792                           
  1793                           ; BSR set to: 0
  1794   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1795                           
  1796                           ; BSR set to: 0
  1797   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1801   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1802                           
  1803                           ; BSR set to: 0
  1804   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1805                           
  1806                           ; BSR set to: 0
  1807   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1808                           
  1809                           ; BSR set to: 0
  1810   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1814   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1815                           
  1816                           ; BSR set to: 0
  1817   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1818                           
  1819                           ; BSR set to: 0
  1820   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1821                           
  1822                           ; BSR set to: 0
  1823   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1827   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1828                           
  1829                           ; BSR set to: 0
  1830   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1831                           
  1832                           ; BSR set to: 0
  1833   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1834                           
  1835                           ; BSR set to: 0
  1836   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1840   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1841                           
  1842                           ; BSR set to: 0
  1843   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1844                           
  1845                           ; BSR set to: 0
  1846   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1847                           
  1848                           ; BSR set to: 0
  1849   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1850                           
  1851                           ; BSR set to: 0
  1852                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1853   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1854                           
  1855                           ; BSR set to: 0
  1856   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1857                           
  1858                           ; BSR set to: 0
  1859   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1860                           
  1861                           ; BSR set to: 0
  1862   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1866   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1870                           
  1871                           ; BSR set to: 0
  1872   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1873                           
  1874                           ; BSR set to: 0
  1875   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1876                           
  1877                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1878   00017C  0E8A               	movlw	138
  1879   00017E  6ED7               	movwf	215,c	;volatile
  1880   000180  0ECF               	movlw	207
  1881   000182  6ED6               	movwf	214,c	;volatile
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;systeme.c: 63: T0IF=0;
  1885   000184  94F2               	bcf	4082,2,c	;volatile
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;systeme.c: 65: Tick_Count++;
  1889   000186  4B71               	infsnz	113,f,b
  1890   000188  2B72               	incf	114,f,b
  1891                           
  1892                           ; BSR set to: 0
  1893                           ;systeme.c: 67: pointeur_de_tache++;
  1894   00018A  2B70               	incf	112,f,b
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1898   00018C  0E06               	movlw	6
  1899   00018E  1970               	xorwf	112,w,b
  1900   000190  A4D8               	btfss	status,2,c
  1901   000192  D002               	goto	i2l5522
  1902                           
  1903                           ; BSR set to: 0
  1904                           ;systeme.c: 69: pointeur_de_tache=0;
  1905   000194  0E00               	movlw	0
  1906   000196  6F70               	movwf	112,b
  1907   000198                     i2l5522:
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1911   000198  0E69               	movlw	105
  1912   00019A  2570               	addwf	112,w,b
  1913   00019C  6ED9               	movwf	fsr2l,c
  1914   00019E  6ADA               	clrf	fsr2h,c
  1915   0001A0  0E00               	movlw	0
  1916   0001A2  22DA               	addwfc	fsr2h,f,c
  1917   0001A4  50DF               	movf	indf2,w,c
  1918   0001A6  6F6F               	movwf	111,b
  1919                           
  1920                           ; BSR set to: 0
  1921                           ;systeme.c: 75: FSR1H=0;
  1922   0001A8  0E00               	movlw	0
  1923   0001AA  6EE2               	movwf	226,c	;volatile
  1924                           
  1925                           ; BSR set to: 0
  1926                           ;systeme.c: 76: FSR1L=0;
  1927   0001AC  0E00               	movlw	0
  1928   0001AE  6EE1               	movwf	225,c	;volatile
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;systeme.c: 77: FSR0H=tache_active;
  1932   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;systeme.c: 78: FSR0L=18;
  1936   0001B4  0E12               	movlw	18
  1937   0001B6  6EE9               	movwf	233,c	;volatile
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1941   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1942                           
  1943                           ; BSR set to: 0
  1944   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1945                           
  1946                           ; BSR set to: 0
  1947   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1948                           
  1949                           ; BSR set to: 0
  1950   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1954   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1955                           
  1956                           ; BSR set to: 0
  1957   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1958                           
  1959                           ; BSR set to: 0
  1960   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1961                           
  1962                           ; BSR set to: 0
  1963   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1967   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1968                           
  1969                           ; BSR set to: 0
  1970   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1971                           
  1972                           ; BSR set to: 0
  1973   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1974                           
  1975                           ; BSR set to: 0
  1976   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1980   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1981                           
  1982                           ; BSR set to: 0
  1983   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1984                           
  1985                           ; BSR set to: 0
  1986   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1987                           
  1988                           ; BSR set to: 0
  1989   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1990                           
  1991                           ; BSR set to: 0
  1992                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1993   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1994                           
  1995                           ; BSR set to: 0
  1996   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1997                           
  1998                           ; BSR set to: 0
  1999   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2000                           
  2001                           ; BSR set to: 0
  2002   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2006   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2007                           
  2008                           ; BSR set to: 0
  2009   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2010                           
  2011                           ; BSR set to: 0
  2012   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2013                           
  2014                           ; BSR set to: 0
  2015   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2019   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2023                           
  2024                           ; BSR set to: 0
  2025   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2026                           
  2027                           ; BSR set to: 0
  2028   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2032   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2033                           
  2034                           ; BSR set to: 0
  2035   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2036                           
  2037                           ; BSR set to: 0
  2038   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2039                           
  2040                           ; BSR set to: 0
  2041   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2045   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2046                           
  2047                           ; BSR set to: 0
  2048   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2049                           
  2050                           ; BSR set to: 0
  2051   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2055                           
  2056                           ; BSR set to: 0
  2057                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2058   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2059                           
  2060                           ; BSR set to: 0
  2061   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2062                           
  2063                           ; BSR set to: 0
  2064   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2065                           
  2066                           ; BSR set to: 0
  2067   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2071   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2072                           
  2073                           ; BSR set to: 0
  2074   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2075                           
  2076                           ; BSR set to: 0
  2077   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2078                           
  2079                           ; BSR set to: 0
  2080   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  2084   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2085                           
  2086                           ; BSR set to: 0
  2087   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2088                           
  2089                           ; BSR set to: 0
  2090   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2091                           
  2092                           ; BSR set to: 0
  2093   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;systeme.c: 96: FSR0H=tache_active;
  2097   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;systeme.c: 97: FSR0L=0;
  2101   00027C  0E00               	movlw	0
  2102   00027E  6EE9               	movwf	233,c	;volatile
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  2106   000280  CFEE F060          	movff	postinc0,96	;volatile
  2107                           
  2108                           ; BSR set to: 0
  2109   000284  CFEE F061          	movff	postinc0,97	;volatile
  2110                           
  2111                           ; BSR set to: 0
  2112   000288  CFEE F062          	movff	postinc0,98	;volatile
  2113                           
  2114                           ; BSR set to: 0
  2115   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2119   000290  CFEE F063          	movff	postinc0,99	;volatile
  2120                           
  2121                           ; BSR set to: 0
  2122   000294  CFEE F064          	movff	postinc0,100	;volatile
  2123                           
  2124                           ; BSR set to: 0
  2125   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2126                           
  2127                           ; BSR set to: 0
  2128   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2132   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2133                           
  2134                           ; BSR set to: 0
  2135   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2136                           
  2137                           ; BSR set to: 0
  2138   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2139                           
  2140                           ; BSR set to: 0
  2141   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2142                           
  2143                           ; BSR set to: 0
  2144                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2145   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2146                           
  2147                           ; BSR set to: 0
  2148   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2149                           
  2150                           ; BSR set to: 0
  2151   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2152                           
  2153                           ; BSR set to: 0
  2154   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2155                           
  2156                           ; BSR set to: 0
  2157                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2158   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2159                           
  2160                           ; BSR set to: 0
  2161   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2165   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2166                           
  2167                           ; BSR set to: 0
  2168   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2169                           
  2170                           ; BSR set to: 0
  2171   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2175   0002D4  5160               	movf	96,w,b
  2176                           
  2177                           ; BSR set to: 0
  2178   0002D6  C061 FFD8          	movff	97,status	;volatile
  2179   0002DA  0010               	retfie		;# 
  2180   0002DC                     i2l5678:
  2181                           
  2182                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2183   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2184   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2185   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2186                           
  2187                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2188   0002E8  0100               	movlb	0	; () banked
  2189   0002EA  5160               	movf	96,w,b
  2190                           
  2191                           ; BSR set to: 0
  2192   0002EC  C061 FFD8          	movff	97,status	;volatile
  2193   0002F0  0010               	retfie		;# 
  2194                           
  2195                           ;systeme.c: 123: tache1();
  2196   0002F2  EC7B  F008         	call	_tache1	;wreg free
  2197                           
  2198                           ;systeme.c: 124: tache2();
  2199   0002F6  EC12  F00C         	call	_tache2	;wreg free
  2200                           
  2201                           ;systeme.c: 125: tache3();
  2202   0002FA  ECFF  F00C         	call	_tache3	;wreg free
  2203                           
  2204                           ;systeme.c: 126: tache4();
  2205   0002FE  EC6E  F00D         	call	_tache4	;wreg free
  2206                           
  2207                           ;systeme.c: 127: tache5();
  2208   000302  EC8C  F00C         	call	_tache5	;wreg free
  2209                           
  2210                           ;systeme.c: 128: tache6();
  2211   000306  ECE6  F011         	call	_tache6	;wreg free
  2212   00030A  C028  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2213   00030E  C027  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2214   000312  C026  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2215   000316  C025  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2216   00031A  C024  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2217   00031E  C023  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2218   000322  C022  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2219   000326  C021  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2220   00032A  C020  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2221   00032E  C01F  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2222   000332  C01E  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2223   000336  C01D  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2224   00033A  0011               	retfie		f
  2225   00033C                     __end_of_fonction_d_interruption:
  2226                           	callstack 0
  2227                           
  2228 ;; *************** function _tache6 *****************
  2229 ;; Defined at:
  2230 ;;		line 3 in file "T6.c"
  2231 ;; Parameters:    Size  Location     Type
  2232 ;;		None
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  n               1    8[COMRAM] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  1    wreg      void 
  2237 ;; Registers used:
  2238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;Total ram usage:        1 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 2
  2251 ;; This function calls:
  2252 ;;		_lecture_normale
  2253 ;; This function is called by:
  2254 ;;		_fonction_d_interruption
  2255 ;;		_initialisation_du_systeme
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text5
  2260   0023CC                     __ptext5:
  2261                           	callstack 0
  2262   0023CC                     _tache6:
  2263                           	callstack 26
  2264                           
  2265                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2266                           
  2267                           ;incstack = 0
  2268                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2269   0023CC  0E75               	movlw	117
  2270   0023CE  6E03               	movwf	lecture_normale@stid_id^0,c
  2271   0023D0  0E00               	movlw	0
  2272   0023D2  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2273   0023D4  ECE9  F00E         	call	_lecture_normale	;wreg free
  2274   0023D8  6E09               	movwf	tache6@n^0,c
  2275                           
  2276                           ;T6.c: 9: if (n > 0)
  2277   0023DA  5009               	movf	tache6@n^0,w,c
  2278   0023DC  B4D8               	btfsc	status,2,c
  2279   0023DE  D015               	goto	i2l5344
  2280                           
  2281                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2282   0023E0  0E04               	movlw	4
  2283   0023E2  1809               	xorwf	tache6@n^0,w,c
  2284   0023E4  A4D8               	btfss	status,2,c
  2285   0023E6  D004               	goto	i2l5336
  2286                           
  2287                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2288   0023E8  C009  F07F         	movff	tache6@n,127
  2289                           
  2290                           ;T6.c: 16: Personne = 2;
  2291   0023EC  0E02               	movlw	2
  2292   0023EE  D007               	goto	L1
  2293   0023F0                     i2l5336:
  2294                           
  2295                           ;T6.c: 18: else if (n == 8)
  2296   0023F0  0E08               	movlw	8
  2297   0023F2  1809               	xorwf	tache6@n^0,w,c
  2298   0023F4  A4D8               	btfss	status,2,c
  2299   0023F6  D005               	goto	i2l5342
  2300                           
  2301                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2302   0023F8  C009  F07F         	movff	tache6@n,127
  2303                           
  2304                           ;T6.c: 21: Personne = 1;
  2305   0023FC  0E01               	movlw	1
  2306   0023FE                     L1:
  2307   0023FE  0100               	movlb	0	; () banked
  2308   002400  D008               	goto	L2
  2309   002402                     i2l5342:
  2310                           
  2311                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2312   002402  0E00               	movlw	0
  2313   002404  0100               	movlb	0	; () banked
  2314   002406  6F7F               	movwf	127,b
  2315   002408  D7E1               	goto	__ptext5
  2316   00240A                     i2l5344:
  2317                           
  2318                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2319   00240A  0E00               	movlw	0
  2320   00240C  0100               	movlb	0	; () banked
  2321   00240E  6F7F               	movwf	127,b
  2322                           
  2323                           ;T6.c: 33: Personne = 0;
  2324   002410  0E00               	movlw	0
  2325   002412                     L2:
  2326   002412  6F82               	movwf	130,b
  2327   002414  D7DB               	goto	__ptext5
  2328   002416                     __end_of_tache6:
  2329                           	callstack 0
  2330                           
  2331 ;; *************** function _lecture_normale *****************
  2332 ;; Defined at:
  2333 ;;		line 5 in file "stid.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2336 ;;		 -> badge(10), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  octet           1    7[COMRAM] unsigned char 
  2339 ;;  n_bit           1    6[COMRAM] unsigned char 
  2340 ;;  n_octet         1    5[COMRAM] unsigned char 
  2341 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2352 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;Total ram usage:        6 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; Hardware stack levels required when called: 1
  2358 ;; This function calls:
  2359 ;;		_stid_delai_us
  2360 ;; This function is called by:
  2361 ;;		_tache6
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text6
  2366   001DD2                     __ptext6:
  2367                           	callstack 0
  2368   001DD2                     _lecture_normale:
  2369                           	callstack 26
  2370                           
  2371                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;incstack = 0
  2375   001DD2  8295               	bsf	149,1,c	;volatile
  2376                           
  2377                           ;stid.c: 10: LATDbits.LATD3=0;
  2378   001DD4  968C               	bcf	140,3,c	;volatile
  2379                           
  2380                           ;stid.c: 11: LATDbits.LATD2=0;
  2381   001DD6  948C               	bcf	140,2,c	;volatile
  2382                           
  2383                           ;stid.c: 12: stid_delai_us(100);
  2384   001DD8  0E00               	movlw	0
  2385   001DDA  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2386   001DDC  0E64               	movlw	100
  2387   001DDE  6E01               	movwf	stid_delai_us@isdu^0,c
  2388   001DE0  EC68  F013         	call	_stid_delai_us	;wreg free
  2389                           
  2390                           ;stid.c: 13: LATDbits.LATD3=1;
  2391   001DE4  868C               	bsf	140,3,c	;volatile
  2392                           
  2393                           ;stid.c: 14: temps_attente=0;
  2394   001DE6  0E00               	movlw	0
  2395   001DE8  6E05               	movwf	lecture_normale@temps_attente^0,c
  2396   001DEA                     i2l4810:
  2397                           
  2398                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2399   001DEA  0E03               	movlw	3
  2400   001DEC  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2401   001DEE  0EE8               	movlw	232
  2402   001DF0  6E01               	movwf	stid_delai_us@isdu^0,c
  2403   001DF2  EC68  F013         	call	_stid_delai_us	;wreg free
  2404                           
  2405                           ;stid.c: 18: temps_attente++;
  2406   001DF6  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2407                           
  2408                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2409   001DF8  A083               	btfss	131,0,c	;volatile
  2410   001DFA  D002               	goto	i2l4818
  2411                           
  2412                           ;stid.c: 20: temps_attente=65;
  2413   001DFC  0E41               	movlw	65
  2414   001DFE  6E05               	movwf	lecture_normale@temps_attente^0,c
  2415   001E00                     i2l4818:
  2416                           
  2417                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2418   001E00  0E40               	movlw	64
  2419   001E02  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2420   001E04  D7F2               	goto	i2l4810
  2421                           
  2422                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2423   001E06  A083               	btfss	131,0,c	;volatile
  2424   001E08  D033               	goto	i2l4854
  2425                           
  2426                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2427   001E0A  0E00               	movlw	0
  2428   001E0C  6E06               	movwf	lecture_normale@n_octet^0,c
  2429   001E0E                     i2l1771:
  2430                           
  2431                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2432   001E0E  0E00               	movlw	0
  2433   001E10  6E08               	movwf	lecture_normale@octet^0,c
  2434                           
  2435                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2436   001E12  0E00               	movlw	0
  2437   001E14  6E07               	movwf	lecture_normale@n_bit^0,c
  2438   001E16                     i2l1772:
  2439                           
  2440                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2441   001E16  A283               	btfss	131,1,c	;volatile
  2442   001E18  D003               	goto	i2l1774
  2443                           
  2444                           ;stid.c: 34: octet=(octet|0x01);
  2445   001E1A  5008               	movf	lecture_normale@octet^0,w,c
  2446   001E1C  0901               	iorlw	1
  2447   001E1E  6E08               	movwf	lecture_normale@octet^0,c
  2448   001E20                     i2l1774:
  2449                           
  2450                           ;stid.c: 35: octet=octet<<1;
  2451   001E20  5008               	movf	lecture_normale@octet^0,w,c
  2452   001E22  2408               	addwf	lecture_normale@octet^0,w,c
  2453   001E24  6E08               	movwf	lecture_normale@octet^0,c
  2454                           
  2455                           ;stid.c: 36: stid_delai_us(100);
  2456   001E26  0E00               	movlw	0
  2457   001E28  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2458   001E2A  0E64               	movlw	100
  2459   001E2C  6E01               	movwf	stid_delai_us@isdu^0,c
  2460   001E2E  EC68  F013         	call	_stid_delai_us	;wreg free
  2461                           
  2462                           ;stid.c: 37: LATDbits.LATD2=1;
  2463   001E32  848C               	bsf	140,2,c	;volatile
  2464                           
  2465                           ;stid.c: 38: stid_delai_us(500);
  2466   001E34  0E01               	movlw	1
  2467   001E36  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2468   001E38  0EF4               	movlw	244
  2469   001E3A  6E01               	movwf	stid_delai_us@isdu^0,c
  2470   001E3C  EC68  F013         	call	_stid_delai_us	;wreg free
  2471                           
  2472                           ;stid.c: 39: LATDbits.LATD2=0;
  2473   001E40  948C               	bcf	140,2,c	;volatile
  2474                           
  2475                           ;stid.c: 40: stid_delai_us(400);
  2476   001E42  0E01               	movlw	1
  2477   001E44  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2478   001E46  0E90               	movlw	144
  2479   001E48  6E01               	movwf	stid_delai_us@isdu^0,c
  2480   001E4A  EC68  F013         	call	_stid_delai_us	;wreg free
  2481   001E4E  2A07               	incf	lecture_normale@n_bit^0,f,c
  2482   001E50  0E07               	movlw	7
  2483   001E52  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2484   001E54  D7E0               	goto	i2l1772
  2485                           
  2486                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2487   001E56  5006               	movf	lecture_normale@n_octet^0,w,c
  2488   001E58  2403               	addwf	lecture_normale@stid_id^0,w,c
  2489   001E5A  6ED9               	movwf	fsr2l,c
  2490   001E5C  0E00               	movlw	0
  2491   001E5E  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2492   001E60  6EDA               	movwf	fsr2h,c
  2493   001E62  C008  FFDF         	movff	lecture_normale@octet,indf2
  2494                           
  2495                           ;stid.c: 43: n_octet++;
  2496   001E66  2A06               	incf	lecture_normale@n_octet^0,f,c
  2497                           
  2498                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2499   001E68  B083               	btfsc	131,0,c	;volatile
  2500   001E6A  D7D1               	goto	i2l1771
  2501                           
  2502                           ;stid.c: 47: return n_octet;
  2503   001E6C  5006               	movf	lecture_normale@n_octet^0,w,c
  2504   001E6E  0012               	return	
  2505   001E70                     i2l4854:
  2506                           
  2507                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2508   001E70  0E00               	movlw	0
  2509   001E72  0012               	return		;funcret
  2510   001E74                     __end_of_lecture_normale:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _stid_delai_us *****************
  2514 ;; Defined at:
  2515 ;;		line 56 in file "stid.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  isdu            2    0[COMRAM] unsigned int 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;                  1    wreg      void 
  2522 ;; Registers used:
  2523 ;;		wreg, status,2, status,0
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;Total ram usage:        2 bytes
  2534 ;; Hardware stack levels used: 1
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_lecture_normale
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text7
  2543   0026D0                     __ptext7:
  2544                           	callstack 0
  2545   0026D0                     _stid_delai_us:
  2546                           	callstack 26
  2547                           
  2548                           ;stid.c: 58: while(isdu>0)
  2549                           
  2550                           ;incstack = 0
  2551   0026D0  D006               	goto	i2l4580
  2552   0026D2                     i2l1781:
  2553                           
  2554                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2555   0026D2  F000               	nop	
  2556   0026D4  F000               	nop	
  2557   0026D6  F000               	nop	
  2558                           
  2559                           ;stid.c: 61: isdu--;
  2560   0026D8  0601               	decf	stid_delai_us@isdu^0,f,c
  2561   0026DA  A0D8               	btfss	status,0,c
  2562   0026DC  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2563   0026DE                     i2l4580:
  2564   0026DE  5001               	movf	stid_delai_us@isdu^0,w,c
  2565   0026E0  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2566   0026E2  B4D8               	btfsc	status,2,c
  2567   0026E4  0012               	return	
  2568   0026E6  D7F5               	goto	i2l1781
  2569   0026E8                     __end_of_stid_delai_us:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _tache5 *****************
  2573 ;; Defined at:
  2574 ;;		line 3 in file "T5.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  a               2    0[COMRAM] unsigned int 
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;Total ram usage:        2 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_fonction_d_interruption
  2598 ;;		_initialisation_du_systeme
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text8
  2603   001918                     __ptext8:
  2604                           	callstack 0
  2605   001918                     _tache5:
  2606                           	callstack 28
  2607                           
  2608                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2609                           
  2610                           ;incstack = 0
  2611                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2612   001918  A89E               	btfss	158,4,c	;volatile
  2613   00191A  D7FE               	goto	__ptext8
  2614   00191C  0E74               	movlw	116
  2615   00191E  6EAD               	movwf	173,c	;volatile
  2616   001920                     i2l1030:
  2617   001920  A2AC               	btfss	172,1,c	;volatile
  2618   001922  D7FE               	goto	i2l1030
  2619   001924                     i2u172_40:
  2620   001924  A89E               	btfss	158,4,c	;volatile
  2621   001926  D7FE               	goto	i2u172_40
  2622   001928  0E61               	movlw	97
  2623   00192A  6EAD               	movwf	173,c	;volatile
  2624   00192C                     i2l1036:
  2625   00192C  A2AC               	btfss	172,1,c	;volatile
  2626   00192E  D7FE               	goto	i2l1036
  2627   001930                     i2u174_40:
  2628   001930  A89E               	btfss	158,4,c	;volatile
  2629   001932  D7FE               	goto	i2u174_40
  2630   001934  0E63               	movlw	99
  2631   001936  6EAD               	movwf	173,c	;volatile
  2632   001938                     i2l1042:
  2633   001938  A2AC               	btfss	172,1,c	;volatile
  2634   00193A  D7FE               	goto	i2l1042
  2635   00193C                     i2u176_40:
  2636   00193C  A89E               	btfss	158,4,c	;volatile
  2637   00193E  D7FE               	goto	i2u176_40
  2638   001940  0E68               	movlw	104
  2639   001942  6EAD               	movwf	173,c	;volatile
  2640   001944                     i2l1048:
  2641   001944  A2AC               	btfss	172,1,c	;volatile
  2642   001946  D7FE               	goto	i2l1048
  2643   001948                     i2u178_40:
  2644   001948  A89E               	btfss	158,4,c	;volatile
  2645   00194A  D7FE               	goto	i2u178_40
  2646   00194C  0E65               	movlw	101
  2647   00194E  6EAD               	movwf	173,c	;volatile
  2648   001950                     i2l1054:
  2649   001950  A2AC               	btfss	172,1,c	;volatile
  2650   001952  D7FE               	goto	i2l1054
  2651   001954                     i2u180_40:
  2652   001954  A89E               	btfss	158,4,c	;volatile
  2653   001956  D7FE               	goto	i2u180_40
  2654   001958  0E35               	movlw	53
  2655   00195A  6EAD               	movwf	173,c	;volatile
  2656   00195C                     i2l1060:
  2657   00195C  A2AC               	btfss	172,1,c	;volatile
  2658   00195E  D7FE               	goto	i2l1060
  2659   001960                     i2u182_40:
  2660   001960  A89E               	btfss	158,4,c	;volatile
  2661   001962  D7FE               	goto	i2u182_40
  2662   001964  0E5F               	movlw	95
  2663   001966  6EAD               	movwf	173,c	;volatile
  2664   001968                     i2l1066:
  2665   001968  A2AC               	btfss	172,1,c	;volatile
  2666   00196A  D7FE               	goto	i2l1066
  2667   00196C                     i2u184_40:
  2668   00196C  A89E               	btfss	158,4,c	;volatile
  2669   00196E  D7FE               	goto	i2u184_40
  2670   001970  0E65               	movlw	101
  2671   001972  6EAD               	movwf	173,c	;volatile
  2672   001974                     i2l1072:
  2673   001974  A2AC               	btfss	172,1,c	;volatile
  2674   001976  D7FE               	goto	i2l1072
  2675   001978                     i2u186_40:
  2676   001978  A89E               	btfss	158,4,c	;volatile
  2677   00197A  D7FE               	goto	i2u186_40
  2678   00197C  0E6E               	movlw	110
  2679   00197E  6EAD               	movwf	173,c	;volatile
  2680   001980                     i2l1078:
  2681   001980  A2AC               	btfss	172,1,c	;volatile
  2682   001982  D7FE               	goto	i2l1078
  2683   001984                     i2u188_40:
  2684   001984  A89E               	btfss	158,4,c	;volatile
  2685   001986  D7FE               	goto	i2u188_40
  2686   001988  0E5F               	movlw	95
  2687   00198A  6EAD               	movwf	173,c	;volatile
  2688   00198C                     i2l1084:
  2689   00198C  A2AC               	btfss	172,1,c	;volatile
  2690   00198E  D7FE               	goto	i2l1084
  2691   001990                     i2u190_40:
  2692   001990  A89E               	btfss	158,4,c	;volatile
  2693   001992  D7FE               	goto	i2u190_40
  2694   001994  0E63               	movlw	99
  2695   001996  6EAD               	movwf	173,c	;volatile
  2696   001998                     i2l1090:
  2697   001998  A2AC               	btfss	172,1,c	;volatile
  2698   00199A  D7FE               	goto	i2l1090
  2699   00199C                     i2u192_40:
  2700   00199C  A89E               	btfss	158,4,c	;volatile
  2701   00199E  D7FE               	goto	i2u192_40
  2702   0019A0  0E6F               	movlw	111
  2703   0019A2  6EAD               	movwf	173,c	;volatile
  2704   0019A4                     i2l1096:
  2705   0019A4  A2AC               	btfss	172,1,c	;volatile
  2706   0019A6  D7FE               	goto	i2l1096
  2707   0019A8                     i2u194_40:
  2708   0019A8  A89E               	btfss	158,4,c	;volatile
  2709   0019AA  D7FE               	goto	i2u194_40
  2710   0019AC  0E75               	movlw	117
  2711   0019AE  6EAD               	movwf	173,c	;volatile
  2712   0019B0                     i2l1102:
  2713   0019B0  A2AC               	btfss	172,1,c	;volatile
  2714   0019B2  D7FE               	goto	i2l1102
  2715   0019B4                     i2u196_40:
  2716   0019B4  A89E               	btfss	158,4,c	;volatile
  2717   0019B6  D7FE               	goto	i2u196_40
  2718   0019B8  0E72               	movlw	114
  2719   0019BA  6EAD               	movwf	173,c	;volatile
  2720   0019BC                     i2l1108:
  2721   0019BC  A2AC               	btfss	172,1,c	;volatile
  2722   0019BE  D7FE               	goto	i2l1108
  2723   0019C0                     i2u198_40:
  2724   0019C0  A89E               	btfss	158,4,c	;volatile
  2725   0019C2  D7FE               	goto	i2u198_40
  2726   0019C4  0E73               	movlw	115
  2727   0019C6  6EAD               	movwf	173,c	;volatile
  2728   0019C8                     i2l1114:
  2729   0019C8  A2AC               	btfss	172,1,c	;volatile
  2730   0019CA  D7FE               	goto	i2l1114
  2731                           
  2732                           ;T5.c: 28: for (a=0;a<65000;a++)
  2733   0019CC  0E00               	movlw	0
  2734   0019CE  6E02               	movwf	(tache5@a+1)^0,c
  2735   0019D0  0E00               	movlw	0
  2736   0019D2  6E01               	movwf	tache5@a^0,c
  2737   0019D4                     i2l3906:
  2738                           
  2739                           ;T5.c: 29: ;
  2740   0019D4  4A01               	infsnz	tache5@a^0,f,c
  2741   0019D6  2A02               	incf	(tache5@a+1)^0,f,c
  2742   0019D8  0EE8               	movlw	232
  2743   0019DA  5C01               	subwf	tache5@a^0,w,c
  2744   0019DC  0EFD               	movlw	253
  2745   0019DE  5802               	subwfb	(tache5@a+1)^0,w,c
  2746   0019E0  A0D8               	btfss	status,0,c
  2747   0019E2  D7F8               	goto	i2l3906
  2748                           
  2749                           ;T5.c: 30: for (a=0;a<65000;a++)
  2750   0019E4  0E00               	movlw	0
  2751   0019E6  6E02               	movwf	(tache5@a+1)^0,c
  2752   0019E8  0E00               	movlw	0
  2753   0019EA  6E01               	movwf	tache5@a^0,c
  2754   0019EC                     i2l3916:
  2755                           
  2756                           ;T5.c: 31: ;
  2757   0019EC  4A01               	infsnz	tache5@a^0,f,c
  2758   0019EE  2A02               	incf	(tache5@a+1)^0,f,c
  2759   0019F0  0EE8               	movlw	232
  2760   0019F2  5C01               	subwf	tache5@a^0,w,c
  2761   0019F4  0EFD               	movlw	253
  2762   0019F6  5802               	subwfb	(tache5@a+1)^0,w,c
  2763   0019F8  B0D8               	btfsc	status,0,c
  2764   0019FA  D78E               	goto	__ptext8
  2765   0019FC  D7F7               	goto	i2l3916
  2766   0019FE                     __end_of_tache5:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _tache4 *****************
  2770 ;; Defined at:
  2771 ;;		line 3 in file "T4.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  a               2    0[COMRAM] unsigned int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;Total ram usage:        2 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_fonction_d_interruption
  2795 ;;		_initialisation_du_systeme
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text9
  2800   001ADC                     __ptext9:
  2801                           	callstack 0
  2802   001ADC                     _tache4:
  2803                           	callstack 28
  2804                           
  2805                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2806                           
  2807                           ;incstack = 0
  2808                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2809   001ADC  A89E               	btfss	158,4,c	;volatile
  2810   001ADE  D7FE               	goto	__ptext9
  2811   001AE0  0E54               	movlw	84
  2812   001AE2  6EAD               	movwf	173,c	;volatile
  2813   001AE4                     i2l840:
  2814   001AE4  A2AC               	btfss	172,1,c	;volatile
  2815   001AE6  D7FE               	goto	i2l840
  2816   001AE8                     i2u141_40:
  2817   001AE8  A89E               	btfss	158,4,c	;volatile
  2818   001AEA  D7FE               	goto	i2u141_40
  2819   001AEC  0E41               	movlw	65
  2820   001AEE  6EAD               	movwf	173,c	;volatile
  2821   001AF0                     i2l846:
  2822   001AF0  A2AC               	btfss	172,1,c	;volatile
  2823   001AF2  D7FE               	goto	i2l846
  2824   001AF4                     i2u143_40:
  2825   001AF4  A89E               	btfss	158,4,c	;volatile
  2826   001AF6  D7FE               	goto	i2u143_40
  2827   001AF8  0E43               	movlw	67
  2828   001AFA  6EAD               	movwf	173,c	;volatile
  2829   001AFC                     i2l852:
  2830   001AFC  A2AC               	btfss	172,1,c	;volatile
  2831   001AFE  D7FE               	goto	i2l852
  2832   001B00                     i2u145_40:
  2833   001B00  A89E               	btfss	158,4,c	;volatile
  2834   001B02  D7FE               	goto	i2u145_40
  2835   001B04  0E48               	movlw	72
  2836   001B06  6EAD               	movwf	173,c	;volatile
  2837   001B08                     i2l858:
  2838   001B08  A2AC               	btfss	172,1,c	;volatile
  2839   001B0A  D7FE               	goto	i2l858
  2840   001B0C                     i2u147_40:
  2841   001B0C  A89E               	btfss	158,4,c	;volatile
  2842   001B0E  D7FE               	goto	i2u147_40
  2843   001B10  0E45               	movlw	69
  2844   001B12  6EAD               	movwf	173,c	;volatile
  2845   001B14                     i2l864:
  2846   001B14  A2AC               	btfss	172,1,c	;volatile
  2847   001B16  D7FE               	goto	i2l864
  2848   001B18                     i2u149_40:
  2849   001B18  A89E               	btfss	158,4,c	;volatile
  2850   001B1A  D7FE               	goto	i2u149_40
  2851   001B1C  0E34               	movlw	52
  2852   001B1E  6EAD               	movwf	173,c	;volatile
  2853   001B20                     i2l870:
  2854   001B20  A2AC               	btfss	172,1,c	;volatile
  2855   001B22  D7FE               	goto	i2l870
  2856   001B24                     i2u151_40:
  2857   001B24  A89E               	btfss	158,4,c	;volatile
  2858   001B26  D7FE               	goto	i2u151_40
  2859   001B28  0E5F               	movlw	95
  2860   001B2A  6EAD               	movwf	173,c	;volatile
  2861   001B2C                     i2l876:
  2862   001B2C  A2AC               	btfss	172,1,c	;volatile
  2863   001B2E  D7FE               	goto	i2l876
  2864   001B30                     i2u153_40:
  2865   001B30  A89E               	btfss	158,4,c	;volatile
  2866   001B32  D7FE               	goto	i2u153_40
  2867   001B34  0E45               	movlw	69
  2868   001B36  6EAD               	movwf	173,c	;volatile
  2869   001B38                     i2l882:
  2870   001B38  A2AC               	btfss	172,1,c	;volatile
  2871   001B3A  D7FE               	goto	i2l882
  2872   001B3C                     i2u155_40:
  2873   001B3C  A89E               	btfss	158,4,c	;volatile
  2874   001B3E  D7FE               	goto	i2u155_40
  2875   001B40  0E4E               	movlw	78
  2876   001B42  6EAD               	movwf	173,c	;volatile
  2877   001B44                     i2l888:
  2878   001B44  A2AC               	btfss	172,1,c	;volatile
  2879   001B46  D7FE               	goto	i2l888
  2880   001B48                     i2u157_40:
  2881   001B48  A89E               	btfss	158,4,c	;volatile
  2882   001B4A  D7FE               	goto	i2u157_40
  2883   001B4C  0E5F               	movlw	95
  2884   001B4E  6EAD               	movwf	173,c	;volatile
  2885   001B50                     i2l894:
  2886   001B50  A2AC               	btfss	172,1,c	;volatile
  2887   001B52  D7FE               	goto	i2l894
  2888   001B54                     i2u159_40:
  2889   001B54  A89E               	btfss	158,4,c	;volatile
  2890   001B56  D7FE               	goto	i2u159_40
  2891   001B58  0E43               	movlw	67
  2892   001B5A  6EAD               	movwf	173,c	;volatile
  2893   001B5C                     i2l900:
  2894   001B5C  A2AC               	btfss	172,1,c	;volatile
  2895   001B5E  D7FE               	goto	i2l900
  2896   001B60                     i2u161_40:
  2897   001B60  A89E               	btfss	158,4,c	;volatile
  2898   001B62  D7FE               	goto	i2u161_40
  2899   001B64  0E4F               	movlw	79
  2900   001B66  6EAD               	movwf	173,c	;volatile
  2901   001B68                     i2l906:
  2902   001B68  A2AC               	btfss	172,1,c	;volatile
  2903   001B6A  D7FE               	goto	i2l906
  2904   001B6C                     i2u163_40:
  2905   001B6C  A89E               	btfss	158,4,c	;volatile
  2906   001B6E  D7FE               	goto	i2u163_40
  2907   001B70  0E55               	movlw	85
  2908   001B72  6EAD               	movwf	173,c	;volatile
  2909   001B74                     i2l912:
  2910   001B74  A2AC               	btfss	172,1,c	;volatile
  2911   001B76  D7FE               	goto	i2l912
  2912   001B78                     i2u165_40:
  2913   001B78  A89E               	btfss	158,4,c	;volatile
  2914   001B7A  D7FE               	goto	i2u165_40
  2915   001B7C  0E52               	movlw	82
  2916   001B7E  6EAD               	movwf	173,c	;volatile
  2917   001B80                     i2l918:
  2918   001B80  A2AC               	btfss	172,1,c	;volatile
  2919   001B82  D7FE               	goto	i2l918
  2920   001B84                     i2u167_40:
  2921   001B84  A89E               	btfss	158,4,c	;volatile
  2922   001B86  D7FE               	goto	i2u167_40
  2923   001B88  0E53               	movlw	83
  2924   001B8A  6EAD               	movwf	173,c	;volatile
  2925   001B8C                     i2l924:
  2926   001B8C  A2AC               	btfss	172,1,c	;volatile
  2927   001B8E  D7FE               	goto	i2l924
  2928                           
  2929                           ;T4.c: 28: for (a=0;a<65000;a++)
  2930   001B90  0E00               	movlw	0
  2931   001B92  6E02               	movwf	(tache4@a+1)^0,c
  2932   001B94  0E00               	movlw	0
  2933   001B96  6E01               	movwf	tache4@a^0,c
  2934   001B98                     i2l3866:
  2935                           
  2936                           ;T4.c: 29: ;
  2937   001B98  4A01               	infsnz	tache4@a^0,f,c
  2938   001B9A  2A02               	incf	(tache4@a+1)^0,f,c
  2939   001B9C  0EE8               	movlw	232
  2940   001B9E  5C01               	subwf	tache4@a^0,w,c
  2941   001BA0  0EFD               	movlw	253
  2942   001BA2  5802               	subwfb	(tache4@a+1)^0,w,c
  2943   001BA4  B0D8               	btfsc	status,0,c
  2944   001BA6  D79A               	goto	__ptext9
  2945   001BA8  D7F7               	goto	i2l3866
  2946   001BAA                     __end_of_tache4:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _tache3 *****************
  2950 ;; Defined at:
  2951 ;;		line 3 in file "T3.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;		None
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, status,2, status,0
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;Total ram usage:        0 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_fonction_d_interruption
  2975 ;;		_initialisation_du_systeme
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text10
  2980   0019FE                     __ptext10:
  2981                           	callstack 0
  2982   0019FE                     _tache3:
  2983                           	callstack 28
  2984                           
  2985                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2986                           
  2987                           ;incstack = 0
  2988                           ;T3.c: 5: while(1)
  2989   0019FE  0100               	movlb	0	; () banked
  2990   001A00  0566               	decf	102,w,b
  2991   001A02  A4D8               	btfss	status,2,c
  2992   001A04  D014               	goto	i2l3766
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2996   001A06  0ECA               	movlw	202
  2997   001A08  6567               	cpfsgt	103,b
  2998   001A0A  D011               	goto	i2l3766
  2999                           
  3000                           ; BSR set to: 0
  3001   001A0C  0ED1               	movlw	209
  3002   001A0E  6167               	cpfslt	103,b
  3003   001A10  D00E               	goto	i2l3766
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  3007   001A12  0E70               	movlw	112
  3008   001A14  6568               	cpfsgt	104,b
  3009   001A16  D004               	goto	i2l3760
  3010                           
  3011                           ; BSR set to: 0
  3012   001A18  0E79               	movlw	121
  3013   001A1A  6168               	cpfslt	104,b
  3014   001A1C  D001               	goto	i2l3760
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  3018   001A1E  848B               	bsf	139,2,c	;volatile
  3019   001A20                     i2l3760:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  3023   001A20  0E78               	movlw	120
  3024   001A22  6568               	cpfsgt	104,b
  3025   001A24  D004               	goto	i2l3766
  3026                           
  3027                           ; BSR set to: 0
  3028   001A26  0E7F               	movlw	127
  3029   001A28  6168               	cpfslt	104,b
  3030   001A2A  D001               	goto	i2l3766
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  3034   001A2C  948B               	bcf	139,2,c	;volatile
  3035   001A2E                     i2l3766:
  3036                           
  3037                           ; BSR set to: 0
  3038                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  3039   001A2E  0566               	decf	102,w,b
  3040   001A30  A4D8               	btfss	status,2,c
  3041   001A32  D014               	goto	i2l3784
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  3045   001A34  0ED6               	movlw	214
  3046   001A36  6567               	cpfsgt	103,b
  3047   001A38  D011               	goto	i2l3784
  3048                           
  3049                           ; BSR set to: 0
  3050   001A3A  0EDD               	movlw	221
  3051   001A3C  6167               	cpfslt	103,b
  3052   001A3E  D00E               	goto	i2l3784
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  3056   001A40  0E70               	movlw	112
  3057   001A42  6568               	cpfsgt	104,b
  3058   001A44  D004               	goto	i2l3778
  3059                           
  3060                           ; BSR set to: 0
  3061   001A46  0E79               	movlw	121
  3062   001A48  6168               	cpfslt	104,b
  3063   001A4A  D001               	goto	i2l3778
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  3067   001A4C  828B               	bsf	139,1,c	;volatile
  3068   001A4E                     i2l3778:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  3072   001A4E  0E78               	movlw	120
  3073   001A50  6568               	cpfsgt	104,b
  3074   001A52  D004               	goto	i2l3784
  3075                           
  3076                           ; BSR set to: 0
  3077   001A54  0E7F               	movlw	127
  3078   001A56  6168               	cpfslt	104,b
  3079   001A58  D001               	goto	i2l3784
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  3083   001A5A  928B               	bcf	139,1,c	;volatile
  3084   001A5C                     i2l3784:
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  3088   001A5C  0566               	decf	102,w,b
  3089   001A5E  A4D8               	btfss	status,2,c
  3090   001A60  D014               	goto	i2l3802
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  3094   001A62  0EE2               	movlw	226
  3095   001A64  6567               	cpfsgt	103,b
  3096   001A66  D011               	goto	i2l3802
  3097                           
  3098                           ; BSR set to: 0
  3099   001A68  0EE9               	movlw	233
  3100   001A6A  6167               	cpfslt	103,b
  3101   001A6C  D00E               	goto	i2l3802
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  3105   001A6E  0E70               	movlw	112
  3106   001A70  6568               	cpfsgt	104,b
  3107   001A72  D004               	goto	i2l3796
  3108                           
  3109                           ; BSR set to: 0
  3110   001A74  0E79               	movlw	121
  3111   001A76  6168               	cpfslt	104,b
  3112   001A78  D001               	goto	i2l3796
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  3116   001A7A  808F               	bsf	143,0,c	;volatile
  3117   001A7C                     i2l3796:
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  3121   001A7C  0E78               	movlw	120
  3122   001A7E  6568               	cpfsgt	104,b
  3123   001A80  D004               	goto	i2l3802
  3124                           
  3125                           ; BSR set to: 0
  3126   001A82  0E7F               	movlw	127
  3127   001A84  6168               	cpfslt	104,b
  3128   001A86  D001               	goto	i2l3802
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  3132   001A88  908F               	bcf	143,0,c	;volatile
  3133   001A8A                     i2l3802:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  3137   001A8A  0566               	decf	102,w,b
  3138   001A8C  A4D8               	btfss	status,2,c
  3139   001A8E  D011               	goto	i2l3816
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  3143   001A90  0EB3               	movlw	179
  3144   001A92  6567               	cpfsgt	103,b
  3145   001A94  D00E               	goto	i2l3816
  3146                           
  3147                           ; BSR set to: 0
  3148   001A96  0EE6               	movlw	230
  3149   001A98  6167               	cpfslt	103,b
  3150   001A9A  D00B               	goto	i2l3816
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  3154   001A9C  0E13               	movlw	19
  3155   001A9E  6568               	cpfsgt	104,b
  3156   001AA0  D008               	goto	i2l3816
  3157                           
  3158                           ; BSR set to: 0
  3159   001AA2  0E3C               	movlw	60
  3160   001AA4  6168               	cpfslt	104,b
  3161   001AA6  D005               	goto	i2l3816
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3165   001AA8  948B               	bcf	139,2,c	;volatile
  3166   001AAA  828B               	bsf	139,1,c	;volatile
  3167   001AAC  808F               	bsf	143,0,c	;volatile
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;T3.c: 62: TEST = 1;
  3171   001AAE  0E01               	movlw	1
  3172   001AB0  6F81               	movwf	129,b
  3173   001AB2                     i2l3816:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;T3.c: 66: };T3.c: 67: };T3.c: 68: if (TP_appui==1)
  3177   001AB2  0566               	decf	102,w,b
  3178   001AB4  A4D8               	btfss	status,2,c
  3179   001AB6  D7A3               	goto	__ptext10
  3180                           
  3181                           ; BSR set to: 0
  3182                           ;T3.c: 69: {;T3.c: 70: if((TP_x>=120)&&(TP_x<170))
  3183   001AB8  0E77               	movlw	119
  3184   001ABA  6567               	cpfsgt	103,b
  3185   001ABC  D7A0               	goto	__ptext10
  3186                           
  3187                           ; BSR set to: 0
  3188   001ABE  0EAA               	movlw	170
  3189   001AC0  6167               	cpfslt	103,b
  3190   001AC2  D79D               	goto	__ptext10
  3191                           
  3192                           ; BSR set to: 0
  3193                           ;T3.c: 71: {;T3.c: 72: if ((TP_y>=20)&&(TP_y<60))
  3194   001AC4  0E13               	movlw	19
  3195   001AC6  6568               	cpfsgt	104,b
  3196   001AC8  D79A               	goto	__ptext10
  3197                           
  3198                           ; BSR set to: 0
  3199   001ACA  0E3C               	movlw	60
  3200   001ACC  6168               	cpfslt	104,b
  3201   001ACE  D797               	goto	__ptext10
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;T3.c: 73: {;T3.c: 74: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3205   001AD0  948B               	bcf	139,2,c	;volatile
  3206   001AD2  928B               	bcf	139,1,c	;volatile
  3207   001AD4  908F               	bcf	143,0,c	;volatile
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;T3.c: 75: TEST = 0;
  3211   001AD6  0E00               	movlw	0
  3212   001AD8  6F81               	movwf	129,b
  3213                           
  3214                           ; BSR set to: 0
  3215   001ADA  D791               	goto	__ptext10
  3216   001ADC                     __end_of_tache3:
  3217                           	callstack 0
  3218                           
  3219 ;; *************** function _tache2 *****************
  3220 ;; Defined at:
  3221 ;;		line 3 in file "T2.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;		None
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  iy              2   11[COMRAM] unsigned int 
  3226 ;;  ix              2    9[COMRAM] unsigned int 
  3227 ;;  ly              1   16[COMRAM] unsigned char 
  3228 ;;  hy              1   15[COMRAM] unsigned char 
  3229 ;;  lx              1   14[COMRAM] unsigned char 
  3230 ;;  hx              1   13[COMRAM] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      void 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:       10 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 1
  3247 ;; This function calls:
  3248 ;;		___lwdiv
  3249 ;;		_tp_delai
  3250 ;; This function is called by:
  3251 ;;		_fonction_d_interruption
  3252 ;;		_initialisation_du_systeme
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text11
  3257   001824                     __ptext11:
  3258                           	callstack 0
  3259   001824                     _tache2:
  3260                           	callstack 27
  3261                           
  3262                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;incstack = 0
  3266   001824  0E00               	movlw	0
  3267   001826  0100               	movlb	0	; () banked
  3268   001828  6F66               	movwf	102,b
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3272   00182A  868F               	bsf	143,3,c	;volatile
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;T2.c: 13: LATGbits.LATG4=0;
  3276   00182C  988F               	bcf	143,4,c	;volatile
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;T2.c: 14: tp_delai(3000);
  3280   00182E  0E0B               	movlw	11
  3281   001830  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3282   001832  0EB8               	movlw	184
  3283   001834  6E01               	movwf	tp_delai@itpd^0,c
  3284   001836  EC74  F013         	call	_tp_delai	;wreg free
  3285                           
  3286                           ;T2.c: 18: ADCON2=0x16;
  3287   00183A  0E16               	movlw	22
  3288   00183C  6EC0               	movwf	192,c	;volatile
  3289                           
  3290                           ;T2.c: 19: ADCON0=0x01;
  3291   00183E  0E01               	movlw	1
  3292   001840  6EC2               	movwf	194,c	;volatile
  3293                           
  3294                           ;T2.c: 20: ADCON0=0x03;
  3295   001842  0E03               	movlw	3
  3296   001844  6EC2               	movwf	194,c	;volatile
  3297   001846                     i2l605:
  3298   001846  B2C2               	btfsc	194,1,c	;volatile
  3299   001848  D7FE               	goto	i2l605
  3300                           
  3301                           ;T2.c: 23: hx=ADRESH;
  3302   00184A  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3303                           
  3304                           ;T2.c: 24: lx=ADRESL;
  3305   00184E  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3306                           
  3307                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3308   001852  C00F  F008         	movff	tache2@lx,??_tache2
  3309   001856  0E0F               	movlw	15
  3310   001858  1608               	andwf	??_tache2^0,f,c
  3311   00185A  B4D8               	btfsc	status,2,c
  3312   00185C  D004               	goto	i2l5294
  3313   00185E  0E00               	movlw	0
  3314   001860  6E0E               	movwf	tache2@hx^0,c
  3315   001862  0E00               	movlw	0
  3316   001864  6E0F               	movwf	tache2@lx^0,c
  3317   001866                     i2l5294:
  3318                           
  3319                           ;T2.c: 31: if (hx>=10)
  3320   001866  0E09               	movlw	9
  3321   001868  640E               	cpfsgt	tache2@hx^0,c
  3322   00186A  D7DC               	goto	__ptext11
  3323                           
  3324                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3325   00186C  968F               	bcf	143,3,c	;volatile
  3326                           
  3327                           ;T2.c: 34: LATGbits.LATG4=1;
  3328   00186E  888F               	bsf	143,4,c	;volatile
  3329                           
  3330                           ;T2.c: 35: tp_delai(3000);
  3331   001870  0E0B               	movlw	11
  3332   001872  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3333   001874  0EB8               	movlw	184
  3334   001876  6E01               	movwf	tp_delai@itpd^0,c
  3335   001878  EC74  F013         	call	_tp_delai	;wreg free
  3336                           
  3337                           ;T2.c: 39: ADCON2=0x16;
  3338   00187C  0E16               	movlw	22
  3339   00187E  6EC0               	movwf	192,c	;volatile
  3340                           
  3341                           ;T2.c: 40: ADCON0=0x05;
  3342   001880  0E05               	movlw	5
  3343   001882  6EC2               	movwf	194,c	;volatile
  3344                           
  3345                           ;T2.c: 41: ADCON0=0x07;
  3346   001884  0E07               	movlw	7
  3347   001886  6EC2               	movwf	194,c	;volatile
  3348   001888                     i2l610:
  3349   001888  B2C2               	btfsc	194,1,c	;volatile
  3350   00188A  D7FE               	goto	i2l610
  3351                           
  3352                           ;T2.c: 44: hy=ADRESH;
  3353   00188C  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3354                           
  3355                           ;T2.c: 45: ly=ADRESL;
  3356   001890  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3357                           
  3358                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3359   001894  C011  F008         	movff	tache2@ly,??_tache2
  3360   001898  0E0F               	movlw	15
  3361   00189A  1608               	andwf	??_tache2^0,f,c
  3362   00189C  B4D8               	btfsc	status,2,c
  3363   00189E  D004               	goto	i2l5310
  3364   0018A0  0E00               	movlw	0
  3365   0018A2  6E10               	movwf	tache2@hy^0,c
  3366   0018A4  0E00               	movlw	0
  3367   0018A6  6E11               	movwf	tache2@ly^0,c
  3368   0018A8                     i2l5310:
  3369                           
  3370                           ;T2.c: 51: if (hy>=20)
  3371   0018A8  0E13               	movlw	19
  3372   0018AA  6410               	cpfsgt	tache2@hy^0,c
  3373   0018AC  D7BB               	goto	__ptext11
  3374                           
  3375                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3376   0018AE  500E               	movf	tache2@hx^0,w,c
  3377   0018B0  6E08               	movwf	??_tache2^0,c
  3378   0018B2  500F               	movf	tache2@lx^0,w,c
  3379   0018B4  6E0A               	movwf	tache2@ix^0,c
  3380   0018B6  C008  F00B         	movff	??_tache2,tache2@ix+1
  3381                           
  3382                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3383   0018BA  5010               	movf	tache2@hy^0,w,c
  3384   0018BC  6E08               	movwf	??_tache2^0,c
  3385   0018BE  5011               	movf	tache2@ly^0,w,c
  3386   0018C0  6E0C               	movwf	tache2@iy^0,c
  3387   0018C2  C008  F00D         	movff	??_tache2,tache2@iy+1
  3388                           
  3389                           ;T2.c: 55: ix=ix-3150;
  3390   0018C6  0EB2               	movlw	178
  3391   0018C8  240A               	addwf	tache2@ix^0,w,c
  3392   0018CA  6E0A               	movwf	tache2@ix^0,c
  3393   0018CC  0EF3               	movlw	243
  3394   0018CE  200B               	addwfc	(tache2@ix+1)^0,w,c
  3395   0018D0  6E0B               	movwf	(tache2@ix+1)^0,c
  3396                           
  3397                           ;T2.c: 56: iy=iy-6500;
  3398   0018D2  0E9C               	movlw	156
  3399   0018D4  240C               	addwf	tache2@iy^0,w,c
  3400   0018D6  6E0C               	movwf	tache2@iy^0,c
  3401   0018D8  0EE6               	movlw	230
  3402   0018DA  200D               	addwfc	(tache2@iy+1)^0,w,c
  3403   0018DC  6E0D               	movwf	(tache2@iy+1)^0,c
  3404                           
  3405                           ;T2.c: 58: TP_x=ix/246;
  3406   0018DE  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3407   0018E2  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3408   0018E6  0E00               	movlw	0
  3409   0018E8  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3410   0018EA  0EF6               	movlw	246
  3411   0018EC  6E03               	movwf	___lwdiv@divisor^0,c
  3412   0018EE  EC20  F011         	call	___lwdiv	;wreg free
  3413   0018F2  5001               	movf	?___lwdiv^0,w,c
  3414   0018F4  0100               	movlb	0	; () banked
  3415   0018F6  6F67               	movwf	103,b
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;T2.c: 59: TP_y=127-(iy/409);
  3419   0018F8  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3420   0018FC  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3421   001900  0E01               	movlw	1
  3422   001902  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3423   001904  0E99               	movlw	153
  3424   001906  6E03               	movwf	___lwdiv@divisor^0,c
  3425   001908  EC20  F011         	call	___lwdiv	;wreg free
  3426   00190C  5001               	movf	?___lwdiv^0,w,c
  3427   00190E  087F               	sublw	127
  3428   001910  0100               	movlb	0	; () banked
  3429   001912  6F68               	movwf	104,b
  3430                           
  3431                           ;T2.c: 68: TP_appui=1;
  3432   001914  0E01               	movlw	1
  3433   001916  D788               	goto	L3
  3434   001918                     __end_of_tache2:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _tp_delai *****************
  3438 ;; Defined at:
  3439 ;;		line 87 in file "T2.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  itpd            2    0[COMRAM] unsigned int 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, status,2, status,0
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;Total ram usage:        2 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; This function calls:
  3460 ;;		Nothing
  3461 ;; This function is called by:
  3462 ;;		_tache2
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text12
  3467   0026E8                     __ptext12:
  3468                           	callstack 0
  3469   0026E8                     _tp_delai:
  3470                           	callstack 27
  3471                           
  3472                           ;T2.c: 89: while(itpd>0)
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;incstack = 0
  3476   0026E8  D006               	goto	i2l4800
  3477   0026EA                     i2l623:
  3478                           
  3479                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3480   0026EA  F000               	nop	
  3481   0026EC  F000               	nop	
  3482   0026EE  F000               	nop	
  3483                           
  3484                           ;T2.c: 92: itpd--;
  3485   0026F0  0601               	decf	tp_delai@itpd^0,f,c
  3486   0026F2  A0D8               	btfss	status,0,c
  3487   0026F4  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3488   0026F6                     i2l4800:
  3489   0026F6  5001               	movf	tp_delai@itpd^0,w,c
  3490   0026F8  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3491   0026FA  B4D8               	btfsc	status,2,c
  3492   0026FC  0012               	return	
  3493   0026FE  D7F5               	goto	i2l623
  3494   002700                     __end_of_tp_delai:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function ___lwdiv *****************
  3498 ;; Defined at:
  3499 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  dividend        2    0[COMRAM] unsigned int 
  3502 ;;  divisor         2    2[COMRAM] unsigned int 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  quotient        2    4[COMRAM] unsigned int 
  3505 ;;  counter         1    6[COMRAM] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  2    0[COMRAM] unsigned int 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;Total ram usage:        7 bytes
  3520 ;; Hardware stack levels used: 1
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_tache2
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text13
  3529   002240                     __ptext13:
  3530                           	callstack 0
  3531   002240                     ___lwdiv:
  3532                           	callstack 27
  3533                           
  3534                           ;incstack = 0
  3535   002240  0E00               	movlw	0
  3536   002242  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3537   002244  0E00               	movlw	0
  3538   002246  6E05               	movwf	___lwdiv@quotient^0,c
  3539   002248  5003               	movf	___lwdiv@divisor^0,w,c
  3540   00224A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3541   00224C  B4D8               	btfsc	status,2,c
  3542   00224E  D01C               	goto	i2l2366
  3543   002250  0E01               	movlw	1
  3544   002252  6E07               	movwf	___lwdiv@counter^0,c
  3545   002254  D004               	goto	i2l4866
  3546   002256                     i2l4864:
  3547   002256  90D8               	bcf	status,0,c
  3548   002258  3603               	rlcf	___lwdiv@divisor^0,f,c
  3549   00225A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3550   00225C  2A07               	incf	___lwdiv@counter^0,f,c
  3551   00225E                     i2l4866:
  3552   00225E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3553   002260  D7FA               	goto	i2l4864
  3554   002262                     i2u285_40:
  3555   002262  90D8               	bcf	status,0,c
  3556   002264  3605               	rlcf	___lwdiv@quotient^0,f,c
  3557   002266  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3558   002268  5003               	movf	___lwdiv@divisor^0,w,c
  3559   00226A  5C01               	subwf	___lwdiv@dividend^0,w,c
  3560   00226C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3561   00226E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3562   002270  A0D8               	btfss	status,0,c
  3563   002272  D005               	goto	i2l4876
  3564   002274  5003               	movf	___lwdiv@divisor^0,w,c
  3565   002276  5E01               	subwf	___lwdiv@dividend^0,f,c
  3566   002278  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3567   00227A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3568   00227C  8005               	bsf	___lwdiv@quotient^0,0,c
  3569   00227E                     i2l4876:
  3570   00227E  90D8               	bcf	status,0,c
  3571   002280  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3572   002282  3203               	rrcf	___lwdiv@divisor^0,f,c
  3573   002284  2E07               	decfsz	___lwdiv@counter^0,f,c
  3574   002286  D7ED               	goto	i2u285_40
  3575   002288                     i2l2366:
  3576   002288  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3577   00228C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3578   002290  0012               	return		;funcret
  3579   002292                     __end_of___lwdiv:
  3580                           	callstack 0
  3581                           
  3582 ;; *************** function _tache1 *****************
  3583 ;; Defined at:
  3584 ;;		line 3 in file "T1.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;  i               1    0        unsigned char 
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used: 1
  3604 ;; Hardware stack levels required when called: 5
  3605 ;; This function calls:
  3606 ;;		_Conversion
  3607 ;;		_Diminution
  3608 ;;		_Init
  3609 ;;		_charger
  3610 ;;		_clear_graphics
  3611 ;;		_clear_line
  3612 ;;		_clear_square
  3613 ;;		_clear_text
  3614 ;;		_draw_char
  3615 ;;		_draw_dec8
  3616 ;;		_draw_hex8
  3617 ;;		_draw_square
  3618 ;;		_draw_string
  3619 ;;		_goto_lico
  3620 ;;		_init_rxtx
  3621 ;;		_initialisation_afficheur
  3622 ;;		_lecture_8bit_analogique
  3623 ;;		_marche
  3624 ;;		_plot1
  3625 ;;		_vide
  3626 ;;		_vitesseAdmin
  3627 ;; This function is called by:
  3628 ;;		_fonction_d_interruption
  3629 ;;		_initialisation_du_systeme
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text14
  3634   0010F6                     __ptext14:
  3635                           	callstack 0
  3636   0010F6                     _tache1:
  3637                           	callstack 23
  3638                           
  3639                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3640                           
  3641                           ;incstack = 0
  3642   0010F6  9EF2               	bcf	242,7,c	;volatile
  3643                           
  3644                           ;T1.c: 8: initialisation_afficheur();
  3645   0010F8  ECD5  F00D         	call	_initialisation_afficheur	;wreg free
  3646                           
  3647                           ;T1.c: 9: clear_text();
  3648   0010FC  EC98  F012         	call	_clear_text	;wreg free
  3649                           
  3650                           ;T1.c: 10: clear_graphics();
  3651   001100  ECB0  F012         	call	_clear_graphics	;wreg free
  3652                           
  3653                           ;T1.c: 11: init_rxtx();
  3654   001104  EC02  F013         	call	_init_rxtx	;wreg free
  3655                           
  3656                           ;T1.c: 12: Init(2);
  3657   001108  0E02               	movlw	2
  3658   00110A  6EE6               	movwf	postinc1,c
  3659   00110C  ECF1  F012         	call	_Init	;wreg free
  3660                           
  3661                           ;T1.c: 13: RXTX_libre=1;
  3662   001110  0E01               	movlw	1
  3663   001112  0100               	movlb	0	; () banked
  3664   001114  6F80               	movwf	128,b
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;T1.c: 14: TXREG1='R';
  3668   001116  0E52               	movlw	82
  3669   001118  6EAD               	movwf	173,c	;volatile
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3673   00111A  8EF2               	bsf	242,7,c	;volatile
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3677   00111C  948B               	bcf	139,2,c	;volatile
  3678                           
  3679                           ; BSR set to: 0
  3680   00111E  928B               	bcf	139,1,c	;volatile
  3681                           
  3682                           ; BSR set to: 0
  3683   001120  908F               	bcf	143,0,c	;volatile
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;T1.c: 19: vitesse=0;
  3687   001122  0E00               	movlw	0
  3688   001124  6F73               	movwf	115,b
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;T1.c: 21: n_octet_badge=0;
  3692   001126  0E00               	movlw	0
  3693   001128  6F7F               	movwf	127,b
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;T1.c: 22: TEST=0;
  3697   00112A  0E00               	movlw	0
  3698   00112C  6F81               	movwf	129,b
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;T1.c: 23: Personne=0;
  3702   00112E  0E00               	movlw	0
  3703   001130  6F82               	movwf	130,b
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3707   001132  0E22               	movlw	34
  3708   001134  6E09               	movwf	goto_lico@colonne^0,c
  3709   001136  0E0D               	movlw	13
  3710   001138  ECF4  F010         	call	_goto_lico
  3711   00113C  0E52               	movlw	82
  3712   00113E  EC7F  F012         	call	_draw_char
  3713   001142  0E20               	movlw	32
  3714   001144  EC7F  F012         	call	_draw_char
  3715   001148  0E56               	movlw	86
  3716   00114A  EC7F  F012         	call	_draw_char
  3717   00114E  0E20               	movlw	32
  3718   001150  EC7F  F012         	call	_draw_char
  3719   001154  0E42               	movlw	66
  3720   001156  EC7F  F012         	call	_draw_char
  3721                           
  3722                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3723   00115A  0E22               	movlw	34
  3724   00115C  6E09               	movwf	goto_lico@colonne^0,c
  3725   00115E  0E0E               	movlw	14
  3726   001160  ECF4  F010         	call	_goto_lico
  3727   001164  0E30               	movlw	48
  3728   001166  EC7F  F012         	call	_draw_char
  3729   00116A  0E20               	movlw	32
  3730   00116C  EC7F  F012         	call	_draw_char
  3731   001170  0E30               	movlw	48
  3732   001172  EC7F  F012         	call	_draw_char
  3733   001176  0E20               	movlw	32
  3734   001178  EC7F  F012         	call	_draw_char
  3735   00117C  0E30               	movlw	48
  3736   00117E  EC7F  F012         	call	_draw_char
  3737                           
  3738                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3739   001182  0E22               	movlw	34
  3740   001184  6E09               	movwf	goto_lico@colonne^0,c
  3741   001186  0E0F               	movlw	15
  3742   001188  ECF4  F010         	call	_goto_lico
  3743   00118C  0E31               	movlw	49
  3744   00118E  EC7F  F012         	call	_draw_char
  3745   001192  0E20               	movlw	32
  3746   001194  EC7F  F012         	call	_draw_char
  3747   001198  0E31               	movlw	49
  3748   00119A  EC7F  F012         	call	_draw_char
  3749   00119E  0E20               	movlw	32
  3750   0011A0  EC7F  F012         	call	_draw_char
  3751   0011A4  0E31               	movlw	49
  3752   0011A6  EC7F  F012         	call	_draw_char
  3753                           
  3754                           ;T1.c: 29: TP_appui=0;
  3755   0011AA  0E00               	movlw	0
  3756   0011AC  0100               	movlb	0	; () banked
  3757   0011AE  6F66               	movwf	102,b
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;T1.c: 32: x1=160;
  3761   0011B0  0EA0               	movlw	160
  3762   0011B2  6F85               	movwf	133,b
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;T1.c: 33: x2=190;
  3766   0011B4  0EBE               	movlw	190
  3767   0011B6  6F87               	movwf	135,b
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;T1.c: 34: y1=100;
  3771   0011B8  0E64               	movlw	100
  3772   0011BA  6F86               	movwf	134,b
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;T1.c: 36: goto_lico(12, 19);
  3776   0011BC  0E13               	movlw	19
  3777   0011BE  6E09               	movwf	goto_lico@colonne^0,c
  3778   0011C0  0E0C               	movlw	12
  3779   0011C2  ECF4  F010         	call	_goto_lico
  3780                           
  3781                           ;T1.c: 37: draw_string("0----0-");
  3782   0011C6  0E8D               	movlw	low STR_1
  3783   0011C8  6E08               	movwf	draw_string@tableau^0,c
  3784   0011CA  0E10               	movlw	high STR_1
  3785   0011CC  6E09               	movwf	(draw_string@tableau+1)^0,c
  3786   0011CE  ECCF  F00F         	call	_draw_string	;wreg free
  3787                           
  3788                           ;T1.c: 38: goto_lico(11, 20);
  3789   0011D2  0E14               	movlw	20
  3790   0011D4  6E09               	movwf	goto_lico@colonne^0,c
  3791   0011D6  0E0B               	movlw	11
  3792   0011D8  ECF4  F010         	call	_goto_lico
  3793                           
  3794                           ;T1.c: 39: draw_string("|_o");
  3795   0011DC  0EE4               	movlw	low STR_2
  3796   0011DE  6E08               	movwf	draw_string@tableau^0,c
  3797   0011E0  0E10               	movlw	high STR_2
  3798   0011E2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3799   0011E4  ECCF  F00F         	call	_draw_string	;wreg free
  3800                           
  3801                           ;T1.c: 40: goto_lico(10, 19);
  3802   0011E8  0E13               	movlw	19
  3803   0011EA  6E09               	movwf	goto_lico@colonne^0,c
  3804   0011EC  0E0A               	movlw	10
  3805   0011EE  ECF4  F010         	call	_goto_lico
  3806                           
  3807                           ;T1.c: 41: draw_string("/^^^-");
  3808   0011F2  0EBF               	movlw	low STR_3
  3809   0011F4  6E08               	movwf	draw_string@tableau^0,c
  3810   0011F6  0E10               	movlw	high STR_3
  3811   0011F8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3812   0011FA  ECCF  F00F         	call	_draw_string	;wreg free
  3813                           
  3814                           ;T1.c: 42: draw_square(180,20,230,60);
  3815   0011FE  0E14               	movlw	20
  3816   001200  6E15               	movwf	draw_square@y1^0,c
  3817   001202  0EE6               	movlw	230
  3818   001204  6E16               	movwf	draw_square@x2^0,c
  3819   001206  0E3C               	movlw	60
  3820   001208  6E17               	movwf	draw_square@y2^0,c
  3821   00120A  0EB4               	movlw	180
  3822   00120C  EC9A  F011         	call	_draw_square
  3823                           
  3824                           ;T1.c: 43: draw_square(120,20,170,60);
  3825   001210  0E14               	movlw	20
  3826   001212  6E15               	movwf	draw_square@y1^0,c
  3827   001214  0EAA               	movlw	170
  3828   001216  6E16               	movwf	draw_square@x2^0,c
  3829   001218  0E3C               	movlw	60
  3830   00121A  6E17               	movwf	draw_square@y2^0,c
  3831   00121C  0E78               	movlw	120
  3832   00121E  EC9A  F011         	call	_draw_square
  3833                           
  3834                           ;T1.c: 44: draw_square(160,80,160,100);
  3835   001222  0E50               	movlw	80
  3836   001224  6E15               	movwf	draw_square@y1^0,c
  3837   001226  0EA0               	movlw	160
  3838   001228  6E16               	movwf	draw_square@x2^0,c
  3839   00122A  0E64               	movlw	100
  3840   00122C  6E17               	movwf	draw_square@y2^0,c
  3841   00122E  0EA0               	movlw	160
  3842   001230  EC9A  F011         	call	_draw_square
  3843                           
  3844                           ;T1.c: 45: draw_square(x1,y1,x2,y1);
  3845   001234  C086 F015          	movff	134,draw_square@y1
  3846   001238  C087 F016          	movff	135,draw_square@x2
  3847   00123C  C086 F017          	movff	134,draw_square@y2
  3848   001240  0100               	movlb	0	; () banked
  3849   001242  5185               	movf	133,w,b
  3850   001244  EC9A  F011         	call	_draw_square
  3851                           
  3852                           ;T1.c: 48: draw_string(2);
  3853   001248  0E02               	movlw	2
  3854   00124A  6E08               	movwf	draw_string@tableau^0,c
  3855   00124C  0E00               	movlw	0
  3856   00124E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3857   001250  ECCF  F00F         	call	_draw_string	;wreg free
  3858   001254                     i2l5096:
  3859                           
  3860                           ;T1.c: 51: {;T1.c: 53: goto_lico(0, 0);
  3861   001254  0E00               	movlw	0
  3862   001256  6E09               	movwf	goto_lico@colonne^0,c
  3863   001258  0E00               	movlw	0
  3864   00125A  ECF4  F010         	call	_goto_lico
  3865                           
  3866                           ;T1.c: 54: draw_string("Marche:");
  3867   00125E  0E95               	movlw	low STR_4
  3868   001260  6E08               	movwf	draw_string@tableau^0,c
  3869   001262  0E10               	movlw	high STR_4
  3870   001264  6E09               	movwf	(draw_string@tableau+1)^0,c
  3871   001266  ECCF  F00F         	call	_draw_string	;wreg free
  3872                           
  3873                           ;T1.c: 55: goto_lico(7, 0);
  3874   00126A  0E00               	movlw	0
  3875   00126C  6E09               	movwf	goto_lico@colonne^0,c
  3876   00126E  0E07               	movlw	7
  3877   001270  ECF4  F010         	call	_goto_lico
  3878                           
  3879                           ;T1.c: 56: if (PORTEbits.RE4 == 0)
  3880   001274  B884               	btfsc	132,4,c	;volatile
  3881   001276  D017               	goto	i2l5110
  3882                           
  3883                           ;T1.c: 57: {;T1.c: 58: draw_string("((!))");
  3884   001278  0EB9               	movlw	low STR_5
  3885   00127A  6E08               	movwf	draw_string@tableau^0,c
  3886   00127C  0E10               	movlw	high STR_5
  3887   00127E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3888   001280  ECCF  F00F         	call	_draw_string	;wreg free
  3889                           
  3890                           ;T1.c: 59: _delay((unsigned long)((5)*(48000000/4000.0)));
  3891   001284  0E4E               	movlw	78
  3892   001286  6E1B               	movwf	??_tache1^0,c
  3893   001288  0EEB               	movlw	235
  3894   00128A                     i2u323_47:
  3895   00128A  2EE8               	decfsz	wreg,f,c
  3896   00128C  D7FE               	bra	i2u323_47
  3897   00128E  2E1B               	decfsz	??_tache1^0,f,c
  3898   001290  D7FC               	bra	i2u323_47
  3899   001292  F000               	nop	
  3900                           
  3901                           ;T1.c: 60: vitesse = Diminution(vitesse);
  3902   001294  C073 F001          	movff	115,Diminution@vitesse
  3903   001298  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3904   00129A  ECA0  F013         	call	_Diminution	;wreg free
  3905   00129E  5001               	movf	?_Diminution^0,w,c
  3906   0012A0  0100               	movlb	0	; () banked
  3907   0012A2  6F73               	movwf	115,b
  3908                           
  3909                           ;T1.c: 61: }
  3910   0012A4  D006               	goto	i2l5112
  3911   0012A6                     i2l5110:
  3912                           
  3913                           ;T1.c: 62: else;T1.c: 63: {;T1.c: 64: draw_string("     ");
  3914   0012A6  0E2D               	movlw	low (STR_14+15)
  3915   0012A8  6E08               	movwf	draw_string@tableau^0,c
  3916   0012AA  0E10               	movlw	high (STR_14+15)
  3917   0012AC  6E09               	movwf	(draw_string@tableau+1)^0,c
  3918   0012AE  ECCF  F00F         	call	_draw_string	;wreg free
  3919   0012B2                     i2l5112:
  3920                           
  3921                           ;T1.c: 65: };T1.c: 67: goto_lico(1, 0);
  3922   0012B2  0E00               	movlw	0
  3923   0012B4  6E09               	movwf	goto_lico@colonne^0,c
  3924   0012B6  0E01               	movlw	1
  3925   0012B8  ECF4  F010         	call	_goto_lico
  3926                           
  3927                           ;T1.c: 68: draw_string("Siege:");
  3928   0012BC  0EA4               	movlw	low STR_7
  3929   0012BE  6E08               	movwf	draw_string@tableau^0,c
  3930   0012C0  0E10               	movlw	high STR_7
  3931   0012C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3932   0012C4  ECCF  F00F         	call	_draw_string	;wreg free
  3933                           
  3934                           ;T1.c: 69: if (PORTBbits.RB2 == 0)
  3935   0012C8  B481               	btfsc	129,2,c	;volatile
  3936   0012CA  D006               	goto	i2l5122
  3937                           
  3938                           ;T1.c: 70: {;T1.c: 71: {draw_char('1');}
  3939   0012CC  0E31               	movlw	49
  3940   0012CE  EC7F  F012         	call	_draw_char
  3941                           
  3942                           ;T1.c: 72: marche();
  3943   0012D2  EC8F  F010         	call	_marche	;wreg free
  3944                           
  3945                           ;T1.c: 73: }
  3946   0012D6  D016               	goto	i2l5128
  3947   0012D8                     i2l5122:
  3948                           
  3949                           ;T1.c: 74: else;T1.c: 75: {;T1.c: 76: {draw_char('0');}
  3950   0012D8  0E30               	movlw	48
  3951   0012DA  EC7F  F012         	call	_draw_char
  3952                           
  3953                           ;T1.c: 77: _delay((unsigned long)((50)*(48000000/4000.0)));
  3954   0012DE  0E04               	movlw	4
  3955   0012E0  6E1C               	movwf	(??_tache1+1)^0,c
  3956   0012E2  0E0C               	movlw	12
  3957   0012E4  6E1B               	movwf	??_tache1^0,c
  3958   0012E6  0E34               	movlw	52
  3959   0012E8                     i2u324_47:
  3960   0012E8  2EE8               	decfsz	wreg,f,c
  3961   0012EA  D7FE               	bra	i2u324_47
  3962   0012EC  2E1B               	decfsz	??_tache1^0,f,c
  3963   0012EE  D7FC               	bra	i2u324_47
  3964   0012F0  2E1C               	decfsz	(??_tache1+1)^0,f,c
  3965   0012F2  D7FA               	bra	i2u324_47
  3966                           
  3967                           ;T1.c: 78: vitesse = Diminution(vitesse);
  3968   0012F4  C073 F001          	movff	115,Diminution@vitesse
  3969   0012F8  6A02               	clrf	(Diminution@vitesse+1)^0,c
  3970   0012FA  ECA0  F013         	call	_Diminution	;wreg free
  3971   0012FE  5001               	movf	?_Diminution^0,w,c
  3972   001300  0100               	movlb	0	; () banked
  3973   001302  6F73               	movwf	115,b
  3974   001304                     i2l5128:
  3975                           
  3976                           ;T1.c: 79: };T1.c: 81: goto_lico(2, 0);
  3977   001304  0E00               	movlw	0
  3978   001306  6E09               	movwf	goto_lico@colonne^0,c
  3979   001308  0E02               	movlw	2
  3980   00130A  ECF4  F010         	call	_goto_lico
  3981                           
  3982                           ;T1.c: 82: draw_string("Temp. Eau:");
  3983   00130E  0E66               	movlw	low STR_8
  3984   001310  6E08               	movwf	draw_string@tableau^0,c
  3985   001312  0E10               	movlw	high STR_8
  3986   001314  6E09               	movwf	(draw_string@tableau+1)^0,c
  3987   001316  ECCF  F00F         	call	_draw_string	;wreg free
  3988                           
  3989                           ;T1.c: 83: draw_dec8(Conversion(lecture_8bit_analogique(2)));
  3990   00131A  0E02               	movlw	2
  3991   00131C  EC64  F012         	call	_lecture_8bit_analogique
  3992   001320  6E1B               	movwf	??_tache1^0,c
  3993   001322  501B               	movf	??_tache1^0,w,c
  3994   001324  6E0F               	movwf	Conversion@a^0,c
  3995   001326  6A10               	clrf	(Conversion@a+1)^0,c
  3996   001328  EC0B  F012         	call	_Conversion	;wreg free
  3997   00132C  500F               	movf	?_Conversion^0,w,c
  3998   00132E  EC3A  F00F         	call	_draw_dec8
  3999                           
  4000                           ;T1.c: 85: goto_lico(3, 0);
  4001   001332  0E00               	movlw	0
  4002   001334  6E09               	movwf	goto_lico@colonne^0,c
  4003   001336  0E03               	movlw	3
  4004   001338  ECF4  F010         	call	_goto_lico
  4005                           
  4006                           ;T1.c: 86: draw_string("Temp. Huile:");
  4007   00133C  0E41               	movlw	low STR_9
  4008   00133E  6E08               	movwf	draw_string@tableau^0,c
  4009   001340  0E10               	movlw	high STR_9
  4010   001342  6E09               	movwf	(draw_string@tableau+1)^0,c
  4011   001344  ECCF  F00F         	call	_draw_string	;wreg free
  4012                           
  4013                           ;T1.c: 87: draw_dec8(Conversion(lecture_8bit_analogique(3)));
  4014   001348  0E03               	movlw	3
  4015   00134A  EC64  F012         	call	_lecture_8bit_analogique
  4016   00134E  6E1B               	movwf	??_tache1^0,c
  4017   001350  501B               	movf	??_tache1^0,w,c
  4018   001352  6E0F               	movwf	Conversion@a^0,c
  4019   001354  6A10               	clrf	(Conversion@a+1)^0,c
  4020   001356  EC0B  F012         	call	_Conversion	;wreg free
  4021   00135A  500F               	movf	?_Conversion^0,w,c
  4022   00135C  EC3A  F00F         	call	_draw_dec8
  4023                           
  4024                           ;T1.c: 89: goto_lico(4, 0);
  4025   001360  0E00               	movlw	0
  4026   001362  6E09               	movwf	goto_lico@colonne^0,c
  4027   001364  0E04               	movlw	4
  4028   001366  ECF4  F010         	call	_goto_lico
  4029                           
  4030                           ;T1.c: 90: draw_string("Choc:");
  4031   00136A  0EC5               	movlw	low STR_10
  4032   00136C  6E08               	movwf	draw_string@tableau^0,c
  4033   00136E  0E10               	movlw	high STR_10
  4034   001370  6E09               	movwf	(draw_string@tableau+1)^0,c
  4035   001372  ECCF  F00F         	call	_draw_string	;wreg free
  4036                           
  4037                           ;T1.c: 91: if (PORTBbits.RB3 == 0)
  4038   001376  B681               	btfsc	129,3,c	;volatile
  4039   001378  D004               	goto	i2l5148
  4040                           
  4041                           ;T1.c: 92: {;T1.c: 93: draw_char('1');
  4042   00137A  0E31               	movlw	49
  4043   00137C  EC7F  F012         	call	_draw_char
  4044                           
  4045                           ;T1.c: 94: }
  4046   001380  D003               	goto	i2l5150
  4047   001382                     i2l5148:
  4048                           
  4049                           ;T1.c: 95: else;T1.c: 96: {;T1.c: 97: draw_char('0');
  4050   001382  0E30               	movlw	48
  4051   001384  EC7F  F012         	call	_draw_char
  4052   001388                     i2l5150:
  4053                           
  4054                           ;T1.c: 98: };T1.c: 100: if (Personne == 2)
  4055   001388  0E02               	movlw	2
  4056   00138A  0100               	movlb	0	; () banked
  4057   00138C  1982               	xorwf	130,w,b
  4058   00138E  A4D8               	btfss	status,2,c
  4059   001390  D006               	goto	i2l5154
  4060   001392                     i2u290_40:
  4061                           
  4062                           ; BSR set to: 0
  4063                           ;T1.c: 101: {;T1.c: 102: vitesseAdmin(Personne);
  4064   001392  C082 F001          	movff	130,vitesseAdmin@a
  4065   001396  6A02               	clrf	(vitesseAdmin@a+1)^0,c
  4066   001398  EC88  F00F         	call	_vitesseAdmin	;wreg free
  4067                           
  4068                           ;T1.c: 103: }
  4069   00139C  D003               	goto	i2l5158
  4070   00139E                     i2l5154:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;T1.c: 104: else if (Personne == 1)
  4074   00139E  0582               	decf	130,w,b
  4075   0013A0  B4D8               	btfsc	status,2,c
  4076   0013A2  D7F7               	goto	i2u290_40
  4077   0013A4                     i2l5158:
  4078                           
  4079                           ;T1.c: 110: };T1.c: 112: goto_lico(5, 0);
  4080   0013A4  0E00               	movlw	0
  4081   0013A6  6E09               	movwf	goto_lico@colonne^0,c
  4082   0013A8  0E05               	movlw	5
  4083   0013AA  ECF4  F010         	call	_goto_lico
  4084                           
  4085                           ;T1.c: 113: draw_string("Vitesse:");
  4086   0013AE  0E7B               	movlw	low STR_11
  4087   0013B0  6E08               	movwf	draw_string@tableau^0,c
  4088   0013B2  0E10               	movlw	high STR_11
  4089   0013B4  6E09               	movwf	(draw_string@tableau+1)^0,c
  4090   0013B6  ECCF  F00F         	call	_draw_string	;wreg free
  4091                           
  4092                           ;T1.c: 114: draw_dec8(vitesse);
  4093   0013BA  0100               	movlb	0	; () banked
  4094   0013BC  5173               	movf	115,w,b
  4095   0013BE  EC3A  F00F         	call	_draw_dec8
  4096                           
  4097                           ;T1.c: 116: goto_lico(6, 0);
  4098   0013C2  0E00               	movlw	0
  4099   0013C4  6E09               	movwf	goto_lico@colonne^0,c
  4100   0013C6  0E06               	movlw	6
  4101   0013C8  ECF4  F010         	call	_goto_lico
  4102                           
  4103                           ;T1.c: 117: draw_string("Batterie:");
  4104   0013CC  0E71               	movlw	low STR_12
  4105   0013CE  6E08               	movwf	draw_string@tableau^0,c
  4106   0013D0  0E10               	movlw	high STR_12
  4107   0013D2  6E09               	movwf	(draw_string@tableau+1)^0,c
  4108   0013D4  ECCF  F00F         	call	_draw_string	;wreg free
  4109                           
  4110                           ;T1.c: 118: if (PORTEbits.RE2 == 0 && batterie < 100)
  4111   0013D8  B484               	btfsc	132,2,c	;volatile
  4112   0013DA  D005               	goto	i2l5174
  4113   0013DC  0E64               	movlw	100
  4114   0013DE  0100               	movlb	0	; () banked
  4115   0013E0  6174               	cpfslt	116,b
  4116   0013E2  D001               	goto	i2l5174
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;T1.c: 119: {;T1.c: 120: batterie++;
  4120   0013E4  2B74               	incf	116,f,b
  4121   0013E6                     i2l5174:
  4122                           
  4123                           ;T1.c: 121: };T1.c: 122: if (PORTEbits.RE3 == 0 && batterie > 0)
  4124   0013E6  B684               	btfsc	132,3,c	;volatile
  4125   0013E8  D004               	goto	i2l5180
  4126   0013EA  0100               	movlb	0	; () banked
  4127   0013EC  5174               	movf	116,w,b
  4128   0013EE  A4D8               	btfss	status,2,c
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;T1.c: 123: {;T1.c: 124: batterie--;
  4132   0013F0  0774               	decf	116,f,b
  4133   0013F2                     i2l5180:
  4134                           
  4135                           ;T1.c: 125: };T1.c: 126: draw_dec8(batterie);
  4136   0013F2  0100               	movlb	0	; () banked
  4137   0013F4  5174               	movf	116,w,b
  4138   0013F6  EC3A  F00F         	call	_draw_dec8
  4139                           
  4140                           ;T1.c: 128: goto_lico(8, 0);
  4141   0013FA  0E00               	movlw	0
  4142   0013FC  6E09               	movwf	goto_lico@colonne^0,c
  4143   0013FE  0E08               	movlw	8
  4144   001400  ECF4  F010         	call	_goto_lico
  4145                           
  4146                           ;T1.c: 129: draw_string("Badge:");
  4147   001404  0E9D               	movlw	low STR_13
  4148   001406  6E08               	movwf	draw_string@tableau^0,c
  4149   001408  0E10               	movlw	high STR_13
  4150   00140A  6E09               	movwf	(draw_string@tableau+1)^0,c
  4151   00140C  ECCF  F00F         	call	_draw_string	;wreg free
  4152                           
  4153                           ;T1.c: 130: if (n_octet_badge == 0)
  4154   001410  0100               	movlb	0	; () banked
  4155   001412  517F               	movf	127,w,b
  4156   001414  A4D8               	btfss	status,2,c
  4157   001416  D007               	goto	i2l5190
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;T1.c: 131: {;T1.c: 132: draw_string(" AUCUN              ");
  4161   001418  0E1E               	movlw	low STR_14
  4162   00141A  6E08               	movwf	draw_string@tableau^0,c
  4163   00141C  0E10               	movlw	high STR_14
  4164   00141E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4165   001420  ECCF  F00F         	call	_draw_string	;wreg free
  4166                           
  4167                           ;T1.c: 133: }
  4168   001424  D01E               	goto	i2l483
  4169   001426                     i2l5190:
  4170                           
  4171                           ; BSR set to: 0
  4172                           ;T1.c: 134: else;T1.c: 135: {;T1.c: 142: if (Personne == 2)
  4173   001426  0E02               	movlw	2
  4174   001428  1982               	xorwf	130,w,b
  4175   00142A  A4D8               	btfss	status,2,c
  4176   00142C  D007               	goto	i2l5194
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;T1.c: 143: {;T1.c: 144: draw_string("Operator");
  4180   00142E  0E84               	movlw	low STR_15
  4181   001430  6E08               	movwf	draw_string@tableau^0,c
  4182   001432  0E10               	movlw	high STR_15
  4183   001434  6E09               	movwf	(draw_string@tableau+1)^0,c
  4184   001436  ECCF  F00F         	call	_draw_string	;wreg free
  4185                           
  4186                           ;T1.c: 145: }
  4187   00143A  D013               	goto	i2l483
  4188   00143C                     i2l5194:
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;T1.c: 146: else if (Personne == 1)
  4192   00143C  0582               	decf	130,w,b
  4193   00143E  A4D8               	btfss	status,2,c
  4194   001440  D007               	goto	i2l5198
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;T1.c: 147: {;T1.c: 148: draw_string(" ADMIN");
  4198   001442  0EB2               	movlw	low STR_16
  4199   001444  6E08               	movwf	draw_string@tableau^0,c
  4200   001446  0E10               	movlw	high STR_16
  4201   001448  6E09               	movwf	(draw_string@tableau+1)^0,c
  4202   00144A  ECCF  F00F         	call	_draw_string	;wreg free
  4203                           
  4204                           ;T1.c: 149: }
  4205   00144E  D009               	goto	i2l483
  4206   001450                     i2l5198:
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;T1.c: 150: else if (Personne == 0)
  4210   001450  5182               	movf	130,w,b
  4211   001452  A4D8               	btfss	status,2,c
  4212   001454  D006               	goto	i2l483
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;T1.c: 151: {;T1.c: 152: draw_string("AUCUN");
  4216   001456  0ECB               	movlw	low STR_17
  4217   001458  6E08               	movwf	draw_string@tableau^0,c
  4218   00145A  0E10               	movlw	high STR_17
  4219   00145C  6E09               	movwf	(draw_string@tableau+1)^0,c
  4220   00145E  ECCF  F00F         	call	_draw_string	;wreg free
  4221   001462                     i2l483:
  4222                           
  4223                           ;T1.c: 153: };T1.c: 154: };T1.c: 159: goto_lico(9, 0);
  4224                           
  4225                           ; BSR set to: 0
  4226   001462  0E00               	movlw	0
  4227   001464  6E09               	movwf	goto_lico@colonne^0,c
  4228   001466  0E09               	movlw	9
  4229   001468  ECF4  F010         	call	_goto_lico
  4230                           
  4231                           ;T1.c: 160: draw_string("X-Joystick:");
  4232   00146C  0E4E               	movlw	low STR_18
  4233   00146E  6E08               	movwf	draw_string@tableau^0,c
  4234   001470  0E10               	movlw	high STR_18
  4235   001472  6E09               	movwf	(draw_string@tableau+1)^0,c
  4236   001474  ECCF  F00F         	call	_draw_string	;wreg free
  4237                           
  4238                           ;T1.c: 161: draw_hex8(lecture_8bit_analogique(10));
  4239   001478  0E0A               	movlw	10
  4240   00147A  EC64  F012         	call	_lecture_8bit_analogique
  4241   00147E  ECC6  F010         	call	_draw_hex8
  4242                           
  4243                           ;T1.c: 163: goto_lico(10, 0);
  4244   001482  0E00               	movlw	0
  4245   001484  6E09               	movwf	goto_lico@colonne^0,c
  4246   001486  0E0A               	movlw	10
  4247   001488  ECF4  F010         	call	_goto_lico
  4248                           
  4249                           ;T1.c: 164: draw_string("Y-Joystick:");
  4250   00148C  0E5A               	movlw	low STR_19
  4251   00148E  6E08               	movwf	draw_string@tableau^0,c
  4252   001490  0E10               	movlw	high STR_19
  4253   001492  6E09               	movwf	(draw_string@tableau+1)^0,c
  4254   001494  ECCF  F00F         	call	_draw_string	;wreg free
  4255                           
  4256                           ;T1.c: 165: draw_hex8(lecture_8bit_analogique(11));
  4257   001498  0E0B               	movlw	11
  4258   00149A  EC64  F012         	call	_lecture_8bit_analogique
  4259   00149E  ECC6  F010         	call	_draw_hex8
  4260                           
  4261                           ;T1.c: 167: goto_lico(5, 22);
  4262   0014A2  0E16               	movlw	22
  4263   0014A4  6E09               	movwf	goto_lico@colonne^0,c
  4264   0014A6  0E05               	movlw	5
  4265   0014A8  ECF4  F010         	call	_goto_lico
  4266                           
  4267                           ;T1.c: 168: draw_string("VIDE");
  4268   0014AC  0ED6               	movlw	low STR_20
  4269   0014AE  6E08               	movwf	draw_string@tableau^0,c
  4270   0014B0  0E10               	movlw	high STR_20
  4271   0014B2  6E09               	movwf	(draw_string@tableau+1)^0,c
  4272   0014B4  ECCF  F00F         	call	_draw_string	;wreg free
  4273                           
  4274                           ;T1.c: 169: goto_lico(5, 31);
  4275   0014B8  0E1F               	movlw	31
  4276   0014BA  6E09               	movwf	goto_lico@colonne^0,c
  4277   0014BC  0E05               	movlw	5
  4278   0014BE  ECF4  F010         	call	_goto_lico
  4279                           
  4280                           ;T1.c: 170: draw_string("CHARGE");
  4281   0014C2  0EAB               	movlw	low STR_21
  4282   0014C4  6E08               	movwf	draw_string@tableau^0,c
  4283   0014C6  0E10               	movlw	high STR_21
  4284   0014C8  6E09               	movwf	(draw_string@tableau+1)^0,c
  4285   0014CA  ECCF  F00F         	call	_draw_string	;wreg free
  4286                           
  4287                           ;T1.c: 173: if(lecture_8bit_analogique(11)>180){
  4288   0014CE  0E0B               	movlw	11
  4289   0014D0  EC64  F012         	call	_lecture_8bit_analogique
  4290   0014D4  6E1B               	movwf	??_tache1^0,c
  4291   0014D6  0EB4               	movlw	180
  4292   0014D8  641B               	cpfsgt	??_tache1^0,c
  4293   0014DA  D025               	goto	i2l5236
  4294                           
  4295                           ;T1.c: 178: if(y1>80){
  4296   0014DC  0E50               	movlw	80
  4297   0014DE  0100               	movlb	0	; () banked
  4298   0014E0  6586               	cpfsgt	134,b
  4299   0014E2  D016               	goto	i2l5232
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;T1.c: 179: clear_square(x1,y1,x2+1,y1);
  4303   0014E4  C086 F015          	movff	134,clear_square@y1
  4304   0014E8  2987               	incf	135,w,b
  4305   0014EA  6E16               	movwf	clear_square@x2^0,c
  4306   0014EC  C086 F017          	movff	134,clear_square@y2
  4307   0014F0  5185               	movf	133,w,b
  4308   0014F2  ECC0  F011         	call	_clear_square
  4309                           
  4310                           ;T1.c: 180: y1=y1--;
  4311   0014F6  C086 F086          	movff	134,134
  4312   0014FA  0100               	movlb	0	; () banked
  4313   0014FC  0786               	decf	134,f,b
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;T1.c: 182: draw_square(x1,y1,x2,y1);
  4317   0014FE  C086 F015          	movff	134,draw_square@y1
  4318   001502  C087 F016          	movff	135,draw_square@x2
  4319   001506  C086 F017          	movff	134,draw_square@y2
  4320   00150A  5185               	movf	133,w,b
  4321   00150C  EC9A  F011         	call	_draw_square
  4322   001510                     i2l5232:
  4323                           
  4324                           ;T1.c: 183: };T1.c: 185: goto_lico(9, 31);
  4325   001510  0E1F               	movlw	31
  4326   001512  6E09               	movwf	goto_lico@colonne^0,c
  4327   001514  0E09               	movlw	9
  4328   001516  ECF4  F010         	call	_goto_lico
  4329                           
  4330                           ;T1.c: 186: draw_string("up  ");
  4331   00151A  0ED1               	movlw	low STR_22
  4332   00151C  6E08               	movwf	draw_string@tableau^0,c
  4333   00151E  0E10               	movlw	high STR_22
  4334   001520  6E09               	movwf	(draw_string@tableau+1)^0,c
  4335   001522  ECCF  F00F         	call	_draw_string	;wreg free
  4336   001526                     i2l5236:
  4337                           
  4338                           ;T1.c: 188: };T1.c: 190: if(lecture_8bit_analogique(11)<100){
  4339   001526  0E0B               	movlw	11
  4340   001528  EC64  F012         	call	_lecture_8bit_analogique
  4341   00152C  6E1B               	movwf	??_tache1^0,c
  4342   00152E  0E64               	movlw	100
  4343   001530  601B               	cpfslt	??_tache1^0,c
  4344   001532  D025               	goto	i2l5252
  4345                           
  4346                           ;T1.c: 195: if(y1<100){
  4347   001534  0E64               	movlw	100
  4348   001536  0100               	movlb	0	; () banked
  4349   001538  6186               	cpfslt	134,b
  4350   00153A  D016               	goto	i2l5248
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;T1.c: 196: clear_square(x1,y1,x2+1,y1);
  4354   00153C  C086 F015          	movff	134,clear_square@y1
  4355   001540  2987               	incf	135,w,b
  4356   001542  6E16               	movwf	clear_square@x2^0,c
  4357   001544  C086 F017          	movff	134,clear_square@y2
  4358   001548  5185               	movf	133,w,b
  4359   00154A  ECC0  F011         	call	_clear_square
  4360                           
  4361                           ;T1.c: 197: y1=y1++;
  4362   00154E  C086 F086          	movff	134,134
  4363   001552  0100               	movlb	0	; () banked
  4364   001554  2B86               	incf	134,f,b
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;T1.c: 198: draw_square(x1,y1,x2,y1);
  4368   001556  C086 F015          	movff	134,draw_square@y1
  4369   00155A  C087 F016          	movff	135,draw_square@x2
  4370   00155E  C086 F017          	movff	134,draw_square@y2
  4371   001562  5185               	movf	133,w,b
  4372   001564  EC9A  F011         	call	_draw_square
  4373   001568                     i2l5248:
  4374                           
  4375                           ;T1.c: 199: };T1.c: 200: goto_lico(9, 31);
  4376   001568  0E1F               	movlw	31
  4377   00156A  6E09               	movwf	goto_lico@colonne^0,c
  4378   00156C  0E09               	movlw	9
  4379   00156E  ECF4  F010         	call	_goto_lico
  4380                           
  4381                           ;T1.c: 201: draw_string("down");
  4382   001572  0EDB               	movlw	low STR_23
  4383   001574  6E08               	movwf	draw_string@tableau^0,c
  4384   001576  0E10               	movlw	high STR_23
  4385   001578  6E09               	movwf	(draw_string@tableau+1)^0,c
  4386   00157A  ECCF  F00F         	call	_draw_string	;wreg free
  4387   00157E                     i2l5252:
  4388                           
  4389                           ;T1.c: 203: };T1.c: 205: if (TP_appui == 1)
  4390   00157E  0100               	movlb	0	; () banked
  4391   001580  0566               	decf	102,w,b
  4392   001582  A4D8               	btfss	status,2,c
  4393   001584  D020               	goto	i2l493
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;T1.c: 206: {;T1.c: 207: goto_lico(0, 20);
  4397   001586  0E14               	movlw	20
  4398   001588  6E09               	movwf	goto_lico@colonne^0,c
  4399   00158A  0E00               	movlw	0
  4400   00158C  ECF4  F010         	call	_goto_lico
  4401                           
  4402                           ;T1.c: 208: draw_string("x=");
  4403   001590  0EF1               	movlw	low STR_24
  4404   001592  6E08               	movwf	draw_string@tableau^0,c
  4405   001594  0E10               	movlw	high STR_24
  4406   001596  6E09               	movwf	(draw_string@tableau+1)^0,c
  4407   001598  ECCF  F00F         	call	_draw_string	;wreg free
  4408                           
  4409                           ;T1.c: 209: draw_hex8(TP_x);
  4410   00159C  0100               	movlb	0	; () banked
  4411   00159E  5167               	movf	103,w,b
  4412   0015A0  ECC6  F010         	call	_draw_hex8
  4413                           
  4414                           ;T1.c: 210: draw_string(" y=");
  4415   0015A4  0EE0               	movlw	low STR_25
  4416   0015A6  6E08               	movwf	draw_string@tableau^0,c
  4417   0015A8  0E10               	movlw	high STR_25
  4418   0015AA  6E09               	movwf	(draw_string@tableau+1)^0,c
  4419   0015AC  ECCF  F00F         	call	_draw_string	;wreg free
  4420                           
  4421                           ;T1.c: 211: draw_hex8(TP_y);
  4422   0015B0  0100               	movlb	0	; () banked
  4423   0015B2  5168               	movf	104,w,b
  4424   0015B4  ECC6  F010         	call	_draw_hex8
  4425                           
  4426                           ;T1.c: 212: plot1(TP_x, TP_y);
  4427   0015B8  C068 F00F          	movff	104,plot1@y
  4428   0015BC  0100               	movlb	0	; () banked
  4429   0015BE  5167               	movf	103,w,b
  4430   0015C0  EC3B  F00E         	call	_plot1
  4431                           
  4432                           ;T1.c: 213: }
  4433   0015C4  D001               	goto	i2l5264
  4434   0015C6                     i2l493:
  4435                           
  4436                           ; BSR set to: 0
  4437                           ;T1.c: 214: else;T1.c: 215: {;T1.c: 216: __nop();
  4438   0015C6  F000               	nop	
  4439   0015C8                     i2l5264:
  4440                           
  4441                           ;T1.c: 217: };T1.c: 218: if (TEST == 1)
  4442   0015C8  0100               	movlb	0	; () banked
  4443   0015CA  0581               	decf	129,w,b
  4444   0015CC  B4D8               	btfsc	status,2,c
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;T1.c: 219: {;T1.c: 220: charger();
  4448   0015CE  EC8C  F013         	call	_charger	;wreg free
  4449                           
  4450                           ;T1.c: 222: };T1.c: 223: if (TEST == 0)
  4451   0015D2  0100               	movlb	0	; () banked
  4452   0015D4  5181               	movf	129,w,b
  4453   0015D6  A4D8               	btfss	status,2,c
  4454   0015D8  D63D               	goto	i2l5096
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;T1.c: 224: {;T1.c: 225: clear_line(14);
  4458   0015DA  0E0E               	movlw	14
  4459   0015DC  EC24  F013         	call	_clear_line
  4460                           
  4461                           ;T1.c: 226: vide();
  4462   0015E0  EC80  F013         	call	_vide	;wreg free
  4463                           
  4464                           ;T1.c: 227: TEST = 3;
  4465   0015E4  0E03               	movlw	3
  4466   0015E6  0100               	movlb	0	; () banked
  4467   0015E8  6F81               	movwf	129,b
  4468   0015EA  D634               	goto	i2l5096
  4469   0015EC                     __end_of_tache1:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _vitesseAdmin *****************
  4473 ;; Defined at:
  4474 ;;		line 445 in file "afficheur.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  a               2    0[COMRAM] unsigned int 
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;  c               2    7[COMRAM] int 
  4479 ;;  b               2    5[COMRAM] int 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;Total ram usage:        9 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_tache1
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text15
  4503   001F10                     __ptext15:
  4504                           	callstack 0
  4505   001F10                     _vitesseAdmin:
  4506                           	callstack 27
  4507                           
  4508                           ;afficheur.c: 446: int b ;;afficheur.c: 447: int c;;afficheur.c: 448: if (a==1){
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;incstack = 0
  4512   001F10  0401               	decf	vitesseAdmin@a^0,w,c
  4513   001F12  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4514   001F14  A4D8               	btfss	status,2,c
  4515   001F16  D008               	goto	i2l4708
  4516                           
  4517                           ;afficheur.c: 449: b =50;
  4518   001F18  0E00               	movlw	0
  4519   001F1A  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4520   001F1C  0E32               	movlw	50
  4521   001F1E  6E06               	movwf	vitesseAdmin@b^0,c
  4522                           
  4523                           ;afficheur.c: 450: c = 80;
  4524   001F20  0E00               	movlw	0
  4525   001F22  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4526   001F24  0E50               	movlw	80
  4527   001F26  6E08               	movwf	vitesseAdmin@c^0,c
  4528   001F28                     i2l4708:
  4529                           
  4530                           ;afficheur.c: 451: };afficheur.c: 452: if(a==2){
  4531   001F28  0E02               	movlw	2
  4532   001F2A  1801               	xorwf	vitesseAdmin@a^0,w,c
  4533   001F2C  1002               	iorwf	(vitesseAdmin@a+1)^0,w,c
  4534   001F2E  A4D8               	btfss	status,2,c
  4535   001F30  D008               	goto	i2l4712
  4536                           
  4537                           ;afficheur.c: 453: b =15;
  4538   001F32  0E00               	movlw	0
  4539   001F34  6E07               	movwf	(vitesseAdmin@b+1)^0,c
  4540   001F36  0E0F               	movlw	15
  4541   001F38  6E06               	movwf	vitesseAdmin@b^0,c
  4542                           
  4543                           ;afficheur.c: 454: c = 25;
  4544   001F3A  0E00               	movlw	0
  4545   001F3C  6E09               	movwf	(vitesseAdmin@c+1)^0,c
  4546   001F3E  0E19               	movlw	25
  4547   001F40  6E08               	movwf	vitesseAdmin@c^0,c
  4548   001F42                     i2l4712:
  4549                           
  4550                           ;afficheur.c: 455: };afficheur.c: 456: if(PORTBbits.RB2==0){
  4551   001F42  B481               	btfsc	129,2,c	;volatile
  4552   001F44  0012               	return	
  4553                           
  4554                           ;afficheur.c: 457: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4555   001F46  A081               	btfss	129,0,c	;volatile
  4556   001F48  D002               	goto	i2u259_40
  4557   001F4A  B281               	btfsc	129,1,c	;volatile
  4558   001F4C  0012               	return	
  4559   001F4E                     i2u259_40:
  4560                           
  4561                           ;afficheur.c: 460: if (PORTEbits.RE4==1){
  4562   001F4E  A884               	btfss	132,4,c	;volatile
  4563   001F50  0012               	return	
  4564                           
  4565                           ;afficheur.c: 461: if(TEST==1){
  4566   001F52  0100               	movlb	0	; () banked
  4567   001F54  0581               	decf	129,w,b
  4568   001F56  A4D8               	btfss	status,2,c
  4569   001F58  D016               	goto	i2l1531
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;afficheur.c: 463: if (PORTEbits.RE0==0 && vitesse < b)
  4573   001F5A  B084               	btfsc	132,0,c	;volatile
  4574   001F5C  D00D               	goto	i2l4726
  4575                           
  4576                           ; BSR set to: 0
  4577   001F5E  5173               	movf	115,w,b
  4578   001F60  6E03               	movwf	??_vitesseAdmin^0,c
  4579   001F62  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4580   001F64  5006               	movf	vitesseAdmin@b^0,w,c
  4581   001F66  5C03               	subwf	??_vitesseAdmin^0,w,c
  4582   001F68  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4583   001F6A  0A80               	xorlw	128
  4584   001F6C  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4585   001F6E  5007               	movf	(vitesseAdmin@b+1)^0,w,c
  4586   001F70  0A80               	xorlw	128
  4587   001F72  5805               	subwfb	(??_vitesseAdmin+2)^0,w,c
  4588   001F74  A0D8               	btfss	status,0,c
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;afficheur.c: 464: vitesse++;
  4592   001F76  2B73               	incf	115,f,b
  4593   001F78                     i2l4726:
  4594                           
  4595                           ; BSR set to: 0
  4596                           ;afficheur.c: 465: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4597   001F78  B284               	btfsc	132,1,c	;volatile
  4598   001F7A  0012               	return	
  4599                           
  4600                           ; BSR set to: 0
  4601   001F7C  5173               	movf	115,w,b
  4602   001F7E  B4D8               	btfsc	status,2,c
  4603   001F80  0012               	return	
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;afficheur.c: 466: vitesse--;
  4607   001F82  0773               	decf	115,f,b
  4608   001F84  0012               	return	
  4609   001F86                     i2l1531:
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;afficheur.c: 469: if (PORTEbits.RE0==0 && vitesse < c)
  4613   001F86  B084               	btfsc	132,0,c	;volatile
  4614   001F88  D7F7               	goto	i2l4726
  4615                           
  4616                           ; BSR set to: 0
  4617   001F8A  5173               	movf	115,w,b
  4618   001F8C  6E03               	movwf	??_vitesseAdmin^0,c
  4619   001F8E  6A04               	clrf	(??_vitesseAdmin+1)^0,c
  4620   001F90  5008               	movf	vitesseAdmin@c^0,w,c
  4621   001F92  5C03               	subwf	??_vitesseAdmin^0,w,c
  4622   001F94  5004               	movf	(??_vitesseAdmin+1)^0,w,c
  4623   001F96  0A80               	xorlw	128
  4624   001F98  6E05               	movwf	(??_vitesseAdmin+2)^0,c
  4625   001F9A  5009               	movf	(vitesseAdmin@c+1)^0,w,c
  4626   001F9C  D7E9               	goto	L8
  4627   001F9E                     __end_of_vitesseAdmin:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _vide *****************
  4631 ;; Defined at:
  4632 ;;		line 438 in file "afficheur.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used: 1
  4652 ;; Hardware stack levels required when called: 4
  4653 ;; This function calls:
  4654 ;;		_draw_string
  4655 ;;		_goto_lico
  4656 ;; This function is called by:
  4657 ;;		_tache1
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text16
  4662   002700                     __ptext16:
  4663                           	callstack 0
  4664   002700                     _vide:
  4665                           	callstack 23
  4666                           
  4667                           ;afficheur.c: 440: goto_lico(14,0);
  4668                           
  4669                           ;incstack = 0
  4670   002700  0E00               	movlw	0
  4671   002702  6E09               	movwf	goto_lico@colonne^0,c
  4672   002704  0E0E               	movlw	14
  4673   002706  ECF4  F010         	call	_goto_lico
  4674                           
  4675                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4676   00270A  0E33               	movlw	low STR_27
  4677   00270C  6E08               	movwf	draw_string@tableau^0,c
  4678   00270E  0E10               	movlw	high STR_27
  4679   002710  6E09               	movwf	(draw_string@tableau+1)^0,c
  4680   002712  ECCF  F00F         	call	_draw_string	;wreg free
  4681   002716  0012               	return		;funcret
  4682   002718                     __end_of_vide:
  4683                           	callstack 0
  4684                           
  4685 ;; *************** function _marche *****************
  4686 ;; Defined at:
  4687 ;;		line 500 in file "afficheur.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;Total ram usage:        2 bytes
  4706 ;; Hardware stack levels used: 1
  4707 ;; Hardware stack levels required when called: 4
  4708 ;; This function calls:
  4709 ;;		_Diminution
  4710 ;;		_draw_string
  4711 ;;		_goto_lico
  4712 ;; This function is called by:
  4713 ;;		_tache1
  4714 ;; This function uses a non-reentrant model
  4715 ;;
  4716                           
  4717                           	psect	text17
  4718   00211E                     __ptext17:
  4719                           	callstack 0
  4720   00211E                     _marche:
  4721                           	callstack 23
  4722                           
  4723                           ;afficheur.c: 501: goto_lico(0,0);
  4724                           
  4725                           ;incstack = 0
  4726   00211E  0E00               	movlw	0
  4727   002120  6E09               	movwf	goto_lico@colonne^0,c
  4728   002122  0E00               	movlw	0
  4729   002124  ECF4  F010         	call	_goto_lico
  4730                           
  4731                           ;afficheur.c: 502: draw_string("Marche:");
  4732   002128  0E95               	movlw	low STR_4
  4733   00212A  6E08               	movwf	draw_string@tableau^0,c
  4734   00212C  0E10               	movlw	high STR_4
  4735   00212E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4736   002130  ECCF  F00F         	call	_draw_string	;wreg free
  4737                           
  4738                           ;afficheur.c: 503: if (PORTBbits.RB0==0)
  4739   002134  B081               	btfsc	129,0,c	;volatile
  4740   002136  D007               	goto	i2l1548
  4741                           
  4742                           ;afficheur.c: 504: draw_string("AV");
  4743   002138  0EEE               	movlw	low STR_29
  4744   00213A  6E08               	movwf	draw_string@tableau^0,c
  4745   00213C  0E10               	movlw	high STR_29
  4746   00213E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4747   002140  ECCF  F00F         	call	_draw_string	;wreg free
  4748   002144  0012               	return	
  4749   002146                     i2l1548:
  4750                           
  4751                           ;afficheur.c: 505: else;afficheur.c: 506: if (PORTBbits.RB1==0)
  4752   002146  B281               	btfsc	129,1,c	;volatile
  4753   002148  D007               	goto	i2l4668
  4754                           
  4755                           ;afficheur.c: 507: draw_string("AR");
  4756   00214A  0EEB               	movlw	low STR_30
  4757   00214C  6E08               	movwf	draw_string@tableau^0,c
  4758   00214E  0E10               	movlw	high STR_30
  4759   002150  6E09               	movwf	(draw_string@tableau+1)^0,c
  4760   002152  ECCF  F00F         	call	_draw_string	;wreg free
  4761   002156  0012               	return	
  4762   002158                     i2l4668:
  4763                           
  4764                           ;afficheur.c: 508: else{;afficheur.c: 509: draw_string("N ");
  4765   002158  0EE8               	movlw	low STR_31
  4766   00215A  6E08               	movwf	draw_string@tableau^0,c
  4767   00215C  0E10               	movlw	high STR_31
  4768   00215E  6E09               	movwf	(draw_string@tableau+1)^0,c
  4769   002160  ECCF  F00F         	call	_draw_string	;wreg free
  4770                           
  4771                           ;afficheur.c: 511: _delay((unsigned long)((50)*(48000000/4000.0)));
  4772   002164  0E04               	movlw	4
  4773   002166  6E10               	movwf	(??_marche+1)^0,c
  4774   002168  0E0C               	movlw	12
  4775   00216A  6E0F               	movwf	??_marche^0,c
  4776   00216C  0E34               	movlw	52
  4777   00216E                     i2u325_47:
  4778   00216E  2EE8               	decfsz	wreg,f,c
  4779   002170  D7FE               	bra	i2u325_47
  4780   002172  2E0F               	decfsz	??_marche^0,f,c
  4781   002174  D7FC               	bra	i2u325_47
  4782   002176  2E10               	decfsz	(??_marche+1)^0,f,c
  4783   002178  D7FA               	bra	i2u325_47
  4784                           
  4785                           ;afficheur.c: 512: vitesse=Diminution(vitesse);
  4786   00217A  C073 F001          	movff	115,Diminution@vitesse
  4787   00217E  6A02               	clrf	(Diminution@vitesse+1)^0,c
  4788   002180  ECA0  F013         	call	_Diminution	;wreg free
  4789   002184  5001               	movf	?_Diminution^0,w,c
  4790   002186  0100               	movlb	0	; () banked
  4791   002188  6F73               	movwf	115,b
  4792   00218A  0012               	return		;funcret
  4793   00218C                     __end_of_marche:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _Diminution *****************
  4797 ;; Defined at:
  4798 ;;		line 488 in file "afficheur.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  vitesse         2    0[COMRAM] unsigned int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    0[COMRAM] int 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_tache1
  4822 ;;		_marche
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text18
  4827   002740                     __ptext18:
  4828                           	callstack 0
  4829   002740                     _Diminution:
  4830                           	callstack 26
  4831                           
  4832                           ;afficheur.c: 489: if(vitesse>0){
  4833                           
  4834                           ;incstack = 0
  4835   002740  5001               	movf	Diminution@vitesse^0,w,c
  4836   002742  1002               	iorwf	(Diminution@vitesse+1)^0,w,c
  4837   002744  B4D8               	btfsc	status,2,c
  4838   002746  0012               	return	
  4839                           
  4840                           ;afficheur.c: 490: vitesse--;
  4841   002748  0601               	decf	Diminution@vitesse^0,f,c
  4842   00274A  A0D8               	btfss	status,0,c
  4843   00274C  0602               	decf	(Diminution@vitesse+1)^0,f,c
  4844   00274E  0012               	return		;funcret
  4845   002750                     __end_of_Diminution:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _lecture_8bit_analogique *****************
  4849 ;; Defined at:
  4850 ;;		line 60 in file "main.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  channel         1    wreg     unsigned char 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  channel         1    1[COMRAM] unsigned char 
  4855 ;;  ret             1    0[COMRAM] unsigned char 
  4856 ;; Return value:  Size  Location     Type
  4857 ;;                  1    wreg      unsigned char 
  4858 ;; Registers used:
  4859 ;;		wreg, status,2, status,0
  4860 ;; Tracked objects:
  4861 ;;		On entry : 0/0
  4862 ;;		On exit  : 0/0
  4863 ;;		Unchanged: 0/0
  4864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;Total ram usage:        2 bytes
  4870 ;; Hardware stack levels used: 1
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_tache1
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text19
  4879   0024C8                     __ptext19:
  4880                           	callstack 0
  4881   0024C8                     _lecture_8bit_analogique:
  4882                           	callstack 27
  4883                           
  4884                           ;incstack = 0
  4885                           ;lecture_8bit_analogique@channel stored from wreg
  4886   0024C8  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4887                           
  4888                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4889   0024CA  0E00               	movlw	0
  4890   0024CC  6EC1               	movwf	193,c	;volatile
  4891                           
  4892                           ;main.c: 66: ADCON2=0x16;
  4893   0024CE  0E16               	movlw	22
  4894   0024D0  6EC0               	movwf	192,c	;volatile
  4895                           
  4896                           ;main.c: 67: channel=channel&0x1F;
  4897   0024D2  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4898   0024D4  0B1F               	andlw	31
  4899   0024D6  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4900                           
  4901                           ;main.c: 68: channel=channel<<2;
  4902   0024D8  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4903   0024DA  46E8               	rlncf	wreg,f,c
  4904   0024DC  0BFC               	andlw	252
  4905   0024DE  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4906                           
  4907                           ;main.c: 69: ADCON0=channel|0x01;
  4908   0024E0  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4909   0024E2  0901               	iorlw	1
  4910   0024E4  6EC2               	movwf	194,c	;volatile
  4911                           
  4912                           ;main.c: 71: ADCON0bits.GO=1;
  4913   0024E6  82C2               	bsf	194,1,c	;volatile
  4914   0024E8                     i2l152:
  4915   0024E8  B2C2               	btfsc	194,1,c	;volatile
  4916   0024EA  D7FE               	goto	i2l152
  4917                           
  4918                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4919   0024EC  A0C3               	btfss	195,0,c	;volatile
  4920   0024EE  D003               	goto	i2l155
  4921                           
  4922                           ;main.c: 76: ret=0;
  4923   0024F0  0E00               	movlw	0
  4924   0024F2  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4925   0024F4  D002               	goto	i2l2964
  4926   0024F6                     i2l155:
  4927                           
  4928                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4929   0024F6  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4930   0024FA                     i2l2964:
  4931                           
  4932                           ;main.c: 82: return ret;
  4933   0024FA  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4934   0024FC  0012               	return		;funcret
  4935   0024FE                     __end_of_lecture_8bit_analogique:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function _initialisation_afficheur *****************
  4939 ;; Defined at:
  4940 ;;		line 164 in file "afficheur.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;		None
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  error_count     1    8[COMRAM] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;Total ram usage:        1 bytes
  4959 ;; Hardware stack levels used: 1
  4960 ;; Hardware stack levels required when called: 3
  4961 ;; This function calls:
  4962 ;;		_check_status_ok
  4963 ;;		_command
  4964 ;;		_d1command
  4965 ;;		_d2command
  4966 ;;		_delai_us_char
  4967 ;; This function is called by:
  4968 ;;		_tache1
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           	psect	text20
  4973   001BAA                     __ptext20:
  4974                           	callstack 0
  4975   001BAA                     _initialisation_afficheur:
  4976                           	callstack 24
  4977                           
  4978                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4979                           
  4980                           ;incstack = 0
  4981   001BAA  0E00               	movlw	0
  4982   001BAC  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4983                           
  4984                           ;afficheur.c: 172: LATH=0;
  4985   001BAE  0E00               	movlw	0
  4986   001BB0  6E90               	movwf	144,c	;volatile
  4987                           
  4988                           ;afficheur.c: 173: LATJ=0x1F;
  4989   001BB2  0E1F               	movlw	31
  4990   001BB4  6E91               	movwf	145,c	;volatile
  4991                           
  4992                           ;afficheur.c: 176: TRISH=0;
  4993   001BB6  0E00               	movlw	0
  4994   001BB8  6E99               	movwf	153,c	;volatile
  4995                           
  4996                           ;afficheur.c: 177: TRISJ=0;
  4997   001BBA  0E00               	movlw	0
  4998   001BBC  6E9A               	movwf	154,c	;volatile
  4999                           
  5000                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  5001   001BBE  9A91               	bcf	145,5,c	;volatile
  5002                           
  5003                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  5004   001BC0  8C91               	bsf	145,6,c	;volatile
  5005                           
  5006                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  5007   001BC2  9891               	bcf	145,4,c	;volatile
  5008                           
  5009                           ;afficheur.c: 185: delai_us_char(4);
  5010   001BC4  0E04               	movlw	4
  5011   001BC6  EC13  F013         	call	_delai_us_char
  5012                           
  5013                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  5014   001BCA  8891               	bsf	145,4,c	;volatile
  5015                           
  5016                           ;afficheur.c: 190: delai_us_char(12);
  5017   001BCC  0E0C               	movlw	12
  5018   001BCE  EC13  F013         	call	_delai_us_char
  5019                           
  5020                           ;afficheur.c: 191: while(check_status_ok()==00)
  5021   001BD2  D00C               	goto	i2l4612
  5022   001BD4                     i2l4602:
  5023                           
  5024                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  5025   001BD4  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  5026                           
  5027                           ;afficheur.c: 194: delai_us_char(12);
  5028   001BD6  0E0C               	movlw	12
  5029   001BD8  EC13  F013         	call	_delai_us_char
  5030                           
  5031                           ;afficheur.c: 195: if (error_count>200)
  5032   001BDC  0EC8               	movlw	200
  5033   001BDE  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  5034   001BE0  D005               	goto	i2l4612
  5035                           
  5036                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  5037   001BE2  828B               	bsf	139,1,c	;volatile
  5038   001BE4  808F               	bsf	143,0,c	;volatile
  5039   001BE6  948B               	bcf	139,2,c	;volatile
  5040                           
  5041                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  5042   001BE8  9EF2               	bcf	242,7,c	;volatile
  5043   001BEA                     i2l1388:
  5044   001BEA  D7FF               	goto	i2l1388
  5045   001BEC                     i2l4612:
  5046   001BEC  ECC8  F012         	call	_check_status_ok	;wreg free
  5047   001BF0  0900               	iorlw	0
  5048   001BF2  B4D8               	btfsc	status,2,c
  5049   001BF4  D7EF               	goto	i2l4602
  5050                           
  5051                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  5052   001BF6  0E0F               	movlw	15
  5053   001BF8  6E05               	movwf	d2command@d2^0,c
  5054   001BFA  0E21               	movlw	33
  5055   001BFC  6E06               	movwf	d2command@cmd^0,c
  5056   001BFE  0E27               	movlw	39
  5057   001C00  EC72  F011         	call	_d2command
  5058                           
  5059                           ;afficheur.c: 206: d2command(0,0,0x22);
  5060   001C04  0E00               	movlw	0
  5061   001C06  6E05               	movwf	d2command@d2^0,c
  5062   001C08  0E22               	movlw	34
  5063   001C0A  6E06               	movwf	d2command@cmd^0,c
  5064   001C0C  0E00               	movlw	0
  5065   001C0E  EC72  F011         	call	_d2command
  5066                           
  5067                           ;afficheur.c: 207: d2command(0,0,0x24);
  5068   001C12  0E00               	movlw	0
  5069   001C14  6E05               	movwf	d2command@d2^0,c
  5070   001C16  0E24               	movlw	36
  5071   001C18  6E06               	movwf	d2command@cmd^0,c
  5072   001C1A  0E00               	movlw	0
  5073   001C1C  EC72  F011         	call	_d2command
  5074                           
  5075                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  5076   001C20  0E7B               	movlw	123
  5077   001C22  6E05               	movwf	d2command@d2^0,c
  5078   001C24  0E40               	movlw	64
  5079   001C26  6E06               	movwf	d2command@cmd^0,c
  5080   001C28  0E00               	movlw	0
  5081   001C2A  EC72  F011         	call	_d2command
  5082                           
  5083                           ;afficheur.c: 211: d2command(40,0,0x41);
  5084   001C2E  0E00               	movlw	0
  5085   001C30  6E05               	movwf	d2command@d2^0,c
  5086   001C32  0E41               	movlw	65
  5087   001C34  6E06               	movwf	d2command@cmd^0,c
  5088   001C36  0E28               	movlw	40
  5089   001C38  EC72  F011         	call	_d2command
  5090                           
  5091                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  5092   001C3C  0E80               	movlw	128
  5093   001C3E  6E05               	movwf	d2command@d2^0,c
  5094   001C40  0E42               	movlw	66
  5095   001C42  6E06               	movwf	d2command@cmd^0,c
  5096   001C44  0E00               	movlw	0
  5097   001C46  EC72  F011         	call	_d2command
  5098                           
  5099                           ;afficheur.c: 213: d2command(40,0,0x43);
  5100   001C4A  0E00               	movlw	0
  5101   001C4C  6E05               	movwf	d2command@d2^0,c
  5102   001C4E  0E43               	movlw	67
  5103   001C50  6E06               	movwf	d2command@cmd^0,c
  5104   001C52  0E28               	movlw	40
  5105   001C54  EC72  F011         	call	_d2command
  5106                           
  5107                           ;afficheur.c: 216: command(0x80);
  5108   001C58  0E80               	movlw	128
  5109   001C5A  EC41  F013         	call	_command
  5110                           
  5111                           ;afficheur.c: 219: command(0x9C);
  5112   001C5E  0E9C               	movlw	156
  5113   001C60  EC41  F013         	call	_command
  5114                           
  5115                           ;afficheur.c: 222: command(0xA0);
  5116   001C64  0EA0               	movlw	160
  5117   001C66  EC41  F013         	call	_command
  5118                           
  5119                           ;afficheur.c: 225: d1command(0x02,0x70);
  5120   001C6A  0E70               	movlw	112
  5121   001C6C  6E05               	movwf	d1command@cmd^0,c
  5122   001C6E  0E02               	movlw	2
  5123   001C70  EC2B  F012         	call	_d1command
  5124   001C74  0012               	return		;funcret
  5125   001C76                     __end_of_initialisation_afficheur:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function _check_status_ok *****************
  5129 ;; Defined at:
  5130 ;;		line 30 in file "afficheur.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  res             1    0[COMRAM] unsigned char 
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1    wreg      unsigned char 
  5137 ;; Registers used:
  5138 ;;		wreg, status,2, status,0
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/0
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5148 ;;Total ram usage:        1 bytes
  5149 ;; Hardware stack levels used: 1
  5150 ;; This function calls:
  5151 ;;		Nothing
  5152 ;; This function is called by:
  5153 ;;		_initialisation_afficheur
  5154 ;; This function uses a non-reentrant model
  5155 ;;
  5156                           
  5157                           	psect	text21
  5158   002590                     __ptext21:
  5159                           	callstack 0
  5160   002590                     _check_status_ok:
  5161                           	callstack 26
  5162                           
  5163                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  5164                           
  5165                           ;incstack = 0
  5166   002590  6899               	setf	153,c	;volatile
  5167                           
  5168                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  5169   002592  8091               	bsf	145,0,c	;volatile
  5170                           
  5171                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  5172   002594  9691               	bcf	145,3,c	;volatile
  5173                           
  5174                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  5175   002596  9291               	bcf	145,1,c	;volatile
  5176                           
  5177                           ;afficheur.c: 39: __nop();
  5178   002598  F000               	nop	
  5179                           
  5180                           ;afficheur.c: 40: __nop();
  5181   00259A  F000               	nop	
  5182                           
  5183                           ;afficheur.c: 41: __nop();
  5184   00259C  F000               	nop	
  5185                           
  5186                           ;afficheur.c: 42: res=PORTH;
  5187   00259E  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  5188                           
  5189                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  5190   0025A2  8291               	bsf	145,1,c	;volatile
  5191                           
  5192                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  5193   0025A4  8691               	bsf	145,3,c	;volatile
  5194                           
  5195                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  5196   0025A6  5001               	movf	check_status_ok@res^0,w,c
  5197   0025A8  0B03               	andlw	3
  5198   0025AA  0A03               	xorlw	3
  5199   0025AC  A4D8               	btfss	status,2,c
  5200   0025AE  D002               	goto	i2l2904
  5201                           
  5202                           ;afficheur.c: 47: res=1;
  5203   0025B0  0E01               	movlw	1
  5204   0025B2  D001               	goto	L4
  5205   0025B4                     i2l2904:
  5206                           
  5207                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  5208   0025B4  0E00               	movlw	0
  5209   0025B6                     L4:
  5210   0025B6  6E01               	movwf	check_status_ok@res^0,c
  5211                           
  5212                           ;afficheur.c: 50: return res;
  5213   0025B8  5001               	movf	check_status_ok@res^0,w,c
  5214   0025BA  0012               	return		;funcret
  5215   0025BC                     __end_of_check_status_ok:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function _init_rxtx *****************
  5219 ;; Defined at:
  5220 ;;		line 4 in file "rxtx.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5238 ;;Total ram usage:        0 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_tache1
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text22
  5248   002604                     __ptext22:
  5249                           	callstack 0
  5250   002604                     _init_rxtx:
  5251                           	callstack 27
  5252                           
  5253                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  5254                           
  5255                           ;incstack = 0
  5256   002604  9C94               	bcf	148,6,c	;volatile
  5257                           
  5258                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  5259   002606  8E94               	bsf	148,7,c	;volatile
  5260                           
  5261                           ;rxtx.c: 8: BAUDCON1=0x08;
  5262   002608  0E08               	movlw	8
  5263   00260A  6E65               	movwf	101,c	;volatile
  5264                           
  5265                           ;rxtx.c: 9: SPBRGH1=0x04;
  5266   00260C  0E04               	movlw	4
  5267   00260E  6ED4               	movwf	212,c	;volatile
  5268                           
  5269                           ;rxtx.c: 10: SPBRG1=0xE1;
  5270   002610  0EE1               	movlw	225
  5271   002612  6EAF               	movwf	175,c	;volatile
  5272                           
  5273                           ;rxtx.c: 11: TXSTA1=0x04;
  5274   002614  0E04               	movlw	4
  5275   002616  6EAC               	movwf	172,c	;volatile
  5276                           
  5277                           ;rxtx.c: 12: RCSTA1=0x80;
  5278   002618  0E80               	movlw	128
  5279   00261A  6EAB               	movwf	171,c	;volatile
  5280                           
  5281                           ;rxtx.c: 13: TXSTA1=0x24;
  5282   00261C  0E24               	movlw	36
  5283   00261E  6EAC               	movwf	172,c	;volatile
  5284                           
  5285                           ;rxtx.c: 14: RCSTA1=0x90;
  5286   002620  0E90               	movlw	144
  5287   002622  6EAB               	movwf	171,c	;volatile
  5288   002624  0012               	return		;funcret
  5289   002626                     __end_of_init_rxtx:
  5290                           	callstack 0
  5291                           
  5292 ;; *************** function _draw_square *****************
  5293 ;; Defined at:
  5294 ;;		line 325 in file "afficheur.c"
  5295 ;; Parameters:    Size  Location     Type
  5296 ;;  x1              1    wreg     unsigned char 
  5297 ;;  y1              1   20[COMRAM] unsigned char 
  5298 ;;  x2              1   21[COMRAM] unsigned char 
  5299 ;;  y2              1   22[COMRAM] unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  x1              1   23[COMRAM] unsigned char 
  5302 ;;  y               1   25[COMRAM] unsigned char 
  5303 ;;  x               1   24[COMRAM] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:        6 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 4
  5320 ;; This function calls:
  5321 ;;		_plot1
  5322 ;; This function is called by:
  5323 ;;		_tache1
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text23
  5328   002334                     __ptext23:
  5329                           	callstack 0
  5330   002334                     _draw_square:
  5331                           	callstack 23
  5332                           
  5333                           ;incstack = 0
  5334                           ;draw_square@x1 stored from wreg
  5335   002334  6E18               	movwf	draw_square@x1^0,c
  5336                           
  5337                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  5338   002336  C018  F019         	movff	draw_square@x1,draw_square@x
  5339   00233A  D00B               	goto	i2l4650
  5340   00233C                     i2l4646:
  5341                           
  5342                           ;afficheur.c: 330: plot1(x, y1);
  5343   00233C  C015  F00F         	movff	draw_square@y1,plot1@y
  5344   002340  5019               	movf	draw_square@x^0,w,c
  5345   002342  EC3B  F00E         	call	_plot1
  5346                           
  5347                           ;afficheur.c: 331: plot1(x, y2);
  5348   002346  C017  F00F         	movff	draw_square@y2,plot1@y
  5349   00234A  5019               	movf	draw_square@x^0,w,c
  5350   00234C  EC3B  F00E         	call	_plot1
  5351   002350  2A19               	incf	draw_square@x^0,f,c
  5352   002352                     i2l4650:
  5353   002352  5019               	movf	draw_square@x^0,w,c
  5354   002354  5C16               	subwf	draw_square@x2^0,w,c
  5355   002356  B0D8               	btfsc	status,0,c
  5356   002358  D7F1               	goto	i2l4646
  5357                           
  5358                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  5359   00235A  C015  F01A         	movff	draw_square@y1,draw_square@y
  5360   00235E  D00B               	goto	i2l4656
  5361   002360                     i2l4652:
  5362                           
  5363                           ;afficheur.c: 336: plot1(x1, y);
  5364   002360  C01A  F00F         	movff	draw_square@y,plot1@y
  5365   002364  5018               	movf	draw_square@x1^0,w,c
  5366   002366  EC3B  F00E         	call	_plot1
  5367                           
  5368                           ;afficheur.c: 337: plot1(x2, y);
  5369   00236A  C01A  F00F         	movff	draw_square@y,plot1@y
  5370   00236E  5016               	movf	draw_square@x2^0,w,c
  5371   002370  EC3B  F00E         	call	_plot1
  5372   002374  2A1A               	incf	draw_square@y^0,f,c
  5373   002376                     i2l4656:
  5374   002376  501A               	movf	draw_square@y^0,w,c
  5375   002378  5C17               	subwf	draw_square@y2^0,w,c
  5376   00237A  A0D8               	btfss	status,0,c
  5377   00237C  0012               	return	
  5378   00237E  D7F0               	goto	i2l4652
  5379   002380                     __end_of_draw_square:
  5380                           	callstack 0
  5381                           
  5382 ;; *************** function _plot1 *****************
  5383 ;; Defined at:
  5384 ;;		line 390 in file "afficheur.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  x               1    wreg     unsigned char 
  5387 ;;  y               1   14[COMRAM] unsigned char 
  5388 ;; Auto vars:     Size  Location     Type
  5389 ;;  x               1   19[COMRAM] unsigned char 
  5390 ;;  add             2   17[COMRAM] unsigned int 
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5400 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;Total ram usage:        6 bytes
  5405 ;; Hardware stack levels used: 1
  5406 ;; Hardware stack levels required when called: 3
  5407 ;; This function calls:
  5408 ;;		___awdiv
  5409 ;;		___awmod
  5410 ;;		_command
  5411 ;;		_d2command
  5412 ;; This function is called by:
  5413 ;;		_tache1
  5414 ;;		_draw_square
  5415 ;;		_draw_filled_square
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text24
  5420   001C76                     __ptext24:
  5421                           	callstack 0
  5422   001C76                     _plot1:
  5423                           	callstack 24
  5424                           
  5425                           ;incstack = 0
  5426                           ;plot1@x stored from wreg
  5427   001C76  6E14               	movwf	plot1@x^0,c
  5428                           
  5429                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  5430   001C78  C014  F007         	movff	plot1@x,___awdiv@dividend
  5431   001C7C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5432   001C7E  0E00               	movlw	0
  5433   001C80  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5434   001C82  0E06               	movlw	6
  5435   001C84  6E09               	movwf	___awdiv@divisor^0,c
  5436   001C86  EC15  F010         	call	___awdiv	;wreg free
  5437   001C8A  500F               	movf	plot1@y^0,w,c
  5438   001C8C  0D28               	mullw	40
  5439   001C8E  CFF3 F010          	movff	prodl,??_plot1
  5440   001C92  CFF4 F011          	movff	prodh,??_plot1+1
  5441   001C96  5007               	movf	?___awdiv^0,w,c
  5442   001C98  2410               	addwf	??_plot1^0,w,c
  5443   001C9A  6E12               	movwf	plot1@add^0,c
  5444   001C9C  5008               	movf	(?___awdiv+1)^0,w,c
  5445   001C9E  2011               	addwfc	(??_plot1+1)^0,w,c
  5446   001CA0  6E13               	movwf	(plot1@add+1)^0,c
  5447                           
  5448                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  5449   001CA2  5013               	movf	(plot1@add+1)^0,w,c
  5450   001CA4  6E05               	movwf	d2command@d2^0,c
  5451   001CA6  0E24               	movlw	36
  5452   001CA8  6E06               	movwf	d2command@cmd^0,c
  5453   001CAA  5012               	movf	plot1@add^0,w,c
  5454   001CAC  EC72  F011         	call	_d2command
  5455                           
  5456                           ;afficheur.c: 397: switch(x%6)
  5457   001CB0  D018               	goto	i2l4546
  5458   001CB2                     i2l4532:
  5459   001CB2  0EFD               	movlw	253
  5460   001CB4  EC41  F013         	call	_command
  5461   001CB8  0012               	return	
  5462   001CBA                     i2l4534:
  5463   001CBA  0EFC               	movlw	252
  5464   001CBC  EC41  F013         	call	_command
  5465   001CC0  0012               	return	
  5466   001CC2                     i2l4536:
  5467   001CC2  0EFB               	movlw	251
  5468   001CC4  EC41  F013         	call	_command
  5469   001CC8  0012               	return	
  5470   001CCA                     i2l4538:
  5471   001CCA  0EFA               	movlw	250
  5472   001CCC  EC41  F013         	call	_command
  5473   001CD0  0012               	return	
  5474   001CD2                     i2l4540:
  5475   001CD2  0EF9               	movlw	249
  5476   001CD4  EC41  F013         	call	_command
  5477   001CD8  0012               	return	
  5478   001CDA                     i2l4542:
  5479   001CDA  0EF8               	movlw	248
  5480   001CDC  EC41  F013         	call	_command
  5481   001CE0  0012               	return	
  5482   001CE2                     i2l4546:
  5483   001CE2  C014  F001         	movff	plot1@x,___awmod@dividend
  5484   001CE6  6A02               	clrf	(___awmod@dividend+1)^0,c
  5485   001CE8  0E00               	movlw	0
  5486   001CEA  6E04               	movwf	(___awmod@divisor+1)^0,c
  5487   001CEC  0E06               	movlw	6
  5488   001CEE  6E03               	movwf	___awmod@divisor^0,c
  5489   001CF0  EC57  F010         	call	___awmod	;wreg free
  5490                           
  5491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5492                           ; Switch size 1, requested type "simple"
  5493                           ; Number of cases is 1, Range of values is 0 to 0
  5494                           ; switch strategies available:
  5495                           ; Name         Instructions Cycles
  5496                           ; simple_byte            4     3 (average)
  5497                           ;	Chosen strategy is simple_byte
  5498   001CF4  5002               	movf	(?___awmod+1)^0,w,c
  5499   001CF6  0A00               	xorlw	0	; case 0
  5500   001CF8  A4D8               	btfss	status,2,c
  5501   001CFA  0012               	return	
  5502                           
  5503                           ; Switch size 1, requested type "simple"
  5504                           ; Number of cases is 6, Range of values is 0 to 5
  5505                           ; switch strategies available:
  5506                           ; Name         Instructions Cycles
  5507                           ; simple_byte           19    10 (average)
  5508                           ;	Chosen strategy is simple_byte
  5509   001CFC  5001               	movf	?___awmod^0,w,c
  5510   001CFE  0A00               	xorlw	0	; case 0
  5511   001D00  B4D8               	btfsc	status,2,c
  5512   001D02  D7D7               	goto	i2l4532
  5513   001D04  0A01               	xorlw	1	; case 1
  5514   001D06  B4D8               	btfsc	status,2,c
  5515   001D08  D7D8               	goto	i2l4534
  5516   001D0A  0A03               	xorlw	3	; case 2
  5517   001D0C  B4D8               	btfsc	status,2,c
  5518   001D0E  D7D9               	goto	i2l4536
  5519   001D10  0A01               	xorlw	1	; case 3
  5520   001D12  B4D8               	btfsc	status,2,c
  5521   001D14  D7DA               	goto	i2l4538
  5522   001D16  0A07               	xorlw	7	; case 4
  5523   001D18  B4D8               	btfsc	status,2,c
  5524   001D1A  D7DB               	goto	i2l4540
  5525   001D1C  0A01               	xorlw	1	; case 5
  5526   001D1E  A4D8               	btfss	status,2,c
  5527   001D20  0012               	return	
  5528   001D22  D7DB               	goto	i2l4542
  5529   001D24                     __end_of_plot1:
  5530                           	callstack 0
  5531                           
  5532 ;; *************** function _draw_hex8 *****************
  5533 ;; Defined at:
  5534 ;;		line 252 in file "afficheur.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;  octet           1    wreg     unsigned char 
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  octet           1    7[COMRAM] unsigned char 
  5539 ;;  c               1    8[COMRAM] unsigned char 
  5540 ;; Return value:  Size  Location     Type
  5541 ;;                  1    wreg      void 
  5542 ;; Registers used:
  5543 ;;		wreg, status,2, status,0, cstack
  5544 ;; Tracked objects:
  5545 ;;		On entry : 0/0
  5546 ;;		On exit  : 0/0
  5547 ;;		Unchanged: 0/0
  5548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;Total ram usage:        2 bytes
  5554 ;; Hardware stack levels used: 1
  5555 ;; Hardware stack levels required when called: 3
  5556 ;; This function calls:
  5557 ;;		_d1command
  5558 ;; This function is called by:
  5559 ;;		_tache1
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text25
  5564   00218C                     __ptext25:
  5565                           	callstack 0
  5566   00218C                     _draw_hex8:
  5567                           	callstack 24
  5568                           
  5569                           ;incstack = 0
  5570                           ;draw_hex8@octet stored from wreg
  5571   00218C  6E08               	movwf	draw_hex8@octet^0,c
  5572                           
  5573                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5574   00218E  3808               	swapf	draw_hex8@octet^0,w,c
  5575   002190  0B0F               	andlw	15
  5576   002192  6E09               	movwf	draw_hex8@c^0,c
  5577                           
  5578                           ;afficheur.c: 257: if (c>9)
  5579   002194  0E09               	movlw	9
  5580   002196  6409               	cpfsgt	draw_hex8@c^0,c
  5581   002198  D003               	goto	i2l4746
  5582                           
  5583                           ;afficheur.c: 258: c=c+0x17;
  5584   00219A  5009               	movf	draw_hex8@c^0,w,c
  5585   00219C  0F17               	addlw	23
  5586   00219E  D002               	goto	L5
  5587   0021A0                     i2l4746:
  5588                           
  5589                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5590   0021A0  5009               	movf	draw_hex8@c^0,w,c
  5591   0021A2  0F10               	addlw	16
  5592   0021A4                     L5:
  5593   0021A4  6E09               	movwf	draw_hex8@c^0,c
  5594   0021A6  D001               	goto	i2l4748
  5595   0021A8                     i2l1417:
  5596                           
  5597                           ;afficheur.c: 262: __nop();
  5598   0021A8  F000               	nop	
  5599   0021AA                     i2l4748:
  5600   0021AA  0EC0               	movlw	192
  5601   0021AC  6E05               	movwf	d1command@cmd^0,c
  5602   0021AE  5009               	movf	draw_hex8@c^0,w,c
  5603   0021B0  EC2B  F012         	call	_d1command
  5604   0021B4  0900               	iorlw	0
  5605   0021B6  B4D8               	btfsc	status,2,c
  5606   0021B8  D7F7               	goto	i2l1417
  5607                           
  5608                           ;afficheur.c: 264: c=(octet&0x0F);
  5609   0021BA  5008               	movf	draw_hex8@octet^0,w,c
  5610   0021BC  0B0F               	andlw	15
  5611   0021BE  6E09               	movwf	draw_hex8@c^0,c
  5612                           
  5613                           ;afficheur.c: 265: if (c>9)
  5614   0021C0  0E09               	movlw	9
  5615   0021C2  6409               	cpfsgt	draw_hex8@c^0,c
  5616   0021C4  D003               	goto	i2l4754
  5617                           
  5618                           ;afficheur.c: 266: c=c+0x17;
  5619   0021C6  5009               	movf	draw_hex8@c^0,w,c
  5620   0021C8  0F17               	addlw	23
  5621   0021CA  D002               	goto	L6
  5622   0021CC                     i2l4754:
  5623                           
  5624                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5625   0021CC  5009               	movf	draw_hex8@c^0,w,c
  5626   0021CE  0F10               	addlw	16
  5627   0021D0                     L6:
  5628   0021D0  6E09               	movwf	draw_hex8@c^0,c
  5629   0021D2  D001               	goto	i2l4756
  5630   0021D4                     i2l1422:
  5631                           
  5632                           ;afficheur.c: 270: __nop();
  5633   0021D4  F000               	nop	
  5634   0021D6                     i2l4756:
  5635   0021D6  0EC0               	movlw	192
  5636   0021D8  6E05               	movwf	d1command@cmd^0,c
  5637   0021DA  5009               	movf	draw_hex8@c^0,w,c
  5638   0021DC  EC2B  F012         	call	_d1command
  5639   0021E0  0900               	iorlw	0
  5640   0021E2  A4D8               	btfss	status,2,c
  5641   0021E4  0012               	return	
  5642   0021E6  D7F6               	goto	i2l1422
  5643   0021E8                     __end_of_draw_hex8:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function _draw_dec8 *****************
  5647 ;; Defined at:
  5648 ;;		line 274 in file "afficheur.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  octet           1    wreg     unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  octet           1   16[COMRAM] unsigned char 
  5653 ;;  c               1   19[COMRAM] unsigned char 
  5654 ;;  dix             1   18[COMRAM] unsigned char 
  5655 ;;  cent            1   17[COMRAM] unsigned char 
  5656 ;;  unit            1   15[COMRAM] unsigned char 
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;Total ram usage:        6 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 3
  5673 ;; This function calls:
  5674 ;;		___awdiv
  5675 ;;		_d1command
  5676 ;; This function is called by:
  5677 ;;		_tache1
  5678 ;; This function uses a non-reentrant model
  5679 ;;
  5680                           
  5681                           	psect	text26
  5682   001E74                     __ptext26:
  5683                           	callstack 0
  5684   001E74                     _draw_dec8:
  5685                           	callstack 24
  5686                           
  5687                           ;incstack = 0
  5688                           ;draw_dec8@octet stored from wreg
  5689   001E74  6E11               	movwf	draw_dec8@octet^0,c
  5690                           
  5691                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5692   001E76  C011  F007         	movff	draw_dec8@octet,___awdiv@dividend
  5693   001E7A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5694   001E7C  0E00               	movlw	0
  5695   001E7E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5696   001E80  0E64               	movlw	100
  5697   001E82  6E09               	movwf	___awdiv@divisor^0,c
  5698   001E84  EC15  F010         	call	___awdiv	;wreg free
  5699   001E88  5007               	movf	?___awdiv^0,w,c
  5700   001E8A  6E12               	movwf	draw_dec8@cent^0,c
  5701                           
  5702                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5703   001E8C  5012               	movf	draw_dec8@cent^0,w,c
  5704   001E8E  0D9C               	mullw	156
  5705   001E90  50F3               	movf	243,w,c
  5706   001E92  2411               	addwf	draw_dec8@octet^0,w,c
  5707   001E94  6E13               	movwf	draw_dec8@dix^0,c
  5708                           
  5709                           ;afficheur.c: 279: dix = dix/10;
  5710   001E96  C013  F007         	movff	draw_dec8@dix,___awdiv@dividend
  5711   001E9A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5712   001E9C  0E00               	movlw	0
  5713   001E9E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5714   001EA0  0E0A               	movlw	10
  5715   001EA2  6E09               	movwf	___awdiv@divisor^0,c
  5716   001EA4  EC15  F010         	call	___awdiv	;wreg free
  5717   001EA8  5007               	movf	?___awdiv^0,w,c
  5718   001EAA  6E13               	movwf	draw_dec8@dix^0,c
  5719                           
  5720                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5721   001EAC  5012               	movf	draw_dec8@cent^0,w,c
  5722   001EAE  0D9C               	mullw	156
  5723   001EB0  CFF3 F00F          	movff	prodl,??_draw_dec8
  5724   001EB4  5013               	movf	draw_dec8@dix^0,w,c
  5725   001EB6  0DF6               	mullw	246
  5726   001EB8  50F3               	movf	243,w,c
  5727   001EBA  240F               	addwf	??_draw_dec8^0,w,c
  5728   001EBC  2411               	addwf	draw_dec8@octet^0,w,c
  5729   001EBE  6E10               	movwf	draw_dec8@unit^0,c
  5730                           
  5731                           ;afficheur.c: 282: c=cent+0x10;
  5732   001EC0  5012               	movf	draw_dec8@cent^0,w,c
  5733   001EC2  0F10               	addlw	16
  5734   001EC4  6E14               	movwf	draw_dec8@c^0,c
  5735                           
  5736                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5737   001EC6  D001               	goto	i2l4694
  5738   001EC8                     i2l1428:
  5739                           
  5740                           ;afficheur.c: 284: __nop();
  5741   001EC8  F000               	nop	
  5742   001ECA                     i2l4694:
  5743   001ECA  0EC0               	movlw	192
  5744   001ECC  6E05               	movwf	d1command@cmd^0,c
  5745   001ECE  5014               	movf	draw_dec8@c^0,w,c
  5746   001ED0  EC2B  F012         	call	_d1command
  5747   001ED4  0900               	iorlw	0
  5748   001ED6  B4D8               	btfsc	status,2,c
  5749   001ED8  D7F7               	goto	i2l1428
  5750                           
  5751                           ;afficheur.c: 286: c=dix+0x10;
  5752   001EDA  5013               	movf	draw_dec8@dix^0,w,c
  5753   001EDC  0F10               	addlw	16
  5754   001EDE  6E14               	movwf	draw_dec8@c^0,c
  5755                           
  5756                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5757   001EE0  D001               	goto	i2l4698
  5758   001EE2                     i2l1431:
  5759                           
  5760                           ;afficheur.c: 288: __nop();
  5761   001EE2  F000               	nop	
  5762   001EE4                     i2l4698:
  5763   001EE4  0EC0               	movlw	192
  5764   001EE6  6E05               	movwf	d1command@cmd^0,c
  5765   001EE8  5014               	movf	draw_dec8@c^0,w,c
  5766   001EEA  EC2B  F012         	call	_d1command
  5767   001EEE  0900               	iorlw	0
  5768   001EF0  B4D8               	btfsc	status,2,c
  5769   001EF2  D7F7               	goto	i2l1431
  5770                           
  5771                           ;afficheur.c: 290: c=unit+0x10;
  5772   001EF4  5010               	movf	draw_dec8@unit^0,w,c
  5773   001EF6  0F10               	addlw	16
  5774   001EF8  6E14               	movwf	draw_dec8@c^0,c
  5775                           
  5776                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5777   001EFA  D001               	goto	i2l4702
  5778   001EFC                     i2l1434:
  5779                           
  5780                           ;afficheur.c: 292: __nop();
  5781   001EFC  F000               	nop	
  5782   001EFE                     i2l4702:
  5783   001EFE  0EC0               	movlw	192
  5784   001F00  6E05               	movwf	d1command@cmd^0,c
  5785   001F02  5014               	movf	draw_dec8@c^0,w,c
  5786   001F04  EC2B  F012         	call	_d1command
  5787   001F08  0900               	iorlw	0
  5788   001F0A  A4D8               	btfss	status,2,c
  5789   001F0C  0012               	return	
  5790   001F0E  D7F6               	goto	i2l1434
  5791   001F10                     __end_of_draw_dec8:
  5792                           	callstack 0
  5793                           
  5794 ;; *************** function _clear_text *****************
  5795 ;; Defined at:
  5796 ;;		line 307 in file "afficheur.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  add             2    8[COMRAM] unsigned int 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;Total ram usage:        2 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; Hardware stack levels required when called: 3
  5817 ;; This function calls:
  5818 ;;		_d1command
  5819 ;;		_d2command
  5820 ;; This function is called by:
  5821 ;;		_tache1
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text27
  5826   002530                     __ptext27:
  5827                           	callstack 0
  5828   002530                     _clear_text:
  5829                           	callstack 24
  5830                           
  5831                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5832                           
  5833                           ;incstack = 0
  5834   002530  0E00               	movlw	0
  5835   002532  6E05               	movwf	d2command@d2^0,c
  5836   002534  0E24               	movlw	36
  5837   002536  6E06               	movwf	d2command@cmd^0,c
  5838   002538  0E00               	movlw	0
  5839   00253A  EC72  F011         	call	_d2command
  5840                           
  5841                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5842   00253E  0E00               	movlw	0
  5843   002540  6E0A               	movwf	(clear_text@add+1)^0,c
  5844   002542  0E00               	movlw	0
  5845   002544  6E09               	movwf	clear_text@add^0,c
  5846   002546                     i2l4624:
  5847                           
  5848                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5849   002546  0EC0               	movlw	192
  5850   002548  6E05               	movwf	d1command@cmd^0,c
  5851   00254A  0E00               	movlw	0
  5852   00254C  EC2B  F012         	call	_d1command
  5853   002550  4A09               	infsnz	clear_text@add^0,f,c
  5854   002552  2A0A               	incf	(clear_text@add+1)^0,f,c
  5855   002554  0E80               	movlw	128
  5856   002556  180A               	xorwf	(clear_text@add+1)^0,w,c
  5857   002558  1009               	iorwf	clear_text@add^0,w,c
  5858   00255A  B4D8               	btfsc	status,2,c
  5859   00255C  0012               	return	
  5860   00255E  D7F3               	goto	i2l4624
  5861   002560                     __end_of_clear_text:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function _clear_square *****************
  5865 ;; Defined at:
  5866 ;;		line 351 in file "afficheur.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  x1              1    wreg     unsigned char 
  5869 ;;  y1              1   20[COMRAM] unsigned char 
  5870 ;;  x2              1   21[COMRAM] unsigned char 
  5871 ;;  y2              1   22[COMRAM] unsigned char 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;  x1              1   23[COMRAM] unsigned char 
  5874 ;;  y               1   25[COMRAM] unsigned char 
  5875 ;;  x               1   24[COMRAM] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5885 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;Total ram usage:        6 bytes
  5890 ;; Hardware stack levels used: 1
  5891 ;; Hardware stack levels required when called: 4
  5892 ;; This function calls:
  5893 ;;		_plot0
  5894 ;; This function is called by:
  5895 ;;		_tache1
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text28
  5900   002380                     __ptext28:
  5901                           	callstack 0
  5902   002380                     _clear_square:
  5903                           	callstack 23
  5904                           
  5905                           ;incstack = 0
  5906                           ;clear_square@x1 stored from wreg
  5907   002380  6E18               	movwf	clear_square@x1^0,c
  5908                           
  5909                           ;afficheur.c: 352: unsigned char x, y;;afficheur.c: 355: for (x = x1 + 1; x < x2; x++) {
  5910   002382  2818               	incf	clear_square@x1^0,w,c
  5911   002384  6E19               	movwf	clear_square@x^0,c
  5912   002386  D00B               	goto	i2l4764
  5913   002388                     i2l4760:
  5914                           
  5915                           ;afficheur.c: 356: plot0(x, y1);
  5916   002388  C015  F00F         	movff	clear_square@y1,plot0@y
  5917   00238C  5019               	movf	clear_square@x^0,w,c
  5918   00238E  EC92  F00E         	call	_plot0
  5919                           
  5920                           ;afficheur.c: 357: plot0(x, y2);
  5921   002392  C017  F00F         	movff	clear_square@y2,plot0@y
  5922   002396  5019               	movf	clear_square@x^0,w,c
  5923   002398  EC92  F00E         	call	_plot0
  5924   00239C  2A19               	incf	clear_square@x^0,f,c
  5925   00239E                     i2l4764:
  5926   00239E  5016               	movf	clear_square@x2^0,w,c
  5927   0023A0  5C19               	subwf	clear_square@x^0,w,c
  5928   0023A2  A0D8               	btfss	status,0,c
  5929   0023A4  D7F1               	goto	i2l4760
  5930                           
  5931                           ;afficheur.c: 358: };afficheur.c: 361: for (y = y1 + 1; y < y2; y++) {
  5932   0023A6  2815               	incf	clear_square@y1^0,w,c
  5933   0023A8  6E1A               	movwf	clear_square@y^0,c
  5934   0023AA  D00B               	goto	i2l4772
  5935   0023AC                     i2l4768:
  5936                           
  5937                           ;afficheur.c: 362: plot0(x1, y);
  5938   0023AC  C01A  F00F         	movff	clear_square@y,plot0@y
  5939   0023B0  5018               	movf	clear_square@x1^0,w,c
  5940   0023B2  EC92  F00E         	call	_plot0
  5941                           
  5942                           ;afficheur.c: 363: plot0(x2, y);
  5943   0023B6  C01A  F00F         	movff	clear_square@y,plot0@y
  5944   0023BA  5016               	movf	clear_square@x2^0,w,c
  5945   0023BC  EC92  F00E         	call	_plot0
  5946   0023C0  2A1A               	incf	clear_square@y^0,f,c
  5947   0023C2                     i2l4772:
  5948   0023C2  5017               	movf	clear_square@y2^0,w,c
  5949   0023C4  5C1A               	subwf	clear_square@y^0,w,c
  5950   0023C6  B0D8               	btfsc	status,0,c
  5951   0023C8  0012               	return	
  5952   0023CA  D7F0               	goto	i2l4768
  5953   0023CC                     __end_of_clear_square:
  5954                           	callstack 0
  5955                           
  5956 ;; *************** function _plot0 *****************
  5957 ;; Defined at:
  5958 ;;		line 411 in file "afficheur.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  x               1    wreg     unsigned char 
  5961 ;;  y               1   14[COMRAM] unsigned char 
  5962 ;; Auto vars:     Size  Location     Type
  5963 ;;  x               1   19[COMRAM] unsigned char 
  5964 ;;  add             2   17[COMRAM] unsigned int 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  1    wreg      void 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5974 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;Total ram usage:        6 bytes
  5979 ;; Hardware stack levels used: 1
  5980 ;; Hardware stack levels required when called: 3
  5981 ;; This function calls:
  5982 ;;		___awdiv
  5983 ;;		___awmod
  5984 ;;		_command
  5985 ;;		_d2command
  5986 ;; This function is called by:
  5987 ;;		_clear_square
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text29
  5992   001D24                     __ptext29:
  5993                           	callstack 0
  5994   001D24                     _plot0:
  5995                           	callstack 23
  5996                           
  5997                           ;incstack = 0
  5998                           ;plot0@x stored from wreg
  5999   001D24  6E14               	movwf	plot0@x^0,c
  6000                           
  6001                           ;afficheur.c: 413: unsigned int add;;afficheur.c: 415: add=40*y+x/6;
  6002   001D26  C014  F007         	movff	plot0@x,___awdiv@dividend
  6003   001D2A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  6004   001D2C  0E00               	movlw	0
  6005   001D2E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  6006   001D30  0E06               	movlw	6
  6007   001D32  6E09               	movwf	___awdiv@divisor^0,c
  6008   001D34  EC15  F010         	call	___awdiv	;wreg free
  6009   001D38  500F               	movf	plot0@y^0,w,c
  6010   001D3A  0D28               	mullw	40
  6011   001D3C  CFF3 F010          	movff	prodl,??_plot0
  6012   001D40  CFF4 F011          	movff	prodh,??_plot0+1
  6013   001D44  5007               	movf	?___awdiv^0,w,c
  6014   001D46  2410               	addwf	??_plot0^0,w,c
  6015   001D48  6E12               	movwf	plot0@add^0,c
  6016   001D4A  5008               	movf	(?___awdiv+1)^0,w,c
  6017   001D4C  2011               	addwfc	(??_plot0+1)^0,w,c
  6018   001D4E  6E13               	movwf	(plot0@add+1)^0,c
  6019                           
  6020                           ;afficheur.c: 416: d2command((char)(add&0xff),(char)(add>>8),0x24);
  6021   001D50  5013               	movf	(plot0@add+1)^0,w,c
  6022   001D52  6E05               	movwf	d2command@d2^0,c
  6023   001D54  0E24               	movlw	36
  6024   001D56  6E06               	movwf	d2command@cmd^0,c
  6025   001D58  5012               	movf	plot0@add^0,w,c
  6026   001D5A  EC72  F011         	call	_d2command
  6027                           
  6028                           ;afficheur.c: 418: switch(x%6)
  6029   001D5E  D018               	goto	i2l4570
  6030   001D60                     i2l4556:
  6031   001D60  0EF5               	movlw	245
  6032   001D62  EC41  F013         	call	_command
  6033   001D66  0012               	return	
  6034   001D68                     i2l4558:
  6035   001D68  0EF4               	movlw	244
  6036   001D6A  EC41  F013         	call	_command
  6037   001D6E  0012               	return	
  6038   001D70                     i2l4560:
  6039   001D70  0EF3               	movlw	243
  6040   001D72  EC41  F013         	call	_command
  6041   001D76  0012               	return	
  6042   001D78                     i2l4562:
  6043   001D78  0EF2               	movlw	242
  6044   001D7A  EC41  F013         	call	_command
  6045   001D7E  0012               	return	
  6046   001D80                     i2l4564:
  6047   001D80  0EF1               	movlw	241
  6048   001D82  EC41  F013         	call	_command
  6049   001D86  0012               	return	
  6050   001D88                     i2l4566:
  6051   001D88  0EF0               	movlw	240
  6052   001D8A  EC41  F013         	call	_command
  6053   001D8E  0012               	return	
  6054   001D90                     i2l4570:
  6055   001D90  C014  F001         	movff	plot0@x,___awmod@dividend
  6056   001D94  6A02               	clrf	(___awmod@dividend+1)^0,c
  6057   001D96  0E00               	movlw	0
  6058   001D98  6E04               	movwf	(___awmod@divisor+1)^0,c
  6059   001D9A  0E06               	movlw	6
  6060   001D9C  6E03               	movwf	___awmod@divisor^0,c
  6061   001D9E  EC57  F010         	call	___awmod	;wreg free
  6062                           
  6063                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6064                           ; Switch size 1, requested type "simple"
  6065                           ; Number of cases is 1, Range of values is 0 to 0
  6066                           ; switch strategies available:
  6067                           ; Name         Instructions Cycles
  6068                           ; simple_byte            4     3 (average)
  6069                           ;	Chosen strategy is simple_byte
  6070   001DA2  5002               	movf	(?___awmod+1)^0,w,c
  6071   001DA4  0A00               	xorlw	0	; case 0
  6072   001DA6  A4D8               	btfss	status,2,c
  6073   001DA8  0012               	return	
  6074                           
  6075                           ; Switch size 1, requested type "simple"
  6076                           ; Number of cases is 6, Range of values is 0 to 5
  6077                           ; switch strategies available:
  6078                           ; Name         Instructions Cycles
  6079                           ; simple_byte           19    10 (average)
  6080                           ;	Chosen strategy is simple_byte
  6081   001DAA  5001               	movf	?___awmod^0,w,c
  6082   001DAC  0A00               	xorlw	0	; case 0
  6083   001DAE  B4D8               	btfsc	status,2,c
  6084   001DB0  D7D7               	goto	i2l4556
  6085   001DB2  0A01               	xorlw	1	; case 1
  6086   001DB4  B4D8               	btfsc	status,2,c
  6087   001DB6  D7D8               	goto	i2l4558
  6088   001DB8  0A03               	xorlw	3	; case 2
  6089   001DBA  B4D8               	btfsc	status,2,c
  6090   001DBC  D7D9               	goto	i2l4560
  6091   001DBE  0A01               	xorlw	1	; case 3
  6092   001DC0  B4D8               	btfsc	status,2,c
  6093   001DC2  D7DA               	goto	i2l4562
  6094   001DC4  0A07               	xorlw	7	; case 4
  6095   001DC6  B4D8               	btfsc	status,2,c
  6096   001DC8  D7DB               	goto	i2l4564
  6097   001DCA  0A01               	xorlw	1	; case 5
  6098   001DCC  A4D8               	btfss	status,2,c
  6099   001DCE  0012               	return	
  6100   001DD0  D7DB               	goto	i2l4566
  6101   001DD2                     __end_of_plot0:
  6102                           	callstack 0
  6103                           
  6104 ;; *************** function _command *****************
  6105 ;; Defined at:
  6106 ;;		line 90 in file "afficheur.c"
  6107 ;; Parameters:    Size  Location     Type
  6108 ;;  cmd             1    wreg     unsigned char 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  cmd             1    4[COMRAM] unsigned char 
  6111 ;;  res             1    0        unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      unsigned char 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2, status,0, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6125 ;;Total ram usage:        1 bytes
  6126 ;; Hardware stack levels used: 1
  6127 ;; Hardware stack levels required when called: 2
  6128 ;; This function calls:
  6129 ;;		_delai_us_char
  6130 ;;		_wait_status_ok
  6131 ;;		_write_c_aff
  6132 ;; This function is called by:
  6133 ;;		_initialisation_afficheur
  6134 ;;		_plot1
  6135 ;;		_plot0
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text30
  6140   002682                     __ptext30:
  6141                           	callstack 0
  6142   002682                     _command:
  6143                           	callstack 24
  6144                           
  6145                           ;incstack = 0
  6146                           ;command@cmd stored from wreg
  6147   002682  6E05               	movwf	command@cmd^0,c
  6148                           
  6149                           ;afficheur.c: 96: if(wait_status_ok()==1)
  6150   002684  EC49  F011         	call	_wait_status_ok	;wreg free
  6151   002688  06E8               	decf	wreg,f,c
  6152   00268A  A4D8               	btfss	status,2,c
  6153   00268C  0012               	return	
  6154                           
  6155                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  6156   00268E  0E0C               	movlw	12
  6157   002690  EC13  F013         	call	_delai_us_char
  6158                           
  6159                           ;afficheur.c: 99: write_c_aff(cmd);
  6160   002694  5005               	movf	command@cmd^0,w,c
  6161   002696  EC5B  F013         	call	_write_c_aff
  6162   00269A  0012               	return		;funcret
  6163   00269C                     __end_of_command:
  6164                           	callstack 0
  6165                           
  6166 ;; *************** function ___awmod *****************
  6167 ;; Defined at:
  6168 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  dividend        2    0[COMRAM] int 
  6171 ;;  divisor         2    2[COMRAM] int 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  sign            1    5[COMRAM] unsigned char 
  6174 ;;  counter         1    4[COMRAM] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  2    0[COMRAM] int 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6184 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;Total ram usage:        6 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		_plot1
  6194 ;;		_plot0
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           	psect	text31
  6199   0020AE                     __ptext31:
  6200                           	callstack 0
  6201   0020AE                     ___awmod:
  6202                           	callstack 26
  6203                           
  6204                           ;incstack = 0
  6205   0020AE  0E00               	movlw	0
  6206   0020B0  6E06               	movwf	___awmod@sign^0,c
  6207   0020B2  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  6208   0020B4  D006               	goto	i2l4460
  6209   0020B6  6C01               	negf	___awmod@dividend^0,c
  6210   0020B8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6211   0020BA  B0D8               	btfsc	status,0,c
  6212   0020BC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6213   0020BE  0E01               	movlw	1
  6214   0020C0  6E06               	movwf	___awmod@sign^0,c
  6215   0020C2                     i2l4460:
  6216   0020C2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6217   0020C4  D004               	goto	i2l4464
  6218   0020C6  6C03               	negf	___awmod@divisor^0,c
  6219   0020C8  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6220   0020CA  B0D8               	btfsc	status,0,c
  6221   0020CC  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6222   0020CE                     i2l4464:
  6223   0020CE  5003               	movf	___awmod@divisor^0,w,c
  6224   0020D0  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6225   0020D2  B4D8               	btfsc	status,2,c
  6226   0020D4  D018               	goto	i2l4480
  6227   0020D6  0E01               	movlw	1
  6228   0020D8  6E05               	movwf	___awmod@counter^0,c
  6229   0020DA  D004               	goto	i2l4470
  6230   0020DC                     i2l4468:
  6231   0020DC  90D8               	bcf	status,0,c
  6232   0020DE  3603               	rlcf	___awmod@divisor^0,f,c
  6233   0020E0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6234   0020E2  2A05               	incf	___awmod@counter^0,f,c
  6235   0020E4                     i2l4470:
  6236   0020E4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6237   0020E6  D7FA               	goto	i2l4468
  6238   0020E8                     i2u227_40:
  6239   0020E8  5003               	movf	___awmod@divisor^0,w,c
  6240   0020EA  5C01               	subwf	___awmod@dividend^0,w,c
  6241   0020EC  5004               	movf	(___awmod@divisor+1)^0,w,c
  6242   0020EE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6243   0020F0  A0D8               	btfss	status,0,c
  6244   0020F2  D004               	goto	i2l4476
  6245   0020F4  5003               	movf	___awmod@divisor^0,w,c
  6246   0020F6  5E01               	subwf	___awmod@dividend^0,f,c
  6247   0020F8  5004               	movf	(___awmod@divisor+1)^0,w,c
  6248   0020FA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6249   0020FC                     i2l4476:
  6250   0020FC  90D8               	bcf	status,0,c
  6251   0020FE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6252   002100  3203               	rrcf	___awmod@divisor^0,f,c
  6253   002102  2E05               	decfsz	___awmod@counter^0,f,c
  6254   002104  D7F1               	goto	i2u227_40
  6255   002106                     i2l4480:
  6256   002106  5006               	movf	___awmod@sign^0,w,c
  6257   002108  B4D8               	btfsc	status,2,c
  6258   00210A  D004               	goto	i2l4484
  6259   00210C  6C01               	negf	___awmod@dividend^0,c
  6260   00210E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6261   002110  B0D8               	btfsc	status,0,c
  6262   002112  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6263   002114                     i2l4484:
  6264   002114  C001  F001         	movff	___awmod@dividend,?___awmod
  6265   002118  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6266   00211C  0012               	return		;funcret
  6267   00211E                     __end_of___awmod:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _clear_line *****************
  6271 ;; Defined at:
  6272 ;;		line 318 in file "afficheur.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  line            1    wreg     unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  line            1   14[COMRAM] unsigned char 
  6277 ;;  column          1   15[COMRAM] unsigned char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      void 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;Total ram usage:        2 bytes
  6292 ;; Hardware stack levels used: 1
  6293 ;; Hardware stack levels required when called: 4
  6294 ;; This function calls:
  6295 ;;		_draw_char
  6296 ;;		_goto_lico
  6297 ;; This function is called by:
  6298 ;;		_tache1
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text32
  6303   002648                     __ptext32:
  6304                           	callstack 0
  6305   002648                     _clear_line:
  6306                           	callstack 23
  6307                           
  6308                           ;incstack = 0
  6309                           ;clear_line@line stored from wreg
  6310   002648  6E0F               	movwf	clear_line@line^0,c
  6311                           
  6312                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  6313   00264A  0E00               	movlw	0
  6314   00264C  6E10               	movwf	clear_line@column^0,c
  6315   00264E                     i2l4784:
  6316                           
  6317                           ;afficheur.c: 321: goto_lico(line, column);
  6318   00264E  C010  F009         	movff	clear_line@column,goto_lico@colonne
  6319   002652  500F               	movf	clear_line@line^0,w,c
  6320   002654  ECF4  F010         	call	_goto_lico
  6321                           
  6322                           ;afficheur.c: 322: draw_char(' ');
  6323   002658  0E20               	movlw	32
  6324   00265A  EC7F  F012         	call	_draw_char
  6325   00265E  2A10               	incf	clear_line@column^0,f,c
  6326   002660  0E27               	movlw	39
  6327   002662  6410               	cpfsgt	clear_line@column^0,c
  6328   002664  D7F4               	goto	i2l4784
  6329   002666  0012               	return	
  6330   002668                     __end_of_clear_line:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function _draw_char *****************
  6334 ;; Defined at:
  6335 ;;		line 228 in file "afficheur.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  dccar           1    wreg     unsigned char 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  dccar           1    7[COMRAM] unsigned char 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;Total ram usage:        1 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; Hardware stack levels required when called: 3
  6356 ;; This function calls:
  6357 ;;		_d1command
  6358 ;; This function is called by:
  6359 ;;		_tache1
  6360 ;;		_clear_line
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text33
  6365   0024FE                     __ptext33:
  6366                           	callstack 0
  6367   0024FE                     _draw_char:
  6368                           	callstack 24
  6369                           
  6370                           ;incstack = 0
  6371                           ;draw_char@dccar stored from wreg
  6372   0024FE  6E08               	movwf	draw_char@dccar^0,c
  6373                           
  6374                           ;afficheur.c: 230: if (dccar<32)
  6375   002500  0E20               	movlw	32
  6376   002502  6008               	cpfslt	draw_char@dccar^0,c
  6377   002504  D002               	goto	i2l4506
  6378                           
  6379                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  6380   002506  0E3F               	movlw	63
  6381   002508  6E08               	movwf	draw_char@dccar^0,c
  6382   00250A                     i2l4506:
  6383                           
  6384                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  6385   00250A  0E9F               	movlw	159
  6386   00250C  6408               	cpfsgt	draw_char@dccar^0,c
  6387   00250E  D002               	goto	i2l4510
  6388                           
  6389                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  6390   002510  0E3F               	movlw	63
  6391   002512  6E08               	movwf	draw_char@dccar^0,c
  6392   002514                     i2l4510:
  6393                           
  6394                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  6395   002514  5008               	movf	draw_char@dccar^0,w,c
  6396   002516  0FE0               	addlw	224
  6397   002518  6E08               	movwf	draw_char@dccar^0,c
  6398                           
  6399                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  6400   00251A  D001               	goto	i2l4512
  6401   00251C                     i2l1398:
  6402   00251C  F000               	nop	
  6403   00251E                     i2l4512:
  6404   00251E  0EC0               	movlw	192
  6405   002520  6E05               	movwf	d1command@cmd^0,c
  6406   002522  5008               	movf	draw_char@dccar^0,w,c
  6407   002524  EC2B  F012         	call	_d1command
  6408   002528  0900               	iorlw	0
  6409   00252A  A4D8               	btfss	status,2,c
  6410   00252C  0012               	return	
  6411   00252E  D7F6               	goto	i2l1398
  6412   002530                     __end_of_draw_char:
  6413                           	callstack 0
  6414                           
  6415 ;; *************** function _clear_graphics *****************
  6416 ;; Defined at:
  6417 ;;		line 368 in file "afficheur.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;		None
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  add             2    8[COMRAM] unsigned int 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg, status,2, status,0, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6435 ;;Total ram usage:        2 bytes
  6436 ;; Hardware stack levels used: 1
  6437 ;; Hardware stack levels required when called: 3
  6438 ;; This function calls:
  6439 ;;		_d1command
  6440 ;;		_d2command
  6441 ;; This function is called by:
  6442 ;;		_tache1
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text34
  6447   002560                     __ptext34:
  6448                           	callstack 0
  6449   002560                     _clear_graphics:
  6450                           	callstack 24
  6451                           
  6452                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  6453                           
  6454                           ;incstack = 0
  6455   002560  0E80               	movlw	128
  6456   002562  6E05               	movwf	d2command@d2^0,c
  6457   002564  0E24               	movlw	36
  6458   002566  6E06               	movwf	d2command@cmd^0,c
  6459   002568  0E00               	movlw	0
  6460   00256A  EC72  F011         	call	_d2command
  6461                           
  6462                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  6463   00256E  0E80               	movlw	128
  6464   002570  6E0A               	movwf	(clear_graphics@add+1)^0,c
  6465   002572  0E00               	movlw	0
  6466   002574  6E09               	movwf	clear_graphics@add^0,c
  6467   002576                     i2l4638:
  6468                           
  6469                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  6470   002576  0EC0               	movlw	192
  6471   002578  6E05               	movwf	d1command@cmd^0,c
  6472   00257A  0E00               	movlw	0
  6473   00257C  EC2B  F012         	call	_d1command
  6474   002580  4A09               	infsnz	clear_graphics@add^0,f,c
  6475   002582  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  6476   002584  0EF8               	movlw	248
  6477   002586  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  6478   002588  1009               	iorwf	clear_graphics@add^0,w,c
  6479   00258A  B4D8               	btfsc	status,2,c
  6480   00258C  0012               	return	
  6481   00258E  D7F3               	goto	i2l4638
  6482   002590                     __end_of_clear_graphics:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _charger *****************
  6486 ;; Defined at:
  6487 ;;		line 432 in file "afficheur.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;		None
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;		None
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;Total ram usage:        0 bytes
  6506 ;; Hardware stack levels used: 1
  6507 ;; Hardware stack levels required when called: 4
  6508 ;; This function calls:
  6509 ;;		_draw_string
  6510 ;;		_goto_lico
  6511 ;; This function is called by:
  6512 ;;		_tache1
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text35
  6517   002718                     __ptext35:
  6518                           	callstack 0
  6519   002718                     _charger:
  6520                           	callstack 23
  6521                           
  6522                           ;afficheur.c: 434: goto_lico(14,0);
  6523                           
  6524                           ;incstack = 0
  6525   002718  0E00               	movlw	0
  6526   00271A  6E09               	movwf	goto_lico@colonne^0,c
  6527   00271C  0E0E               	movlw	14
  6528   00271E  ECF4  F010         	call	_goto_lico
  6529                           
  6530                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  6531   002722  0E01               	movlw	low STR_26
  6532   002724  6E08               	movwf	draw_string@tableau^0,c
  6533   002726  0E10               	movlw	high STR_26
  6534   002728  6E09               	movwf	(draw_string@tableau+1)^0,c
  6535   00272A  ECCF  F00F         	call	_draw_string	;wreg free
  6536   00272E  0012               	return		;funcret
  6537   002730                     __end_of_charger:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function _goto_lico *****************
  6541 ;; Defined at:
  6542 ;;		line 295 in file "afficheur.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  ligne           1    wreg     unsigned char 
  6545 ;;  colonne         1    8[COMRAM] unsigned char 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  ligne           1   11[COMRAM] unsigned char 
  6548 ;;  adr             2   12[COMRAM] unsigned int 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6558 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;Total ram usage:        6 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 3
  6565 ;; This function calls:
  6566 ;;		_d2command
  6567 ;; This function is called by:
  6568 ;;		_tache1
  6569 ;;		_clear_line
  6570 ;;		_charger
  6571 ;;		_vide
  6572 ;;		_marche
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text36
  6577   0021E8                     __ptext36:
  6578                           	callstack 0
  6579   0021E8                     _goto_lico:
  6580                           	callstack 23
  6581                           
  6582                           ;incstack = 0
  6583                           ;goto_lico@ligne stored from wreg
  6584   0021E8  6E0C               	movwf	goto_lico@ligne^0,c
  6585                           
  6586                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  6587   0021EA  0E7B               	movlw	123
  6588   0021EC  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6589   0021EE  0E00               	movlw	0
  6590   0021F0  6E0D               	movwf	goto_lico@adr^0,c
  6591                           
  6592                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  6593   0021F2  0E0F               	movlw	15
  6594   0021F4  640C               	cpfsgt	goto_lico@ligne^0,c
  6595   0021F6  D002               	goto	i2l4494
  6596   0021F8  0E00               	movlw	0
  6597   0021FA  6E0C               	movwf	goto_lico@ligne^0,c
  6598   0021FC                     i2l4494:
  6599                           
  6600                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  6601   0021FC  0E27               	movlw	39
  6602   0021FE  6409               	cpfsgt	goto_lico@colonne^0,c
  6603   002200  D002               	goto	i2l4498
  6604   002202  0E00               	movlw	0
  6605   002204  6E09               	movwf	goto_lico@colonne^0,c
  6606   002206                     i2l4498:
  6607                           
  6608                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  6609   002206  500C               	movf	goto_lico@ligne^0,w,c
  6610   002208  0D28               	mullw	40
  6611   00220A  CFF3 F00A          	movff	prodl,??_goto_lico
  6612   00220E  CFF4 F00B          	movff	prodh,??_goto_lico+1
  6613   002212  5009               	movf	goto_lico@colonne^0,w,c
  6614   002214  260A               	addwf	??_goto_lico^0,f,c
  6615   002216  0E00               	movlw	0
  6616   002218  220B               	addwfc	(??_goto_lico+1)^0,f,c
  6617   00221A  500D               	movf	goto_lico@adr^0,w,c
  6618   00221C  240A               	addwf	??_goto_lico^0,w,c
  6619   00221E  6E0D               	movwf	goto_lico@adr^0,c
  6620   002220  500E               	movf	(goto_lico@adr+1)^0,w,c
  6621   002222  200B               	addwfc	(??_goto_lico+1)^0,w,c
  6622   002224  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6623                           
  6624                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  6625   002226  D001               	goto	i2l4500
  6626   002228                     i2l1442:
  6627                           
  6628                           ;afficheur.c: 304: __nop();
  6629   002228  F000               	nop	
  6630   00222A                     i2l4500:
  6631   00222A  500E               	movf	(goto_lico@adr+1)^0,w,c
  6632   00222C  6E05               	movwf	d2command@d2^0,c
  6633   00222E  0E24               	movlw	36
  6634   002230  6E06               	movwf	d2command@cmd^0,c
  6635   002232  500D               	movf	goto_lico@adr^0,w,c
  6636   002234  EC72  F011         	call	_d2command
  6637   002238  0900               	iorlw	0
  6638   00223A  A4D8               	btfss	status,2,c
  6639   00223C  0012               	return	
  6640   00223E  D7F4               	goto	i2l1442
  6641   002240                     __end_of_goto_lico:
  6642                           	callstack 0
  6643                           
  6644 ;; *************** function _d2command *****************
  6645 ;; Defined at:
  6646 ;;		line 128 in file "afficheur.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  d1              1    wreg     unsigned char 
  6649 ;;  d2              1    4[COMRAM] unsigned char 
  6650 ;;  cmd             1    5[COMRAM] unsigned char 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;  d1              1    6[COMRAM] unsigned char 
  6653 ;;  res             1    7[COMRAM] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      unsigned char 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;Total ram usage:        4 bytes
  6668 ;; Hardware stack levels used: 1
  6669 ;; Hardware stack levels required when called: 2
  6670 ;; This function calls:
  6671 ;;		_delai_us_char
  6672 ;;		_wait_status_ok
  6673 ;;		_write_c_aff
  6674 ;;		_write_d_aff
  6675 ;; This function is called by:
  6676 ;;		_initialisation_afficheur
  6677 ;;		_goto_lico
  6678 ;;		_clear_text
  6679 ;;		_clear_graphics
  6680 ;;		_plot1
  6681 ;;		_plot0
  6682 ;;		_clear_cgram
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text37
  6687   0022E4                     __ptext37:
  6688                           	callstack 0
  6689   0022E4                     _d2command:
  6690                           	callstack 23
  6691                           
  6692                           ;incstack = 0
  6693                           ;d2command@d1 stored from wreg
  6694   0022E4  6E07               	movwf	d2command@d1^0,c
  6695                           
  6696                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6697   0022E6  0E00               	movlw	0
  6698   0022E8  6E08               	movwf	d2command@res^0,c
  6699                           
  6700                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6701   0022EA  EC49  F011         	call	_wait_status_ok	;wreg free
  6702   0022EE  06E8               	decf	wreg,f,c
  6703   0022F0  A4D8               	btfss	status,2,c
  6704   0022F2  D01E               	goto	i2l4404
  6705                           
  6706                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6707   0022F4  0E0C               	movlw	12
  6708   0022F6  EC13  F013         	call	_delai_us_char
  6709                           
  6710                           ;afficheur.c: 137: write_d_aff(d1);
  6711   0022FA  5007               	movf	d2command@d1^0,w,c
  6712   0022FC  EC4E  F013         	call	_write_d_aff
  6713                           
  6714                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6715   002300  EC49  F011         	call	_wait_status_ok	;wreg free
  6716   002304  06E8               	decf	wreg,f,c
  6717   002306  A4D8               	btfss	status,2,c
  6718   002308  D013               	goto	i2l4404
  6719                           
  6720                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6721   00230A  0E0C               	movlw	12
  6722   00230C  EC13  F013         	call	_delai_us_char
  6723                           
  6724                           ;afficheur.c: 141: write_d_aff(d2);
  6725   002310  5005               	movf	d2command@d2^0,w,c
  6726   002312  EC4E  F013         	call	_write_d_aff
  6727                           
  6728                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6729   002316  EC49  F011         	call	_wait_status_ok	;wreg free
  6730   00231A  06E8               	decf	wreg,f,c
  6731   00231C  A4D8               	btfss	status,2,c
  6732   00231E  D008               	goto	i2l4404
  6733                           
  6734                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6735   002320  0E0C               	movlw	12
  6736   002322  EC13  F013         	call	_delai_us_char
  6737                           
  6738                           ;afficheur.c: 145: write_c_aff(cmd);
  6739   002326  5006               	movf	d2command@cmd^0,w,c
  6740   002328  EC5B  F013         	call	_write_c_aff
  6741                           
  6742                           ;afficheur.c: 147: res=1;
  6743   00232C  0E01               	movlw	1
  6744   00232E  6E08               	movwf	d2command@res^0,c
  6745   002330                     i2l4404:
  6746                           
  6747                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6748   002330  5008               	movf	d2command@res^0,w,c
  6749   002332  0012               	return		;funcret
  6750   002334                     __end_of_d2command:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function _draw_string *****************
  6754 ;; Defined at:
  6755 ;;		line 242 in file "afficheur.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6758 ;;		 -> STR_31(3), STR_30(3), STR_29(3), STR_28(8), 
  6759 ;;		 -> STR_27(14), STR_26(29), STR_25(4), STR_24(3), 
  6760 ;;		 -> STR_23(5), STR_22(5), STR_21(7), STR_20(5), 
  6761 ;;		 -> STR_19(12), STR_18(12), STR_17(6), STR_16(7), 
  6762 ;;		 -> STR_15(9), STR_14(21), STR_13(7), STR_12(10), 
  6763 ;;		 -> STR_11(9), STR_10(6), STR_9(13), STR_8(11), 
  6764 ;;		 -> STR_7(7), STR_6(6), STR_5(6), STR_4(8), 
  6765 ;;		 -> RAM(3861), STR_3(6), STR_2(4), STR_1(8), 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;		None
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  1    wreg      void 
  6770 ;; Registers used:
  6771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6781 ;;Total ram usage:        2 bytes
  6782 ;; Hardware stack levels used: 1
  6783 ;; Hardware stack levels required when called: 3
  6784 ;; This function calls:
  6785 ;;		_d1command
  6786 ;; This function is called by:
  6787 ;;		_tache1
  6788 ;;		_charger
  6789 ;;		_vide
  6790 ;;		_marche
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           	psect	text38
  6795   001F9E                     __ptext38:
  6796                           	callstack 0
  6797   001F9E                     _draw_string:
  6798                           	callstack 23
  6799                           
  6800                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6801                           
  6802                           ;incstack = 0
  6803   001F9E  D01C               	goto	i2l4520
  6804   001FA0                     i2l1406:
  6805                           
  6806                           ;afficheur.c: 247: __nop();
  6807   001FA0  F000               	nop	
  6808   001FA2                     i2l4516:
  6809   001FA2  0EC0               	movlw	192
  6810   001FA4  6E05               	movwf	d1command@cmd^0,c
  6811   001FA6  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6812   001FAA  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6813   001FAE  0E00               	movlw	low (__smallconst shr (0+16))
  6814   001FB0  6EF8               	movwf	tblptru,c
  6815   001FB2  0E0F               	movlw	(high __ramtop+-1)
  6816   001FB4  64F7               	cpfsgt	tblptrh,c
  6817   001FB6  D003               	bra	i2u236_47
  6818   001FB8  0008               	tblrd		*
  6819   001FBA  50F5               	movf	tablat,w,c
  6820   001FBC  D005               	bra	i2u236_40
  6821   001FBE                     i2u236_47:
  6822   001FBE  CFF6 FFE9          	movff	tblptrl,fsr0l
  6823   001FC2  CFF7 FFEA          	movff	tblptrh,fsr0h
  6824   001FC6  50EF               	movf	indf0,w,c
  6825   001FC8                     i2u236_40:
  6826   001FC8  0FE0               	addlw	224
  6827   001FCA  EC2B  F012         	call	_d1command
  6828   001FCE  0900               	iorlw	0
  6829   001FD0  B4D8               	btfsc	status,2,c
  6830   001FD2  D7E6               	goto	i2l1406
  6831                           
  6832                           ;afficheur.c: 248: tableau++;
  6833   001FD4  4A08               	infsnz	draw_string@tableau^0,f,c
  6834   001FD6  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6835   001FD8                     i2l4520:
  6836   001FD8  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6837   001FDC  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6838   001FE0  0E00               	movlw	low (__smallconst shr (0+16))
  6839   001FE2  6EF8               	movwf	tblptru,c
  6840   001FE4  0E0F               	movlw	(high __ramtop+-1)
  6841   001FE6  64F7               	cpfsgt	tblptrh,c
  6842   001FE8  D003               	bra	i2u238_47
  6843   001FEA  0008               	tblrd		*
  6844   001FEC  50F5               	movf	tablat,w,c
  6845   001FEE  D005               	bra	i2u238_40
  6846   001FF0                     i2u238_47:
  6847   001FF0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6848   001FF4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6849   001FF8  50EF               	movf	indf0,w,c
  6850   001FFA                     i2u238_40:
  6851   001FFA  0900               	iorlw	0
  6852   001FFC  B4D8               	btfsc	status,2,c
  6853   001FFE  0012               	return	
  6854   002000  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6855   002004  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6856   002008  0E00               	movlw	low (__smallconst shr (0+16))
  6857   00200A  6EF8               	movwf	tblptru,c
  6858   00200C  0E0F               	movlw	(high __ramtop+-1)
  6859   00200E  64F7               	cpfsgt	tblptrh,c
  6860   002010  D003               	bra	i2u240_47
  6861   002012  0008               	tblrd		*
  6862   002014  50F5               	movf	tablat,w,c
  6863   002016  D005               	bra	i2u240_40
  6864   002018                     i2u240_47:
  6865   002018  CFF6 FFE9          	movff	tblptrl,fsr0l
  6866   00201C  CFF7 FFEA          	movff	tblptrh,fsr0h
  6867   002020  50EF               	movf	indf0,w,c
  6868   002022                     i2u240_40:
  6869   002022  0900               	iorlw	0
  6870   002024  B4D8               	btfsc	status,2,c
  6871   002026  0012               	return	
  6872   002028  D7BC               	goto	i2l4516
  6873   00202A                     __end_of_draw_string:
  6874                           	callstack 0
  6875                           
  6876 ;; *************** function _d1command *****************
  6877 ;; Defined at:
  6878 ;;		line 106 in file "afficheur.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  d1              1    wreg     unsigned char 
  6881 ;;  cmd             1    4[COMRAM] unsigned char 
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  d1              1    5[COMRAM] unsigned char 
  6884 ;;  res             1    6[COMRAM] unsigned char 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      unsigned char 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6894 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;Total ram usage:        3 bytes
  6899 ;; Hardware stack levels used: 1
  6900 ;; Hardware stack levels required when called: 2
  6901 ;; This function calls:
  6902 ;;		_delai_us_char
  6903 ;;		_wait_status_ok
  6904 ;;		_write_c_aff
  6905 ;;		_write_d_aff
  6906 ;; This function is called by:
  6907 ;;		_initialisation_afficheur
  6908 ;;		_draw_char
  6909 ;;		_draw_string
  6910 ;;		_draw_hex8
  6911 ;;		_draw_dec8
  6912 ;;		_clear_text
  6913 ;;		_clear_graphics
  6914 ;;		_clear_cgram
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text39
  6919   002456                     __ptext39:
  6920                           	callstack 0
  6921   002456                     _d1command:
  6922                           	callstack 23
  6923                           
  6924                           ;incstack = 0
  6925                           ;d1command@d1 stored from wreg
  6926   002456  6E06               	movwf	d1command@d1^0,c
  6927                           
  6928                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6929   002458  0E00               	movlw	0
  6930   00245A  6E07               	movwf	d1command@res^0,c
  6931                           
  6932                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6933   00245C  EC49  F011         	call	_wait_status_ok	;wreg free
  6934   002460  06E8               	decf	wreg,f,c
  6935   002462  A4D8               	btfss	status,2,c
  6936   002464  D013               	goto	i2l4378
  6937                           
  6938                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6939   002466  0E0C               	movlw	12
  6940   002468  EC13  F013         	call	_delai_us_char
  6941                           
  6942                           ;afficheur.c: 115: write_d_aff(d1);
  6943   00246C  5006               	movf	d1command@d1^0,w,c
  6944   00246E  EC4E  F013         	call	_write_d_aff
  6945                           
  6946                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6947   002472  EC49  F011         	call	_wait_status_ok	;wreg free
  6948   002476  06E8               	decf	wreg,f,c
  6949   002478  A4D8               	btfss	status,2,c
  6950   00247A  D008               	goto	i2l4378
  6951                           
  6952                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6953   00247C  0E0C               	movlw	12
  6954   00247E  EC13  F013         	call	_delai_us_char
  6955                           
  6956                           ;afficheur.c: 119: write_c_aff(cmd);
  6957   002482  5005               	movf	d1command@cmd^0,w,c
  6958   002484  EC5B  F013         	call	_write_c_aff
  6959                           
  6960                           ;afficheur.c: 121: res=1;
  6961   002488  0E01               	movlw	1
  6962   00248A  6E07               	movwf	d1command@res^0,c
  6963   00248C                     i2l4378:
  6964                           
  6965                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6966   00248C  5007               	movf	d1command@res^0,w,c
  6967   00248E  0012               	return		;funcret
  6968   002490                     __end_of_d1command:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _write_d_aff *****************
  6972 ;; Defined at:
  6973 ;;		line 4 in file "afficheur.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  data            1    wreg     unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  data            1    0[COMRAM] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;                  1    wreg      void 
  6980 ;; Registers used:
  6981 ;;		wreg, status,2
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6991 ;;Total ram usage:        1 bytes
  6992 ;; Hardware stack levels used: 1
  6993 ;; This function calls:
  6994 ;;		Nothing
  6995 ;; This function is called by:
  6996 ;;		_d1command
  6997 ;;		_d2command
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text40
  7002   00269C                     __ptext40:
  7003                           	callstack 0
  7004   00269C                     _write_d_aff:
  7005                           	callstack 24
  7006                           
  7007                           ;incstack = 0
  7008                           ;write_d_aff@data stored from wreg
  7009   00269C  6E01               	movwf	write_d_aff@data^0,c
  7010                           
  7011                           ;afficheur.c: 6: LATH=data;
  7012   00269E  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  7013                           
  7014                           ;afficheur.c: 7: TRISH=0x00;
  7015   0026A2  0E00               	movlw	0
  7016   0026A4  6E99               	movwf	153,c	;volatile
  7017                           
  7018                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  7019   0026A6  9091               	bcf	145,0,c	;volatile
  7020                           
  7021                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  7022   0026A8  9691               	bcf	145,3,c	;volatile
  7023                           
  7024                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  7025   0026AA  9491               	bcf	145,2,c	;volatile
  7026                           
  7027                           ;afficheur.c: 11: __nop();
  7028   0026AC  F000               	nop	
  7029                           
  7030                           ;afficheur.c: 12: __nop();
  7031   0026AE  F000               	nop	
  7032                           
  7033                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  7034   0026B0  8491               	bsf	145,2,c	;volatile
  7035                           
  7036                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  7037   0026B2  8691               	bsf	145,3,c	;volatile
  7038   0026B4  0012               	return		;funcret
  7039   0026B6                     __end_of_write_d_aff:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function _write_c_aff *****************
  7043 ;; Defined at:
  7044 ;;		line 17 in file "afficheur.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  command         1    wreg     unsigned char 
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;  command         1    0[COMRAM] unsigned char 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  1    wreg      void 
  7051 ;; Registers used:
  7052 ;;		wreg, status,2
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;Total ram usage:        1 bytes
  7063 ;; Hardware stack levels used: 1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_command
  7068 ;;		_d1command
  7069 ;;		_d2command
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text41
  7074   0026B6                     __ptext41:
  7075                           	callstack 0
  7076   0026B6                     _write_c_aff:
  7077                           	callstack 24
  7078                           
  7079                           ;incstack = 0
  7080                           ;write_c_aff@command stored from wreg
  7081   0026B6  6E01               	movwf	write_c_aff@command^0,c
  7082                           
  7083                           ;afficheur.c: 19: LATH=command;
  7084   0026B8  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  7085                           
  7086                           ;afficheur.c: 20: TRISH=0x00;
  7087   0026BC  0E00               	movlw	0
  7088   0026BE  6E99               	movwf	153,c	;volatile
  7089                           
  7090                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  7091   0026C0  8091               	bsf	145,0,c	;volatile
  7092                           
  7093                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  7094   0026C2  9691               	bcf	145,3,c	;volatile
  7095                           
  7096                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  7097   0026C4  9491               	bcf	145,2,c	;volatile
  7098                           
  7099                           ;afficheur.c: 24: __nop();
  7100   0026C6  F000               	nop	
  7101                           
  7102                           ;afficheur.c: 25: __nop();
  7103   0026C8  F000               	nop	
  7104                           
  7105                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  7106   0026CA  8491               	bsf	145,2,c	;volatile
  7107                           
  7108                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  7109   0026CC  8691               	bsf	145,3,c	;volatile
  7110   0026CE  0012               	return		;funcret
  7111   0026D0                     __end_of_write_c_aff:
  7112                           	callstack 0
  7113                           
  7114 ;; *************** function _wait_status_ok *****************
  7115 ;; Defined at:
  7116 ;;		line 53 in file "afficheur.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  res             1    3[COMRAM] unsigned char 
  7121 ;;  status          1    2[COMRAM] unsigned char 
  7122 ;;  err             1    1[COMRAM] unsigned char 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  1    wreg      unsigned char 
  7125 ;; Registers used:
  7126 ;;		wreg, status,2, status,0, cstack
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;Total ram usage:        3 bytes
  7137 ;; Hardware stack levels used: 1
  7138 ;; Hardware stack levels required when called: 1
  7139 ;; This function calls:
  7140 ;;		_delai_us_char
  7141 ;; This function is called by:
  7142 ;;		_command
  7143 ;;		_d1command
  7144 ;;		_d2command
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text42
  7149   002292                     __ptext42:
  7150                           	callstack 0
  7151   002292                     _wait_status_ok:
  7152                           	callstack 23
  7153                           
  7154                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  7155                           
  7156                           ;incstack = 0
  7157   002292  0E00               	movlw	0
  7158   002294  6E02               	movwf	wait_status_ok@err^0,c
  7159                           
  7160                           ;afficheur.c: 58: res=2;
  7161   002296  0E02               	movlw	2
  7162   002298  D01E               	goto	L7
  7163   00229A                     i2l1356:
  7164                           
  7165                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  7166   00229A  6899               	setf	153,c	;volatile
  7167                           
  7168                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  7169   00229C  8091               	bsf	145,0,c	;volatile
  7170                           
  7171                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  7172   00229E  9691               	bcf	145,3,c	;volatile
  7173                           
  7174                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  7175   0022A0  9291               	bcf	145,1,c	;volatile
  7176                           
  7177                           ;afficheur.c: 65: __nop();
  7178   0022A2  F000               	nop	
  7179                           
  7180                           ;afficheur.c: 66: status=PORTH;
  7181   0022A4  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  7182                           
  7183                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  7184   0022A8  8291               	bsf	145,1,c	;volatile
  7185                           
  7186                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  7187   0022AA  8691               	bsf	145,3,c	;volatile
  7188                           
  7189                           ;afficheur.c: 70: status=(status&0x03);
  7190   0022AC  5003               	movf	wait_status_ok@status^0,w,c
  7191   0022AE  0B03               	andlw	3
  7192   0022B0  6E03               	movwf	wait_status_ok@status^0,c
  7193                           
  7194                           ;afficheur.c: 71: if (status!=0x03)
  7195   0022B2  0E03               	movlw	3
  7196   0022B4  1803               	xorwf	wait_status_ok@status^0,w,c
  7197   0022B6  B4D8               	btfsc	status,2,c
  7198   0022B8  D00D               	goto	i2l2688
  7199                           
  7200                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  7201   0022BA  2A02               	incf	wait_status_ok@err^0,f,c
  7202                           
  7203                           ;afficheur.c: 74: delai_us_char(12);
  7204   0022BC  0E0C               	movlw	12
  7205   0022BE  EC13  F013         	call	_delai_us_char
  7206                           
  7207                           ;afficheur.c: 75: if (err>=250)
  7208   0022C2  0EF9               	movlw	249
  7209   0022C4  6402               	cpfsgt	wait_status_ok@err^0,c
  7210   0022C6  D008               	goto	i2l2690
  7211                           
  7212                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  7213   0022C8  9EF2               	bcf	242,7,c	;volatile
  7214                           
  7215                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  7216   0022CA  948B               	bcf	139,2,c	;volatile
  7217   0022CC  828B               	bsf	139,1,c	;volatile
  7218   0022CE  808F               	bsf	143,0,c	;volatile
  7219                           
  7220                           ;afficheur.c: 79: res=0;
  7221   0022D0  0E00               	movlw	0
  7222   0022D2  D001               	goto	L7
  7223   0022D4                     i2l2688:
  7224                           
  7225                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  7226   0022D4  0E01               	movlw	1
  7227   0022D6                     L7:
  7228   0022D6  6E04               	movwf	wait_status_ok@res^0,c
  7229   0022D8                     i2l2690:
  7230   0022D8  0E02               	movlw	2
  7231   0022DA  1804               	xorwf	wait_status_ok@res^0,w,c
  7232   0022DC  B4D8               	btfsc	status,2,c
  7233   0022DE  D7DD               	goto	i2l1356
  7234                           
  7235                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  7236   0022E0  5004               	movf	wait_status_ok@res^0,w,c
  7237   0022E2  0012               	return		;funcret
  7238   0022E4                     __end_of_wait_status_ok:
  7239                           	callstack 0
  7240                           
  7241 ;; *************** function _delai_us_char *****************
  7242 ;; Defined at:
  7243 ;;		line 154 in file "afficheur.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  ucdelai         1    wreg     unsigned char 
  7246 ;; Auto vars:     Size  Location     Type
  7247 ;;  ucdelai         1    0[COMRAM] unsigned char 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, status,2, status,0
  7252 ;; Tracked objects:
  7253 ;;		On entry : 0/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;Total ram usage:        1 bytes
  7262 ;; Hardware stack levels used: 1
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_wait_status_ok
  7267 ;;		_command
  7268 ;;		_d1command
  7269 ;;		_d2command
  7270 ;;		_initialisation_afficheur
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text43
  7275   002626                     __ptext43:
  7276                           	callstack 0
  7277   002626                     _delai_us_char:
  7278                           	callstack 23
  7279                           
  7280                           ;incstack = 0
  7281                           ;delai_us_char@ucdelai stored from wreg
  7282   002626  6E01               	movwf	delai_us_char@ucdelai^0,c
  7283                           
  7284                           ;afficheur.c: 157: while (ucdelai>0)
  7285   002628  D00B               	goto	i2l2636
  7286   00262A                     i2l1380:
  7287                           
  7288                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  7289   00262A  F000               	nop	
  7290   00262C  F000               	nop	
  7291   00262E  F000               	nop	
  7292   002630  F000               	nop	
  7293   002632  F000               	nop	
  7294   002634  F000               	nop	
  7295   002636  F000               	nop	
  7296   002638  F000               	nop	
  7297   00263A  F000               	nop	
  7298   00263C  F000               	nop	
  7299                           
  7300                           ;afficheur.c: 160: ucdelai--;
  7301   00263E  0601               	decf	delai_us_char@ucdelai^0,f,c
  7302   002640                     i2l2636:
  7303   002640  5001               	movf	delai_us_char@ucdelai^0,w,c
  7304   002642  B4D8               	btfsc	status,2,c
  7305   002644  0012               	return	
  7306   002646  D7F1               	goto	i2l1380
  7307   002648                     __end_of_delai_us_char:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _Conversion *****************
  7311 ;; Defined at:
  7312 ;;		line 493 in file "afficheur.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  a               2   14[COMRAM] unsigned int 
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  valeur_conve    2   18[COMRAM] int 
  7317 ;;  valeur_lue      2   16[COMRAM] int 
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  2   14[COMRAM] int 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7328 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;Total ram usage:        6 bytes
  7332 ;; Hardware stack levels used: 1
  7333 ;; Hardware stack levels required when called: 1
  7334 ;; This function calls:
  7335 ;;		___awdiv
  7336 ;;		___wmul
  7337 ;; This function is called by:
  7338 ;;		_tache1
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text44
  7343   002416                     __ptext44:
  7344                           	callstack 0
  7345   002416                     _Conversion:
  7346                           	callstack 26
  7347                           
  7348                           ;afficheur.c: 494: int valeur_lue = a;
  7349                           
  7350                           ;incstack = 0
  7351   002416  C00F  F011         	movff	Conversion@a,Conversion@valeur_lue
  7352   00241A  C010  F012         	movff	Conversion@a+1,Conversion@valeur_lue+1
  7353                           
  7354                           ;afficheur.c: 495: int valeur_convertie = (valeur_lue * 100) / 255;
  7355   00241E  C011  F001         	movff	Conversion@valeur_lue,___wmul@multiplier
  7356   002422  C012  F002         	movff	Conversion@valeur_lue+1,___wmul@multiplier+1
  7357   002426  0E00               	movlw	0
  7358   002428  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7359   00242A  0E64               	movlw	100
  7360   00242C  6E03               	movwf	___wmul@multiplicand^0,c
  7361   00242E  ECDE  F012         	call	___wmul	;wreg free
  7362   002432  C001  F007         	movff	?___wmul,___awdiv@dividend
  7363   002436  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  7364   00243A  0E00               	movlw	0
  7365   00243C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  7366   00243E  6809               	setf	___awdiv@divisor^0,c
  7367   002440  EC15  F010         	call	___awdiv	;wreg free
  7368   002444  C007  F013         	movff	?___awdiv,Conversion@valeur_convertie
  7369   002448  C008  F014         	movff	?___awdiv+1,Conversion@valeur_convertie+1
  7370                           
  7371                           ;afficheur.c: 497: return valeur_convertie;
  7372   00244C  C013  F00F         	movff	Conversion@valeur_convertie,?_Conversion
  7373   002450  C014  F010         	movff	Conversion@valeur_convertie+1,?_Conversion+1
  7374   002454  0012               	return		;funcret
  7375   002456                     __end_of_Conversion:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function ___wmul *****************
  7379 ;; Defined at:
  7380 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  multiplier      2    0[COMRAM] unsigned int 
  7383 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  product         2    4[COMRAM] unsigned int 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  2    0[COMRAM] unsigned int 
  7388 ;; Registers used:
  7389 ;;		wreg, status,2, status,0, prodl, prodh
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;Total ram usage:        6 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; This function calls:
  7402 ;;		Nothing
  7403 ;; This function is called by:
  7404 ;;		_Conversion
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text45
  7409   0025BC                     __ptext45:
  7410                           	callstack 0
  7411   0025BC                     ___wmul:
  7412                           	callstack 26
  7413                           
  7414                           ;incstack = 0
  7415   0025BC  5001               	movf	___wmul@multiplier^0,w,c
  7416   0025BE  0203               	mulwf	___wmul@multiplicand^0,c
  7417   0025C0  CFF3 F005          	movff	prodl,___wmul@product
  7418   0025C4  CFF4 F006          	movff	prodh,___wmul@product+1
  7419   0025C8  5001               	movf	___wmul@multiplier^0,w,c
  7420   0025CA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7421   0025CC  50F3               	movf	243,w,c
  7422   0025CE  2606               	addwf	(___wmul@product+1)^0,f,c
  7423   0025D0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7424   0025D2  0203               	mulwf	___wmul@multiplicand^0,c
  7425   0025D4  50F3               	movf	243,w,c
  7426   0025D6  2606               	addwf	(___wmul@product+1)^0,f,c
  7427   0025D8  C005  F001         	movff	___wmul@product,?___wmul
  7428   0025DC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7429   0025E0  0012               	return		;funcret
  7430   0025E2                     __end_of___wmul:
  7431                           	callstack 0
  7432                           
  7433 ;; *************** function ___awdiv *****************
  7434 ;; Defined at:
  7435 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  dividend        2    6[COMRAM] int 
  7438 ;;  divisor         2    8[COMRAM] int 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  quotient        2   12[COMRAM] int 
  7441 ;;  sign            1   11[COMRAM] unsigned char 
  7442 ;;  counter         1   10[COMRAM] unsigned char 
  7443 ;; Return value:  Size  Location     Type
  7444 ;;                  2    6[COMRAM] int 
  7445 ;; Registers used:
  7446 ;;		wreg, status,2, status,0
  7447 ;; Tracked objects:
  7448 ;;		On entry : 0/0
  7449 ;;		On exit  : 0/0
  7450 ;;		Unchanged: 0/0
  7451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7453 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7455 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;Total ram usage:        8 bytes
  7457 ;; Hardware stack levels used: 1
  7458 ;; This function calls:
  7459 ;;		Nothing
  7460 ;; This function is called by:
  7461 ;;		_draw_dec8
  7462 ;;		_plot1
  7463 ;;		_plot0
  7464 ;;		_Conversion
  7465 ;; This function uses a non-reentrant model
  7466 ;;
  7467                           
  7468                           	psect	text46
  7469   00202A                     __ptext46:
  7470                           	callstack 0
  7471   00202A                     ___awdiv:
  7472                           	callstack 26
  7473                           
  7474                           ;incstack = 0
  7475   00202A  0E00               	movlw	0
  7476   00202C  6E0C               	movwf	___awdiv@sign^0,c
  7477   00202E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7478   002030  D006               	goto	i2l4416
  7479   002032  6C09               	negf	___awdiv@divisor^0,c
  7480   002034  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  7481   002036  B0D8               	btfsc	status,0,c
  7482   002038  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  7483   00203A  0E01               	movlw	1
  7484   00203C  6E0C               	movwf	___awdiv@sign^0,c
  7485   00203E                     i2l4416:
  7486   00203E  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  7487   002040  D006               	goto	i2l4422
  7488   002042  6C07               	negf	___awdiv@dividend^0,c
  7489   002044  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  7490   002046  B0D8               	btfsc	status,0,c
  7491   002048  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  7492   00204A  0E01               	movlw	1
  7493   00204C  1A0C               	xorwf	___awdiv@sign^0,f,c
  7494   00204E                     i2l4422:
  7495   00204E  0E00               	movlw	0
  7496   002050  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  7497   002052  0E00               	movlw	0
  7498   002054  6E0D               	movwf	___awdiv@quotient^0,c
  7499   002056  5009               	movf	___awdiv@divisor^0,w,c
  7500   002058  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  7501   00205A  B4D8               	btfsc	status,2,c
  7502   00205C  D01C               	goto	i2l4444
  7503   00205E  0E01               	movlw	1
  7504   002060  6E0B               	movwf	___awdiv@counter^0,c
  7505   002062  D004               	goto	i2l4430
  7506   002064                     i2l4428:
  7507   002064  90D8               	bcf	status,0,c
  7508   002066  3609               	rlcf	___awdiv@divisor^0,f,c
  7509   002068  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  7510   00206A  2A0B               	incf	___awdiv@counter^0,f,c
  7511   00206C                     i2l4430:
  7512   00206C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7513   00206E  D7FA               	goto	i2l4428
  7514   002070                     i2u221_40:
  7515   002070  90D8               	bcf	status,0,c
  7516   002072  360D               	rlcf	___awdiv@quotient^0,f,c
  7517   002074  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  7518   002076  5009               	movf	___awdiv@divisor^0,w,c
  7519   002078  5C07               	subwf	___awdiv@dividend^0,w,c
  7520   00207A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7521   00207C  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  7522   00207E  A0D8               	btfss	status,0,c
  7523   002080  D005               	goto	i2l4440
  7524   002082  5009               	movf	___awdiv@divisor^0,w,c
  7525   002084  5E07               	subwf	___awdiv@dividend^0,f,c
  7526   002086  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7527   002088  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  7528   00208A  800D               	bsf	___awdiv@quotient^0,0,c
  7529   00208C                     i2l4440:
  7530   00208C  90D8               	bcf	status,0,c
  7531   00208E  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  7532   002090  3209               	rrcf	___awdiv@divisor^0,f,c
  7533   002092  2E0B               	decfsz	___awdiv@counter^0,f,c
  7534   002094  D7ED               	goto	i2u221_40
  7535   002096                     i2l4444:
  7536   002096  500C               	movf	___awdiv@sign^0,w,c
  7537   002098  B4D8               	btfsc	status,2,c
  7538   00209A  D004               	goto	i2l4448
  7539   00209C  6C0D               	negf	___awdiv@quotient^0,c
  7540   00209E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  7541   0020A0  B0D8               	btfsc	status,0,c
  7542   0020A2  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  7543   0020A4                     i2l4448:
  7544   0020A4  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  7545   0020A8  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  7546   0020AC  0012               	return		;funcret
  7547   0020AE                     __end_of___awdiv:
  7548                           	callstack 0
  7549                           
  7550                           	psect	text47
  7551   000000                     __ptext47:
  7552                           	callstack 0
  7553                           
  7554                           	psect	rparam
  7555   000000                     
  7556                           	psect	temp
  7557   000029                     btemp:
  7558                           	callstack 0
  7559   000029                     	ds	12
  7560   000000                     wtemp0	set	btemp
  7561   000000                     wtemp1	set	btemp+2
  7562   000000                     wtemp2	set	btemp+4
  7563   000000                     wtemp3	set	btemp+6
  7564   000000                     wtemp4	set	btemp+8
  7565   000000                     wtemp5	set	btemp+10
  7566   000000                     wtemp8	set	btemp+1
  7567   000000                     ttemp0	set	btemp
  7568   000000                     ttemp1	set	btemp+3
  7569   000000                     ttemp2	set	btemp+6
  7570   000000                     ttemp3	set	btemp+9
  7571   000000                     ttemp5	set	btemp+1
  7572   000000                     ttemp6	set	btemp+4
  7573   000000                     ttemp7	set	btemp+8
  7574   000000                     ltemp0	set	btemp
  7575   000000                     ltemp1	set	btemp+4
  7576   000000                     ltemp2	set	btemp+8
  7577   000000                     lltemp0	set	btemp
  7578                           
  7579                           	psect	idloc
  7580                           
  7581                           ;Config register IDLOC0 @ 0x200000
  7582                           ;	unspecified, using default values
  7583   200000                     	org	2097152
  7584   200000  FF                 	db	255
  7585                           
  7586                           ;Config register IDLOC1 @ 0x200001
  7587                           ;	unspecified, using default values
  7588   200001                     	org	2097153
  7589   200001  FF                 	db	255
  7590                           
  7591                           ;Config register IDLOC2 @ 0x200002
  7592                           ;	unspecified, using default values
  7593   200002                     	org	2097154
  7594   200002  FF                 	db	255
  7595                           
  7596                           ;Config register IDLOC3 @ 0x200003
  7597                           ;	unspecified, using default values
  7598   200003                     	org	2097155
  7599   200003  FF                 	db	255
  7600                           
  7601                           ;Config register IDLOC4 @ 0x200004
  7602                           ;	unspecified, using default values
  7603   200004                     	org	2097156
  7604   200004  FF                 	db	255
  7605                           
  7606                           ;Config register IDLOC5 @ 0x200005
  7607                           ;	unspecified, using default values
  7608   200005                     	org	2097157
  7609   200005  FF                 	db	255
  7610                           
  7611                           ;Config register IDLOC6 @ 0x200006
  7612                           ;	unspecified, using default values
  7613   200006                     	org	2097158
  7614   200006  FF                 	db	255
  7615                           
  7616                           ;Config register IDLOC7 @ 0x200007
  7617                           ;	unspecified, using default values
  7618   200007                     	org	2097159
  7619   200007  FF                 	db	255
  7620                           
  7621                           	psect	config
  7622                           
  7623                           ;Config register CONFIG1L @ 0x300000
  7624                           ;	VREG Sleep Enable bit
  7625                           ;	RETEN = ON, Enabled
  7626                           ;	LF-INTOSC Low-power Enable bit
  7627                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  7628                           ;	SOSC Power Selection and mode Configuration bits
  7629                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  7630                           ;	Extended Instruction Set
  7631                           ;	XINST = OFF, Disabled
  7632   300000                     	org	3145728
  7633   300000  15                 	db	21
  7634                           
  7635                           ;Config register CONFIG1H @ 0x300001
  7636                           ;	Oscillator
  7637                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  7638                           ;	PLL x4 Enable bit
  7639                           ;	PLLCFG = ON, Enabled
  7640                           ;	Fail-Safe Clock Monitor
  7641                           ;	FCMEN = OFF, Disabled
  7642                           ;	Internal External Oscillator Switch Over Mode
  7643                           ;	IESO = OFF, Disabled
  7644   300001                     	org	3145729
  7645   300001  13                 	db	19
  7646                           
  7647                           ;Config register CONFIG2L @ 0x300002
  7648                           ;	Power Up Timer
  7649                           ;	PWRTEN = OFF, Disabled
  7650                           ;	Brown Out Detect
  7651                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  7652                           ;	Brown-out Reset Voltage bits
  7653                           ;	BORV = 0, 3.0V
  7654                           ;	BORMV Power level
  7655                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  7656   300002                     	org	3145730
  7657   300002  61                 	db	97
  7658                           
  7659                           ;Config register CONFIG2H @ 0x300003
  7660                           ;	Watchdog Timer
  7661                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  7662                           ;	Watchdog Postscaler
  7663                           ;	WDTPS = 1, 1:1
  7664   300003                     	org	3145731
  7665   300003  00                 	db	0
  7666                           
  7667                           ;Config register CONFIG3L @ 0x300004
  7668                           ;	RTCC Clock Select
  7669                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  7670                           ;	External Address Shift bit
  7671                           ;	EASHFT = OFF, Address Shifting disabled
  7672                           ;	Address Bus Width Select bits
  7673                           ;	ABW = MM, 8-bit address bus
  7674                           ;	Data Bus Width
  7675                           ;	BW = 8, 8-bit external bus mode
  7676                           ;	External Bus Wait
  7677                           ;	WAIT = ON, Enabled
  7678   300004                     	org	3145732
  7679   300004  30                 	db	48
  7680                           
  7681                           ;Config register CONFIG3H @ 0x300005
  7682                           ;	CCP2 Mux
  7683                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  7684                           ;	ECCP Mux
  7685                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  7686                           ;	MSSP address masking
  7687                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  7688                           ;	Master Clear Enable
  7689                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  7690   300005                     	org	3145733
  7691   300005  80                 	db	128
  7692                           
  7693                           ;Config register CONFIG4L @ 0x300006
  7694                           ;	Stack Overflow Reset
  7695                           ;	STVREN = ON, Enabled
  7696                           ;	Boot Block Size
  7697                           ;	BBSIZ = BB1K, 1K word Boot Block size
  7698                           ;	Background Debug
  7699                           ;	DEBUG = OFF, Disabled
  7700   300006                     	org	3145734
  7701   300006  81                 	db	129
  7702                           
  7703                           ; Padding undefined space
  7704   300007                     	org	3145735
  7705   300007  FF                 	db	255
  7706                           
  7707                           ;Config register CONFIG5L @ 0x300008
  7708                           ;	Code Protect 00800-03FFF
  7709                           ;	CP0 = OFF, Disabled
  7710                           ;	Code Protect 04000-07FFF
  7711                           ;	CP1 = OFF, Disabled
  7712                           ;	Code Protect 08000-0BFFF
  7713                           ;	CP2 = OFF, Disabled
  7714                           ;	Code Protect 0C000-0FFFF
  7715                           ;	CP3 = OFF, Disabled
  7716                           ;	Code Protect 10000-13FFF
  7717                           ;	CP4 = OFF, Disabled
  7718                           ;	Code Protect 14000-17FFF
  7719                           ;	CP5 = OFF, Disabled
  7720                           ;	Code Protect 18000-1BFFF
  7721                           ;	CP6 = OFF, Disabled
  7722                           ;	Code Protect 1C000-1FFFF
  7723                           ;	CP7 = OFF, Disabled
  7724   300008                     	org	3145736
  7725   300008  FF                 	db	255
  7726                           
  7727                           ;Config register CONFIG5H @ 0x300009
  7728                           ;	Code Protect Boot
  7729                           ;	CPB = OFF, Disabled
  7730                           ;	Data EE Read Protect
  7731                           ;	CPD = OFF, Disabled
  7732   300009                     	org	3145737
  7733   300009  C0                 	db	192
  7734                           
  7735                           ;Config register CONFIG6L @ 0x30000A
  7736                           ;	Table Write Protect 00800-03FFF
  7737                           ;	WRT0 = OFF, Disabled
  7738                           ;	Table Write Protect 04000-07FFF
  7739                           ;	WRT1 = OFF, Disabled
  7740                           ;	Table Write Protect 08000-0BFFF
  7741                           ;	WRT2 = OFF, Disabled
  7742                           ;	Table Write Protect 0C000-0FFFF
  7743                           ;	WRT3 = OFF, Disabled
  7744                           ;	Table Write Protect 10000-13FFF
  7745                           ;	WRT4 = OFF, Disabled
  7746                           ;	Table Write Protect 14000-17FFF
  7747                           ;	WRT5 = OFF, Disabled
  7748                           ;	Table Write Protect 18000-1BFFF
  7749                           ;	WRT6 = OFF, Disabled
  7750                           ;	Table Write Protect 1C000-1FFFF
  7751                           ;	WRT7 = OFF, Disabled
  7752   30000A                     	org	3145738
  7753   30000A  FF                 	db	255
  7754                           
  7755                           ;Config register CONFIG6H @ 0x30000B
  7756                           ;	Config. Write Protect
  7757                           ;	WRTC = OFF, Disabled
  7758                           ;	Table Write Protect Boot
  7759                           ;	WRTB = OFF, Disabled
  7760                           ;	Data EE Write Protect
  7761                           ;	WRTD = OFF, Disabled
  7762   30000B                     	org	3145739
  7763   30000B  E0                 	db	224
  7764                           
  7765                           ;Config register CONFIG7L @ 0x30000C
  7766                           ;	Table Read Protect 00800-03FFF
  7767                           ;	EBRT0 = OFF, Disabled
  7768                           ;	Table Read Protect 04000-07FFF
  7769                           ;	EBRT1 = OFF, Disabled
  7770                           ;	Table Read Protect 08000-0BFFF
  7771                           ;	EBRT2 = OFF, Disabled
  7772                           ;	Table Read Protect 0C000-0FFFF
  7773                           ;	EBRT3 = OFF, Disabled
  7774                           ;	Table Read Protect 10000-13FFF
  7775                           ;	EBRT4 = OFF, Disabled
  7776                           ;	Table Read Protect 14000-17FFF
  7777                           ;	EBRT5 = OFF, Disabled
  7778                           ;	Table Read Protect 18000-1BFFF
  7779                           ;	EBRT6 = OFF, Disabled
  7780                           ;	Table Read Protect 1C000-1FFFF
  7781                           ;	EBRT7 = OFF, Disabled
  7782   30000C                     	org	3145740
  7783   30000C  FF                 	db	255
  7784                           
  7785                           ;Config register CONFIG7H @ 0x30000D
  7786                           ;	Table Read Protect Boot
  7787                           ;	EBRTB = OFF, Disabled
  7788   30000D                     	org	3145741
  7789   30000D  40                 	db	64
  7790                           tosu	equ	0xFFF
  7791                           tosh	equ	0xFFE
  7792                           tosl	equ	0xFFD
  7793                           stkptr	equ	0xFFC
  7794                           pclatu	equ	0xFFB
  7795                           pclath	equ	0xFFA
  7796                           pcl	equ	0xFF9
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           prodh	equ	0xFF4
  7802                           prodl	equ	0xFF3
  7803                           indf0	equ	0xFEF
  7804                           postinc0	equ	0xFEE
  7805                           postdec0	equ	0xFED
  7806                           preinc0	equ	0xFEC
  7807                           plusw0	equ	0xFEB
  7808                           fsr0h	equ	0xFEA
  7809                           fsr0l	equ	0xFE9
  7810                           wreg	equ	0xFE8
  7811                           indf1	equ	0xFE7
  7812                           postinc1	equ	0xFE6
  7813                           postdec1	equ	0xFE5
  7814                           preinc1	equ	0xFE4
  7815                           plusw1	equ	0xFE3
  7816                           fsr1h	equ	0xFE2
  7817                           fsr1l	equ	0xFE1
  7818                           bsr	equ	0xFE0
  7819                           indf2	equ	0xFDF
  7820                           postinc2	equ	0xFDE
  7821                           postdec2	equ	0xFDD
  7822                           preinc2	equ	0xFDC
  7823                           plusw2	equ	0xFDB
  7824                           fsr2h	equ	0xFDA
  7825                           fsr2l	equ	0xFD9
  7826                           status	equ	0xFD8

Data Sizes:
    Strings     243
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     40      52
    BANK0           120      1       1
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[3]), STR_28(CODE[8]), 
		 -> STR_27(CODE[14]), STR_26(CODE[29]), STR_25(CODE[4]), STR_24(CODE[3]), 
		 -> STR_23(CODE[5]), STR_22(CODE[5]), STR_21(CODE[7]), STR_20(CODE[5]), 
		 -> STR_19(CODE[12]), STR_18(CODE[12]), STR_17(CODE[6]), STR_16(CODE[7]), 
		 -> STR_15(CODE[9]), STR_14(CODE[21]), STR_13(CODE[7]), STR_12(CODE[10]), 
		 -> STR_11(CODE[9]), STR_10(CODE[6]), STR_9(CODE[13]), STR_8(CODE[11]), 
		 -> STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[8]), 
		 -> RAM(DATA[3861]), STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[8]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _fonction_d_interruption in COMRAM

    _fonction_d_interruption->_tache1
    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_clear_square
    _tache1->_draw_square
    _vide->_goto_lico
    _marche->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_square->_plot0
    _plot0->___awdiv
    _command->_wait_status_ok
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char
    _Conversion->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      49
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   72075
                                             28 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               3     3      0   70269
                                             26 COMRAM     2     2      0
                         _Conversion
                         _Diminution
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                       _clear_square
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                             _marche
                              _plot1
                               _vide
                       _vitesseAdmin
 ---------------------------------------------------------------------------------
 (4) _vitesseAdmin                                         9     7      2     244
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    7873
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _marche                                               2     2      0    8124
                                             14 COMRAM     2     2      0
                         _Diminution
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _Diminution                                           2     0      2     251
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    6248
                                             20 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4568
                                             14 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2393
                                             14 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_square                                         6     3      3    5184
                                             20 COMRAM     6     3      3
                              _plot0
 ---------------------------------------------------------------------------------
 (5) _plot0                                                6     5      1    4416
                                             14 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5555
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    7873
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    4335
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3538
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (4) _Conversion                                           6     4      2    1591
                                             14 COMRAM     6     4      2
                            ___awdiv
                             ___wmul
            _lecture_8bit_analogique (ARG)
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1060
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Conversion
       ___awdiv
         ___wmul (ARG)
       ___wmul
       _lecture_8bit_analogique (ARG)
     _Diminution
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_square
       _plot0
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _marche
       _Diminution
       _draw_string
       _goto_lico
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesseAdmin
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            78      0       0      64        0.0%
BITBANK0            78      0       0       4        0.0%
BANK0               78      1       1       5        0.8%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     28      34       1       62.7%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhll     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhl      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhlh      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      57        0.0%
DATA                 0      0      3B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 11 15:03:12 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 000C  
                                 _x1 000085                                   _x2 000087  
                                 _y1 000086                                   _tc 003C  
                ___wmul@multiplicand 0003                         ?_draw_square 0015  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0038                          Conversion@a 000F  
                       ___awmod@sign 0006                                  wreg 000FE8  
                         _TXSTA1bits 000FAC                        _stid_delai_us 26D0  
                               l1646 2600                                 l2950 25F0  
                               l2946 25E4                                 l2948 25EA  
                               l5940 267E                                 STR_1 108D  
                               STR_2 10E4                                 STR_3 10BF  
                               STR_4 1095                                 STR_5 10B9  
                               STR_6 102D                                 STR_7 10A4  
                               STR_8 1066                                 STR_9 1041  
                               _T0IE 007F95                                 _T0IF 007F92  
                               _LATH 000F90                                 _LATJ 000F91  
                               _TMR0 000FD6                                 _TEST 000081  
    __end_of_fonction_d_interruption 033C                                 _TOSH 000FFE  
                               _TOSL 000FFD                                 _WREG 000FE8  
                               _TOSU 000FFF                                 _TP_x 000067  
                               _TP_y 000068                                 _Init 25E2  
                   _FSR0H_TEMPORAIRE 000063                           _RXTX_libre 000080  
                               _main 2668                                 _fptr 0035  
                               _vide 2700                                 fsr0h 000FEA  
                               fsr1h 000FE2                                 indf0 000FEF  
                               fsr2h 000FDA                                 fsr0l 000FE9  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 0029  
                               prodh 000FF4                                 prodl 000FF3  
                               start 033C           ?_initialisation_du_systeme 0001  
                       ___param_bank 000000                     ??_wait_status_ok 0002  
                       _vitesseAdmin 1F10                     ?_lecture_normale 0003  
                              ?_main 0001                      __end_of___awdiv 20AE  
                              STR_10 10C5                                STR_11 107B  
                              STR_20 10D6                                STR_12 1071  
                              STR_21 10AB                                STR_13 109D  
                              STR_30 10EB                                STR_22 10D1  
                              STR_14 101E                                STR_31 10E8  
                              STR_23 10DB                                STR_15 1084  
                              STR_24 10F1                                STR_16 10B2  
                              STR_25 10E0                                STR_17 10CB  
                              STR_18 104E                                STR_26 1001  
                              STR_19 105A                                STR_27 1033  
                              STR_28 1095                      __end_of___awmod 211E  
                              STR_29 10EE                                ?_vide 0001  
                         _Diminution 2740                                _T0CON 000FD5  
                    ___awdiv@divisor 0009                         draw_dec8@dix 0013  
                              _FSR0H 000FEA                                _FSR1H 000FE2  
                              _FSR0L 000FE9                                _FSR2H 000FDA  
                              _FSR1L 000FE1                                _FSR2L 000FD9  
                    __end_of___lwdiv 2292                                i2l152 24E8  
                              i2l155 24F6                                i2l610 1888  
                              i2l605 1846                                i2l623 26EA  
                              i2l483 1462                                i2l900 1B5C  
                              i2l493 15C6                                i2l912 1B74  
                              i2l840 1AE4                                i2l906 1B68  
                              i2l924 1B8C                                i2l852 1AFC  
                              i2l918 1B80                                i2l870 1B20  
                              i2l846 1AF0                                i2l864 1B14  
                              i2l882 1B38                                i2l858 1B08  
                              i2l876 1B2C                      ___awdiv@counter 000B  
                              i2l894 1B50                                i2l888 1B44  
                              _PRODH 000FF4                                _PRODL 000FF3  
                              _PORTH 000F87                                _TRISH 000F99  
                              _TRISJ 000F9A                          _write_c_aff 26B6  
                        _write_d_aff 269C                      __end_of_charger 2730  
                    write_d_aff@data 0001                       ?_stid_delai_us 0001  
                    __end_of_command 269C                                _badge 000075  
               __end_of_clear_square 23CC                                _plot0 1D24  
                              _plot1 1C76                                _queue 000069  
                              tablat 000FF5                                ltemp0 0029  
                              ltemp1 002D                                ltemp2 0031  
                         _Conversion 2416                __end_of_delai_us_char 2648  
                              plusw1 000FE3                      _check_status_ok 2590  
                              ttemp0 0029                                ttemp1 002C  
                              ttemp2 002F                                ttemp3 0032  
                              ttemp5 002A                                ttemp6 002D  
                              ttemp7 0031                                status 000FD8  
                              wtemp0 0029                                wtemp1 002B  
                              wtemp2 002D                                wtemp3 002F  
                              wtemp4 0031                                wtemp5 0033  
                              wtemp8 002A        initialisation_du_systeme@temp 0088  
                    __initialization 2730                         __end_of_Init 2604  
         lecture_8bit_analogique@ret 0001                         __end_of_main 2682  
                       __end_of_vide 2718                               ??_main 0089  
                             ??_vide 000F                        __activetblptr 000003  
                   _valeur_convertie 000084                         draw_square@x 0019  
                       draw_square@y 001A                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             _ADRESH 000FC4                               _ADRESL 000FC3  
                             ?_plot0 000F                               ?_plot1 000F  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0007  
                      _n_octet_badge 00007F                        draw_dec8@cent 0012  
                             _MEMCON 000F26                               i2l1102 19B0  
                             i2l1030 1920                               i2l1114 19C8  
                             i2l1042 1938                               i2l1108 19BC  
                             i2l1060 195C                               i2l1036 192C  
                             i2l1054 1950                               i2l1072 1974  
                             i2l1048 1944                               i2l1090 1998  
                             i2l1066 1968                               i2l1084 198C  
                             i2l1406 1FA0                               i2l1422 21D4  
                             i2l1078 1980                               i2l1431 1EE2  
                             i2l1096 19A4                               i2l1417 21A8  
                             i2l1442 2228                               i2l1434 1EFC  
                             i2l1531 1F86                               i2l1380 262A  
                             i2l1356 229A                               i2l1428 1EC8  
                             i2l1388 1BEA                               i2l1548 2146  
                             i2l1398 251C                               i2l5110 12A6  
                             i2l2366 2288                               i2l5112 12B2  
                             i2l5122 12D8                               i2l1771 1E0E  
                             i2l2636 2640                               i2l4404 2330  
                             i2l4500 222A                               i2l1772 1E16  
                             _PCLATH 000FFA                               i2l1781 26D2  
                             i2l4430 206C                               i2l4422 204E  
                             i2l4510 2514                               i2l5150 1388  
                             i2l5310 18A8                               i2l1774 1E20  
                             i2l4440 208C                               i2l4416 203E  
                             i2l4520 1FD8                               i2l4512 251E  
                             i2l2904 25B4                               i2l5232 1510  
                             i2l5128 1304                               i2l2690 22D8  
                             i2l4506 250A                               i2l4602 1BD4  
                             i2l5154 139E                               i2l3802 1A8A  
                             i2l4428 2064                               i2l4444 2096  
                             i2l4516 1FA2                               i2l4460 20C2  
                             i2l4540 1CD2                               i2l4532 1CB2  
                             i2l4612 1BEC                               i2l5252 157E  
                             i2l5236 1526                               i2l5180 13F2  
                             i2l5148 1382                               i2l4470 20E4  
                             i2l4702 1EFE                               i2l4542 1CDA  
                             i2l4534 1CBA                               i2l5190 1426  
                             i2l5174 13E6                               i2l5158 13A4  
                             i2l5342 2402                               i2l4448 20A4  
                             i2l2688 22D4                               i2l4480 2106  
                             i2l4464 20CE                               i2l4560 1D70  
                             i2l4624 2546                               i2l4536 1CC2  
                             i2l4712 1F42                               i2l5264 15C8  
                             i2l5248 1568                               i2l5096 1254  
                             i2l4800 26F6                               i2l3816 1AB2  
                             i2l3760 1A20                               i2l5336 23F0  
                             i2l5344 240A                               _PCLATU 000FFB  
                             i2l4378 248C                               i2l4562 1D78  
                             i2l4570 1D90                               i2l4538 1CCA  
                             i2l4546 1CE2                               i2l4650 2352  
                             i2l5194 143C                               i2l3906 19D4  
                             i2l4810 1DEA                               i2l5522 0198  
                             i2l4484 2114                               i2l4476 20FC  
                             i2l4468 20DC                               i2l4564 1D80  
                             i2l4556 1D60                               i2l4652 2360  
                             i2l2964 24FA                               i2l4708 1F28  
                             i2l3916 19EC                               i2l4580 26DE  
                             i2l4494 21FC                               i2l4638 2576  
                             i2l4566 1D88                               i2l4558 1D68  
                             i2l4646 233C                               i2l4726 1F78  
                             i2l5198 1450                               i2l5294 1866  
                             i2l3766 1A2E                               i2l4760 2388  
                             i2l4656 2376                               i2l3784 1A5C  
                             i2l4498 2206                               i2l4754 21CC  
                             i2l4746 21A0                               i2l3778 1A4E  
                             i2l3866 1B98                               i2l4818 1E00  
                             i2l5378 0064                               i2l4772 23C2  
                             i2l4764 239E                               i2l4756 21D6  
                             i2l4748 21AA                               i2l4668 2158  
                             i2l3796 1A7C                               i2l4694 1ECA  
                             i2l4854 1E70                               i2l4784 264E  
                             i2l4768 23AC                               i2l4864 2256  
                             i2l4698 1EE4                               i2l4866 225E  
                             i2l4876 227E                               i2l5678 02DC  
                             _TABLAT 000FF5                        draw_dec8@unit 0010  
                             _RCSTA1 000FAB                           _Tick_Count 000071  
                             _SPBRG1 000FAF                     _FSR0L_TEMPORAIRE 000064  
                             _STATUS 000FD8                               _STKPTR 000FFC  
                             _TXREG1 000FAD                       clear_line@line 000F  
                             _TXSTA1 000FAC                               _Valeur 000083  
                             ___wmul 25BC                            ??___awdiv 000B  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _marche 211E                               _tache1 10F6  
                             _tache2 1824                               _tache3 19FE  
                             _tache4 1ADC                               _tache5 1918  
                             _tache6 23CC                            ??_charger 000F  
                   ___awdiv@quotient 000D                      ___awmod@divisor 0003  
                             isa$std 000001                      ___awmod@counter 0005  
                          ??_command 0005                          ?_Diminution 0001  
                    ??_stid_delai_us 0003                               lltemp0 0029  
                             plot0@x 0014                               plot0@y 000F  
                             plot1@x 0014                               plot1@y 000F  
                   __end_of_tp_delai 2700                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 25BC  
       lecture_normale@temps_attente 0005                          ?_Conversion 000F  
                     clear_square@x1 0018                       clear_square@x2 0016  
                     clear_square@y1 0015                       clear_square@y2 0017  
                         __accesstop 0060              __end_of__initialization 273A  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                         ___inthi_sp 0AAC                    __end_of_d1command 2490  
                  __end_of_d2command 2334                        __end_of_plot0 1DD2  
                      __end_of_plot1 1D24                              ??_plot0 0010  
                            ??_plot1 0010                        draw_square@x1 0018  
                      draw_square@x2 0016                        draw_square@y1 0015  
                      draw_square@y2 0017                         _W_TEMPORAIRE 000060  
                         __pnvCOMRAM 0035                       _clear_graphics 2560  
        ??_initialisation_du_systeme 0088                           _clear_line 2648  
                         _clear_text 2530             ?_fonction_d_interruption 0001  
                       _clear_square 2380                              ?___wmul 0001  
                            ?_marche 0001                              ?_tache1 0001  
                            ?_tache2 0001                              ?_tache3 0001  
                            ?_tache4 0001                              ?_tache5 0001  
                            ?_tache6 0001                         ?_write_c_aff 0001  
                     draw_dec8@octet 0011                         ?_write_d_aff 0001  
                            _TBLPTRH 000FF7                              _TBLPTRL 000FF6  
                            _TBLPTRU 000FF8             _initialisation_afficheur 1BAA  
                            _SPBRGH1 000FD4                     ?_check_status_ok 0001  
                  wait_status_ok@err 0002                    wait_status_ok@res 0004  
                        _Val_sem_cna 0040               __end_of_clear_graphics 2590  
                  stid_delai_us@isdu 0001                 lecture_normale@n_bit 0007  
               lecture_normale@octet 0008             _initialisation_des_ports 2490  
                          _DEMARRAGE 000065                              __Hparam 0000  
                            __Lparam 0000                            ?_tp_delai 0001  
                  __end_of_draw_dec8 1F10                    __end_of_draw_char 2530  
                  __end_of_draw_hex8 21E8                              ___awdiv 202A  
                            ___awmod 20AE                              ___lwdiv 2240  
                       __psmallconst 1000                              __pcinit 2730  
                            _charger 2718                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 2668  
                            __ptext1 15EC                              __ptext2 2490  
                            __ptext3 25E2                              __ptext5 23CC  
                            __ptext6 1DD2                              __ptext7 26D0  
                            __ptext8 1918                              __ptext9 1ADC  
                            _command 2682                            _T0CONbits 000FD5  
                 draw_string@tableau 0008            _initialisation_du_systeme 15EC  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 2626  
                  __end_of_goto_lico 2240                              _val_tos 003A  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 273A                              tache4@a 0001  
                            tache5@a 0001                              tache6@n 0009  
                    ?_clear_graphics 0001                          ?_clear_line 0001  
                        ?_clear_text 0001                           ??_tp_delai 0003  
                            postdec1 000FE5                              postinc1 000FE6  
               Conversion@valeur_lue 0011                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84                         ??_Diminution 0003  
            _lecture_8bit_analogique 24C8                            _TRISCbits 000F94  
                          _STKPTR_T1 000103                            _STKPTR_T2 000203  
                          _STKPTR_T3 000303                            _STKPTR_T4 000403  
                          _STKPTR_T5 000503                            _STKPTR_T6 000603  
                          _TRISDbits 000F95                            _TRISGbits 000F98  
                  clear_graphics@add 0009                         ??_Conversion 0011  
                         command@cmd 0005                           draw_dec8@c 0014  
         Conversion@valeur_convertie 0013                           draw_hex8@c 0009  
                 __end_of_Diminution 2750                   check_status_ok@res 0001  
             lecture_normale@n_octet 0006                       __end_of___wmul 25E2  
     lecture_8bit_analogique@channel 0002                            _d1command 2456  
                     __end_of_marche 218C                            _d2command 22E4  
                     __end_of_tache1 15EC                       __end_of_tache2 1918  
                     __end_of_tache3 1ADC                       __end_of_tache4 1BAA  
                     __end_of_tache5 19FE                       __end_of_tache6 2416  
                      ??_draw_square 0018                        ??_draw_string 000A  
                 __end_of_Conversion 2456               lecture_normale@stid_id 0003  
              __end_of_stid_delai_us 26E8                  start_initialization 2730  
                      vitesseAdmin@a 0001                        vitesseAdmin@b 0006  
                      vitesseAdmin@c 0008                    ??_lecture_normale 0005  
                      _delai_us_char 2626                             ??___wmul 0005  
                      ?_vitesseAdmin 0001                             ??_marche 000F  
                           ??_tache1 001B                             ??_tache2 0008  
                           ??_tache3 0001                             ??_tache4 0001  
                           ??_tache5 0001                             ??_tache6 0009  
         ??_initialisation_afficheur 0009            ??_lecture_8bit_analogique 0001  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                      clear_square@x 0019                        clear_square@y 001A  
                        __pbssCOMRAM 003C                        __pcstackBANK0 0088  
                __end_of_draw_square 2380           ??_initialisation_des_ports 0088  
                __end_of_draw_string 202A                       ?_delai_us_char 0001  
                   ___lwdiv@dividend 0001                            __pintcode 0008  
                     ??_vitesseAdmin 0003                             ?___awdiv 0007  
                           ?___awmod 0001                             ?___lwdiv 0001  
                           ?_charger 0001                    _pointeur_de_tache 000070  
                          _draw_dec8 1E74                            _draw_char 24FE  
                          _draw_hex8 218C                             ?_command 0001  
                     _wait_status_ok 2292                          __smallconst 1000  
                          _contexte1 000100                            _contexte2 000200  
                          _contexte3 000300                            _contexte4 000400  
                          _contexte5 000500                            _contexte6 000600  
                           _BAUDCON1 000F65                     goto_lico@colonne 0009  
                       _tache_active 00006F                          _PADCFG1bits 000F53  
                   ??_clear_graphics 0009                     ___lwdiv@quotient 0005  
                          _init_rxtx 2604                   write_c_aff@command 0001  
                          _goto_lico 21E8      __end_of_lecture_8bit_analogique 24FE  
                     ___wmul@product 0005                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 1824  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u221_40 2070                             i2u141_40 1AE8  
                           i2u151_40 1B24                             i2u143_40 1AF4  
                           i2u240_40 2022                             i2u240_47 2018  
                           i2u161_40 1B60                             i2u153_40 1B30  
                           i2u145_40 1B00                             i2u227_40 20E8  
                           i2u163_40 1B6C                             i2u155_40 1B3C  
                           i2u147_40 1B0C                             i2u323_47 128A  
                           i2u236_40 1FC8                             i2u180_40 1954  
                           i2u172_40 1924                             i2u236_47 1FBE  
                           i2u324_47 12E8                             i2u165_40 1B78  
                           i2u157_40 1B48                             i2u149_40 1B18  
                       ??_clear_line 000F                             i2u325_47 216E  
                           i2u238_40 1FFA                             i2u190_40 1990  
                           i2u182_40 1960                             i2u174_40 1930  
                           i2u238_47 1FF0                             i2u167_40 1B84  
                           i2u159_40 1B54                             i2u192_40 199C  
                           i2u184_40 196C                             i2u176_40 193C  
                           _PIR1bits 000F9E                             i2u290_40 1392  
                           i2u194_40 19A8                             i2u186_40 1978  
                           i2u178_40 1948                             i2u259_40 1F4E  
                           i2u196_40 19B4                             i2u188_40 1984  
                           i2u285_40 2262                             i2u198_40 19C0  
                       ??_clear_text 0009                             _POSTINC0 000FEE  
                           _POSTINC1 000FE6                    _STATUS_TEMPORAIRE 000061  
             __end_of_wait_status_ok 22E4                          ??_d1command 0006  
                         ?_draw_dec8 0001                           ?_draw_char 0001  
                        ??_d2command 0007                           ?_draw_hex8 0001  
                         _ADCON0bits 000FC2                    ___wmul@multiplier 0001  
                   clear_line@column 0010                          _draw_square 2334  
                        _draw_string 1F9E                         _Val_sem_rxtx 003F  
                           _TP_appui 000066                   __end_of_clear_line 2668  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 2560                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           _Personne 000082                             __Lrparam 0000  
   __end_of_initialisation_afficheur 1C76                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009              _fonction_d_interruption 0008  
                    _lecture_normale 1DD2                             _batterie 000074  
                    ___lwdiv@divisor 0003     __end_of_initialisation_des_ports 24C8  
                    ___lwdiv@counter 0007                             __ptext10 19FE  
                           __ptext11 1824                             __ptext20 1BAA  
                           __ptext12 26E8                             __ptext21 2590  
                           __ptext13 2240                             __ptext30 2682  
                           __ptext22 2604                             __ptext14 10F6  
                           __ptext31 20AE                             __ptext23 2334  
                           __ptext15 1F10                             __ptext40 269C  
                           __ptext32 2648                             __ptext24 1C76  
                           __ptext16 2700                             __ptext41 26B6  
                           __ptext33 24FE                             __ptext25 218C  
                           __ptext17 211E                             __ptext42 2292  
                           __ptext34 2560                             __ptext26 1E74  
                           __ptext18 2740                             __ptext43 2626  
                           __ptext35 2718                             __ptext27 2530  
                           __ptext19 24C8                             __ptext44 2416  
                           __ptext36 21E8                             __ptext28 2380  
                           __ptext45 25BC                             __ptext37 22E4  
                           __ptext29 1D24                             __ptext46 202A  
                           __ptext38 1F9E                             __ptext47 0000  
                           __ptext39 2456                 __end_of_vitesseAdmin 1F9E  
                           isa$xinst 000000                             _tp_delai 26E8  
                      ?_clear_square 0015                    ??_check_status_ok 0001  
                  Diminution@vitesse 0001                          ??_draw_dec8 000F  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_init_rxtx 0001  
                        ??_goto_lico 000A                             intlevel2 0000  
                           plot0@add 0012                             plot1@add 0012  
                     goto_lico@ligne 000C                       ??_clear_square 0018  
            __end_of_lecture_normale 1E74                         d1command@cmd 0005  
                       d1command@res 0007            ??_fonction_d_interruption 001D  
                       tp_delai@itpd 0001                          d1command@d1 0006  
                __end_of_write_c_aff 26D0                  __end_of_write_d_aff 26B6  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
