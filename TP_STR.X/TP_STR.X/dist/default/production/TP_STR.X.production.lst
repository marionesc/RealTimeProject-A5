

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Nov 23 14:27:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F87K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58                           	dabs	1,0x603,1,_STKPTR_T6
    59                           	dabs	1,0x503,1,_STKPTR_T5
    60                           	dabs	1,0x403,1,_STKPTR_T4
    61                           	dabs	1,0x303,1,_STKPTR_T3
    62                           	dabs	1,0x203,1,_STKPTR_T2
    63                           	dabs	1,0x103,1,_STKPTR_T1
    64                           	dabs	1,0x60,1,_W_TEMPORAIRE
    65                           	dabs	1,0x100,66,_contexte1
    66                           	dabs	1,0x69,6,_queue
    67                           	dabs	1,0x71,2,_Tick_Count
    68                           	dabs	1,0x83,1,_Valeur
    69                           	dabs	1,0x82,1,_Operator
    70                           	dabs	1,0x81,1,_TEST
    71                           	dabs	1,0x80,1,_RXTX_libre
    72                           	dabs	1,0x7F,1,_n_octet_badge
    73                           	dabs	1,0x74,1,_batterie
    74                           	dabs	1,0x73,1,_vitesse
    75                           	dabs	1,0x70,1,_pointeur_de_tache
    76                           	dabs	1,0x6F,1,_tache_active
    77                           	dabs	1,0x68,1,_TP_y
    78                           	dabs	1,0x67,1,_TP_x
    79                           	dabs	1,0x66,1,_TP_appui
    80                           	dabs	1,0x65,1,_DEMARRAGE
    81                           	dabs	1,0x64,1,_FSR0L_TEMPORAIRE
    82                           	dabs	1,0x63,1,_FSR0H_TEMPORAIRE
    83                           	dabs	1,0x62,1,_BSR_TEMPORAIRE
    84                           	dabs	1,0x61,1,_STATUS_TEMPORAIRE
    85                           	dabs	1,0x75,10,_badge
    86                           	dabs	1,0x200,66,_contexte2
    87                           	dabs	1,0x300,66,_contexte3
    88                           	dabs	1,0x400,66,_contexte4
    89                           	dabs	1,0x500,66,_contexte5
    90                           	dabs	1,0x600,66,_contexte6
    91   000000                     
    92                           ; Generated 06/04/2022 GMT
    93                           ; 
    94                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F87K22 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126   000000                     
   127 ;;Init@sem	offset=-1 (param)
   128 ;;Init@sem	offset=-1 (param)
   129   000000                     _TMR0	set	4054
   130   000000                     _TOSU	set	4095
   131   000000                     _TOSH	set	4094
   132   000000                     _TOSL	set	4093
   133   000000                     _TABLAT	set	4085
   134   000000                     _TBLPTRL	set	4086
   135   000000                     _TBLPTRH	set	4087
   136   000000                     _TBLPTRU	set	4088
   137   000000                     _PRODL	set	4083
   138   000000                     _PRODH	set	4084
   139   000000                     _FSR2L	set	4057
   140   000000                     _FSR2H	set	4058
   141   000000                     _FSR1L	set	4065
   142   000000                     _FSR1H	set	4066
   143   000000                     _STKPTR	set	4092
   144   000000                     _FSR0L	set	4073
   145   000000                     _FSR0H	set	4074
   146   000000                     _BSR	set	4064
   147   000000                     _WREG	set	4072
   148   000000                     _STATUS	set	4056
   149                           
   150                           ; 1 bytes @ 0x21
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 0, incstack = 1, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 6 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels required when called: 8
   176 ;; This function calls:
   177 ;;		_Init
   178 ;;		_initialisation_des_ports
   179 ;;		_initialisation_du_systeme
   180 ;; This function is called by:
   181 ;;		Startup code after reset
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           	psect	text0
   186   002302                     __ptext0:
   187                           	callstack 0
   188   000000                     _T0IF	set	32658
   189   000000                     _INTCON2bits	set	4081
   190   002302                     _main:
   191                           	callstack 23
   192                           
   193                           ;main.c: 8: initialisation_des_ports();
   194                           
   195                           ;incstack = 0
   196   002302  EC72  F010         	call	_initialisation_des_ports	;wreg free
   197                           
   198                           ;main.c: 9: initialisation_du_systeme();
   199   002306  EC3B  F00A         	call	_initialisation_du_systeme	;wreg free
   200                           
   201                           ;main.c: 10: Init(1);
   202   00230A  0E01               	movlw	1
   203   00230C  6EE6               	movwf	postinc1,c
   204   00230E  EC3E  F011         	call	_Init	;wreg free
   205                           
   206                           ;main.c: 13: T0CONbits.TMR0ON=1;
   207   002312  8ED5               	bsf	213,7,c	;volatile
   208                           
   209                           ;main.c: 14: T0IF=1;
   210   002314  84F2               	bsf	4082,2,c	;volatile
   211                           
   212                           ;main.c: 15: (INTCONbits.GIE = 1);
   213   002316  8EF2               	bsf	242,7,c	;volatile
   214   002318                     l4989:
   215                           
   216                           ;main.c: 19: __nop();
   217   002318  F000               	nop	
   218   00231A  D7FE               	goto	l4989
   219   00231C                     __end_of_main:
   220                           	callstack 0
   221                           
   222                           	psect	nvCOMRAM
   223   00002E                     __pnvCOMRAM:
   224                           	callstack 0
   225   00002E                     _fptr:
   226                           	callstack 0
   227   00002E                     	ds	3
   228   000031                     _puc:
   229                           	callstack 0
   230   000031                     	ds	2
   231   000033                     _val_tos:
   232                           	callstack 0
   233   000033                     	ds	2
   234   000000                     _ANCON1bits	set	3876
   235   000000                     _ANCON0bits	set	3877
   236   000000                     _TXSTA1	set	4012
   237   000000                     _LATJ	set	3985
   238   000000                     _T0CON	set	4053
   239   000000                     _ADCON0bits	set	4034
   240   000000                     _INTCONbits	set	4082
   241   000000                     _T0IE	set	32661
   242   000000                     _ANCON2	set	3875
   243   000000                     _ANCON1	set	3876
   244   000000                     _ANCON0	set	3877
   245   000000                     _MEMCON	set	3878
   246   000000                     _T0CONbits	set	4053
   247   000000                     _PADCFG1bits	set	3923
   248   000000                     _LATCbits	set	3979
   249   000000                     _LATDbits	set	3980
   250   000000                     _LATGbits	set	3983
   251   000000                     _LATJbits	set	3985
   252   000000                     _LATH	set	3984
   253   000000                     _TRISCbits	set	3988
   254   000000                     _TRISDbits	set	3989
   255   000000                     _TRISGbits	set	3992
   256   000000                     _TRISJ	set	3994
   257   000000                     _TRISH	set	3993
   258   000000                     _PIR1bits	set	3998
   259   000000                     _TXREG1	set	4013
   260   000000                     _ADCON2	set	4032
   261   000000                     _ADCON1	set	4033
   262   000000                     _BAUDCON1	set	3941
   263   000000                     _PORTBbits	set	3969
   264   000000                     _SPBRGH1	set	4052
   265   000000                     _ADRESH	set	4036
   266   000000                     _ADRESL	set	4035
   267   000000                     _ADCON0	set	4034
   268   000000                     _POSTINC0	set	4078
   269   000000                     _POSTINC1	set	4070
   270   000000                     _PCLATH	set	4090
   271   000000                     _PCLATU	set	4091
   272   000000                     _SPBRG1	set	4015
   273   000000                     _PORTDbits	set	3971
   274   000000                     _PORTEbits	set	3972
   275   000000                     _PORTH	set	3975
   276   000000                     _RCSTA1	set	4011
   277   000000                     _TXSTA1bits	set	4012
   278                           
   279                           	psect	smallconst
   280   001000                     __psmallconst:
   281                           	callstack 0
   282   001000  00                 	db	0
   283   001001                     STR_24:
   284   001001  41                 	db	65	;'A'
   285   001002  54                 	db	84	;'T'
   286   001003  54                 	db	84	;'T'
   287   001004  45                 	db	69	;'E'
   288   001005  4E                 	db	78	;'N'
   289   001006  54                 	db	84	;'T'
   290   001007  49                 	db	73	;'I'
   291   001008  4F                 	db	79	;'O'
   292   001009  4E                 	db	78	;'N'
   293   00100A  20                 	db	32
   294   00100B  76                 	db	118	;'v'
   295   00100C  6F                 	db	111	;'o'
   296   00100D  75                 	db	117	;'u'
   297   00100E  73                 	db	115	;'s'
   298   00100F  20                 	db	32
   299   001010  65                 	db	101	;'e'
   300   001011  74                 	db	116	;'t'
   301   001012  65                 	db	101	;'e'
   302   001013  73                 	db	115	;'s'
   303   001014  20                 	db	32
   304   001015  70                 	db	112	;'p'
   305   001016  6C                 	db	108	;'l'
   306   001017  65                 	db	101	;'e'
   307   001018  69                 	db	105	;'i'
   308   001019  6E                 	db	110	;'n'
   309   00101A  21                 	db	33
   310   00101B  21                 	db	33
   311   00101C  21                 	db	33
   312   00101D  00                 	db	0
   313   00101E                     STR_14:
   314   00101E  20                 	db	32
   315   00101F  41                 	db	65	;'A'
   316   001020  55                 	db	85	;'U'
   317   001021  43                 	db	67	;'C'
   318   001022  55                 	db	85	;'U'
   319   001023  4E                 	db	78	;'N'
   320   001024  20                 	db	32
   321   001025  20                 	db	32
   322   001026  20                 	db	32
   323   001027  20                 	db	32
   324   001028  20                 	db	32
   325   001029  20                 	db	32
   326   00102A  20                 	db	32
   327   00102B  20                 	db	32
   328   00102C  20                 	db	32
   329   00102D  20                 	db	32
   330   00102E  20                 	db	32
   331   00102F  20                 	db	32
   332   001030  20                 	db	32
   333   001031  20                 	db	32
   334   001032  00                 	db	0
   335   001033                     STR_25:
   336   001033  52                 	db	82	;'R'
   337   001034  4F                 	db	79	;'O'
   338   001035  55                 	db	85	;'U'
   339   001036  45                 	db	69	;'E'
   340   001037  53                 	db	83	;'S'
   341   001038  42                 	db	66	;'B'
   342   001039  59                 	db	89	;'Y'
   343   00103A  47                 	db	71	;'G'
   344   00103B  4E                 	db	78	;'N'
   345   00103C  4F                 	db	79	;'O'
   346   00103D  4C                 	db	76	;'L'
   347   00103E  45                 	db	69	;'E'
   348   00103F  53                 	db	83	;'S'
   349   001040  00                 	db	0
   350   001041                     STR_9:
   351   001041  54                 	db	84	;'T'
   352   001042  65                 	db	101	;'e'
   353   001043  6D                 	db	109	;'m'
   354   001044  70                 	db	112	;'p'
   355   001045  2E                 	db	46
   356   001046  20                 	db	32
   357   001047  48                 	db	72	;'H'
   358   001048  75                 	db	117	;'u'
   359   001049  69                 	db	105	;'i'
   360   00104A  6C                 	db	108	;'l'
   361   00104B  65                 	db	101	;'e'
   362   00104C  3A                 	db	58	;':'
   363   00104D  00                 	db	0
   364   00104E                     STR_18:
   365   00104E  58                 	db	88	;'X'
   366   00104F  2D                 	db	45
   367   001050  4A                 	db	74	;'J'
   368   001051  6F                 	db	111	;'o'
   369   001052  79                 	db	121	;'y'
   370   001053  73                 	db	115	;'s'
   371   001054  74                 	db	116	;'t'
   372   001055  69                 	db	105	;'i'
   373   001056  63                 	db	99	;'c'
   374   001057  6B                 	db	107	;'k'
   375   001058  3A                 	db	58	;':'
   376   001059  00                 	db	0
   377   00105A                     STR_19:
   378   00105A  59                 	db	89	;'Y'
   379   00105B  2D                 	db	45
   380   00105C  4A                 	db	74	;'J'
   381   00105D  6F                 	db	111	;'o'
   382   00105E  79                 	db	121	;'y'
   383   00105F  73                 	db	115	;'s'
   384   001060  74                 	db	116	;'t'
   385   001061  69                 	db	105	;'i'
   386   001062  63                 	db	99	;'c'
   387   001063  6B                 	db	107	;'k'
   388   001064  3A                 	db	58	;':'
   389   001065  00                 	db	0
   390   001066                     STR_8:
   391   001066  54                 	db	84	;'T'
   392   001067  65                 	db	101	;'e'
   393   001068  6D                 	db	109	;'m'
   394   001069  70                 	db	112	;'p'
   395   00106A  2E                 	db	46
   396   00106B  20                 	db	32
   397   00106C  45                 	db	69	;'E'
   398   00106D  61                 	db	97	;'a'
   399   00106E  75                 	db	117	;'u'
   400   00106F  3A                 	db	58	;':'
   401   001070  00                 	db	0
   402   001071                     STR_12:
   403   001071  42                 	db	66	;'B'
   404   001072  61                 	db	97	;'a'
   405   001073  74                 	db	116	;'t'
   406   001074  74                 	db	116	;'t'
   407   001075  65                 	db	101	;'e'
   408   001076  72                 	db	114	;'r'
   409   001077  69                 	db	105	;'i'
   410   001078  65                 	db	101	;'e'
   411   001079  3A                 	db	58	;':'
   412   00107A  00                 	db	0
   413   00107B                     STR_11:
   414   00107B  56                 	db	86	;'V'
   415   00107C  69                 	db	105	;'i'
   416   00107D  74                 	db	116	;'t'
   417   00107E  65                 	db	101	;'e'
   418   00107F  73                 	db	115	;'s'
   419   001080  73                 	db	115	;'s'
   420   001081  65                 	db	101	;'e'
   421   001082  3A                 	db	58	;':'
   422   001083  00                 	db	0
   423   001084                     STR_15:
   424   001084  4F                 	db	79	;'O'
   425   001085  70                 	db	112	;'p'
   426   001086  65                 	db	101	;'e'
   427   001087  72                 	db	114	;'r'
   428   001088  61                 	db	97	;'a'
   429   001089  74                 	db	116	;'t'
   430   00108A  6F                 	db	111	;'o'
   431   00108B  72                 	db	114	;'r'
   432   00108C  00                 	db	0
   433   00108D                     STR_1:
   434   00108D  4D                 	db	77	;'M'
   435   00108E  61                 	db	97	;'a'
   436   00108F  72                 	db	114	;'r'
   437   001090  63                 	db	99	;'c'
   438   001091  68                 	db	104	;'h'
   439   001092  65                 	db	101	;'e'
   440   001093  3A                 	db	58	;':'
   441   001094  00                 	db	0
   442   001095                     STR_13:
   443   001095  42                 	db	66	;'B'
   444   001096  61                 	db	97	;'a'
   445   001097  64                 	db	100	;'d'
   446   001098  67                 	db	103	;'g'
   447   001099  65                 	db	101	;'e'
   448   00109A  3A                 	db	58	;':'
   449   00109B  00                 	db	0
   450   00109C                     STR_7:
   451   00109C  53                 	db	83	;'S'
   452   00109D  69                 	db	105	;'i'
   453   00109E  65                 	db	101	;'e'
   454   00109F  67                 	db	103	;'g'
   455   0010A0  65                 	db	101	;'e'
   456   0010A1  3A                 	db	58	;':'
   457   0010A2  00                 	db	0
   458   0010A3                     STR_21:
   459   0010A3  43                 	db	67	;'C'
   460   0010A4  48                 	db	72	;'H'
   461   0010A5  41                 	db	65	;'A'
   462   0010A6  52                 	db	82	;'R'
   463   0010A7  47                 	db	71	;'G'
   464   0010A8  45                 	db	69	;'E'
   465   0010A9  00                 	db	0
   466   0010AA                     STR_16:
   467   0010AA  20                 	db	32
   468   0010AB  41                 	db	65	;'A'
   469   0010AC  44                 	db	68	;'D'
   470   0010AD  4D                 	db	77	;'M'
   471   0010AE  49                 	db	73	;'I'
   472   0010AF  4E                 	db	78	;'N'
   473   0010B0  00                 	db	0
   474   0010B1                     STR_5:
   475   0010B1  28                 	db	40
   476   0010B2  28                 	db	40
   477   0010B3  21                 	db	33
   478   0010B4  29                 	db	41
   479   0010B5  29                 	db	41
   480   0010B6  00                 	db	0
   481   0010B7                     STR_10:
   482   0010B7  43                 	db	67	;'C'
   483   0010B8  68                 	db	104	;'h'
   484   0010B9  6F                 	db	111	;'o'
   485   0010BA  63                 	db	99	;'c'
   486   0010BB  3A                 	db	58	;':'
   487   0010BC  00                 	db	0
   488   0010BD                     STR_17:
   489   0010BD  41                 	db	65	;'A'
   490   0010BE  55                 	db	85	;'U'
   491   0010BF  43                 	db	67	;'C'
   492   0010C0  55                 	db	85	;'U'
   493   0010C1  4E                 	db	78	;'N'
   494   0010C2  00                 	db	0
   495   0010C3                     STR_20:
   496   0010C3  56                 	db	86	;'V'
   497   0010C4  49                 	db	73	;'I'
   498   0010C5  44                 	db	68	;'D'
   499   0010C6  45                 	db	69	;'E'
   500   0010C7  00                 	db	0
   501   0010C8                     STR_23:
   502   0010C8  20                 	db	32
   503   0010C9  79                 	db	121	;'y'
   504   0010CA  3D                 	db	61	;'='
   505   0010CB  00                 	db	0
   506   0010CC                     STR_4:
   507   0010CC  4E                 	db	78	;'N'
   508   0010CD  20                 	db	32
   509   0010CE  00                 	db	0
   510   0010CF                     STR_22:
   511   0010CF  78                 	db	120	;'x'
   512   0010D0  3D                 	db	61	;'='
   513   0010D1  00                 	db	0
   514   0010D2                     STR_3:
   515   0010D2  41                 	db	65	;'A'
   516   0010D3  52                 	db	82	;'R'
   517   0010D4  00                 	db	0
   518   0010D5                     STR_2:
   519   0010D5  41                 	db	65	;'A'
   520   0010D6  56                 	db	86	;'V'
   521   0010D7  00                 	db	0
   522   0010D8  00                 	db	0	; dummy byte at the end
   523   000000                     
   524                           ; #config settings
   525                           
   526                           	psect	cinit
   527   0023CA                     __pcinit:
   528                           	callstack 0
   529   0023CA                     start_initialization:
   530                           	callstack 0
   531   0023CA                     __initialization:
   532                           	callstack 0
   533                           
   534                           ; Clear objects allocated to COMRAM (5 bytes)
   535   0023CA  6A39               	clrf	(__pbssCOMRAM+4)& (0+255),c
   536   0023CC  6A38               	clrf	(__pbssCOMRAM+3)& (0+255),c
   537   0023CE  6A37               	clrf	(__pbssCOMRAM+2)& (0+255),c
   538   0023D0  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   539   0023D2  6A35               	clrf	__pbssCOMRAM& (0+255),c
   540   0023D4                     end_of_initialization:
   541                           	callstack 0
   542   0023D4                     __end_of__initialization:
   543                           	callstack 0
   544   0023D4  0100               	movlb	0
   545   0023D6  EF81  F011         	goto	_main	;jump to C main() function
   546                           
   547                           	psect	bssCOMRAM
   548   000035                     __pbssCOMRAM:
   549                           	callstack 0
   550   000035                     _tc:
   551                           	callstack 0
   552   000035                     	ds	3
   553   000038                     _Val_sem_rxtx:
   554                           	callstack 0
   555   000038                     	ds	1
   556   000039                     _Val_sem_cna:
   557                           	callstack 0
   558   000039                     	ds	1
   559                           
   560                           	psect	cstackCOMRAM
   561   000001                     __pcstackCOMRAM:
   562                           	callstack 0
   563   000001                     ?___awdiv:
   564                           	callstack 0
   565   000001                     ?___awmod:
   566                           	callstack 0
   567   000001                     ?___lwdiv:
   568                           	callstack 0
   569   000001                     lecture_8bit_analogique@ret:
   570                           	callstack 0
   571   000001                     write_d_aff@data:
   572                           	callstack 0
   573   000001                     write_c_aff@command:
   574                           	callstack 0
   575   000001                     check_status_ok@res:
   576                           	callstack 0
   577   000001                     delai_us_char@ucdelai:
   578                           	callstack 0
   579   000001                     tp_delai@itpd:
   580                           	callstack 0
   581   000001                     tache4@a:
   582                           	callstack 0
   583   000001                     tache5@a:
   584                           	callstack 0
   585   000001                     stid_delai_us@isdu:
   586                           	callstack 0
   587   000001                     ___awdiv@dividend:
   588                           	callstack 0
   589   000001                     ___awmod@dividend:
   590                           	callstack 0
   591   000001                     ___lwdiv@dividend:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x0
   595   000001                     	ds	1
   596   000002                     lecture_8bit_analogique@channel:
   597                           	callstack 0
   598   000002                     wait_status_ok@err:
   599                           	callstack 0
   600                           
   601                           ; 1 bytes @ 0x1
   602   000002                     	ds	1
   603   000003                     wait_status_ok@status:
   604                           	callstack 0
   605   000003                     lecture_normale@stid_id:
   606                           	callstack 0
   607   000003                     ___awdiv@divisor:
   608                           	callstack 0
   609   000003                     ___awmod@divisor:
   610                           	callstack 0
   611   000003                     ___lwdiv@divisor:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x2
   615   000003                     	ds	1
   616   000004                     wait_status_ok@res:
   617                           	callstack 0
   618                           
   619                           ; 1 bytes @ 0x3
   620   000004                     	ds	1
   621   000005                     command@cmd:
   622                           	callstack 0
   623   000005                     d1command@cmd:
   624                           	callstack 0
   625   000005                     d2command@d2:
   626                           	callstack 0
   627   000005                     lecture_normale@temps_attente:
   628                           	callstack 0
   629   000005                     ___awdiv@counter:
   630                           	callstack 0
   631   000005                     ___awmod@counter:
   632                           	callstack 0
   633   000005                     ___lwdiv@quotient:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x4
   637   000005                     	ds	1
   638   000006                     d1command@d1:
   639                           	callstack 0
   640   000006                     d2command@cmd:
   641                           	callstack 0
   642   000006                     lecture_normale@n_octet:
   643                           	callstack 0
   644   000006                     ___awdiv@sign:
   645                           	callstack 0
   646   000006                     ___awmod@sign:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x5
   650   000006                     	ds	1
   651   000007                     d1command@res:
   652                           	callstack 0
   653   000007                     d2command@d1:
   654                           	callstack 0
   655   000007                     lecture_normale@n_bit:
   656                           	callstack 0
   657   000007                     ___lwdiv@counter:
   658                           	callstack 0
   659   000007                     ___awdiv@quotient:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x6
   663   000007                     	ds	1
   664   000008                     ??_tache2:
   665   000008                     d2command@res:
   666                           	callstack 0
   667   000008                     draw_char@dccar:
   668                           	callstack 0
   669   000008                     draw_hex8@octet:
   670                           	callstack 0
   671   000008                     lecture_normale@octet:
   672                           	callstack 0
   673   000008                     draw_string@tableau:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x7
   677   000008                     	ds	1
   678   000009                     ??_draw_dec8:
   679   000009                     tache6@n:
   680                           	callstack 0
   681   000009                     initialisation_afficheur@error_count:
   682                           	callstack 0
   683   000009                     draw_hex8@c:
   684                           	callstack 0
   685   000009                     goto_lico@colonne:
   686                           	callstack 0
   687   000009                     plot1@y:
   688                           	callstack 0
   689   000009                     clear_text@add:
   690                           	callstack 0
   691   000009                     clear_graphics@add:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x8
   695   000009                     	ds	1
   696   00000A                     ??_goto_lico:
   697   00000A                     ??_plot1:
   698   00000A                     draw_dec8@unit:
   699                           	callstack 0
   700   00000A                     tache2@ix:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x9
   704   00000A                     	ds	1
   705   00000B                     draw_dec8@octet:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0xA
   709   00000B                     	ds	1
   710   00000C                     draw_dec8@cent:
   711                           	callstack 0
   712   00000C                     goto_lico@ligne:
   713                           	callstack 0
   714   00000C                     tache2@iy:
   715                           	callstack 0
   716   00000C                     plot1@add:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0xB
   720   00000C                     	ds	1
   721   00000D                     draw_dec8@dix:
   722                           	callstack 0
   723   00000D                     goto_lico@adr:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0xC
   727   00000D                     	ds	1
   728   00000E                     tache2@hx:
   729                           	callstack 0
   730   00000E                     draw_dec8@c:
   731                           	callstack 0
   732   00000E                     plot1@x:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0xD
   736   00000E                     	ds	1
   737   00000F                     tache2@lx:
   738                           	callstack 0
   739   00000F                     clear_line@line:
   740                           	callstack 0
   741   00000F                     draw_square@y1:
   742                           	callstack 0
   743                           
   744                           ; 1 bytes @ 0xE
   745   00000F                     	ds	1
   746   000010                     tache2@hy:
   747                           	callstack 0
   748   000010                     clear_line@column:
   749                           	callstack 0
   750   000010                     draw_square@x2:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0xF
   754   000010                     	ds	1
   755   000011                     tache2@ly:
   756                           	callstack 0
   757   000011                     draw_square@y2:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x10
   761   000011                     	ds	1
   762   000012                     draw_square@x1:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x11
   766   000012                     	ds	1
   767   000013                     draw_square@x:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x12
   771   000013                     	ds	1
   772   000014                     draw_square@y:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x13
   776   000014                     	ds	1
   777   000015                     ??_fonction_d_interruption:
   778                           
   779                           ; 1 bytes @ 0x14
   780   000015                     	ds	12
   781   000021                     initialisation_du_systeme@temp:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x20
   785   000021                     	ds	1
   786   000022                     
   787 ;; *************** function _initialisation_du_systeme *****************
   788 ;; Defined at:
   789 ;;		line 131 in file "systeme.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  temp            1   32[COMRAM] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;Total ram usage:        1 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 7
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text1
   818   001476                     __ptext1:
   819                           	callstack 0
   820   001476                     _initialisation_du_systeme:
   821                           	callstack 23
   822                           
   823                           ;systeme.c: 133: unsigned char temp;;systeme.c: 135: DEMARRAGE=1;
   824                           
   825                           ;incstack = 0
   826   001476  0E01               	movlw	1
   827   001478  0100               	movlb	0	; () banked
   828   00147A  6F65               	movwf	101,b
   829                           
   830                           ;systeme.c: 138: queue[0]=1;
   831   00147C  0E01               	movlw	1
   832   00147E  6F69               	movwf	105,b
   833                           
   834                           ;systeme.c: 139: queue[1]=2;
   835   001480  0E02               	movlw	2
   836   001482  6F6A               	movwf	106,b
   837                           
   838                           ;systeme.c: 140: queue[2]=3;
   839   001484  0E03               	movlw	3
   840   001486  6F6B               	movwf	107,b
   841                           
   842                           ;systeme.c: 141: queue[3]=4;
   843   001488  0E04               	movlw	4
   844   00148A  6F6C               	movwf	108,b
   845                           
   846                           ;systeme.c: 142: queue[4]=5;
   847   00148C  0E05               	movlw	5
   848   00148E  6F6D               	movwf	109,b
   849                           
   850                           ;systeme.c: 143: queue[5]=6;
   851   001490  0E06               	movlw	6
   852   001492  6F6E               	movwf	110,b
   853                           
   854                           ;systeme.c: 145: pointeur_de_tache=6-1;
   855   001494  0E05               	movlw	5
   856   001496  6F70               	movwf	112,b
   857                           
   858                           ; BSR set to: 0
   859                           ;systeme.c: 146: tache_active=queue[pointeur_de_tache];
   860   001498  0E69               	movlw	105
   861   00149A  2570               	addwf	112,w,b
   862   00149C  6ED9               	movwf	fsr2l,c
   863   00149E  6ADA               	clrf	fsr2h,c
   864   0014A0  0E00               	movlw	0
   865   0014A2  22DA               	addwfc	fsr2h,f,c
   866   0014A4  50DF               	movf	indf2,w,c
   867   0014A6  6F6F               	movwf	111,b
   868                           
   869                           ; BSR set to: 0
   870                           ;systeme.c: 151: temp=STKPTR;
   871   0014A8  CFFC F021          	movff	stkptr,initialisation_du_systeme@temp	;volatile
   872                           
   873                           ; BSR set to: 0
   874                           ;systeme.c: 155: STKPTR=2;fptr=&tache1; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   875   0014AC  0E02               	movlw	2
   876   0014AE  6EFC               	movwf	252,c	;volatile
   877                           
   878                           ; BSR set to: 0
   879   0014B0  0EDA               	movlw	low _tache1
   880   0014B2  6E2E               	movwf	_fptr^0,c
   881   0014B4  0E10               	movlw	high _tache1
   882   0014B6  6E2F               	movwf	(_fptr+1)^0,c
   883   0014B8  0E00               	movlw	low (_tache1 shr (0+16))
   884   0014BA  6E30               	movwf	(_fptr+2)^0,c
   885                           
   886                           ; BSR set to: 0
   887   0014BC  C02E  F033         	movff	_fptr,_val_tos
   888   0014C0  C02F  F034         	movff	_fptr+1,_val_tos+1
   889                           
   890                           ; BSR set to: 0
   891   0014C4  0E33               	movlw	low _val_tos
   892   0014C6  6E31               	movwf	_puc^0,c
   893   0014C8  0E00               	movlw	high _val_tos
   894   0014CA  6E32               	movwf	(_puc+1)^0,c
   895                           
   896                           ; BSR set to: 0
   897   0014CC  C031  FFD9         	movff	_puc,fsr2l
   898   0014D0  C032  FFDA         	movff	_puc+1,fsr2h
   899   0014D4  50DF               	movf	indf2,w,c
   900   0014D6  6EFD               	movwf	253,c	;volatile
   901                           
   902                           ; BSR set to: 0
   903   0014D8  4A31               	infsnz	_puc^0,f,c
   904   0014DA  2A32               	incf	(_puc+1)^0,f,c
   905                           
   906                           ; BSR set to: 0
   907   0014DC  C031  FFD9         	movff	_puc,fsr2l
   908   0014E0  C032  FFDA         	movff	_puc+1,fsr2h
   909   0014E4  50DF               	movf	indf2,w,c
   910   0014E6  6EFE               	movwf	254,c	;volatile
   911                           
   912                           ; BSR set to: 0
   913   0014E8  4A31               	infsnz	_puc^0,f,c
   914   0014EA  2A32               	incf	(_puc+1)^0,f,c
   915                           
   916                           ; BSR set to: 0
   917   0014EC  C031  FFD9         	movff	_puc,fsr2l
   918   0014F0  C032  FFDA         	movff	_puc+1,fsr2h
   919   0014F4  50DF               	movf	indf2,w,c
   920   0014F6  6EFF               	movwf	255,c	;volatile
   921                           
   922                           ; BSR set to: 0
   923                           ;systeme.c: 156: STKPTR=7;fptr=&tache2; val_tos=(unsigned short int) fptr; puc=(unsigned
      +                           char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   924   0014F8  0E07               	movlw	7
   925   0014FA  6EFC               	movwf	252,c	;volatile
   926   0014FC  0EAE               	movlw	low _tache2
   927   0014FE  6E2E               	movwf	_fptr^0,c
   928   001500  0E16               	movlw	high _tache2
   929   001502  6E2F               	movwf	(_fptr+1)^0,c
   930   001504  0E00               	movlw	low (_tache2 shr (0+16))
   931   001506  6E30               	movwf	(_fptr+2)^0,c
   932                           
   933                           ; BSR set to: 0
   934   001508  C02E  F033         	movff	_fptr,_val_tos
   935   00150C  C02F  F034         	movff	_fptr+1,_val_tos+1
   936   001510  0E33               	movlw	low _val_tos
   937   001512  6E31               	movwf	_puc^0,c
   938   001514  0E00               	movlw	high _val_tos
   939   001516  6E32               	movwf	(_puc+1)^0,c
   940                           
   941                           ; BSR set to: 0
   942   001518  C031  FFD9         	movff	_puc,fsr2l
   943   00151C  C032  FFDA         	movff	_puc+1,fsr2h
   944   001520  50DF               	movf	indf2,w,c
   945   001522  6EFD               	movwf	253,c	;volatile
   946                           
   947                           ; BSR set to: 0
   948   001524  4A31               	infsnz	_puc^0,f,c
   949   001526  2A32               	incf	(_puc+1)^0,f,c
   950                           
   951                           ; BSR set to: 0
   952   001528  C031  FFD9         	movff	_puc,fsr2l
   953   00152C  C032  FFDA         	movff	_puc+1,fsr2h
   954   001530  50DF               	movf	indf2,w,c
   955   001532  6EFE               	movwf	254,c	;volatile
   956                           
   957                           ; BSR set to: 0
   958   001534  4A31               	infsnz	_puc^0,f,c
   959   001536  2A32               	incf	(_puc+1)^0,f,c
   960                           
   961                           ; BSR set to: 0
   962   001538  C031  FFD9         	movff	_puc,fsr2l
   963   00153C  C032  FFDA         	movff	_puc+1,fsr2h
   964   001540  50DF               	movf	indf2,w,c
   965   001542  6EFF               	movwf	255,c	;volatile
   966                           
   967                           ; BSR set to: 0
   968                           ;systeme.c: 157: STKPTR=12;fptr=&tache3; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
   969   001544  0E0C               	movlw	12
   970   001546  6EFC               	movwf	252,c	;volatile
   971                           
   972                           ; BSR set to: 0
   973   001548  0E88               	movlw	low _tache3
   974   00154A  6E2E               	movwf	_fptr^0,c
   975   00154C  0E18               	movlw	high _tache3
   976   00154E  6E2F               	movwf	(_fptr+1)^0,c
   977   001550  0E00               	movlw	low (_tache3 shr (0+16))
   978   001552  6E30               	movwf	(_fptr+2)^0,c
   979                           
   980                           ; BSR set to: 0
   981   001554  C02E  F033         	movff	_fptr,_val_tos
   982   001558  C02F  F034         	movff	_fptr+1,_val_tos+1
   983                           
   984                           ; BSR set to: 0
   985   00155C  0E33               	movlw	low _val_tos
   986   00155E  6E31               	movwf	_puc^0,c
   987   001560  0E00               	movlw	high _val_tos
   988   001562  6E32               	movwf	(_puc+1)^0,c
   989                           
   990                           ; BSR set to: 0
   991   001564  C031  FFD9         	movff	_puc,fsr2l
   992   001568  C032  FFDA         	movff	_puc+1,fsr2h
   993   00156C  50DF               	movf	indf2,w,c
   994   00156E  6EFD               	movwf	253,c	;volatile
   995                           
   996                           ; BSR set to: 0
   997   001570  4A31               	infsnz	_puc^0,f,c
   998   001572  2A32               	incf	(_puc+1)^0,f,c
   999                           
  1000                           ; BSR set to: 0
  1001   001574  C031  FFD9         	movff	_puc,fsr2l
  1002   001578  C032  FFDA         	movff	_puc+1,fsr2h
  1003   00157C  50DF               	movf	indf2,w,c
  1004   00157E  6EFE               	movwf	254,c	;volatile
  1005                           
  1006                           ; BSR set to: 0
  1007   001580  4A31               	infsnz	_puc^0,f,c
  1008   001582  2A32               	incf	(_puc+1)^0,f,c
  1009                           
  1010                           ; BSR set to: 0
  1011   001584  C031  FFD9         	movff	_puc,fsr2l
  1012   001588  C032  FFDA         	movff	_puc+1,fsr2h
  1013   00158C  50DF               	movf	indf2,w,c
  1014   00158E  6EFF               	movwf	255,c	;volatile
  1015                           
  1016                           ; BSR set to: 0
  1017                           ;systeme.c: 158: STKPTR=17;fptr=&tache4; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1018   001590  0E11               	movlw	17
  1019   001592  6EFC               	movwf	252,c	;volatile
  1020   001594  0E66               	movlw	low _tache4
  1021   001596  6E2E               	movwf	_fptr^0,c
  1022   001598  0E19               	movlw	high _tache4
  1023   00159A  6E2F               	movwf	(_fptr+1)^0,c
  1024   00159C  0E00               	movlw	low (_tache4 shr (0+16))
  1025   00159E  6E30               	movwf	(_fptr+2)^0,c
  1026                           
  1027                           ; BSR set to: 0
  1028   0015A0  C02E  F033         	movff	_fptr,_val_tos
  1029   0015A4  C02F  F034         	movff	_fptr+1,_val_tos+1
  1030   0015A8  0E33               	movlw	low _val_tos
  1031   0015AA  6E31               	movwf	_puc^0,c
  1032   0015AC  0E00               	movlw	high _val_tos
  1033   0015AE  6E32               	movwf	(_puc+1)^0,c
  1034                           
  1035                           ; BSR set to: 0
  1036   0015B0  C031  FFD9         	movff	_puc,fsr2l
  1037   0015B4  C032  FFDA         	movff	_puc+1,fsr2h
  1038   0015B8  50DF               	movf	indf2,w,c
  1039   0015BA  6EFD               	movwf	253,c	;volatile
  1040                           
  1041                           ; BSR set to: 0
  1042   0015BC  4A31               	infsnz	_puc^0,f,c
  1043   0015BE  2A32               	incf	(_puc+1)^0,f,c
  1044                           
  1045                           ; BSR set to: 0
  1046   0015C0  C031  FFD9         	movff	_puc,fsr2l
  1047   0015C4  C032  FFDA         	movff	_puc+1,fsr2h
  1048   0015C8  50DF               	movf	indf2,w,c
  1049   0015CA  6EFE               	movwf	254,c	;volatile
  1050                           
  1051                           ; BSR set to: 0
  1052   0015CC  4A31               	infsnz	_puc^0,f,c
  1053   0015CE  2A32               	incf	(_puc+1)^0,f,c
  1054                           
  1055                           ; BSR set to: 0
  1056   0015D0  C031  FFD9         	movff	_puc,fsr2l
  1057   0015D4  C032  FFDA         	movff	_puc+1,fsr2h
  1058   0015D8  50DF               	movf	indf2,w,c
  1059   0015DA  6EFF               	movwf	255,c	;volatile
  1060                           
  1061                           ; BSR set to: 0
  1062                           ;systeme.c: 159: STKPTR=22;fptr=&tache5; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1063   0015DC  0E16               	movlw	22
  1064   0015DE  6EFC               	movwf	252,c	;volatile
  1065                           
  1066                           ; BSR set to: 0
  1067   0015E0  0EA2               	movlw	low _tache5
  1068   0015E2  6E2E               	movwf	_fptr^0,c
  1069   0015E4  0E17               	movlw	high _tache5
  1070   0015E6  6E2F               	movwf	(_fptr+1)^0,c
  1071   0015E8  0E00               	movlw	low (_tache5 shr (0+16))
  1072   0015EA  6E30               	movwf	(_fptr+2)^0,c
  1073                           
  1074                           ; BSR set to: 0
  1075   0015EC  C02E  F033         	movff	_fptr,_val_tos
  1076   0015F0  C02F  F034         	movff	_fptr+1,_val_tos+1
  1077                           
  1078                           ; BSR set to: 0
  1079   0015F4  0E33               	movlw	low _val_tos
  1080   0015F6  6E31               	movwf	_puc^0,c
  1081   0015F8  0E00               	movlw	high _val_tos
  1082   0015FA  6E32               	movwf	(_puc+1)^0,c
  1083                           
  1084                           ; BSR set to: 0
  1085   0015FC  C031  FFD9         	movff	_puc,fsr2l
  1086   001600  C032  FFDA         	movff	_puc+1,fsr2h
  1087   001604  50DF               	movf	indf2,w,c
  1088   001606  6EFD               	movwf	253,c	;volatile
  1089                           
  1090                           ; BSR set to: 0
  1091   001608  4A31               	infsnz	_puc^0,f,c
  1092   00160A  2A32               	incf	(_puc+1)^0,f,c
  1093                           
  1094                           ; BSR set to: 0
  1095   00160C  C031  FFD9         	movff	_puc,fsr2l
  1096   001610  C032  FFDA         	movff	_puc+1,fsr2h
  1097   001614  50DF               	movf	indf2,w,c
  1098   001616  6EFE               	movwf	254,c	;volatile
  1099                           
  1100                           ; BSR set to: 0
  1101   001618  4A31               	infsnz	_puc^0,f,c
  1102   00161A  2A32               	incf	(_puc+1)^0,f,c
  1103                           
  1104                           ; BSR set to: 0
  1105   00161C  C031  FFD9         	movff	_puc,fsr2l
  1106   001620  C032  FFDA         	movff	_puc+1,fsr2h
  1107   001624  50DF               	movf	indf2,w,c
  1108   001626  6EFF               	movwf	255,c	;volatile
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;systeme.c: 160: STKPTR=27;fptr=&tache6; val_tos=(unsigned short int) fptr; puc=(unsigne
      +                          d char *)&val_tos; TOSL=*puc;puc++; TOSH=*puc;puc++; TOSU=*puc;
  1112   001628  0E1B               	movlw	27
  1113   00162A  6EFC               	movwf	252,c	;volatile
  1114   00162C  0E60               	movlw	low _tache6
  1115   00162E  6E2E               	movwf	_fptr^0,c
  1116   001630  0E20               	movlw	high _tache6
  1117   001632  6E2F               	movwf	(_fptr+1)^0,c
  1118   001634  0E00               	movlw	low (_tache6 shr (0+16))
  1119   001636  6E30               	movwf	(_fptr+2)^0,c
  1120                           
  1121                           ; BSR set to: 0
  1122   001638  C02E  F033         	movff	_fptr,_val_tos
  1123   00163C  C02F  F034         	movff	_fptr+1,_val_tos+1
  1124   001640  0E33               	movlw	low _val_tos
  1125   001642  6E31               	movwf	_puc^0,c
  1126   001644  0E00               	movlw	high _val_tos
  1127   001646  6E32               	movwf	(_puc+1)^0,c
  1128                           
  1129                           ; BSR set to: 0
  1130   001648  C031  FFD9         	movff	_puc,fsr2l
  1131   00164C  C032  FFDA         	movff	_puc+1,fsr2h
  1132   001650  50DF               	movf	indf2,w,c
  1133   001652  6EFD               	movwf	253,c	;volatile
  1134                           
  1135                           ; BSR set to: 0
  1136   001654  4A31               	infsnz	_puc^0,f,c
  1137   001656  2A32               	incf	(_puc+1)^0,f,c
  1138                           
  1139                           ; BSR set to: 0
  1140   001658  C031  FFD9         	movff	_puc,fsr2l
  1141   00165C  C032  FFDA         	movff	_puc+1,fsr2h
  1142   001660  50DF               	movf	indf2,w,c
  1143   001662  6EFE               	movwf	254,c	;volatile
  1144                           
  1145                           ; BSR set to: 0
  1146   001664  4A31               	infsnz	_puc^0,f,c
  1147   001666  2A32               	incf	(_puc+1)^0,f,c
  1148                           
  1149                           ; BSR set to: 0
  1150   001668  C031  FFD9         	movff	_puc,fsr2l
  1151   00166C  C032  FFDA         	movff	_puc+1,fsr2h
  1152   001670  50DF               	movf	indf2,w,c
  1153   001672  6EFF               	movwf	255,c	;volatile
  1154                           
  1155                           ; BSR set to: 0
  1156                           ;systeme.c: 162: STKPTR=temp;
  1157   001674  C021  FFFC         	movff	initialisation_du_systeme@temp,stkptr	;volatile
  1158                           
  1159                           ; BSR set to: 0
  1160                           ;systeme.c: 165: STKPTR_T1=2;
  1161   001678  0E02               	movlw	2
  1162   00167A  0101               	movlb	1	; () banked
  1163   00167C  6F03               	movwf	3,b
  1164                           
  1165                           ; BSR set to: 1
  1166                           ;systeme.c: 166: STKPTR_T2=7;
  1167   00167E  0E07               	movlw	7
  1168   001680  0102               	movlb	2	; () banked
  1169   001682  6F03               	movwf	3,b
  1170                           
  1171                           ; BSR set to: 2
  1172                           ;systeme.c: 167: STKPTR_T3=12;
  1173   001684  0E0C               	movlw	12
  1174   001686  0103               	movlb	3	; () banked
  1175   001688  6F03               	movwf	3,b
  1176                           
  1177                           ; BSR set to: 3
  1178                           ;systeme.c: 168: STKPTR_T4=17;
  1179   00168A  0E11               	movlw	17
  1180   00168C  0104               	movlb	4	; () banked
  1181   00168E  6F03               	movwf	3,b
  1182                           
  1183                           ; BSR set to: 4
  1184                           ;systeme.c: 169: STKPTR_T5=22;
  1185   001690  0E16               	movlw	22
  1186   001692  0105               	movlb	5	; () banked
  1187   001694  6F03               	movwf	3,b
  1188                           
  1189                           ; BSR set to: 5
  1190                           ;systeme.c: 170: STKPTR_T6=27;
  1191   001696  0E1B               	movlw	27
  1192   001698  0106               	movlb	6	; () banked
  1193   00169A  6F03               	movwf	3,b
  1194                           
  1195                           ; BSR set to: 6
  1196                           ;systeme.c: 173: Tick_Count=0;
  1197   00169C  0E00               	movlw	0
  1198   00169E  0100               	movlb	0	; () banked
  1199   0016A0  6F72               	movwf	114,b
  1200   0016A2  0E00               	movlw	0
  1201   0016A4  6F71               	movwf	113,b
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;systeme.c: 175: T0CON=0x01;
  1205   0016A6  0E01               	movlw	1
  1206   0016A8  6ED5               	movwf	213,c	;volatile
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;systeme.c: 176: T0IE=1;
  1210   0016AA  8AF2               	bsf	4082,5,c	;volatile
  1211                           
  1212                           ; BSR set to: 0
  1213   0016AC  0012               	return		;funcret
  1214   0016AE                     __end_of_initialisation_du_systeme:
  1215                           	callstack 0
  1216                           
  1217 ;; *************** function _initialisation_des_ports *****************
  1218 ;; Defined at:
  1219 ;;		line 23 in file "main.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  1    wreg      void 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 7
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text2
  1248   0020E4                     __ptext2:
  1249                           	callstack 0
  1250   0020E4                     _initialisation_des_ports:
  1251                           	callstack 23
  1252                           
  1253                           ;main.c: 26: MEMCON=0xA0;
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;incstack = 0
  1257   0020E4  0EA0               	movlw	160
  1258   0020E6  010F               	movlb	15	; () banked
  1259   0020E8  6F26               	movwf	38,b	;volatile
  1260                           
  1261                           ;main.c: 29: ANCON0=0x00;
  1262   0020EA  0E00               	movlw	0
  1263   0020EC  6F25               	movwf	37,b	;volatile
  1264                           
  1265                           ;main.c: 30: ANCON1=0x00;
  1266   0020EE  0E00               	movlw	0
  1267   0020F0  6F24               	movwf	36,b	;volatile
  1268                           
  1269                           ;main.c: 31: ANCON2=0x00;
  1270   0020F2  0E00               	movlw	0
  1271   0020F4  6F23               	movwf	35,b	;volatile
  1272                           
  1273                           ; BSR set to: 15
  1274                           ;main.c: 32: ANCON0bits.ANSEL0=1;
  1275   0020F6  8125               	bsf	37,0,b	;volatile
  1276                           
  1277                           ; BSR set to: 15
  1278                           ;main.c: 33: ANCON0bits.ANSEL1=1;
  1279   0020F8  8325               	bsf	37,1,b	;volatile
  1280                           
  1281                           ; BSR set to: 15
  1282                           ;main.c: 34: ANCON0bits.ANSEL2=1;
  1283   0020FA  8525               	bsf	37,2,b	;volatile
  1284                           
  1285                           ; BSR set to: 15
  1286                           ;main.c: 35: ANCON0bits.ANSEL3=1;
  1287   0020FC  8725               	bsf	37,3,b	;volatile
  1288                           
  1289                           ; BSR set to: 15
  1290                           ;main.c: 36: ANCON1bits.ANSEL10=1;
  1291   0020FE  8524               	bsf	36,2,b	;volatile
  1292                           
  1293                           ; BSR set to: 15
  1294                           ;main.c: 37: ANCON1bits.ANSEL11=1;
  1295   002100  8724               	bsf	36,3,b	;volatile
  1296                           
  1297                           ; BSR set to: 15
  1298                           ;main.c: 41: LATCbits.LATC2=1;
  1299   002102  848B               	bsf	139,2,c	;volatile
  1300                           
  1301                           ; BSR set to: 15
  1302                           ;main.c: 42: LATCbits.LATC1=1;
  1303   002104  828B               	bsf	139,1,c	;volatile
  1304                           
  1305                           ; BSR set to: 15
  1306                           ;main.c: 43: LATGbits.LATG0=1;
  1307   002106  808F               	bsf	143,0,c	;volatile
  1308                           
  1309                           ; BSR set to: 15
  1310                           ;main.c: 46: TRISCbits.TRISC2=0;
  1311   002108  9494               	bcf	148,2,c	;volatile
  1312                           
  1313                           ; BSR set to: 15
  1314                           ;main.c: 47: TRISCbits.TRISC1=0;
  1315   00210A  9294               	bcf	148,1,c	;volatile
  1316                           
  1317                           ; BSR set to: 15
  1318                           ;main.c: 48: TRISGbits.TRISG0=0;
  1319   00210C  9098               	bcf	152,0,c	;volatile
  1320                           
  1321                           ; BSR set to: 15
  1322                           ;main.c: 49: TRISGbits.TRISG3=0;
  1323   00210E  9698               	bcf	152,3,c	;volatile
  1324                           
  1325                           ; BSR set to: 15
  1326                           ;main.c: 50: TRISGbits.TRISG4=0;
  1327   002110  9898               	bcf	152,4,c	;volatile
  1328                           
  1329                           ; BSR set to: 15
  1330                           ;main.c: 51: TRISDbits.TRISD2=0;
  1331   002112  9495               	bcf	149,2,c	;volatile
  1332                           
  1333                           ; BSR set to: 15
  1334                           ;main.c: 52: TRISDbits.TRISD3=0;
  1335   002114  9695               	bcf	149,3,c	;volatile
  1336                           
  1337                           ; BSR set to: 15
  1338                           ;main.c: 55: INTCON2bits.RBPU=0;
  1339   002116  9EF1               	bcf	241,7,c	;volatile
  1340                           
  1341                           ; BSR set to: 15
  1342                           ;main.c: 56: PADCFG1bits.REPU=1;
  1343   002118  8D53               	bsf	83,6,b	;volatile
  1344                           
  1345                           ; BSR set to: 15
  1346   00211A  0012               	return		;funcret
  1347   00211C                     __end_of_initialisation_des_ports:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _Init *****************
  1351 ;; Defined at:
  1352 ;;		line 4 in file "semaphore.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  sem             1  [STACK] unsigned char 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;		None
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1  [STACK] void 
  1359 ;; Registers used:
  1360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1370 ;;Total ram usage:        0 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 7
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;;		_tache1
  1378 ;; This function uses a reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text3
  1382   00227C                     __ptext3:
  1383                           	callstack 0
  1384   00227C                     _Init:
  1385                           	callstack 20
  1386                           
  1387                           ;semaphore.c: 6: switch (sem)
  1388                           
  1389                           ; BSR set to: 15
  1390                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1391                           ;incstack = 0
  1392   00227C  D006               	goto	l2803
  1393   00227E                     l2799:
  1394                           
  1395                           ;semaphore.c: 9: Val_sem_cna=1;
  1396   00227E  0E01               	movlw	1
  1397   002280  6E39               	movwf	_Val_sem_cna^0,c
  1398                           
  1399                           ;semaphore.c: 10: break;
  1400   002282  D00B               	goto	l1549
  1401   002284                     l2801:
  1402                           
  1403                           ;semaphore.c: 12: Val_sem_rxtx=1;
  1404   002284  0E01               	movlw	1
  1405   002286  6E38               	movwf	_Val_sem_rxtx^0,c
  1406                           
  1407                           ;semaphore.c: 13: break;
  1408   002288  D008               	goto	l1549
  1409   00228A                     l2803:
  1410                           
  1411                           ;stkvar	Init@sem @ sp[(0)+-1]
  1412   00228A  0EFF               	movlw	-1
  1413   00228C  50E3               	movf	plusw1,w,c
  1414                           
  1415                           ; Switch size 1, requested type "simple"
  1416                           ; Number of cases is 2, Range of values is 1 to 2
  1417                           ; switch strategies available:
  1418                           ; Name         Instructions Cycles
  1419                           ; simple_byte            7     4 (average)
  1420                           ;	Chosen strategy is simple_byte
  1421   00228E  0A01               	xorlw	1	; case 1
  1422   002290  B4D8               	btfsc	status,2,c
  1423   002292  D7F5               	goto	l2799
  1424   002294  0A03               	xorlw	3	; case 2
  1425   002296  B4D8               	btfsc	status,2,c
  1426   002298  D7F5               	goto	l2801
  1427   00229A                     l1549:
  1428                           
  1429                           ; _Init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  1430   00229A  52E5               	movf	postdec1,f,c
  1431   00229C  0012               	return		;funcret
  1432   00229E                     __end_of_Init:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _fonction_d_interruption *****************
  1436 ;; Defined at:
  1437 ;;		line 17 in file "systeme.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;Total ram usage:       12 bytes
  1456 ;; Hardware stack levels used: 1
  1457 ;; Hardware stack levels required when called: 6
  1458 ;; This function calls:
  1459 ;;		_tache1
  1460 ;;		_tache2
  1461 ;;		_tache3
  1462 ;;		_tache4
  1463 ;;		_tache5
  1464 ;;		_tache6
  1465 ;; This function is called by:
  1466 ;;		Interrupt level 2
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	intcode
  1471   000008                     __pintcode:
  1472                           	callstack 0
  1473   000008                     _fonction_d_interruption:
  1474                           	callstack 23
  1475                           
  1476                           ;incstack = 0
  1477   000008  CFE9 F015          	movff	fsr0l,??_fonction_d_interruption
  1478   00000C  CFEA F016          	movff	fsr0h,??_fonction_d_interruption+1
  1479   000010  CFE1 F017          	movff	fsr1l,??_fonction_d_interruption+2
  1480   000014  CFE2 F018          	movff	fsr1h,??_fonction_d_interruption+3
  1481   000018  CFD9 F019          	movff	fsr2l,??_fonction_d_interruption+4
  1482   00001C  CFDA F01A          	movff	fsr2h,??_fonction_d_interruption+5
  1483   000020  CFF3 F01B          	movff	prodl,??_fonction_d_interruption+6
  1484   000024  CFF4 F01C          	movff	prodh,??_fonction_d_interruption+7
  1485   000028  CFF6 F01D          	movff	tblptrl,??_fonction_d_interruption+8
  1486   00002C  CFF7 F01E          	movff	tblptrh,??_fonction_d_interruption+9
  1487   000030  CFF8 F01F          	movff	tblptru,??_fonction_d_interruption+10
  1488   000034  CFF5 F020          	movff	tablat,??_fonction_d_interruption+11
  1489   000038  EE1A  F0AC         	lfsr	1,___inthi_sp
  1490                           
  1491                           ;systeme.c: 20: STATUS_TEMPORAIRE=STATUS; W_TEMPORAIRE=WREG; BSR_TEMPORAIRE=BSR;
  1492   00003C  CFD8 F061          	movff	status,97	;volatile
  1493   000040  0100               	movlb	0	; () banked
  1494   000042  6F60               	movwf	96,b
  1495                           
  1496                           ; BSR set to: 0
  1497   000044  CFE0 F062          	movff	bsr,98	;volatile
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;systeme.c: 21: FSR0H_TEMPORAIRE=FSR0H; FSR0L_TEMPORAIRE=FSR0L;
  1501   000048  CFEA F063          	movff	fsr0h,99	;volatile
  1502                           
  1503                           ; BSR set to: 0
  1504   00004C  CFE9 F064          	movff	fsr0l,100	;volatile
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;systeme.c: 24: if(T0IE && T0IF)
  1508   000050  BAF2               	btfsc	4082,5,c	;volatile
  1509                           
  1510                           ; BSR set to: 0
  1511   000052  A4F2               	btfss	4082,2,c	;volatile
  1512   000054  D143               	goto	i2l5309
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;systeme.c: 25: {;systeme.c: 26: if (DEMARRAGE==1)
  1516   000056  0565               	decf	101,w,b
  1517   000058  A4D8               	btfss	status,2,c
  1518   00005A  D004               	goto	i2l5009
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;systeme.c: 27: {;systeme.c: 28: STKPTR=27;
  1522   00005C  0E1B               	movlw	27
  1523   00005E  6EFC               	movwf	252,c	;volatile
  1524                           
  1525                           ;systeme.c: 29: DEMARRAGE=0;
  1526   000060  0E00               	movlw	0
  1527   000062  6F65               	movwf	101,b
  1528   000064                     i2l5009:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;systeme.c: 30: };systeme.c: 34: FSR0H=tache_active;
  1532   000064  C06F FFEA          	movff	111,fsr0h	;volatile
  1533                           
  1534                           ;systeme.c: 35: FSR0L=0;
  1535   000068  0E00               	movlw	0
  1536   00006A  6EE9               	movwf	233,c	;volatile
  1537                           
  1538                           ; BSR set to: 0
  1539                           ;systeme.c: 36: POSTINC0=W_TEMPORAIRE; POSTINC0=STATUS_TEMPORAIRE; POSTINC0=BSR_TEMPORAI
      +                          RE; POSTINC0=STKPTR;
  1540   00006C  C060 FFEE          	movff	96,postinc0	;volatile
  1541                           
  1542                           ; BSR set to: 0
  1543   000070  C061 FFEE          	movff	97,postinc0	;volatile
  1544                           
  1545                           ; BSR set to: 0
  1546   000074  C062 FFEE          	movff	98,postinc0	;volatile
  1547                           
  1548                           ; BSR set to: 0
  1549   000078  CFFC FFEE          	movff	stkptr,postinc0	;volatile
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;systeme.c: 37: POSTINC0=FSR0H_TEMPORAIRE; POSTINC0=FSR0L_TEMPORAIRE; POSTINC0=FSR1H; PO
      +                          STINC0=FSR1L;
  1553   00007C  C063 FFEE          	movff	99,postinc0	;volatile
  1554                           
  1555                           ; BSR set to: 0
  1556   000080  C064 FFEE          	movff	100,postinc0	;volatile
  1557                           
  1558                           ; BSR set to: 0
  1559   000084  CFE2 FFEE          	movff	fsr1h,postinc0	;volatile
  1560                           
  1561                           ; BSR set to: 0
  1562   000088  CFE1 FFEE          	movff	fsr1l,postinc0	;volatile
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;systeme.c: 38: POSTINC0=FSR2H; POSTINC0=FSR2L; POSTINC0=PRODH; POSTINC0=PRODL;
  1566   00008C  CFDA FFEE          	movff	fsr2h,postinc0	;volatile
  1567                           
  1568                           ; BSR set to: 0
  1569   000090  CFD9 FFEE          	movff	fsr2l,postinc0	;volatile
  1570                           
  1571                           ; BSR set to: 0
  1572   000094  CFF4 FFEE          	movff	prodh,postinc0	;volatile
  1573                           
  1574                           ; BSR set to: 0
  1575   000098  CFF3 FFEE          	movff	prodl,postinc0	;volatile
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;systeme.c: 39: POSTINC0=TBLPTRU; POSTINC0=TBLPTRH; POSTINC0=TBLPTRL; POSTINC0=TABLAT;
  1579   00009C  CFF8 FFEE          	movff	tblptru,postinc0	;volatile
  1580                           
  1581                           ; BSR set to: 0
  1582   0000A0  CFF7 FFEE          	movff	tblptrh,postinc0	;volatile
  1583                           
  1584                           ; BSR set to: 0
  1585   0000A4  CFF6 FFEE          	movff	tblptrl,postinc0	;volatile
  1586                           
  1587                           ; BSR set to: 0
  1588   0000A8  CFF5 FFEE          	movff	tablat,postinc0	;volatile
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;systeme.c: 40: POSTINC0=PCLATU; POSTINC0=PCLATH;
  1592   0000AC  CFFB FFEE          	movff	pclatu,postinc0	;volatile
  1593                           
  1594                           ; BSR set to: 0
  1595   0000B0  CFFA FFEE          	movff	pclath,postinc0	;volatile
  1596                           
  1597                           ;systeme.c: 44: FSR1H=0;
  1598   0000B4  0E00               	movlw	0
  1599   0000B6  6EE2               	movwf	226,c	;volatile
  1600                           
  1601                           ;systeme.c: 45: FSR1L=0;
  1602   0000B8  0E00               	movlw	0
  1603   0000BA  6EE1               	movwf	225,c	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;systeme.c: 46: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1607   0000BC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1608                           
  1609                           ; BSR set to: 0
  1610   0000C0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1611                           
  1612                           ; BSR set to: 0
  1613   0000C4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1614                           
  1615                           ; BSR set to: 0
  1616   0000C8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;systeme.c: 47: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1620   0000CC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1621                           
  1622                           ; BSR set to: 0
  1623   0000D0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626   0000D4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1627                           
  1628                           ; BSR set to: 0
  1629   0000D8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;systeme.c: 48: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1633   0000DC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1634                           
  1635                           ; BSR set to: 0
  1636   0000E0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1637                           
  1638                           ; BSR set to: 0
  1639   0000E4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1640                           
  1641                           ; BSR set to: 0
  1642   0000E8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;systeme.c: 49: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1646   0000EC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1647                           
  1648                           ; BSR set to: 0
  1649   0000F0  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1650                           
  1651                           ; BSR set to: 0
  1652   0000F4  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1653                           
  1654                           ; BSR set to: 0
  1655   0000F8  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1656                           
  1657                           ; BSR set to: 0
  1658                           ;systeme.c: 51: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1659   0000FC  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1660                           
  1661                           ; BSR set to: 0
  1662   000100  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665   000104  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1666                           
  1667                           ; BSR set to: 0
  1668   000108  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;systeme.c: 52: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1672   00010C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1673                           
  1674                           ; BSR set to: 0
  1675   000110  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1676                           
  1677                           ; BSR set to: 0
  1678   000114  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1679                           
  1680                           ; BSR set to: 0
  1681   000118  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;systeme.c: 53: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1685   00011C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1686                           
  1687                           ; BSR set to: 0
  1688   000120  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1689                           
  1690                           ; BSR set to: 0
  1691   000124  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1692                           
  1693                           ; BSR set to: 0
  1694   000128  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1695                           
  1696                           ; BSR set to: 0
  1697                           ;systeme.c: 54: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1698   00012C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1699                           
  1700                           ; BSR set to: 0
  1701   000130  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704   000134  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707   000138  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;systeme.c: 56: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1711   00013C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1712                           
  1713                           ; BSR set to: 0
  1714   000140  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1715                           
  1716                           ; BSR set to: 0
  1717   000144  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1718                           
  1719                           ; BSR set to: 0
  1720   000148  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1721                           
  1722                           ; BSR set to: 0
  1723                           ;systeme.c: 57: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1724   00014C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1725                           
  1726                           ; BSR set to: 0
  1727   000150  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1728                           
  1729                           ; BSR set to: 0
  1730   000154  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1731                           
  1732                           ; BSR set to: 0
  1733   000158  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1734                           
  1735                           ; BSR set to: 0
  1736                           ;systeme.c: 58: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1737   00015C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1738                           
  1739                           ; BSR set to: 0
  1740   000160  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743   000164  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1744                           
  1745                           ; BSR set to: 0
  1746   000168  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1747                           
  1748                           ; BSR set to: 0
  1749                           ;systeme.c: 59: POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;POSTINC0=POSTINC1;
  1750   00016C  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1751                           
  1752                           ; BSR set to: 0
  1753   000170  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1754                           
  1755                           ; BSR set to: 0
  1756   000174  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1757                           
  1758                           ; BSR set to: 0
  1759   000178  CFE6 FFEE          	movff	postinc1,postinc0	;volatile
  1760                           
  1761                           ;systeme.c: 62: TMR0=(0xFFFF-30000);
  1762   00017C  0E8A               	movlw	138
  1763   00017E  6ED7               	movwf	215,c	;volatile
  1764   000180  0ECF               	movlw	207
  1765   000182  6ED6               	movwf	214,c	;volatile
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;systeme.c: 63: T0IF=0;
  1769   000184  94F2               	bcf	4082,2,c	;volatile
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;systeme.c: 65: Tick_Count++;
  1773   000186  4B71               	infsnz	113,f,b
  1774   000188  2B72               	incf	114,f,b
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;systeme.c: 67: pointeur_de_tache++;
  1778   00018A  2B70               	incf	112,f,b
  1779                           
  1780                           ; BSR set to: 0
  1781                           ;systeme.c: 68: if (pointeur_de_tache==6)
  1782   00018C  0E06               	movlw	6
  1783   00018E  1970               	xorwf	112,w,b
  1784   000190  A4D8               	btfss	status,2,c
  1785   000192  D002               	goto	i2l5153
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;systeme.c: 69: pointeur_de_tache=0;
  1789   000194  0E00               	movlw	0
  1790   000196  6F70               	movwf	112,b
  1791   000198                     i2l5153:
  1792                           
  1793                           ; BSR set to: 0
  1794                           ;systeme.c: 70: tache_active=queue[pointeur_de_tache];
  1795   000198  0E69               	movlw	105
  1796   00019A  2570               	addwf	112,w,b
  1797   00019C  6ED9               	movwf	fsr2l,c
  1798   00019E  6ADA               	clrf	fsr2h,c
  1799   0001A0  0E00               	movlw	0
  1800   0001A2  22DA               	addwfc	fsr2h,f,c
  1801   0001A4  50DF               	movf	indf2,w,c
  1802   0001A6  6F6F               	movwf	111,b
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;systeme.c: 75: FSR1H=0;
  1806   0001A8  0E00               	movlw	0
  1807   0001AA  6EE2               	movwf	226,c	;volatile
  1808                           
  1809                           ; BSR set to: 0
  1810                           ;systeme.c: 76: FSR1L=0;
  1811   0001AC  0E00               	movlw	0
  1812   0001AE  6EE1               	movwf	225,c	;volatile
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;systeme.c: 77: FSR0H=tache_active;
  1816   0001B0  C06F FFEA          	movff	111,fsr0h	;volatile
  1817                           
  1818                           ; BSR set to: 0
  1819                           ;systeme.c: 78: FSR0L=18;
  1820   0001B4  0E12               	movlw	18
  1821   0001B6  6EE9               	movwf	233,c	;volatile
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;systeme.c: 79: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1825   0001B8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1826                           
  1827                           ; BSR set to: 0
  1828   0001BC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1829                           
  1830                           ; BSR set to: 0
  1831   0001C0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1832                           
  1833                           ; BSR set to: 0
  1834   0001C4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;systeme.c: 80: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1838   0001C8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1839                           
  1840                           ; BSR set to: 0
  1841   0001CC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1842                           
  1843                           ; BSR set to: 0
  1844   0001D0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1845                           
  1846                           ; BSR set to: 0
  1847   0001D4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;systeme.c: 81: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1851   0001D8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1852                           
  1853                           ; BSR set to: 0
  1854   0001DC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1855                           
  1856                           ; BSR set to: 0
  1857   0001E0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1858                           
  1859                           ; BSR set to: 0
  1860   0001E4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1861                           
  1862                           ; BSR set to: 0
  1863                           ;systeme.c: 82: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1864   0001E8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1865                           
  1866                           ; BSR set to: 0
  1867   0001EC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1868                           
  1869                           ; BSR set to: 0
  1870   0001F0  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1871                           
  1872                           ; BSR set to: 0
  1873   0001F4  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;systeme.c: 84: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1877   0001F8  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1878                           
  1879                           ; BSR set to: 0
  1880   0001FC  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1881                           
  1882                           ; BSR set to: 0
  1883   000200  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1884                           
  1885                           ; BSR set to: 0
  1886   000204  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;systeme.c: 85: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1890   000208  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1891                           
  1892                           ; BSR set to: 0
  1893   00020C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1894                           
  1895                           ; BSR set to: 0
  1896   000210  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1897                           
  1898                           ; BSR set to: 0
  1899   000214  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1900                           
  1901                           ; BSR set to: 0
  1902                           ;systeme.c: 86: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1903   000218  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1904                           
  1905                           ; BSR set to: 0
  1906   00021C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1907                           
  1908                           ; BSR set to: 0
  1909   000220  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1910                           
  1911                           ; BSR set to: 0
  1912   000224  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;systeme.c: 87: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1916   000228  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919   00022C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1920                           
  1921                           ; BSR set to: 0
  1922   000230  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925   000234  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;systeme.c: 89: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1929   000238  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1930                           
  1931                           ; BSR set to: 0
  1932   00023C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1933                           
  1934                           ; BSR set to: 0
  1935   000240  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1936                           
  1937                           ; BSR set to: 0
  1938   000244  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;systeme.c: 90: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1942   000248  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1943                           
  1944                           ; BSR set to: 0
  1945   00024C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1946                           
  1947                           ; BSR set to: 0
  1948   000250  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1949                           
  1950                           ; BSR set to: 0
  1951   000254  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1952                           
  1953                           ; BSR set to: 0
  1954                           ;systeme.c: 91: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1955   000258  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1956                           
  1957                           ; BSR set to: 0
  1958   00025C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1959                           
  1960                           ; BSR set to: 0
  1961   000260  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1962                           
  1963                           ; BSR set to: 0
  1964   000264  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;systeme.c: 92: POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;POSTINC1=POSTINC0;
  1968   000268  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1969                           
  1970                           ; BSR set to: 0
  1971   00026C  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1972                           
  1973                           ; BSR set to: 0
  1974   000270  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1975                           
  1976                           ; BSR set to: 0
  1977   000274  CFEE FFE6          	movff	postinc0,postinc1	;volatile
  1978                           
  1979                           ; BSR set to: 0
  1980                           ;systeme.c: 96: FSR0H=tache_active;
  1981   000278  C06F FFEA          	movff	111,fsr0h	;volatile
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;systeme.c: 97: FSR0L=0;
  1985   00027C  0E00               	movlw	0
  1986   00027E  6EE9               	movwf	233,c	;volatile
  1987                           
  1988                           ; BSR set to: 0
  1989                           ;systeme.c: 99: W_TEMPORAIRE=POSTINC0; STATUS_TEMPORAIRE=POSTINC0; BSR_TEMPORAIRE=POSTIN
      +                          C0; STKPTR=POSTINC0;
  1990   000280  CFEE F060          	movff	postinc0,96	;volatile
  1991                           
  1992                           ; BSR set to: 0
  1993   000284  CFEE F061          	movff	postinc0,97	;volatile
  1994                           
  1995                           ; BSR set to: 0
  1996   000288  CFEE F062          	movff	postinc0,98	;volatile
  1997                           
  1998                           ; BSR set to: 0
  1999   00028C  CFEE FFFC          	movff	postinc0,stkptr	;volatile
  2000                           
  2001                           ; BSR set to: 0
  2002                           ;systeme.c: 100: FSR0H_TEMPORAIRE=POSTINC0; FSR0L_TEMPORAIRE=POSTINC0; FSR1H=POSTINC0; F
      +                          SR1L=POSTINC0;
  2003   000290  CFEE F063          	movff	postinc0,99	;volatile
  2004                           
  2005                           ; BSR set to: 0
  2006   000294  CFEE F064          	movff	postinc0,100	;volatile
  2007                           
  2008                           ; BSR set to: 0
  2009   000298  CFEE FFE2          	movff	postinc0,fsr1h	;volatile
  2010                           
  2011                           ; BSR set to: 0
  2012   00029C  CFEE FFE1          	movff	postinc0,fsr1l	;volatile
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;systeme.c: 101: FSR2H=POSTINC0; FSR2L=POSTINC0; PRODH=POSTINC0; PRODL=POSTINC0;
  2016   0002A0  CFEE FFDA          	movff	postinc0,fsr2h	;volatile
  2017                           
  2018                           ; BSR set to: 0
  2019   0002A4  CFEE FFD9          	movff	postinc0,fsr2l	;volatile
  2020                           
  2021                           ; BSR set to: 0
  2022   0002A8  CFEE FFF4          	movff	postinc0,prodh	;volatile
  2023                           
  2024                           ; BSR set to: 0
  2025   0002AC  CFEE FFF3          	movff	postinc0,prodl	;volatile
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;systeme.c: 102: TBLPTRU=POSTINC0; TBLPTRH=POSTINC0; TBLPTRL=POSTINC0; TABLAT=POSTINC0;
  2029   0002B0  CFEE FFF8          	movff	postinc0,tblptru	;volatile
  2030                           
  2031                           ; BSR set to: 0
  2032   0002B4  CFEE FFF7          	movff	postinc0,tblptrh	;volatile
  2033                           
  2034                           ; BSR set to: 0
  2035   0002B8  CFEE FFF6          	movff	postinc0,tblptrl	;volatile
  2036                           
  2037                           ; BSR set to: 0
  2038   0002BC  CFEE FFF5          	movff	postinc0,tablat	;volatile
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;systeme.c: 103: PCLATU=POSTINC0; PCLATH=POSTINC0;
  2042   0002C0  CFEE FFFB          	movff	postinc0,pclatu	;volatile
  2043                           
  2044                           ; BSR set to: 0
  2045   0002C4  CFEE FFFA          	movff	postinc0,pclath	;volatile
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;systeme.c: 106: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=BSR_TEMPORAIRE;
  2049   0002C8  C064 FFE9          	movff	100,fsr0l	;volatile
  2050                           
  2051                           ; BSR set to: 0
  2052   0002CC  C063 FFEA          	movff	99,fsr0h	;volatile
  2053                           
  2054                           ; BSR set to: 0
  2055   0002D0  C062 FFE0          	movff	98,bsr	;volatile
  2056                           
  2057                           ; BSR set to: 0
  2058                           ;systeme.c: 107: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2059   0002D4  5160               	movf	96,w,b
  2060                           
  2061                           ; BSR set to: 0
  2062   0002D6  C061 FFD8          	movff	97,status	;volatile
  2063   0002DA  0010               	retfie		;# 
  2064   0002DC                     i2l5309:
  2065                           
  2066                           ;systeme.c: 113: };systeme.c: 116: FSR0L=FSR0L_TEMPORAIRE; FSR0H=FSR0H_TEMPORAIRE; BSR=B
      +                          SR_TEMPORAIRE;
  2067   0002DC  C064 FFE9          	movff	100,fsr0l	;volatile
  2068   0002E0  C063 FFEA          	movff	99,fsr0h	;volatile
  2069   0002E4  C062 FFE0          	movff	98,bsr	;volatile
  2070                           
  2071                           ;systeme.c: 117: WREG=W_TEMPORAIRE; STATUS=STATUS_TEMPORAIRE;
  2072   0002E8  0100               	movlb	0	; () banked
  2073   0002EA  5160               	movf	96,w,b
  2074                           
  2075                           ; BSR set to: 0
  2076   0002EC  C061 FFD8          	movff	97,status	;volatile
  2077   0002F0  0010               	retfie		;# 
  2078                           
  2079                           ;systeme.c: 123: tache1();
  2080   0002F2  EC6D  F008         	call	_tache1	;wreg free
  2081                           
  2082                           ;systeme.c: 124: tache2();
  2083   0002F6  EC57  F00B         	call	_tache2	;wreg free
  2084                           
  2085                           ;systeme.c: 125: tache3();
  2086   0002FA  EC44  F00C         	call	_tache3	;wreg free
  2087                           
  2088                           ;systeme.c: 126: tache4();
  2089   0002FE  ECB3  F00C         	call	_tache4	;wreg free
  2090                           
  2091                           ;systeme.c: 127: tache5();
  2092   000302  ECD1  F00B         	call	_tache5	;wreg free
  2093                           
  2094                           ;systeme.c: 128: tache6();
  2095   000306  EC30  F010         	call	_tache6	;wreg free
  2096   00030A  C020  FFF5         	movff	??_fonction_d_interruption+11,tablat
  2097   00030E  C01F  FFF8         	movff	??_fonction_d_interruption+10,tblptru
  2098   000312  C01E  FFF7         	movff	??_fonction_d_interruption+9,tblptrh
  2099   000316  C01D  FFF6         	movff	??_fonction_d_interruption+8,tblptrl
  2100   00031A  C01C  FFF4         	movff	??_fonction_d_interruption+7,prodh
  2101   00031E  C01B  FFF3         	movff	??_fonction_d_interruption+6,prodl
  2102   000322  C01A  FFDA         	movff	??_fonction_d_interruption+5,fsr2h
  2103   000326  C019  FFD9         	movff	??_fonction_d_interruption+4,fsr2l
  2104   00032A  C018  FFE2         	movff	??_fonction_d_interruption+3,fsr1h
  2105   00032E  C017  FFE1         	movff	??_fonction_d_interruption+2,fsr1l
  2106   000332  C016  FFEA         	movff	??_fonction_d_interruption+1,fsr0h
  2107   000336  C015  FFE9         	movff	??_fonction_d_interruption,fsr0l
  2108   00033A  0011               	retfie		f
  2109   00033C                     __end_of_fonction_d_interruption:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _tache6 *****************
  2113 ;; Defined at:
  2114 ;;		line 3 in file "T6.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  n               1    8[COMRAM] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;Total ram usage:        1 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 2
  2135 ;; This function calls:
  2136 ;;		_lecture_normale
  2137 ;; This function is called by:
  2138 ;;		_fonction_d_interruption
  2139 ;;		_initialisation_du_systeme
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text5
  2144   002060                     __ptext5:
  2145                           	callstack 0
  2146   002060                     _tache6:
  2147                           	callstack 26
  2148                           
  2149                           ;T6.c: 7: {;T6.c: 8: n = lecture_normale(badge);
  2150                           
  2151                           ;incstack = 0
  2152                           ;T6.c: 5: unsigned char n;;T6.c: 6: while(1)
  2153   002060  0E75               	movlw	117
  2154   002062  6E03               	movwf	lecture_normale@stid_id^0,c
  2155   002064  0E00               	movlw	0
  2156   002066  6E04               	movwf	(lecture_normale@stid_id+1)^0,c
  2157   002068  ECD7  F00D         	call	_lecture_normale	;wreg free
  2158   00206C  6E09               	movwf	tache6@n^0,c
  2159                           
  2160                           ;T6.c: 9: if (n > 0)
  2161   00206E  5009               	movf	tache6@n^0,w,c
  2162   002070  B4D8               	btfsc	status,2,c
  2163   002072  D015               	goto	i2l4975
  2164                           
  2165                           ;T6.c: 10: {;T6.c: 11: if (n == 4)
  2166   002074  0E04               	movlw	4
  2167   002076  1809               	xorwf	tache6@n^0,w,c
  2168   002078  A4D8               	btfss	status,2,c
  2169   00207A  D004               	goto	i2l4967
  2170                           
  2171                           ;T6.c: 12: {;T6.c: 13: n_octet_badge = n;
  2172   00207C  C009  F07F         	movff	tache6@n,127
  2173                           
  2174                           ;T6.c: 16: Operator = 2;
  2175   002080  0E02               	movlw	2
  2176   002082  D007               	goto	L1
  2177   002084                     i2l4967:
  2178                           
  2179                           ;T6.c: 18: else if (n == 8)
  2180   002084  0E08               	movlw	8
  2181   002086  1809               	xorwf	tache6@n^0,w,c
  2182   002088  A4D8               	btfss	status,2,c
  2183   00208A  D005               	goto	i2l4973
  2184                           
  2185                           ;T6.c: 19: {;T6.c: 20: n_octet_badge = n;
  2186   00208C  C009  F07F         	movff	tache6@n,127
  2187                           
  2188                           ;T6.c: 21: Operator = 1;
  2189   002090  0E01               	movlw	1
  2190   002092                     L1:
  2191   002092  0100               	movlb	0	; () banked
  2192   002094  D008               	goto	L2
  2193   002096                     i2l4973:
  2194                           
  2195                           ;T6.c: 23: else;T6.c: 24: {;T6.c: 25: n_octet_badge = 0;
  2196   002096  0E00               	movlw	0
  2197   002098  0100               	movlb	0	; () banked
  2198   00209A  6F7F               	movwf	127,b
  2199   00209C  D7E1               	goto	__ptext5
  2200   00209E                     i2l4975:
  2201                           
  2202                           ;T6.c: 30: else;T6.c: 31: {;T6.c: 32: n_octet_badge = 0;
  2203   00209E  0E00               	movlw	0
  2204   0020A0  0100               	movlb	0	; () banked
  2205   0020A2  6F7F               	movwf	127,b
  2206                           
  2207                           ;T6.c: 33: Operator = 0;
  2208   0020A4  0E00               	movlw	0
  2209   0020A6                     L2:
  2210   0020A6  6F82               	movwf	130,b
  2211   0020A8  D7DB               	goto	__ptext5
  2212   0020AA                     __end_of_tache6:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _lecture_normale *****************
  2216 ;; Defined at:
  2217 ;;		line 5 in file "stid.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  stid_id         2    2[COMRAM] PTR unsigned char 
  2220 ;;		 -> badge(10), 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  octet           1    7[COMRAM] unsigned char 
  2223 ;;  n_bit           1    6[COMRAM] unsigned char 
  2224 ;;  n_octet         1    5[COMRAM] unsigned char 
  2225 ;;  temps_attent    1    4[COMRAM] unsigned char 
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      unsigned char 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2239 ;;Total ram usage:        6 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 1
  2242 ;; This function calls:
  2243 ;;		_stid_delai_us
  2244 ;; This function is called by:
  2245 ;;		_tache6
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text6
  2250   001BAE                     __ptext6:
  2251                           	callstack 0
  2252   001BAE                     _lecture_normale:
  2253                           	callstack 26
  2254                           
  2255                           ;stid.c: 7: unsigned char temps_attente,n_octet,n_bit,octet;;stid.c: 9: TRISDbits.TRISD1
      +                          =1;
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;incstack = 0
  2259   001BAE  8295               	bsf	149,1,c	;volatile
  2260                           
  2261                           ;stid.c: 10: LATDbits.LATD3=0;
  2262   001BB0  968C               	bcf	140,3,c	;volatile
  2263                           
  2264                           ;stid.c: 11: LATDbits.LATD2=0;
  2265   001BB2  948C               	bcf	140,2,c	;volatile
  2266                           
  2267                           ;stid.c: 12: stid_delai_us(100);
  2268   001BB4  0E00               	movlw	0
  2269   001BB6  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2270   001BB8  0E64               	movlw	100
  2271   001BBA  6E01               	movwf	stid_delai_us@isdu^0,c
  2272   001BBC  ECB5  F011         	call	_stid_delai_us	;wreg free
  2273                           
  2274                           ;stid.c: 13: LATDbits.LATD3=1;
  2275   001BC0  868C               	bsf	140,3,c	;volatile
  2276                           
  2277                           ;stid.c: 14: temps_attente=0;
  2278   001BC2  0E00               	movlw	0
  2279   001BC4  6E05               	movwf	lecture_normale@temps_attente^0,c
  2280   001BC6                     i2l4495:
  2281                           
  2282                           ;stid.c: 16: {;stid.c: 17: stid_delai_us(1000);
  2283   001BC6  0E03               	movlw	3
  2284   001BC8  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2285   001BCA  0EE8               	movlw	232
  2286   001BCC  6E01               	movwf	stid_delai_us@isdu^0,c
  2287   001BCE  ECB5  F011         	call	_stid_delai_us	;wreg free
  2288                           
  2289                           ;stid.c: 18: temps_attente++;
  2290   001BD2  2A05               	incf	lecture_normale@temps_attente^0,f,c
  2291                           
  2292                           ;stid.c: 19: if (PORTDbits.RD0==1)
  2293   001BD4  A083               	btfss	131,0,c	;volatile
  2294   001BD6  D002               	goto	i2l4503
  2295                           
  2296                           ;stid.c: 20: temps_attente=65;
  2297   001BD8  0E41               	movlw	65
  2298   001BDA  6E05               	movwf	lecture_normale@temps_attente^0,c
  2299   001BDC                     i2l4503:
  2300                           
  2301                           ;stid.c: 21: };stid.c: 22: while(temps_attente<65);
  2302   001BDC  0E40               	movlw	64
  2303   001BDE  6405               	cpfsgt	lecture_normale@temps_attente^0,c
  2304   001BE0  D7F2               	goto	i2l4495
  2305                           
  2306                           ;stid.c: 24: if (PORTDbits.RD0==1)
  2307   001BE2  A083               	btfss	131,0,c	;volatile
  2308   001BE4  D033               	goto	i2l4539
  2309                           
  2310                           ;stid.c: 25: {;stid.c: 26: n_octet=0;
  2311   001BE6  0E00               	movlw	0
  2312   001BE8  6E06               	movwf	lecture_normale@n_octet^0,c
  2313   001BEA                     i2l1666:
  2314                           
  2315                           ;stid.c: 29: {;stid.c: 30: octet=0;
  2316   001BEA  0E00               	movlw	0
  2317   001BEC  6E08               	movwf	lecture_normale@octet^0,c
  2318                           
  2319                           ;stid.c: 31: for(n_bit=0;n_bit<8;n_bit++)
  2320   001BEE  0E00               	movlw	0
  2321   001BF0  6E07               	movwf	lecture_normale@n_bit^0,c
  2322   001BF2                     i2l1667:
  2323                           
  2324                           ;stid.c: 32: {;stid.c: 33: if (PORTDbits.RD1==1)
  2325   001BF2  A283               	btfss	131,1,c	;volatile
  2326   001BF4  D003               	goto	i2l1669
  2327                           
  2328                           ;stid.c: 34: octet=(octet|0x01);
  2329   001BF6  5008               	movf	lecture_normale@octet^0,w,c
  2330   001BF8  0901               	iorlw	1
  2331   001BFA  6E08               	movwf	lecture_normale@octet^0,c
  2332   001BFC                     i2l1669:
  2333                           
  2334                           ;stid.c: 35: octet=octet<<1;
  2335   001BFC  5008               	movf	lecture_normale@octet^0,w,c
  2336   001BFE  2408               	addwf	lecture_normale@octet^0,w,c
  2337   001C00  6E08               	movwf	lecture_normale@octet^0,c
  2338                           
  2339                           ;stid.c: 36: stid_delai_us(100);
  2340   001C02  0E00               	movlw	0
  2341   001C04  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2342   001C06  0E64               	movlw	100
  2343   001C08  6E01               	movwf	stid_delai_us@isdu^0,c
  2344   001C0A  ECB5  F011         	call	_stid_delai_us	;wreg free
  2345                           
  2346                           ;stid.c: 37: LATDbits.LATD2=1;
  2347   001C0E  848C               	bsf	140,2,c	;volatile
  2348                           
  2349                           ;stid.c: 38: stid_delai_us(500);
  2350   001C10  0E01               	movlw	1
  2351   001C12  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2352   001C14  0EF4               	movlw	244
  2353   001C16  6E01               	movwf	stid_delai_us@isdu^0,c
  2354   001C18  ECB5  F011         	call	_stid_delai_us	;wreg free
  2355                           
  2356                           ;stid.c: 39: LATDbits.LATD2=0;
  2357   001C1C  948C               	bcf	140,2,c	;volatile
  2358                           
  2359                           ;stid.c: 40: stid_delai_us(400);
  2360   001C1E  0E01               	movlw	1
  2361   001C20  6E02               	movwf	(stid_delai_us@isdu+1)^0,c
  2362   001C22  0E90               	movlw	144
  2363   001C24  6E01               	movwf	stid_delai_us@isdu^0,c
  2364   001C26  ECB5  F011         	call	_stid_delai_us	;wreg free
  2365   001C2A  2A07               	incf	lecture_normale@n_bit^0,f,c
  2366   001C2C  0E07               	movlw	7
  2367   001C2E  6407               	cpfsgt	lecture_normale@n_bit^0,c
  2368   001C30  D7E0               	goto	i2l1667
  2369                           
  2370                           ;stid.c: 41: };stid.c: 42: stid_id[n_octet]=octet;
  2371   001C32  5006               	movf	lecture_normale@n_octet^0,w,c
  2372   001C34  2403               	addwf	lecture_normale@stid_id^0,w,c
  2373   001C36  6ED9               	movwf	fsr2l,c
  2374   001C38  0E00               	movlw	0
  2375   001C3A  2004               	addwfc	(lecture_normale@stid_id+1)^0,w,c
  2376   001C3C  6EDA               	movwf	fsr2h,c
  2377   001C3E  C008  FFDF         	movff	lecture_normale@octet,indf2
  2378                           
  2379                           ;stid.c: 43: n_octet++;
  2380   001C42  2A06               	incf	lecture_normale@n_octet^0,f,c
  2381                           
  2382                           ;stid.c: 44: };stid.c: 45: while(PORTDbits.RD0==1);
  2383   001C44  B083               	btfsc	131,0,c	;volatile
  2384   001C46  D7D1               	goto	i2l1666
  2385                           
  2386                           ;stid.c: 47: return n_octet;
  2387   001C48  5006               	movf	lecture_normale@n_octet^0,w,c
  2388   001C4A  0012               	return	
  2389   001C4C                     i2l4539:
  2390                           
  2391                           ;stid.c: 49: else;stid.c: 50: {;stid.c: 51: return 0;
  2392   001C4C  0E00               	movlw	0
  2393   001C4E  0012               	return		;funcret
  2394   001C50                     __end_of_lecture_normale:
  2395                           	callstack 0
  2396                           
  2397 ;; *************** function _stid_delai_us *****************
  2398 ;; Defined at:
  2399 ;;		line 56 in file "stid.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  isdu            2    0[COMRAM] unsigned int 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;Total ram usage:        2 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_lecture_normale
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text7
  2427   00236A                     __ptext7:
  2428                           	callstack 0
  2429   00236A                     _stid_delai_us:
  2430                           	callstack 26
  2431                           
  2432                           ;stid.c: 58: while(isdu>0)
  2433                           
  2434                           ;incstack = 0
  2435   00236A  D006               	goto	i2l4349
  2436   00236C                     i2l1676:
  2437                           
  2438                           ;stid.c: 59: {;stid.c: 60: __nop();__nop();__nop();
  2439   00236C  F000               	nop	
  2440   00236E  F000               	nop	
  2441   002370  F000               	nop	
  2442                           
  2443                           ;stid.c: 61: isdu--;
  2444   002372  0601               	decf	stid_delai_us@isdu^0,f,c
  2445   002374  A0D8               	btfss	status,0,c
  2446   002376  0602               	decf	(stid_delai_us@isdu+1)^0,f,c
  2447   002378                     i2l4349:
  2448   002378  5001               	movf	stid_delai_us@isdu^0,w,c
  2449   00237A  1002               	iorwf	(stid_delai_us@isdu+1)^0,w,c
  2450   00237C  B4D8               	btfsc	status,2,c
  2451   00237E  0012               	return	
  2452   002380  D7F5               	goto	i2l1676
  2453   002382                     __end_of_stid_delai_us:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _tache5 *****************
  2457 ;; Defined at:
  2458 ;;		line 3 in file "T5.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  a               2    0[COMRAM] unsigned int 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;Total ram usage:        2 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_fonction_d_interruption
  2482 ;;		_initialisation_du_systeme
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text8
  2487   0017A2                     __ptext8:
  2488                           	callstack 0
  2489   0017A2                     _tache5:
  2490                           	callstack 28
  2491                           
  2492                           ;T5.c: 7: {;T5.c: 11: while (PIR1bits.TX1IF==0); TXREG1='t';while (TXSTA1bits.TRMT==0);
  2493                           
  2494                           ;incstack = 0
  2495                           ;T5.c: 5: unsigned int a;;T5.c: 6: while(1)
  2496   0017A2  A89E               	btfss	158,4,c	;volatile
  2497   0017A4  D7FE               	goto	__ptext8
  2498   0017A6  0E74               	movlw	116
  2499   0017A8  6EAD               	movwf	173,c	;volatile
  2500   0017AA                     i2l964:
  2501   0017AA  A2AC               	btfss	172,1,c	;volatile
  2502   0017AC  D7FE               	goto	i2l964
  2503   0017AE                     i2u174_40:
  2504   0017AE  A89E               	btfss	158,4,c	;volatile
  2505   0017B0  D7FE               	goto	i2u174_40
  2506   0017B2  0E61               	movlw	97
  2507   0017B4  6EAD               	movwf	173,c	;volatile
  2508   0017B6                     i2l970:
  2509   0017B6  A2AC               	btfss	172,1,c	;volatile
  2510   0017B8  D7FE               	goto	i2l970
  2511   0017BA                     i2u176_40:
  2512   0017BA  A89E               	btfss	158,4,c	;volatile
  2513   0017BC  D7FE               	goto	i2u176_40
  2514   0017BE  0E63               	movlw	99
  2515   0017C0  6EAD               	movwf	173,c	;volatile
  2516   0017C2                     i2l976:
  2517   0017C2  A2AC               	btfss	172,1,c	;volatile
  2518   0017C4  D7FE               	goto	i2l976
  2519   0017C6                     i2u178_40:
  2520   0017C6  A89E               	btfss	158,4,c	;volatile
  2521   0017C8  D7FE               	goto	i2u178_40
  2522   0017CA  0E68               	movlw	104
  2523   0017CC  6EAD               	movwf	173,c	;volatile
  2524   0017CE                     i2l982:
  2525   0017CE  A2AC               	btfss	172,1,c	;volatile
  2526   0017D0  D7FE               	goto	i2l982
  2527   0017D2                     i2u180_40:
  2528   0017D2  A89E               	btfss	158,4,c	;volatile
  2529   0017D4  D7FE               	goto	i2u180_40
  2530   0017D6  0E65               	movlw	101
  2531   0017D8  6EAD               	movwf	173,c	;volatile
  2532   0017DA                     i2l988:
  2533   0017DA  A2AC               	btfss	172,1,c	;volatile
  2534   0017DC  D7FE               	goto	i2l988
  2535   0017DE                     i2u182_40:
  2536   0017DE  A89E               	btfss	158,4,c	;volatile
  2537   0017E0  D7FE               	goto	i2u182_40
  2538   0017E2  0E35               	movlw	53
  2539   0017E4  6EAD               	movwf	173,c	;volatile
  2540   0017E6                     i2l994:
  2541   0017E6  A2AC               	btfss	172,1,c	;volatile
  2542   0017E8  D7FE               	goto	i2l994
  2543   0017EA                     i2u184_40:
  2544   0017EA  A89E               	btfss	158,4,c	;volatile
  2545   0017EC  D7FE               	goto	i2u184_40
  2546   0017EE  0E5F               	movlw	95
  2547   0017F0  6EAD               	movwf	173,c	;volatile
  2548   0017F2                     i2l1000:
  2549   0017F2  A2AC               	btfss	172,1,c	;volatile
  2550   0017F4  D7FE               	goto	i2l1000
  2551   0017F6                     i2u186_40:
  2552   0017F6  A89E               	btfss	158,4,c	;volatile
  2553   0017F8  D7FE               	goto	i2u186_40
  2554   0017FA  0E65               	movlw	101
  2555   0017FC  6EAD               	movwf	173,c	;volatile
  2556   0017FE                     i2l1006:
  2557   0017FE  A2AC               	btfss	172,1,c	;volatile
  2558   001800  D7FE               	goto	i2l1006
  2559   001802                     i2u188_40:
  2560   001802  A89E               	btfss	158,4,c	;volatile
  2561   001804  D7FE               	goto	i2u188_40
  2562   001806  0E6E               	movlw	110
  2563   001808  6EAD               	movwf	173,c	;volatile
  2564   00180A                     i2l1012:
  2565   00180A  A2AC               	btfss	172,1,c	;volatile
  2566   00180C  D7FE               	goto	i2l1012
  2567   00180E                     i2u190_40:
  2568   00180E  A89E               	btfss	158,4,c	;volatile
  2569   001810  D7FE               	goto	i2u190_40
  2570   001812  0E5F               	movlw	95
  2571   001814  6EAD               	movwf	173,c	;volatile
  2572   001816                     i2l1018:
  2573   001816  A2AC               	btfss	172,1,c	;volatile
  2574   001818  D7FE               	goto	i2l1018
  2575   00181A                     i2u192_40:
  2576   00181A  A89E               	btfss	158,4,c	;volatile
  2577   00181C  D7FE               	goto	i2u192_40
  2578   00181E  0E63               	movlw	99
  2579   001820  6EAD               	movwf	173,c	;volatile
  2580   001822                     i2l1024:
  2581   001822  A2AC               	btfss	172,1,c	;volatile
  2582   001824  D7FE               	goto	i2l1024
  2583   001826                     i2u194_40:
  2584   001826  A89E               	btfss	158,4,c	;volatile
  2585   001828  D7FE               	goto	i2u194_40
  2586   00182A  0E6F               	movlw	111
  2587   00182C  6EAD               	movwf	173,c	;volatile
  2588   00182E                     i2l1030:
  2589   00182E  A2AC               	btfss	172,1,c	;volatile
  2590   001830  D7FE               	goto	i2l1030
  2591   001832                     i2u196_40:
  2592   001832  A89E               	btfss	158,4,c	;volatile
  2593   001834  D7FE               	goto	i2u196_40
  2594   001836  0E75               	movlw	117
  2595   001838  6EAD               	movwf	173,c	;volatile
  2596   00183A                     i2l1036:
  2597   00183A  A2AC               	btfss	172,1,c	;volatile
  2598   00183C  D7FE               	goto	i2l1036
  2599   00183E                     i2u198_40:
  2600   00183E  A89E               	btfss	158,4,c	;volatile
  2601   001840  D7FE               	goto	i2u198_40
  2602   001842  0E72               	movlw	114
  2603   001844  6EAD               	movwf	173,c	;volatile
  2604   001846                     i2l1042:
  2605   001846  A2AC               	btfss	172,1,c	;volatile
  2606   001848  D7FE               	goto	i2l1042
  2607   00184A                     i2u200_40:
  2608   00184A  A89E               	btfss	158,4,c	;volatile
  2609   00184C  D7FE               	goto	i2u200_40
  2610   00184E  0E73               	movlw	115
  2611   001850  6EAD               	movwf	173,c	;volatile
  2612   001852                     i2l1048:
  2613   001852  A2AC               	btfss	172,1,c	;volatile
  2614   001854  D7FE               	goto	i2l1048
  2615                           
  2616                           ;T5.c: 28: for (a=0;a<65000;a++)
  2617   001856  0E00               	movlw	0
  2618   001858  6E02               	movwf	(tache5@a+1)^0,c
  2619   00185A  0E00               	movlw	0
  2620   00185C  6E01               	movwf	tache5@a^0,c
  2621   00185E                     i2l3683:
  2622                           
  2623                           ;T5.c: 29: ;
  2624   00185E  4A01               	infsnz	tache5@a^0,f,c
  2625   001860  2A02               	incf	(tache5@a+1)^0,f,c
  2626   001862  0EE8               	movlw	232
  2627   001864  5C01               	subwf	tache5@a^0,w,c
  2628   001866  0EFD               	movlw	253
  2629   001868  5802               	subwfb	(tache5@a+1)^0,w,c
  2630   00186A  A0D8               	btfss	status,0,c
  2631   00186C  D7F8               	goto	i2l3683
  2632                           
  2633                           ;T5.c: 30: for (a=0;a<65000;a++)
  2634   00186E  0E00               	movlw	0
  2635   001870  6E02               	movwf	(tache5@a+1)^0,c
  2636   001872  0E00               	movlw	0
  2637   001874  6E01               	movwf	tache5@a^0,c
  2638   001876                     i2l3693:
  2639                           
  2640                           ;T5.c: 31: ;
  2641   001876  4A01               	infsnz	tache5@a^0,f,c
  2642   001878  2A02               	incf	(tache5@a+1)^0,f,c
  2643   00187A  0EE8               	movlw	232
  2644   00187C  5C01               	subwf	tache5@a^0,w,c
  2645   00187E  0EFD               	movlw	253
  2646   001880  5802               	subwfb	(tache5@a+1)^0,w,c
  2647   001882  B0D8               	btfsc	status,0,c
  2648   001884  D78E               	goto	__ptext8
  2649   001886  D7F7               	goto	i2l3693
  2650   001888                     __end_of_tache5:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _tache4 *****************
  2654 ;; Defined at:
  2655 ;;		line 3 in file "T4.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;  a               2    0[COMRAM] unsigned int 
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2, status,0
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;Total ram usage:        2 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_fonction_d_interruption
  2679 ;;		_initialisation_du_systeme
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           	psect	text9
  2684   001966                     __ptext9:
  2685                           	callstack 0
  2686   001966                     _tache4:
  2687                           	callstack 28
  2688                           
  2689                           ;T4.c: 7: {;T4.c: 11: while (PIR1bits.TX1IF==0); TXREG1='T';while (TXSTA1bits.TRMT==0);
  2690                           
  2691                           ;incstack = 0
  2692                           ;T4.c: 5: unsigned int a;;T4.c: 6: while(1)
  2693   001966  A89E               	btfss	158,4,c	;volatile
  2694   001968  D7FE               	goto	__ptext9
  2695   00196A  0E54               	movlw	84
  2696   00196C  6EAD               	movwf	173,c	;volatile
  2697   00196E                     i2l782:
  2698   00196E  A2AC               	btfss	172,1,c	;volatile
  2699   001970  D7FE               	goto	i2l782
  2700   001972                     i2u143_40:
  2701   001972  A89E               	btfss	158,4,c	;volatile
  2702   001974  D7FE               	goto	i2u143_40
  2703   001976  0E41               	movlw	65
  2704   001978  6EAD               	movwf	173,c	;volatile
  2705   00197A                     i2l788:
  2706   00197A  A2AC               	btfss	172,1,c	;volatile
  2707   00197C  D7FE               	goto	i2l788
  2708   00197E                     i2u145_40:
  2709   00197E  A89E               	btfss	158,4,c	;volatile
  2710   001980  D7FE               	goto	i2u145_40
  2711   001982  0E43               	movlw	67
  2712   001984  6EAD               	movwf	173,c	;volatile
  2713   001986                     i2l794:
  2714   001986  A2AC               	btfss	172,1,c	;volatile
  2715   001988  D7FE               	goto	i2l794
  2716   00198A                     i2u147_40:
  2717   00198A  A89E               	btfss	158,4,c	;volatile
  2718   00198C  D7FE               	goto	i2u147_40
  2719   00198E  0E48               	movlw	72
  2720   001990  6EAD               	movwf	173,c	;volatile
  2721   001992                     i2l800:
  2722   001992  A2AC               	btfss	172,1,c	;volatile
  2723   001994  D7FE               	goto	i2l800
  2724   001996                     i2u149_40:
  2725   001996  A89E               	btfss	158,4,c	;volatile
  2726   001998  D7FE               	goto	i2u149_40
  2727   00199A  0E45               	movlw	69
  2728   00199C  6EAD               	movwf	173,c	;volatile
  2729   00199E                     i2l806:
  2730   00199E  A2AC               	btfss	172,1,c	;volatile
  2731   0019A0  D7FE               	goto	i2l806
  2732   0019A2                     i2u151_40:
  2733   0019A2  A89E               	btfss	158,4,c	;volatile
  2734   0019A4  D7FE               	goto	i2u151_40
  2735   0019A6  0E34               	movlw	52
  2736   0019A8  6EAD               	movwf	173,c	;volatile
  2737   0019AA                     i2l812:
  2738   0019AA  A2AC               	btfss	172,1,c	;volatile
  2739   0019AC  D7FE               	goto	i2l812
  2740   0019AE                     i2u153_40:
  2741   0019AE  A89E               	btfss	158,4,c	;volatile
  2742   0019B0  D7FE               	goto	i2u153_40
  2743   0019B2  0E5F               	movlw	95
  2744   0019B4  6EAD               	movwf	173,c	;volatile
  2745   0019B6                     i2l818:
  2746   0019B6  A2AC               	btfss	172,1,c	;volatile
  2747   0019B8  D7FE               	goto	i2l818
  2748   0019BA                     i2u155_40:
  2749   0019BA  A89E               	btfss	158,4,c	;volatile
  2750   0019BC  D7FE               	goto	i2u155_40
  2751   0019BE  0E45               	movlw	69
  2752   0019C0  6EAD               	movwf	173,c	;volatile
  2753   0019C2                     i2l824:
  2754   0019C2  A2AC               	btfss	172,1,c	;volatile
  2755   0019C4  D7FE               	goto	i2l824
  2756   0019C6                     i2u157_40:
  2757   0019C6  A89E               	btfss	158,4,c	;volatile
  2758   0019C8  D7FE               	goto	i2u157_40
  2759   0019CA  0E4E               	movlw	78
  2760   0019CC  6EAD               	movwf	173,c	;volatile
  2761   0019CE                     i2l830:
  2762   0019CE  A2AC               	btfss	172,1,c	;volatile
  2763   0019D0  D7FE               	goto	i2l830
  2764   0019D2                     i2u159_40:
  2765   0019D2  A89E               	btfss	158,4,c	;volatile
  2766   0019D4  D7FE               	goto	i2u159_40
  2767   0019D6  0E5F               	movlw	95
  2768   0019D8  6EAD               	movwf	173,c	;volatile
  2769   0019DA                     i2l836:
  2770   0019DA  A2AC               	btfss	172,1,c	;volatile
  2771   0019DC  D7FE               	goto	i2l836
  2772   0019DE                     i2u161_40:
  2773   0019DE  A89E               	btfss	158,4,c	;volatile
  2774   0019E0  D7FE               	goto	i2u161_40
  2775   0019E2  0E43               	movlw	67
  2776   0019E4  6EAD               	movwf	173,c	;volatile
  2777   0019E6                     i2l842:
  2778   0019E6  A2AC               	btfss	172,1,c	;volatile
  2779   0019E8  D7FE               	goto	i2l842
  2780   0019EA                     i2u163_40:
  2781   0019EA  A89E               	btfss	158,4,c	;volatile
  2782   0019EC  D7FE               	goto	i2u163_40
  2783   0019EE  0E4F               	movlw	79
  2784   0019F0  6EAD               	movwf	173,c	;volatile
  2785   0019F2                     i2l848:
  2786   0019F2  A2AC               	btfss	172,1,c	;volatile
  2787   0019F4  D7FE               	goto	i2l848
  2788   0019F6                     i2u165_40:
  2789   0019F6  A89E               	btfss	158,4,c	;volatile
  2790   0019F8  D7FE               	goto	i2u165_40
  2791   0019FA  0E55               	movlw	85
  2792   0019FC  6EAD               	movwf	173,c	;volatile
  2793   0019FE                     i2l854:
  2794   0019FE  A2AC               	btfss	172,1,c	;volatile
  2795   001A00  D7FE               	goto	i2l854
  2796   001A02                     i2u167_40:
  2797   001A02  A89E               	btfss	158,4,c	;volatile
  2798   001A04  D7FE               	goto	i2u167_40
  2799   001A06  0E52               	movlw	82
  2800   001A08  6EAD               	movwf	173,c	;volatile
  2801   001A0A                     i2l860:
  2802   001A0A  A2AC               	btfss	172,1,c	;volatile
  2803   001A0C  D7FE               	goto	i2l860
  2804   001A0E                     i2u169_40:
  2805   001A0E  A89E               	btfss	158,4,c	;volatile
  2806   001A10  D7FE               	goto	i2u169_40
  2807   001A12  0E53               	movlw	83
  2808   001A14  6EAD               	movwf	173,c	;volatile
  2809   001A16                     i2l866:
  2810   001A16  A2AC               	btfss	172,1,c	;volatile
  2811   001A18  D7FE               	goto	i2l866
  2812                           
  2813                           ;T4.c: 28: for (a=0;a<65000;a++)
  2814   001A1A  0E00               	movlw	0
  2815   001A1C  6E02               	movwf	(tache4@a+1)^0,c
  2816   001A1E  0E00               	movlw	0
  2817   001A20  6E01               	movwf	tache4@a^0,c
  2818   001A22                     i2l3643:
  2819                           
  2820                           ;T4.c: 29: ;
  2821   001A22  4A01               	infsnz	tache4@a^0,f,c
  2822   001A24  2A02               	incf	(tache4@a+1)^0,f,c
  2823   001A26  0EE8               	movlw	232
  2824   001A28  5C01               	subwf	tache4@a^0,w,c
  2825   001A2A  0EFD               	movlw	253
  2826   001A2C  5802               	subwfb	(tache4@a+1)^0,w,c
  2827   001A2E  B0D8               	btfsc	status,0,c
  2828   001A30  D79A               	goto	__ptext9
  2829   001A32  D7F7               	goto	i2l3643
  2830   001A34                     __end_of_tache4:
  2831                           	callstack 0
  2832                           
  2833 ;; *************** function _tache3 *****************
  2834 ;; Defined at:
  2835 ;;		line 3 in file "T3.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_fonction_d_interruption
  2859 ;;		_initialisation_du_systeme
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text10
  2864   001888                     __ptext10:
  2865                           	callstack 0
  2866   001888                     _tache3:
  2867                           	callstack 28
  2868                           
  2869                           ;T3.c: 6: {;T3.c: 7: if (TP_appui==1)
  2870                           
  2871                           ;incstack = 0
  2872                           ;T3.c: 5: while(1)
  2873   001888  0100               	movlb	0	; () banked
  2874   00188A  0566               	decf	102,w,b
  2875   00188C  A4D8               	btfss	status,2,c
  2876   00188E  D014               	goto	i2l3543
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;T3.c: 8: {;T3.c: 9: if ((TP_x>=203)&&(TP_x<209))
  2880   001890  0ECA               	movlw	202
  2881   001892  6567               	cpfsgt	103,b
  2882   001894  D011               	goto	i2l3543
  2883                           
  2884                           ; BSR set to: 0
  2885   001896  0ED1               	movlw	209
  2886   001898  6167               	cpfslt	103,b
  2887   00189A  D00E               	goto	i2l3543
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;T3.c: 10: {;T3.c: 11: if ((TP_y>=113)&&(TP_y<121))
  2891   00189C  0E70               	movlw	112
  2892   00189E  6568               	cpfsgt	104,b
  2893   0018A0  D004               	goto	i2l3537
  2894                           
  2895                           ; BSR set to: 0
  2896   0018A2  0E79               	movlw	121
  2897   0018A4  6168               	cpfslt	104,b
  2898   0018A6  D001               	goto	i2l3537
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;T3.c: 12: {;T3.c: 13: LATCbits.LATC2=1;
  2902   0018A8  848B               	bsf	139,2,c	;volatile
  2903   0018AA                     i2l3537:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;T3.c: 14: };T3.c: 15: if ((TP_y>=121)&&(TP_y<127))
  2907   0018AA  0E78               	movlw	120
  2908   0018AC  6568               	cpfsgt	104,b
  2909   0018AE  D004               	goto	i2l3543
  2910                           
  2911                           ; BSR set to: 0
  2912   0018B0  0E7F               	movlw	127
  2913   0018B2  6168               	cpfslt	104,b
  2914   0018B4  D001               	goto	i2l3543
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;T3.c: 16: {;T3.c: 17: LATCbits.LATC2=0;
  2918   0018B6  948B               	bcf	139,2,c	;volatile
  2919   0018B8                     i2l3543:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;T3.c: 18: };T3.c: 19: };T3.c: 20: };T3.c: 24: if (TP_appui==1)
  2923   0018B8  0566               	decf	102,w,b
  2924   0018BA  A4D8               	btfss	status,2,c
  2925   0018BC  D014               	goto	i2l3561
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;T3.c: 25: {;T3.c: 26: if ((TP_x>=215)&&(TP_x<221))
  2929   0018BE  0ED6               	movlw	214
  2930   0018C0  6567               	cpfsgt	103,b
  2931   0018C2  D011               	goto	i2l3561
  2932                           
  2933                           ; BSR set to: 0
  2934   0018C4  0EDD               	movlw	221
  2935   0018C6  6167               	cpfslt	103,b
  2936   0018C8  D00E               	goto	i2l3561
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;T3.c: 27: {;T3.c: 28: if ((TP_y>=113)&&(TP_y<121))
  2940   0018CA  0E70               	movlw	112
  2941   0018CC  6568               	cpfsgt	104,b
  2942   0018CE  D004               	goto	i2l3555
  2943                           
  2944                           ; BSR set to: 0
  2945   0018D0  0E79               	movlw	121
  2946   0018D2  6168               	cpfslt	104,b
  2947   0018D4  D001               	goto	i2l3555
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;T3.c: 29: {;T3.c: 30: LATCbits.LATC1=1;
  2951   0018D6  828B               	bsf	139,1,c	;volatile
  2952   0018D8                     i2l3555:
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;T3.c: 31: };T3.c: 32: if ((TP_y>=121)&&(TP_y<127))
  2956   0018D8  0E78               	movlw	120
  2957   0018DA  6568               	cpfsgt	104,b
  2958   0018DC  D004               	goto	i2l3561
  2959                           
  2960                           ; BSR set to: 0
  2961   0018DE  0E7F               	movlw	127
  2962   0018E0  6168               	cpfslt	104,b
  2963   0018E2  D001               	goto	i2l3561
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;T3.c: 33: {;T3.c: 34: LATCbits.LATC1=0;
  2967   0018E4  928B               	bcf	139,1,c	;volatile
  2968   0018E6                     i2l3561:
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;T3.c: 35: };T3.c: 36: };T3.c: 37: };T3.c: 38: if (TP_appui==1)
  2972   0018E6  0566               	decf	102,w,b
  2973   0018E8  A4D8               	btfss	status,2,c
  2974   0018EA  D014               	goto	i2l3579
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;T3.c: 39: {;T3.c: 40: if ((TP_x>=227)&&(TP_x<233))
  2978   0018EC  0EE2               	movlw	226
  2979   0018EE  6567               	cpfsgt	103,b
  2980   0018F0  D011               	goto	i2l3579
  2981                           
  2982                           ; BSR set to: 0
  2983   0018F2  0EE9               	movlw	233
  2984   0018F4  6167               	cpfslt	103,b
  2985   0018F6  D00E               	goto	i2l3579
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;T3.c: 41: {;T3.c: 42: if ((TP_y>=113)&&(TP_y<121))
  2989   0018F8  0E70               	movlw	112
  2990   0018FA  6568               	cpfsgt	104,b
  2991   0018FC  D004               	goto	i2l3573
  2992                           
  2993                           ; BSR set to: 0
  2994   0018FE  0E79               	movlw	121
  2995   001900  6168               	cpfslt	104,b
  2996   001902  D001               	goto	i2l3573
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;T3.c: 43: {;T3.c: 44: LATGbits.LATG0=1;
  3000   001904  808F               	bsf	143,0,c	;volatile
  3001   001906                     i2l3573:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;T3.c: 45: };T3.c: 46: if ((TP_y>=121)&&(TP_y<127))
  3005   001906  0E78               	movlw	120
  3006   001908  6568               	cpfsgt	104,b
  3007   00190A  D004               	goto	i2l3579
  3008                           
  3009                           ; BSR set to: 0
  3010   00190C  0E7F               	movlw	127
  3011   00190E  6168               	cpfslt	104,b
  3012   001910  D001               	goto	i2l3579
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;T3.c: 47: {;T3.c: 48: LATGbits.LATG0=0;
  3016   001912  908F               	bcf	143,0,c	;volatile
  3017   001914                     i2l3579:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;T3.c: 49: };T3.c: 50: };T3.c: 51: };T3.c: 55: if (TP_appui==1)
  3021   001914  0566               	decf	102,w,b
  3022   001916  A4D8               	btfss	status,2,c
  3023   001918  D011               	goto	i2l3593
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;T3.c: 56: {;T3.c: 57: if((TP_x>=180)&&(TP_x<230))
  3027   00191A  0EB3               	movlw	179
  3028   00191C  6567               	cpfsgt	103,b
  3029   00191E  D00E               	goto	i2l3593
  3030                           
  3031                           ; BSR set to: 0
  3032   001920  0EE6               	movlw	230
  3033   001922  6167               	cpfslt	103,b
  3034   001924  D00B               	goto	i2l3593
  3035                           
  3036                           ; BSR set to: 0
  3037                           ;T3.c: 58: {;T3.c: 59: if ((TP_y>=20)&&(TP_y<60))
  3038   001926  0E13               	movlw	19
  3039   001928  6568               	cpfsgt	104,b
  3040   00192A  D008               	goto	i2l3593
  3041                           
  3042                           ; BSR set to: 0
  3043   00192C  0E3C               	movlw	60
  3044   00192E  6168               	cpfslt	104,b
  3045   001930  D005               	goto	i2l3593
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;T3.c: 60: {;T3.c: 61: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  3049   001932  948B               	bcf	139,2,c	;volatile
  3050   001934  828B               	bsf	139,1,c	;volatile
  3051   001936  808F               	bsf	143,0,c	;volatile
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;T3.c: 62: TEST = 1;
  3055   001938  0E01               	movlw	1
  3056   00193A  6F81               	movwf	129,b
  3057   00193C                     i2l3593:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;T3.c: 65: };T3.c: 66: };T3.c: 67: if (TP_appui==1)
  3061   00193C  0566               	decf	102,w,b
  3062   00193E  A4D8               	btfss	status,2,c
  3063   001940  D7A3               	goto	__ptext10
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;T3.c: 68: {;T3.c: 69: if((TP_x>=120)&&(TP_x<170))
  3067   001942  0E77               	movlw	119
  3068   001944  6567               	cpfsgt	103,b
  3069   001946  D7A0               	goto	__ptext10
  3070                           
  3071                           ; BSR set to: 0
  3072   001948  0EAA               	movlw	170
  3073   00194A  6167               	cpfslt	103,b
  3074   00194C  D79D               	goto	__ptext10
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;T3.c: 70: {;T3.c: 71: if ((TP_y>=20)&&(TP_y<60))
  3078   00194E  0E13               	movlw	19
  3079   001950  6568               	cpfsgt	104,b
  3080   001952  D79A               	goto	__ptext10
  3081                           
  3082                           ; BSR set to: 0
  3083   001954  0E3C               	movlw	60
  3084   001956  6168               	cpfslt	104,b
  3085   001958  D797               	goto	__ptext10
  3086                           
  3087                           ; BSR set to: 0
  3088                           ;T3.c: 72: {;T3.c: 73: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3089   00195A  948B               	bcf	139,2,c	;volatile
  3090   00195C  928B               	bcf	139,1,c	;volatile
  3091   00195E  908F               	bcf	143,0,c	;volatile
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;T3.c: 74: TEST = 0;
  3095   001960  0E00               	movlw	0
  3096   001962  6F81               	movwf	129,b
  3097                           
  3098                           ; BSR set to: 0
  3099   001964  D791               	goto	__ptext10
  3100   001966                     __end_of_tache3:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _tache2 *****************
  3104 ;; Defined at:
  3105 ;;		line 3 in file "T2.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  iy              2   11[COMRAM] unsigned int 
  3110 ;;  ix              2    9[COMRAM] unsigned int 
  3111 ;;  ly              1   16[COMRAM] unsigned char 
  3112 ;;  hy              1   15[COMRAM] unsigned char 
  3113 ;;  lx              1   14[COMRAM] unsigned char 
  3114 ;;  hx              1   13[COMRAM] unsigned char 
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0, cstack
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;Total ram usage:       10 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 1
  3131 ;; This function calls:
  3132 ;;		___lwdiv
  3133 ;;		_tp_delai
  3134 ;; This function is called by:
  3135 ;;		_fonction_d_interruption
  3136 ;;		_initialisation_du_systeme
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           
  3140                           	psect	text11
  3141   0016AE                     __ptext11:
  3142                           	callstack 0
  3143   0016AE                     _tache2:
  3144                           	callstack 27
  3145                           
  3146                           ;T2.c: 5: unsigned char hx,lx,hy,ly;;T2.c: 6: unsigned int ix,iy;;T2.c: 8: TP_appui=0;
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;incstack = 0
  3150   0016AE  0E00               	movlw	0
  3151   0016B0  0100               	movlb	0	; () banked
  3152   0016B2  6F66               	movwf	102,b
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;T2.c: 11: {;T2.c: 12: LATGbits.LATG3=1;
  3156   0016B4  868F               	bsf	143,3,c	;volatile
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;T2.c: 13: LATGbits.LATG4=0;
  3160   0016B6  988F               	bcf	143,4,c	;volatile
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;T2.c: 14: tp_delai(3000);
  3164   0016B8  0E0B               	movlw	11
  3165   0016BA  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3166   0016BC  0EB8               	movlw	184
  3167   0016BE  6E01               	movwf	tp_delai@itpd^0,c
  3168   0016C0  ECC1  F011         	call	_tp_delai	;wreg free
  3169                           
  3170                           ;T2.c: 18: ADCON2=0x16;
  3171   0016C4  0E16               	movlw	22
  3172   0016C6  6EC0               	movwf	192,c	;volatile
  3173                           
  3174                           ;T2.c: 19: ADCON0=0x01;
  3175   0016C8  0E01               	movlw	1
  3176   0016CA  6EC2               	movwf	194,c	;volatile
  3177                           
  3178                           ;T2.c: 20: ADCON0=0x03;
  3179   0016CC  0E03               	movlw	3
  3180   0016CE  6EC2               	movwf	194,c	;volatile
  3181   0016D0                     i2l563:
  3182   0016D0  B2C2               	btfsc	194,1,c	;volatile
  3183   0016D2  D7FE               	goto	i2l563
  3184                           
  3185                           ;T2.c: 23: hx=ADRESH;
  3186   0016D4  CFC4 F00E          	movff	4036,tache2@hx	;volatile
  3187                           
  3188                           ;T2.c: 24: lx=ADRESL;
  3189   0016D8  CFC3 F00F          	movff	4035,tache2@lx	;volatile
  3190                           
  3191                           ;T2.c: 28: if ((lx&0x0F)!=0){hx=0;lx=0;}
  3192   0016DC  C00F  F008         	movff	tache2@lx,??_tache2
  3193   0016E0  0E0F               	movlw	15
  3194   0016E2  1608               	andwf	??_tache2^0,f,c
  3195   0016E4  B4D8               	btfsc	status,2,c
  3196   0016E6  D004               	goto	i2l4925
  3197   0016E8  0E00               	movlw	0
  3198   0016EA  6E0E               	movwf	tache2@hx^0,c
  3199   0016EC  0E00               	movlw	0
  3200   0016EE  6E0F               	movwf	tache2@lx^0,c
  3201   0016F0                     i2l4925:
  3202                           
  3203                           ;T2.c: 31: if (hx>=10)
  3204   0016F0  0E09               	movlw	9
  3205   0016F2  640E               	cpfsgt	tache2@hx^0,c
  3206   0016F4  D7DC               	goto	__ptext11
  3207                           
  3208                           ;T2.c: 32: {;T2.c: 33: LATGbits.LATG3=0;
  3209   0016F6  968F               	bcf	143,3,c	;volatile
  3210                           
  3211                           ;T2.c: 34: LATGbits.LATG4=1;
  3212   0016F8  888F               	bsf	143,4,c	;volatile
  3213                           
  3214                           ;T2.c: 35: tp_delai(3000);
  3215   0016FA  0E0B               	movlw	11
  3216   0016FC  6E02               	movwf	(tp_delai@itpd+1)^0,c
  3217   0016FE  0EB8               	movlw	184
  3218   001700  6E01               	movwf	tp_delai@itpd^0,c
  3219   001702  ECC1  F011         	call	_tp_delai	;wreg free
  3220                           
  3221                           ;T2.c: 39: ADCON2=0x16;
  3222   001706  0E16               	movlw	22
  3223   001708  6EC0               	movwf	192,c	;volatile
  3224                           
  3225                           ;T2.c: 40: ADCON0=0x05;
  3226   00170A  0E05               	movlw	5
  3227   00170C  6EC2               	movwf	194,c	;volatile
  3228                           
  3229                           ;T2.c: 41: ADCON0=0x07;
  3230   00170E  0E07               	movlw	7
  3231   001710  6EC2               	movwf	194,c	;volatile
  3232   001712                     i2l568:
  3233   001712  B2C2               	btfsc	194,1,c	;volatile
  3234   001714  D7FE               	goto	i2l568
  3235                           
  3236                           ;T2.c: 44: hy=ADRESH;
  3237   001716  CFC4 F010          	movff	4036,tache2@hy	;volatile
  3238                           
  3239                           ;T2.c: 45: ly=ADRESL;
  3240   00171A  CFC3 F011          	movff	4035,tache2@ly	;volatile
  3241                           
  3242                           ;T2.c: 49: if ((ly&0x0F)!=0){hy=0;ly=0;}
  3243   00171E  C011  F008         	movff	tache2@ly,??_tache2
  3244   001722  0E0F               	movlw	15
  3245   001724  1608               	andwf	??_tache2^0,f,c
  3246   001726  B4D8               	btfsc	status,2,c
  3247   001728  D004               	goto	i2l4941
  3248   00172A  0E00               	movlw	0
  3249   00172C  6E10               	movwf	tache2@hy^0,c
  3250   00172E  0E00               	movlw	0
  3251   001730  6E11               	movwf	tache2@ly^0,c
  3252   001732                     i2l4941:
  3253                           
  3254                           ;T2.c: 51: if (hy>=20)
  3255   001732  0E13               	movlw	19
  3256   001734  6410               	cpfsgt	tache2@hy^0,c
  3257   001736  D7BB               	goto	__ptext11
  3258                           
  3259                           ;T2.c: 52: {;T2.c: 53: ix=lx+(((unsigned int)(hx))<<8);
  3260   001738  500E               	movf	tache2@hx^0,w,c
  3261   00173A  6E08               	movwf	??_tache2^0,c
  3262   00173C  500F               	movf	tache2@lx^0,w,c
  3263   00173E  6E0A               	movwf	tache2@ix^0,c
  3264   001740  C008  F00B         	movff	??_tache2,tache2@ix+1
  3265                           
  3266                           ;T2.c: 54: iy=ly+(((unsigned int)(hy))<<8);
  3267   001744  5010               	movf	tache2@hy^0,w,c
  3268   001746  6E08               	movwf	??_tache2^0,c
  3269   001748  5011               	movf	tache2@ly^0,w,c
  3270   00174A  6E0C               	movwf	tache2@iy^0,c
  3271   00174C  C008  F00D         	movff	??_tache2,tache2@iy+1
  3272                           
  3273                           ;T2.c: 55: ix=ix-3150;
  3274   001750  0EB2               	movlw	178
  3275   001752  240A               	addwf	tache2@ix^0,w,c
  3276   001754  6E0A               	movwf	tache2@ix^0,c
  3277   001756  0EF3               	movlw	243
  3278   001758  200B               	addwfc	(tache2@ix+1)^0,w,c
  3279   00175A  6E0B               	movwf	(tache2@ix+1)^0,c
  3280                           
  3281                           ;T2.c: 56: iy=iy-6500;
  3282   00175C  0E9C               	movlw	156
  3283   00175E  240C               	addwf	tache2@iy^0,w,c
  3284   001760  6E0C               	movwf	tache2@iy^0,c
  3285   001762  0EE6               	movlw	230
  3286   001764  200D               	addwfc	(tache2@iy+1)^0,w,c
  3287   001766  6E0D               	movwf	(tache2@iy+1)^0,c
  3288                           
  3289                           ;T2.c: 58: TP_x=ix/246;
  3290   001768  C00A  F001         	movff	tache2@ix,___lwdiv@dividend
  3291   00176C  C00B  F002         	movff	tache2@ix+1,___lwdiv@dividend+1
  3292   001770  0E00               	movlw	0
  3293   001772  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3294   001774  0EF6               	movlw	246
  3295   001776  6E03               	movwf	___lwdiv@divisor^0,c
  3296   001778  EC90  F00F         	call	___lwdiv	;wreg free
  3297   00177C  5001               	movf	?___lwdiv^0,w,c
  3298   00177E  0100               	movlb	0	; () banked
  3299   001780  6F67               	movwf	103,b
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;T2.c: 59: TP_y=127-(iy/409);
  3303   001782  C00C  F001         	movff	tache2@iy,___lwdiv@dividend
  3304   001786  C00D  F002         	movff	tache2@iy+1,___lwdiv@dividend+1
  3305   00178A  0E01               	movlw	1
  3306   00178C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3307   00178E  0E99               	movlw	153
  3308   001790  6E03               	movwf	___lwdiv@divisor^0,c
  3309   001792  EC90  F00F         	call	___lwdiv	;wreg free
  3310   001796  5001               	movf	?___lwdiv^0,w,c
  3311   001798  087F               	sublw	127
  3312   00179A  0100               	movlb	0	; () banked
  3313   00179C  6F68               	movwf	104,b
  3314                           
  3315                           ;T2.c: 68: TP_appui=1;
  3316   00179E  0E01               	movlw	1
  3317   0017A0  D788               	goto	L3
  3318   0017A2                     __end_of_tache2:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _tp_delai *****************
  3322 ;; Defined at:
  3323 ;;		line 87 in file "T2.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  itpd            2    0[COMRAM] unsigned int 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;Total ram usage:        2 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_tache2
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text12
  3351   002382                     __ptext12:
  3352                           	callstack 0
  3353   002382                     _tp_delai:
  3354                           	callstack 27
  3355                           
  3356                           ;T2.c: 89: while(itpd>0)
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;incstack = 0
  3360   002382  D006               	goto	i2l4485
  3361   002384                     i2l581:
  3362                           
  3363                           ;T2.c: 90: {;T2.c: 91: __nop();__nop();__nop();
  3364   002384  F000               	nop	
  3365   002386  F000               	nop	
  3366   002388  F000               	nop	
  3367                           
  3368                           ;T2.c: 92: itpd--;
  3369   00238A  0601               	decf	tp_delai@itpd^0,f,c
  3370   00238C  A0D8               	btfss	status,0,c
  3371   00238E  0602               	decf	(tp_delai@itpd+1)^0,f,c
  3372   002390                     i2l4485:
  3373   002390  5001               	movf	tp_delai@itpd^0,w,c
  3374   002392  1002               	iorwf	(tp_delai@itpd+1)^0,w,c
  3375   002394  B4D8               	btfsc	status,2,c
  3376   002396  0012               	return	
  3377   002398  D7F5               	goto	i2l581
  3378   00239A                     __end_of_tp_delai:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function ___lwdiv *****************
  3382 ;; Defined at:
  3383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  dividend        2    0[COMRAM] unsigned int 
  3386 ;;  divisor         2    2[COMRAM] unsigned int 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  quotient        2    4[COMRAM] unsigned int 
  3389 ;;  counter         1    6[COMRAM] unsigned char 
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  2    0[COMRAM] unsigned int 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;Total ram usage:        7 bytes
  3404 ;; Hardware stack levels used: 1
  3405 ;; This function calls:
  3406 ;;		Nothing
  3407 ;; This function is called by:
  3408 ;;		_tache2
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412                           	psect	text13
  3413   001F20                     __ptext13:
  3414                           	callstack 0
  3415   001F20                     ___lwdiv:
  3416                           	callstack 27
  3417                           
  3418                           ;incstack = 0
  3419   001F20  0E00               	movlw	0
  3420   001F22  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3421   001F24  0E00               	movlw	0
  3422   001F26  6E05               	movwf	___lwdiv@quotient^0,c
  3423   001F28  5003               	movf	___lwdiv@divisor^0,w,c
  3424   001F2A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3425   001F2C  B4D8               	btfsc	status,2,c
  3426   001F2E  D01C               	goto	i2l2253
  3427   001F30  0E01               	movlw	1
  3428   001F32  6E07               	movwf	___lwdiv@counter^0,c
  3429   001F34  D004               	goto	i2l4551
  3430   001F36                     i2l4549:
  3431   001F36  90D8               	bcf	status,0,c
  3432   001F38  3603               	rlcf	___lwdiv@divisor^0,f,c
  3433   001F3A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3434   001F3C  2A07               	incf	___lwdiv@counter^0,f,c
  3435   001F3E                     i2l4551:
  3436   001F3E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3437   001F40  D7FA               	goto	i2l4549
  3438   001F42                     i2u269_40:
  3439   001F42  90D8               	bcf	status,0,c
  3440   001F44  3605               	rlcf	___lwdiv@quotient^0,f,c
  3441   001F46  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3442   001F48  5003               	movf	___lwdiv@divisor^0,w,c
  3443   001F4A  5C01               	subwf	___lwdiv@dividend^0,w,c
  3444   001F4C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3445   001F4E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3446   001F50  A0D8               	btfss	status,0,c
  3447   001F52  D005               	goto	i2l4561
  3448   001F54  5003               	movf	___lwdiv@divisor^0,w,c
  3449   001F56  5E01               	subwf	___lwdiv@dividend^0,f,c
  3450   001F58  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3451   001F5A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3452   001F5C  8005               	bsf	___lwdiv@quotient^0,0,c
  3453   001F5E                     i2l4561:
  3454   001F5E  90D8               	bcf	status,0,c
  3455   001F60  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3456   001F62  3203               	rrcf	___lwdiv@divisor^0,f,c
  3457   001F64  2E07               	decfsz	___lwdiv@counter^0,f,c
  3458   001F66  D7ED               	goto	i2u269_40
  3459   001F68                     i2l2253:
  3460   001F68  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3461   001F6C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3462   001F70  0012               	return		;funcret
  3463   001F72                     __end_of___lwdiv:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _tache1 *****************
  3467 ;; Defined at:
  3468 ;;		line 3 in file "T1.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  i               1    0        unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 5
  3489 ;; This function calls:
  3490 ;;		_Init
  3491 ;;		_charger
  3492 ;;		_clear_graphics
  3493 ;;		_clear_line
  3494 ;;		_clear_text
  3495 ;;		_draw_char
  3496 ;;		_draw_dec8
  3497 ;;		_draw_hex8
  3498 ;;		_draw_square
  3499 ;;		_draw_string
  3500 ;;		_goto_lico
  3501 ;;		_init_rxtx
  3502 ;;		_initialisation_afficheur
  3503 ;;		_lecture_8bit_analogique
  3504 ;;		_plot1
  3505 ;;		_vide
  3506 ;;		_vitesse1
  3507 ;;		_vitesseAdmin
  3508 ;; This function is called by:
  3509 ;;		_fonction_d_interruption
  3510 ;;		_initialisation_du_systeme
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text14
  3515   0010DA                     __ptext14:
  3516                           	callstack 0
  3517   0010DA                     _tache1:
  3518                           	callstack 23
  3519                           
  3520                           ;T1.c: 5: unsigned char i;;T1.c: 7: (INTCONbits.GIE = 0);
  3521                           
  3522                           ;incstack = 0
  3523   0010DA  9EF2               	bcf	242,7,c	;volatile
  3524                           
  3525                           ;T1.c: 8: initialisation_afficheur();
  3526   0010DC  EC1A  F00D         	call	_initialisation_afficheur	;wreg free
  3527                           
  3528                           ;T1.c: 9: clear_text();
  3529   0010E0  ECF8  F010         	call	_clear_text	;wreg free
  3530                           
  3531                           ;T1.c: 10: clear_graphics();
  3532   0010E4  EC10  F011         	call	_clear_graphics	;wreg free
  3533                           
  3534                           ;T1.c: 11: init_rxtx();
  3535   0010E8  EC4F  F011         	call	_init_rxtx	;wreg free
  3536                           
  3537                           ;T1.c: 12: Init(2);
  3538   0010EC  0E02               	movlw	2
  3539   0010EE  6EE6               	movwf	postinc1,c
  3540   0010F0  EC3E  F011         	call	_Init	;wreg free
  3541                           
  3542                           ;T1.c: 13: RXTX_libre=1;
  3543   0010F4  0E01               	movlw	1
  3544   0010F6  0100               	movlb	0	; () banked
  3545   0010F8  6F80               	movwf	128,b
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;T1.c: 14: TXREG1='R';
  3549   0010FA  0E52               	movlw	82
  3550   0010FC  6EAD               	movwf	173,c	;volatile
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;T1.c: 15: (INTCONbits.GIE = 1);
  3554   0010FE  8EF2               	bsf	242,7,c	;volatile
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;T1.c: 17: LATCbits.LATC2=0;LATCbits.LATC1=0;LATGbits.LATG0=0;
  3558   001100  948B               	bcf	139,2,c	;volatile
  3559                           
  3560                           ; BSR set to: 0
  3561   001102  928B               	bcf	139,1,c	;volatile
  3562                           
  3563                           ; BSR set to: 0
  3564   001104  908F               	bcf	143,0,c	;volatile
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;T1.c: 19: vitesse=0;
  3568   001106  0E00               	movlw	0
  3569   001108  6F73               	movwf	115,b
  3570                           
  3571                           ; BSR set to: 0
  3572                           ;T1.c: 20: batterie=15;
  3573   00110A  0E0F               	movlw	15
  3574   00110C  6F74               	movwf	116,b
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;T1.c: 21: n_octet_badge=0;
  3578   00110E  0E00               	movlw	0
  3579   001110  6F7F               	movwf	127,b
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;T1.c: 22: TEST=0;
  3583   001112  0E00               	movlw	0
  3584   001114  6F81               	movwf	129,b
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;T1.c: 23: Operator=0;
  3588   001116  0E00               	movlw	0
  3589   001118  6F82               	movwf	130,b
  3590                           
  3591                           ; BSR set to: 0
  3592                           ;T1.c: 25: goto_lico(13,34);draw_char('R');draw_char(' ');draw_char('V');draw_char(' ');
      +                          draw_char('B');
  3593   00111A  0E22               	movlw	34
  3594   00111C  6E09               	movwf	goto_lico@colonne^0,c
  3595   00111E  0E0D               	movlw	13
  3596   001120  EC64  F00F         	call	_goto_lico
  3597   001124  0E52               	movlw	82
  3598   001126  ECDF  F010         	call	_draw_char
  3599   00112A  0E20               	movlw	32
  3600   00112C  ECDF  F010         	call	_draw_char
  3601   001130  0E56               	movlw	86
  3602   001132  ECDF  F010         	call	_draw_char
  3603   001136  0E20               	movlw	32
  3604   001138  ECDF  F010         	call	_draw_char
  3605   00113C  0E42               	movlw	66
  3606   00113E  ECDF  F010         	call	_draw_char
  3607                           
  3608                           ;T1.c: 26: goto_lico(14,34);draw_char('0');draw_char(' ');draw_char('0');draw_char(' ');
      +                          draw_char('0');
  3609   001142  0E22               	movlw	34
  3610   001144  6E09               	movwf	goto_lico@colonne^0,c
  3611   001146  0E0E               	movlw	14
  3612   001148  EC64  F00F         	call	_goto_lico
  3613   00114C  0E30               	movlw	48
  3614   00114E  ECDF  F010         	call	_draw_char
  3615   001152  0E20               	movlw	32
  3616   001154  ECDF  F010         	call	_draw_char
  3617   001158  0E30               	movlw	48
  3618   00115A  ECDF  F010         	call	_draw_char
  3619   00115E  0E20               	movlw	32
  3620   001160  ECDF  F010         	call	_draw_char
  3621   001164  0E30               	movlw	48
  3622   001166  ECDF  F010         	call	_draw_char
  3623                           
  3624                           ;T1.c: 27: goto_lico(15,34);draw_char('1');draw_char(' ');draw_char('1');draw_char(' ');
      +                          draw_char('1');
  3625   00116A  0E22               	movlw	34
  3626   00116C  6E09               	movwf	goto_lico@colonne^0,c
  3627   00116E  0E0F               	movlw	15
  3628   001170  EC64  F00F         	call	_goto_lico
  3629   001174  0E31               	movlw	49
  3630   001176  ECDF  F010         	call	_draw_char
  3631   00117A  0E20               	movlw	32
  3632   00117C  ECDF  F010         	call	_draw_char
  3633   001180  0E31               	movlw	49
  3634   001182  ECDF  F010         	call	_draw_char
  3635   001186  0E20               	movlw	32
  3636   001188  ECDF  F010         	call	_draw_char
  3637   00118C  0E31               	movlw	49
  3638   00118E  ECDF  F010         	call	_draw_char
  3639                           
  3640                           ;T1.c: 29: TP_appui=0;
  3641   001192  0E00               	movlw	0
  3642   001194  0100               	movlb	0	; () banked
  3643   001196  6F66               	movwf	102,b
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;T1.c: 30: draw_square(180,20,230,60);
  3647   001198  0E14               	movlw	20
  3648   00119A  6E0F               	movwf	draw_square@y1^0,c
  3649   00119C  0EE6               	movlw	230
  3650   00119E  6E10               	movwf	draw_square@x2^0,c
  3651   0011A0  0E3C               	movlw	60
  3652   0011A2  6E11               	movwf	draw_square@y2^0,c
  3653   0011A4  0EB4               	movlw	180
  3654   0011A6  EC0A  F010         	call	_draw_square
  3655                           
  3656                           ;T1.c: 31: draw_square(120,20,170,60);
  3657   0011AA  0E14               	movlw	20
  3658   0011AC  6E0F               	movwf	draw_square@y1^0,c
  3659   0011AE  0EAA               	movlw	170
  3660   0011B0  6E10               	movwf	draw_square@x2^0,c
  3661   0011B2  0E3C               	movlw	60
  3662   0011B4  6E11               	movwf	draw_square@y2^0,c
  3663   0011B6  0E78               	movlw	120
  3664   0011B8  EC0A  F010         	call	_draw_square
  3665                           
  3666                           ;T1.c: 33: draw_string(2);
  3667   0011BC  0E02               	movlw	2
  3668   0011BE  6E08               	movwf	draw_string@tableau^0,c
  3669   0011C0  0E00               	movlw	0
  3670   0011C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  3671   0011C4  EC76  F00E         	call	_draw_string	;wreg free
  3672   0011C8                     i2l4761:
  3673                           
  3674                           ;T1.c: 36: {;T1.c: 38: goto_lico(0,0);
  3675   0011C8  0E00               	movlw	0
  3676   0011CA  6E09               	movwf	goto_lico@colonne^0,c
  3677   0011CC  0E00               	movlw	0
  3678   0011CE  EC64  F00F         	call	_goto_lico
  3679                           
  3680                           ;T1.c: 39: draw_string("Marche:");
  3681   0011D2  0E8D               	movlw	low STR_1
  3682   0011D4  6E08               	movwf	draw_string@tableau^0,c
  3683   0011D6  0E10               	movlw	high STR_1
  3684   0011D8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3685   0011DA  EC76  F00E         	call	_draw_string	;wreg free
  3686                           
  3687                           ;T1.c: 40: if (PORTBbits.RB0==0)
  3688   0011DE  B081               	btfsc	129,0,c	;volatile
  3689   0011E0  D007               	goto	i2l436
  3690                           
  3691                           ;T1.c: 41: draw_string("AV");
  3692   0011E2  0ED5               	movlw	low STR_2
  3693   0011E4  6E08               	movwf	draw_string@tableau^0,c
  3694   0011E6  0E10               	movlw	high STR_2
  3695   0011E8  6E09               	movwf	(draw_string@tableau+1)^0,c
  3696   0011EA  EC76  F00E         	call	_draw_string	;wreg free
  3697   0011EE  D00F               	goto	i2l4773
  3698   0011F0                     i2l436:
  3699                           
  3700                           ;T1.c: 42: else;T1.c: 43: if (PORTBbits.RB1==0)
  3701   0011F0  B281               	btfsc	129,1,c	;volatile
  3702   0011F2  D007               	goto	i2l4771
  3703                           
  3704                           ;T1.c: 44: draw_string("AR");
  3705   0011F4  0ED2               	movlw	low STR_3
  3706   0011F6  6E08               	movwf	draw_string@tableau^0,c
  3707   0011F8  0E10               	movlw	high STR_3
  3708   0011FA  6E09               	movwf	(draw_string@tableau+1)^0,c
  3709   0011FC  EC76  F00E         	call	_draw_string	;wreg free
  3710   001200  D006               	goto	i2l4773
  3711   001202                     i2l4771:
  3712                           
  3713                           ;T1.c: 45: else;T1.c: 46: draw_string("N ");
  3714   001202  0ECC               	movlw	low STR_4
  3715   001204  6E08               	movwf	draw_string@tableau^0,c
  3716   001206  0E10               	movlw	high STR_4
  3717   001208  6E09               	movwf	(draw_string@tableau+1)^0,c
  3718   00120A  EC76  F00E         	call	_draw_string	;wreg free
  3719   00120E                     i2l4773:
  3720                           
  3721                           ;T1.c: 49: goto_lico(7,0);
  3722   00120E  0E00               	movlw	0
  3723   001210  6E09               	movwf	goto_lico@colonne^0,c
  3724   001212  0E07               	movlw	7
  3725   001214  EC64  F00F         	call	_goto_lico
  3726                           
  3727                           ;T1.c: 50: if (PORTEbits.RE4==0){
  3728   001218  B884               	btfsc	132,4,c	;volatile
  3729   00121A  D007               	goto	i2l4779
  3730                           
  3731                           ;T1.c: 51: draw_string("((!))");
  3732   00121C  0EB1               	movlw	low STR_5
  3733   00121E  6E08               	movwf	draw_string@tableau^0,c
  3734   001220  0E10               	movlw	high STR_5
  3735   001222  6E09               	movwf	(draw_string@tableau+1)^0,c
  3736   001224  EC76  F00E         	call	_draw_string	;wreg free
  3737                           
  3738                           ;T1.c: 52: }
  3739   001228  D006               	goto	i2l4781
  3740   00122A                     i2l4779:
  3741                           
  3742                           ;T1.c: 53: else{;T1.c: 54: draw_string("     ");
  3743   00122A  0E2D               	movlw	low (STR_14+15)
  3744   00122C  6E08               	movwf	draw_string@tableau^0,c
  3745   00122E  0E10               	movlw	high (STR_14+15)
  3746   001230  6E09               	movwf	(draw_string@tableau+1)^0,c
  3747   001232  EC76  F00E         	call	_draw_string	;wreg free
  3748   001236                     i2l4781:
  3749                           
  3750                           ;T1.c: 55: };T1.c: 57: goto_lico(1,0);
  3751   001236  0E00               	movlw	0
  3752   001238  6E09               	movwf	goto_lico@colonne^0,c
  3753   00123A  0E01               	movlw	1
  3754   00123C  EC64  F00F         	call	_goto_lico
  3755                           
  3756                           ;T1.c: 58: draw_string("Siege:");
  3757   001240  0E9C               	movlw	low STR_7
  3758   001242  6E08               	movwf	draw_string@tableau^0,c
  3759   001244  0E10               	movlw	high STR_7
  3760   001246  6E09               	movwf	(draw_string@tableau+1)^0,c
  3761   001248  EC76  F00E         	call	_draw_string	;wreg free
  3762                           
  3763                           ;T1.c: 59: if (PORTBbits.RB2==0)
  3764   00124C  B481               	btfsc	129,2,c	;volatile
  3765   00124E  D004               	goto	i2l4789
  3766                           
  3767                           ;T1.c: 60: {draw_char('1');}
  3768   001250  0E31               	movlw	49
  3769   001252  ECDF  F010         	call	_draw_char
  3770   001256  D003               	goto	i2l4791
  3771   001258                     i2l4789:
  3772                           
  3773                           ;T1.c: 61: else;T1.c: 62: {draw_char('0');}
  3774   001258  0E30               	movlw	48
  3775   00125A  ECDF  F010         	call	_draw_char
  3776   00125E                     i2l4791:
  3777                           
  3778                           ;T1.c: 64: goto_lico(2,0);
  3779   00125E  0E00               	movlw	0
  3780   001260  6E09               	movwf	goto_lico@colonne^0,c
  3781   001262  0E02               	movlw	2
  3782   001264  EC64  F00F         	call	_goto_lico
  3783                           
  3784                           ;T1.c: 65: draw_string("Temp. Eau:");
  3785   001268  0E66               	movlw	low STR_8
  3786   00126A  6E08               	movwf	draw_string@tableau^0,c
  3787   00126C  0E10               	movlw	high STR_8
  3788   00126E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3789   001270  EC76  F00E         	call	_draw_string	;wreg free
  3790                           
  3791                           ;T1.c: 66: draw_dec8(lecture_8bit_analogique(2));
  3792   001274  0E02               	movlw	2
  3793   001276  ECC4  F010         	call	_lecture_8bit_analogique
  3794   00127A  EC28  F00E         	call	_draw_dec8
  3795                           
  3796                           ;T1.c: 68: goto_lico(3,0);
  3797   00127E  0E00               	movlw	0
  3798   001280  6E09               	movwf	goto_lico@colonne^0,c
  3799   001282  0E03               	movlw	3
  3800   001284  EC64  F00F         	call	_goto_lico
  3801                           
  3802                           ;T1.c: 69: draw_string("Temp. Huile:");
  3803   001288  0E41               	movlw	low STR_9
  3804   00128A  6E08               	movwf	draw_string@tableau^0,c
  3805   00128C  0E10               	movlw	high STR_9
  3806   00128E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3807   001290  EC76  F00E         	call	_draw_string	;wreg free
  3808                           
  3809                           ;T1.c: 70: draw_dec8(lecture_8bit_analogique(3));
  3810   001294  0E03               	movlw	3
  3811   001296  ECC4  F010         	call	_lecture_8bit_analogique
  3812   00129A  EC28  F00E         	call	_draw_dec8
  3813                           
  3814                           ;T1.c: 72: goto_lico(4,0);
  3815   00129E  0E00               	movlw	0
  3816   0012A0  6E09               	movwf	goto_lico@colonne^0,c
  3817   0012A2  0E04               	movlw	4
  3818   0012A4  EC64  F00F         	call	_goto_lico
  3819                           
  3820                           ;T1.c: 73: draw_string("Choc:");
  3821   0012A8  0EB7               	movlw	low STR_10
  3822   0012AA  6E08               	movwf	draw_string@tableau^0,c
  3823   0012AC  0E10               	movlw	high STR_10
  3824   0012AE  6E09               	movwf	(draw_string@tableau+1)^0,c
  3825   0012B0  EC76  F00E         	call	_draw_string	;wreg free
  3826                           
  3827                           ;T1.c: 74: if (PORTBbits.RB3==0)
  3828   0012B4  B681               	btfsc	129,3,c	;volatile
  3829   0012B6  D004               	goto	i2l4811
  3830                           
  3831                           ;T1.c: 75: draw_char('1');
  3832   0012B8  0E31               	movlw	49
  3833   0012BA  ECDF  F010         	call	_draw_char
  3834   0012BE  D003               	goto	i2l4813
  3835   0012C0                     i2l4811:
  3836                           
  3837                           ;T1.c: 76: else;T1.c: 77: draw_char('0');
  3838   0012C0  0E30               	movlw	48
  3839   0012C2  ECDF  F010         	call	_draw_char
  3840   0012C6                     i2l4813:
  3841                           
  3842                           ;T1.c: 79: if(Operator == 2) {
  3843   0012C6  0E02               	movlw	2
  3844   0012C8  0100               	movlb	0	; () banked
  3845   0012CA  1982               	xorwf	130,w,b
  3846   0012CC  A4D8               	btfss	status,2,c
  3847   0012CE  D003               	goto	i2l4817
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;T1.c: 80: vitesse1();
  3851   0012D0  ECA9  F010         	call	_vitesse1	;wreg free
  3852                           
  3853                           ;T1.c: 82: }
  3854   0012D4  D004               	goto	i2l4821
  3855   0012D6                     i2l4817:
  3856                           
  3857                           ; BSR set to: 0
  3858                           ;T1.c: 83: else if(Operator ==1){
  3859   0012D6  0582               	decf	130,w,b
  3860   0012D8  B4D8               	btfsc	status,2,c
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;T1.c: 84: vitesseAdmin();
  3864   0012DA  EC8E  F010         	call	_vitesseAdmin	;wreg free
  3865   0012DE                     i2l4821:
  3866                           
  3867                           ;T1.c: 88: };T1.c: 90: goto_lico(5,0);
  3868   0012DE  0E00               	movlw	0
  3869   0012E0  6E09               	movwf	goto_lico@colonne^0,c
  3870   0012E2  0E05               	movlw	5
  3871   0012E4  EC64  F00F         	call	_goto_lico
  3872                           
  3873                           ;T1.c: 91: draw_string("Vitesse:");
  3874   0012E8  0E7B               	movlw	low STR_11
  3875   0012EA  6E08               	movwf	draw_string@tableau^0,c
  3876   0012EC  0E10               	movlw	high STR_11
  3877   0012EE  6E09               	movwf	(draw_string@tableau+1)^0,c
  3878   0012F0  EC76  F00E         	call	_draw_string	;wreg free
  3879                           
  3880                           ;T1.c: 93: draw_dec8(vitesse);
  3881   0012F4  0100               	movlb	0	; () banked
  3882   0012F6  5173               	movf	115,w,b
  3883   0012F8  EC28  F00E         	call	_draw_dec8
  3884                           
  3885                           ;T1.c: 95: goto_lico(6,0);
  3886   0012FC  0E00               	movlw	0
  3887   0012FE  6E09               	movwf	goto_lico@colonne^0,c
  3888   001300  0E06               	movlw	6
  3889   001302  EC64  F00F         	call	_goto_lico
  3890                           
  3891                           ;T1.c: 96: draw_string("Batterie:");
  3892   001306  0E71               	movlw	low STR_12
  3893   001308  6E08               	movwf	draw_string@tableau^0,c
  3894   00130A  0E10               	movlw	high STR_12
  3895   00130C  6E09               	movwf	(draw_string@tableau+1)^0,c
  3896   00130E  EC76  F00E         	call	_draw_string	;wreg free
  3897                           
  3898                           ;T1.c: 97: if (PORTEbits.RE2==0 && batterie < 100)
  3899   001312  B484               	btfsc	132,2,c	;volatile
  3900   001314  D005               	goto	i2l4837
  3901   001316  0E64               	movlw	100
  3902   001318  0100               	movlb	0	; () banked
  3903   00131A  6174               	cpfslt	116,b
  3904   00131C  D001               	goto	i2l4837
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;T1.c: 98: batterie++;
  3908   00131E  2B74               	incf	116,f,b
  3909   001320                     i2l4837:
  3910                           
  3911                           ;T1.c: 99: if (PORTEbits.RE3==0 && batterie > 0)
  3912   001320  B684               	btfsc	132,3,c	;volatile
  3913   001322  D004               	goto	i2l4843
  3914   001324  0100               	movlb	0	; () banked
  3915   001326  5174               	movf	116,w,b
  3916   001328  A4D8               	btfss	status,2,c
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;T1.c: 100: batterie--;
  3920   00132A  0774               	decf	116,f,b
  3921   00132C                     i2l4843:
  3922                           
  3923                           ;T1.c: 101: draw_dec8(batterie);
  3924   00132C  0100               	movlb	0	; () banked
  3925   00132E  5174               	movf	116,w,b
  3926   001330  EC28  F00E         	call	_draw_dec8
  3927                           
  3928                           ;T1.c: 105: goto_lico(8,0);
  3929   001334  0E00               	movlw	0
  3930   001336  6E09               	movwf	goto_lico@colonne^0,c
  3931   001338  0E08               	movlw	8
  3932   00133A  EC64  F00F         	call	_goto_lico
  3933                           
  3934                           ;T1.c: 106: draw_string("Badge:");
  3935   00133E  0E95               	movlw	low STR_13
  3936   001340  6E08               	movwf	draw_string@tableau^0,c
  3937   001342  0E10               	movlw	high STR_13
  3938   001344  6E09               	movwf	(draw_string@tableau+1)^0,c
  3939   001346  EC76  F00E         	call	_draw_string	;wreg free
  3940                           
  3941                           ;T1.c: 107: if (n_octet_badge==0)
  3942   00134A  0100               	movlb	0	; () banked
  3943   00134C  517F               	movf	127,w,b
  3944   00134E  A4D8               	btfss	status,2,c
  3945   001350  D007               	goto	i2l4853
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;T1.c: 108: draw_string(" AUCUN              ");
  3949   001352  0E1E               	movlw	low STR_14
  3950   001354  6E08               	movwf	draw_string@tableau^0,c
  3951   001356  0E10               	movlw	high STR_14
  3952   001358  6E09               	movwf	(draw_string@tableau+1)^0,c
  3953   00135A  EC76  F00E         	call	_draw_string	;wreg free
  3954   00135E  D01E               	goto	i2l455
  3955   001360                     i2l4853:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;T1.c: 109: else;T1.c: 110: {;T1.c: 117: if(Operator==2)
  3959   001360  0E02               	movlw	2
  3960   001362  1982               	xorwf	130,w,b
  3961   001364  A4D8               	btfss	status,2,c
  3962   001366  D007               	goto	i2l4857
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;T1.c: 118: {;T1.c: 120: draw_string("Operator");
  3966   001368  0E84               	movlw	low STR_15
  3967   00136A  6E08               	movwf	draw_string@tableau^0,c
  3968   00136C  0E10               	movlw	high STR_15
  3969   00136E  6E09               	movwf	(draw_string@tableau+1)^0,c
  3970   001370  EC76  F00E         	call	_draw_string	;wreg free
  3971                           
  3972                           ;T1.c: 122: }
  3973   001374  D013               	goto	i2l455
  3974   001376                     i2l4857:
  3975                           
  3976                           ; BSR set to: 0
  3977                           ;T1.c: 123: else if(Operator==1)
  3978   001376  0582               	decf	130,w,b
  3979   001378  A4D8               	btfss	status,2,c
  3980   00137A  D007               	goto	i2l4861
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;T1.c: 124: {;T1.c: 126: draw_string(" ADMIN");
  3984   00137C  0EAA               	movlw	low STR_16
  3985   00137E  6E08               	movwf	draw_string@tableau^0,c
  3986   001380  0E10               	movlw	high STR_16
  3987   001382  6E09               	movwf	(draw_string@tableau+1)^0,c
  3988   001384  EC76  F00E         	call	_draw_string	;wreg free
  3989                           
  3990                           ;T1.c: 127: }
  3991   001388  D009               	goto	i2l455
  3992   00138A                     i2l4861:
  3993                           
  3994                           ; BSR set to: 0
  3995                           ;T1.c: 128: else if (Operator==0){
  3996   00138A  5182               	movf	130,w,b
  3997   00138C  A4D8               	btfss	status,2,c
  3998   00138E  D006               	goto	i2l455
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;T1.c: 130: draw_string("AUCUN");
  4002   001390  0EBD               	movlw	low STR_17
  4003   001392  6E08               	movwf	draw_string@tableau^0,c
  4004   001394  0E10               	movlw	high STR_17
  4005   001396  6E09               	movwf	(draw_string@tableau+1)^0,c
  4006   001398  EC76  F00E         	call	_draw_string	;wreg free
  4007   00139C                     i2l455:
  4008                           
  4009                           ;T1.c: 131: };T1.c: 132: };T1.c: 140: goto_lico(9,0);
  4010                           
  4011                           ; BSR set to: 0
  4012   00139C  0E00               	movlw	0
  4013   00139E  6E09               	movwf	goto_lico@colonne^0,c
  4014   0013A0  0E09               	movlw	9
  4015   0013A2  EC64  F00F         	call	_goto_lico
  4016                           
  4017                           ;T1.c: 141: draw_string("X-Joystick:");
  4018   0013A6  0E4E               	movlw	low STR_18
  4019   0013A8  6E08               	movwf	draw_string@tableau^0,c
  4020   0013AA  0E10               	movlw	high STR_18
  4021   0013AC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4022   0013AE  EC76  F00E         	call	_draw_string	;wreg free
  4023                           
  4024                           ;T1.c: 142: draw_hex8(lecture_8bit_analogique(10));
  4025   0013B2  0E0A               	movlw	10
  4026   0013B4  ECC4  F010         	call	_lecture_8bit_analogique
  4027   0013B8  EC36  F00F         	call	_draw_hex8
  4028                           
  4029                           ;T1.c: 144: goto_lico(10,0);
  4030   0013BC  0E00               	movlw	0
  4031   0013BE  6E09               	movwf	goto_lico@colonne^0,c
  4032   0013C0  0E0A               	movlw	10
  4033   0013C2  EC64  F00F         	call	_goto_lico
  4034                           
  4035                           ;T1.c: 145: draw_string("Y-Joystick:");
  4036   0013C6  0E5A               	movlw	low STR_19
  4037   0013C8  6E08               	movwf	draw_string@tableau^0,c
  4038   0013CA  0E10               	movlw	high STR_19
  4039   0013CC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4040   0013CE  EC76  F00E         	call	_draw_string	;wreg free
  4041                           
  4042                           ;T1.c: 146: draw_hex8(lecture_8bit_analogique(11));
  4043   0013D2  0E0B               	movlw	11
  4044   0013D4  ECC4  F010         	call	_lecture_8bit_analogique
  4045   0013D8  EC36  F00F         	call	_draw_hex8
  4046                           
  4047                           ;T1.c: 149: goto_lico(5,22);
  4048   0013DC  0E16               	movlw	22
  4049   0013DE  6E09               	movwf	goto_lico@colonne^0,c
  4050   0013E0  0E05               	movlw	5
  4051   0013E2  EC64  F00F         	call	_goto_lico
  4052                           
  4053                           ;T1.c: 150: draw_string("VIDE");
  4054   0013E6  0EC3               	movlw	low STR_20
  4055   0013E8  6E08               	movwf	draw_string@tableau^0,c
  4056   0013EA  0E10               	movlw	high STR_20
  4057   0013EC  6E09               	movwf	(draw_string@tableau+1)^0,c
  4058   0013EE  EC76  F00E         	call	_draw_string	;wreg free
  4059                           
  4060                           ;T1.c: 151: goto_lico(5,31);
  4061   0013F2  0E1F               	movlw	31
  4062   0013F4  6E09               	movwf	goto_lico@colonne^0,c
  4063   0013F6  0E05               	movlw	5
  4064   0013F8  EC64  F00F         	call	_goto_lico
  4065                           
  4066                           ;T1.c: 152: draw_string("CHARGE");
  4067   0013FC  0EA3               	movlw	low STR_21
  4068   0013FE  6E08               	movwf	draw_string@tableau^0,c
  4069   001400  0E10               	movlw	high STR_21
  4070   001402  6E09               	movwf	(draw_string@tableau+1)^0,c
  4071   001404  EC76  F00E         	call	_draw_string	;wreg free
  4072                           
  4073                           ;T1.c: 160: if (TP_appui==1)
  4074   001408  0100               	movlb	0	; () banked
  4075   00140A  0566               	decf	102,w,b
  4076   00140C  A4D8               	btfss	status,2,c
  4077   00140E  D020               	goto	i2l459
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;T1.c: 161: {;T1.c: 162: goto_lico(0,20);
  4081   001410  0E14               	movlw	20
  4082   001412  6E09               	movwf	goto_lico@colonne^0,c
  4083   001414  0E00               	movlw	0
  4084   001416  EC64  F00F         	call	_goto_lico
  4085                           
  4086                           ;T1.c: 163: draw_string("x=");
  4087   00141A  0ECF               	movlw	low STR_22
  4088   00141C  6E08               	movwf	draw_string@tableau^0,c
  4089   00141E  0E10               	movlw	high STR_22
  4090   001420  6E09               	movwf	(draw_string@tableau+1)^0,c
  4091   001422  EC76  F00E         	call	_draw_string	;wreg free
  4092                           
  4093                           ;T1.c: 164: draw_hex8(TP_x);
  4094   001426  0100               	movlb	0	; () banked
  4095   001428  5167               	movf	103,w,b
  4096   00142A  EC36  F00F         	call	_draw_hex8
  4097                           
  4098                           ;T1.c: 165: draw_string(" y=");
  4099   00142E  0EC8               	movlw	low STR_23
  4100   001430  6E08               	movwf	draw_string@tableau^0,c
  4101   001432  0E10               	movlw	high STR_23
  4102   001434  6E09               	movwf	(draw_string@tableau+1)^0,c
  4103   001436  EC76  F00E         	call	_draw_string	;wreg free
  4104                           
  4105                           ;T1.c: 166: draw_hex8(TP_y);
  4106   00143A  0100               	movlb	0	; () banked
  4107   00143C  5168               	movf	104,w,b
  4108   00143E  EC36  F00F         	call	_draw_hex8
  4109                           
  4110                           ;T1.c: 167: plot1(TP_x,TP_y);
  4111   001442  C068 F009          	movff	104,plot1@y
  4112   001446  0100               	movlb	0	; () banked
  4113   001448  5167               	movf	103,w,b
  4114   00144A  EC80  F00D         	call	_plot1
  4115                           
  4116                           ;T1.c: 168: }
  4117   00144E  D001               	goto	i2l4895
  4118   001450                     i2l459:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;T1.c: 169: else;T1.c: 170: {;T1.c: 171: __nop();
  4122   001450  F000               	nop	
  4123   001452                     i2l4895:
  4124                           
  4125                           ;T1.c: 172: };T1.c: 173: if (TEST==1){
  4126   001452  0100               	movlb	0	; () banked
  4127   001454  0581               	decf	129,w,b
  4128   001456  B4D8               	btfsc	status,2,c
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;T1.c: 174: charger();
  4132   001458  ECD9  F011         	call	_charger	;wreg free
  4133                           
  4134                           ;T1.c: 175: };T1.c: 176: if(TEST==0){
  4135   00145C  0100               	movlb	0	; () banked
  4136   00145E  5181               	movf	129,w,b
  4137   001460  A4D8               	btfss	status,2,c
  4138   001462  D6B2               	goto	i2l4761
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;T1.c: 177: clear_line(14);
  4142   001464  0E0E               	movlw	14
  4143   001466  EC71  F011         	call	_clear_line
  4144                           
  4145                           ;T1.c: 178: vide();
  4146   00146A  ECCD  F011         	call	_vide	;wreg free
  4147                           
  4148                           ;T1.c: 179: TEST=3;
  4149   00146E  0E03               	movlw	3
  4150   001470  0100               	movlb	0	; () banked
  4151   001472  6F81               	movwf	129,b
  4152   001474  D6A9               	goto	i2l4761
  4153   001476                     __end_of_tache1:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function _vitesseAdmin *****************
  4157 ;; Defined at:
  4158 ;;		line 466 in file "afficheur.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, status,2, status,0
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used: 1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_tache1
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text15
  4186   00211C                     __ptext15:
  4187                           	callstack 0
  4188   00211C                     _vitesseAdmin:
  4189                           	callstack 27
  4190                           
  4191                           ;afficheur.c: 467: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;incstack = 0
  4195   00211C  A081               	btfss	129,0,c	;volatile
  4196   00211E  D002               	goto	i2u61_40
  4197   002120  B281               	btfsc	129,1,c	;volatile
  4198   002122  0012               	return	
  4199   002124                     i2u61_40:
  4200                           
  4201                           ;afficheur.c: 470: if (PORTEbits.RE4==1){
  4202   002124  A884               	btfss	132,4,c	;volatile
  4203   002126  0012               	return	
  4204                           
  4205                           ;afficheur.c: 471: if(TEST==1){
  4206   002128  0100               	movlb	0	; () banked
  4207   00212A  0581               	decf	129,w,b
  4208   00212C  A4D8               	btfss	status,2,c
  4209   00212E  D00D               	goto	i2l1457
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;afficheur.c: 473: if (PORTEbits.RE0==0 && vitesse < 50)
  4213   002130  B084               	btfsc	132,0,c	;volatile
  4214   002132  D004               	goto	i2l2957
  4215                           
  4216                           ; BSR set to: 0
  4217   002134  0E32               	movlw	50
  4218   002136  6173               	cpfslt	115,b
  4219   002138  D001               	goto	i2l2957
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;afficheur.c: 474: vitesse++;
  4223   00213A  2B73               	incf	115,f,b
  4224   00213C                     i2l2957:
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;afficheur.c: 475: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4228   00213C  B284               	btfsc	132,1,c	;volatile
  4229   00213E  0012               	return	
  4230                           
  4231                           ; BSR set to: 0
  4232   002140  5173               	movf	115,w,b
  4233   002142  B4D8               	btfsc	status,2,c
  4234   002144  0012               	return	
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;afficheur.c: 476: vitesse--;
  4238   002146  0773               	decf	115,f,b
  4239   002148  0012               	return	
  4240   00214A                     i2l1457:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;afficheur.c: 479: if (PORTEbits.RE0==0 && vitesse < 80)
  4244   00214A  B084               	btfsc	132,0,c	;volatile
  4245   00214C  D7F7               	goto	i2l2957
  4246                           
  4247                           ; BSR set to: 0
  4248   00214E  0E50               	movlw	80
  4249   002150  D7F2               	goto	L8
  4250   002152                     __end_of_vitesseAdmin:
  4251                           	callstack 0
  4252                           
  4253 ;; *************** function _vitesse1 *****************
  4254 ;; Defined at:
  4255 ;;		line 444 in file "afficheur.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_tache1
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text16
  4283   002152                     __ptext16:
  4284                           	callstack 0
  4285   002152                     _vitesse1:
  4286                           	callstack 27
  4287                           
  4288                           ;afficheur.c: 445: if (PORTBbits.RB0==0 || PORTBbits.RB1==0){
  4289                           
  4290                           ;incstack = 0
  4291   002152  A081               	btfss	129,0,c	;volatile
  4292   002154  D002               	goto	i2u49_40
  4293   002156  B281               	btfsc	129,1,c	;volatile
  4294   002158  0012               	return	
  4295   00215A                     i2u49_40:
  4296                           
  4297                           ;afficheur.c: 448: if (PORTEbits.RE4==1){
  4298   00215A  A884               	btfss	132,4,c	;volatile
  4299   00215C  0012               	return	
  4300                           
  4301                           ;afficheur.c: 449: if(TEST==1){
  4302   00215E  0100               	movlb	0	; () banked
  4303   002160  0581               	decf	129,w,b
  4304   002162  A4D8               	btfss	status,2,c
  4305   002164  D00D               	goto	i2l1444
  4306                           
  4307                           ; BSR set to: 0
  4308                           ;afficheur.c: 451: if (PORTEbits.RE0==0 && vitesse < 15)
  4309   002166  B084               	btfsc	132,0,c	;volatile
  4310   002168  D004               	goto	i2l2929
  4311                           
  4312                           ; BSR set to: 0
  4313   00216A  0E0F               	movlw	15
  4314   00216C  6173               	cpfslt	115,b
  4315   00216E  D001               	goto	i2l2929
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;afficheur.c: 452: vitesse++;
  4319   002170  2B73               	incf	115,f,b
  4320   002172                     i2l2929:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;afficheur.c: 453: if (PORTEbits.RE1 == 0 && vitesse > 0) {
  4324   002172  B284               	btfsc	132,1,c	;volatile
  4325   002174  0012               	return	
  4326                           
  4327                           ; BSR set to: 0
  4328   002176  5173               	movf	115,w,b
  4329   002178  B4D8               	btfsc	status,2,c
  4330   00217A  0012               	return	
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;afficheur.c: 454: vitesse--;
  4334   00217C  0773               	decf	115,f,b
  4335   00217E  0012               	return	
  4336   002180                     i2l1444:
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;afficheur.c: 457: if (PORTEbits.RE0==0 && vitesse < 25)
  4340   002180  B084               	btfsc	132,0,c	;volatile
  4341   002182  D7F7               	goto	i2l2929
  4342                           
  4343                           ; BSR set to: 0
  4344   002184  0E19               	movlw	25
  4345   002186  D7F2               	goto	L9
  4346   002188                     __end_of_vitesse1:
  4347                           	callstack 0
  4348                           
  4349 ;; *************** function _vide *****************
  4350 ;; Defined at:
  4351 ;;		line 438 in file "afficheur.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;Total ram usage:        0 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 4
  4372 ;; This function calls:
  4373 ;;		_draw_string
  4374 ;;		_goto_lico
  4375 ;; This function is called by:
  4376 ;;		_tache1
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text17
  4381   00239A                     __ptext17:
  4382                           	callstack 0
  4383   00239A                     _vide:
  4384                           	callstack 23
  4385                           
  4386                           ;afficheur.c: 440: goto_lico(14,0);
  4387                           
  4388                           ;incstack = 0
  4389   00239A  0E00               	movlw	0
  4390   00239C  6E09               	movwf	goto_lico@colonne^0,c
  4391   00239E  0E0E               	movlw	14
  4392   0023A0  EC64  F00F         	call	_goto_lico
  4393                           
  4394                           ;afficheur.c: 441: draw_string("ROUESBYGNOLES");
  4395   0023A4  0E33               	movlw	low STR_25
  4396   0023A6  6E08               	movwf	draw_string@tableau^0,c
  4397   0023A8  0E10               	movlw	high STR_25
  4398   0023AA  6E09               	movwf	(draw_string@tableau+1)^0,c
  4399   0023AC  EC76  F00E         	call	_draw_string	;wreg free
  4400   0023B0  0012               	return		;funcret
  4401   0023B2                     __end_of_vide:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function _lecture_8bit_analogique *****************
  4405 ;; Defined at:
  4406 ;;		line 60 in file "main.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  channel         1    wreg     unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  channel         1    1[COMRAM] unsigned char 
  4411 ;;  ret             1    0[COMRAM] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      unsigned char 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;Total ram usage:        2 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_tache1
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text18
  4435   002188                     __ptext18:
  4436                           	callstack 0
  4437   002188                     _lecture_8bit_analogique:
  4438                           	callstack 27
  4439                           
  4440                           ;incstack = 0
  4441                           ;lecture_8bit_analogique@channel stored from wreg
  4442   002188  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4443                           
  4444                           ;main.c: 62: unsigned char ret;;main.c: 65: ADCON1=0;
  4445   00218A  0E00               	movlw	0
  4446   00218C  6EC1               	movwf	193,c	;volatile
  4447                           
  4448                           ;main.c: 66: ADCON2=0x16;
  4449   00218E  0E16               	movlw	22
  4450   002190  6EC0               	movwf	192,c	;volatile
  4451                           
  4452                           ;main.c: 67: channel=channel&0x1F;
  4453   002192  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4454   002194  0B1F               	andlw	31
  4455   002196  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4456                           
  4457                           ;main.c: 68: channel=channel<<2;
  4458   002198  4402               	rlncf	lecture_8bit_analogique@channel^0,w,c
  4459   00219A  46E8               	rlncf	wreg,f,c
  4460   00219C  0BFC               	andlw	252
  4461   00219E  6E02               	movwf	lecture_8bit_analogique@channel^0,c
  4462                           
  4463                           ;main.c: 69: ADCON0=channel|0x01;
  4464   0021A0  5002               	movf	lecture_8bit_analogique@channel^0,w,c
  4465   0021A2  0901               	iorlw	1
  4466   0021A4  6EC2               	movwf	194,c	;volatile
  4467                           
  4468                           ;main.c: 71: ADCON0bits.GO=1;
  4469   0021A6  82C2               	bsf	194,1,c	;volatile
  4470   0021A8                     i2l144:
  4471   0021A8  B2C2               	btfsc	194,1,c	;volatile
  4472   0021AA  D7FE               	goto	i2l144
  4473                           
  4474                           ;main.c: 75: if ((ADRESL&0x01)==0x01)
  4475   0021AC  A0C3               	btfss	195,0,c	;volatile
  4476   0021AE  D003               	goto	i2l147
  4477                           
  4478                           ;main.c: 76: ret=0;
  4479   0021B0  0E00               	movlw	0
  4480   0021B2  6E01               	movwf	lecture_8bit_analogique@ret^0,c
  4481   0021B4  D002               	goto	i2l2817
  4482   0021B6                     i2l147:
  4483                           
  4484                           ;main.c: 77: else;main.c: 78: ret=ADRESH;
  4485   0021B6  CFC4 F001          	movff	4036,lecture_8bit_analogique@ret	;volatile
  4486   0021BA                     i2l2817:
  4487                           
  4488                           ;main.c: 82: return ret;
  4489   0021BA  5001               	movf	lecture_8bit_analogique@ret^0,w,c
  4490   0021BC  0012               	return		;funcret
  4491   0021BE                     __end_of_lecture_8bit_analogique:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _initialisation_afficheur *****************
  4495 ;; Defined at:
  4496 ;;		line 164 in file "afficheur.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  error_count     1    8[COMRAM] unsigned char 
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/0
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;Total ram usage:        1 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 3
  4517 ;; This function calls:
  4518 ;;		_check_status_ok
  4519 ;;		_command
  4520 ;;		_d1command
  4521 ;;		_d2command
  4522 ;;		_delai_us_char
  4523 ;; This function is called by:
  4524 ;;		_tache1
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text19
  4529   001A34                     __ptext19:
  4530                           	callstack 0
  4531   001A34                     _initialisation_afficheur:
  4532                           	callstack 24
  4533                           
  4534                           ;afficheur.c: 167: unsigned char error_count;;afficheur.c: 169: error_count=0;
  4535                           
  4536                           ;incstack = 0
  4537   001A34  0E00               	movlw	0
  4538   001A36  6E09               	movwf	initialisation_afficheur@error_count^0,c
  4539                           
  4540                           ;afficheur.c: 172: LATH=0;
  4541   001A38  0E00               	movlw	0
  4542   001A3A  6E90               	movwf	144,c	;volatile
  4543                           
  4544                           ;afficheur.c: 173: LATJ=0x1F;
  4545   001A3C  0E1F               	movlw	31
  4546   001A3E  6E91               	movwf	145,c	;volatile
  4547                           
  4548                           ;afficheur.c: 176: TRISH=0;
  4549   001A40  0E00               	movlw	0
  4550   001A42  6E99               	movwf	153,c	;volatile
  4551                           
  4552                           ;afficheur.c: 177: TRISJ=0;
  4553   001A44  0E00               	movlw	0
  4554   001A46  6E9A               	movwf	154,c	;volatile
  4555                           
  4556                           ;afficheur.c: 180: LATJbits.LATJ5=0;
  4557   001A48  9A91               	bcf	145,5,c	;volatile
  4558                           
  4559                           ;afficheur.c: 181: LATJbits.LATJ6=1;
  4560   001A4A  8C91               	bsf	145,6,c	;volatile
  4561                           
  4562                           ;afficheur.c: 184: LATJbits.LATJ4=0;
  4563   001A4C  9891               	bcf	145,4,c	;volatile
  4564                           
  4565                           ;afficheur.c: 185: delai_us_char(4);
  4566   001A4E  0E04               	movlw	4
  4567   001A50  EC60  F011         	call	_delai_us_char
  4568                           
  4569                           ;afficheur.c: 186: LATJbits.LATJ4=1;
  4570   001A54  8891               	bsf	145,4,c	;volatile
  4571                           
  4572                           ;afficheur.c: 190: delai_us_char(12);
  4573   001A56  0E0C               	movlw	12
  4574   001A58  EC60  F011         	call	_delai_us_char
  4575                           
  4576                           ;afficheur.c: 191: while(check_status_ok()==00)
  4577   001A5C  D00C               	goto	i2l4375
  4578   001A5E                     i2l4365:
  4579                           
  4580                           ;afficheur.c: 192: {;afficheur.c: 193: error_count++;
  4581   001A5E  2A09               	incf	initialisation_afficheur@error_count^0,f,c
  4582                           
  4583                           ;afficheur.c: 194: delai_us_char(12);
  4584   001A60  0E0C               	movlw	12
  4585   001A62  EC60  F011         	call	_delai_us_char
  4586                           
  4587                           ;afficheur.c: 195: if (error_count>200)
  4588   001A66  0EC8               	movlw	200
  4589   001A68  6409               	cpfsgt	initialisation_afficheur@error_count^0,c
  4590   001A6A  D005               	goto	i2l4375
  4591                           
  4592                           ;afficheur.c: 196: {;afficheur.c: 197: LATCbits.LATC1=1;LATGbits.LATG0=1;LATCbits.LATC2=
      +                          0;
  4593   001A6C  828B               	bsf	139,1,c	;volatile
  4594   001A6E  808F               	bsf	143,0,c	;volatile
  4595   001A70  948B               	bcf	139,2,c	;volatile
  4596                           
  4597                           ;afficheur.c: 198: (INTCONbits.GIE = 0);
  4598   001A72  9EF2               	bcf	242,7,c	;volatile
  4599   001A74                     i2l1304:
  4600   001A74  D7FF               	goto	i2l1304
  4601   001A76                     i2l4375:
  4602   001A76  EC28  F011         	call	_check_status_ok	;wreg free
  4603   001A7A  0900               	iorlw	0
  4604   001A7C  B4D8               	btfsc	status,2,c
  4605   001A7E  D7EF               	goto	i2l4365
  4606                           
  4607                           ;afficheur.c: 201: };afficheur.c: 202: };afficheur.c: 205: d2command(39,15,0x21);
  4608   001A80  0E0F               	movlw	15
  4609   001A82  6E05               	movwf	d2command@d2^0,c
  4610   001A84  0E21               	movlw	33
  4611   001A86  6E06               	movwf	d2command@cmd^0,c
  4612   001A88  0E27               	movlw	39
  4613   001A8A  ECE2  F00F         	call	_d2command
  4614                           
  4615                           ;afficheur.c: 206: d2command(0,0,0x22);
  4616   001A8E  0E00               	movlw	0
  4617   001A90  6E05               	movwf	d2command@d2^0,c
  4618   001A92  0E22               	movlw	34
  4619   001A94  6E06               	movwf	d2command@cmd^0,c
  4620   001A96  0E00               	movlw	0
  4621   001A98  ECE2  F00F         	call	_d2command
  4622                           
  4623                           ;afficheur.c: 207: d2command(0,0,0x24);
  4624   001A9C  0E00               	movlw	0
  4625   001A9E  6E05               	movwf	d2command@d2^0,c
  4626   001AA0  0E24               	movlw	36
  4627   001AA2  6E06               	movwf	d2command@cmd^0,c
  4628   001AA4  0E00               	movlw	0
  4629   001AA6  ECE2  F00F         	call	_d2command
  4630                           
  4631                           ;afficheur.c: 210: d2command(0,0x7B,0x40);
  4632   001AAA  0E7B               	movlw	123
  4633   001AAC  6E05               	movwf	d2command@d2^0,c
  4634   001AAE  0E40               	movlw	64
  4635   001AB0  6E06               	movwf	d2command@cmd^0,c
  4636   001AB2  0E00               	movlw	0
  4637   001AB4  ECE2  F00F         	call	_d2command
  4638                           
  4639                           ;afficheur.c: 211: d2command(40,0,0x41);
  4640   001AB8  0E00               	movlw	0
  4641   001ABA  6E05               	movwf	d2command@d2^0,c
  4642   001ABC  0E41               	movlw	65
  4643   001ABE  6E06               	movwf	d2command@cmd^0,c
  4644   001AC0  0E28               	movlw	40
  4645   001AC2  ECE2  F00F         	call	_d2command
  4646                           
  4647                           ;afficheur.c: 212: d2command(0x00,0x80,0x42);
  4648   001AC6  0E80               	movlw	128
  4649   001AC8  6E05               	movwf	d2command@d2^0,c
  4650   001ACA  0E42               	movlw	66
  4651   001ACC  6E06               	movwf	d2command@cmd^0,c
  4652   001ACE  0E00               	movlw	0
  4653   001AD0  ECE2  F00F         	call	_d2command
  4654                           
  4655                           ;afficheur.c: 213: d2command(40,0,0x43);
  4656   001AD4  0E00               	movlw	0
  4657   001AD6  6E05               	movwf	d2command@d2^0,c
  4658   001AD8  0E43               	movlw	67
  4659   001ADA  6E06               	movwf	d2command@cmd^0,c
  4660   001ADC  0E28               	movlw	40
  4661   001ADE  ECE2  F00F         	call	_d2command
  4662                           
  4663                           ;afficheur.c: 216: command(0x80);
  4664   001AE2  0E80               	movlw	128
  4665   001AE4  EC8E  F011         	call	_command
  4666                           
  4667                           ;afficheur.c: 219: command(0x9C);
  4668   001AE8  0E9C               	movlw	156
  4669   001AEA  EC8E  F011         	call	_command
  4670                           
  4671                           ;afficheur.c: 222: command(0xA0);
  4672   001AEE  0EA0               	movlw	160
  4673   001AF0  EC8E  F011         	call	_command
  4674                           
  4675                           ;afficheur.c: 225: d1command(0x02,0x70);
  4676   001AF4  0E70               	movlw	112
  4677   001AF6  6E05               	movwf	d1command@cmd^0,c
  4678   001AF8  0E02               	movlw	2
  4679   001AFA  EC55  F010         	call	_d1command
  4680   001AFE  0012               	return		;funcret
  4681   001B00                     __end_of_initialisation_afficheur:
  4682                           	callstack 0
  4683                           
  4684 ;; *************** function _check_status_ok *****************
  4685 ;; Defined at:
  4686 ;;		line 30 in file "afficheur.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  res             1    0[COMRAM] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      unsigned char 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;Total ram usage:        1 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_initialisation_afficheur
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           	psect	text20
  4714   002250                     __ptext20:
  4715                           	callstack 0
  4716   002250                     _check_status_ok:
  4717                           	callstack 26
  4718                           
  4719                           ;afficheur.c: 32: unsigned char res;;afficheur.c: 35: TRISH=0xFF;
  4720                           
  4721                           ;incstack = 0
  4722   002250  6899               	setf	153,c	;volatile
  4723                           
  4724                           ;afficheur.c: 36: LATJbits.LATJ0=1;
  4725   002252  8091               	bsf	145,0,c	;volatile
  4726                           
  4727                           ;afficheur.c: 37: LATJbits.LATJ3=0;
  4728   002254  9691               	bcf	145,3,c	;volatile
  4729                           
  4730                           ;afficheur.c: 38: LATJbits.LATJ1=0;
  4731   002256  9291               	bcf	145,1,c	;volatile
  4732                           
  4733                           ;afficheur.c: 39: __nop();
  4734   002258  F000               	nop	
  4735                           
  4736                           ;afficheur.c: 40: __nop();
  4737   00225A  F000               	nop	
  4738                           
  4739                           ;afficheur.c: 41: __nop();
  4740   00225C  F000               	nop	
  4741                           
  4742                           ;afficheur.c: 42: res=PORTH;
  4743   00225E  CF87 F001          	movff	3975,check_status_ok@res	;volatile
  4744                           
  4745                           ;afficheur.c: 43: LATJbits.LATJ1=1;
  4746   002262  8291               	bsf	145,1,c	;volatile
  4747                           
  4748                           ;afficheur.c: 44: LATJbits.LATJ3=1;
  4749   002264  8691               	bsf	145,3,c	;volatile
  4750                           
  4751                           ;afficheur.c: 46: if ((res&0x03)==0x03)
  4752   002266  5001               	movf	check_status_ok@res^0,w,c
  4753   002268  0B03               	andlw	3
  4754   00226A  0A03               	xorlw	3
  4755   00226C  A4D8               	btfss	status,2,c
  4756   00226E  D002               	goto	i2l2787
  4757                           
  4758                           ;afficheur.c: 47: res=1;
  4759   002270  0E01               	movlw	1
  4760   002272  D001               	goto	L4
  4761   002274                     i2l2787:
  4762                           
  4763                           ;afficheur.c: 48: else;afficheur.c: 49: res=0;
  4764   002274  0E00               	movlw	0
  4765   002276                     L4:
  4766   002276  6E01               	movwf	check_status_ok@res^0,c
  4767                           
  4768                           ;afficheur.c: 50: return res;
  4769   002278  5001               	movf	check_status_ok@res^0,w,c
  4770   00227A  0012               	return		;funcret
  4771   00227C                     __end_of_check_status_ok:
  4772                           	callstack 0
  4773                           
  4774 ;; *************** function _init_rxtx *****************
  4775 ;; Defined at:
  4776 ;;		line 4 in file "rxtx.c"
  4777 ;; Parameters:    Size  Location     Type
  4778 ;;		None
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;		None
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  1    wreg      void 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        0 bytes
  4795 ;; Hardware stack levels used: 1
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_tache1
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text21
  4804   00229E                     __ptext21:
  4805                           	callstack 0
  4806   00229E                     _init_rxtx:
  4807                           	callstack 27
  4808                           
  4809                           ;rxtx.c: 6: TRISCbits.TRISC6=0;
  4810                           
  4811                           ;incstack = 0
  4812   00229E  9C94               	bcf	148,6,c	;volatile
  4813                           
  4814                           ;rxtx.c: 7: TRISCbits.TRISC7=1;
  4815   0022A0  8E94               	bsf	148,7,c	;volatile
  4816                           
  4817                           ;rxtx.c: 8: BAUDCON1=0x08;
  4818   0022A2  0E08               	movlw	8
  4819   0022A4  6E65               	movwf	101,c	;volatile
  4820                           
  4821                           ;rxtx.c: 9: SPBRGH1=0x04;
  4822   0022A6  0E04               	movlw	4
  4823   0022A8  6ED4               	movwf	212,c	;volatile
  4824                           
  4825                           ;rxtx.c: 10: SPBRG1=0xE1;
  4826   0022AA  0EE1               	movlw	225
  4827   0022AC  6EAF               	movwf	175,c	;volatile
  4828                           
  4829                           ;rxtx.c: 11: TXSTA1=0x04;
  4830   0022AE  0E04               	movlw	4
  4831   0022B0  6EAC               	movwf	172,c	;volatile
  4832                           
  4833                           ;rxtx.c: 12: RCSTA1=0x80;
  4834   0022B2  0E80               	movlw	128
  4835   0022B4  6EAB               	movwf	171,c	;volatile
  4836                           
  4837                           ;rxtx.c: 13: TXSTA1=0x24;
  4838   0022B6  0E24               	movlw	36
  4839   0022B8  6EAC               	movwf	172,c	;volatile
  4840                           
  4841                           ;rxtx.c: 14: RCSTA1=0x90;
  4842   0022BA  0E90               	movlw	144
  4843   0022BC  6EAB               	movwf	171,c	;volatile
  4844   0022BE  0012               	return		;funcret
  4845   0022C0                     __end_of_init_rxtx:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _draw_square *****************
  4849 ;; Defined at:
  4850 ;;		line 325 in file "afficheur.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;  x1              1    wreg     unsigned char 
  4853 ;;  y1              1   14[COMRAM] unsigned char 
  4854 ;;  x2              1   15[COMRAM] unsigned char 
  4855 ;;  y2              1   16[COMRAM] unsigned char 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  x1              1   17[COMRAM] unsigned char 
  4858 ;;  y               1   19[COMRAM] unsigned char 
  4859 ;;  x               1   18[COMRAM] unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4869 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;Total ram usage:        6 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 4
  4876 ;; This function calls:
  4877 ;;		_plot1
  4878 ;; This function is called by:
  4879 ;;		_tache1
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text22
  4884   002014                     __ptext22:
  4885                           	callstack 0
  4886   002014                     _draw_square:
  4887                           	callstack 23
  4888                           
  4889                           ;incstack = 0
  4890                           ;draw_square@x1 stored from wreg
  4891   002014  6E12               	movwf	draw_square@x1^0,c
  4892                           
  4893                           ;afficheur.c: 326: unsigned char x, y;;afficheur.c: 329: for (x = x1; x <= x2; x++) {
  4894   002016  C012  F013         	movff	draw_square@x1,draw_square@x
  4895   00201A  D00B               	goto	i2l4413
  4896   00201C                     i2l4409:
  4897                           
  4898                           ;afficheur.c: 330: plot1(x, y1);
  4899   00201C  C00F  F009         	movff	draw_square@y1,plot1@y
  4900   002020  5013               	movf	draw_square@x^0,w,c
  4901   002022  EC80  F00D         	call	_plot1
  4902                           
  4903                           ;afficheur.c: 331: plot1(x, y2);
  4904   002026  C011  F009         	movff	draw_square@y2,plot1@y
  4905   00202A  5013               	movf	draw_square@x^0,w,c
  4906   00202C  EC80  F00D         	call	_plot1
  4907   002030  2A13               	incf	draw_square@x^0,f,c
  4908   002032                     i2l4413:
  4909   002032  5013               	movf	draw_square@x^0,w,c
  4910   002034  5C10               	subwf	draw_square@x2^0,w,c
  4911   002036  B0D8               	btfsc	status,0,c
  4912   002038  D7F1               	goto	i2l4409
  4913                           
  4914                           ;afficheur.c: 332: };afficheur.c: 335: for (y = y1; y <= y2; y++) {
  4915   00203A  C00F  F014         	movff	draw_square@y1,draw_square@y
  4916   00203E  D00B               	goto	i2l4419
  4917   002040                     i2l4415:
  4918                           
  4919                           ;afficheur.c: 336: plot1(x1, y);
  4920   002040  C014  F009         	movff	draw_square@y,plot1@y
  4921   002044  5012               	movf	draw_square@x1^0,w,c
  4922   002046  EC80  F00D         	call	_plot1
  4923                           
  4924                           ;afficheur.c: 337: plot1(x2, y);
  4925   00204A  C014  F009         	movff	draw_square@y,plot1@y
  4926   00204E  5010               	movf	draw_square@x2^0,w,c
  4927   002050  EC80  F00D         	call	_plot1
  4928   002054  2A14               	incf	draw_square@y^0,f,c
  4929   002056                     i2l4419:
  4930   002056  5014               	movf	draw_square@y^0,w,c
  4931   002058  5C11               	subwf	draw_square@y2^0,w,c
  4932   00205A  A0D8               	btfss	status,0,c
  4933   00205C  0012               	return	
  4934   00205E  D7F0               	goto	i2l4415
  4935   002060                     __end_of_draw_square:
  4936                           	callstack 0
  4937                           
  4938 ;; *************** function _plot1 *****************
  4939 ;; Defined at:
  4940 ;;		line 390 in file "afficheur.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  x               1    wreg     unsigned char 
  4943 ;;  y               1    8[COMRAM] unsigned char 
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  x               1   13[COMRAM] unsigned char 
  4946 ;;  add             2   11[COMRAM] unsigned int 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4956 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;Total ram usage:        6 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 3
  4963 ;; This function calls:
  4964 ;;		___awdiv
  4965 ;;		___awmod
  4966 ;;		_command
  4967 ;;		_d2command
  4968 ;; This function is called by:
  4969 ;;		_tache1
  4970 ;;		_draw_square
  4971 ;;		_draw_filled_square
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text23
  4976   001B00                     __ptext23:
  4977                           	callstack 0
  4978   001B00                     _plot1:
  4979                           	callstack 24
  4980                           
  4981                           ;incstack = 0
  4982                           ;plot1@x stored from wreg
  4983   001B00  6E0E               	movwf	plot1@x^0,c
  4984                           
  4985                           ;afficheur.c: 392: unsigned int add;;afficheur.c: 394: add=40*y+x/6;
  4986   001B02  C00E  F001         	movff	plot1@x,___awdiv@dividend
  4987   001B06  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4988   001B08  0E00               	movlw	0
  4989   001B0A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4990   001B0C  0E06               	movlw	6
  4991   001B0E  6E03               	movwf	___awdiv@divisor^0,c
  4992   001B10  ECBC  F00E         	call	___awdiv	;wreg free
  4993   001B14  5009               	movf	plot1@y^0,w,c
  4994   001B16  0D28               	mullw	40
  4995   001B18  CFF3 F00A          	movff	prodl,??_plot1
  4996   001B1C  CFF4 F00B          	movff	prodh,??_plot1+1
  4997   001B20  5001               	movf	?___awdiv^0,w,c
  4998   001B22  240A               	addwf	??_plot1^0,w,c
  4999   001B24  6E0C               	movwf	plot1@add^0,c
  5000   001B26  5002               	movf	(?___awdiv+1)^0,w,c
  5001   001B28  200B               	addwfc	(??_plot1+1)^0,w,c
  5002   001B2A  6E0D               	movwf	(plot1@add+1)^0,c
  5003                           
  5004                           ;afficheur.c: 395: d2command((char)(add&0xff),(char)(add>>8),0x24);
  5005   001B2C  500D               	movf	(plot1@add+1)^0,w,c
  5006   001B2E  6E05               	movwf	d2command@d2^0,c
  5007   001B30  0E24               	movlw	36
  5008   001B32  6E06               	movwf	d2command@cmd^0,c
  5009   001B34  500C               	movf	plot1@add^0,w,c
  5010   001B36  ECE2  F00F         	call	_d2command
  5011                           
  5012                           ;afficheur.c: 397: switch(x%6)
  5013   001B3A  D018               	goto	i2l4339
  5014   001B3C                     i2l4325:
  5015   001B3C  0EFD               	movlw	253
  5016   001B3E  EC8E  F011         	call	_command
  5017   001B42  0012               	return	
  5018   001B44                     i2l4327:
  5019   001B44  0EFC               	movlw	252
  5020   001B46  EC8E  F011         	call	_command
  5021   001B4A  0012               	return	
  5022   001B4C                     i2l4329:
  5023   001B4C  0EFB               	movlw	251
  5024   001B4E  EC8E  F011         	call	_command
  5025   001B52  0012               	return	
  5026   001B54                     i2l4331:
  5027   001B54  0EFA               	movlw	250
  5028   001B56  EC8E  F011         	call	_command
  5029   001B5A  0012               	return	
  5030   001B5C                     i2l4333:
  5031   001B5C  0EF9               	movlw	249
  5032   001B5E  EC8E  F011         	call	_command
  5033   001B62  0012               	return	
  5034   001B64                     i2l4335:
  5035   001B64  0EF8               	movlw	248
  5036   001B66  EC8E  F011         	call	_command
  5037   001B6A  0012               	return	
  5038   001B6C                     i2l4339:
  5039   001B6C  C00E  F001         	movff	plot1@x,___awmod@dividend
  5040   001B70  6A02               	clrf	(___awmod@dividend+1)^0,c
  5041   001B72  0E00               	movlw	0
  5042   001B74  6E04               	movwf	(___awmod@divisor+1)^0,c
  5043   001B76  0E06               	movlw	6
  5044   001B78  6E03               	movwf	___awmod@divisor^0,c
  5045   001B7A  ECFE  F00E         	call	___awmod	;wreg free
  5046                           
  5047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5048                           ; Switch size 1, requested type "simple"
  5049                           ; Number of cases is 1, Range of values is 0 to 0
  5050                           ; switch strategies available:
  5051                           ; Name         Instructions Cycles
  5052                           ; simple_byte            4     3 (average)
  5053                           ;	Chosen strategy is simple_byte
  5054   001B7E  5002               	movf	(?___awmod+1)^0,w,c
  5055   001B80  0A00               	xorlw	0	; case 0
  5056   001B82  A4D8               	btfss	status,2,c
  5057   001B84  0012               	return	
  5058                           
  5059                           ; Switch size 1, requested type "simple"
  5060                           ; Number of cases is 6, Range of values is 0 to 5
  5061                           ; switch strategies available:
  5062                           ; Name         Instructions Cycles
  5063                           ; simple_byte           19    10 (average)
  5064                           ;	Chosen strategy is simple_byte
  5065   001B86  5001               	movf	?___awmod^0,w,c
  5066   001B88  0A00               	xorlw	0	; case 0
  5067   001B8A  B4D8               	btfsc	status,2,c
  5068   001B8C  D7D7               	goto	i2l4325
  5069   001B8E  0A01               	xorlw	1	; case 1
  5070   001B90  B4D8               	btfsc	status,2,c
  5071   001B92  D7D8               	goto	i2l4327
  5072   001B94  0A03               	xorlw	3	; case 2
  5073   001B96  B4D8               	btfsc	status,2,c
  5074   001B98  D7D9               	goto	i2l4329
  5075   001B9A  0A01               	xorlw	1	; case 3
  5076   001B9C  B4D8               	btfsc	status,2,c
  5077   001B9E  D7DA               	goto	i2l4331
  5078   001BA0  0A07               	xorlw	7	; case 4
  5079   001BA2  B4D8               	btfsc	status,2,c
  5080   001BA4  D7DB               	goto	i2l4333
  5081   001BA6  0A01               	xorlw	1	; case 5
  5082   001BA8  A4D8               	btfss	status,2,c
  5083   001BAA  0012               	return	
  5084   001BAC  D7DB               	goto	i2l4335
  5085   001BAE                     __end_of_plot1:
  5086                           	callstack 0
  5087                           
  5088 ;; *************** function _command *****************
  5089 ;; Defined at:
  5090 ;;		line 90 in file "afficheur.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  cmd             1    wreg     unsigned char 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  cmd             1    4[COMRAM] unsigned char 
  5095 ;;  res             1    0        unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      unsigned char 
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;Total ram usage:        1 bytes
  5110 ;; Hardware stack levels used: 1
  5111 ;; Hardware stack levels required when called: 2
  5112 ;; This function calls:
  5113 ;;		_delai_us_char
  5114 ;;		_wait_status_ok
  5115 ;;		_write_c_aff
  5116 ;; This function is called by:
  5117 ;;		_initialisation_afficheur
  5118 ;;		_plot1
  5119 ;;		_plot0
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text24
  5124   00231C                     __ptext24:
  5125                           	callstack 0
  5126   00231C                     _command:
  5127                           	callstack 24
  5128                           
  5129                           ;incstack = 0
  5130                           ;command@cmd stored from wreg
  5131   00231C  6E05               	movwf	command@cmd^0,c
  5132                           
  5133                           ;afficheur.c: 96: if(wait_status_ok()==1)
  5134   00231E  ECB9  F00F         	call	_wait_status_ok	;wreg free
  5135   002322  06E8               	decf	wreg,f,c
  5136   002324  A4D8               	btfss	status,2,c
  5137   002326  0012               	return	
  5138                           
  5139                           ;afficheur.c: 97: {;afficheur.c: 98: delai_us_char(12);
  5140   002328  0E0C               	movlw	12
  5141   00232A  EC60  F011         	call	_delai_us_char
  5142                           
  5143                           ;afficheur.c: 99: write_c_aff(cmd);
  5144   00232E  5005               	movf	command@cmd^0,w,c
  5145   002330  ECA8  F011         	call	_write_c_aff
  5146   002334  0012               	return		;funcret
  5147   002336                     __end_of_command:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function ___awmod *****************
  5151 ;; Defined at:
  5152 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  dividend        2    0[COMRAM] int 
  5155 ;;  divisor         2    2[COMRAM] int 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  sign            1    5[COMRAM] unsigned char 
  5158 ;;  counter         1    4[COMRAM] unsigned char 
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  2    0[COMRAM] int 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5168 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;Total ram usage:        6 bytes
  5173 ;; Hardware stack levels used: 1
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_plot1
  5178 ;;		_plot0
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text25
  5183   001DFC                     __ptext25:
  5184                           	callstack 0
  5185   001DFC                     ___awmod:
  5186                           	callstack 26
  5187                           
  5188                           ;incstack = 0
  5189   001DFC  0E00               	movlw	0
  5190   001DFE  6E06               	movwf	___awmod@sign^0,c
  5191   001E00  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5192   001E02  D006               	goto	i2l4257
  5193   001E04  6C01               	negf	___awmod@dividend^0,c
  5194   001E06  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5195   001E08  B0D8               	btfsc	status,0,c
  5196   001E0A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5197   001E0C  0E01               	movlw	1
  5198   001E0E  6E06               	movwf	___awmod@sign^0,c
  5199   001E10                     i2l4257:
  5200   001E10  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5201   001E12  D004               	goto	i2l4261
  5202   001E14  6C03               	negf	___awmod@divisor^0,c
  5203   001E16  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5204   001E18  B0D8               	btfsc	status,0,c
  5205   001E1A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5206   001E1C                     i2l4261:
  5207   001E1C  5003               	movf	___awmod@divisor^0,w,c
  5208   001E1E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5209   001E20  B4D8               	btfsc	status,2,c
  5210   001E22  D018               	goto	i2l4277
  5211   001E24  0E01               	movlw	1
  5212   001E26  6E05               	movwf	___awmod@counter^0,c
  5213   001E28  D004               	goto	i2l4267
  5214   001E2A                     i2l4265:
  5215   001E2A  90D8               	bcf	status,0,c
  5216   001E2C  3603               	rlcf	___awmod@divisor^0,f,c
  5217   001E2E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5218   001E30  2A05               	incf	___awmod@counter^0,f,c
  5219   001E32                     i2l4267:
  5220   001E32  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5221   001E34  D7FA               	goto	i2l4265
  5222   001E36                     i2u231_40:
  5223   001E36  5003               	movf	___awmod@divisor^0,w,c
  5224   001E38  5C01               	subwf	___awmod@dividend^0,w,c
  5225   001E3A  5004               	movf	(___awmod@divisor+1)^0,w,c
  5226   001E3C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5227   001E3E  A0D8               	btfss	status,0,c
  5228   001E40  D004               	goto	i2l4273
  5229   001E42  5003               	movf	___awmod@divisor^0,w,c
  5230   001E44  5E01               	subwf	___awmod@dividend^0,f,c
  5231   001E46  5004               	movf	(___awmod@divisor+1)^0,w,c
  5232   001E48  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5233   001E4A                     i2l4273:
  5234   001E4A  90D8               	bcf	status,0,c
  5235   001E4C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5236   001E4E  3203               	rrcf	___awmod@divisor^0,f,c
  5237   001E50  2E05               	decfsz	___awmod@counter^0,f,c
  5238   001E52  D7F1               	goto	i2u231_40
  5239   001E54                     i2l4277:
  5240   001E54  5006               	movf	___awmod@sign^0,w,c
  5241   001E56  B4D8               	btfsc	status,2,c
  5242   001E58  D004               	goto	i2l4281
  5243   001E5A  6C01               	negf	___awmod@dividend^0,c
  5244   001E5C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5245   001E5E  B0D8               	btfsc	status,0,c
  5246   001E60  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5247   001E62                     i2l4281:
  5248   001E62  C001  F001         	movff	___awmod@dividend,?___awmod
  5249   001E66  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5250   001E6A  0012               	return		;funcret
  5251   001E6C                     __end_of___awmod:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function _draw_hex8 *****************
  5255 ;; Defined at:
  5256 ;;		line 252 in file "afficheur.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  octet           1    wreg     unsigned char 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  octet           1    7[COMRAM] unsigned char 
  5261 ;;  c               1    8[COMRAM] unsigned char 
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;Total ram usage:        2 bytes
  5276 ;; Hardware stack levels used: 1
  5277 ;; Hardware stack levels required when called: 3
  5278 ;; This function calls:
  5279 ;;		_d1command
  5280 ;; This function is called by:
  5281 ;;		_tache1
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text26
  5286   001E6C                     __ptext26:
  5287                           	callstack 0
  5288   001E6C                     _draw_hex8:
  5289                           	callstack 24
  5290                           
  5291                           ;incstack = 0
  5292                           ;draw_hex8@octet stored from wreg
  5293   001E6C  6E08               	movwf	draw_hex8@octet^0,c
  5294                           
  5295                           ;afficheur.c: 254: unsigned char c;;afficheur.c: 256: c=(octet>>4);
  5296   001E6E  3808               	swapf	draw_hex8@octet^0,w,c
  5297   001E70  0B0F               	andlw	15
  5298   001E72  6E09               	movwf	draw_hex8@c^0,c
  5299                           
  5300                           ;afficheur.c: 257: if (c>9)
  5301   001E74  0E09               	movlw	9
  5302   001E76  6409               	cpfsgt	draw_hex8@c^0,c
  5303   001E78  D003               	goto	i2l4447
  5304                           
  5305                           ;afficheur.c: 258: c=c+0x17;
  5306   001E7A  5009               	movf	draw_hex8@c^0,w,c
  5307   001E7C  0F17               	addlw	23
  5308   001E7E  D002               	goto	L5
  5309   001E80                     i2l4447:
  5310                           
  5311                           ;afficheur.c: 259: else;afficheur.c: 260: c=c+0x10;
  5312   001E80  5009               	movf	draw_hex8@c^0,w,c
  5313   001E82  0F10               	addlw	16
  5314   001E84                     L5:
  5315   001E84  6E09               	movwf	draw_hex8@c^0,c
  5316   001E86  D001               	goto	i2l4449
  5317   001E88                     i2l1333:
  5318                           
  5319                           ;afficheur.c: 262: __nop();
  5320   001E88  F000               	nop	
  5321   001E8A                     i2l4449:
  5322   001E8A  0EC0               	movlw	192
  5323   001E8C  6E05               	movwf	d1command@cmd^0,c
  5324   001E8E  5009               	movf	draw_hex8@c^0,w,c
  5325   001E90  EC55  F010         	call	_d1command
  5326   001E94  0900               	iorlw	0
  5327   001E96  B4D8               	btfsc	status,2,c
  5328   001E98  D7F7               	goto	i2l1333
  5329                           
  5330                           ;afficheur.c: 264: c=(octet&0x0F);
  5331   001E9A  5008               	movf	draw_hex8@octet^0,w,c
  5332   001E9C  0B0F               	andlw	15
  5333   001E9E  6E09               	movwf	draw_hex8@c^0,c
  5334                           
  5335                           ;afficheur.c: 265: if (c>9)
  5336   001EA0  0E09               	movlw	9
  5337   001EA2  6409               	cpfsgt	draw_hex8@c^0,c
  5338   001EA4  D003               	goto	i2l4455
  5339                           
  5340                           ;afficheur.c: 266: c=c+0x17;
  5341   001EA6  5009               	movf	draw_hex8@c^0,w,c
  5342   001EA8  0F17               	addlw	23
  5343   001EAA  D002               	goto	L6
  5344   001EAC                     i2l4455:
  5345                           
  5346                           ;afficheur.c: 267: else;afficheur.c: 268: c=c+0x10;
  5347   001EAC  5009               	movf	draw_hex8@c^0,w,c
  5348   001EAE  0F10               	addlw	16
  5349   001EB0                     L6:
  5350   001EB0  6E09               	movwf	draw_hex8@c^0,c
  5351   001EB2  D001               	goto	i2l4457
  5352   001EB4                     i2l1338:
  5353                           
  5354                           ;afficheur.c: 270: __nop();
  5355   001EB4  F000               	nop	
  5356   001EB6                     i2l4457:
  5357   001EB6  0EC0               	movlw	192
  5358   001EB8  6E05               	movwf	d1command@cmd^0,c
  5359   001EBA  5009               	movf	draw_hex8@c^0,w,c
  5360   001EBC  EC55  F010         	call	_d1command
  5361   001EC0  0900               	iorlw	0
  5362   001EC2  A4D8               	btfss	status,2,c
  5363   001EC4  0012               	return	
  5364   001EC6  D7F6               	goto	i2l1338
  5365   001EC8                     __end_of_draw_hex8:
  5366                           	callstack 0
  5367                           
  5368 ;; *************** function _draw_dec8 *****************
  5369 ;; Defined at:
  5370 ;;		line 274 in file "afficheur.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  octet           1    wreg     unsigned char 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  octet           1   10[COMRAM] unsigned char 
  5375 ;;  c               1   13[COMRAM] unsigned char 
  5376 ;;  dix             1   12[COMRAM] unsigned char 
  5377 ;;  cent            1   11[COMRAM] unsigned char 
  5378 ;;  unit            1    9[COMRAM] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5392 ;;Total ram usage:        6 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 3
  5395 ;; This function calls:
  5396 ;;		___awdiv
  5397 ;;		_d1command
  5398 ;; This function is called by:
  5399 ;;		_tache1
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text27
  5404   001C50                     __ptext27:
  5405                           	callstack 0
  5406   001C50                     _draw_dec8:
  5407                           	callstack 24
  5408                           
  5409                           ;incstack = 0
  5410                           ;draw_dec8@octet stored from wreg
  5411   001C50  6E0B               	movwf	draw_dec8@octet^0,c
  5412                           
  5413                           ;afficheur.c: 277: unsigned char cent = octet/100;
  5414   001C52  C00B  F001         	movff	draw_dec8@octet,___awdiv@dividend
  5415   001C56  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5416   001C58  0E00               	movlw	0
  5417   001C5A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5418   001C5C  0E64               	movlw	100
  5419   001C5E  6E03               	movwf	___awdiv@divisor^0,c
  5420   001C60  ECBC  F00E         	call	___awdiv	;wreg free
  5421   001C64  5001               	movf	?___awdiv^0,w,c
  5422   001C66  6E0C               	movwf	draw_dec8@cent^0,c
  5423                           
  5424                           ;afficheur.c: 278: unsigned char dix = (octet-(cent*100));
  5425   001C68  500C               	movf	draw_dec8@cent^0,w,c
  5426   001C6A  0D9C               	mullw	156
  5427   001C6C  50F3               	movf	243,w,c
  5428   001C6E  240B               	addwf	draw_dec8@octet^0,w,c
  5429   001C70  6E0D               	movwf	draw_dec8@dix^0,c
  5430                           
  5431                           ;afficheur.c: 279: dix = dix/10;
  5432   001C72  C00D  F001         	movff	draw_dec8@dix,___awdiv@dividend
  5433   001C76  6A02               	clrf	(___awdiv@dividend+1)^0,c
  5434   001C78  0E00               	movlw	0
  5435   001C7A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5436   001C7C  0E0A               	movlw	10
  5437   001C7E  6E03               	movwf	___awdiv@divisor^0,c
  5438   001C80  ECBC  F00E         	call	___awdiv	;wreg free
  5439   001C84  5001               	movf	?___awdiv^0,w,c
  5440   001C86  6E0D               	movwf	draw_dec8@dix^0,c
  5441                           
  5442                           ;afficheur.c: 280: unsigned char unit = octet-(cent*100)-(dix*10);
  5443   001C88  500C               	movf	draw_dec8@cent^0,w,c
  5444   001C8A  0D9C               	mullw	156
  5445   001C8C  CFF3 F009          	movff	prodl,??_draw_dec8
  5446   001C90  500D               	movf	draw_dec8@dix^0,w,c
  5447   001C92  0DF6               	mullw	246
  5448   001C94  50F3               	movf	243,w,c
  5449   001C96  2409               	addwf	??_draw_dec8^0,w,c
  5450   001C98  240B               	addwf	draw_dec8@octet^0,w,c
  5451   001C9A  6E0A               	movwf	draw_dec8@unit^0,c
  5452                           
  5453                           ;afficheur.c: 282: c=cent+0x10;
  5454   001C9C  500C               	movf	draw_dec8@cent^0,w,c
  5455   001C9E  0F10               	addlw	16
  5456   001CA0  6E0E               	movwf	draw_dec8@c^0,c
  5457                           
  5458                           ;afficheur.c: 283: while(d1command(c,0xC0)==0)
  5459   001CA2  D001               	goto	i2l4433
  5460   001CA4                     i2l1344:
  5461                           
  5462                           ;afficheur.c: 284: __nop();
  5463   001CA4  F000               	nop	
  5464   001CA6                     i2l4433:
  5465   001CA6  0EC0               	movlw	192
  5466   001CA8  6E05               	movwf	d1command@cmd^0,c
  5467   001CAA  500E               	movf	draw_dec8@c^0,w,c
  5468   001CAC  EC55  F010         	call	_d1command
  5469   001CB0  0900               	iorlw	0
  5470   001CB2  B4D8               	btfsc	status,2,c
  5471   001CB4  D7F7               	goto	i2l1344
  5472                           
  5473                           ;afficheur.c: 286: c=dix+0x10;
  5474   001CB6  500D               	movf	draw_dec8@dix^0,w,c
  5475   001CB8  0F10               	addlw	16
  5476   001CBA  6E0E               	movwf	draw_dec8@c^0,c
  5477                           
  5478                           ;afficheur.c: 287: while(d1command(c,0xC0)==0)
  5479   001CBC  D001               	goto	i2l4437
  5480   001CBE                     i2l1347:
  5481                           
  5482                           ;afficheur.c: 288: __nop();
  5483   001CBE  F000               	nop	
  5484   001CC0                     i2l4437:
  5485   001CC0  0EC0               	movlw	192
  5486   001CC2  6E05               	movwf	d1command@cmd^0,c
  5487   001CC4  500E               	movf	draw_dec8@c^0,w,c
  5488   001CC6  EC55  F010         	call	_d1command
  5489   001CCA  0900               	iorlw	0
  5490   001CCC  B4D8               	btfsc	status,2,c
  5491   001CCE  D7F7               	goto	i2l1347
  5492                           
  5493                           ;afficheur.c: 290: c=unit+0x10;
  5494   001CD0  500A               	movf	draw_dec8@unit^0,w,c
  5495   001CD2  0F10               	addlw	16
  5496   001CD4  6E0E               	movwf	draw_dec8@c^0,c
  5497                           
  5498                           ;afficheur.c: 291: while(d1command(c,0xC0)==0)
  5499   001CD6  D001               	goto	i2l4441
  5500   001CD8                     i2l1350:
  5501                           
  5502                           ;afficheur.c: 292: __nop();
  5503   001CD8  F000               	nop	
  5504   001CDA                     i2l4441:
  5505   001CDA  0EC0               	movlw	192
  5506   001CDC  6E05               	movwf	d1command@cmd^0,c
  5507   001CDE  500E               	movf	draw_dec8@c^0,w,c
  5508   001CE0  EC55  F010         	call	_d1command
  5509   001CE4  0900               	iorlw	0
  5510   001CE6  A4D8               	btfss	status,2,c
  5511   001CE8  0012               	return	
  5512   001CEA  D7F6               	goto	i2l1350
  5513   001CEC                     __end_of_draw_dec8:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function ___awdiv *****************
  5517 ;; Defined at:
  5518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  dividend        2    0[COMRAM] int 
  5521 ;;  divisor         2    2[COMRAM] int 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  quotient        2    6[COMRAM] int 
  5524 ;;  sign            1    5[COMRAM] unsigned char 
  5525 ;;  counter         1    4[COMRAM] unsigned char 
  5526 ;; Return value:  Size  Location     Type
  5527 ;;                  2    0[COMRAM] int 
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;Total ram usage:        8 bytes
  5540 ;; Hardware stack levels used: 1
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_draw_dec8
  5545 ;;		_plot1
  5546 ;;		_plot0
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text28
  5551   001D78                     __ptext28:
  5552                           	callstack 0
  5553   001D78                     ___awdiv:
  5554                           	callstack 26
  5555                           
  5556                           ;incstack = 0
  5557   001D78  0E00               	movlw	0
  5558   001D7A  6E06               	movwf	___awdiv@sign^0,c
  5559   001D7C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5560   001D7E  D006               	goto	i2l4213
  5561   001D80  6C03               	negf	___awdiv@divisor^0,c
  5562   001D82  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5563   001D84  B0D8               	btfsc	status,0,c
  5564   001D86  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5565   001D88  0E01               	movlw	1
  5566   001D8A  6E06               	movwf	___awdiv@sign^0,c
  5567   001D8C                     i2l4213:
  5568   001D8C  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  5569   001D8E  D006               	goto	i2l4219
  5570   001D90  6C01               	negf	___awdiv@dividend^0,c
  5571   001D92  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5572   001D94  B0D8               	btfsc	status,0,c
  5573   001D96  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5574   001D98  0E01               	movlw	1
  5575   001D9A  1A06               	xorwf	___awdiv@sign^0,f,c
  5576   001D9C                     i2l4219:
  5577   001D9C  0E00               	movlw	0
  5578   001D9E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5579   001DA0  0E00               	movlw	0
  5580   001DA2  6E07               	movwf	___awdiv@quotient^0,c
  5581   001DA4  5003               	movf	___awdiv@divisor^0,w,c
  5582   001DA6  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5583   001DA8  B4D8               	btfsc	status,2,c
  5584   001DAA  D01C               	goto	i2l4241
  5585   001DAC  0E01               	movlw	1
  5586   001DAE  6E05               	movwf	___awdiv@counter^0,c
  5587   001DB0  D004               	goto	i2l4227
  5588   001DB2                     i2l4225:
  5589   001DB2  90D8               	bcf	status,0,c
  5590   001DB4  3603               	rlcf	___awdiv@divisor^0,f,c
  5591   001DB6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5592   001DB8  2A05               	incf	___awdiv@counter^0,f,c
  5593   001DBA                     i2l4227:
  5594   001DBA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5595   001DBC  D7FA               	goto	i2l4225
  5596   001DBE                     i2u225_40:
  5597   001DBE  90D8               	bcf	status,0,c
  5598   001DC0  3607               	rlcf	___awdiv@quotient^0,f,c
  5599   001DC2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5600   001DC4  5003               	movf	___awdiv@divisor^0,w,c
  5601   001DC6  5C01               	subwf	___awdiv@dividend^0,w,c
  5602   001DC8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5603   001DCA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5604   001DCC  A0D8               	btfss	status,0,c
  5605   001DCE  D005               	goto	i2l4237
  5606   001DD0  5003               	movf	___awdiv@divisor^0,w,c
  5607   001DD2  5E01               	subwf	___awdiv@dividend^0,f,c
  5608   001DD4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5609   001DD6  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5610   001DD8  8007               	bsf	___awdiv@quotient^0,0,c
  5611   001DDA                     i2l4237:
  5612   001DDA  90D8               	bcf	status,0,c
  5613   001DDC  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5614   001DDE  3203               	rrcf	___awdiv@divisor^0,f,c
  5615   001DE0  2E05               	decfsz	___awdiv@counter^0,f,c
  5616   001DE2  D7ED               	goto	i2u225_40
  5617   001DE4                     i2l4241:
  5618   001DE4  5006               	movf	___awdiv@sign^0,w,c
  5619   001DE6  B4D8               	btfsc	status,2,c
  5620   001DE8  D004               	goto	i2l4245
  5621   001DEA  6C07               	negf	___awdiv@quotient^0,c
  5622   001DEC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5623   001DEE  B0D8               	btfsc	status,0,c
  5624   001DF0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5625   001DF2                     i2l4245:
  5626   001DF2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5627   001DF6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5628   001DFA  0012               	return		;funcret
  5629   001DFC                     __end_of___awdiv:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function _clear_text *****************
  5633 ;; Defined at:
  5634 ;;		line 307 in file "afficheur.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;		None
  5637 ;; Auto vars:     Size  Location     Type
  5638 ;;  add             2    8[COMRAM] unsigned int 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;Total ram usage:        2 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 3
  5655 ;; This function calls:
  5656 ;;		_d1command
  5657 ;;		_d2command
  5658 ;; This function is called by:
  5659 ;;		_tache1
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text29
  5664   0021F0                     __ptext29:
  5665                           	callstack 0
  5666   0021F0                     _clear_text:
  5667                           	callstack 24
  5668                           
  5669                           ;afficheur.c: 309: unsigned int add;;afficheur.c: 311: d2command(0,0,0x24);
  5670                           
  5671                           ;incstack = 0
  5672   0021F0  0E00               	movlw	0
  5673   0021F2  6E05               	movwf	d2command@d2^0,c
  5674   0021F4  0E24               	movlw	36
  5675   0021F6  6E06               	movwf	d2command@cmd^0,c
  5676   0021F8  0E00               	movlw	0
  5677   0021FA  ECE2  F00F         	call	_d2command
  5678                           
  5679                           ;afficheur.c: 312: for (add=0;add!=0x8000;add++)
  5680   0021FE  0E00               	movlw	0
  5681   002200  6E0A               	movwf	(clear_text@add+1)^0,c
  5682   002202  0E00               	movlw	0
  5683   002204  6E09               	movwf	clear_text@add^0,c
  5684   002206                     i2l4387:
  5685                           
  5686                           ;afficheur.c: 313: {;afficheur.c: 314: d1command(0x00,0xC0);
  5687   002206  0EC0               	movlw	192
  5688   002208  6E05               	movwf	d1command@cmd^0,c
  5689   00220A  0E00               	movlw	0
  5690   00220C  EC55  F010         	call	_d1command
  5691   002210  4A09               	infsnz	clear_text@add^0,f,c
  5692   002212  2A0A               	incf	(clear_text@add+1)^0,f,c
  5693   002214  0E80               	movlw	128
  5694   002216  180A               	xorwf	(clear_text@add+1)^0,w,c
  5695   002218  1009               	iorwf	clear_text@add^0,w,c
  5696   00221A  B4D8               	btfsc	status,2,c
  5697   00221C  0012               	return	
  5698   00221E  D7F3               	goto	i2l4387
  5699   002220                     __end_of_clear_text:
  5700                           	callstack 0
  5701                           
  5702 ;; *************** function _clear_line *****************
  5703 ;; Defined at:
  5704 ;;		line 318 in file "afficheur.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  line            1    wreg     unsigned char 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  line            1   14[COMRAM] unsigned char 
  5709 ;;  column          1   15[COMRAM] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  1    wreg      void 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;Total ram usage:        2 bytes
  5724 ;; Hardware stack levels used: 1
  5725 ;; Hardware stack levels required when called: 4
  5726 ;; This function calls:
  5727 ;;		_draw_char
  5728 ;;		_goto_lico
  5729 ;; This function is called by:
  5730 ;;		_tache1
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text30
  5735   0022E2                     __ptext30:
  5736                           	callstack 0
  5737   0022E2                     _clear_line:
  5738                           	callstack 23
  5739                           
  5740                           ;incstack = 0
  5741                           ;clear_line@line stored from wreg
  5742   0022E2  6E0F               	movwf	clear_line@line^0,c
  5743                           
  5744                           ;afficheur.c: 319: unsigned char column;;afficheur.c: 320: for (column = 0; column < 40;
      +                           column++) {
  5745   0022E4  0E00               	movlw	0
  5746   0022E6  6E10               	movwf	clear_line@column^0,c
  5747   0022E8                     i2l4469:
  5748                           
  5749                           ;afficheur.c: 321: goto_lico(line, column);
  5750   0022E8  C010  F009         	movff	clear_line@column,goto_lico@colonne
  5751   0022EC  500F               	movf	clear_line@line^0,w,c
  5752   0022EE  EC64  F00F         	call	_goto_lico
  5753                           
  5754                           ;afficheur.c: 322: draw_char(' ');
  5755   0022F2  0E20               	movlw	32
  5756   0022F4  ECDF  F010         	call	_draw_char
  5757   0022F8  2A10               	incf	clear_line@column^0,f,c
  5758   0022FA  0E27               	movlw	39
  5759   0022FC  6410               	cpfsgt	clear_line@column^0,c
  5760   0022FE  D7F4               	goto	i2l4469
  5761   002300  0012               	return	
  5762   002302                     __end_of_clear_line:
  5763                           	callstack 0
  5764                           
  5765 ;; *************** function _draw_char *****************
  5766 ;; Defined at:
  5767 ;;		line 228 in file "afficheur.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  dccar           1    wreg     unsigned char 
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;  dccar           1    7[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1    wreg      void 
  5774 ;; Registers used:
  5775 ;;		wreg, status,2, status,0, cstack
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;Total ram usage:        1 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 3
  5788 ;; This function calls:
  5789 ;;		_d1command
  5790 ;; This function is called by:
  5791 ;;		_tache1
  5792 ;;		_clear_line
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text31
  5797   0021BE                     __ptext31:
  5798                           	callstack 0
  5799   0021BE                     _draw_char:
  5800                           	callstack 24
  5801                           
  5802                           ;incstack = 0
  5803                           ;draw_char@dccar stored from wreg
  5804   0021BE  6E08               	movwf	draw_char@dccar^0,c
  5805                           
  5806                           ;afficheur.c: 230: if (dccar<32)
  5807   0021C0  0E20               	movlw	32
  5808   0021C2  6008               	cpfslt	draw_char@dccar^0,c
  5809   0021C4  D002               	goto	i2l4303
  5810                           
  5811                           ;afficheur.c: 231: {;afficheur.c: 232: dccar=0x3F;
  5812   0021C6  0E3F               	movlw	63
  5813   0021C8  6E08               	movwf	draw_char@dccar^0,c
  5814   0021CA                     i2l4303:
  5815                           
  5816                           ;afficheur.c: 233: };afficheur.c: 234: if (dccar>0x9F)
  5817   0021CA  0E9F               	movlw	159
  5818   0021CC  6408               	cpfsgt	draw_char@dccar^0,c
  5819   0021CE  D002               	goto	i2l4307
  5820                           
  5821                           ;afficheur.c: 235: {;afficheur.c: 236: dccar=0x3F;
  5822   0021D0  0E3F               	movlw	63
  5823   0021D2  6E08               	movwf	draw_char@dccar^0,c
  5824   0021D4                     i2l4307:
  5825                           
  5826                           ;afficheur.c: 237: };afficheur.c: 238: dccar=dccar-32;
  5827   0021D4  5008               	movf	draw_char@dccar^0,w,c
  5828   0021D6  0FE0               	addlw	224
  5829   0021D8  6E08               	movwf	draw_char@dccar^0,c
  5830                           
  5831                           ;afficheur.c: 239: while(d1command(dccar,0xC0)==0) __nop();
  5832   0021DA  D001               	goto	i2l4309
  5833   0021DC                     i2l1314:
  5834   0021DC  F000               	nop	
  5835   0021DE                     i2l4309:
  5836   0021DE  0EC0               	movlw	192
  5837   0021E0  6E05               	movwf	d1command@cmd^0,c
  5838   0021E2  5008               	movf	draw_char@dccar^0,w,c
  5839   0021E4  EC55  F010         	call	_d1command
  5840   0021E8  0900               	iorlw	0
  5841   0021EA  A4D8               	btfss	status,2,c
  5842   0021EC  0012               	return	
  5843   0021EE  D7F6               	goto	i2l1314
  5844   0021F0                     __end_of_draw_char:
  5845                           	callstack 0
  5846                           
  5847 ;; *************** function _clear_graphics *****************
  5848 ;; Defined at:
  5849 ;;		line 368 in file "afficheur.c"
  5850 ;; Parameters:    Size  Location     Type
  5851 ;;		None
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  add             2    8[COMRAM] unsigned int 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, status,2, status,0, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5867 ;;Total ram usage:        2 bytes
  5868 ;; Hardware stack levels used: 1
  5869 ;; Hardware stack levels required when called: 3
  5870 ;; This function calls:
  5871 ;;		_d1command
  5872 ;;		_d2command
  5873 ;; This function is called by:
  5874 ;;		_tache1
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           	psect	text32
  5879   002220                     __ptext32:
  5880                           	callstack 0
  5881   002220                     _clear_graphics:
  5882                           	callstack 24
  5883                           
  5884                           ;afficheur.c: 370: unsigned int add;;afficheur.c: 372: d2command(0,0x80,0x24);
  5885                           
  5886                           ;incstack = 0
  5887   002220  0E80               	movlw	128
  5888   002222  6E05               	movwf	d2command@d2^0,c
  5889   002224  0E24               	movlw	36
  5890   002226  6E06               	movwf	d2command@cmd^0,c
  5891   002228  0E00               	movlw	0
  5892   00222A  ECE2  F00F         	call	_d2command
  5893                           
  5894                           ;afficheur.c: 373: for (add=0x8000;add!=0xF800;add++)
  5895   00222E  0E80               	movlw	128
  5896   002230  6E0A               	movwf	(clear_graphics@add+1)^0,c
  5897   002232  0E00               	movlw	0
  5898   002234  6E09               	movwf	clear_graphics@add^0,c
  5899   002236                     i2l4401:
  5900                           
  5901                           ;afficheur.c: 374: {;afficheur.c: 375: d1command(0x00,0xC0);
  5902   002236  0EC0               	movlw	192
  5903   002238  6E05               	movwf	d1command@cmd^0,c
  5904   00223A  0E00               	movlw	0
  5905   00223C  EC55  F010         	call	_d1command
  5906   002240  4A09               	infsnz	clear_graphics@add^0,f,c
  5907   002242  2A0A               	incf	(clear_graphics@add+1)^0,f,c
  5908   002244  0EF8               	movlw	248
  5909   002246  180A               	xorwf	(clear_graphics@add+1)^0,w,c
  5910   002248  1009               	iorwf	clear_graphics@add^0,w,c
  5911   00224A  B4D8               	btfsc	status,2,c
  5912   00224C  0012               	return	
  5913   00224E  D7F3               	goto	i2l4401
  5914   002250                     __end_of_clear_graphics:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _charger *****************
  5918 ;; Defined at:
  5919 ;;		line 432 in file "afficheur.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:        0 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 4
  5940 ;; This function calls:
  5941 ;;		_draw_string
  5942 ;;		_goto_lico
  5943 ;; This function is called by:
  5944 ;;		_tache1
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text33
  5949   0023B2                     __ptext33:
  5950                           	callstack 0
  5951   0023B2                     _charger:
  5952                           	callstack 23
  5953                           
  5954                           ;afficheur.c: 434: goto_lico(14,0);
  5955                           
  5956                           ;incstack = 0
  5957   0023B2  0E00               	movlw	0
  5958   0023B4  6E09               	movwf	goto_lico@colonne^0,c
  5959   0023B6  0E0E               	movlw	14
  5960   0023B8  EC64  F00F         	call	_goto_lico
  5961                           
  5962                           ;afficheur.c: 435: draw_string("ATTENTION vous etes plein!!!");
  5963   0023BC  0E01               	movlw	low STR_24
  5964   0023BE  6E08               	movwf	draw_string@tableau^0,c
  5965   0023C0  0E10               	movlw	high STR_24
  5966   0023C2  6E09               	movwf	(draw_string@tableau+1)^0,c
  5967   0023C4  EC76  F00E         	call	_draw_string	;wreg free
  5968   0023C8  0012               	return		;funcret
  5969   0023CA                     __end_of_charger:
  5970                           	callstack 0
  5971                           
  5972 ;; *************** function _goto_lico *****************
  5973 ;; Defined at:
  5974 ;;		line 295 in file "afficheur.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  ligne           1    wreg     unsigned char 
  5977 ;;  colonne         1    8[COMRAM] unsigned char 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  ligne           1   11[COMRAM] unsigned char 
  5980 ;;  adr             2   12[COMRAM] unsigned int 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;Total ram usage:        6 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 3
  5997 ;; This function calls:
  5998 ;;		_d2command
  5999 ;; This function is called by:
  6000 ;;		_tache1
  6001 ;;		_clear_line
  6002 ;;		_charger
  6003 ;;		_vide
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text34
  6008   001EC8                     __ptext34:
  6009                           	callstack 0
  6010   001EC8                     _goto_lico:
  6011                           	callstack 23
  6012                           
  6013                           ;incstack = 0
  6014                           ;goto_lico@ligne stored from wreg
  6015   001EC8  6E0C               	movwf	goto_lico@ligne^0,c
  6016                           
  6017                           ;afficheur.c: 297: unsigned int adr;;afficheur.c: 299: adr=0x7B00;
  6018   001ECA  0E7B               	movlw	123
  6019   001ECC  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6020   001ECE  0E00               	movlw	0
  6021   001ED0  6E0D               	movwf	goto_lico@adr^0,c
  6022                           
  6023                           ;afficheur.c: 300: if (ligne>15) ligne=0;
  6024   001ED2  0E0F               	movlw	15
  6025   001ED4  640C               	cpfsgt	goto_lico@ligne^0,c
  6026   001ED6  D002               	goto	i2l4291
  6027   001ED8  0E00               	movlw	0
  6028   001EDA  6E0C               	movwf	goto_lico@ligne^0,c
  6029   001EDC                     i2l4291:
  6030                           
  6031                           ;afficheur.c: 301: if (colonne>39) colonne=0;
  6032   001EDC  0E27               	movlw	39
  6033   001EDE  6409               	cpfsgt	goto_lico@colonne^0,c
  6034   001EE0  D002               	goto	i2l4295
  6035   001EE2  0E00               	movlw	0
  6036   001EE4  6E09               	movwf	goto_lico@colonne^0,c
  6037   001EE6                     i2l4295:
  6038                           
  6039                           ;afficheur.c: 302: adr=adr+40*ligne+colonne;
  6040   001EE6  500C               	movf	goto_lico@ligne^0,w,c
  6041   001EE8  0D28               	mullw	40
  6042   001EEA  CFF3 F00A          	movff	prodl,??_goto_lico
  6043   001EEE  CFF4 F00B          	movff	prodh,??_goto_lico+1
  6044   001EF2  5009               	movf	goto_lico@colonne^0,w,c
  6045   001EF4  260A               	addwf	??_goto_lico^0,f,c
  6046   001EF6  0E00               	movlw	0
  6047   001EF8  220B               	addwfc	(??_goto_lico+1)^0,f,c
  6048   001EFA  500D               	movf	goto_lico@adr^0,w,c
  6049   001EFC  240A               	addwf	??_goto_lico^0,w,c
  6050   001EFE  6E0D               	movwf	goto_lico@adr^0,c
  6051   001F00  500E               	movf	(goto_lico@adr+1)^0,w,c
  6052   001F02  200B               	addwfc	(??_goto_lico+1)^0,w,c
  6053   001F04  6E0E               	movwf	(goto_lico@adr+1)^0,c
  6054                           
  6055                           ;afficheur.c: 303: while(d2command((unsigned char)(adr&0x00FF),(unsigned char)(adr>>8),0
      +                          x24)==0)
  6056   001F06  D001               	goto	i2l4297
  6057   001F08                     i2l1358:
  6058                           
  6059                           ;afficheur.c: 304: __nop();
  6060   001F08  F000               	nop	
  6061   001F0A                     i2l4297:
  6062   001F0A  500E               	movf	(goto_lico@adr+1)^0,w,c
  6063   001F0C  6E05               	movwf	d2command@d2^0,c
  6064   001F0E  0E24               	movlw	36
  6065   001F10  6E06               	movwf	d2command@cmd^0,c
  6066   001F12  500D               	movf	goto_lico@adr^0,w,c
  6067   001F14  ECE2  F00F         	call	_d2command
  6068   001F18  0900               	iorlw	0
  6069   001F1A  A4D8               	btfss	status,2,c
  6070   001F1C  0012               	return	
  6071   001F1E  D7F4               	goto	i2l1358
  6072   001F20                     __end_of_goto_lico:
  6073                           	callstack 0
  6074                           
  6075 ;; *************** function _d2command *****************
  6076 ;; Defined at:
  6077 ;;		line 128 in file "afficheur.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  d1              1    wreg     unsigned char 
  6080 ;;  d2              1    4[COMRAM] unsigned char 
  6081 ;;  cmd             1    5[COMRAM] unsigned char 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  d1              1    6[COMRAM] unsigned char 
  6084 ;;  res             1    7[COMRAM] unsigned char 
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      unsigned char 
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;Total ram usage:        4 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 2
  6101 ;; This function calls:
  6102 ;;		_delai_us_char
  6103 ;;		_wait_status_ok
  6104 ;;		_write_c_aff
  6105 ;;		_write_d_aff
  6106 ;; This function is called by:
  6107 ;;		_initialisation_afficheur
  6108 ;;		_goto_lico
  6109 ;;		_clear_text
  6110 ;;		_clear_graphics
  6111 ;;		_plot1
  6112 ;;		_clear_cgram
  6113 ;;		_plot0
  6114 ;; This function uses a non-reentrant model
  6115 ;;
  6116                           
  6117                           	psect	text35
  6118   001FC4                     __ptext35:
  6119                           	callstack 0
  6120   001FC4                     _d2command:
  6121                           	callstack 23
  6122                           
  6123                           ;incstack = 0
  6124                           ;d2command@d1 stored from wreg
  6125   001FC4  6E07               	movwf	d2command@d1^0,c
  6126                           
  6127                           ;afficheur.c: 130: unsigned char res;;afficheur.c: 132: res=0;
  6128   001FC6  0E00               	movlw	0
  6129   001FC8  6E08               	movwf	d2command@res^0,c
  6130                           
  6131                           ;afficheur.c: 134: if (wait_status_ok()==1)
  6132   001FCA  ECB9  F00F         	call	_wait_status_ok	;wreg free
  6133   001FCE  06E8               	decf	wreg,f,c
  6134   001FD0  A4D8               	btfss	status,2,c
  6135   001FD2  D01E               	goto	i2l4201
  6136                           
  6137                           ;afficheur.c: 135: {;afficheur.c: 136: delai_us_char(12);
  6138   001FD4  0E0C               	movlw	12
  6139   001FD6  EC60  F011         	call	_delai_us_char
  6140                           
  6141                           ;afficheur.c: 137: write_d_aff(d1);
  6142   001FDA  5007               	movf	d2command@d1^0,w,c
  6143   001FDC  EC9B  F011         	call	_write_d_aff
  6144                           
  6145                           ;afficheur.c: 138: if (wait_status_ok()==1)
  6146   001FE0  ECB9  F00F         	call	_wait_status_ok	;wreg free
  6147   001FE4  06E8               	decf	wreg,f,c
  6148   001FE6  A4D8               	btfss	status,2,c
  6149   001FE8  D013               	goto	i2l4201
  6150                           
  6151                           ;afficheur.c: 139: {;afficheur.c: 140: delai_us_char(12);
  6152   001FEA  0E0C               	movlw	12
  6153   001FEC  EC60  F011         	call	_delai_us_char
  6154                           
  6155                           ;afficheur.c: 141: write_d_aff(d2);
  6156   001FF0  5005               	movf	d2command@d2^0,w,c
  6157   001FF2  EC9B  F011         	call	_write_d_aff
  6158                           
  6159                           ;afficheur.c: 142: if (wait_status_ok()==1)
  6160   001FF6  ECB9  F00F         	call	_wait_status_ok	;wreg free
  6161   001FFA  06E8               	decf	wreg,f,c
  6162   001FFC  A4D8               	btfss	status,2,c
  6163   001FFE  D008               	goto	i2l4201
  6164                           
  6165                           ;afficheur.c: 143: {;afficheur.c: 144: delai_us_char(12);
  6166   002000  0E0C               	movlw	12
  6167   002002  EC60  F011         	call	_delai_us_char
  6168                           
  6169                           ;afficheur.c: 145: write_c_aff(cmd);
  6170   002006  5006               	movf	d2command@cmd^0,w,c
  6171   002008  ECA8  F011         	call	_write_c_aff
  6172                           
  6173                           ;afficheur.c: 147: res=1;
  6174   00200C  0E01               	movlw	1
  6175   00200E  6E08               	movwf	d2command@res^0,c
  6176   002010                     i2l4201:
  6177                           
  6178                           ;afficheur.c: 148: };afficheur.c: 149: };afficheur.c: 150: };afficheur.c: 151: return re
      +                          s;
  6179   002010  5008               	movf	d2command@res^0,w,c
  6180   002012  0012               	return		;funcret
  6181   002014                     __end_of_d2command:
  6182                           	callstack 0
  6183                           
  6184 ;; *************** function _draw_string *****************
  6185 ;; Defined at:
  6186 ;;		line 242 in file "afficheur.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;  tableau         2    7[COMRAM] PTR unsigned char 
  6189 ;;		 -> STR_25(14), STR_24(29), STR_23(4), STR_22(3), 
  6190 ;;		 -> STR_21(7), STR_20(5), STR_19(12), STR_18(12), 
  6191 ;;		 -> STR_17(6), STR_16(7), STR_15(9), STR_14(21), 
  6192 ;;		 -> STR_13(7), STR_12(10), STR_11(9), STR_10(6), 
  6193 ;;		 -> STR_9(13), STR_8(11), STR_7(7), STR_6(6), 
  6194 ;;		 -> STR_5(6), STR_4(3), STR_3(3), STR_2(3), 
  6195 ;;		 -> STR_1(8), RAM(3861), 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;		None
  6198 ;; Return value:  Size  Location     Type
  6199 ;;                  1    wreg      void 
  6200 ;; Registers used:
  6201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6202 ;; Tracked objects:
  6203 ;;		On entry : 0/0
  6204 ;;		On exit  : 0/0
  6205 ;;		Unchanged: 0/0
  6206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6210 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;Total ram usage:        2 bytes
  6212 ;; Hardware stack levels used: 1
  6213 ;; Hardware stack levels required when called: 3
  6214 ;; This function calls:
  6215 ;;		_d1command
  6216 ;; This function is called by:
  6217 ;;		_tache1
  6218 ;;		_charger
  6219 ;;		_vide
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text36
  6224   001CEC                     __ptext36:
  6225                           	callstack 0
  6226   001CEC                     _draw_string:
  6227                           	callstack 23
  6228                           
  6229                           ;afficheur.c: 244: while( (tableau[0]!=0) && (tableau[0]!='\0') )
  6230                           
  6231                           ;incstack = 0
  6232   001CEC  D01C               	goto	i2l4317
  6233   001CEE                     i2l1322:
  6234                           
  6235                           ;afficheur.c: 247: __nop();
  6236   001CEE  F000               	nop	
  6237   001CF0                     i2l4313:
  6238   001CF0  0EC0               	movlw	192
  6239   001CF2  6E05               	movwf	d1command@cmd^0,c
  6240   001CF4  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6241   001CF8  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6242   001CFC  0E00               	movlw	low (__smallconst shr (0+16))
  6243   001CFE  6EF8               	movwf	tblptru,c
  6244   001D00  0E0F               	movlw	(high __ramtop+-1)
  6245   001D02  64F7               	cpfsgt	tblptrh,c
  6246   001D04  D003               	bra	i2u240_47
  6247   001D06  0008               	tblrd		*
  6248   001D08  50F5               	movf	tablat,w,c
  6249   001D0A  D005               	bra	i2u240_40
  6250   001D0C                     i2u240_47:
  6251   001D0C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6252   001D10  CFF7 FFEA          	movff	tblptrh,fsr0h
  6253   001D14  50EF               	movf	indf0,w,c
  6254   001D16                     i2u240_40:
  6255   001D16  0FE0               	addlw	224
  6256   001D18  EC55  F010         	call	_d1command
  6257   001D1C  0900               	iorlw	0
  6258   001D1E  B4D8               	btfsc	status,2,c
  6259   001D20  D7E6               	goto	i2l1322
  6260                           
  6261                           ;afficheur.c: 248: tableau++;
  6262   001D22  4A08               	infsnz	draw_string@tableau^0,f,c
  6263   001D24  2A09               	incf	(draw_string@tableau+1)^0,f,c
  6264   001D26                     i2l4317:
  6265   001D26  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6266   001D2A  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6267   001D2E  0E00               	movlw	low (__smallconst shr (0+16))
  6268   001D30  6EF8               	movwf	tblptru,c
  6269   001D32  0E0F               	movlw	(high __ramtop+-1)
  6270   001D34  64F7               	cpfsgt	tblptrh,c
  6271   001D36  D003               	bra	i2u242_47
  6272   001D38  0008               	tblrd		*
  6273   001D3A  50F5               	movf	tablat,w,c
  6274   001D3C  D005               	bra	i2u242_40
  6275   001D3E                     i2u242_47:
  6276   001D3E  CFF6 FFE9          	movff	tblptrl,fsr0l
  6277   001D42  CFF7 FFEA          	movff	tblptrh,fsr0h
  6278   001D46  50EF               	movf	indf0,w,c
  6279   001D48                     i2u242_40:
  6280   001D48  0900               	iorlw	0
  6281   001D4A  B4D8               	btfsc	status,2,c
  6282   001D4C  0012               	return	
  6283   001D4E  C008  FFF6         	movff	draw_string@tableau,tblptrl
  6284   001D52  C009  FFF7         	movff	draw_string@tableau+1,tblptrh
  6285   001D56  0E00               	movlw	low (__smallconst shr (0+16))
  6286   001D58  6EF8               	movwf	tblptru,c
  6287   001D5A  0E0F               	movlw	(high __ramtop+-1)
  6288   001D5C  64F7               	cpfsgt	tblptrh,c
  6289   001D5E  D003               	bra	i2u244_47
  6290   001D60  0008               	tblrd		*
  6291   001D62  50F5               	movf	tablat,w,c
  6292   001D64  D005               	bra	i2u244_40
  6293   001D66                     i2u244_47:
  6294   001D66  CFF6 FFE9          	movff	tblptrl,fsr0l
  6295   001D6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6296   001D6E  50EF               	movf	indf0,w,c
  6297   001D70                     i2u244_40:
  6298   001D70  0900               	iorlw	0
  6299   001D72  B4D8               	btfsc	status,2,c
  6300   001D74  0012               	return	
  6301   001D76  D7BC               	goto	i2l4313
  6302   001D78                     __end_of_draw_string:
  6303                           	callstack 0
  6304                           
  6305 ;; *************** function _d1command *****************
  6306 ;; Defined at:
  6307 ;;		line 106 in file "afficheur.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  d1              1    wreg     unsigned char 
  6310 ;;  cmd             1    4[COMRAM] unsigned char 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  d1              1    5[COMRAM] unsigned char 
  6313 ;;  res             1    6[COMRAM] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1    wreg      unsigned char 
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6323 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6327 ;;Total ram usage:        3 bytes
  6328 ;; Hardware stack levels used: 1
  6329 ;; Hardware stack levels required when called: 2
  6330 ;; This function calls:
  6331 ;;		_delai_us_char
  6332 ;;		_wait_status_ok
  6333 ;;		_write_c_aff
  6334 ;;		_write_d_aff
  6335 ;; This function is called by:
  6336 ;;		_initialisation_afficheur
  6337 ;;		_draw_char
  6338 ;;		_draw_string
  6339 ;;		_draw_hex8
  6340 ;;		_draw_dec8
  6341 ;;		_clear_text
  6342 ;;		_clear_graphics
  6343 ;;		_clear_cgram
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text37
  6348   0020AA                     __ptext37:
  6349                           	callstack 0
  6350   0020AA                     _d1command:
  6351                           	callstack 23
  6352                           
  6353                           ;incstack = 0
  6354                           ;d1command@d1 stored from wreg
  6355   0020AA  6E06               	movwf	d1command@d1^0,c
  6356                           
  6357                           ;afficheur.c: 108: unsigned char res;;afficheur.c: 110: res=0;
  6358   0020AC  0E00               	movlw	0
  6359   0020AE  6E07               	movwf	d1command@res^0,c
  6360                           
  6361                           ;afficheur.c: 112: if (wait_status_ok()==1)
  6362   0020B0  ECB9  F00F         	call	_wait_status_ok	;wreg free
  6363   0020B4  06E8               	decf	wreg,f,c
  6364   0020B6  A4D8               	btfss	status,2,c
  6365   0020B8  D013               	goto	i2l4175
  6366                           
  6367                           ;afficheur.c: 113: {;afficheur.c: 114: delai_us_char(12);
  6368   0020BA  0E0C               	movlw	12
  6369   0020BC  EC60  F011         	call	_delai_us_char
  6370                           
  6371                           ;afficheur.c: 115: write_d_aff(d1);
  6372   0020C0  5006               	movf	d1command@d1^0,w,c
  6373   0020C2  EC9B  F011         	call	_write_d_aff
  6374                           
  6375                           ;afficheur.c: 116: if (wait_status_ok()==1)
  6376   0020C6  ECB9  F00F         	call	_wait_status_ok	;wreg free
  6377   0020CA  06E8               	decf	wreg,f,c
  6378   0020CC  A4D8               	btfss	status,2,c
  6379   0020CE  D008               	goto	i2l4175
  6380                           
  6381                           ;afficheur.c: 117: {;afficheur.c: 118: delai_us_char(12);
  6382   0020D0  0E0C               	movlw	12
  6383   0020D2  EC60  F011         	call	_delai_us_char
  6384                           
  6385                           ;afficheur.c: 119: write_c_aff(cmd);
  6386   0020D6  5005               	movf	d1command@cmd^0,w,c
  6387   0020D8  ECA8  F011         	call	_write_c_aff
  6388                           
  6389                           ;afficheur.c: 121: res=1;
  6390   0020DC  0E01               	movlw	1
  6391   0020DE  6E07               	movwf	d1command@res^0,c
  6392   0020E0                     i2l4175:
  6393                           
  6394                           ;afficheur.c: 122: };afficheur.c: 124: };afficheur.c: 125: return res;
  6395   0020E0  5007               	movf	d1command@res^0,w,c
  6396   0020E2  0012               	return		;funcret
  6397   0020E4                     __end_of_d1command:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function _write_d_aff *****************
  6401 ;; Defined at:
  6402 ;;		line 4 in file "afficheur.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  data            1    wreg     unsigned char 
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  data            1    0[COMRAM] unsigned char 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;Total ram usage:        1 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; This function calls:
  6423 ;;		Nothing
  6424 ;; This function is called by:
  6425 ;;		_d1command
  6426 ;;		_d2command
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text38
  6431   002336                     __ptext38:
  6432                           	callstack 0
  6433   002336                     _write_d_aff:
  6434                           	callstack 24
  6435                           
  6436                           ;incstack = 0
  6437                           ;write_d_aff@data stored from wreg
  6438   002336  6E01               	movwf	write_d_aff@data^0,c
  6439                           
  6440                           ;afficheur.c: 6: LATH=data;
  6441   002338  C001  FF90         	movff	write_d_aff@data,3984	;volatile
  6442                           
  6443                           ;afficheur.c: 7: TRISH=0x00;
  6444   00233C  0E00               	movlw	0
  6445   00233E  6E99               	movwf	153,c	;volatile
  6446                           
  6447                           ;afficheur.c: 8: LATJbits.LATJ0=0;
  6448   002340  9091               	bcf	145,0,c	;volatile
  6449                           
  6450                           ;afficheur.c: 9: LATJbits.LATJ3=0;
  6451   002342  9691               	bcf	145,3,c	;volatile
  6452                           
  6453                           ;afficheur.c: 10: LATJbits.LATJ2=0;
  6454   002344  9491               	bcf	145,2,c	;volatile
  6455                           
  6456                           ;afficheur.c: 11: __nop();
  6457   002346  F000               	nop	
  6458                           
  6459                           ;afficheur.c: 12: __nop();
  6460   002348  F000               	nop	
  6461                           
  6462                           ;afficheur.c: 13: LATJbits.LATJ2=1;
  6463   00234A  8491               	bsf	145,2,c	;volatile
  6464                           
  6465                           ;afficheur.c: 14: LATJbits.LATJ3=1;
  6466   00234C  8691               	bsf	145,3,c	;volatile
  6467   00234E  0012               	return		;funcret
  6468   002350                     __end_of_write_d_aff:
  6469                           	callstack 0
  6470                           
  6471 ;; *************** function _write_c_aff *****************
  6472 ;; Defined at:
  6473 ;;		line 17 in file "afficheur.c"
  6474 ;; Parameters:    Size  Location     Type
  6475 ;;  command         1    wreg     unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  command         1    0[COMRAM] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  1    wreg      void 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6491 ;;Total ram usage:        1 bytes
  6492 ;; Hardware stack levels used: 1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_command
  6497 ;;		_d1command
  6498 ;;		_d2command
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text39
  6503   002350                     __ptext39:
  6504                           	callstack 0
  6505   002350                     _write_c_aff:
  6506                           	callstack 24
  6507                           
  6508                           ;incstack = 0
  6509                           ;write_c_aff@command stored from wreg
  6510   002350  6E01               	movwf	write_c_aff@command^0,c
  6511                           
  6512                           ;afficheur.c: 19: LATH=command;
  6513   002352  C001  FF90         	movff	write_c_aff@command,3984	;volatile
  6514                           
  6515                           ;afficheur.c: 20: TRISH=0x00;
  6516   002356  0E00               	movlw	0
  6517   002358  6E99               	movwf	153,c	;volatile
  6518                           
  6519                           ;afficheur.c: 21: LATJbits.LATJ0=1;
  6520   00235A  8091               	bsf	145,0,c	;volatile
  6521                           
  6522                           ;afficheur.c: 22: LATJbits.LATJ3=0;
  6523   00235C  9691               	bcf	145,3,c	;volatile
  6524                           
  6525                           ;afficheur.c: 23: LATJbits.LATJ2=0;
  6526   00235E  9491               	bcf	145,2,c	;volatile
  6527                           
  6528                           ;afficheur.c: 24: __nop();
  6529   002360  F000               	nop	
  6530                           
  6531                           ;afficheur.c: 25: __nop();
  6532   002362  F000               	nop	
  6533                           
  6534                           ;afficheur.c: 26: LATJbits.LATJ2=1;
  6535   002364  8491               	bsf	145,2,c	;volatile
  6536                           
  6537                           ;afficheur.c: 27: LATJbits.LATJ3=1;
  6538   002366  8691               	bsf	145,3,c	;volatile
  6539   002368  0012               	return		;funcret
  6540   00236A                     __end_of_write_c_aff:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _wait_status_ok *****************
  6544 ;; Defined at:
  6545 ;;		line 53 in file "afficheur.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  res             1    3[COMRAM] unsigned char 
  6550 ;;  status          1    2[COMRAM] unsigned char 
  6551 ;;  err             1    1[COMRAM] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      unsigned char 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;Total ram usage:        3 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 1
  6568 ;; This function calls:
  6569 ;;		_delai_us_char
  6570 ;; This function is called by:
  6571 ;;		_command
  6572 ;;		_d1command
  6573 ;;		_d2command
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text40
  6578   001F72                     __ptext40:
  6579                           	callstack 0
  6580   001F72                     _wait_status_ok:
  6581                           	callstack 23
  6582                           
  6583                           ;afficheur.c: 55: unsigned char err,res,status;;afficheur.c: 57: err=0;
  6584                           
  6585                           ;incstack = 0
  6586   001F72  0E00               	movlw	0
  6587   001F74  6E02               	movwf	wait_status_ok@err^0,c
  6588                           
  6589                           ;afficheur.c: 58: res=2;
  6590   001F76  0E02               	movlw	2
  6591   001F78  D01E               	goto	L7
  6592   001F7A                     i2l1272:
  6593                           
  6594                           ;afficheur.c: 60: {;afficheur.c: 61: TRISH=0xFF;
  6595   001F7A  6899               	setf	153,c	;volatile
  6596                           
  6597                           ;afficheur.c: 62: LATJbits.LATJ0=1;
  6598   001F7C  8091               	bsf	145,0,c	;volatile
  6599                           
  6600                           ;afficheur.c: 63: LATJbits.LATJ3=0;
  6601   001F7E  9691               	bcf	145,3,c	;volatile
  6602                           
  6603                           ;afficheur.c: 64: LATJbits.LATJ1=0;
  6604   001F80  9291               	bcf	145,1,c	;volatile
  6605                           
  6606                           ;afficheur.c: 65: __nop();
  6607   001F82  F000               	nop	
  6608                           
  6609                           ;afficheur.c: 66: status=PORTH;
  6610   001F84  CF87 F003          	movff	3975,wait_status_ok@status	;volatile
  6611                           
  6612                           ;afficheur.c: 67: LATJbits.LATJ1=1;
  6613   001F88  8291               	bsf	145,1,c	;volatile
  6614                           
  6615                           ;afficheur.c: 68: LATJbits.LATJ3=1;
  6616   001F8A  8691               	bsf	145,3,c	;volatile
  6617                           
  6618                           ;afficheur.c: 70: status=(status&0x03);
  6619   001F8C  5003               	movf	wait_status_ok@status^0,w,c
  6620   001F8E  0B03               	andlw	3
  6621   001F90  6E03               	movwf	wait_status_ok@status^0,c
  6622                           
  6623                           ;afficheur.c: 71: if (status!=0x03)
  6624   001F92  0E03               	movlw	3
  6625   001F94  1803               	xorwf	wait_status_ok@status^0,w,c
  6626   001F96  B4D8               	btfsc	status,2,c
  6627   001F98  D00D               	goto	i2l2575
  6628                           
  6629                           ;afficheur.c: 72: {;afficheur.c: 73: err++;
  6630   001F9A  2A02               	incf	wait_status_ok@err^0,f,c
  6631                           
  6632                           ;afficheur.c: 74: delai_us_char(12);
  6633   001F9C  0E0C               	movlw	12
  6634   001F9E  EC60  F011         	call	_delai_us_char
  6635                           
  6636                           ;afficheur.c: 75: if (err>=250)
  6637   001FA2  0EF9               	movlw	249
  6638   001FA4  6402               	cpfsgt	wait_status_ok@err^0,c
  6639   001FA6  D008               	goto	i2l2577
  6640                           
  6641                           ;afficheur.c: 76: {;afficheur.c: 77: (INTCONbits.GIE = 0);
  6642   001FA8  9EF2               	bcf	242,7,c	;volatile
  6643                           
  6644                           ;afficheur.c: 78: LATCbits.LATC2=0;LATCbits.LATC1=1;LATGbits.LATG0=1;
  6645   001FAA  948B               	bcf	139,2,c	;volatile
  6646   001FAC  828B               	bsf	139,1,c	;volatile
  6647   001FAE  808F               	bsf	143,0,c	;volatile
  6648                           
  6649                           ;afficheur.c: 79: res=0;
  6650   001FB0  0E00               	movlw	0
  6651   001FB2  D001               	goto	L7
  6652   001FB4                     i2l2575:
  6653                           
  6654                           ;afficheur.c: 82: else;afficheur.c: 83: {;afficheur.c: 84: res=1;
  6655   001FB4  0E01               	movlw	1
  6656   001FB6                     L7:
  6657   001FB6  6E04               	movwf	wait_status_ok@res^0,c
  6658   001FB8                     i2l2577:
  6659   001FB8  0E02               	movlw	2
  6660   001FBA  1804               	xorwf	wait_status_ok@res^0,w,c
  6661   001FBC  B4D8               	btfsc	status,2,c
  6662   001FBE  D7DD               	goto	i2l1272
  6663                           
  6664                           ;afficheur.c: 85: };afficheur.c: 86: };afficheur.c: 87: return res;
  6665   001FC0  5004               	movf	wait_status_ok@res^0,w,c
  6666   001FC2  0012               	return		;funcret
  6667   001FC4                     __end_of_wait_status_ok:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _delai_us_char *****************
  6671 ;; Defined at:
  6672 ;;		line 154 in file "afficheur.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  ucdelai         1    wreg     unsigned char 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  ucdelai         1    0[COMRAM] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;Total ram usage:        1 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_wait_status_ok
  6696 ;;		_command
  6697 ;;		_d1command
  6698 ;;		_d2command
  6699 ;;		_initialisation_afficheur
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text41
  6704   0022C0                     __ptext41:
  6705                           	callstack 0
  6706   0022C0                     _delai_us_char:
  6707                           	callstack 23
  6708                           
  6709                           ;incstack = 0
  6710                           ;delai_us_char@ucdelai stored from wreg
  6711   0022C0  6E01               	movwf	delai_us_char@ucdelai^0,c
  6712                           
  6713                           ;afficheur.c: 157: while (ucdelai>0)
  6714   0022C2  D00B               	goto	i2l2523
  6715   0022C4                     i2l1296:
  6716                           
  6717                           ;afficheur.c: 158: {;afficheur.c: 159: __nop();__nop();__nop();__nop();__nop();__nop();_
      +                          _nop();__nop();__nop();__nop();
  6718   0022C4  F000               	nop	
  6719   0022C6  F000               	nop	
  6720   0022C8  F000               	nop	
  6721   0022CA  F000               	nop	
  6722   0022CC  F000               	nop	
  6723   0022CE  F000               	nop	
  6724   0022D0  F000               	nop	
  6725   0022D2  F000               	nop	
  6726   0022D4  F000               	nop	
  6727   0022D6  F000               	nop	
  6728                           
  6729                           ;afficheur.c: 160: ucdelai--;
  6730   0022D8  0601               	decf	delai_us_char@ucdelai^0,f,c
  6731   0022DA                     i2l2523:
  6732   0022DA  5001               	movf	delai_us_char@ucdelai^0,w,c
  6733   0022DC  B4D8               	btfsc	status,2,c
  6734   0022DE  0012               	return	
  6735   0022E0  D7F1               	goto	i2l1296
  6736   0022E2                     __end_of_delai_us_char:
  6737                           	callstack 0
  6738                           
  6739                           	psect	text42
  6740   000000                     __ptext42:
  6741                           	callstack 0
  6742                           
  6743                           	psect	rparam
  6744   000000                     
  6745                           	psect	temp
  6746   000022                     btemp:
  6747                           	callstack 0
  6748   000022                     	ds	12
  6749   000000                     wtemp0	set	btemp
  6750   000000                     wtemp1	set	btemp+2
  6751   000000                     wtemp2	set	btemp+4
  6752   000000                     wtemp3	set	btemp+6
  6753   000000                     wtemp4	set	btemp+8
  6754   000000                     wtemp5	set	btemp+10
  6755   000000                     wtemp8	set	btemp+1
  6756   000000                     ttemp0	set	btemp
  6757   000000                     ttemp1	set	btemp+3
  6758   000000                     ttemp2	set	btemp+6
  6759   000000                     ttemp3	set	btemp+9
  6760   000000                     ttemp5	set	btemp+1
  6761   000000                     ttemp6	set	btemp+4
  6762   000000                     ttemp7	set	btemp+8
  6763   000000                     ltemp0	set	btemp
  6764   000000                     ltemp1	set	btemp+4
  6765   000000                     ltemp2	set	btemp+8
  6766   000000                     lltemp0	set	btemp
  6767                           
  6768                           	psect	idloc
  6769                           
  6770                           ;Config register IDLOC0 @ 0x200000
  6771                           ;	unspecified, using default values
  6772   200000                     	org	2097152
  6773   200000  FF                 	db	255
  6774                           
  6775                           ;Config register IDLOC1 @ 0x200001
  6776                           ;	unspecified, using default values
  6777   200001                     	org	2097153
  6778   200001  FF                 	db	255
  6779                           
  6780                           ;Config register IDLOC2 @ 0x200002
  6781                           ;	unspecified, using default values
  6782   200002                     	org	2097154
  6783   200002  FF                 	db	255
  6784                           
  6785                           ;Config register IDLOC3 @ 0x200003
  6786                           ;	unspecified, using default values
  6787   200003                     	org	2097155
  6788   200003  FF                 	db	255
  6789                           
  6790                           ;Config register IDLOC4 @ 0x200004
  6791                           ;	unspecified, using default values
  6792   200004                     	org	2097156
  6793   200004  FF                 	db	255
  6794                           
  6795                           ;Config register IDLOC5 @ 0x200005
  6796                           ;	unspecified, using default values
  6797   200005                     	org	2097157
  6798   200005  FF                 	db	255
  6799                           
  6800                           ;Config register IDLOC6 @ 0x200006
  6801                           ;	unspecified, using default values
  6802   200006                     	org	2097158
  6803   200006  FF                 	db	255
  6804                           
  6805                           ;Config register IDLOC7 @ 0x200007
  6806                           ;	unspecified, using default values
  6807   200007                     	org	2097159
  6808   200007  FF                 	db	255
  6809                           
  6810                           	psect	config
  6811                           
  6812                           ;Config register CONFIG1L @ 0x300000
  6813                           ;	VREG Sleep Enable bit
  6814                           ;	RETEN = ON, Enabled
  6815                           ;	LF-INTOSC Low-power Enable bit
  6816                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
  6817                           ;	SOSC Power Selection and mode Configuration bits
  6818                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
  6819                           ;	Extended Instruction Set
  6820                           ;	XINST = OFF, Disabled
  6821   300000                     	org	3145728
  6822   300000  15                 	db	21
  6823                           
  6824                           ;Config register CONFIG1H @ 0x300001
  6825                           ;	Oscillator
  6826                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
  6827                           ;	PLL x4 Enable bit
  6828                           ;	PLLCFG = ON, Enabled
  6829                           ;	Fail-Safe Clock Monitor
  6830                           ;	FCMEN = OFF, Disabled
  6831                           ;	Internal External Oscillator Switch Over Mode
  6832                           ;	IESO = OFF, Disabled
  6833   300001                     	org	3145729
  6834   300001  13                 	db	19
  6835                           
  6836                           ;Config register CONFIG2L @ 0x300002
  6837                           ;	Power Up Timer
  6838                           ;	PWRTEN = OFF, Disabled
  6839                           ;	Brown Out Detect
  6840                           ;	BOREN = OFF, Disabled in hardware, SBOREN disabled
  6841                           ;	Brown-out Reset Voltage bits
  6842                           ;	BORV = 0, 3.0V
  6843                           ;	BORMV Power level
  6844                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
  6845   300002                     	org	3145730
  6846   300002  61                 	db	97
  6847                           
  6848                           ;Config register CONFIG2H @ 0x300003
  6849                           ;	Watchdog Timer
  6850                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
  6851                           ;	Watchdog Postscaler
  6852                           ;	WDTPS = 1, 1:1
  6853   300003                     	org	3145731
  6854   300003  00                 	db	0
  6855                           
  6856                           ;Config register CONFIG3L @ 0x300004
  6857                           ;	RTCC Clock Select
  6858                           ;	RTCOSC = INTOSCREF, RTCC uses INTRC
  6859                           ;	External Address Shift bit
  6860                           ;	EASHFT = OFF, Address Shifting disabled
  6861                           ;	Address Bus Width Select bits
  6862                           ;	ABW = MM, 8-bit address bus
  6863                           ;	Data Bus Width
  6864                           ;	BW = 8, 8-bit external bus mode
  6865                           ;	External Bus Wait
  6866                           ;	WAIT = ON, Enabled
  6867   300004                     	org	3145732
  6868   300004  30                 	db	48
  6869                           
  6870                           ;Config register CONFIG3H @ 0x300005
  6871                           ;	CCP2 Mux
  6872                           ;	CCP2MX = PORTBE, RE7-Microcontroller Mode/RB3-All other modes
  6873                           ;	ECCP Mux
  6874                           ;	ECCPMX = PORTH, Enhanced CCP1/3 [P1B/P1C/P3B/P3C] muxed with RH7/RH6/RH5/RH4
  6875                           ;	MSSP address masking
  6876                           ;	MSSPMSK = MSK5, 5 bit address masking mode
  6877                           ;	Master Clear Enable
  6878                           ;	MCLRE = ON, MCLR Enabled, RG5 Disabled
  6879   300005                     	org	3145733
  6880   300005  80                 	db	128
  6881                           
  6882                           ;Config register CONFIG4L @ 0x300006
  6883                           ;	Stack Overflow Reset
  6884                           ;	STVREN = ON, Enabled
  6885                           ;	Boot Block Size
  6886                           ;	BBSIZ = BB1K, 1K word Boot Block size
  6887                           ;	Background Debug
  6888                           ;	DEBUG = OFF, Disabled
  6889   300006                     	org	3145734
  6890   300006  81                 	db	129
  6891                           
  6892                           ; Padding undefined space
  6893   300007                     	org	3145735
  6894   300007  FF                 	db	255
  6895                           
  6896                           ;Config register CONFIG5L @ 0x300008
  6897                           ;	Code Protect 00800-03FFF
  6898                           ;	CP0 = OFF, Disabled
  6899                           ;	Code Protect 04000-07FFF
  6900                           ;	CP1 = OFF, Disabled
  6901                           ;	Code Protect 08000-0BFFF
  6902                           ;	CP2 = OFF, Disabled
  6903                           ;	Code Protect 0C000-0FFFF
  6904                           ;	CP3 = OFF, Disabled
  6905                           ;	Code Protect 10000-13FFF
  6906                           ;	CP4 = OFF, Disabled
  6907                           ;	Code Protect 14000-17FFF
  6908                           ;	CP5 = OFF, Disabled
  6909                           ;	Code Protect 18000-1BFFF
  6910                           ;	CP6 = OFF, Disabled
  6911                           ;	Code Protect 1C000-1FFFF
  6912                           ;	CP7 = OFF, Disabled
  6913   300008                     	org	3145736
  6914   300008  FF                 	db	255
  6915                           
  6916                           ;Config register CONFIG5H @ 0x300009
  6917                           ;	Code Protect Boot
  6918                           ;	CPB = OFF, Disabled
  6919                           ;	Data EE Read Protect
  6920                           ;	CPD = OFF, Disabled
  6921   300009                     	org	3145737
  6922   300009  C0                 	db	192
  6923                           
  6924                           ;Config register CONFIG6L @ 0x30000A
  6925                           ;	Table Write Protect 00800-03FFF
  6926                           ;	WRT0 = OFF, Disabled
  6927                           ;	Table Write Protect 04000-07FFF
  6928                           ;	WRT1 = OFF, Disabled
  6929                           ;	Table Write Protect 08000-0BFFF
  6930                           ;	WRT2 = OFF, Disabled
  6931                           ;	Table Write Protect 0C000-0FFFF
  6932                           ;	WRT3 = OFF, Disabled
  6933                           ;	Table Write Protect 10000-13FFF
  6934                           ;	WRT4 = OFF, Disabled
  6935                           ;	Table Write Protect 14000-17FFF
  6936                           ;	WRT5 = OFF, Disabled
  6937                           ;	Table Write Protect 18000-1BFFF
  6938                           ;	WRT6 = OFF, Disabled
  6939                           ;	Table Write Protect 1C000-1FFFF
  6940                           ;	WRT7 = OFF, Disabled
  6941   30000A                     	org	3145738
  6942   30000A  FF                 	db	255
  6943                           
  6944                           ;Config register CONFIG6H @ 0x30000B
  6945                           ;	Config. Write Protect
  6946                           ;	WRTC = OFF, Disabled
  6947                           ;	Table Write Protect Boot
  6948                           ;	WRTB = OFF, Disabled
  6949                           ;	Data EE Write Protect
  6950                           ;	WRTD = OFF, Disabled
  6951   30000B                     	org	3145739
  6952   30000B  E0                 	db	224
  6953                           
  6954                           ;Config register CONFIG7L @ 0x30000C
  6955                           ;	Table Read Protect 00800-03FFF
  6956                           ;	EBRT0 = OFF, Disabled
  6957                           ;	Table Read Protect 04000-07FFF
  6958                           ;	EBRT1 = OFF, Disabled
  6959                           ;	Table Read Protect 08000-0BFFF
  6960                           ;	EBRT2 = OFF, Disabled
  6961                           ;	Table Read Protect 0C000-0FFFF
  6962                           ;	EBRT3 = OFF, Disabled
  6963                           ;	Table Read Protect 10000-13FFF
  6964                           ;	EBRT4 = OFF, Disabled
  6965                           ;	Table Read Protect 14000-17FFF
  6966                           ;	EBRT5 = OFF, Disabled
  6967                           ;	Table Read Protect 18000-1BFFF
  6968                           ;	EBRT6 = OFF, Disabled
  6969                           ;	Table Read Protect 1C000-1FFFF
  6970                           ;	EBRT7 = OFF, Disabled
  6971   30000C                     	org	3145740
  6972   30000C  FF                 	db	255
  6973                           
  6974                           ;Config register CONFIG7H @ 0x30000D
  6975                           ;	Table Read Protect Boot
  6976                           ;	EBRTB = OFF, Disabled
  6977   30000D                     	org	3145741
  6978   30000D  40                 	db	64
  6979                           tosu	equ	0xFFF
  6980                           tosh	equ	0xFFE
  6981                           tosl	equ	0xFFD
  6982                           stkptr	equ	0xFFC
  6983                           pclatu	equ	0xFFB
  6984                           pclath	equ	0xFFA
  6985                           pcl	equ	0xFF9
  6986                           tblptru	equ	0xFF8
  6987                           tblptrh	equ	0xFF7
  6988                           tblptrl	equ	0xFF6
  6989                           tablat	equ	0xFF5
  6990                           prodh	equ	0xFF4
  6991                           prodl	equ	0xFF3
  6992                           indf0	equ	0xFEF
  6993                           postinc0	equ	0xFEE
  6994                           postdec0	equ	0xFED
  6995                           preinc0	equ	0xFEC
  6996                           plusw0	equ	0xFEB
  6997                           fsr0h	equ	0xFEA
  6998                           fsr0l	equ	0xFE9
  6999                           wreg	equ	0xFE8
  7000                           indf1	equ	0xFE7
  7001                           postinc1	equ	0xFE6
  7002                           postdec1	equ	0xFE5
  7003                           preinc1	equ	0xFE4
  7004                           plusw1	equ	0xFE3
  7005                           fsr1h	equ	0xFE2
  7006                           fsr1l	equ	0xFE1
  7007                           bsr	equ	0xFE0
  7008                           indf2	equ	0xFDF
  7009                           postinc2	equ	0xFDE
  7010                           postdec2	equ	0xFDD
  7011                           preinc2	equ	0xFDC
  7012                           plusw2	equ	0xFDB
  7013                           fsr2h	equ	0xFDA
  7014                           fsr2l	equ	0xFD9
  7015                           status	equ	0xFD8

Data Sizes:
    Strings     215
    Constant    0
    Data        0
    BSS         5
    Persistent  7
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     33      45
    BANK0           124      0       0
    BANK1           190      0       0
    BANK2           190      0       0
    BANK3           190      0       0
    BANK4           190      0       0
    BANK5           190      0       0
    BANK6           190      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    lecture_normale@stid_id	PTR unsigned char  size(2) Largest target is 10
		 -> badge(BIGRAMhl[10]), 

    draw_string@tableau	PTR unsigned char  size(2) Largest target is 3861
		 -> STR_25(CODE[14]), STR_24(CODE[29]), STR_23(CODE[4]), STR_22(CODE[3]), 
		 -> STR_21(CODE[7]), STR_20(CODE[5]), STR_19(CODE[12]), STR_18(CODE[12]), 
		 -> STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[9]), STR_14(CODE[21]), 
		 -> STR_13(CODE[7]), STR_12(CODE[10]), STR_11(CODE[9]), STR_10(CODE[6]), 
		 -> STR_9(CODE[13]), STR_8(CODE[11]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[6]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> STR_1(CODE[8]), RAM(DATA[3861]), 

    puc	PTR unsigned char  size(2) Largest target is 2
		 -> NULL(NULL[0]), val_tos(COMRAM[2]), 

    fptr	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), tache6(), tache5(), tache4(), 
		 -> tache3(), tache2(), tache1(), 


Critical Paths under _main in COMRAM

    _main->_initialisation_du_systeme

Critical Paths under _fonction_d_interruption in COMRAM

    _tache6->_lecture_normale
    _lecture_normale->_stid_delai_us
    _tache2->___lwdiv
    _tache1->_draw_square
    _vide->_goto_lico
    _initialisation_afficheur->_d2command
    _draw_square->_plot1
    _plot1->___awdiv
    _plot1->_d2command
    _command->_wait_status_ok
    _draw_hex8->_d1command
    _draw_dec8->___awdiv
    _clear_text->_d2command
    _clear_line->_goto_lico
    _draw_char->_d1command
    _clear_graphics->_d2command
    _charger->_goto_lico
    _goto_lico->_d2command
    _d2command->_wait_status_ok
    _draw_string->_d1command
    _d1command->_wait_status_ok
    _wait_status_ok->_delai_us_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _fonction_d_interruption in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _fonction_d_interruption in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _fonction_d_interruption in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _fonction_d_interruption in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _fonction_d_interruption in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _fonction_d_interruption in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _fonction_d_interruption in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _fonction_d_interruption in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _fonction_d_interruption in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _fonction_d_interruption in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _fonction_d_interruption in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _fonction_d_interruption in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _fonction_d_interruption in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _fonction_d_interruption in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _fonction_d_interruption in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _fonction_d_interruption in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      38
                               _Init
           _initialisation_des_ports
          _initialisation_du_systeme
 ---------------------------------------------------------------------------------
 (1) _initialisation_du_systeme                            1     1      0      23
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initialisation_des_ports                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _fonction_d_interruption                             12    12      0   52121
                                             20 COMRAM    12    12      0
                             _tache1
                             _tache2
                             _tache3
                             _tache4
                             _tache5
                             _tache6
 ---------------------------------------------------------------------------------
 (3) _tache6                                               1     1      0     799
                                              8 COMRAM     1     1      0
                    _lecture_normale
 ---------------------------------------------------------------------------------
 (4) _lecture_normale                                      6     4      2     688
                                              2 COMRAM     6     4      2
                      _stid_delai_us
 ---------------------------------------------------------------------------------
 (5) _stid_delai_us                                        2     0      2     403
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _tache5                                               2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache4                                               2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _tache3                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _tache2                                              10    10      0     917
                                              7 COMRAM    10    10      0
                            ___lwdiv
                           _tp_delai
 ---------------------------------------------------------------------------------
 (4) _tp_delai                                             2     0      2     175
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _tache1                                               1     1      0   50315
                               _Init
                            _charger
                     _clear_graphics
                         _clear_line
                         _clear_text
                          _draw_char
                          _draw_dec8
                          _draw_hex8
                        _draw_square
                        _draw_string
                          _goto_lico
                          _init_rxtx
           _initialisation_afficheur
            _lecture_8bit_analogique
                              _plot1
                               _vide
                           _vitesse1
                       _vitesseAdmin
 ---------------------------------------------------------------------------------
 (4) _vitesseAdmin                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _vitesse1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _vide                                                 0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _lecture_8bit_analogique                              2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _initialisation_afficheur                             1     1      0    3450
                                              8 COMRAM     1     1      0
                    _check_status_ok
                            _command
                          _d1command
                          _d2command
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (5) _check_status_ok                                      1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _init_rxtx                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _draw_square                                          6     3      3    5184
                                             14 COMRAM     6     3      3
                              _plot1
 ---------------------------------------------------------------------------------
 (4) _plot1                                                6     5      1    4416
                                              8 COMRAM     6     5      1
                            ___awdiv
                            ___awmod
                            _command
                          _d2command
 ---------------------------------------------------------------------------------
 (5) _command                                              2     2      0     140
                                              4 COMRAM     1     1      0
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _draw_hex8                                            2     2      0    1265
                                              7 COMRAM     2     2      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _draw_dec8                                            6     6      0    2241
                                              8 COMRAM     6     6      0
                            ___awdiv
                          _d1command
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _clear_text                                           2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _clear_line                                           2     2      0    5099
                                             14 COMRAM     2     2      0
                          _draw_char
                          _goto_lico
 ---------------------------------------------------------------------------------
 (4) _draw_char                                            1     1      0    1130
                                              7 COMRAM     1     1      0
                          _d1command
 ---------------------------------------------------------------------------------
 (4) _clear_graphics                                       2     2      0    3286
                                              8 COMRAM     2     2      0
                          _d1command
                          _d2command
 ---------------------------------------------------------------------------------
 (4) _charger                                              0     0      0    6961
                        _draw_string
                          _goto_lico
 ---------------------------------------------------------------------------------
 (5) _goto_lico                                            6     5      1    3879
                                              8 COMRAM     6     5      1
                          _d2command
 ---------------------------------------------------------------------------------
 (6) _d2command                                            4     2      2    2201
                                              4 COMRAM     4     2      2
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (5) _draw_string                                          2     0      2    3082
                                              7 COMRAM     2     0      2
                          _d1command
 ---------------------------------------------------------------------------------
 (6) _d1command                                            3     2      1    1039
                                              4 COMRAM     3     2      1
                      _delai_us_char
                     _wait_status_ok
                        _write_c_aff
                        _write_d_aff
 ---------------------------------------------------------------------------------
 (7) _write_d_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _write_c_aff                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _wait_status_ok                                       3     3      0      90
                                              1 COMRAM     3     3      0
                      _delai_us_char
 ---------------------------------------------------------------------------------
 (8) _delai_us_char                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Init                                                 1     0      1      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
   _initialisation_des_ports
   _initialisation_du_systeme

 _fonction_d_interruption (ROOT)
   _tache1
     _Init
     _charger
       _draw_string
         _d1command
           _delai_us_char
           _wait_status_ok
             _delai_us_char
           _write_c_aff
           _write_d_aff
       _goto_lico
         _d2command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
           _write_d_aff
     _clear_graphics
       _d1command
       _d2command
     _clear_line
       _draw_char
         _d1command
       _goto_lico
     _clear_text
       _d1command
       _d2command
     _draw_char
     _draw_dec8
       ___awdiv
       _d1command
     _draw_hex8
       _d1command
     _draw_square
       _plot1
         ___awdiv
         ___awmod
         _command
           _delai_us_char
           _wait_status_ok
           _write_c_aff
         _d2command
     _draw_string
     _goto_lico
     _init_rxtx
     _initialisation_afficheur
       _check_status_ok
       _command
       _d1command
       _d2command
       _delai_us_char
     _lecture_8bit_analogique
     _plot1
     _vide
       _draw_string
       _goto_lico
     _vitesse1
     _vitesseAdmin
   _tache2
     ___lwdiv
     _tp_delai
   _tache3
   _tache4
   _tache5
   _tache6
     _lecture_normale
       _stid_delai_us

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMhhhhhhh      8D4      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BIGRAMhhhhhhl       BE      0       0      59        0.0%
BIGRAMhhhhhl        BE      0       0      60        0.0%
BIGRAMhhhhl         BE      0       0      61        0.0%
BIGRAMhhhl          BE      0       0      62        0.0%
BIGRAMhhl           BE      0       0      63        0.0%
BITBANK6            BE      0       0      16        0.0%
BANK6               BE      0       0      17        0.0%
BITBANK5            BE      0       0      14        0.0%
BANK5               BE      0       0      15        0.0%
BITBANK4            BE      0       0      12        0.0%
BANK4               BE      0       0      13        0.0%
BITBANK3            BE      0       0      10        0.0%
BANK3               BE      0       0      11        0.0%
BITBANK2            BE      0       0       8        0.0%
BANK2               BE      0       0       9        0.0%
BITBANK1            BE      0       0       6        0.0%
BANK1               BE      0       0       7        0.0%
BIGRAMhl            7C      0       0      64        0.0%
BITBANK0            7C      0       0       4        0.0%
BANK0               7C      0       0       5        0.0%
BIGRAMl             5F      0       0      65        0.0%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     21      2D       1       54.2%
BITBIGSFRlhll       2C      0       0      55        0.0%
BITBIGSFRlhlhlh     1B      0       0      53        0.0%
BITBANK15           16      0       0      34        0.0%
BANK15              16      0       0      35        0.0%
BITBIGSFRlhlhll     11      0       0      54        0.0%
BITBIGSFRlhhhhh     10      0       0      43        0.0%
BITBIGSFRlhhhhh      F      0       0      42        0.0%
BITBIGSFRll          D      0       0      56        0.0%
BITBIGSFRlhhhhh      C      0       0      45        0.0%
BITBIGSFRhlhllh      5      0       0      41        0.0%
BITBIGSFRlhlhhh      3      0       0      50        0.0%
BITBIGSFRhlhlhh      3      0       0      40        0.0%
BITBIGSFRhlhhhl      3      0       0      38        0.0%
BITBIGSFRlhhhhh      3      0       0      46        0.0%
BITBIGSFRlhlhhh      2      0       0      51        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRlhhhhl      2      0       0      47        0.0%
BITBIGSFRlhhhl       2      0       0      48        0.0%
BITBIGSFRlhhl        2      0       0      49        0.0%
BITBIGSFRlhlhhl      1      0       0      52        0.0%
BITBIGSFRlhhhhh      1      0       0      44        0.0%
BITBIGSFRhlhlhh      1      0       0      39        0.0%
BITBIGSFRhhlhh       1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       6       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2D      57        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Nov 23 14:27:59 2023

           ?_lecture_8bit_analogique 0001                       _BSR_TEMPORAIRE 000062  
          ?_initialisation_des_ports 0001                         ___awdiv@sign 0006  
                                 _tc 0035                         ?_draw_square 000F  
                                _BSR 000FE0                         ?_draw_string 0008  
                                _puc 0031                         ___awmod@sign 0006  
                                wreg 000FE8                           _TXSTA1bits 000FAC  
                      _stid_delai_us 236A                                 l1549 229A  
                               l2801 2284                                 l2803 228A  
                               l2799 227E                                 l4989 2318  
                               STR_1 108D                                 STR_2 10D5  
                               STR_3 10D2                                 STR_4 10CC  
                               STR_5 10B1                                 STR_6 102D  
                               STR_7 109C                                 STR_8 1066  
                               STR_9 1041                                 _T0IE 007F95  
                               _T0IF 007F92                                 _LATH 000F90  
                               _LATJ 000F91                                 _TMR0 000FD6  
                               _TEST 000081      __end_of_fonction_d_interruption 033C  
                               _TOSH 000FFE                                 _TOSL 000FFD  
                               _WREG 000FE8                                 _TOSU 000FFF  
                               _TP_x 000067                                 _TP_y 000068  
                               _Init 227C                     _FSR0H_TEMPORAIRE 000063  
                         _RXTX_libre 000080                                 _main 2302  
                               _fptr 002E                                 _vide 239A  
                               fsr0h 000FEA                                 fsr1h 000FE2  
                               indf0 000FEF                                 fsr2h 000FDA  
                               fsr0l 000FE9                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 0022                                 prodh 000FF4  
                               prodl 000FF3                                 start 033C  
         ?_initialisation_du_systeme 0001                         ___param_bank 000000  
                   ??_wait_status_ok 0002                         _vitesseAdmin 211C  
                   ?_lecture_normale 0003                                ?_main 0001  
                    __end_of___awdiv 1DFC                                STR_10 10B7  
                              STR_11 107B                                STR_20 10C3  
                              STR_12 1071                                STR_21 10A3  
                              STR_13 1095                                STR_22 10CF  
                              STR_14 101E                                STR_23 10C8  
                              STR_15 1084                                STR_16 10AA  
                              STR_24 1001                                STR_17 10BD  
                              STR_25 1033                                STR_18 104E  
                              STR_19 105A                      __end_of___awmod 1E6C  
                              ?_vide 0001                                _T0CON 000FD5  
                    ___awdiv@divisor 0003                         draw_dec8@dix 000D  
                              _FSR0H 000FEA                                _FSR1H 000FE2  
                              _FSR0L 000FE9                                _FSR2H 000FDA  
                              _FSR1L 000FE1                                _FSR2L 000FD9  
                    __end_of___lwdiv 1F72                                i2l144 21A8  
                              i2l147 21B6                                i2l436 11F0  
                              i2l455 139C                                i2l800 1992  
                              i2l459 1450                                i2l563 16D0  
                              i2l812 19AA                                i2l581 2384  
                              i2l830 19CE                                i2l806 199E  
                              i2l568 1712                                i2l824 19C2  
                              i2l842 19E6                                i2l818 19B6  
                              i2l860 1A0A                                i2l836 19DA  
                              i2l854 19FE                                i2l782 196E  
                              i2l848 19F2                                i2l866 1A16  
                              i2l794 1986                                i2l970 17B6  
                              i2l788 197A                                i2l964 17AA  
                    ___awdiv@counter 0005                                i2l982 17CE  
                              i2l976 17C2                                i2l994 17E6  
                              i2l988 17DA                                _PRODH 000FF4  
                              _PRODL 000FF3                                _PORTH 000F87  
                              _TRISH 000F99                                _TRISJ 000F9A  
                        _write_c_aff 2350                          _write_d_aff 2336  
                    __end_of_charger 23CA                      write_d_aff@data 0001  
                     ?_stid_delai_us 0001                      __end_of_command 2336  
                              _badge 000075                                _plot1 1B00  
                              _queue 000069                                tablat 000FF5  
                              ltemp0 0022                                ltemp1 0026  
                              ltemp2 002A                __end_of_delai_us_char 22E2  
                              plusw1 000FE3                      _check_status_ok 2250  
                              ttemp0 0022                                ttemp1 0025  
                              ttemp2 0028                                ttemp3 002B  
                              ttemp5 0023                                ttemp6 0026  
                              ttemp7 002A                                status 000FD8  
                              wtemp0 0022                                wtemp1 0024  
                              wtemp2 0026                                wtemp3 0028  
                              wtemp4 002A                                wtemp5 002C  
                              wtemp8 0023        initialisation_du_systeme@temp 0021  
                    __initialization 23CA                         __end_of_Init 229E  
         lecture_8bit_analogique@ret 0001                         __end_of_main 231C  
                       __end_of_vide 23B2                               ??_main 0022  
                             ??_vide 000F                        __activetblptr 000003  
                       draw_square@x 0013                         draw_square@y 0014  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               ?_plot1 0009  
                             _ANCON0 000F25                               _ANCON1 000F24  
                             _ANCON2 000F23                     ___awdiv@dividend 0001  
                      _n_octet_badge 00007F                        draw_dec8@cent 000C  
                             _MEMCON 000F26                               i2l1000 17F2  
                             i2l1012 180A                               i2l1030 182E  
                             i2l1006 17FE                               i2l1024 1822  
                             i2l1042 1846                               i2l1018 1816  
                             i2l1036 183A                               i2l1304 1A74  
                             i2l1048 1852                               i2l1322 1CEE  
                             i2l1314 21DC                               i2l1333 1E88  
                             i2l1350 1CD8                               i2l1272 1F7A  
                             i2l1344 1CA4                               i2l1338 1EB4  
                             i2l1347 1CBE                               i2l1444 2180  
                             i2l2253 1F68                               i2l1358 1F08  
                             i2l1296 22C4                               i2l4201 2010  
                             i2l1457 214A                               i2l2523 22DA  
                             i2l4213 1D8C                               i2l4303 21CA  
                             i2l4313 1CF0                               i2l4401 2236  
                             i2l4225 1DB2                               i2l4241 1DE4  
                             i2l5009 0064                               i2l1666 1BEA  
                             i2l4307 21D4                               i2l4227 1DBA  
                             i2l4219 1D9C                               i2l4331 1B54  
                             i2l1667 1BF2                               i2l1676 236C  
                             _PCLATH 000FFA                               i2l4317 1D26  
                             i2l4309 21DE                               i2l4245 1DF2  
                             i2l4237 1DDA                               i2l4261 1E1C  
                             i2l4333 1B5C                               i2l4325 1B3C  
                             i2l4413 2032                               i2l1669 1BFC  
                             i2l2575 1FB4                               i2l4175 20E0  
                             i2l4335 1B64                               i2l4327 1B44  
                             i2l4415 2040                               i2l3543 18B8  
                             i2l4503 1BDC                               i2l2577 1FB8  
                             i2l4441 1CDA                               i2l4433 1CA6  
                             i2l4281 1E62                               i2l4273 1E4A  
                             i2l4265 1E2A                               i2l4257 1E10  
                             i2l4329 1B4C                               i2l4409 201C  
                             i2l2817 21BA                               i2l3561 18E6  
                             i2l3537 18AA                               i2l5153 0198  
                             i2l4291 1EDC                               i2l4267 1E32  
                             i2l4339 1B6C                               i2l4419 2056  
                             i2l3555 18D8                               i2l3643 1A22  
                             i2l4437 1CC0                               i2l4277 1E54  
                             i2l4365 1A5E                               i2l3573 1906  
                             i2l4349 2378                               i2l5309 02DC  
                             i2l4295 1EE6                               i2l4455 1EAC  
                             i2l4447 1E80                               i2l4375 1A76  
                             i2l4551 1F3E                               i2l4297 1F0A  
                             i2l4457 1EB6                               i2l4449 1E8A  
                             i2l2929 2172                               i2l4561 1F5E  
                             i2l3593 193C                               _PCLATU 000FFB  
                             i2l4387 2206                               i2l2787 2274  
                             i2l4811 12C0                               i2l3579 1914  
                             i2l3683 185E                               i2l4539 1C4C  
                             i2l4469 22E8                               i2l2957 213C  
                             i2l4821 12DE                               i2l4813 12C6  
                             i2l4549 1F36                               i2l4485 2390  
                             i2l3693 1876                               i2l4495 1BC6  
                             i2l4817 12D6                               i2l4761 11C8  
                             i2l4843 132C                               i2l4771 1202  
                             i2l4861 138A                               i2l4853 1360  
                             i2l4837 1320                               i2l4781 1236  
                             i2l4773 120E                               i2l4941 1732  
                             i2l4925 16F0                               i2l4791 125E  
                             i2l4857 1376                               i2l4779 122A  
                             i2l4789 1258                               i2l4973 2096  
                             _TABLAT 000FF5                               i2l4895 1452  
                             i2l4967 2084                               i2l4975 209E  
                      draw_dec8@unit 000A                               _RCSTA1 000FAB  
                         _Tick_Count 000071                               _SPBRG1 000FAF  
                   _FSR0L_TEMPORAIRE 000064                               _STATUS 000FD8  
                             _STKPTR 000FFC                               _TXREG1 000FAD  
                     clear_line@line 000F                               _TXSTA1 000FAC  
                             _Valeur 000083                            ??___awdiv 0005  
                          ??___awmod 0005                            ??___lwdiv 0005  
                             _tache1 10DA                               _tache2 16AE  
                             _tache3 1888                               _tache4 1966  
                             _tache5 17A2                               _tache6 2060  
                          ??_charger 000F                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 000001  
                    ___awmod@counter 0005                            ??_command 0005  
                    ??_stid_delai_us 0003                               lltemp0 0022  
                             plot1@x 000E                               plot1@y 0009  
                   __end_of_tp_delai 239A                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_check_status_ok 227C  
                   __end_of_vitesse1 2188         lecture_normale@temps_attente 0005  
                         __accesstop 0060              __end_of__initialization 23D4  
                      ___rparam_used 000001                       __pcstackCOMRAM 0001  
                         ___inthi_sp 0AAC                    __end_of_d1command 20E4  
                  __end_of_d2command 2014                        __end_of_plot1 1BAE  
                            ??_plot1 000A                        draw_square@x1 0012  
                      draw_square@x2 0010                        draw_square@y1 000F  
                      draw_square@y2 0011                         _W_TEMPORAIRE 000060  
                         __pnvCOMRAM 002E                       _clear_graphics 2220  
        ??_initialisation_du_systeme 0021                           _clear_line 22E2  
                         _clear_text 21F0             ?_fonction_d_interruption 0001  
                            ?_tache1 0001                              ?_tache2 0001  
                            ?_tache3 0001                              ?_tache4 0001  
                            ?_tache5 0001                              ?_tache6 0001  
                       ?_write_c_aff 0001                       draw_dec8@octet 000B  
                       ?_write_d_aff 0001                              _TBLPTRH 000FF7  
                            _TBLPTRL 000FF6                              _TBLPTRU 000FF8  
                            i2u61_40 2124             _initialisation_afficheur 1A34  
                            i2u49_40 215A                              _SPBRGH1 000FD4  
                   ?_check_status_ok 0001                    wait_status_ok@err 0002  
                  wait_status_ok@res 0004                          _Val_sem_cna 0039  
             __end_of_clear_graphics 2250                    stid_delai_us@isdu 0001  
               lecture_normale@n_bit 0007                 lecture_normale@octet 0008  
           _initialisation_des_ports 20E4                            _DEMARRAGE 000065  
                            __Hparam 0000                              __Lparam 0000  
                          ?_tp_delai 0001                    __end_of_draw_dec8 1CEC  
                  __end_of_draw_char 21F0                    __end_of_draw_hex8 1EC8  
                            ___awdiv 1D78                              ___awmod 1DFC  
                            ___lwdiv 1F20                         __psmallconst 1000  
                          ?_vitesse1 0001                              __pcinit 23CA  
                            _charger 23B2                              __ramtop 1000  
                     draw_char@dccar 0008                              __ptext0 2302  
                            __ptext1 1476                              __ptext2 20E4  
                            __ptext3 227C                              __ptext5 2060  
                            __ptext6 1BAE                              __ptext7 236A  
                            __ptext8 17A2                              __ptext9 1966  
                            _command 231C                            _T0CONbits 000FD5  
                 draw_string@tableau 0008            _initialisation_du_systeme 1476  
                   ___awmod@dividend 0001                    __end_of_init_rxtx 22C0  
                  __end_of_goto_lico 1F20                              _val_tos 0033  
                     draw_hex8@octet 0008                              _vitesse 000073  
               end_of_initialization 23D4                              tache4@a 0001  
                            tache5@a 0001                              tache6@n 0009  
                    ?_clear_graphics 0001                          ?_clear_line 0001  
                        ?_clear_text 0001                           ??_tp_delai 0003  
                            postdec1 000FE5                              postinc1 000FE6  
                         ??_vitesse1 0001                         goto_lico@adr 000D  
                          _PORTBbits 000F81                            _PORTDbits 000F83  
                          _PORTEbits 000F84              _lecture_8bit_analogique 2188  
                          _TRISCbits 000F94                            _STKPTR_T1 000103  
                          _STKPTR_T2 000203                            _STKPTR_T3 000303  
                          _STKPTR_T4 000403                            _STKPTR_T5 000503  
                          _STKPTR_T6 000603                            _TRISDbits 000F95  
                          _TRISGbits 000F98                    clear_graphics@add 0009  
                         command@cmd 0005                           draw_dec8@c 000E  
                         draw_hex8@c 0009                   check_status_ok@res 0001  
             lecture_normale@n_octet 0006       lecture_8bit_analogique@channel 0002  
                          _d1command 20AA                            _d2command 1FC4  
                     __end_of_tache1 1476                       __end_of_tache2 17A2  
                     __end_of_tache3 1966                       __end_of_tache4 1A34  
                     __end_of_tache5 1888                       __end_of_tache6 20AA  
                      ??_draw_square 0012                        ??_draw_string 000A  
             lecture_normale@stid_id 0003                __end_of_stid_delai_us 2382  
                start_initialization 23CA                    ??_lecture_normale 0005  
                      _delai_us_char 22C0                        ?_vitesseAdmin 0001  
                           ??_tache1 0015                             ??_tache2 0008  
                           ??_tache3 0001                             ??_tache4 0001  
                           ??_tache5 0001                             ??_tache6 0009  
         ??_initialisation_afficheur 0009            ??_lecture_8bit_analogique 0001  
                      clear_text@add 0009                           ?_d1command 0005  
               delai_us_char@ucdelai 0001                           ?_d2command 0005  
                        __pbssCOMRAM 0035                  __end_of_draw_square 2060  
         ??_initialisation_des_ports 0021                  __end_of_draw_string 1D78  
                     ?_delai_us_char 0001                     ___lwdiv@dividend 0001  
                          __pintcode 0008                       ??_vitesseAdmin 0001  
                           ?___awdiv 0001                             ?___awmod 0001  
                           ?___lwdiv 0001                             ?_charger 0001  
                  _pointeur_de_tache 000070                            _draw_dec8 1C50  
                          _draw_char 21BE                            _draw_hex8 1E6C  
                           ?_command 0001                       _wait_status_ok 1F72  
                        __smallconst 1000                            _contexte1 000100  
                          _contexte2 000200                            _contexte3 000300  
                          _contexte4 000400                            _contexte5 000500  
                          _contexte6 000600                             _BAUDCON1 000F65  
                   goto_lico@colonne 0009                         _tache_active 00006F  
                        _PADCFG1bits 000F53                     ??_clear_graphics 0009  
                   ___lwdiv@quotient 0005                            _init_rxtx 229E  
                 write_c_aff@command 0001                            _goto_lico 1EC8  
    __end_of_lecture_8bit_analogique 21BE                             _LATCbits 000F8B  
                           _LATDbits 000F8C    __end_of_initialisation_du_systeme 16AE  
                           _LATGbits 000F8F                             _LATJbits 000F91  
                           i2u200_40 184A                             i2u231_40 1E36  
                           i2u151_40 19A2                             i2u143_40 1972  
                           i2u240_40 1D16                             i2u240_47 1D0C  
                           i2u225_40 1DBE                             i2u161_40 19DE  
                           i2u153_40 19AE                             i2u145_40 197E  
                           i2u242_40 1D48                             i2u242_47 1D3E  
                           i2u163_40 19EA                             i2u155_40 19BA  
                           i2u147_40 198A                             i2u244_40 1D70  
                           i2u180_40 17D2                             i2u244_47 1D66  
                           i2u165_40 19F6                             i2u157_40 19C6  
                           i2u149_40 1996                         ??_clear_line 000F  
                           i2u190_40 180E                             i2u182_40 17DE  
                           i2u174_40 17AE                             i2u167_40 1A02  
                           i2u159_40 19D2                             i2u192_40 181A  
                           i2u184_40 17EA                             i2u176_40 17BA  
                           i2u169_40 1A0E                             _PIR1bits 000F9E  
                           i2u194_40 1826                             i2u186_40 17F6  
                           i2u178_40 17C6                             i2u196_40 1832  
                           i2u188_40 1802                             i2u269_40 1F42  
                           i2u198_40 183E                         ??_clear_text 0009  
                           _POSTINC0 000FEE                             _POSTINC1 000FE6  
                  _STATUS_TEMPORAIRE 000061               __end_of_wait_status_ok 1FC4  
                        ??_d1command 0006                           ?_draw_dec8 0001  
                         ?_draw_char 0001                          ??_d2command 0007  
                         ?_draw_hex8 0001                           _ADCON0bits 000FC2  
                   clear_line@column 0010                          _draw_square 2014  
                        _draw_string 1CEC                         _Val_sem_rxtx 0038  
                           _TP_appui 000066                   __end_of_clear_line 2302  
                        _INTCON2bits 000FF1                      ??_delai_us_char 0001  
                 __end_of_clear_text 2220                           ?_init_rxtx 0001  
                         ?_goto_lico 0009                           _ANCON0bits 000F25  
                         _ANCON1bits 000F24                             __Hrparam 0000  
                           _Operator 000082                             __Lrparam 0000  
   __end_of_initialisation_afficheur 1B00                      ?_wait_status_ok 0001  
initialisation_afficheur@error_count 0009              _fonction_d_interruption 0008  
                    _lecture_normale 1BAE                             _batterie 000074  
                    ___lwdiv@divisor 0003     __end_of_initialisation_des_ports 211C  
                    ___lwdiv@counter 0007                             __ptext10 1888  
                           __ptext11 16AE                             __ptext20 2250  
                           __ptext12 2382                             __ptext21 229E  
                           __ptext13 1F20                             __ptext30 22E2  
                           __ptext22 2014                             __ptext14 10DA  
                           __ptext31 21BE                             __ptext23 1B00  
                           __ptext15 211C                             __ptext40 1F72  
                           __ptext32 2220                             __ptext24 231C  
                           __ptext16 2152                             __ptext41 22C0  
                           __ptext33 23B2                             __ptext25 1DFC  
                           __ptext17 239A                             __ptext42 0000  
                           __ptext34 1EC8                             __ptext26 1E6C  
                           __ptext18 2188                             __ptext35 1FC4  
                           __ptext27 1C50                             __ptext19 1A34  
                           __ptext36 1CEC                             __ptext28 1D78  
                           __ptext37 20AA                             __ptext29 21F0  
                           __ptext38 2336                             __ptext39 2350  
               __end_of_vitesseAdmin 2152                             isa$xinst 000000  
                           _tp_delai 2382                    ??_check_status_ok 0001  
                           _vitesse1 2152                          ??_draw_dec8 0009  
                        ??_draw_char 0008                          ??_draw_hex8 0008  
                      ??_write_c_aff 0001                        ??_write_d_aff 0001  
                         _INTCONbits 000FF2                             tache2@hx 000E  
                           tache2@hy 0010                             tache2@ix 000A  
                           tache2@iy 000C                             tache2@lx 000F  
                           tache2@ly 0011                          ??_init_rxtx 0001  
                        ??_goto_lico 000A                             intlevel2 0000  
                           plot1@add 000C                       goto_lico@ligne 000C  
            __end_of_lecture_normale 1C50                         d1command@cmd 0005  
                       d1command@res 0007            ??_fonction_d_interruption 0015  
                       tp_delai@itpd 0001                          d1command@d1 0006  
                __end_of_write_c_aff 236A                  __end_of_write_d_aff 2350  
                       d2command@cmd 0006            ?_initialisation_afficheur 0001  
                       d2command@res 0008                 wait_status_ok@status 0003  
                        d2command@d1 0007                          d2command@d2 0005  
